uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1B8DFD22C();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1B8DFD22C();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1B8DFD22C();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1B8DFD22C();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1B8DFD22C();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1B8DFD22C();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1B8DFD22C();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1B8DFD22C();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1B8DFD22C();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1B8DFD22C();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1B8DFD22C();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1B8DFD22C();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1B8DFD22C();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1B8DFD22C();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1B8DFD22C();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1B8DFD22C();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1B8DFD22C();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1B8DFD22C();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1BCCBD0E4]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t type metadata accessor for MTAppIntentsManager()
{
  return objc_opt_self();
}

id sub_1B8D81BB0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MTAppIntentsManager()), sel_init);
  qword_1ED36ED70 = (uint64_t)result;
  return result;
}

id getHKSPSleepStoreClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getHKSPSleepStoreClass_softClass;
  v7 = getHKSPSleepStoreClass_softClass;
  if (!getHKSPSleepStoreClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getHKSPSleepStoreClass_block_invoke;
    v3[3] = &unk_1E6F29190;
    v3[4] = &v4;
    __getHKSPSleepStoreClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1B8D82500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getHKHealthStoreClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getHKHealthStoreClass_softClass;
  v7 = getHKHealthStoreClass_softClass;
  if (!getHKHealthStoreClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getHKHealthStoreClass_block_invoke;
    v3[3] = &unk_1E6F29190;
    v3[4] = &v4;
    __getHKHealthStoreClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1B8D825B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getHKSPSleepStoreClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;

  if (!SleepLibraryCore_frameworkLibrary)
  {
    SleepLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!SleepLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("HKSPSleepStore");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)__getHKSPSleepStoreClass_block_invoke_cold_1();
    free(v3);
  }
  getHKSPSleepStoreClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getHKHealthStoreClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;

  if (!HealthKitLibraryCore_frameworkLibrary)
  {
    HealthKitLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!HealthKitLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("HKHealthStore");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)__getHKHealthStoreClass_block_invoke_cold_1();
    free(v3);
  }
  getHKHealthStoreClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void OUTLINED_FUNCTION_0_0(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

void OUTLINED_FUNCTION_4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_5(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

unint64_t sub_1B8D8505C()
{
  unint64_t result;

  result = qword_1EF1E0FC8;
  if (!qword_1EF1E0FC8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFF700, &type metadata for OpenAlarmIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E0FC8);
  }
  return result;
}

unint64_t sub_1B8D850A4()
{
  unint64_t result;

  result = qword_1EF1E0FD0;
  if (!qword_1EF1E0FD0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFF728, &type metadata for OpenAlarmIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E0FD0);
  }
  return result;
}

uint64_t sub_1B8D850E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8D850F8()
{
  sub_1B8D85138();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B8D85138()
{
  unint64_t result;

  result = qword_1EF1E0FD8;
  if (!qword_1EF1E0FD8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFF670, &type metadata for OpenAlarmIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E0FD8);
  }
  return result;
}

uint64_t sub_1B8D8517C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  sub_1B8DFDB50();
  MEMORY[0x1E0C80A78]();
  v0 = sub_1B8DFD640();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78]();
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78]();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1B8DFD664();
}

uint64_t sub_1B8D852D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char *v16;
  uint64_t v17;

  v17 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  ((void (*)(void))MEMORY[0x1E0C80A78])();
  v16 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1B8DFD640();
  v3 = *(_QWORD *)(v2 - 8);
  ((void (*)(void))MEMORY[0x1E0C80A78])();
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8DFD7A8();
  ((void (*)(void))MEMORY[0x1E0C80A78])();
  sub_1B8DFDB50();
  v6 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1B8DFD658();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v9 = *MEMORY[0x1E0CAF9B8];
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v10(v5, v9, v2);
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v10(v5, v9, v2);
  v11 = v16;
  sub_1B8DFD664();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1110);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1B8DFF650;
  sub_1B8DFD634();
  v12 = v17;
  sub_1B8DFD310();
  v13 = sub_1B8DFD304();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 0, 1, v13);
}

uint64_t sub_1B8D855D8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[16] = a1;
  v2[17] = a2;
  v3 = sub_1B8DFD688();
  v2[18] = v3;
  v2[19] = *(_QWORD *)(v3 - 8);
  v2[20] = swift_task_alloc();
  v2[21] = type metadata accessor for AlarmEntity();
  v2[22] = swift_task_alloc();
  return swift_task_switch();
}

id sub_1B8D8565C()
{
  _QWORD *v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;

  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CA5938]), sel_init);
  v0[23] = v10;
  result = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  v0[24] = result;
  if (result)
  {
    v2 = result;
    v3 = v0[22];
    v4 = v0[19];
    v5 = v0[20];
    v6 = v0[18];
    sub_1B8DFD178();
    sub_1B8DFD0E8();
    sub_1B8D861B4(v3);
    v7 = sub_1B8DFD670();
    v0[25] = v7;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
    v0[7] = v0 + 15;
    v0[2] = v0;
    v0[3] = sub_1B8D857B8;
    v8 = swift_continuation_init();
    v0[10] = MEMORY[0x1E0C809B0];
    v9 = v0 + 10;
    v9[1] = 0x40000000;
    v9[2] = sub_1B8D8590C;
    v9[3] = &block_descriptor;
    v9[4] = v8;
    objc_msgSend(v2, sel_openURL_configuration_completionHandler_, v7, v10, v9);
    return (id)swift_continuation_await();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B8D857B8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 208) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1B8D85818()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 200);
  v2 = *(void **)(v0 + 184);

  swift_bridgeObjectRelease();
  sub_1B8DFD0DC();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8D85894()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(void **)(v0 + 192);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8D8590C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1108);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    if (a2)
      v8 = sub_1B8DFDA6C();
    else
      v8 = 0;
    v9 = v8;
    sub_1B8D861F0((uint64_t)&v9, *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40));
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1B8D859F0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1B8D85A48;
  return sub_1B8D855D8(a1, v4);
}

uint64_t sub_1B8D85A48()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1B8D85A90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8D85D20();
  *a1 = result;
  return result;
}

uint64_t sub_1B8D85AB4()
{
  sub_1B8D85138();
  return sub_1B8DFD07C();
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1B8D85AEC(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1B8D85B0C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
  sub_1B8D85B70(a1, &qword_1EF1E10A8);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1B8D85B70(a1, &qword_1EF1E10B0);
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_1B8D85B70(a1, &qword_1EF1E10B8);
}

void sub_1B8D85B70(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

ValueMetadata *type metadata accessor for OpenAlarmIntent()
{
  return &type metadata for OpenAlarmIntent;
}

unint64_t sub_1B8D85BC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF1E10C0;
  if (!qword_1EF1E10C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1E10C8);
    result = MEMORY[0x1BCCBD0FC](MEMORY[0x1E0C91590], v1);
    atomic_store(result, (unint64_t *)&qword_1EF1E10C0);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1BCCBD0F0](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void sub_1B8D85C58(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_1B8D85C60@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_1B8D85C74(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_1B8D85CA4(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1B8D85CB8(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

BOOL sub_1B8D85CCC(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void sub_1B8D85CE0(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

BOOL sub_1B8D85CEC(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1B8D85D00(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

_QWORD *sub_1B8D85D14@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B8D85D20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t *, _QWORD, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v26[2];
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v0 = sub_1B8DFD418();
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  MEMORY[0x1E0C80A78](v0);
  v31 = (char *)v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10D0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v30 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v29 = (char *)v26 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10D8);
  MEMORY[0x1E0C80A78](v6);
  v28 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v8);
  v27 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B8DFD640();
  v11 = *(_QWORD *)(v10 - 8);
  v26[0] = v10;
  MEMORY[0x1E0C80A78](v10);
  v13 = (_QWORD *)((char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v14);
  v15 = sub_1B8DFDB50();
  v16 = MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1B8DFD658();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v19);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v20 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v11 + 104);
  v20(v13, *MEMORY[0x1E0CAF9B8], v10);
  sub_1B8DFD664();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v27, 1, 1, v17);
  v21 = type metadata accessor for AlarmEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v28, 1, 1, v21);
  sub_1B8DFDAF0();
  v26[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E8);
  *v13 = type metadata accessor for MTAppIntentsManager();
  v20(v13, *MEMORY[0x1E0CAF9C8], v26[0]);
  sub_1B8DFD79C();
  sub_1B8DFD664();
  v22 = v29;
  sub_1B8DFD0AC();
  v23 = sub_1B8DFD0A0();
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v24(v22, 0, 1, v23);
  v24(v30, 1, 1, v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v31, *MEMORY[0x1E0C91738], v33);
  sub_1B8D8616C();
  return sub_1B8DFD1C0();
}

unint64_t sub_1B8D8616C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF1E10F0;
  if (!qword_1EF1E10F0)
  {
    v1 = type metadata accessor for AlarmEntity();
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E0233C, v1);
    atomic_store(result, &qword_1EF1E10F0);
  }
  return result;
}

uint64_t sub_1B8D861B4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AlarmEntity();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B8D861F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8D86258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1B8DFD640();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (uint64_t *)((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v5);
  sub_1B8DFDAF0();
  *v4 = type metadata accessor for MTAppIntentsManager();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0CAF9C8], v1);
  sub_1B8DFD79C();
  return sub_1B8DFD664();
}

uint64_t sub_1B8D863B4()
{
  return 1;
}

uint64_t sub_1B8D863BC()
{
  sub_1B8DFE15C();
  sub_1B8DFE168();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8D863FC()
{
  return sub_1B8DFE168();
}

uint64_t sub_1B8D86420()
{
  sub_1B8DFE15C();
  sub_1B8DFE168();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8D86470()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v0);
  v2 = &v12[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = sub_1B8DFD640();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1B8DFD658();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0CAF9B8], v3);
  sub_1B8DFD664();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v2, 1, 1, v9);
  return sub_1B8DFD460();
}

uint64_t sub_1B8D86668(char a1)
{
  return *(_QWORD *)&aSkip_1[8 * a1];
}

uint64_t sub_1B8D86688(char *a1, char *a2)
{
  return sub_1B8DB3400(*a1, *a2);
}

unint64_t sub_1B8D86698()
{
  unint64_t result;

  result = qword_1EF1E1118;
  if (!qword_1EF1E1118)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFF7D4, &type metadata for EditSleepAlarmIntent.EditSleepAlarmOperation);
    atomic_store(result, (unint64_t *)&qword_1EF1E1118);
  }
  return result;
}

uint64_t sub_1B8D866DC()
{
  return sub_1B8DF8FA4();
}

uint64_t sub_1B8D866E4()
{
  return sub_1B8DB372C();
}

uint64_t sub_1B8D866EC()
{
  return sub_1B8DF131C();
}

uint64_t sub_1B8D866F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8D885CC();
  *a1 = result;
  return result;
}

uint64_t sub_1B8D86720@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B8D86668(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1B8D8674C()
{
  unint64_t result;

  result = qword_1EF1E1120;
  if (!qword_1EF1E1120)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFF8B4, &type metadata for EditSleepAlarmIntent.EditSleepAlarmOperation);
    atomic_store(result, (unint64_t *)&qword_1EF1E1120);
  }
  return result;
}

unint64_t sub_1B8D86794()
{
  unint64_t result;

  result = qword_1EF1E1128;
  if (!qword_1EF1E1128)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFF8EC, &type metadata for EditSleepAlarmIntent.EditSleepAlarmOperation);
    atomic_store(result, (unint64_t *)&qword_1EF1E1128);
  }
  return result;
}

unint64_t sub_1B8D867DC()
{
  unint64_t result;

  result = qword_1EF1E1130;
  if (!qword_1EF1E1130)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFF83C, &type metadata for EditSleepAlarmIntent.EditSleepAlarmOperation);
    atomic_store(result, (unint64_t *)&qword_1EF1E1130);
  }
  return result;
}

uint64_t sub_1B8D86820()
{
  return MEMORY[0x1E0DEA9E0];
}

unint64_t sub_1B8D86830()
{
  unint64_t result;

  result = qword_1EF1E1138;
  if (!qword_1EF1E1138)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFF91C, &type metadata for EditSleepAlarmIntent.EditSleepAlarmOperation);
    atomic_store(result, (unint64_t *)&qword_1EF1E1138);
  }
  return result;
}

unint64_t sub_1B8D86878()
{
  unint64_t result;

  result = qword_1EF1E1140;
  if (!qword_1EF1E1140)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFF944, &type metadata for EditSleepAlarmIntent.EditSleepAlarmOperation);
    atomic_store(result, (unint64_t *)&qword_1EF1E1140);
  }
  return result;
}

unint64_t sub_1B8D868C0()
{
  unint64_t result;

  result = qword_1EF1E1148;
  if (!qword_1EF1E1148)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFF96C, &type metadata for EditSleepAlarmIntent.EditSleepAlarmOperation);
    atomic_store(result, (unint64_t *)&qword_1EF1E1148);
  }
  return result;
}

unint64_t sub_1B8D86908()
{
  unint64_t result;

  result = qword_1EF1E1150;
  if (!qword_1EF1E1150)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFF9C4, &type metadata for EditSleepAlarmIntent.EditSleepAlarmOperation);
    atomic_store(result, (unint64_t *)&qword_1EF1E1150);
  }
  return result;
}

uint64_t sub_1B8D86954()
{
  sub_1B8D86994();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B8D86994()
{
  unint64_t result;

  result = qword_1EF1E1158;
  if (!qword_1EF1E1158)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFF874, &type metadata for EditSleepAlarmIntent.EditSleepAlarmOperation);
    atomic_store(result, (unint64_t *)&qword_1EF1E1158);
  }
  return result;
}

uint64_t sub_1B8D869D8()
{
  sub_1B8D86994();
  return sub_1B8DFD034();
}

unint64_t sub_1B8D86A14()
{
  unint64_t result;

  result = qword_1EF1E1160;
  if (!qword_1EF1E1160)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFFA04, &type metadata for EditSleepAlarmIntent.EditSleepAlarmOperation);
    atomic_store(result, (unint64_t *)&qword_1EF1E1160);
  }
  return result;
}

unint64_t sub_1B8D86A5C()
{
  unint64_t result;

  result = qword_1EF1E1168;
  if (!qword_1EF1E1168)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFFA2C, &type metadata for EditSleepAlarmIntent.EditSleepAlarmOperation);
    atomic_store(result, (unint64_t *)&qword_1EF1E1168);
  }
  return result;
}

unint64_t sub_1B8D86AA4()
{
  unint64_t result;

  result = qword_1EF1E1170;
  if (!qword_1EF1E1170)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFF7FC, &type metadata for EditSleepAlarmIntent.EditSleepAlarmOperation);
    atomic_store(result, (unint64_t *)&qword_1EF1E1170);
  }
  return result;
}

uint64_t sub_1B8D86AEC()
{
  sub_1B8D86908();
  return sub_1B8DFD43C();
}

uint64_t sub_1B8D86B24()
{
  return sub_1B8D87FFC(&qword_1EF1E1178, &qword_1EF1E1180, MEMORY[0x1E0DEAF50]);
}

void sub_1B8D86B50(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6F29358;
}

unint64_t sub_1B8D86B64()
{
  unint64_t result;

  result = qword_1EF1E1188;
  if (!qword_1EF1E1188)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFFAF4, &type metadata for EditSleepAlarmIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1188);
  }
  return result;
}

unint64_t sub_1B8D86BAC()
{
  unint64_t result;

  result = qword_1EF1E1190;
  if (!qword_1EF1E1190)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFFB1C, &type metadata for EditSleepAlarmIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1190);
  }
  return result;
}

uint64_t sub_1B8D86BF0()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1B8D86C14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8D86C24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD640();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1B8DFDB50();
  v10 = MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v18 = sub_1B8DFD658();
  v11 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v12 = *MEMORY[0x1E0CAF9B8];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v13(v7, v12, v4);
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v13(v7, v12, v4);
  sub_1B8DFD664();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v3, 0, 1, v18);
  v14 = v19;
  sub_1B8DFD310();
  v15 = sub_1B8DFD304();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
}

uint64_t sub_1B8D86ED4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1200);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1208);
  MEMORY[0x1E0C80A78](v1);
  sub_1B8D8803C();
  sub_1B8DFD3F4();
  sub_1B8DFD3E8();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1210);
  sub_1B8DFD3DC();
  swift_release();
  sub_1B8DFD3E8();
  sub_1B8DFD40C();
  return sub_1B8DFD3C4();
}

uint64_t sub_1B8D8704C()
{
  return sub_1B8DFD190();
}

uint64_t sub_1B8D8706C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1B8DFD640();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v5);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1B8DFD664();
}

uint64_t sub_1B8D871BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[42] = a2;
  v3[43] = a3;
  v3[41] = a1;
  v3[44] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10D8);
  v3[45] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B8D87220()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1B8DFD178();
  if (*(_BYTE *)(v0 + 419))
  {
    if (*(_BYTE *)(v0 + 419) == 1)
    {
      v1 = (void *)objc_opt_self();
      *(_QWORD *)(v0 + 56) = v0 + 416;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_1B8D874D8;
      *(_QWORD *)(v0 + 320) = swift_continuation_init();
      *(_QWORD *)(v0 + 288) = MEMORY[0x1E0C809B0];
      *(_QWORD *)(v0 + 296) = 0x40000000;
      *(_QWORD *)(v0 + 304) = sub_1B8D8776C;
      *(_QWORD *)(v0 + 312) = &block_descriptor_7;
      objc_msgSend(v1, sel_turnNextSleepAlarmEnabled_completion_, 1, v0 + 288);
    }
    else
    {
      v5 = (void *)objc_opt_self();
      *(_QWORD *)(v0 + 184) = v0 + 418;
      *(_QWORD *)(v0 + 144) = v0;
      *(_QWORD *)(v0 + 152) = sub_1B8D87538;
      v6 = swift_continuation_init();
      *(_QWORD *)(v0 + 208) = MEMORY[0x1E0C809B0];
      v7 = (_QWORD *)(v0 + 208);
      v7[1] = 0x40000000;
      v7[2] = sub_1B8D8776C;
      v7[3] = &block_descriptor_0;
      v7[4] = v6;
      objc_msgSend(v5, sel_toggleNextSleepAlarmWithCompletion_, v7);
    }
  }
  else
  {
    v2 = (void *)objc_opt_self();
    *(_QWORD *)(v0 + 120) = v0 + 417;
    *(_QWORD *)(v0 + 80) = v0;
    *(_QWORD *)(v0 + 88) = sub_1B8D873E4;
    v3 = swift_continuation_init();
    *(_QWORD *)(v0 + 248) = MEMORY[0x1E0C809B0];
    v4 = (_QWORD *)(v0 + 248);
    v4[1] = 0x40000000;
    v4[2] = sub_1B8D8776C;
    v4[3] = &block_descriptor_8;
    v4[4] = v3;
    objc_msgSend(v2, sel_turnNextSleepAlarmEnabled_completion_, 0, v4);
  }
  return swift_continuation_await();
}

uint64_t sub_1B8D873E4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 368) = *(_QWORD *)(*(_QWORD *)v0 + 112);
  return swift_task_switch();
}

uint64_t sub_1B8D87444()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 392) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 336);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 400) = v2;
  *v2 = v0;
  v2[1] = sub_1B8D87598;
  return sub_1B8DFE0F0();
}

uint64_t sub_1B8D874D8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 376) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1B8D87538()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 384) = *(_QWORD *)(*(_QWORD *)v0 + 176);
  return swift_task_switch();
}

uint64_t sub_1B8D87598()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 408) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8D87604()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 360);
  sub_1B8D88A28();
  sub_1B8DFD0D0();
  sub_1B8D88AD4(v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8D87668()
{
  uint64_t v0;

  swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8D876A8()
{
  uint64_t v0;

  swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8D876EC()
{
  uint64_t v0;

  swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8D87730()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8D8776C(uint64_t a1, char a2, void *a3)
{
  _QWORD *v4;
  id v5;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1108);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

void sub_1B8D877EC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  unint64_t v12;
  uint64_t v13;
  void (*v14)(unint64_t, char *, uint64_t);
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t aBlock;
  uint64_t v23;
  void (*v24)(uint64_t, void *);
  void *v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E11E8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a3, sel_nextSleepAlarm);
  if (v9)
  {
    v10 = v9;
    v11 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v11((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
    v12 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v21 = a1;
    v13 = swift_allocObject();
    v14 = *(void (**)(unint64_t, char *, uint64_t))(v6 + 32);
    v14(v13 + v12, v8, v5);
    v26 = sub_1B8D88B5C;
    v27 = v13;
    aBlock = MEMORY[0x1E0C809B0];
    v23 = 1107296256;
    v24 = sub_1B8D87B58;
    v25 = &block_descriptor_9;
    v15 = _Block_copy(&aBlock);
    swift_release();
    v16 = objc_msgSend(v10, sel_addSuccessBlock_, v15);
    _Block_release(v15);

    v11(v8, v21, v5);
    v17 = swift_allocObject();
    v14(v17 + v12, v8, v5);
    v26 = sub_1B8D88BD0;
    v27 = v17;
    aBlock = MEMORY[0x1E0C809B0];
    v23 = 1107296256;
    v24 = sub_1B8D9D3B8;
    v25 = &block_descriptor_15;
    v18 = _Block_copy(&aBlock);
    swift_release();
    v19 = objc_msgSend(v10, sel_addFailureBlock_, v18);
    _Block_release(v18);

  }
  else
  {
    sub_1B8D88B14();
    aBlock = swift_allocError();
    sub_1B8DFDCC4();
  }
}

uint64_t sub_1B8D87A48(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  _QWORD v7[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10D8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8D88C2C();
  if (objc_msgSend(a1, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    sub_1B8D88B14();
    v7[1] = swift_allocError();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E11E8);
    return sub_1B8DFDCC4();
  }
  else
  {
    sub_1B8DB389C(a1, (uint64_t)v4);
    v6 = type metadata accessor for AlarmEntity();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 0, 1, v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E11E8);
    return sub_1B8DFDCD0();
  }
}

void sub_1B8D87B58(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  sub_1B8DFD22C();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_1B8D87BA8(void *a1)
{
  id v1;

  v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E11E8);
  return sub_1B8DFDCC4();
}

uint64_t sub_1B8D87BF8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1B8D85A48;
  return sub_1B8D871BC(a1, v5, v4);
}

uint64_t sub_1B8D87C5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1B8D88614();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B8D87C80()
{
  sub_1B8D8803C();
  return sub_1B8DFD07C();
}

_QWORD *initializeBufferWithCopyOfBuffer for EditSleepAlarmIntent(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_1B8DFD22C();
  v4 = v3;
  return a1;
}

void destroy for EditSleepAlarmIntent(uint64_t a1)
{
  swift_release();

}

_QWORD *assignWithCopy for EditSleepAlarmIntent(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  sub_1B8DFD22C();
  swift_release();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for EditSleepAlarmIntent(uint64_t a1, _OWORD *a2)
{
  void *v4;

  swift_release();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for EditSleepAlarmIntent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EditSleepAlarmIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EditSleepAlarmIntent()
{
  return &type metadata for EditSleepAlarmIntent;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for EditSleepAlarmIntent.EditSleepAlarmOperation(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EditSleepAlarmIntent.EditSleepAlarmOperation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B8D87F10 + 4 * byte_1B8DFF7C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B8D87F44 + 4 * byte_1B8DFF7C0[v4]))();
}

uint64_t sub_1B8D87F44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8D87F4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8D87F54);
  return result;
}

uint64_t sub_1B8D87F60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8D87F68);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B8D87F6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8D87F74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8D87F80(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1B8D87F8C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for EditSleepAlarmIntent.EditSleepAlarmOperation()
{
  return &type metadata for EditSleepAlarmIntent.EditSleepAlarmOperation;
}

uint64_t sub_1B8D87FA4()
{
  return sub_1B8D87FFC(&qword_1EF1E11A0, &qword_1EF1E11A8, MEMORY[0x1E0C916B0]);
}

uint64_t sub_1B8D87FD0()
{
  return sub_1B8D87FFC(&qword_1EF1E11B0, &qword_1EF1E11B8, MEMORY[0x1E0C915A0]);
}

uint64_t sub_1B8D87FFC(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1BCCBD0FC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B8D8803C()
{
  unint64_t result;

  result = qword_1EF1E11C0;
  if (!qword_1EF1E11C0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFFA64, &type metadata for EditSleepAlarmIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E11C0);
  }
  return result;
}

unint64_t sub_1B8D88080()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v42[2];
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int v48;
  void (*v49)(char *);
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  char *v60;

  v0 = sub_1B8DFDB50();
  v1 = MEMORY[0x1E0C80A78](v0);
  v56 = (char *)v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = MEMORY[0x1E0C80A78](v1);
  v55 = (char *)v42 - v4;
  MEMORY[0x1E0C80A78](v3);
  v58 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)v42 - v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1218);
  MEMORY[0x1E0C80A78](v6);
  v60 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v8);
  v52 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_1B8DFD640();
  v10 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v12 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1B8DFD658();
  v16 = *(_QWORD *)(v57 - 8);
  v17 = MEMORY[0x1E0C80A78](v57);
  v54 = (char *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v50 = (char *)v42 - v20;
  MEMORY[0x1E0C80A78](v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1220);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1228);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_QWORD *)(v22 + 72);
  v24 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v51 = 2 * v23;
  v25 = swift_allocObject();
  v53 = v25;
  *(_OWORD *)(v25 + 16) = xmmword_1B8DFFCD0;
  *(_BYTE *)(v25 + v24) = 0;
  v26 = v25 + v24;
  sub_1B8DFDAF0();
  v27 = *(int *)(v21 + 48);
  v46 = v21;
  v43 = v26 + v27;
  v44 = v26;
  v28 = v26;
  sub_1B8DFD79C();
  v48 = *MEMORY[0x1E0CAF9B8];
  v49 = *(void (**)(char *))(v10 + 104);
  v49(v12);
  sub_1B8DFD664();
  v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v29 = v52;
  v47(v52, 1, 1, v57);
  v30 = sub_1B8DFD364();
  v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v45 = v30;
  v58(v60, 1, 1, v30);
  sub_1B8DFD370();
  *(_BYTE *)(v28 + v23) = 1;
  sub_1B8DFDAF0();
  v31 = v28 + v23 + *(int *)(v21 + 48);
  v42[1] = v15;
  v43 = v31;
  sub_1B8DFD79C();
  v32 = v12;
  v33 = v12;
  v34 = v48;
  v35 = v59;
  v36 = (void (*)(char *, uint64_t, uint64_t))v49;
  ((void (*)(char *, _QWORD, uint64_t))v49)(v33, v48, v59);
  sub_1B8DFD664();
  v37 = v29;
  v38 = v29;
  v39 = v57;
  v40 = v47;
  v47(v38, 1, 1, v57);
  v58(v60, 1, 1, v30);
  sub_1B8DFD370();
  *(_BYTE *)(v44 + v51) = 2;
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v36(v32, v34, v35);
  sub_1B8DFD664();
  v40(v37, 1, 1, v39);
  v58(v60, 1, 1, v45);
  sub_1B8DFD370();
  return sub_1B8D8C4D8(v53);
}

uint64_t sub_1B8D885CC()
{
  unint64_t v0;

  v0 = sub_1B8DFE00C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1B8D88614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t *, _QWORD, uint64_t);
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v0 = sub_1B8DFD418();
  v30 = *(_QWORD *)(v0 - 8);
  v31 = v0;
  MEMORY[0x1E0C80A78](v0);
  v29 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1B8DFDB50();
  v3 = MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  v27 = (char *)&v25 - v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10D0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v28 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v10);
  v26 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B8DFD640();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1B8DFD658();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v19);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v20 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104);
  v20(v15, *MEMORY[0x1E0CAF9B8], v12);
  sub_1B8DFD664();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v26, 1, 1, v17);
  v32 = 0;
  sub_1B8DFDAF0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E11C8);
  *v15 = type metadata accessor for MTAppIntentsManager();
  v20(v15, *MEMORY[0x1E0CAF9C8], v12);
  sub_1B8DFD79C();
  sub_1B8DFD664();
  sub_1B8DFD0AC();
  v21 = sub_1B8DFD0A0();
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v22(v9, 0, 1, v21);
  v22(v28, 1, 1, v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v29, *MEMORY[0x1E0C91738], v31);
  sub_1B8D86994();
  v23 = sub_1B8DFD1A8();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FA58]), sel_init);
  return v23;
}

void sub_1B8D88A20(uint64_t a1)
{
  uint64_t v1;

  sub_1B8D877EC(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

unint64_t sub_1B8D88A28()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EF1E11D8;
  if (!qword_1EF1E11D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1E10D8);
    v2 = sub_1B8D88A8C();
    result = MEMORY[0x1BCCBD0FC](MEMORY[0x1E0C91D78], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF1E11D8);
  }
  return result;
}

unint64_t sub_1B8D88A8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF1E11E0;
  if (!qword_1EF1E11E0)
  {
    v1 = type metadata accessor for AlarmEntity();
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E024AC, v1);
    atomic_store(result, (unint64_t *)&qword_1EF1E11E0);
  }
  return result;
}

uint64_t sub_1B8D88AD4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B8D88B14()
{
  unint64_t result;

  result = qword_1EF1E11F0;
  if (!qword_1EF1E11F0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFFC58, &type metadata for EditSleepAlarmIntent.ActionError);
    atomic_store(result, (unint64_t *)&qword_1EF1E11F0);
  }
  return result;
}

uint64_t sub_1B8D88B5C(uint64_t a1)
{
  return sub_1B8D88BDC(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1B8D87A48);
}

uint64_t objectdestroyTm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E11E8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1B8D88BD0(uint64_t a1)
{
  return sub_1B8D88BDC(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1B8D87BA8);
}

uint64_t sub_1B8D88BDC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E11E8) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

unint64_t sub_1B8D88C2C()
{
  unint64_t result;

  result = qword_1EF1E11F8;
  if (!qword_1EF1E11F8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF1E11F8);
  }
  return result;
}

uint64_t sub_1B8D88C68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8DFD190();
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for EditSleepAlarmIntent.ActionError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for EditSleepAlarmIntent.ActionError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B8D88D24 + 4 * byte_1B8DFF7CA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B8D88D44 + 4 * byte_1B8DFF7CF[v4]))();
}

_BYTE *sub_1B8D88D24(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B8D88D44(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B8D88D4C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B8D88D54(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B8D88D5C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B8D88D64(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1B8D88D70()
{
  return 0;
}

ValueMetadata *type metadata accessor for EditSleepAlarmIntent.ActionError()
{
  return &type metadata for EditSleepAlarmIntent.ActionError;
}

unint64_t sub_1B8D88D8C()
{
  unint64_t result;

  result = qword_1EF1E1230;
  if (!qword_1EF1E1230)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFFC30, &type metadata for EditSleepAlarmIntent.ActionError);
    atomic_store(result, (unint64_t *)&qword_1EF1E1230);
  }
  return result;
}

unint64_t sub_1B8D88DE0()
{
  unint64_t result;

  result = qword_1EF1E1238;
  if (!qword_1EF1E1238)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFFD5C, &type metadata for CreateAlarmIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1238);
  }
  return result;
}

uint64_t sub_1B8D88E24()
{
  return sub_1B8D8BA3C(&qword_1EF1E10F0, (uint64_t)&unk_1B8E0233C);
}

uint64_t sub_1B8D88E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1B8DFD640();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (uint64_t *)((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v5);
  sub_1B8DFDAF0();
  *v4 = type metadata accessor for MTAppIntentsManager();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0CAF9C8], v1);
  sub_1B8DFD79C();
  return sub_1B8DFD664();
}

uint64_t sub_1B8D88FA4()
{
  return sub_1B8DFD190();
}

uint64_t sub_1B8D88FC4()
{
  return sub_1B8DFD190();
}

uint64_t sub_1B8D88FE4()
{
  return sub_1B8DFD190();
}

uint64_t sub_1B8D89004()
{
  return sub_1B8DFD190();
}

uint64_t sub_1B8D89028()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1318);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1320);
  MEMORY[0x1E0C80A78](v1);
  sub_1B8D89F58();
  sub_1B8DFD3F4();
  sub_1B8DFD3E8();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1328);
  sub_1B8DFD3DC();
  swift_release();
  sub_1B8DFD3E8();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1330);
  sub_1B8DFD3DC();
  swift_release();
  sub_1B8DFD3E8();
  sub_1B8DFD40C();
  return sub_1B8DFD3D0();
}

uint64_t sub_1B8D891FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_getKeyPath();
  sub_1B8D89F58();
  v0 = sub_1B8DFD22C();
  swift_release();
  swift_getKeyPath();
  sub_1B8DFD22C();
  v1 = sub_1B8DFD22C();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36EC28);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B8DFFCE0;
  *(_QWORD *)(v2 + 32) = v0;
  *(_QWORD *)(v2 + 40) = v1;
  sub_1B8DFDC7C();
  sub_1B8DFD22C();
  v3 = sub_1B8DFD3AC();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_1B8D892F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1B8DFD640();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v5);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0CAF9B8], v1);
  return sub_1B8DFD664();
}

uint64_t sub_1B8D89448@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;
  uint64_t v20;

  v20 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v1);
  v19 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1B8DFD640();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1B8DFDB50();
  v9 = MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1B8DFD658();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v12 = *MEMORY[0x1E0CAF9B8];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v13(v6, v12, v3);
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v13(v6, v12, v3);
  v14 = v19;
  sub_1B8DFD664();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1110);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1B8DFFCF0;
  sub_1B8DFD634();
  sub_1B8DFD634();
  sub_1B8DFD634();
  sub_1B8DFD634();
  sub_1B8DFD634();
  v15 = v20;
  sub_1B8DFD310();
  v16 = sub_1B8DFD304();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 0, 1, v16);
}

uint64_t sub_1B8D897B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[7] = a1;
  v2[8] = v1;
  v2[9] = type metadata accessor for AlarmEntity();
  v2[10] = swift_task_alloc();
  v3 = sub_1B8DFD610();
  v2[11] = v3;
  v2[12] = *(_QWORD *)(v3 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B8D89848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t result;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  sub_1B8DFD178();
  v4 = sub_1B8DFD58C();
  v6 = v5;
  v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v7(v1, v2);
  if ((v6 & 1) != 0
    || (v8 = *(_QWORD *)(v0 + 104),
        v9 = *(_QWORD *)(v0 + 88),
        sub_1B8DFD178(),
        v10 = sub_1B8DFD5C8(),
        v12 = v11,
        result = ((uint64_t (*)(uint64_t, uint64_t))v7)(v8, v9),
        (v12 & 1) != 0))
  {
    sub_1B8D8B9F0();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if ((v10 | v4) < 0)
  {
    __break(1u);
    return result;
  }
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FA60]), sel_initWithHour_minute_, v4, v10);
  *(_QWORD *)(v0 + 120) = v14;
  sub_1B8DFD178();
  v16 = *(_QWORD *)(v0 + 16);
  v15 = *(_QWORD *)(v0 + 24);
  v17 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v18 = sub_1B8DFD61C();
  v20 = v19;

  if (!v15)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if (v16 != v18 || v15 != v20)
  {
    v21 = sub_1B8DFE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) != 0)
      goto LABEL_15;
LABEL_11:
    sub_1B8DFD178();
    if (*(_QWORD *)(v0 + 40))
    {
      v22 = (void *)sub_1B8DFDB5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v22 = 0;
    }
    objc_msgSend(v14, sel_setTitle_, v22, 0x80000001B8E06090);

    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_15:
  sub_1B8DFD178();
  objc_msgSend(v14, sel_setAllowsSnooze_, *(unsigned __int8 *)(v0 + 144));
  sub_1B8DFD178();
  v23 = *(_QWORD *)(v0 + 48);
  if (v23)
  {
    v24 = *(_QWORD *)(v23 + 16);
    if (v24)
    {
      v25 = 0;
      v26 = 0;
      do
      {
        v27 = *(char *)(v23 + v25++ + 32);
        v28 = qword_1B8E000B8[v27];
        if ((v28 & v26) != 0)
          v28 = 0;
        v26 |= v28;
      }
      while (v24 != v25);
      swift_bridgeObjectRelease();
      objc_msgSend(v14, sel_setRepeatSchedule_, v26);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v29 = swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v29;
  *(_QWORD *)(v29 + 16) = v14;
  v30 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v30;
  *v30 = v0;
  v30[1] = sub_1B8D89BF0;
  return sub_1B8DFE0C0();
}

uint64_t sub_1B8D89BF0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8D89C4C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(id *)(v0 + 120);
  sub_1B8DB389C(v2, v1);
  sub_1B8D8BA3C((unint64_t *)&qword_1EF1E11E0, (uint64_t)&unk_1B8E024AC);
  sub_1B8DFD0D0();

  sub_1B8D861B4(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1B8D89CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1310);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FA58]), sel_init);
  v8 = objc_msgSend(v7, sel_addAlarm_, a2);

  if (v8)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v10 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    aBlock[4] = sub_1B8D8BAE0;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1B8DB2C40;
    aBlock[3] = &block_descriptor_1;
    v11 = _Block_copy(aBlock);
    swift_release();
    v12 = objc_msgSend(v8, sel_addCompletionBlock_, v11);
    _Block_release(v11);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B8D89E7C()
{
  uint64_t v1;

  sub_1B8DFD178();
  return v1;
}

uint64_t sub_1B8D89EAC()
{
  return sub_1B8DFD184();
}

void (*sub_1B8D89EDC(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1B8DFD16C();
  return sub_1B8D89F24;
}

void sub_1B8D89F24(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

unint64_t sub_1B8D89F58()
{
  unint64_t result;

  result = qword_1EF1E1240;
  if (!qword_1EF1E1240)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFFD84, &type metadata for CreateAlarmIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1240);
  }
  return result;
}

unint64_t sub_1B8D89FA0()
{
  unint64_t result;

  result = qword_1EF1E1248;
  if (!qword_1EF1E1248)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFFE14, &type metadata for CreateAlarmIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1248);
  }
  return result;
}

unint64_t sub_1B8D89FE8()
{
  unint64_t result;

  result = qword_1EF1E1250;
  if (!qword_1EF1E1250)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFFE3C, &type metadata for CreateAlarmIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1250);
  }
  return result;
}

uint64_t sub_1B8D8A02C()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1B8D8A050()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8D8A06C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  _QWORD *v5;

  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 56) = v5;
  *v5 = v2;
  v5[1] = sub_1B8D8A0DC;
  return sub_1B8D897B4(a1);
}

uint64_t sub_1B8D8A0DC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

double sub_1B8D8A124@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  _OWORD v4[2];
  uint64_t v5;

  sub_1B8D8A77C(v4);
  result = *(double *)v4;
  v3 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_1B8D8A164()
{
  sub_1B8D89F58();
  return sub_1B8DFD07C();
}

unint64_t sub_1B8D8A190()
{
  unint64_t result;

  result = qword_1EF1E1260;
  if (!qword_1EF1E1260)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFFEB8, &type metadata for RepeatDayOptionsProvider);
    atomic_store(result, (unint64_t *)&qword_1EF1E1260);
  }
  return result;
}

unint64_t sub_1B8D8A1D8()
{
  unint64_t result;

  result = qword_1EF1E1268;
  if (!qword_1EF1E1268)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E0227C, &type metadata for AlarmEntity.RepeatDay);
    atomic_store(result, (unint64_t *)&qword_1EF1E1268);
  }
  return result;
}

unint64_t sub_1B8D8A220()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EF1E1270;
  if (!qword_1EF1E1270)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EF1E1278);
    v2 = sub_1B8D8A1D8();
    result = MEMORY[0x1BCCBD0FC](MEMORY[0x1E0C91CE0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF1E1270);
  }
  return result;
}

uint64_t sub_1B8D8A284(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1B8D8A2CC;
  return sub_1B8D8B708();
}

uint64_t sub_1B8D8A2CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1B8D8A328(_BYTE *a1)
{
  uint64_t v1;

  *a1 = 7;
  return sub_1B8D8B700(*(uint64_t (**)(void))(v1 + 8));
}

ValueMetadata *type metadata accessor for RepeatDayOptionsProvider()
{
  return &type metadata for RepeatDayOptionsProvider;
}

uint64_t initializeBufferWithCopyOfBuffer for CreateAlarmIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  sub_1B8DFD22C();
  return v3;
}

void destroy for CreateAlarmIntent(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

}

_QWORD *initializeWithCopy for CreateAlarmIntent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[4];
  a1[4] = v5;
  sub_1B8DFD22C();
  sub_1B8DFD22C();
  sub_1B8DFD22C();
  sub_1B8DFD22C();
  v6 = v5;
  return a1;
}

_QWORD *assignWithCopy for CreateAlarmIntent(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  sub_1B8DFD22C();
  swift_release();
  a1[1] = a2[1];
  sub_1B8DFD22C();
  swift_release();
  a1[2] = a2[2];
  sub_1B8DFD22C();
  swift_release();
  a1[3] = a2[3];
  sub_1B8DFD22C();
  swift_release();
  v4 = (void *)a2[4];
  v5 = (void *)a1[4];
  a1[4] = v4;
  v6 = v4;

  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for CreateAlarmIntent(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  v4 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for CreateAlarmIntent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CreateAlarmIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CreateAlarmIntent()
{
  return &type metadata for CreateAlarmIntent;
}

uint64_t sub_1B8D8A5E0()
{
  return sub_1B8D87FFC(&qword_1EF1E1290, &qword_1EF1E1298, MEMORY[0x1E0C916B0]);
}

uint64_t sub_1B8D8A60C()
{
  return sub_1B8D87FFC(&qword_1EF1E12A0, &qword_1EF1E12A8, MEMORY[0x1E0C915A0]);
}

uint64_t sub_1B8D8A638(uint64_t a1)
{
  char **v1;
  int64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1B8D96710(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[v8 + 32];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v11 = *((_QWORD *)v3 + 2);
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    *((_QWORD *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1B8DFDFF4();
  __break(1u);
  return result;
}

id sub_1B8D8A77C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t *);
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t *, uint64_t, uint64_t);
  char *v85;
  char *v86;
  char *v87;
  void (*v88)(char *, uint64_t, uint64_t, char *);
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  id result;
  _QWORD *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  _QWORD *v122;
  void (*v123)(uint64_t *);
  unsigned int v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  unsigned int v131;
  uint64_t v132;
  uint64_t v133;
  void (*v134)(char *, uint64_t, uint64_t, char *);
  char *v135;
  uint64_t v136;
  void (*v137)(char *, uint64_t, uint64_t, uint64_t);
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;

  v122 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E12B0);
  MEMORY[0x1E0C80A78](v1);
  v121 = (char *)&v99 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E12B8);
  MEMORY[0x1E0C80A78](v3);
  v110 = (char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_1B8DFD418();
  v136 = *(_QWORD *)(v139 - 8);
  MEMORY[0x1E0C80A78](v139);
  v138 = (char *)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B8DFDB50();
  v7 = MEMORY[0x1E0C80A78](v6);
  v120 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v117 = (char *)&v99 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v118 = (char *)&v99 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v115 = (char *)&v99 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v107 = (char *)&v99 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v111 = (char *)&v99 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v106 = (char *)&v99 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v102 = (char *)&v99 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v103 = (char *)&v99 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v135 = (char *)&v99 - v26;
  MEMORY[0x1E0C80A78](v25);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10D0);
  v28 = MEMORY[0x1E0C80A78](v27);
  v119 = (char *)&v99 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x1E0C80A78](v28);
  v113 = (char *)&v99 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v112 = (char *)&v99 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v104 = (char *)&v99 - v35;
  MEMORY[0x1E0C80A78](v34);
  v108 = (char *)&v99 - v36;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E12C0);
  v133 = *(_QWORD *)(v37 - 8);
  v134 = (void (*)(char *, uint64_t, uint64_t, char *))v37;
  MEMORY[0x1E0C80A78](v37);
  v100 = (char *)&v99 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  v40 = MEMORY[0x1E0C80A78](v39);
  v116 = (char *)&v99 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = MEMORY[0x1E0C80A78](v40);
  v128 = (char *)&v99 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v126 = (char *)&v99 - v45;
  MEMORY[0x1E0C80A78](v44);
  v47 = (char *)&v99 - v46;
  v130 = sub_1B8DFD640();
  v48 = *(_QWORD *)(v130 - 8);
  MEMORY[0x1E0C80A78](v130);
  v50 = (uint64_t *)((char *)&v99 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  v51 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v51);
  v52 = sub_1B8DFD658();
  v53 = *(_QWORD *)(v52 - 8);
  v132 = v52;
  v54 = MEMORY[0x1E0C80A78](v52);
  v114 = (char *)&v99 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = MEMORY[0x1E0C80A78](v54);
  v109 = (char *)&v99 - v57;
  v58 = MEMORY[0x1E0C80A78](v56);
  v105 = (char *)&v99 - v59;
  v60 = MEMORY[0x1E0C80A78](v58);
  v129 = (char *)&v99 - v61;
  v62 = MEMORY[0x1E0C80A78](v60);
  v101 = (char *)&v99 - v63;
  v64 = MEMORY[0x1E0C80A78](v62);
  v127 = (char *)&v99 - v65;
  v66 = MEMORY[0x1E0C80A78](v64);
  MEMORY[0x1E0C80A78](v66);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v131 = *MEMORY[0x1E0CAF9B8];
  v123 = *(void (**)(uint64_t *))(v48 + 104);
  v67 = v130;
  v123(v50);
  sub_1B8DFD664();
  v137 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56);
  v137(v47, 1, 1, v52);
  (*(void (**)(char *, _QWORD, void (*)(char *, uint64_t, uint64_t, char *)))(v133 + 104))(v100, *MEMORY[0x1E0C90D58], v134);
  sub_1B8DFDAF0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E12C8);
  v125 = type metadata accessor for MTAppIntentsManager();
  *v50 = v125;
  v124 = *MEMORY[0x1E0CAF9C8];
  v68 = v67;
  v69 = v123;
  v123(v50);
  sub_1B8DFD79C();
  sub_1B8DFD664();
  v70 = v108;
  sub_1B8DFD0AC();
  v71 = sub_1B8DFD0A0();
  v134 = *(void (**)(char *, uint64_t, uint64_t, char *))(*(_QWORD *)(v71 - 8) + 56);
  v135 = (char *)v71;
  v134(v70, 0, 1, (char *)v71);
  LODWORD(v133) = *MEMORY[0x1E0C91738];
  v136 = *(_QWORD *)(v136 + 104);
  v72 = v138;
  ((void (*)(char *))v136)(v138);
  v73 = v72;
  v108 = (char *)sub_1B8DFD1D8();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v74 = v131;
  v75 = v68;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v69)(v50, v131, v68);
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  ((void (*)(uint64_t *, uint64_t, uint64_t))v69)(v50, v74, v68);
  v76 = v126;
  sub_1B8DFD664();
  v137(v76, 0, 1, v132);
  v77 = sub_1B8DFDAD8();
  v140 = 0;
  v141 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v110, 1, 1, v77);
  sub_1B8DFDAF0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E12D0);
  v78 = v125;
  *v50 = v125;
  v79 = v124;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v69)(v50, v124, v75);
  sub_1B8DFD79C();
  sub_1B8DFD664();
  v80 = v104;
  sub_1B8DFD0AC();
  v134(v80, 0, 1, v135);
  v81 = v139;
  ((void (*)(char *, _QWORD, uint64_t))v136)(v73, v133, v139);
  v127 = (char *)sub_1B8DFD1E4();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v82 = v131;
  v83 = v130;
  v84 = (void (*)(uint64_t *, uint64_t, uint64_t))v123;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v123)(v50, v131, v130);
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v84(v50, v82, v83);
  v85 = v128;
  sub_1B8DFD664();
  v137(v85, 0, 1, v132);
  v140 = MEMORY[0x1E0DEE9D8];
  sub_1B8DFDAF0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E12D8);
  *v50 = v78;
  v84(v50, v79, v83);
  sub_1B8DFD79C();
  sub_1B8DFD664();
  v86 = v112;
  sub_1B8DFD0AC();
  v87 = v86;
  v88 = v134;
  v89 = v135;
  v134(v87, 0, 1, v135);
  v88(v113, 1, 1, v89);
  ((void (*)(char *, _QWORD, uint64_t))v136)(v138, v133, v81);
  sub_1B8D8B678();
  sub_1B8D8B6BC();
  v129 = (char *)sub_1B8DFD19C();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v90 = v131;
  v91 = v130;
  v84(v50, v131, v130);
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v84(v50, v90, v91);
  v92 = v116;
  sub_1B8DFD664();
  v137(v92, 0, 1, v132);
  LOBYTE(v140) = 1;
  v93 = sub_1B8DFDCAC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v121, 1, 1, v93);
  sub_1B8DFDAF0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E12F0);
  *v50 = v125;
  v84(v50, v124, v91);
  sub_1B8DFD79C();
  sub_1B8DFD664();
  v94 = v119;
  sub_1B8DFD0AC();
  v134(v94, 0, 1, v135);
  ((void (*)(char *, _QWORD, uint64_t))v136)(v138, v133, v139);
  v95 = sub_1B8DFD1F0();
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3570]), sel_init);
  v97 = v122;
  v98 = v127;
  *v122 = v108;
  v97[1] = v98;
  v97[2] = v129;
  v97[3] = v95;
  v97[4] = result;
  return result;
}

unint64_t sub_1B8D8B678()
{
  unint64_t result;

  result = qword_1EF1E12E0;
  if (!qword_1EF1E12E0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8DFFE58, &type metadata for RepeatDayOptionsProvider);
    atomic_store(result, (unint64_t *)&qword_1EF1E12E0);
  }
  return result;
}

unint64_t sub_1B8D8B6BC()
{
  unint64_t result;

  result = qword_1EF1E12E8;
  if (!qword_1EF1E12E8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E0214C, &type metadata for AlarmEntity.RepeatDay);
    atomic_store(result, (unint64_t *)&qword_1EF1E12E8);
  }
  return result;
}

uint64_t sub_1B8D8B700(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1B8D8B708()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1B8DFD9A0();
  v0[2] = v1;
  v0[3] = *(_QWORD *)(v1 - 8);
  v0[4] = swift_task_alloc();
  v2 = sub_1B8DFD85C();
  v0[5] = v2;
  v0[6] = *(_QWORD *)(v2 - 8);
  v0[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B8D8B78C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  sub_1B8DFD820();
  v5 = (void *)sub_1B8DFD7CC();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v6 = (uint64_t)v5 - 1;
  if (__OFSUB__(v5, 1))
  {
    __break(1u);
    goto LABEL_21;
  }
  v3 = 7;
  v7 = 8 - (_QWORD)v5;
  if (v6 < 7)
  {
    if ((v6 & 0x8000000000000000) == 0)
    {
      sub_1B8DFE0E4();
      v5 = &unk_1E6F29380;
      swift_unknownObjectRetain_n();
      v8 = swift_dynamicCastClass();
      v1 = MEMORY[0x1E0DEE9D8];
      if (!v8)
        v8 = MEMORY[0x1E0DEE9D8];
      v9 = *(_QWORD *)(v8 + 16);
      swift_release();
      if (v9 == v7)
      {
        v10 = swift_dynamicCastClass();
        if (v10)
          v11 = v10;
        else
          v11 = v1;
        goto LABEL_10;
      }
LABEL_22:
      v11 = sub_1B8DA66F0((uint64_t)v5, (uint64_t)v5 + 32, v6, (2 * v3) | 1);
LABEL_10:
      swift_unknownObjectRetain_n();
      v12 = swift_dynamicCastClass();
      if (!v12)
        v12 = v1;
      v13 = *(_QWORD *)(v12 + 16);
      swift_release();
      if (v13 == v6)
      {
        v14 = swift_dynamicCastClass();
        if (!v14)
          v14 = v1;
      }
      else
      {
        v14 = sub_1B8DA66F0((uint64_t)&unk_1E6F29380, (uint64_t)&unk_1E6F293A0, 0, (2 * v6) | 1);
      }
      sub_1B8D8A638(v14);
      v15 = v11;
      goto LABEL_19;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_1B8DFD994();
  v16 = sub_1B8DFD988();
  v17 = sub_1B8DFDD9C();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_1B8D7F000, v16, v17, "Unexpected value > weekdays count, bailing out.", v18, 2u);
    MEMORY[0x1BCCBD1C8](v18, -1, -1);
  }
  v20 = *(_QWORD *)(v0 + 24);
  v19 = *(_QWORD *)(v0 + 32);
  v21 = *(_QWORD *)(v0 + 16);

  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  v15 = MEMORY[0x1E0DEE9D8];
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v15);
}

unint64_t sub_1B8D8B9F0()
{
  unint64_t result;

  result = qword_1EF1E1308;
  if (!qword_1EF1E1308)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E00070, &type metadata for CreateAlarmIntent.ActionError);
    atomic_store(result, (unint64_t *)&qword_1EF1E1308);
  }
  return result;
}

void sub_1B8D8BA34(uint64_t a1)
{
  uint64_t v1;

  sub_1B8D89CF4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1B8D8BA3C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for AlarmEntity();
    result = MEMORY[0x1BCCBD0FC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B8D8BA7C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1310);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1B8D8BAE0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1310);
  return sub_1B8DFDCD0();
}

uint64_t sub_1B8D8BB20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8DFD190();
  *a1 = result;
  return result;
}

uint64_t sub_1B8D8BB48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8DFD190();
  *a1 = result;
  return result;
}

uint64_t sub_1B8D8BB70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8DFD190();
  *a1 = result;
  return result;
}

uint64_t sub_1B8D8BB98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8DFD190();
  *a1 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for CreateAlarmIntent.ActionError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B8D8BC00 + 4 * byte_1B8DFFD00[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B8D8BC20 + 4 * byte_1B8DFFD05[v4]))();
}

_BYTE *sub_1B8D8BC00(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B8D8BC20(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B8D8BC28(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B8D8BC30(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B8D8BC38(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B8D8BC40(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CreateAlarmIntent.ActionError()
{
  return &type metadata for CreateAlarmIntent.ActionError;
}

unint64_t sub_1B8D8BC60()
{
  unint64_t result;

  result = qword_1EF1E1338;
  if (!qword_1EF1E1338)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E00048, &type metadata for CreateAlarmIntent.ActionError);
    atomic_store(result, (unint64_t *)&qword_1EF1E1338);
  }
  return result;
}

unint64_t sub_1B8D8BCA8()
{
  unint64_t result;

  result = qword_1EF1E1340;
  if (!qword_1EF1E1340)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E00180, &type metadata for LapStopwatchIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1340);
  }
  return result;
}

unint64_t sub_1B8D8BCF0()
{
  unint64_t result;

  result = qword_1EF1E1348;
  if (!qword_1EF1E1348)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E001A8, &type metadata for LapStopwatchIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1348);
  }
  return result;
}

uint64_t sub_1B8D8BD34()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1B8D8BD58()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8D8BD68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1B8DFD640();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v5);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0CAF9B8], v1);
  return sub_1B8DFD664();
}

uint64_t sub_1B8D8BEC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD640();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1B8DFDB50();
  v10 = MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v18 = sub_1B8DFD658();
  v11 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v12 = *MEMORY[0x1E0CAF9B8];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v13(v7, v12, v4);
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v13(v7, v12, v4);
  sub_1B8DFD664();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v3, 0, 1, v18);
  v14 = v19;
  sub_1B8DFD310();
  v15 = sub_1B8DFD304();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
}

uint64_t sub_1B8D8C178()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1388);
  MEMORY[0x1E0C80A78](v0);
  sub_1B8D8C450();
  sub_1B8DFD400();
  return sub_1B8DFD3C4();
}

uint64_t sub_1B8D8C248(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 24) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 32) = v2;
  *v2 = v1;
  v2[1] = sub_1B8D8C294;
  return sub_1B8D9D3BC();
}

uint64_t sub_1B8D8C294(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 40) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_1B8D8C308()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);
  if (v1)
  {
    sub_1B8DA32E8();

  }
  *(_QWORD *)(v0 + 16) = sub_1B8DDBAC0(2);
  sub_1B8D8C494();
  sub_1B8DFD0B8();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1B8D8C388@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FA88]), sel_init);
  *a1 = result;
  return result;
}

uint64_t sub_1B8D8C3C0()
{
  sub_1B8D8C450();
  return sub_1B8DFD07C();
}

ValueMetadata *type metadata accessor for LapStopwatchIntent()
{
  return &type metadata for LapStopwatchIntent;
}

uint64_t sub_1B8D8C3F8()
{
  return sub_1B8D87FFC(&qword_1EF1E1358, &qword_1EF1E1360, MEMORY[0x1E0C916B0]);
}

uint64_t sub_1B8D8C424()
{
  return sub_1B8D87FFC((unint64_t *)&qword_1EF1E1368, &qword_1EF1E1370, MEMORY[0x1E0C91580]);
}

unint64_t sub_1B8D8C450()
{
  unint64_t result;

  result = qword_1EF1E1378;
  if (!qword_1EF1E1378)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E000F0, &type metadata for LapStopwatchIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1378);
  }
  return result;
}

unint64_t sub_1B8D8C494()
{
  unint64_t result;

  result = qword_1EF1E1380;
  if (!qword_1EF1E1380)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E03DBC, &type metadata for OpenTab);
    atomic_store(result, (unint64_t *)&qword_1EF1E1380);
  }
  return result;
}

unint64_t sub_1B8D8C4D8(uint64_t a1)
{
  return sub_1B8D8C784(a1, &qword_1EF1E1228, &qword_1EF1E14E8, (uint64_t (*)(_QWORD))sub_1B8D96E40);
}

unint64_t sub_1B8D8C4F4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F248);
  v2 = sub_1B8DFDFE8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  sub_1B8DFD22C();
  while (1)
  {
    sub_1B8D9D288(v6, (uint64_t)&v15, (uint64_t *)&unk_1ED36F228);
    v7 = v15;
    v8 = v16;
    result = sub_1B8D96EBC(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1B8D9D04C(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B8D8C628(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1508);
  v2 = sub_1B8DFDFE8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  sub_1B8DFD22C();
  while (1)
  {
    sub_1B8D9D288(v6, (uint64_t)v15, &qword_1EF1E1510);
    result = sub_1B8D96F20((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_1B8D9D04C(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B8D8C768(uint64_t a1)
{
  return sub_1B8D8C784(a1, &qword_1EF1E14D8, &qword_1EF1E14E0, (uint64_t (*)(_QWORD))sub_1B8D96F50);
}

unint64_t sub_1B8D8C784(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t result;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD);

  v29 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v12 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v11 = sub_1B8DFDFE8();
  v12 = (_QWORD *)v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  v14 = &v10[*(int *)(v7 + 48)];
  v15 = v11 + 64;
  v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v28 = a1;
  v17 = a1 + v16;
  v18 = *(_QWORD *)(v8 + 72);
  sub_1B8DFD22C();
  while (1)
  {
    sub_1B8D9D288(v17, (uint64_t)v10, a2);
    v19 = *v10;
    result = v29(*v10);
    if ((v21 & 1) != 0)
      break;
    v22 = result;
    *(_QWORD *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v12[6] + result) = v19;
    v23 = v12[7];
    v24 = sub_1B8DFD37C();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v23 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * v22, v14, v24);
    v25 = v12[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
      goto LABEL_11;
    v12[2] = v27;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B8D8C91C(uint64_t a1)
{
  return sub_1B8D8C784(a1, &qword_1EF1E14C0, &qword_1EF1E14C8, (uint64_t (*)(_QWORD))sub_1B8D9719C);
}

unint64_t sub_1B8D8C938(uint64_t a1)
{
  return sub_1B8D8C784(a1, &qword_1EF1E14B0, &qword_1EF1E14B8, (uint64_t (*)(_QWORD))sub_1B8D97218);
}

unint64_t sub_1B8D8C954(uint64_t a1)
{
  return sub_1B8D8C784(a1, &qword_1EF1E14A0, &qword_1EF1E14A8, (uint64_t (*)(_QWORD))sub_1B8D972B8);
}

uint64_t sub_1B8D8C970()
{
  char v0;

  sub_1B8DFD970();
  sub_1B8DFD964();
  v0 = sub_1B8DFD958();
  swift_release();
  return v0 & 1;
}

uint64_t sub_1B8D8C9F0()
{
  unint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F0B8);
  v0 = sub_1B8DFD8BC();
  if (v0 >> 62)
    v1 = sub_1B8DFDFB8();
  else
    v1 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  return v1;
}

id MTBaseSessionsProvider.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MTBaseSessionsProvider();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for MTBaseSessionsProvider()
{
  return objc_opt_self();
}

id MTBaseSessionsProvider.__deallocating_deinit(uint64_t a1)
{
  return sub_1B8D8F450(a1, type metadata accessor for MTBaseSessionsProvider);
}

uint64_t sub_1B8D8CB68()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t result;
  uint64_t v6;
  _QWORD aBlock[6];
  unsigned __int8 v8;

  v8 = 0;
  v1 = *(NSObject **)(v0 + OBJC_IVAR____TtC18MobileTimerSupport23MTTimerSessionsProvider_serializerQueue);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = &v8;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1B8D8CCAC;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1B8D8CCFC;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B8D8CD1C;
  aBlock[3] = &block_descriptor_2;
  v4 = _Block_copy(aBlock);
  sub_1B8DFD22C();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v1 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v6 = v8;
    swift_release();
    return v6;
  }
  return result;
}

uint64_t sub_1B8D8CC9C()
{
  return swift_deallocObject();
}

uint64_t sub_1B8D8CCAC()
{
  uint64_t v0;

  return sub_1B8D91E24(*(BOOL **)(v0 + 16), &qword_1ED36F1E0);
}

uint64_t sub_1B8D8CCCC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1B8D8CCEC()
{
  return swift_deallocObject();
}

uint64_t sub_1B8D8CCFC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1B8D8CD1C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void sub_1B8D8CD6C(char *a1, void (*a2)(uint64_t), uint64_t a3, int a4)
{
  char *v4;
  char *v5;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void (*v38)(unint64_t, _QWORD, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  void *v44;
  NSObject *v45;
  _QWORD *v46;
  id v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  char *v55;
  __int128 v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  id v64;
  char *v65;
  char *v66;
  int v67;
  void (*v68)(uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  unint64_t aBlock;
  unint64_t v74;
  uint64_t (*v75)(uint64_t);
  void *v76;
  uint64_t (*v77)();
  uint64_t v78;

  v5 = v4;
  v67 = a4;
  v71 = a3;
  v68 = a2;
  v70 = sub_1B8DFD94C();
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v9);
  v66 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F1E8);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v65 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for TimerActivityAttributes(0);
  MEMORY[0x1E0C80A78](v63);
  v72 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (void *)objc_opt_self();
  aBlock = 0;
  v74 = 0xE000000000000000;
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  aBlock = 0xD00000000000001FLL;
  v74 = 0x80000001B8E061C0;
  v64 = a1;
  v16 = (uint64_t *)&a1[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_timerId];
  swift_beginAccess();
  sub_1B8DFD3AC();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  v17 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_logInfo_, v17);

  v18 = *v16;
  v19 = v16[1];
  sub_1B8DFD3AC();
  sub_1B8D8EABC(v18, v19);
  v21 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21)
  {
    aBlock = 0;
    v74 = 0xE000000000000000;
    sub_1B8DFDEF8();
    swift_bridgeObjectRelease();
    aBlock = 0xD00000000000002ALL;
    v74 = 0x80000001B8E061E0;
    sub_1B8DFD3AC();
    sub_1B8DFDBBC();
    swift_bridgeObjectRelease();
    v22 = (void *)sub_1B8DFDB5C();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_logInfo_, v22);

  }
  else
  {
    v60 = v12;
    v61 = v11;
    v59 = v8;
    v55 = v5;
    v62 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F270);
    v23 = *(_QWORD *)(sub_1B8DFD904() - 8);
    v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    v25 = swift_allocObject();
    v56 = xmmword_1B8DFF650;
    *(_OWORD *)(v25 + 16) = xmmword_1B8DFF650;
    v58 = v25;
    v26 = (_QWORD *)(v25 + v24);
    v57 = "exists for timer with id: ";
    *v26 = 0xD000000000000014;
    v26[1] = 0x80000001B8E06210;
    (*(void (**)(void))(v23 + 104))();
    v27 = v64;
    v28 = (uint64_t)v72;
    sub_1B8DFD73C();
    *(_QWORD *)(v28 + *(int *)(v63 + 20)) = v27;
    aBlock = (unint64_t)v27;
    v29 = sub_1B8DFD748();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v66, 1, 1, v29);
    v64 = v27;
    sub_1B8D98A3C((uint64_t)v64);
    type metadata accessor for TimerContext(0);
    sub_1B8D98D04(&qword_1ED36F688, 255, type metadata accessor for TimerContext, (uint64_t)&protocol conformance descriptor for TimerContext);
    sub_1B8D98D04(&qword_1ED36F1F8, 255, type metadata accessor for TimerContext, (uint64_t)&protocol conformance descriptor for TimerContext);
    sub_1B8D98D04(&qword_1ED36F200, 255, type metadata accessor for TimerContext, MEMORY[0x1E0DEFCF8]);
    v30 = v65;
    sub_1B8DFD97C();
    if ((v67 & 1) != 0)
    {
      v31 = objc_msgSend(v62, sel_mtSBUIIsSystemApertureEnabled);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F278);
      v32 = sub_1B8DFD934();
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(_QWORD *)(v33 + 72);
      v35 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
      v36 = swift_allocObject();
      if ((v31 & 1) != 0)
      {
        *(_OWORD *)(v36 + 16) = xmmword_1B8E00210;
        v37 = v36 + v35;
        v38 = *(void (**)(unint64_t, _QWORD, uint64_t))(v33 + 104);
        v38(v36 + v35, *MEMORY[0x1E0C8FA40], v32);
        v38(v37 + v34, *MEMORY[0x1E0C8FA48], v32);
      }
      else
      {
        *(_OWORD *)(v36 + 16) = v56;
        (*(void (**)(unint64_t, _QWORD, uint64_t))(v33 + 104))(v36 + v35, *MEMORY[0x1E0C8FA48], v32);
      }
      v28 = (uint64_t)v72;
    }
    else
    {
      v39 = sub_1B8DFD928();
      sub_1B8D986B4(v39, MEMORY[0x1E0DEE9D8]);
      swift_bridgeObjectRelease();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F1E0);
    v40 = v59;
    sub_1B8DFD940();
    v41 = sub_1B8DFD8F8();
    v42 = v68;
    v43 = v41;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v40, v70);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v30, v61);
    sub_1B8D9A088(v28, type metadata accessor for TimerActivityAttributes);
    v44 = v55;
    v45 = *(NSObject **)&v55[OBJC_IVAR____TtC18MobileTimerSupport23MTTimerSessionsProvider_serializerQueue];
    v46 = (_QWORD *)swift_allocObject();
    v47 = v64;
    v46[2] = v44;
    v46[3] = v47;
    v46[4] = v43;
    v48 = swift_allocObject();
    *(_QWORD *)(v48 + 16) = sub_1B8D98D68;
    *(_QWORD *)(v48 + 24) = v46;
    v77 = sub_1B8D9D2D0;
    v78 = v48;
    aBlock = MEMORY[0x1E0C809B0];
    v74 = 1107296256;
    v75 = sub_1B8D8CD1C;
    v76 = &block_descriptor_13;
    v49 = _Block_copy(&aBlock);
    v50 = v47;
    v51 = v44;
    sub_1B8DFD22C();
    sub_1B8DFD22C();
    swift_release();
    dispatch_sync(v45, v49);
    _Block_release(v49);
    LOBYTE(v45) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v45 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v52 = sub_1B8DFD8D4();
      v42(v52);
      swift_bridgeObjectRelease();
      aBlock = 0;
      v74 = 0xE000000000000000;
      sub_1B8DFDEF8();
      swift_bridgeObjectRelease();
      aBlock = 0xD000000000000019;
      v74 = 0x80000001B8E06290;
      sub_1B8DFD8D4();
      sub_1B8DFDBBC();
      swift_bridgeObjectRelease();
      sub_1B8DFDBBC();
      sub_1B8DFD3AC();
      sub_1B8DFDBBC();
      swift_bridgeObjectRelease();
      v53 = (void *)sub_1B8DFDB5C();
      swift_bridgeObjectRelease();
      objc_msgSend(v62, sel_logInfo_, v53);

      swift_release();
      swift_release();
    }
  }
}

uint64_t type metadata accessor for TimerActivityAttributes(uint64_t a1)
{
  return sub_1B8D9A054(a1, qword_1ED36F5D0);
}

void sub_1B8D8D990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5;

  if (a2)
    a2 = sub_1B8DFDB5C();
  v5 = (id)a2;
  (*(void (**)(uint64_t))(a4 + 16))(a4);

}

void sub_1B8D8D9DC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  void *v17;
  uint64_t v18;
  _QWORD v19[4];
  unint64_t v20;
  unint64_t v21;

  v19[0] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)objc_opt_self();
  v19[1] = 0;
  v19[2] = 0xE000000000000000;
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  v20 = 0xD00000000000001FLL;
  v21 = 0x80000001B8E062B0;
  v9 = (uint64_t *)&a1[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_timerId];
  swift_beginAccess();
  sub_1B8DFD3AC();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  v10 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_logInfo_, v10);

  v11 = *v9;
  v12 = v9[1];
  sub_1B8DFD3AC();
  v13 = sub_1B8D8ECA4(v11, v12);
  swift_bridgeObjectRelease();
  if (v13)
  {
    v14 = sub_1B8DFDD00();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 1, 1, v14);
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = 0;
    v15[3] = 0;
    v15[4] = v13;
    v15[5] = a1;
    v15[6] = v19[0];
    v15[7] = a3;
    v16 = a1;
    sub_1B8DFD22C();
    sub_1B8D8DEC0((uint64_t)v7, (uint64_t)&unk_1EF1E13C0, (uint64_t)v15);
    swift_release();
  }
  else
  {
    v20 = 0;
    v21 = 0xE000000000000000;
    sub_1B8DFDEF8();
    sub_1B8DFDBBC();
    sub_1B8DFD3AC();
    sub_1B8DFDBBC();
    swift_bridgeObjectRelease();
    sub_1B8DFDBBC();
    v17 = (void *)sub_1B8DFDB5C();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_logInfo_, v17);

    MEMORY[0x1E0C80A78](v18);
    v19[-2] = v19[0];
    v19[-1] = a3;
    sub_1B8D8CD6C(a1, (void (*)(uint64_t))sub_1B8D98DAC, (uint64_t)&v19[-4], 0);
  }
}

uint64_t sub_1B8D8DCAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *);

  v7[8] = a6;
  v7[9] = a7;
  v10 = (uint64_t (*)(_QWORD *))((int)*MEMORY[0x1E0C8F5B0] + MEMORY[0x1E0C8F5B0]);
  v7[5] = a5;
  v7[6] = a4;
  v7[7] = a5;
  v8 = (_QWORD *)swift_task_alloc();
  v7[10] = v8;
  *v8 = v7;
  v8[1] = sub_1B8D8DD20;
  return v10(v7 + 5);
}

uint64_t sub_1B8D8DD20()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8D8DD74()
{
  uint64_t v0;
  void *v1;
  void *v2;

  (*(void (**)(_QWORD))(v0 + 64))(0);
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  sub_1B8DFD8D4();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  v1 = (void *)objc_opt_self();
  sub_1B8DFDBBC();
  swift_beginAccess();
  sub_1B8DFD3AC();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  v2 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_logInfo_, v2, 0xD000000000000019);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8D8DEC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1B8DFDD00();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1B8DFDCF4();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1B8D9D154(a1, &qword_1ED36F320);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1B8DFDCB8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

void sub_1B8D8E028(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t inited;
  id v22;
  void *v23;
  void *v24;
  char *v25;
  unint64_t *v26;
  uint64_t v27;
  void (*v28)(char *);
  unint64_t v29;
  unint64_t v30;

  v5 = v4;
  v28 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)objc_opt_self();
  v29 = 0;
  v30 = 0xE000000000000000;
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  v29 = 0xD000000000000020;
  v30 = 0x80000001B8E06320;
  sub_1B8DFDBBC();
  v13 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_logInfo_, v13);

  v14 = sub_1B8D8ECA4(a1, a2);
  if (v14)
  {
    v15 = v14;
    v16 = sub_1B8DFDD00();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v11, 1, 1, v16);
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = 0;
    v17[3] = 0;
    v17[4] = v15;
    v17[5] = a1;
    v17[6] = a2;
    v17[7] = v5;
    v17[8] = v28;
    v17[9] = a4;
    sub_1B8DFD3AC();
    v18 = v5;
    sub_1B8DFD22C();
    sub_1B8D8DEC0((uint64_t)v11, (uint64_t)&unk_1EF1E13D0, (uint64_t)v17);
    swift_release();
  }
  else
  {
    v29 = 0;
    v30 = 0xE000000000000000;
    sub_1B8DFDEF8();
    swift_bridgeObjectRelease();
    v29 = 0xD000000000000028;
    v30 = 0x80000001B8E06350;
    sub_1B8DFDBBC();
    v20 = v29;
    v19 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F288);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B8DFF650;
    *(_QWORD *)(inited + 32) = 0xD000000000000010;
    *(_QWORD *)(inited + 40) = 0x80000001B8E06270;
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = v20;
    *(_QWORD *)(inited + 56) = v19;
    sub_1B8DFD3AC();
    sub_1B8D8C4F4(inited);
    v22 = objc_allocWithZone((Class)type metadata accessor for MTSessionError());
    v23 = (void *)sub_1B8DFDB5C();
    v24 = (void *)sub_1B8DFDA60();
    swift_bridgeObjectRelease();
    v25 = (char *)objc_msgSend(v22, sel_initWithDomain_code_userInfo_, v23, 0, v24);

    v26 = (unint64_t *)&v25[OBJC_IVAR____TtC18MobileTimerSupport14MTSessionError_descriptionString];
    *v26 = v20;
    v26[1] = v19;
    swift_bridgeObjectRelease();
    v28(v25);

  }
}

uint64_t sub_1B8D8E318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;

  v8[13] = a8;
  v8[14] = v11;
  v8[11] = a6;
  v8[12] = a7;
  v8[9] = a4;
  v8[10] = a5;
  v9 = sub_1B8DFD91C();
  v8[15] = v9;
  v8[16] = *(_QWORD *)(v9 - 8);
  v8[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B8D8E384()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  NSObject *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t result;
  uint64_t v14;

  v2 = v0[16];
  v1 = v0[17];
  v14 = v0[15];
  v3 = v0[11];
  v4 = (char *)v0[12];
  v5 = v0[10];
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  sub_1B8DFD8D4();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  v6 = (void *)objc_opt_self();
  sub_1B8DFDBBC();
  sub_1B8DFDBBC();
  v7 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_logInfo_, v7);

  v0[8] = 0;
  sub_1B8DFD910();
  sub_1B8DFD8E0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v14);
  v8 = *(NSObject **)&v4[OBJC_IVAR____TtC18MobileTimerSupport23MTTimerSessionsProvider_serializerQueue];
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v4;
  v9[3] = v5;
  v9[4] = v3;
  v10 = swift_allocObject();
  v0[2] = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v10 + 16) = sub_1B8D9D118;
  *(_QWORD *)(v10 + 24) = v9;
  v0[6] = sub_1B8D9D2D0;
  v0[7] = v10;
  v0[3] = 1107296256;
  v0[4] = sub_1B8D8CD1C;
  v0[5] = &block_descriptor_218;
  v11 = _Block_copy(v0 + 2);
  v12 = v4;
  sub_1B8DFD3AC();
  sub_1B8DFD22C();
  swift_release();
  dispatch_sync(v8, v11);
  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v8 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    ((void (*)(_QWORD))v0[13])(0);
    swift_release();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
  return result;
}

unint64_t sub_1B8D8E608(id a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t result;
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  char isEscapingClosureAtFileLocation;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  void *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  id v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  dispatch_queue_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t aBlock;
  unint64_t v43;
  uint64_t (*v44)(uint64_t);
  void *v45;
  uint64_t (*v46)();
  uint64_t v47;

  v40 = type metadata accessor for TimerActivityAttributes(0);
  MEMORY[0x1E0C80A78](v40);
  v39 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F1E0);
  result = sub_1B8DFD8BC();
  v6 = result;
  if (result >> 62)
    goto LABEL_16;
  v7 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  v35 = a2;
  if (v7)
  {
    while (v7 >= 1)
    {
      v34 = a1;
      v8 = *(NSObject **)&v41[OBJC_IVAR____TtC18MobileTimerSupport23MTTimerSessionsProvider_serializerQueue];
      v37 = v6 & 0xC000000000000001;
      v38 = v8;
      sub_1B8DFD3AC();
      v9 = 0;
      a2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v36 = v7;
      while (1)
      {
        if (v37)
        {
          v10 = MEMORY[0x1BCCBC814](v9, v6);
        }
        else
        {
          v10 = *(_QWORD *)(v6 + 8 * v9 + 32);
          sub_1B8DFD22C();
        }
        v11 = swift_allocObject();
        v12 = v41;
        *(_QWORD *)(v11 + 16) = v41;
        *(_QWORD *)(v11 + 24) = v10;
        v13 = swift_allocObject();
        *(_QWORD *)(v13 + 16) = sub_1B8D98F0C;
        *(_QWORD *)(v13 + 24) = v11;
        v46 = sub_1B8D9D2D0;
        v47 = v13;
        aBlock = MEMORY[0x1E0C809B0];
        v43 = 1107296256;
        v44 = sub_1B8D8CD1C;
        v45 = &block_descriptor_31;
        v14 = _Block_copy(&aBlock);
        a1 = v12;
        sub_1B8DFD22C();
        sub_1B8DFD22C();
        swift_release();
        dispatch_sync(v38, v14);
        _Block_release(v14);
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((isEscapingClosureAtFileLocation & 1) != 0)
          break;
        v16 = (uint64_t)v39;
        sub_1B8DFD8C8();
        v17 = (char *)*(id *)(v16 + *(int *)(v40 + 20));
        sub_1B8D9A088(v16, type metadata accessor for TimerActivityAttributes);
        v18 = &v17[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_timerId];
        swift_beginAccess();
        v19 = *(_QWORD *)v18;
        v20 = *((_QWORD *)v18 + 1);
        sub_1B8DFD3AC();

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          a2 = sub_1B8D96914(0, a2[2] + 1, 1, a2);
        v22 = a2[2];
        v21 = a2[3];
        if (v22 >= v21 >> 1)
          a2 = sub_1B8D96914((_QWORD *)(v21 > 1), v22 + 1, 1, a2);
        ++v9;
        a2[2] = v22 + 1;
        v23 = &a2[2 * v22];
        v23[4] = v19;
        v23[5] = v20;
        swift_release();
        swift_release();
        if (v36 == v9)
        {
          swift_bridgeObjectRelease_n();
          v24 = (void *)objc_opt_self();
          aBlock = 0;
          v43 = 0xE000000000000000;
          sub_1B8DFDEF8();
          v25 = objc_msgSend(a1, sel_description);
          v26 = sub_1B8DFDB68();
          v28 = v27;

          swift_bridgeObjectRelease();
          aBlock = v26;
          v43 = v28;
          sub_1B8DFDBBC();
          v29 = sub_1B8DFD3AC();
          MEMORY[0x1BCCBC568](v29, MEMORY[0x1E0DEA968]);
          sub_1B8DFDBBC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v30 = (void *)sub_1B8DFDB5C();
          swift_bridgeObjectRelease();
          objc_msgSend(v24, sel_logInfo_, v30);

          a1 = v34;
          goto LABEL_18;
        }
      }
      __break(1u);
LABEL_16:
      sub_1B8DFD3AC();
      v7 = sub_1B8DFDFB8();
      result = swift_bridgeObjectRelease();
      v35 = a2;
      if (!v7)
        goto LABEL_17;
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    v31 = (void *)objc_opt_self();
    v32 = (void *)sub_1B8DFDB5C();
    objc_msgSend(v31, sel_logInfo_, v32);

LABEL_18:
    v33 = sub_1B8DFD3AC();
    ((void (*)(uint64_t, _QWORD))a1)(v33, 0);
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1B8D8EABC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  uint64_t v7;
  void *v8;
  void *v9;

  v5 = v2 + OBJC_IVAR____TtC18MobileTimerSupport23MTTimerSessionsProvider_activities;
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)v5 + 16))
    goto LABEL_5;
  sub_1B8DFD3AC();
  sub_1B8DFD3AC();
  sub_1B8D96EBC(a1, a2);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v8 = (void *)objc_opt_self();
    sub_1B8DFDEF8();
    swift_bridgeObjectRelease();
    sub_1B8DFDBBC();
    v9 = (void *)sub_1B8DFDB5C();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_logInfo_, v9);

    return 0;
  }
  sub_1B8DFD22C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = sub_1B8DFD8D4();
  swift_release();
  return v7;
}

uint64_t sub_1B8D8ECA4(uint64_t a1, uint64_t a2)
{
  char *v2;
  NSObject *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v12;
  _QWORD aBlock[6];
  uint64_t v14;

  v14 = 0;
  v5 = *(NSObject **)&v2[OBJC_IVAR____TtC18MobileTimerSupport23MTTimerSessionsProvider_serializerQueue];
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = &v14;
  v6[3] = v2;
  v6[4] = a1;
  v6[5] = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1B8D9D254;
  *(_QWORD *)(v7 + 24) = v6;
  aBlock[4] = sub_1B8D9D2D0;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B8D8CD1C;
  aBlock[3] = &block_descriptor_233;
  v8 = _Block_copy(aBlock);
  v9 = v2;
  sub_1B8DFD3AC();
  sub_1B8DFD22C();
  swift_release();
  dispatch_sync(v5, v8);
  _Block_release(v8);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v12 = v14;
    swift_release();
    return v12;
  }
  return result;
}

uint64_t sub_1B8D8EDF8()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t result;
  uint64_t v6;
  _QWORD aBlock[6];
  uint64_t v8;

  v8 = 0;
  v1 = *(NSObject **)(v0 + OBJC_IVAR____TtC18MobileTimerSupport23MTTimerSessionsProvider_serializerQueue);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = &v8;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1B8D98F64;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1B8D9D2D0;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B8D8CD1C;
  aBlock[3] = &block_descriptor_41;
  v4 = _Block_copy(aBlock);
  sub_1B8DFD22C();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v1 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v6 = v8;
    swift_release();
    return v6;
  }
  return result;
}

uint64_t sub_1B8D8EF5C()
{
  return sub_1B8D94790((uint64_t)&OBJC_IVAR____TtC18MobileTimerSupport23MTTimerSessionsProvider_activities, type metadata accessor for TimerActivityAttributes, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_firing);
}

uint64_t sub_1B8D8EF78(uint64_t a1, uint64_t (*a2)(_QWORD), _QWORD *a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  int64_t v14;
  uint64_t v15;
  int64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  _QWORD *v22;
  uint64_t v23;

  v22 = a3;
  v5 = a2(0);
  result = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - v7;
  v9 = 0;
  v23 = MEMORY[0x1E0DEE9D8];
  v10 = *(_QWORD *)(a1 + 64);
  v20 = a1 + 64;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  i = v12 & v10;
  v21 = (unint64_t)(v11 + 63) >> 6;
  if ((v12 & v10) != 0)
    goto LABEL_6;
LABEL_7:
  v14 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v14 < v21)
    {
      v15 = *(_QWORD *)(v20 + 8 * v14);
      ++v9;
      if (v15)
        goto LABEL_22;
      v9 = v14 + 1;
      if (v14 + 1 >= v21)
        goto LABEL_26;
      v15 = *(_QWORD *)(v20 + 8 * v9);
      if (v15)
        goto LABEL_22;
      v9 = v14 + 2;
      if (v14 + 2 >= v21)
        goto LABEL_26;
      v15 = *(_QWORD *)(v20 + 8 * v9);
      if (v15)
        goto LABEL_22;
      v9 = v14 + 3;
      if (v14 + 3 >= v21)
        goto LABEL_26;
      v15 = *(_QWORD *)(v20 + 8 * v9);
      if (v15)
      {
LABEL_22:
        for (i = (v15 - 1) & v15; ; i &= i - 1)
        {
          sub_1B8DFD22C();
          sub_1B8DFD8C8();
          v17 = (char *)*(id *)&v8[*(int *)(v5 + 20)];
          sub_1B8D9A088((uint64_t)v8, a2);
          v18 = &v17[*v22];
          swift_beginAccess();
          LODWORD(v18) = *v18;

          if ((_DWORD)v18 == 1)
          {
            sub_1B8DFDF34();
            sub_1B8DFDF4C();
            sub_1B8DFDF58();
            result = sub_1B8DFDF40();
            if (!i)
              goto LABEL_7;
          }
          else
          {
            result = swift_release();
            if (!i)
              goto LABEL_7;
          }
LABEL_6:
          ;
        }
      }
      v16 = v14 + 4;
      if (v16 < v21)
      {
        v15 = *(_QWORD *)(v20 + 8 * v16);
        if (v15)
        {
          v9 = v16;
          goto LABEL_22;
        }
        while (1)
        {
          v9 = v16 + 1;
          if (__OFADD__(v16, 1))
            goto LABEL_28;
          if (v9 >= v21)
            break;
          v15 = *(_QWORD *)(v20 + 8 * v9);
          ++v16;
          if (v15)
            goto LABEL_22;
        }
      }
    }
LABEL_26:
    swift_release();
    return v23;
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

id MTTimerSessionsProvider.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  char *v8;
  objc_class *v9;
  _QWORD v11[2];
  uint64_t v12;
  objc_super v13;
  uint64_t v14;

  v1 = sub_1B8DFDDB4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFDDA8();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v5);
  v7 = sub_1B8DFDA30();
  MEMORY[0x1E0C80A78](v7);
  *(_QWORD *)&v0[OBJC_IVAR____TtC18MobileTimerSupport23MTTimerSessionsProvider_activities] = MEMORY[0x1E0DEE9E0];
  v12 = OBJC_IVAR____TtC18MobileTimerSupport23MTTimerSessionsProvider_serializerQueue;
  v11[1] = sub_1B8D98F94();
  v8 = v0;
  sub_1B8DFDA24();
  v14 = MEMORY[0x1E0DEE9D8];
  sub_1B8D98D04((unint64_t *)&unk_1ED36F830, 255, v6, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F810);
  sub_1B8D98FD0();
  sub_1B8DFDE80();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF8D0], v1);
  *(_QWORD *)&v0[v12] = sub_1B8DFDDE4();

  v9 = (objc_class *)type metadata accessor for MTTimerSessionsProvider();
  v13.receiver = v8;
  v13.super_class = v9;
  return objc_msgSendSuper2(&v13, sel_init);
}

void sub_1B8D8F418()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

}

id MTTimerSessionsProvider.__deallocating_deinit(uint64_t a1)
{
  return sub_1B8D8F450(a1, type metadata accessor for MTTimerSessionsProvider);
}

id sub_1B8D8F450(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t static TimerActivityAttributes.version.getter()
{
  swift_beginAccess();
  return qword_1EF1E1390;
}

uint64_t static TimerActivityAttributes.version.setter(uint64_t a1)
{
  uint64_t result;

  result = swift_beginAccess();
  qword_1EF1E1390 = a1;
  return result;
}

uint64_t (*static TimerActivityAttributes.version.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t (*TimerActivityAttributes.estimatedEndDate.modify())()
{
  return GEOLocationCoordinate2DMake;
}

id TimerActivityAttributes.context.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for TimerActivityAttributes(0) + 20));
}

void TimerActivityAttributes.context.setter(uint64_t a1)
{
  sub_1B8D94DC4(a1, type metadata accessor for TimerActivityAttributes);
}

uint64_t (*TimerActivityAttributes.context.modify())()
{
  type metadata accessor for TimerActivityAttributes(0);
  return GEOLocationCoordinate2DMake;
}

uint64_t sub_1B8D8F5EC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x747865746E6F63;
  else
    return 0xD000000000000010;
}

BOOL sub_1B8D8F628(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1B8D8F644()
{
  return sub_1B8DFE168();
}

uint64_t sub_1B8D8F670()
{
  char *v0;

  return sub_1B8D8F5EC(*v0);
}

uint64_t sub_1B8D8F678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B8D9C704(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B8D8F69C()
{
  return 0;
}

void sub_1B8D8F6A8(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1B8D8F6B4()
{
  sub_1B8D99060();
  return sub_1B8DFE1E0();
}

uint64_t sub_1B8D8F6DC()
{
  sub_1B8D99060();
  return sub_1B8DFE1EC();
}

uint64_t TimerActivityAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F250);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8D99060();
  sub_1B8DFE1A4();
  v12 = 0;
  sub_1B8DFD748();
  sub_1B8D98D04(&qword_1ED36F1D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1B8DFE09C();
  if (!v2)
  {
    v11 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for TimerActivityAttributes(0) + 20));
    v10[15] = 1;
    type metadata accessor for TimerContext(0);
    sub_1B8D98D04(&qword_1ED36F1F8, 255, type metadata accessor for TimerContext, (uint64_t)&protocol conformance descriptor for TimerContext);
    sub_1B8DFE09C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t TimerActivityAttributes.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  v17 = a2;
  v4 = sub_1B8DFD748();
  v21 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v18 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F768);
  v6 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TimerActivityAttributes(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8DFD73C();
  v12 = a1[3];
  v20 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1B8D99060();
  sub_1B8DFE198();
  if (v2)
  {
    v15 = v21;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v11, v4);
  }
  else
  {
    v13 = v6;
    v24 = 0;
    sub_1B8D98D04(&qword_1ED36F598, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v14 = v18;
    sub_1B8DFE054();
    (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v11, v14, v4);
    type metadata accessor for TimerContext(0);
    v23 = 1;
    sub_1B8D98D04(&qword_1ED36F688, 255, type metadata accessor for TimerContext, (uint64_t)&protocol conformance descriptor for TimerContext);
    sub_1B8DFE054();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v19);
    *(_QWORD *)&v11[*(int *)(v9 + 20)] = v22;
    sub_1B8D9A42C((uint64_t)v11, v17, type metadata accessor for TimerActivityAttributes);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    return sub_1B8D9A088((uint64_t)v11, type metadata accessor for TimerActivityAttributes);
  }
}

uint64_t sub_1B8D8FB40@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TimerActivityAttributes.init(from:)(a1, a2);
}

uint64_t sub_1B8D8FB54(_QWORD *a1)
{
  return TimerActivityAttributes.encode(to:)(a1);
}

uint64_t sub_1B8D8FB68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_state;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1B8D8FBAC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_state);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1B8D8FBF4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B8D8FC38()
{
  return sub_1B8D9541C(&OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_timerId);
}

uint64_t sub_1B8D8FC44(uint64_t a1, uint64_t a2)
{
  return sub_1B8D95478(a1, a2, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_timerId);
}

uint64_t (*sub_1B8D8FC50())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double sub_1B8D8FC94()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_duration;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1B8D8FCD8(double a1)
{
  uint64_t v1;
  double *v3;
  uint64_t result;

  v3 = (double *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_duration);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1B8D8FD28())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double sub_1B8D8FD6C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_remainingTime;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1B8D8FDB0(double a1)
{
  uint64_t v1;
  double *v3;
  uint64_t result;

  v3 = (double *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_remainingTime);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1B8D8FE00())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B8D8FE44@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8D8FF68(&OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_firedDate, a1);
}

uint64_t sub_1B8D8FE50(uint64_t a1)
{
  return sub_1B8D90024(a1, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_firedDate);
}

uint64_t (*sub_1B8D8FE5C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B8D8FEA0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8D9D288(a1, (uint64_t)v10, (uint64_t *)&unk_1ED36F800);
  v11 = *a2 + *a5;
  swift_beginAccess();
  sub_1B8D990C4((uint64_t)v10, v11);
  return swift_endAccess();
}

uint64_t sub_1B8D8FF5C@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8D8FF68(&OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_fireDate, a1);
}

uint64_t sub_1B8D8FF68@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *a1;
  swift_beginAccess();
  return sub_1B8D9D288(v4, a2, (uint64_t *)&unk_1ED36F800);
}

uint64_t sub_1B8D8FFBC(uint64_t a1)
{
  return sub_1B8D90024(a1, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_fireDate);
}

uint64_t (*sub_1B8D8FFC8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B8D9000C@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8D8FF68(&OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_dismissedDate, a1);
}

uint64_t sub_1B8D90018(uint64_t a1)
{
  return sub_1B8D90024(a1, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_dismissedDate);
}

uint64_t sub_1B8D90024(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *a2;
  swift_beginAccess();
  sub_1B8D990C4(a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1B8D90078())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B8D900BC()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_firing);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1B8D90100(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_firing);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1B8D90148())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B8D9018C()
{
  return sub_1B8D9541C(&OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_title);
}

uint64_t sub_1B8D90198(uint64_t a1, uint64_t a2)
{
  return sub_1B8D95478(a1, a2, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_title);
}

uint64_t (*sub_1B8D901A4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id TimerContext.__allocating_init(state:timerId:duration:remainingTime:firing:fireDate:title:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  objc_class *v9;
  id v19;

  v19 = objc_allocWithZone(v9);
  return TimerContext.init(state:timerId:duration:remainingTime:firing:fireDate:title:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

id TimerContext.init(state:timerId:duration:remainingTime:firing:fireDate:title:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  _BYTE *v9;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  char *v24;
  id v25;
  objc_super v28;

  v18 = &v9[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_firedDate];
  v19 = sub_1B8DFD748();
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v18, 1, 1, v19);
  v21 = (uint64_t)&v9[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_fireDate];
  v20(&v9[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_fireDate], 1, 1, v19);
  v20(&v9[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_dismissedDate], 1, 1, v19);
  *(_QWORD *)&v9[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_state] = a1;
  v22 = &v9[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_timerId];
  *v22 = a2;
  v22[1] = a3;
  *(double *)&v9[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_duration] = a8;
  *(double *)&v9[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_remainingTime] = a9;
  v9[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_firing] = a4;
  swift_beginAccess();
  v23 = v9;
  sub_1B8D9910C(a5, v21);
  swift_endAccess();
  v24 = &v23[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_title];
  *(_QWORD *)v24 = a6;
  *((_QWORD *)v24 + 1) = a7;

  v28.receiver = v23;
  v28.super_class = (Class)type metadata accessor for TimerContext(0);
  v25 = objc_msgSendSuper2(&v28, sel_init);
  sub_1B8D9D154(a5, (uint64_t *)&unk_1ED36F800);
  return v25;
}

id sub_1B8D90538()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  id v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1B8DFD748();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = objc_allocWithZone((Class)type metadata accessor for TimerContext(0));
  return TimerContext.init(state:timerId:duration:remainingTime:firing:fireDate:title:)(0, 875770417, 0xE400000000000000, 0, (uint64_t)v2, 6513249, 0xE300000000000000, 60.0, 5.0);
}

uint64_t sub_1B8D90600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[24];
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = 0;
  v13 = 0xE000000000000000;
  sub_1B8DFDEF8();
  v14 = v12;
  v15 = v13;
  sub_1B8DFDBBC();
  swift_beginAccess();
  sub_1B8DFD3AC();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  v5 = (uint64_t *)(v0 + OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_state);
  swift_beginAccess();
  v11 = *v5;
  sub_1B8DFDF94();
  sub_1B8DFDBBC();
  swift_beginAccess();
  sub_1B8DFDD78();
  sub_1B8DFDBBC();
  swift_beginAccess();
  sub_1B8DFDD78();
  sub_1B8DFDBBC();
  v6 = v1 + OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_fireDate;
  swift_beginAccess();
  sub_1B8D9D288(v6, (uint64_t)v4, (uint64_t *)&unk_1ED36F800);
  sub_1B8DFDF94();
  sub_1B8D9D154((uint64_t)v4, (uint64_t *)&unk_1ED36F800);
  sub_1B8DFDBBC();
  v7 = v1 + OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_firedDate;
  swift_beginAccess();
  sub_1B8D9D288(v7, (uint64_t)v4, (uint64_t *)&unk_1ED36F800);
  sub_1B8DFDF94();
  sub_1B8D9D154((uint64_t)v4, (uint64_t *)&unk_1ED36F800);
  sub_1B8DFDBBC();
  swift_beginAccess();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  v8 = v1 + OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_dismissedDate;
  swift_beginAccess();
  sub_1B8D9D288(v8, (uint64_t)v4, (uint64_t *)&unk_1ED36F800);
  sub_1B8DFDF94();
  sub_1B8D9D154((uint64_t)v4, (uint64_t *)&unk_1ED36F800);
  return v14;
}

id TimerContext.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void TimerContext.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1B8D90A84(char a1)
{
  return *(_QWORD *)&aState_3[8 * a1];
}

BOOL sub_1B8D90AA4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1B8D90AB8()
{
  char *v0;

  return sub_1B8D90A84(*v0);
}

uint64_t sub_1B8D90AC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B8D99AE4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1B8D90AE4(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1B8D90AF0()
{
  sub_1B8D99154();
  return sub_1B8DFE1E0();
}

uint64_t sub_1B8D90B18()
{
  sub_1B8D99154();
  return sub_1B8DFE1EC();
}

id TimerContext.__deallocating_deinit()
{
  return sub_1B8D8F450(0, (uint64_t (*)(void))type metadata accessor for TimerContext);
}

uint64_t sub_1B8D90BD4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  uint64_t v39;
  char v40;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  v5 = MEMORY[0x1E0C80A78](v4);
  v30 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v28 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F258);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8D99154();
  sub_1B8DFE1A4();
  v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_state);
  swift_beginAccess();
  v39 = *v16;
  v38 = 0;
  sub_1B8D99198();
  v17 = v12;
  v18 = (uint64_t)v31;
  sub_1B8DFE09C();
  if (v18)
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v31 = v11;
  v29 = v9;
  v20 = v13;
  v21 = (uint64_t)v30;
  swift_beginAccess();
  v38 = 1;
  sub_1B8DFD3AC();
  sub_1B8DFE06C();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v37 = 2;
  sub_1B8DFE084();
  swift_beginAccess();
  v36 = 3;
  sub_1B8DFE084();
  v22 = v2 + OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_firedDate;
  swift_beginAccess();
  v23 = (uint64_t)v31;
  sub_1B8D9D288(v22, (uint64_t)v31, (uint64_t *)&unk_1ED36F800);
  v35 = 4;
  v24 = sub_1B8DFD748();
  sub_1B8D98D04(&qword_1ED36F1D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1B8DFE060();
  v28 = v24;
  sub_1B8D9D154(v23, (uint64_t *)&unk_1ED36F800);
  v31 = (char *)v2;
  v25 = v2 + OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_fireDate;
  swift_beginAccess();
  v26 = (uint64_t)v29;
  sub_1B8D9D288(v25, (uint64_t)v29, (uint64_t *)&unk_1ED36F800);
  v34 = 5;
  sub_1B8DFE060();
  sub_1B8D9D154(v26, (uint64_t *)&unk_1ED36F800);
  v27 = (uint64_t)&v31[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_dismissedDate];
  swift_beginAccess();
  sub_1B8D9D288(v27, v21, (uint64_t *)&unk_1ED36F800);
  v33 = 6;
  sub_1B8DFE060();
  sub_1B8D9D154(v21, (uint64_t *)&unk_1ED36F800);
  swift_beginAccess();
  v32 = 7;
  sub_1B8DFE078();
  swift_beginAccess();
  v40 = 8;
  sub_1B8DFD3AC();
  sub_1B8DFE06C();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v17);
  return swift_bridgeObjectRelease();
}

void *TimerContext.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return TimerContext.init(from:)(a1);
}

void *TimerContext.init(from:)(_QWORD *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(void);
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  objc_class *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  objc_super v52;
  uint64_t v53;
  char v54;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  v5 = MEMORY[0x1E0C80A78](v4);
  v42 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v43 = (char *)&v41 - v8;
  MEMORY[0x1E0C80A78](v7);
  v44 = (char *)&v41 - v9;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F770);
  v10 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &v1[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_firedDate];
  v14 = sub_1B8DFD748();
  v15 = *(void (**)(void))(*(_QWORD *)(v14 - 8) + 56);
  v50 = (uint64_t)v13;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v15)(v13, 1, 1, v14);
  v49 = &v2[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_fireDate];
  v15();
  v47 = &v2[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_dismissedDate];
  v15();
  v16 = a1[3];
  v48 = a1;
  v17 = __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1B8D99154();
  v18 = v2;
  v46 = v12;
  v19 = v51;
  sub_1B8DFE198();
  if (v19)
  {
    v20 = v50;
    v23 = (uint64_t)v49;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
    v24 = (uint64_t)v47;
    sub_1B8D9D154(v20, (uint64_t *)&unk_1ED36F800);
    sub_1B8D9D154(v23, (uint64_t *)&unk_1ED36F800);
    sub_1B8D9D154(v24, (uint64_t *)&unk_1ED36F800);

    type metadata accessor for TimerContext(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v21 = (uint64_t)v44;
    v54 = 0;
    sub_1B8D991DC();
    sub_1B8DFE054();
    v22 = v50;
    *(_QWORD *)&v18[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_state] = v53;
    LOBYTE(v53) = 1;
    v26 = sub_1B8DFE024();
    v27 = (uint64_t)v49;
    v28 = (uint64_t *)&v18[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_timerId];
    *v28 = v26;
    v28[1] = v29;
    LOBYTE(v53) = 2;
    sub_1B8DFE03C();
    *(_QWORD *)&v18[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_duration] = v30;
    LOBYTE(v53) = 3;
    sub_1B8DFE03C();
    *(_QWORD *)&v18[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_remainingTime] = v31;
    LOBYTE(v53) = 4;
    sub_1B8D98D04(&qword_1ED36F598, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    sub_1B8DFE018();
    v51 = v10;
    swift_beginAccess();
    sub_1B8D990C4(v21, v22);
    swift_endAccess();
    LOBYTE(v53) = 5;
    v32 = (uint64_t)v43;
    sub_1B8DFE018();
    swift_beginAccess();
    sub_1B8D990C4(v32, v27);
    swift_endAccess();
    LOBYTE(v53) = 6;
    v33 = (uint64_t)v42;
    sub_1B8DFE018();
    v34 = (uint64_t)v47;
    swift_beginAccess();
    sub_1B8D990C4(v33, v34);
    swift_endAccess();
    LOBYTE(v53) = 7;
    v35 = sub_1B8DFE030();
    v36 = (uint64_t)v48;
    v18[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_firing] = v35 & 1;
    LOBYTE(v53) = 8;
    v37 = sub_1B8DFE024();
    v38 = (uint64_t *)&v18[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_title];
    *v38 = v37;
    v38[1] = v39;

    v40 = (objc_class *)type metadata accessor for TimerContext(0);
    v52.receiver = v18;
    v52.super_class = v40;
    v17 = objc_msgSendSuper2(&v52, sel_init);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v46, v45);
    __swift_destroy_boxed_opaque_existential_1(v36);
  }
  return v17;
}

uint64_t sub_1B8D91724@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B8D96698(a1, 0, type metadata accessor for TimerContext, (uint64_t (*)(uint64_t))TimerContext.init(from:), a2);
}

uint64_t sub_1B8D9174C(_QWORD *a1)
{
  return sub_1B8D90BD4(a1);
}

unint64_t TimerState.init(rawValue:)(unint64_t a1)
{
  return sub_1B8D99E70(a1);
}

uint64_t sub_1B8D91788()
{
  sub_1B8DFE15C();
  sub_1B8DFE168();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8D917CC()
{
  return sub_1B8DFE168();
}

uint64_t sub_1B8D917F4()
{
  sub_1B8DFE15C();
  sub_1B8DFE168();
  return sub_1B8DFE18C();
}

unint64_t sub_1B8D91834@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_1B8D99E70(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1B8D91864()
{
  sub_1B8D9CDA8();
  return sub_1B8DFDC34();
}

uint64_t sub_1B8D918C0()
{
  sub_1B8D9CDA8();
  return sub_1B8DFDC28();
}

id MTSessionError.__allocating_init(domain:code:userInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  objc_class *v5;
  void *v8;
  void *v9;
  id v10;

  v5 = v4;
  v8 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v9 = (void *)sub_1B8DFDA60();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  v10 = objc_msgSend(objc_allocWithZone(v5), sel_initWithDomain_code_userInfo_, v8, a3, v9);

  return v10;
}

id MTSessionError.init(domain:code:userInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v7;
  void *v8;
  void *v9;
  id v10;
  objc_super v12;

  v7 = &v4[OBJC_IVAR____TtC18MobileTimerSupport14MTSessionError_descriptionString];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v9 = (void *)sub_1B8DFDA60();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for MTSessionError();
  v10 = objc_msgSendSuper2(&v12, sel_initWithDomain_code_userInfo_, v8, a3, v9);

  return v10;
}

id MTSessionError.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id MTSessionError.init(coder:)(void *a1)
{
  char *v1;
  char *v3;
  objc_class *v4;
  id v5;
  objc_super v7;

  v3 = &v1[OBJC_IVAR____TtC18MobileTimerSupport14MTSessionError_descriptionString];
  v4 = (objc_class *)type metadata accessor for MTSessionError();
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v7.receiver = v1;
  v7.super_class = v4;
  v5 = objc_msgSendSuper2(&v7, sel_initWithCoder_, a1);

  return v5;
}

id MTSessionError.__deallocating_deinit(uint64_t a1)
{
  return sub_1B8D8F450(a1, type metadata accessor for MTSessionError);
}

uint64_t sub_1B8D91CF0()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t result;
  uint64_t v6;
  _QWORD aBlock[6];
  unsigned __int8 v8;

  v8 = 0;
  v1 = *(NSObject **)(v0 + OBJC_IVAR____TtC18MobileTimerSupport23MTAlarmSessionsProvider_serializerQueue);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = &v8;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1B8D99FD4;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1B8D9D2D0;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B8D8CD1C;
  aBlock[3] = &block_descriptor_51;
  v4 = _Block_copy(aBlock);
  sub_1B8DFD22C();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v1 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v6 = v8;
    swift_release();
    return v6;
  }
  return result;
}

uint64_t sub_1B8D91E24(BOOL *a1, uint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = sub_1B8DFD8BC();
  if (v3 >> 62)
    v4 = sub_1B8DFDFB8();
  else
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRelease();
  *a1 = v4 != 0;
  return result;
}

uint64_t sub_1B8D91EC8()
{
  char *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char *v5;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v8;
  _QWORD aBlock[6];
  uint64_t v10;

  v10 = MEMORY[0x1E0DEE9D8];
  v1 = *(NSObject **)&v0[OBJC_IVAR____TtC18MobileTimerSupport23MTAlarmSessionsProvider_serializerQueue];
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = &v10;
  *(_QWORD *)(v2 + 24) = v0;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1B8D9A028;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1B8D9D2D0;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B8D8CD1C;
  aBlock[3] = &block_descriptor_61;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  sub_1B8DFD22C();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v8 = v10;
    swift_release();
    return v8;
  }
  return result;
}

uint64_t sub_1B8D92008(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;

  swift_beginAccess();
  v2 = sub_1B8DFD3AC();
  v3 = sub_1B8DA6848(v2);
  swift_bridgeObjectRelease();
  *a1 = v3;
  return swift_bridgeObjectRelease();
}

void sub_1B8D920C8(char *a1, void (*a2)(uint64_t), uint64_t a3, int a4)
{
  char *v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(unint64_t, _QWORD, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void *v44;
  NSObject *v45;
  _QWORD *v46;
  uint64_t v47;
  void *v48;
  char *v49;
  id v50;
  uint64_t v51;
  void *v52;
  uint64_t *v53;
  char *v54;
  char *v55;
  char *v56;
  __int128 v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  void (*v61)(uint64_t);
  char *v62;
  uint64_t v63;
  int v64;
  char *v65;
  unint64_t aBlock;
  unint64_t v67;
  uint64_t (*v68)(uint64_t);
  void *v69;
  uint64_t (*v70)();
  uint64_t v71;

  v5 = v4;
  v64 = a4;
  v60 = a3;
  v61 = a2;
  v63 = type metadata accessor for AlarmActivityAttributes(0);
  MEMORY[0x1E0C80A78](v63);
  v62 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B8DFD94C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)objc_opt_self();
  aBlock = 0;
  v67 = 0xE000000000000000;
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  aBlock = 0xD00000000000001FLL;
  v67 = 0x80000001B8E06490;
  v65 = a1;
  v13 = (uint64_t *)&a1[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_alarmId];
  swift_beginAccess();
  sub_1B8DFD3AC();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  v14 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_logInfo_, v14);

  v15 = *v13;
  v16 = v13[1];
  sub_1B8DFD3AC();
  v17 = v5;
  sub_1B8D94058(v15, v16);
  v19 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v19)
  {
    aBlock = 0;
    v67 = 0xE000000000000000;
    sub_1B8DFDEF8();
    swift_bridgeObjectRelease();
    aBlock = 0xD00000000000002ALL;
    v67 = 0x80000001B8E064B0;
    sub_1B8DFD3AC();
    sub_1B8DFDBBC();
    swift_bridgeObjectRelease();
    v20 = (void *)sub_1B8DFDB5C();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_logInfo_, v20);

  }
  else
  {
    v53 = v13;
    v21 = v62;
    v54 = v17;
    v56 = v11;
    v58 = v9;
    v59 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F270);
    v22 = *(_QWORD *)(sub_1B8DFD904() - 8);
    v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    v24 = swift_allocObject();
    v57 = xmmword_1B8DFF650;
    *(_OWORD *)(v24 + 16) = xmmword_1B8DFF650;
    v25 = (_QWORD *)(v24 + v23);
    v55 = "exists for timer with id: ";
    *v25 = 0xD000000000000014;
    v25[1] = 0x80000001B8E06210;
    (*(void (**)(void))(v22 + 104))();
    v26 = &v65[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isSnoozed];
    swift_beginAccess();
    if (*v26 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F278);
      v27 = sub_1B8DFD934();
      v28 = *(_QWORD *)(v27 - 8);
      v29 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
      v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = v57;
      (*(void (**)(unint64_t, _QWORD, uint64_t))(v28 + 104))(v30 + v29, *MEMORY[0x1E0C8FA48], v27);
    }
    else
    {
      v30 = MEMORY[0x1E0DEE9D8];
    }
    v31 = v8;
    v32 = (uint64_t)v21;
    v62 = (char *)v24;
    if ((v64 & 1) != 0)
    {
      v33 = objc_msgSend(v59, sel_mtSBUIIsSystemApertureEnabled);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F278);
      v34 = sub_1B8DFD934();
      v35 = *(_QWORD *)(v34 - 8);
      v36 = *(_QWORD *)(v35 + 72);
      v37 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
      v38 = swift_allocObject();
      if ((v33 & 1) != 0)
      {
        *(_OWORD *)(v38 + 16) = xmmword_1B8E00210;
        v39 = v38 + v37;
        v40 = *(void (**)(unint64_t, _QWORD, uint64_t))(v35 + 104);
        v40(v39, *MEMORY[0x1E0C8FA40], v34);
        v40(v39 + v36, *MEMORY[0x1E0C8FA48], v34);
      }
      else
      {
        *(_OWORD *)(v38 + 16) = v57;
        (*(void (**)(unint64_t, _QWORD, uint64_t))(v35 + 104))(v38 + v37, *MEMORY[0x1E0C8FA48], v34);
      }
      v31 = v8;
    }
    else
    {
      v41 = sub_1B8DFD928();
      sub_1B8DFD3AC();
      sub_1B8D986B4(v41, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1B8DFD940();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F1D8);
    v42 = v65;
    sub_1B8DFD73C();
    *(_QWORD *)(v32 + *(int *)(v63 + 20)) = v42;
    aBlock = (unint64_t)v42;
    v43 = sub_1B8DFD8EC();
    sub_1B8D9A088(v32, type metadata accessor for AlarmActivityAttributes);
    swift_bridgeObjectRelease();
    v44 = v54;
    v45 = *(NSObject **)&v54[OBJC_IVAR____TtC18MobileTimerSupport23MTAlarmSessionsProvider_serializerQueue];
    v46 = (_QWORD *)swift_allocObject();
    v46[2] = v44;
    v46[3] = v42;
    v46[4] = v43;
    v47 = swift_allocObject();
    *(_QWORD *)(v47 + 16) = sub_1B8D9A0FC;
    *(_QWORD *)(v47 + 24) = v46;
    v70 = sub_1B8D9D2D0;
    v71 = v47;
    aBlock = MEMORY[0x1E0C809B0];
    v67 = 1107296256;
    v68 = sub_1B8D8CD1C;
    v69 = &block_descriptor_71;
    v48 = _Block_copy(&aBlock);
    v49 = v42;
    v50 = v44;
    sub_1B8DFD22C();
    sub_1B8DFD22C();
    swift_release();
    dispatch_sync(v45, v48);
    _Block_release(v48);
    LOBYTE(v45) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v45 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v51 = sub_1B8DFD8D4();
      v61(v51);
      swift_bridgeObjectRelease();
      aBlock = 0;
      v67 = 0xE000000000000000;
      sub_1B8DFDEF8();
      swift_bridgeObjectRelease();
      aBlock = 0xD000000000000019;
      v67 = 0x80000001B8E06290;
      sub_1B8DFD8D4();
      sub_1B8DFDBBC();
      swift_bridgeObjectRelease();
      sub_1B8DFDBBC();
      sub_1B8DFD3AC();
      sub_1B8DFDBBC();
      swift_bridgeObjectRelease();
      v52 = (void *)sub_1B8DFDB5C();
      swift_bridgeObjectRelease();
      objc_msgSend(v59, sel_logInfo_, v52);

      swift_release();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v56, v31);
      swift_release();
    }
  }
}

uint64_t sub_1B8D92BD0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _QWORD *a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v16;

  v10 = (uint64_t *)(a2 + *a4);
  swift_beginAccess();
  v12 = *v10;
  v11 = v10[1];
  v13 = (uint64_t *)(a1 + *a5);
  swift_beginAccess();
  sub_1B8DFD3AC();
  sub_1B8DFD22C();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v13;
  *v13 = 0x8000000000000000;
  a6(a3, v12, v11, isUniquelyReferenced_nonNull_native);
  *v13 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

void sub_1B8D92CC4(void *a1, int a2, void *a3, void *aBlock, uint64_t a5, uint64_t a6, void (*a7)(id, uint64_t, _QWORD *, uint64_t))
{
  void *v12;
  id v13;
  id v14;
  _QWORD v15[4];

  v12 = _Block_copy(aBlock);
  v15[2] = v12;
  v13 = a3;
  v14 = a1;
  a7(v13, a6, v15, a5);
  _Block_release(v12);

}

void sub_1B8D92D50(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  void *v17;
  uint64_t v18;
  _QWORD v19[4];
  unint64_t v20;
  unint64_t v21;

  v19[0] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)objc_opt_self();
  v19[1] = 0;
  v19[2] = 0xE000000000000000;
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  v20 = 0xD00000000000001FLL;
  v21 = 0x80000001B8E064E0;
  v9 = (uint64_t *)&a1[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_alarmId];
  swift_beginAccess();
  sub_1B8DFD3AC();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  v10 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_logInfo_, v10);

  v11 = *v9;
  v12 = v9[1];
  sub_1B8DFD3AC();
  v13 = sub_1B8D94398(v11, v12);
  swift_bridgeObjectRelease();
  if (v13)
  {
    v14 = sub_1B8DFDD00();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 1, 1, v14);
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = 0;
    v15[3] = 0;
    v15[4] = v13;
    v15[5] = a1;
    v15[6] = v19[0];
    v15[7] = a3;
    v16 = a1;
    sub_1B8DFD22C();
    sub_1B8D8DEC0((uint64_t)v7, (uint64_t)&unk_1EF1E1418, (uint64_t)v15);
    swift_release();
  }
  else
  {
    v20 = 0;
    v21 = 0xE000000000000000;
    sub_1B8DFDEF8();
    sub_1B8DFDBBC();
    sub_1B8DFD3AC();
    sub_1B8DFDBBC();
    swift_bridgeObjectRelease();
    sub_1B8DFDBBC();
    v17 = (void *)sub_1B8DFDB5C();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_logInfo_, v17);

    MEMORY[0x1E0C80A78](v18);
    v19[-2] = v19[0];
    v19[-1] = a3;
    sub_1B8D920C8(a1, (void (*)(uint64_t))sub_1B8D98DAC, (uint64_t)&v19[-4], 0);
  }
}

uint64_t sub_1B8D93020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *);

  v7[8] = a6;
  v7[9] = a7;
  v10 = (uint64_t (*)(_QWORD *))((int)*MEMORY[0x1E0C8F5B0] + MEMORY[0x1E0C8F5B0]);
  v7[5] = a5;
  v7[6] = a4;
  v7[7] = a5;
  v8 = (_QWORD *)swift_task_alloc();
  v7[10] = v8;
  *v8 = v7;
  v8[1] = sub_1B8D93094;
  return v10(v7 + 5);
}

uint64_t sub_1B8D93094()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8D930E8()
{
  uint64_t v0;
  void *v1;
  void *v2;

  (*(void (**)(_QWORD))(v0 + 64))(0);
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  sub_1B8DFD8D4();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  v1 = (void *)objc_opt_self();
  sub_1B8DFDBBC();
  swift_beginAccess();
  sub_1B8DFD3AC();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  v2 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_logInfo_, v2, 0xD000000000000019);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1B8D93250(void *a1, int a2, void *a3, void *aBlock, uint64_t a5, uint64_t a6, void (*a7)(id, uint64_t, uint64_t))
{
  void *v11;
  uint64_t v12;
  id v13;
  id v14;

  v11 = _Block_copy(aBlock);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v11;
  v14 = a3;
  v13 = a1;
  a7(v14, a6, v12);
  swift_release();

}

void sub_1B8D932EC(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t inited;
  id v22;
  void *v23;
  void *v24;
  char *v25;
  unint64_t *v26;
  uint64_t v27;
  void (*v28)(char *);
  unint64_t v29;
  unint64_t v30;

  v5 = v4;
  v28 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)objc_opt_self();
  v29 = 0;
  v30 = 0xE000000000000000;
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  v29 = 0xD000000000000020;
  v30 = 0x80000001B8E06530;
  sub_1B8DFDBBC();
  v13 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_logInfo_, v13);

  v14 = sub_1B8D94398(a1, a2);
  if (v14)
  {
    v15 = v14;
    v16 = sub_1B8DFDD00();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v11, 1, 1, v16);
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = 0;
    v17[3] = 0;
    v17[4] = v15;
    v17[5] = a1;
    v17[6] = a2;
    v17[7] = v5;
    v17[8] = v28;
    v17[9] = a4;
    sub_1B8DFD3AC();
    v18 = v5;
    sub_1B8DFD22C();
    sub_1B8D8DEC0((uint64_t)v11, (uint64_t)&unk_1EF1E1428, (uint64_t)v17);
    swift_release();
  }
  else
  {
    v29 = 0;
    v30 = 0xE000000000000000;
    sub_1B8DFDEF8();
    swift_bridgeObjectRelease();
    v29 = 0xD000000000000028;
    v30 = 0x80000001B8E06560;
    sub_1B8DFDBBC();
    v20 = v29;
    v19 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F288);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B8DFF650;
    *(_QWORD *)(inited + 32) = 0xD000000000000010;
    *(_QWORD *)(inited + 40) = 0x80000001B8E06270;
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = v20;
    *(_QWORD *)(inited + 56) = v19;
    sub_1B8DFD3AC();
    sub_1B8D8C4F4(inited);
    v22 = objc_allocWithZone((Class)type metadata accessor for MTSessionError());
    v23 = (void *)sub_1B8DFDB5C();
    v24 = (void *)sub_1B8DFDA60();
    swift_bridgeObjectRelease();
    v25 = (char *)objc_msgSend(v22, sel_initWithDomain_code_userInfo_, v23, 0, v24);

    v26 = (unint64_t *)&v25[OBJC_IVAR____TtC18MobileTimerSupport14MTSessionError_descriptionString];
    *v26 = v20;
    v26[1] = v19;
    swift_bridgeObjectRelease();
    v28(v25);

  }
}

uint64_t sub_1B8D935DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;

  v8[13] = a8;
  v8[14] = v11;
  v8[11] = a6;
  v8[12] = a7;
  v8[9] = a4;
  v8[10] = a5;
  v9 = sub_1B8DFD91C();
  v8[15] = v9;
  v8[16] = *(_QWORD *)(v9 - 8);
  v8[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B8D93648()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  NSObject *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t result;
  uint64_t v14;

  v2 = v0[16];
  v1 = v0[17];
  v14 = v0[15];
  v3 = v0[11];
  v4 = (char *)v0[12];
  v5 = v0[10];
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  sub_1B8DFD8D4();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  v6 = (void *)objc_opt_self();
  sub_1B8DFDBBC();
  sub_1B8DFDBBC();
  v7 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_logInfo_, v7);

  v0[8] = 0;
  sub_1B8DFD910();
  sub_1B8DFD8E0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v14);
  v8 = *(NSObject **)&v4[OBJC_IVAR____TtC18MobileTimerSupport23MTAlarmSessionsProvider_serializerQueue];
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v4;
  v9[3] = v5;
  v9[4] = v3;
  v10 = swift_allocObject();
  v0[2] = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v10 + 16) = sub_1B8D9D064;
  *(_QWORD *)(v10 + 24) = v9;
  v0[6] = sub_1B8D9D2D0;
  v0[7] = v10;
  v0[3] = 1107296256;
  v0[4] = sub_1B8D8CD1C;
  v0[5] = &block_descriptor_197;
  v11 = _Block_copy(v0 + 2);
  v12 = v4;
  sub_1B8DFD3AC();
  sub_1B8DFD22C();
  swift_release();
  dispatch_sync(v8, v11);
  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v8 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    ((void (*)(_QWORD))v0[13])(0);
    swift_release();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
  return result;
}

uint64_t sub_1B8D938C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  swift_beginAccess();
  sub_1B8DFD3AC();
  a5(a2, a3);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1B8D93950(void *a1, int a2, int a3, void *aBlock, void (*a5)(uint64_t, uint64_t, id, void *))
{
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v7 = _Block_copy(aBlock);
  v8 = sub_1B8DFDB68();
  v10 = v9;
  _Block_copy(v7);
  v11 = a1;
  a5(v8, v10, v11, v7);
  _Block_release(v7);
  _Block_release(v7);
  swift_bridgeObjectRelease();

}

unint64_t sub_1B8D939E8(id a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t result;
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  char isEscapingClosureAtFileLocation;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  void *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  id v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  dispatch_queue_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t aBlock;
  unint64_t v43;
  uint64_t (*v44)(uint64_t);
  void *v45;
  uint64_t (*v46)();
  uint64_t v47;

  v40 = type metadata accessor for AlarmActivityAttributes(0);
  MEMORY[0x1E0C80A78](v40);
  v39 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F1D8);
  result = sub_1B8DFD8BC();
  v6 = result;
  if (result >> 62)
    goto LABEL_16;
  v7 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  v35 = a2;
  if (v7)
  {
    while (v7 >= 1)
    {
      v34 = a1;
      v8 = *(NSObject **)&v41[OBJC_IVAR____TtC18MobileTimerSupport23MTAlarmSessionsProvider_serializerQueue];
      v37 = v6 & 0xC000000000000001;
      v38 = v8;
      sub_1B8DFD3AC();
      v9 = 0;
      a2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v36 = v7;
      while (1)
      {
        if (v37)
        {
          v10 = MEMORY[0x1BCCBC814](v9, v6);
        }
        else
        {
          v10 = *(_QWORD *)(v6 + 8 * v9 + 32);
          sub_1B8DFD22C();
        }
        v11 = swift_allocObject();
        v12 = v41;
        *(_QWORD *)(v11 + 16) = v41;
        *(_QWORD *)(v11 + 24) = v10;
        v13 = swift_allocObject();
        *(_QWORD *)(v13 + 16) = sub_1B8D9A2FC;
        *(_QWORD *)(v13 + 24) = v11;
        v46 = sub_1B8D9D2D0;
        v47 = v13;
        aBlock = MEMORY[0x1E0C809B0];
        v43 = 1107296256;
        v44 = sub_1B8D8CD1C;
        v45 = &block_descriptor_89;
        v14 = _Block_copy(&aBlock);
        a1 = v12;
        sub_1B8DFD22C();
        sub_1B8DFD22C();
        swift_release();
        dispatch_sync(v38, v14);
        _Block_release(v14);
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((isEscapingClosureAtFileLocation & 1) != 0)
          break;
        v16 = (uint64_t)v39;
        sub_1B8DFD8C8();
        v17 = (char *)*(id *)(v16 + *(int *)(v40 + 20));
        sub_1B8D9A088(v16, type metadata accessor for AlarmActivityAttributes);
        v18 = &v17[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_alarmId];
        swift_beginAccess();
        v19 = *(_QWORD *)v18;
        v20 = *((_QWORD *)v18 + 1);
        sub_1B8DFD3AC();

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          a2 = sub_1B8D96914(0, a2[2] + 1, 1, a2);
        v22 = a2[2];
        v21 = a2[3];
        if (v22 >= v21 >> 1)
          a2 = sub_1B8D96914((_QWORD *)(v21 > 1), v22 + 1, 1, a2);
        ++v9;
        a2[2] = v22 + 1;
        v23 = &a2[2 * v22];
        v23[4] = v19;
        v23[5] = v20;
        swift_release();
        swift_release();
        if (v36 == v9)
        {
          swift_bridgeObjectRelease_n();
          v24 = (void *)objc_opt_self();
          aBlock = 0;
          v43 = 0xE000000000000000;
          sub_1B8DFDEF8();
          v25 = objc_msgSend(a1, sel_description);
          v26 = sub_1B8DFDB68();
          v28 = v27;

          swift_bridgeObjectRelease();
          aBlock = v26;
          v43 = v28;
          sub_1B8DFDBBC();
          v29 = sub_1B8DFD3AC();
          MEMORY[0x1BCCBC568](v29, MEMORY[0x1E0DEA968]);
          sub_1B8DFDBBC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v30 = (void *)sub_1B8DFDB5C();
          swift_bridgeObjectRelease();
          objc_msgSend(v24, sel_logInfo_, v30);

          a1 = v34;
          goto LABEL_18;
        }
      }
      __break(1u);
LABEL_16:
      sub_1B8DFD3AC();
      v7 = sub_1B8DFDFB8();
      result = swift_bridgeObjectRelease();
      v35 = a2;
      if (!v7)
        goto LABEL_17;
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    v31 = (void *)objc_opt_self();
    v32 = (void *)sub_1B8DFDB5C();
    objc_msgSend(v31, sel_logInfo_, v32);

LABEL_18:
    v33 = sub_1B8DFD3AC();
    ((void (*)(uint64_t, _QWORD))a1)(v33, 0);
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1B8D93E90(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), _QWORD *a4, _QWORD *a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;

  v12 = a3(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v22 - v13;
  sub_1B8DFD8C8();
  v15 = (char *)*(id *)&v14[*(int *)(v12 + 20)];
  sub_1B8D9A088((uint64_t)v14, a3);
  v16 = &v15[*a4];
  swift_beginAccess();
  v18 = *(_QWORD *)v16;
  v17 = *((_QWORD *)v16 + 1);
  sub_1B8DFD3AC();

  v19 = (uint64_t *)(a1 + *a5);
  swift_beginAccess();
  sub_1B8DFD22C();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23 = *v19;
  *v19 = 0x8000000000000000;
  a6(a2, v18, v17, isUniquelyReferenced_nonNull_native);
  *v19 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

void sub_1B8D93FF4(void *a1, int a2, void *aBlock, void (*a4)(void))
{
  void *v6;
  id v7;

  v6 = _Block_copy(aBlock);
  _Block_copy(v6);
  v7 = a1;
  a4();
  _Block_release(v6);
  _Block_release(v6);

}

uint64_t sub_1B8D94058(uint64_t a1, uint64_t a2)
{
  char *v2;
  NSObject *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v12;
  _QWORD v13[6];
  _QWORD v14[2];

  v14[0] = 0;
  v14[1] = 0;
  v5 = *(NSObject **)&v2[OBJC_IVAR____TtC18MobileTimerSupport23MTAlarmSessionsProvider_serializerQueue];
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v2;
  v6[3] = a1;
  v6[4] = a2;
  v6[5] = v14;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1B8D9A34C;
  *(_QWORD *)(v7 + 24) = v6;
  v13[4] = sub_1B8D9D2D0;
  v13[5] = v7;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1B8D8CD1C;
  v13[3] = &block_descriptor_99;
  v8 = _Block_copy(v13);
  v9 = v2;
  sub_1B8DFD3AC();
  sub_1B8DFD22C();
  swift_release();
  dispatch_sync(v5, v8);
  _Block_release(v8);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v12 = v14[0];
    swift_release();
    return v12;
  }
  return result;
}

void sub_1B8D941B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;

  v7 = a1 + OBJC_IVAR____TtC18MobileTimerSupport23MTAlarmSessionsProvider_activities;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v7 + 16))
  {
    sub_1B8DFD3AC();
    sub_1B8DFD3AC();
    sub_1B8D96EBC(a2, a3);
    if ((v8 & 1) != 0)
    {
      sub_1B8DFD22C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = sub_1B8DFD8D4();
      v11 = v10;
      swift_release();
      *a4 = v9;
      a4[1] = v11;
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v12 = (void *)objc_opt_self();
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  v13 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_logInfo_, v13);

}

uint64_t sub_1B8D94398(uint64_t a1, uint64_t a2)
{
  char *v2;
  NSObject *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v12;
  _QWORD aBlock[6];
  uint64_t v14;

  v14 = 0;
  v5 = *(NSObject **)&v2[OBJC_IVAR____TtC18MobileTimerSupport23MTAlarmSessionsProvider_serializerQueue];
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = &v14;
  v6[3] = v2;
  v6[4] = a1;
  v6[5] = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1B8D9D0A4;
  *(_QWORD *)(v7 + 24) = v6;
  aBlock[4] = sub_1B8D9D2D0;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B8D8CD1C;
  aBlock[3] = &block_descriptor_208;
  v8 = _Block_copy(aBlock);
  v9 = v2;
  sub_1B8DFD3AC();
  sub_1B8DFD22C();
  swift_release();
  dispatch_sync(v5, v8);
  _Block_release(v8);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v12 = v14;
    swift_release();
    return v12;
  }
  return result;
}

uint64_t sub_1B8D944EC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;

  v8 = (uint64_t *)(a2 + *a5);
  swift_beginAccess();
  v9 = *v8;
  if (*(_QWORD *)(v9 + 16))
  {
    sub_1B8DFD3AC();
    sub_1B8DFD3AC();
    v10 = sub_1B8D96EBC(a3, a4);
    if ((v11 & 1) != 0)
    {
      v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
      sub_1B8DFD22C();
    }
    else
    {
      v12 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  *a1 = v12;
  return swift_release();
}

uint64_t sub_1B8D945A4()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t result;
  uint64_t v6;
  _QWORD aBlock[6];
  uint64_t v8;

  v8 = 0;
  v1 = *(NSObject **)(v0 + OBJC_IVAR____TtC18MobileTimerSupport23MTAlarmSessionsProvider_serializerQueue);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = &v8;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1B8D9A378;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1B8D9D2D0;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B8D8CD1C;
  aBlock[3] = &block_descriptor_109;
  v4 = _Block_copy(aBlock);
  sub_1B8DFD22C();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v1 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v6 = v8;
    swift_release();
    return v6;
  }
  return result;
}

uint64_t sub_1B8D946D8(uint64_t *a1, uint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = sub_1B8DFD8BC();
  if (v3 >> 62)
    v4 = sub_1B8DFDFB8();
  else
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRelease();
  *a1 = v4;
  return result;
}

uint64_t sub_1B8D94774()
{
  return sub_1B8D94790((uint64_t)&OBJC_IVAR____TtC18MobileTimerSupport23MTAlarmSessionsProvider_activities, type metadata accessor for AlarmActivityAttributes, &OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isFiring);
}

uint64_t sub_1B8D94790(uint64_t a1, uint64_t (*a2)(_QWORD), _QWORD *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  swift_beginAccess();
  v5 = sub_1B8DFD3AC();
  v6 = sub_1B8D8EF78(v5, a2, a3);
  if (!(v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v10 = MEMORY[0x1E0DEE9D8];
    if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
    {
LABEL_12:
      v17 = *(_QWORD *)(v10 + 32);
      sub_1B8DFD3AC();
LABEL_16:
      swift_bridgeObjectRelease();
      return v17;
    }
LABEL_15:
    v17 = 0;
    goto LABEL_16;
  }
  v7 = sub_1B8DFDFB8();
  if (!v7)
    goto LABEL_14;
LABEL_3:
  v18 = MEMORY[0x1E0DEE9D8];
  result = sub_1B8D97F2C(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v9 = 0;
    v10 = v18;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
        MEMORY[0x1BCCBC814](v9, v6);
      else
        sub_1B8DFD22C();
      v11 = sub_1B8DFD8D4();
      v13 = v12;
      swift_release();
      v15 = *(_QWORD *)(v18 + 16);
      v14 = *(_QWORD *)(v18 + 24);
      if (v15 >= v14 >> 1)
        sub_1B8D97F2C(v14 > 1, v15 + 1, 1);
      ++v9;
      *(_QWORD *)(v18 + 16) = v15 + 1;
      v16 = v18 + 16 * v15;
      *(_QWORD *)(v16 + 32) = v11;
      *(_QWORD *)(v16 + 40) = v13;
    }
    while (v7 != v9);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v18 + 16))
      goto LABEL_12;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

id sub_1B8D94958(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = a1;
  a3();
  v6 = v5;

  if (v6)
  {
    v7 = (void *)sub_1B8DFDB5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  return v7;
}

id MTAlarmSessionsProvider.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  char *v8;
  objc_class *v9;
  _QWORD v11[2];
  uint64_t v12;
  objc_super v13;
  uint64_t v14;

  v1 = sub_1B8DFDDB4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFDDA8();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v5);
  v7 = sub_1B8DFDA30();
  MEMORY[0x1E0C80A78](v7);
  v12 = OBJC_IVAR____TtC18MobileTimerSupport23MTAlarmSessionsProvider_serializerQueue;
  v11[0] = sub_1B8D98F94();
  v8 = v0;
  sub_1B8DFDA24();
  v14 = MEMORY[0x1E0DEE9D8];
  sub_1B8D98D04((unint64_t *)&unk_1ED36F830, 255, v6, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F810);
  sub_1B8D98FD0();
  sub_1B8DFDE80();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF8D0], v1);
  *(_QWORD *)(v11[1] + v12) = sub_1B8DFDDE4();
  *(_QWORD *)&v8[OBJC_IVAR____TtC18MobileTimerSupport23MTAlarmSessionsProvider_activities] = MEMORY[0x1E0DEE9E0];

  v9 = (objc_class *)type metadata accessor for MTAlarmSessionsProvider();
  v13.receiver = v8;
  v13.super_class = v9;
  return objc_msgSendSuper2(&v13, sel_init);
}

uint64_t sub_1B8D94BDC()
{
  uint64_t v0;

  return swift_bridgeObjectRelease();
}

id MTAlarmSessionsProvider.__deallocating_deinit(uint64_t a1)
{
  return sub_1B8D8F450(a1, type metadata accessor for MTAlarmSessionsProvider);
}

uint64_t static AlarmActivityAttributes.version.getter()
{
  swift_beginAccess();
  return qword_1EF1E1398;
}

uint64_t static AlarmActivityAttributes.version.setter(uint64_t a1)
{
  uint64_t result;

  result = swift_beginAccess();
  qword_1EF1E1398 = a1;
  return result;
}

uint64_t (*static AlarmActivityAttributes.version.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t _s18MobileTimerSupport0B18ActivityAttributesV16estimatedEndDate10Foundation0H0Vvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1B8DFD748();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t _s18MobileTimerSupport0B18ActivityAttributesV16estimatedEndDate10Foundation0H0Vvs_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1B8DFD748();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AlarmActivityAttributes.estimatedEndDate.modify())()
{
  return GEOLocationCoordinate2DMake;
}

id AlarmActivityAttributes.context.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for AlarmActivityAttributes(0) + 20));
}

void AlarmActivityAttributes.context.setter(uint64_t a1)
{
  sub_1B8D94DC4(a1, type metadata accessor for AlarmActivityAttributes);
}

void sub_1B8D94DC4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(int *)(a2(0) + 20);

  *(_QWORD *)(v2 + v4) = a1;
}

uint64_t (*AlarmActivityAttributes.context.modify())()
{
  type metadata accessor for AlarmActivityAttributes(0);
  return GEOLocationCoordinate2DMake;
}

uint64_t sub_1B8D94E28()
{
  sub_1B8DFE15C();
  sub_1B8DFE168();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8D94E6C()
{
  sub_1B8DFE15C();
  sub_1B8DFE168();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8D94EAC()
{
  sub_1B8D9A3C8();
  return sub_1B8DFE1E0();
}

uint64_t sub_1B8D94ED4()
{
  sub_1B8D9A3C8();
  return sub_1B8DFE1EC();
}

uint64_t AlarmActivityAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F268);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8D9A3C8();
  sub_1B8DFE1A4();
  v13 = 0;
  sub_1B8DFD748();
  sub_1B8D98D04(&qword_1ED36F1D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1B8DFE09C();
  if (!v2)
  {
    v12 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for AlarmActivityAttributes(0) + 20));
    v11[15] = 1;
    type metadata accessor for AlarmContext();
    sub_1B8D98D04(&qword_1ED36F208, v9, (uint64_t (*)(uint64_t))type metadata accessor for AlarmContext, (uint64_t)&protocol conformance descriptor for AlarmContext);
    sub_1B8DFE09C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t AlarmActivityAttributes.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;

  v18 = a2;
  v4 = sub_1B8DFD748();
  v22 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v19 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F780);
  v6 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AlarmActivityAttributes(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8DFD73C();
  v12 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1B8D9A3C8();
  sub_1B8DFE198();
  if (v2)
  {
    v15 = v22;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v11, v4);
  }
  else
  {
    v13 = v6;
    v25 = 0;
    sub_1B8D98D04(&qword_1ED36F598, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v14 = v19;
    sub_1B8DFE054();
    (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v11, v14, v4);
    type metadata accessor for AlarmContext();
    v24 = 1;
    sub_1B8D98D04(&qword_1ED36F6B8, v16, (uint64_t (*)(uint64_t))type metadata accessor for AlarmContext, (uint64_t)&protocol conformance descriptor for AlarmContext);
    sub_1B8DFE054();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v20);
    *(_QWORD *)&v11[*(int *)(v9 + 20)] = v23;
    sub_1B8D9A42C((uint64_t)v11, v18, type metadata accessor for AlarmActivityAttributes);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    return sub_1B8D9A088((uint64_t)v11, type metadata accessor for AlarmActivityAttributes);
  }
}

uint64_t sub_1B8D95328@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AlarmActivityAttributes.init(from:)(a1, a2);
}

uint64_t sub_1B8D9533C(_QWORD *a1)
{
  return AlarmActivityAttributes.encode(to:)(a1);
}

uint64_t sub_1B8D95350()
{
  return sub_1B8D9541C(&OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_title);
}

uint64_t sub_1B8D9535C(uint64_t a1, uint64_t a2)
{
  return sub_1B8D95478(a1, a2, &OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_title);
}

uint64_t (*sub_1B8D95368())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B8D953AC(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a1;
  v5 = a1[1];
  v7 = (_QWORD *)(*a2 + *a5);
  swift_beginAccess();
  *v7 = v6;
  v7[1] = v5;
  sub_1B8DFD3AC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8D95410()
{
  return sub_1B8D9541C(&OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_alarmId);
}

uint64_t sub_1B8D9541C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  v3 = *v2;
  sub_1B8DFD3AC();
  return v3;
}

uint64_t sub_1B8D9546C(uint64_t a1, uint64_t a2)
{
  return sub_1B8D95478(a1, a2, &OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_alarmId);
}

uint64_t sub_1B8D95478(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)(v3 + *a3);
  swift_beginAccess();
  *v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B8D954D0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B8D95514()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_hour;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1B8D95558(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_hour);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1B8D955A0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B8D955E4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_min;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1B8D95628(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_min);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1B8D95670())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B8D956B4()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isSnoozed);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1B8D956F8(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isSnoozed);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1B8D95740())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B8D95784()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isFiring);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1B8D957C8(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isFiring);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1B8D95810())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id AlarmContext.__allocating_init(title:alarmId:hour:min:isSnoozed:isFiring:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  objc_class *v8;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;
  _QWORD *v18;
  _QWORD *v19;
  objc_super v23;

  v15 = objc_allocWithZone(v8);
  v16 = &v15[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isSnoozed];
  v15[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isSnoozed] = 0;
  v17 = &v15[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isFiring];
  v15[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isFiring] = 0;
  v18 = &v15[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_title];
  *v18 = a1;
  v18[1] = a2;
  v19 = &v15[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_alarmId];
  *v19 = a3;
  v19[1] = a4;
  *(_QWORD *)&v15[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_hour] = a5;
  *(_QWORD *)&v15[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_min] = a6;
  swift_beginAccess();
  *v16 = a7;
  swift_beginAccess();
  *v17 = a8;
  v23.receiver = v15;
  v23.super_class = v8;
  return objc_msgSendSuper2(&v23, sel_init);
}

id AlarmContext.init(title:alarmId:hour:min:isSnoozed:isFiring:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  _BYTE *v8;
  _BYTE *v11;
  _BYTE *v12;
  _QWORD *v13;
  _QWORD *v14;
  objc_super v16;

  v11 = &v8[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isSnoozed];
  v8[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isSnoozed] = 0;
  v12 = &v8[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isFiring];
  v8[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isFiring] = 0;
  v13 = &v8[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_title];
  *v13 = a1;
  v13[1] = a2;
  v14 = &v8[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_alarmId];
  *v14 = a3;
  v14[1] = a4;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_hour] = a5;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_min] = a6;
  swift_beginAccess();
  *v11 = a7;
  swift_beginAccess();
  *v12 = a8;
  v16.receiver = v8;
  v16.super_class = (Class)type metadata accessor for AlarmContext();
  return objc_msgSendSuper2(&v16, sel_init);
}

id sub_1B8D95AC0()
{
  objc_class *v0;
  _BYTE *v1;
  _BYTE *v2;
  _BYTE *v3;
  _QWORD *v4;
  _QWORD *v5;
  objc_super v7;

  v0 = (objc_class *)type metadata accessor for AlarmContext();
  v1 = objc_allocWithZone(v0);
  v2 = &v1[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isSnoozed];
  v1[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isSnoozed] = 0;
  v3 = &v1[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isFiring];
  v1[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isFiring] = 0;
  v4 = &v1[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_title];
  *v4 = 0x68636E754CLL;
  v4[1] = 0xE500000000000000;
  v5 = &v1[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_alarmId];
  *v5 = 0x706134333231;
  v5[1] = 0xE600000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_hour] = 12;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_min] = 30;
  swift_beginAccess();
  *v2 = 0;
  swift_beginAccess();
  *v3 = 0;
  v7.receiver = v1;
  v7.super_class = v0;
  return objc_msgSendSuper2(&v7, sel_init);
}

id sub_1B8D95BC8(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;

  v4 = a1;
  a3();

  v5 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B8D95C20()
{
  sub_1B8DFDEF8();
  sub_1B8DFDBBC();
  swift_beginAccess();
  sub_1B8DFD3AC();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  swift_beginAccess();
  sub_1B8DFD3AC();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  swift_beginAccess();
  sub_1B8DFE0B4();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  swift_beginAccess();
  sub_1B8DFE0B4();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  swift_beginAccess();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  swift_beginAccess();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  return 0;
}

void AlarmContext.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1B8D95F4C(char a1)
{
  return *(_QWORD *)&aTitle_2[8 * a1];
}

uint64_t sub_1B8D95F6C()
{
  char *v0;

  return sub_1B8D95F4C(*v0);
}

uint64_t sub_1B8D95F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B8D9C7F0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1B8D95F98(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1B8D95FA4()
{
  sub_1B8D9A470();
  return sub_1B8DFE1E0();
}

uint64_t sub_1B8D95FCC()
{
  sub_1B8D9A470();
  return sub_1B8DFE1EC();
}

id AlarmContext.__deallocating_deinit(uint64_t a1)
{
  return sub_1B8D8F450(a1, type metadata accessor for AlarmContext);
}

uint64_t sub_1B8D96040(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[136];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F260);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8D9A470();
  sub_1B8DFE1A4();
  swift_beginAccess();
  v8[112] = 0;
  sub_1B8DFD3AC();
  sub_1B8DFE06C();
  if (v1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v8[88] = 1;
    sub_1B8DFD3AC();
    sub_1B8DFE06C();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v8[64] = 2;
    sub_1B8DFE090();
    swift_beginAccess();
    v8[40] = 3;
    sub_1B8DFE090();
    swift_beginAccess();
    v8[16] = 4;
    sub_1B8DFE078();
    swift_beginAccess();
    v8[15] = 5;
    sub_1B8DFE078();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  }
}

void *AlarmContext.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return AlarmContext.init(from:)(a1);
}

void *AlarmContext.init(from:)(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  _BYTE *v22;
  char v23;
  objc_class *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  objc_super v29;
  char v30;
  char v31;
  uint64_t v32;

  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F778);
  v3 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = &v1[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isSnoozed];
  v1[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isSnoozed] = 0;
  v7 = &v1[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isFiring];
  v1[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isFiring] = 0;
  v8 = a1[3];
  v27 = a1;
  v9 = __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1B8D9A470();
  v28 = v1;
  v25 = v5;
  v10 = v32;
  sub_1B8DFE198();
  if (v10)
  {
    v14 = v28;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);

    type metadata accessor for AlarmContext();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v31 = 0;
    v11 = v25;
    v12 = v26;
    v13 = sub_1B8DFE024();
    v16 = v28;
    v17 = (uint64_t *)&v28[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_title];
    *v17 = v13;
    v17[1] = v18;
    v31 = 1;
    v19 = sub_1B8DFE024();
    v20 = (uint64_t *)&v16[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_alarmId];
    *v20 = v19;
    v20[1] = v21;
    v31 = 2;
    *(_QWORD *)&v16[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_hour] = sub_1B8DFE048();
    v31 = 3;
    *(_QWORD *)&v16[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_min] = sub_1B8DFE048();
    v31 = 4;
    LODWORD(v32) = sub_1B8DFE030();
    swift_beginAccess();
    *v6 = v32 & 1;
    v30 = 5;
    v22 = v7;
    v23 = sub_1B8DFE030();
    swift_beginAccess();
    *v22 = v23 & 1;

    v24 = (objc_class *)type metadata accessor for AlarmContext();
    v29.receiver = v16;
    v29.super_class = v24;
    v9 = objc_msgSendSuper2(&v29, sel_init);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  return v9;
}

uint64_t sub_1B8D96674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  return sub_1B8D96698(a1, a2, (uint64_t (*)(uint64_t))type metadata accessor for AlarmContext, (uint64_t (*)(uint64_t))AlarmContext.init(from:), a3);
}

uint64_t sub_1B8D96698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t (*a4)(uint64_t)@<X5>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  id v9;
  uint64_t result;

  v9 = objc_allocWithZone((Class)a3(a2));
  result = a4(a1);
  if (!v5)
    *a5 = result;
  return result;
}

uint64_t sub_1B8D966F0(_QWORD *a1)
{
  return sub_1B8D96040(a1);
}

char *sub_1B8D96710(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1690);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v12 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1B8D985D0(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1B8D96808(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1488);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1B8D9CA2C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1B8D96914(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F280);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1B8D99544(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B8D96A20(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E14D0);
  v10 = *(_QWORD *)(type metadata accessor for AlarmEntity() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_1B8DFDFA0();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(type metadata accessor for AlarmEntity() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1B8D9CC90(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

_QWORD *sub_1B8D96C28(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1500);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1B8D9CDEC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1B8D96D34(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36ED50);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1B8D9CED4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_1B8D96E40(char a1)
{
  uint64_t v2;

  sub_1B8DFE15C();
  sub_1B8DFDBA4();
  swift_bridgeObjectRelease();
  v2 = sub_1B8DFE18C();
  return sub_1B8D97340(a1, v2);
}

unint64_t sub_1B8D96EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B8DFE15C();
  sub_1B8DFDBA4();
  v4 = sub_1B8DFE18C();
  return sub_1B8D97450(a1, a2, v4);
}

unint64_t sub_1B8D96F20(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1B8DFDEB0();
  return sub_1B8D97530(a1, v2);
}

unint64_t sub_1B8D96F50(char a1)
{
  uint64_t v2;

  v2 = sub_1B8DF1198();
  return sub_1B8D975F4(a1, v2);
}

unint64_t sub_1B8D96F80(uint64_t a1)
{
  uint64_t v2;

  sub_1B8DFD784();
  sub_1B8D98D04((unint64_t *)&qword_1EF1E3F80, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  v2 = sub_1B8DFDAB4();
  return sub_1B8D97704(a1, v2);
}

unint64_t sub_1B8D96FF0(char a1)
{
  uint64_t v2;

  sub_1B8DFE15C();
  sub_1B8DFDBA4();
  swift_bridgeObjectRelease();
  v2 = sub_1B8DFE18C();
  return sub_1B8D97848(a1 & 1, v2);
}

unint64_t sub_1B8D9708C(char a1)
{
  uint64_t v2;

  sub_1B8DFE15C();
  sub_1B8DFE180();
  v2 = sub_1B8DFE18C();
  return sub_1B8D97988(a1, v2);
}

unint64_t sub_1B8D970F0(double *a1)
{
  uint64_t v2;

  sub_1B8DFE15C();
  sub_1B8DFE180();
  type metadata accessor for TextClockDescriptor(0);
  sub_1B8DFD8B0();
  sub_1B8D98D04((unint64_t *)&unk_1EF1E2800, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1490]);
  sub_1B8DFDAC0();
  v2 = sub_1B8DFE18C();
  return sub_1B8D97A18(a1, v2);
}

unint64_t sub_1B8D9719C(char a1)
{
  uint64_t v2;

  sub_1B8DFE15C();
  sub_1B8DFDBA4();
  swift_bridgeObjectRelease();
  v2 = sub_1B8DFE18C();
  return sub_1B8D97B50(a1, v2);
}

unint64_t sub_1B8D97218(char a1)
{
  uint64_t v2;

  sub_1B8DFE15C();
  sub_1B8DFDBA4();
  swift_bridgeObjectRelease();
  v2 = sub_1B8DFE18C();
  return sub_1B8D97C60(a1 & 1, v2);
}

unint64_t sub_1B8D972B8(char a1)
{
  uint64_t v2;

  sub_1B8DFE15C();
  sub_1B8DFDBA4();
  swift_bridgeObjectRelease();
  v2 = sub_1B8DFE18C();
  return sub_1B8D97DB4(a1 & 1, v2);
}

unint64_t sub_1B8D97340(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    v6 = a1;
    v7 = *(_QWORD *)&aSkip_2[v6 * 8];
    v8 = qword_1B8E00C08[v6];
    while (*(_QWORD *)&aSkip_2[8 * *(char *)(*(_QWORD *)(v2 + 48) + v4)] != v7
         || qword_1B8E00C08[*(char *)(*(_QWORD *)(v2 + 48) + v4)] != v8)
    {
      v10 = sub_1B8DFE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

unint64_t sub_1B8D97450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1B8DFE0D8() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1B8DFE0D8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1B8D97530(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1B8D9CFDC(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1BCCBC7B4](v9, a1);
      sub_1B8D9D018((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1B8D975F4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    v6 = 8 * a1;
    v7 = *(_QWORD *)&aSunday_1[v6];
    v8 = *(_QWORD *)&aSaturday_1[v6 + 8];
    while (*(_QWORD *)&aSunday_1[8 * *(char *)(*(_QWORD *)(v2 + 48) + v4)] != v7
         || *(_QWORD *)&aSaturday_1[8 * *(char *)(*(_QWORD *)(v2 + 48) + v4) + 8] != v8)
    {
      v10 = sub_1B8DFE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

unint64_t sub_1B8D97704(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_1B8DFD784();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_1B8D98D04(&qword_1EF1E14F8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v14 = sub_1B8DFDACC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_1B8D97848(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v11;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0x4B72656874616577;
    else
      v6 = 0x6C616E7265746E69;
    if ((a1 & 1) != 0)
      v7 = 0xEA00000000007469;
    else
      v7 = 0xEA00000000004955;
    while (1)
    {
      v8 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x4B72656874616577 : 0x6C616E7265746E69;
      v9 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0xEA00000000007469 : 0xEA00000000004955;
      if (v8 == v6 && v9 == v7)
        break;
      v11 = sub_1B8DFE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

unint64_t sub_1B8D97988(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  int v7;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    do
    {
      v7 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + result);
      if (a1)
      {
        if (a1 == 1)
        {
          if (v7 == 1)
            return result;
        }
        else if (v7 == 2)
        {
          return result;
        }
      }
      else if (!*(_BYTE *)(*(_QWORD *)(v2 + 48) + result))
      {
        return result;
      }
      result = (result + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_1B8D97A18(double *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = type metadata accessor for TextClockDescriptor(0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (double *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = -1 << *(_BYTE *)(v2 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      sub_1B8D9A42C(*(_QWORD *)(v2 + 48) + v12 * v10, (uint64_t)v8, type metadata accessor for TextClockDescriptor);
      if (*v8 == *a1
        && (MEMORY[0x1BCCBC190]((char *)v8 + *(int *)(v5 + 20), (char *)a1 + *(int *)(v5 + 20), *v8) & 1) != 0)
      {
        break;
      }
      sub_1B8D9A088((uint64_t)v8, type metadata accessor for TextClockDescriptor);
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        return v10;
    }
    sub_1B8D9A088((uint64_t)v8, type metadata accessor for TextClockDescriptor);
  }
  return v10;
}

unint64_t sub_1B8D97B50(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    v6 = a1;
    v7 = *(_QWORD *)&aClock_3[v6 * 8];
    v8 = qword_1B8E00CB0[v6];
    while (*(_QWORD *)&aClock_3[8 * *(char *)(*(_QWORD *)(v2 + 48) + v4)] != v7
         || qword_1B8E00CB0[*(char *)(*(_QWORD *)(v2 + 48) + v4)] != v8)
    {
      v10 = sub_1B8DFE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

unint64_t sub_1B8D97C60(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v11;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0x6E696E69616D6572;
    else
      v6 = 0x6E6F697461727564;
    if ((a1 & 1) != 0)
      v7 = 0xED0000656D695467;
    else
      v7 = 0xE800000000000000;
    while (1)
    {
      v8 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x6E696E69616D6572 : 0x6E6F697461727564;
      v9 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0xED0000656D695467 : 0xE800000000000000;
      if (v8 == v6 && v9 == v7)
        break;
      v11 = sub_1B8DFE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

unint64_t sub_1B8D97DB4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v11;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0x656C67676F74;
    else
      v6 = 1852994932;
    if ((a1 & 1) != 0)
      v7 = 0xE600000000000000;
    else
      v7 = 0xE400000000000000;
    while (1)
    {
      v8 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x656C67676F74 : 1852994932;
      v9 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0xE600000000000000 : 0xE400000000000000;
      if (v8 == v6 && v9 == v7)
        break;
      v11 = sub_1B8DFE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_1B8D97EE4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1B8D97F90(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1B8D97F00(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1B8D98268(a1, a2, a3, (_QWORD *)*v3, &qword_1ED36F278, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FA58]);
  *v3 = result;
  return result;
}

uint64_t sub_1B8D97F2C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1B8D980EC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1B8D97F48(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1B8D98268(a1, a2, a3, (_QWORD *)*v3, &qword_1EF1E14D0, (uint64_t (*)(_QWORD))type metadata accessor for AlarmEntity);
  *v3 = result;
  return result;
}

uint64_t sub_1B8D97F74(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1B8D98448(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1B8D97F90(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E14F0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1B8DFDFF4();
  __break(1u);
  return result;
}

uint64_t sub_1B8D980EC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F280);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1B8DFDFF4();
  __break(1u);
  return result;
}

uint64_t sub_1B8D98254(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1B8D98268(a1, a2, a3, a4, &qword_1EF1E14D0, (uint64_t (*)(_QWORD))type metadata accessor for AlarmEntity);
}

uint64_t sub_1B8D98268(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_1B8DFDFF4();
  __break(1u);
  return result;
}

uint64_t sub_1B8D98448(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1480);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F7E0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1B8DFDFF4();
  __break(1u);
  return result;
}

char *sub_1B8D985D0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_1B8DFDFF4();
  __break(1u);
  return result;
}

uint64_t sub_1B8D986B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD, _QWORD, _QWORD);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void (*v22)(uint64_t, uint64_t);
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(_QWORD, _QWORD, _QWORD);
  uint64_t v48;
  uint64_t v49;

  v5 = sub_1B8DFD934();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v43 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v9);
  v46 = (char *)v34 - v11;
  result = MEMORY[0x1E0DEE9D8];
  v49 = MEMORY[0x1E0DEE9D8];
  v41 = *(_QWORD *)(a1 + 16);
  if (!v41)
    return result;
  v44 = v6;
  v45 = v10;
  v34[1] = v2;
  v35 = a2;
  v13 = 0;
  v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v15 = *(_QWORD *)(v6 + 72);
  v40 = a1 + v14;
  v16 = *(void (**)(_QWORD, _QWORD, _QWORD))(v6 + 16);
  v38 = v14;
  v39 = a2 + v14;
  v47 = v16;
  v48 = v15;
  v36 = a2 + v14 + 2 * v15;
  v37 = a2 + v14 + v15;
  v17 = v46;
  v16(v46, v40, v5);
  while (1)
  {
    v18 = *(_QWORD *)(a2 + 16);
    if (v18)
      break;
LABEL_11:
    v23 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v23(v43, v17, v5);
    v24 = v49;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B8D97F00(0, *(_QWORD *)(v24 + 16) + 1, 1);
      v17 = v46;
      v24 = v49;
    }
    v26 = *(_QWORD *)(v24 + 16);
    v25 = *(_QWORD *)(v24 + 24);
    if (v26 >= v25 >> 1)
    {
      sub_1B8D97F00(v25 > 1, v26 + 1, 1);
      v17 = v46;
      v24 = v49;
    }
    *(_QWORD *)(v24 + 16) = v26 + 1;
    v23((char *)(v24 + v38 + v26 * v48), v43, v5);
    v49 = v24;
    v6 = v44;
    v16 = v47;
LABEL_5:
    if (++v13 == v41)
      return v49;
    v16(v17, v40 + v48 * v13, v5);
  }
  v19 = v45;
  v16(v45, v39, v5);
  v20 = sub_1B8D98D04(&qword_1EF1E1518, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FA58], MEMORY[0x1E0C8FA68]);
  sub_1B8DFD3AC();
  v21 = sub_1B8DFDACC();
  v22 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v22(v19, v5);
  if ((v21 & 1) != 0)
    goto LABEL_4;
  v42 = v20;
  if (v18 == 1)
    goto LABEL_10;
  v27 = v45;
  v47(v45, v37, v5);
  v28 = sub_1B8DFDACC();
  v22(v27, v5);
  if ((v28 & 1) != 0)
  {
LABEL_4:
    swift_bridgeObjectRelease();
    v17 = v46;
    v16 = v47;
    v22((uint64_t)v46, v5);
    v6 = v44;
    goto LABEL_5;
  }
  if (v18 == 2)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    v17 = v46;
    v6 = v44;
    goto LABEL_11;
  }
  v29 = v36;
  v30 = 2;
  while (1)
  {
    v31 = v45;
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v47)(v45, v29, v5);
    v32 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    v33 = sub_1B8DFDACC();
    v22(v31, v5);
    if ((v33 & 1) != 0)
    {
      a2 = v35;
      goto LABEL_4;
    }
    ++v30;
    v29 += v48;
    if (v32 == v18)
    {
      a2 = v35;
      swift_bridgeObjectRelease();
      v6 = v44;
      v17 = v46;
      goto LABEL_11;
    }
  }
  __break(1u);
  return result;
}

double sub_1B8D98A3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  double v13;
  uint64_t v14;
  double v15;
  double v16;
  void (*v17)(char *, uint64_t);
  double v18;
  void *v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFD748();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v22 - v10;
  v12 = (_QWORD *)(a1 + OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_state);
  swift_beginAccess();
  v13 = 0.0;
  if (*v12 == 1)
  {
    v14 = a1 + OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_fireDate;
    swift_beginAccess();
    sub_1B8D9D288(v14, (uint64_t)v4, (uint64_t *)&unk_1ED36F800);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_1B8D9D154((uint64_t)v4, (uint64_t *)&unk_1ED36F800);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
      sub_1B8DFD6AC();
      sub_1B8DFD700();
      v16 = v15;
      v17 = *(void (**)(char *, uint64_t))(v6 + 8);
      v17(v9, v5);
      sub_1B8DFD700();
      v13 = v16 - v18;
      v23 = 0;
      v24 = 0xE000000000000000;
      sub_1B8DFDEF8();
      v25 = v23;
      v26 = v24;
      sub_1B8DFDBBC();
      sub_1B8DFDD78();
      v19 = (void *)objc_opt_self();
      sub_1B8DFDBBC();
      swift_beginAccess();
      sub_1B8DFD3AC();
      sub_1B8DFDBBC();
      swift_bridgeObjectRelease();
      v20 = (void *)sub_1B8DFDB5C();
      swift_bridgeObjectRelease();
      objc_msgSend(v19, sel_logInfo_, v20);

      v17(v11, v5);
    }
  }
  return v13;
}

uint64_t type metadata accessor for TimerContext(uint64_t a1)
{
  return sub_1B8D9A054(a1, (uint64_t *)&unk_1ED36F690);
}

uint64_t sub_1B8D98D04(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1BCCBD0FC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for MTSessionError()
{
  return objc_opt_self();
}

uint64_t sub_1B8D98D68()
{
  uint64_t *v0;

  return sub_1B8D92BD0(v0[2], v0[3], v0[4], &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_timerId, &OBJC_IVAR____TtC18MobileTimerSupport23MTTimerSessionsProvider_activities, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B8DF50D8);
}

uint64_t sub_1B8D98D9C()
{
  return swift_deallocObject();
}

uint64_t sub_1B8D98DB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_1B8D9D2E0;
  *(_QWORD *)(v4 + 72) = v3;
  *(_OWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 40) = v5;
  v8 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x1E0C8F5B0] + MEMORY[0x1E0C8F5B0]);
  *(_QWORD *)(v4 + 48) = v2;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 80) = v6;
  *v6 = v4;
  v6[1] = sub_1B8D8DD20;
  return v8(v4 + 40);
}

uint64_t sub_1B8D98E68(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1B8D9D2E0;
  return sub_1B8D8E318(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1B8D98F0C()
{
  uint64_t v0;

  return sub_1B8D93E90(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), type metadata accessor for TimerActivityAttributes, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_timerId, &OBJC_IVAR____TtC18MobileTimerSupport23MTTimerSessionsProvider_activities, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B8DF50D8);
}

uint64_t sub_1B8D98F44()
{
  return swift_deallocObject();
}

uint64_t sub_1B8D98F54()
{
  return swift_deallocObject();
}

uint64_t sub_1B8D98F64()
{
  uint64_t v0;

  return sub_1B8D946D8(*(uint64_t **)(v0 + 16), &qword_1ED36F1E0);
}

uint64_t sub_1B8D98F84()
{
  return swift_deallocObject();
}

unint64_t sub_1B8D98F94()
{
  unint64_t result;

  result = qword_1ED36F840;
  if (!qword_1ED36F840)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED36F840);
  }
  return result;
}

unint64_t sub_1B8D98FD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED36F820;
  if (!qword_1ED36F820)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED36F810);
    result = MEMORY[0x1BCCBD0FC](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED36F820);
  }
  return result;
}

uint64_t type metadata accessor for MTTimerSessionsProvider()
{
  return objc_opt_self();
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_1B8D99060()
{
  unint64_t result;

  result = qword_1ED36F5A8;
  if (!qword_1ED36F5A8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E00A94, &type metadata for TimerActivityAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED36F5A8);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1B8D990C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8D9910C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B8D99154()
{
  unint64_t result;

  result = qword_1ED36F670;
  if (!qword_1ED36F670)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E00A44, &type metadata for TimerContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED36F670);
  }
  return result;
}

unint64_t sub_1B8D99198()
{
  unint64_t result;

  result = qword_1ED36F1F0;
  if (!qword_1ED36F1F0)
  {
    result = MEMORY[0x1BCCBD0FC](&protocol conformance descriptor for TimerState, &type metadata for TimerState);
    atomic_store(result, (unint64_t *)&qword_1ED36F1F0);
  }
  return result;
}

unint64_t sub_1B8D991DC()
{
  unint64_t result;

  result = qword_1ED36F668;
  if (!qword_1ED36F668)
  {
    result = MEMORY[0x1BCCBD0FC](&protocol conformance descriptor for TimerState, &type metadata for TimerState);
    atomic_store(result, (unint64_t *)&qword_1ED36F668);
  }
  return result;
}

uint64_t sub_1B8D99220(uint64_t a1, uint64_t a2, void *a3, void (**a4)(_QWORD, _QWORD))
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t inited;
  id v22;
  void *v23;
  void *v24;
  char *v25;
  unint64_t *v26;
  _BYTE v28[80];
  unint64_t v29;
  unint64_t v30;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a4;
  v12 = (void *)objc_opt_self();
  v29 = 0;
  v30 = 0xE000000000000000;
  _Block_copy(a4);
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  v29 = 0xD000000000000020;
  v30 = 0x80000001B8E06320;
  sub_1B8DFDBBC();
  v13 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_logInfo_, v13);

  v14 = sub_1B8D8ECA4(a1, a2);
  if (v14)
  {
    v15 = v14;
    v16 = sub_1B8DFDD00();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v10, 1, 1, v16);
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = 0;
    v17[3] = 0;
    v17[4] = v15;
    v17[5] = a1;
    v17[6] = a2;
    v17[7] = a3;
    v17[8] = sub_1B8D9D3AC;
    v17[9] = v11;
    sub_1B8DFD3AC();
    v18 = a3;
    sub_1B8DFD22C();
    sub_1B8D8DEC0((uint64_t)v10, (uint64_t)&unk_1EF1E1498, (uint64_t)v17);
    swift_release();
  }
  else
  {
    v29 = 0;
    v30 = 0xE000000000000000;
    sub_1B8DFDEF8();
    swift_bridgeObjectRelease();
    v29 = 0xD000000000000028;
    v30 = 0x80000001B8E06350;
    sub_1B8DFDBBC();
    v20 = v29;
    v19 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F288);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B8DFF650;
    *(_QWORD *)(inited + 32) = 0xD000000000000010;
    *(_QWORD *)(inited + 40) = 0x80000001B8E06270;
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = v20;
    *(_QWORD *)(inited + 56) = v19;
    sub_1B8DFD3AC();
    sub_1B8D8C4F4(inited);
    v22 = objc_allocWithZone((Class)type metadata accessor for MTSessionError());
    v23 = (void *)sub_1B8DFDB5C();
    v24 = (void *)sub_1B8DFDA60();
    swift_bridgeObjectRelease();
    v25 = (char *)objc_msgSend(v22, sel_initWithDomain_code_userInfo_, v23, 0, v24);

    v26 = (unint64_t *)&v25[OBJC_IVAR____TtC18MobileTimerSupport14MTSessionError_descriptionString];
    *v26 = v20;
    v26[1] = v19;
    swift_bridgeObjectRelease();
    ((void (**)(_QWORD, char *))a4)[2](a4, v25);

  }
  return swift_release();
}

uint64_t sub_1B8D99544(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1B8DFDFF4();
  __break(1u);
  return result;
}

unint64_t sub_1B8D99634(char *a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  char isEscapingClosureAtFileLocation;
  char *v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  dispatch_queue_t v37;
  uint64_t v38;
  char *v39;
  uint64_t aBlock;
  unint64_t v41;
  uint64_t (*v42)(uint64_t);
  void *v43;
  uint64_t (*v44)();
  uint64_t v45;

  v39 = a1;
  v38 = type metadata accessor for TimerActivityAttributes(0);
  MEMORY[0x1E0C80A78](v38);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F1E0);
  result = sub_1B8DFD8BC();
  v6 = result;
  if (result >> 62)
    goto LABEL_16;
  v7 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (v7 >= 1)
    {
      v33 = a2;
      v8 = *(NSObject **)&v39[OBJC_IVAR____TtC18MobileTimerSupport23MTTimerSessionsProvider_serializerQueue];
      v36 = v6 & 0xC000000000000001;
      v37 = v8;
      sub_1B8DFD3AC();
      v9 = 0;
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v34 = v7;
      v35 = v6;
      while (1)
      {
        if (v36)
        {
          v6 = MEMORY[0x1BCCBC814](v9, v6);
        }
        else
        {
          v6 = *(_QWORD *)(v6 + 8 * v9 + 32);
          sub_1B8DFD22C();
        }
        v11 = swift_allocObject();
        v12 = v39;
        *(_QWORD *)(v11 + 16) = v39;
        *(_QWORD *)(v11 + 24) = v6;
        v13 = swift_allocObject();
        *(_QWORD *)(v13 + 16) = sub_1B8D9D2D8;
        *(_QWORD *)(v13 + 24) = v11;
        v44 = sub_1B8D9D2D0;
        v45 = v13;
        aBlock = MEMORY[0x1E0C809B0];
        v41 = 1107296256;
        v42 = sub_1B8D8CD1C;
        v43 = &block_descriptor_173;
        v14 = _Block_copy(&aBlock);
        v15 = v12;
        sub_1B8DFD22C();
        sub_1B8DFD22C();
        swift_release();
        dispatch_sync(v37, v14);
        _Block_release(v14);
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((isEscapingClosureAtFileLocation & 1) != 0)
          break;
        sub_1B8DFD8C8();
        v17 = (char *)*(id *)&v4[*(int *)(v38 + 20)];
        sub_1B8D9A088((uint64_t)v4, type metadata accessor for TimerActivityAttributes);
        v18 = &v17[OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_timerId];
        swift_beginAccess();
        a2 = *(_QWORD *)v18;
        v19 = *((_QWORD *)v18 + 1);
        sub_1B8DFD3AC();

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_1B8D96914(0, v10[2] + 1, 1, v10);
        v21 = v10[2];
        v20 = v10[3];
        if (v21 >= v20 >> 1)
          v10 = sub_1B8D96914((_QWORD *)(v20 > 1), v21 + 1, 1, v10);
        ++v9;
        v10[2] = v21 + 1;
        v22 = &v10[2 * v21];
        v22[4] = a2;
        v22[5] = v19;
        swift_release();
        swift_release();
        v6 = v35;
        if (v34 == v9)
        {
          swift_bridgeObjectRelease_n();
          v23 = (void *)objc_opt_self();
          aBlock = 0;
          v41 = 0xE000000000000000;
          sub_1B8DFDEF8();
          v24 = objc_msgSend(v15, sel_description);
          v25 = sub_1B8DFDB68();
          v27 = v26;

          swift_bridgeObjectRelease();
          aBlock = v25;
          v41 = v27;
          sub_1B8DFDBBC();
          v28 = sub_1B8DFD3AC();
          MEMORY[0x1BCCBC568](v28, MEMORY[0x1E0DEA968]);
          sub_1B8DFDBBC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v29 = (void *)sub_1B8DFDB5C();
          swift_bridgeObjectRelease();
          objc_msgSend(v23, sel_logInfo_, v29);

          a2 = v33;
          goto LABEL_18;
        }
      }
      __break(1u);
LABEL_16:
      sub_1B8DFD3AC();
      v7 = sub_1B8DFDFB8();
      result = swift_bridgeObjectRelease();
      if (!v7)
        goto LABEL_17;
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    v30 = (void *)objc_opt_self();
    v31 = (void *)sub_1B8DFDB5C();
    objc_msgSend(v30, sel_logInfo_, v31);

LABEL_18:
    sub_1B8DFD3AC();
    v32 = (void *)sub_1B8DFDC4C();
    (*(void (**)(uint64_t, void *, _QWORD))(a2 + 16))(a2, v32, 0);

    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1B8D99AE4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6574617473 && a2 == 0xE500000000000000;
  if (v3 || (sub_1B8DFE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x644972656D6974 && a2 == 0xE700000000000000 || (sub_1B8DFE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_1B8DFE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E696E69616D6572 && a2 == 0xED0000656D695467 || (sub_1B8DFE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7461446465726966 && a2 == 0xE900000000000065 || (sub_1B8DFE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6574614465726966 && a2 == 0xE800000000000000 || (sub_1B8DFE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x657373696D736964 && a2 == 0xED00006574614464 || (sub_1B8DFE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x676E69726966 && a2 == 0xE600000000000000 || (sub_1B8DFE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1B8DFE0D8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

unint64_t sub_1B8D99E70(unint64_t result)
{
  if (result > 4)
    return 0;
  return result;
}

char *sub_1B8D99E80(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  id v5;
  void *v6;
  void *v7;
  char *v8;
  char *v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F288);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B8DFF650;
  *(_QWORD *)(inited + 32) = 0xD000000000000010;
  *(_QWORD *)(inited + 40) = 0x80000001B8E06270;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 56) = a2;
  sub_1B8DFD3AC();
  sub_1B8D8C4F4(inited);
  v5 = objc_allocWithZone((Class)type metadata accessor for MTSessionError());
  v6 = (void *)sub_1B8DFDB5C();
  v7 = (void *)sub_1B8DFDA60();
  swift_bridgeObjectRelease();
  v8 = (char *)objc_msgSend(v5, sel_initWithDomain_code_userInfo_, v6, 0, v7);

  v9 = &v8[OBJC_IVAR____TtC18MobileTimerSupport14MTSessionError_descriptionString];
  *(_QWORD *)v9 = a1;
  *((_QWORD *)v9 + 1) = a2;
  sub_1B8DFD3AC();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1B8D99FC4()
{
  return swift_deallocObject();
}

uint64_t sub_1B8D99FD4()
{
  uint64_t v0;

  return sub_1B8D91E24(*(BOOL **)(v0 + 16), &qword_1ED36F1D8);
}

uint64_t sub_1B8D99FF4()
{
  return swift_deallocObject();
}

uint64_t sub_1B8D9A004()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1B8D9A028()
{
  uint64_t v0;

  return sub_1B8D92008(*(_QWORD **)(v0 + 16));
}

uint64_t sub_1B8D9A030()
{
  return swift_deallocObject();
}

uint64_t type metadata accessor for AlarmActivityAttributes(uint64_t a1)
{
  return sub_1B8D9A054(a1, qword_1ED36F6D8);
}

uint64_t sub_1B8D9A054(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B8D9A088(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B8D9A0FC()
{
  uint64_t *v0;

  return sub_1B8D92BD0(v0[2], v0[3], v0[4], &OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_alarmId, &OBJC_IVAR____TtC18MobileTimerSupport23MTAlarmSessionsProvider_activities, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B8DF50EC);
}

uint64_t sub_1B8D9A130()
{
  return swift_deallocObject();
}

uint64_t sub_1B8D9A140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t))(v3 + 16))(a3);
}

uint64_t objectdestroy_15Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B8D9A1A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_1B8D9D2E0;
  *(_QWORD *)(v4 + 72) = v3;
  *(_OWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 40) = v5;
  v8 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x1E0C8F5B0] + MEMORY[0x1E0C8F5B0]);
  *(_QWORD *)(v4 + 48) = v2;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 80) = v6;
  *v6 = v4;
  v6[1] = sub_1B8D93094;
  return v8(v4 + 40);
}

uint64_t sub_1B8D9A258(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1B8D9D2E0;
  return sub_1B8D935DC(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1B8D9A2FC()
{
  uint64_t v0;

  return sub_1B8D93E90(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), type metadata accessor for AlarmActivityAttributes, &OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_alarmId, &OBJC_IVAR____TtC18MobileTimerSupport23MTAlarmSessionsProvider_activities, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B8DF50EC);
}

uint64_t sub_1B8D9A334()
{
  return swift_deallocObject();
}

uint64_t sub_1B8D9A344()
{
  return objectdestroy_91Tm();
}

void sub_1B8D9A34C()
{
  uint64_t v0;

  sub_1B8D941B0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(uint64_t **)(v0 + 40));
}

uint64_t sub_1B8D9A358()
{
  return swift_deallocObject();
}

uint64_t sub_1B8D9A368()
{
  return swift_deallocObject();
}

uint64_t sub_1B8D9A378()
{
  uint64_t v0;

  return sub_1B8D946D8(*(uint64_t **)(v0 + 16), &qword_1ED36F1D8);
}

uint64_t sub_1B8D9A398()
{
  return swift_deallocObject();
}

uint64_t type metadata accessor for MTAlarmSessionsProvider()
{
  return objc_opt_self();
}

unint64_t sub_1B8D9A3C8()
{
  unint64_t result;

  result = qword_1ED36F6C0;
  if (!qword_1ED36F6C0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E009F4, &type metadata for AlarmActivityAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED36F6C0);
  }
  return result;
}

uint64_t type metadata accessor for AlarmContext()
{
  return objc_opt_self();
}

uint64_t sub_1B8D9A42C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1B8D9A470()
{
  unint64_t result;

  result = qword_1ED36F6A0;
  if (!qword_1ED36F6A0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E009A4, &type metadata for AlarmContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED36F6A0);
  }
  return result;
}

uint64_t sub_1B8D9A4B4()
{
  return sub_1B8D98D04(&qword_1ED36F5C8, 255, type metadata accessor for TimerActivityAttributes, (uint64_t)&protocol conformance descriptor for TimerActivityAttributes);
}

uint64_t sub_1B8D9A4E4()
{
  return sub_1B8D98D04(&qword_1ED36F5C0, 255, type metadata accessor for TimerActivityAttributes, (uint64_t)&protocol conformance descriptor for TimerActivityAttributes);
}

uint64_t sub_1B8D9A514()
{
  return sub_1B8D98D04(&qword_1ED36F688, 255, type metadata accessor for TimerContext, (uint64_t)&protocol conformance descriptor for TimerContext);
}

uint64_t sub_1B8D9A544()
{
  return sub_1B8D98D04(&qword_1ED36F1F8, 255, type metadata accessor for TimerContext, (uint64_t)&protocol conformance descriptor for TimerContext);
}

uint64_t sub_1B8D9A574()
{
  return sub_1B8D98D04(&qword_1ED36F200, 255, type metadata accessor for TimerContext, MEMORY[0x1E0DEFCF8]);
}

unint64_t sub_1B8D9A5A8()
{
  unint64_t result;

  result = qword_1EF1E1458;
  if (!qword_1EF1E1458)
  {
    result = MEMORY[0x1BCCBD0FC](&protocol conformance descriptor for TimerState, &type metadata for TimerState);
    atomic_store(result, (unint64_t *)&qword_1EF1E1458);
  }
  return result;
}

uint64_t sub_1B8D9A5EC()
{
  return sub_1B8D98D04(&qword_1ED36F220, 255, type metadata accessor for AlarmActivityAttributes, (uint64_t)&protocol conformance descriptor for AlarmActivityAttributes);
}

uint64_t sub_1B8D9A61C()
{
  return sub_1B8D98D04(&qword_1ED36F218, 255, type metadata accessor for AlarmActivityAttributes, (uint64_t)&protocol conformance descriptor for AlarmActivityAttributes);
}

uint64_t sub_1B8D9A64C(uint64_t a1, uint64_t a2)
{
  return sub_1B8D98D04(&qword_1ED36F6B8, a2, (uint64_t (*)(uint64_t))type metadata accessor for AlarmContext, (uint64_t)&protocol conformance descriptor for AlarmContext);
}

uint64_t sub_1B8D9A678(uint64_t a1, uint64_t a2)
{
  return sub_1B8D98D04(&qword_1ED36F208, a2, (uint64_t (*)(uint64_t))type metadata accessor for AlarmContext, (uint64_t)&protocol conformance descriptor for AlarmContext);
}

uint64_t sub_1B8D9A6A4(uint64_t a1, uint64_t a2)
{
  return sub_1B8D98D04(&qword_1ED36F210, a2, (uint64_t (*)(uint64_t))type metadata accessor for AlarmContext, MEMORY[0x1E0DEFCF8]);
}

uint64_t sub_1B8D9A6D0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_state);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1B8D9A720(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_state);
}

uint64_t sub_1B8D9A72C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_110Tm(a1, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_timerId, a2);
}

uint64_t sub_1B8D9A738(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B8D953AC(a1, a2, a3, a4, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_timerId);
}

double sub_1B8D9A754@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_112Tm(a1, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_duration, a2);
}

uint64_t sub_1B8D9A760(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_113Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_duration);
}

double sub_1B8D9A76C@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_112Tm(a1, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_remainingTime, a2);
}

double keypath_get_112Tm@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  double *v4;
  double result;

  v4 = (double *)(*a1 + *a2);
  swift_beginAccess();
  result = *v4;
  *a3 = *(_QWORD *)v4;
  return result;
}

uint64_t sub_1B8D9A7C4(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_113Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_remainingTime);
}

uint64_t keypath_set_113Tm(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;

  v5 = *a1;
  v6 = (_QWORD *)(*a2 + *a5);
  result = swift_beginAccess();
  *v6 = v5;
  return result;
}

uint64_t sub_1B8D9A820@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_116Tm(a1, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_firedDate, a2);
}

uint64_t sub_1B8D9A82C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B8D8FEA0(a1, a2, a3, a4, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_firedDate);
}

uint64_t sub_1B8D9A848@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_116Tm(a1, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_fireDate, a2);
}

uint64_t keypath_get_116Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;

  v4 = *a1 + *a2;
  swift_beginAccess();
  return sub_1B8D9D288(v4, a3, (uint64_t *)&unk_1ED36F800);
}

uint64_t sub_1B8D9A8AC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B8D8FEA0(a1, a2, a3, a4, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_fireDate);
}

uint64_t sub_1B8D9A8C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_116Tm(a1, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_dismissedDate, a2);
}

uint64_t sub_1B8D9A8D4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B8D8FEA0(a1, a2, a3, a4, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_dismissedDate);
}

uint64_t sub_1B8D9A8F0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_122Tm(a1, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_firing, a2);
}

uint64_t sub_1B8D9A8FC(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_123Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_firing);
}

uint64_t sub_1B8D9A908@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_110Tm(a1, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_title, a2);
}

uint64_t sub_1B8D9A914(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B8D953AC(a1, a2, a3, a4, &OBJC_IVAR____TtC18MobileTimerSupport12TimerContext_title);
}

uint64_t sub_1B8D9A930@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_110Tm(a1, &OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_title, a2);
}

uint64_t sub_1B8D9A93C(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B8D953AC(a1, a2, a3, a4, &OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_title);
}

uint64_t sub_1B8D9A958@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_110Tm(a1, &OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_alarmId, a2);
}

uint64_t keypath_get_110Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)(*a1 + *a2);
  swift_beginAccess();
  v5 = v4[1];
  *a3 = *v4;
  a3[1] = v5;
  return sub_1B8DFD3AC();
}

uint64_t sub_1B8D9A9B4(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B8D953AC(a1, a2, a3, a4, &OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_alarmId);
}

uint64_t sub_1B8D9A9D0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_130Tm(a1, &OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_hour, a2);
}

uint64_t sub_1B8D9A9DC(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_hour);
}

uint64_t sub_1B8D9A9E8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_130Tm(a1, &OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_min, a2);
}

uint64_t keypath_get_130Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  uint64_t result;

  v4 = (_QWORD *)(*a1 + *a2);
  result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

uint64_t sub_1B8D9AA40(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_min);
}

uint64_t keypath_setTm(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;

  v5 = *a1;
  v6 = (_QWORD *)(*a2 + *a5);
  result = swift_beginAccess();
  *v6 = v5;
  return result;
}

uint64_t sub_1B8D9AA94@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_122Tm(a1, &OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isSnoozed, a2);
}

uint64_t sub_1B8D9AAA0(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_123Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isSnoozed);
}

uint64_t sub_1B8D9AAAC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_122Tm(a1, &OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isFiring, a2);
}

uint64_t keypath_get_122Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _BYTE *a3@<X8>)
{
  _BYTE *v4;
  uint64_t result;

  v4 = (_BYTE *)(*a1 + *a2);
  result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

uint64_t sub_1B8D9AB04(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_123Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_isFiring);
}

uint64_t keypath_set_123Tm(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  char v5;
  _BYTE *v6;
  uint64_t result;

  v5 = *a1;
  v6 = (_BYTE *)(*a2 + *a5);
  result = swift_beginAccess();
  *v6 = v5;
  return result;
}

uint64_t method lookup function for MTBaseSessionsProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static MTBaseSessionsProvider.supportsSessions()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of MTBaseSessionsProvider.numberOfStopwatchSessions()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t method lookup function for MTTimerSessionsProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MTTimerSessionsProvider.createSession(context:completion:forAlert:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MTTimerSessionsProvider.updateSession(context:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MTTimerSessionsProvider.finishSession(timerId:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of MTTimerSessionsProvider.restoreSessions(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of MTTimerSessionsProvider.activityIdForTimerId(timerId:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of MTTimerSessionsProvider.numberOfActiveSessions()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of MTTimerSessionsProvider.alertingSessionId()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t getEnumTagSinglePayload for TimerActivityAttributes()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TimerActivityAttributes()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8D9AC94()
{
  return type metadata accessor for TimerContext(0);
}

void sub_1B8D9AC9C()
{
  unint64_t v0;

  sub_1B8D9B088();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for TimerContext()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TimerContext.state.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of TimerContext.state.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of TimerContext.state.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of TimerContext.timerId.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of TimerContext.timerId.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of TimerContext.timerId.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of TimerContext.duration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of TimerContext.duration.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of TimerContext.duration.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of TimerContext.remainingTime.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of TimerContext.remainingTime.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of TimerContext.remainingTime.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of TimerContext.firedDate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of TimerContext.firedDate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of TimerContext.firedDate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of TimerContext.fireDate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of TimerContext.fireDate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of TimerContext.fireDate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of TimerContext.dismissedDate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of TimerContext.dismissedDate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of TimerContext.dismissedDate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of TimerContext.firing.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of TimerContext.firing.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of TimerContext.firing.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of TimerContext.title.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of TimerContext.title.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of TimerContext.title.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of TimerContext.__allocating_init(state:timerId:duration:remainingTime:firing:fireDate:title:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 368))();
}

uint64_t dispatch thunk of static TimerContext.mock()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 376))();
}

uint64_t dispatch thunk of TimerContext.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of TimerContext.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 392))();
}

void sub_1B8D9B088()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED36F5A0)
  {
    sub_1B8DFD748();
    v0 = sub_1B8DFDE38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED36F5A0);
  }
}

ValueMetadata *type metadata accessor for TimerState()
{
  return &type metadata for TimerState;
}

uint64_t method lookup function for MTSessionError()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static MTSessionError.withDescription(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for MTAlarmSessionsProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MTAlarmSessionsProvider.hasActiveAlarmSession()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MTAlarmSessionsProvider.activeAlarmSessions()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MTAlarmSessionsProvider.createSession(context:completion:forAlert:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MTAlarmSessionsProvider.updateSession(context:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of MTAlarmSessionsProvider.finishSession(alarmId:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of MTAlarmSessionsProvider.restoreSessions(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of MTAlarmSessionsProvider.activityIdForAlarmId(alarmId:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of MTAlarmSessionsProvider.alertingSessionId()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t *_s18MobileTimerSupport23TimerActivityAttributesVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1B8DFD22C();
  }
  else
  {
    v7 = sub_1B8DFD748();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    v10 = v9;
  }
  return a1;
}

void _s18MobileTimerSupport23TimerActivityAttributesVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t _s18MobileTimerSupport23TimerActivityAttributesVwcp_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v6 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v9 = v8;
  return a1;
}

uint64_t _s18MobileTimerSupport23TimerActivityAttributesVwca_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v6 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  return a1;
}

uint64_t _s18MobileTimerSupport23TimerActivityAttributesVwtk_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s18MobileTimerSupport23TimerActivityAttributesVwta_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  return a1;
}

uint64_t getEnumTagSinglePayload for AlarmActivityAttributes()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1B8DFD748();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AlarmActivityAttributes()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1B8DFD748();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1B8D9B558()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B8DFD748();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t method lookup function for AlarmContext()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AlarmContext.title.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of AlarmContext.title.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of AlarmContext.title.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of AlarmContext.alarmId.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of AlarmContext.alarmId.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of AlarmContext.hour.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of AlarmContext.hour.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of AlarmContext.min.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of AlarmContext.min.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of AlarmContext.isSnoozed.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of AlarmContext.isSnoozed.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of AlarmContext.isFiring.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of AlarmContext.isFiring.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of AlarmContext.__allocating_init(title:alarmId:hour:min:isSnoozed:isFiring:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t dispatch thunk of static AlarmContext.mock()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t dispatch thunk of AlarmContext.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of AlarmContext.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t getEnumTagSinglePayload for AlarmContext.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AlarmContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1B8D9B874 + 4 * byte_1B8E00225[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1B8D9B8A8 + 4 * byte_1B8E00220[v4]))();
}

uint64_t sub_1B8D9B8A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8D9B8B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8D9B8B8);
  return result;
}

uint64_t sub_1B8D9B8C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8D9B8CCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1B8D9B8D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8D9B8D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AlarmContext.CodingKeys()
{
  return &type metadata for AlarmContext.CodingKeys;
}

ValueMetadata *type metadata accessor for AlarmActivityAttributes.CodingKeys()
{
  return &type metadata for AlarmActivityAttributes.CodingKeys;
}

uint64_t getEnumTagSinglePayload for TimerContext.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TimerContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1B8D9B9E8 + 4 * byte_1B8E0022F[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1B8D9BA1C + 4 * byte_1B8E0022A[v4]))();
}

uint64_t sub_1B8D9BA1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8D9BA24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8D9BA2CLL);
  return result;
}

uint64_t sub_1B8D9BA38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8D9BA40);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1B8D9BA44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8D9BA4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TimerContext.CodingKeys()
{
  return &type metadata for TimerContext.CodingKeys;
}

uint64_t getEnumTagSinglePayload for LocationDataProvider.Use(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s18MobileTimerSupport23AlarmActivityAttributesV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B8D9BB44 + 4 * byte_1B8E00239[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B8D9BB78 + 4 * byte_1B8E00234[v4]))();
}

uint64_t sub_1B8D9BB78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8D9BB80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8D9BB88);
  return result;
}

uint64_t sub_1B8D9BB94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8D9BB9CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B8D9BBA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8D9BBA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1B8D9BBB4(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for TimerActivityAttributes.CodingKeys()
{
  return &type metadata for TimerActivityAttributes.CodingKeys;
}

unint64_t sub_1B8D9BBD4()
{
  unint64_t result;

  result = qword_1EF1E1460;
  if (!qword_1EF1E1460)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E00754, &type metadata for TimerActivityAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1E1460);
  }
  return result;
}

unint64_t sub_1B8D9BC1C()
{
  unint64_t result;

  result = qword_1EF1E1468;
  if (!qword_1EF1E1468)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E0080C, &type metadata for TimerContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1E1468);
  }
  return result;
}

unint64_t sub_1B8D9BC64()
{
  unint64_t result;

  result = qword_1EF1E1470;
  if (!qword_1EF1E1470)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E008C4, &type metadata for AlarmActivityAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1E1470);
  }
  return result;
}

unint64_t sub_1B8D9BCAC()
{
  unint64_t result;

  result = qword_1EF1E1478;
  if (!qword_1EF1E1478)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E0097C, &type metadata for AlarmContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1E1478);
  }
  return result;
}

unint64_t sub_1B8D9BCF4()
{
  unint64_t result;

  result = qword_1ED36F6B0;
  if (!qword_1ED36F6B0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E008EC, &type metadata for AlarmContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED36F6B0);
  }
  return result;
}

unint64_t sub_1B8D9BD3C()
{
  unint64_t result;

  result = qword_1ED36F6A8;
  if (!qword_1ED36F6A8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E00914, &type metadata for AlarmContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED36F6A8);
  }
  return result;
}

unint64_t sub_1B8D9BD84()
{
  unint64_t result;

  result = qword_1ED36F6D0;
  if (!qword_1ED36F6D0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E00834, &type metadata for AlarmActivityAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED36F6D0);
  }
  return result;
}

unint64_t sub_1B8D9BDCC()
{
  unint64_t result;

  result = qword_1ED36F6C8;
  if (!qword_1ED36F6C8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E0085C, &type metadata for AlarmActivityAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED36F6C8);
  }
  return result;
}

unint64_t sub_1B8D9BE14()
{
  unint64_t result;

  result = qword_1ED36F680;
  if (!qword_1ED36F680)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E0077C, &type metadata for TimerContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED36F680);
  }
  return result;
}

unint64_t sub_1B8D9BE5C()
{
  unint64_t result;

  result = qword_1ED36F678;
  if (!qword_1ED36F678)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E007A4, &type metadata for TimerContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED36F678);
  }
  return result;
}

unint64_t sub_1B8D9BEA4()
{
  unint64_t result;

  result = qword_1ED36F5B8;
  if (!qword_1ED36F5B8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E006C4, &type metadata for TimerActivityAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED36F5B8);
  }
  return result;
}

unint64_t sub_1B8D9BEEC()
{
  unint64_t result;

  result = qword_1ED36F5B0;
  if (!qword_1ED36F5B0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E006EC, &type metadata for TimerActivityAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED36F5B0);
  }
  return result;
}

uint64_t sub_1B8D9BF30(uint64_t a1, uint64_t a2, void *a3, void (**a4)(_QWORD, _QWORD))
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t inited;
  id v22;
  void *v23;
  void *v24;
  char *v25;
  unint64_t *v26;
  _BYTE v28[80];
  unint64_t v29;
  unint64_t v30;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a4;
  v12 = (void *)objc_opt_self();
  v29 = 0;
  v30 = 0xE000000000000000;
  _Block_copy(a4);
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  v29 = 0xD000000000000020;
  v30 = 0x80000001B8E06530;
  sub_1B8DFDBBC();
  v13 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_logInfo_, v13);

  v14 = sub_1B8D94398(a1, a2);
  if (v14)
  {
    v15 = v14;
    v16 = sub_1B8DFDD00();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v10, 1, 1, v16);
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = 0;
    v17[3] = 0;
    v17[4] = v15;
    v17[5] = a1;
    v17[6] = a2;
    v17[7] = a3;
    v17[8] = sub_1B8D9CB4C;
    v17[9] = v11;
    sub_1B8DFD3AC();
    v18 = a3;
    sub_1B8DFD22C();
    sub_1B8D8DEC0((uint64_t)v10, (uint64_t)&unk_1EF1E1490, (uint64_t)v17);
    swift_release();
  }
  else
  {
    v29 = 0;
    v30 = 0xE000000000000000;
    sub_1B8DFDEF8();
    swift_bridgeObjectRelease();
    v29 = 0xD000000000000028;
    v30 = 0x80000001B8E06560;
    sub_1B8DFDBBC();
    v20 = v29;
    v19 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F288);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B8DFF650;
    *(_QWORD *)(inited + 32) = 0xD000000000000010;
    *(_QWORD *)(inited + 40) = 0x80000001B8E06270;
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = v20;
    *(_QWORD *)(inited + 56) = v19;
    sub_1B8DFD3AC();
    sub_1B8D8C4F4(inited);
    v22 = objc_allocWithZone((Class)type metadata accessor for MTSessionError());
    v23 = (void *)sub_1B8DFDB5C();
    v24 = (void *)sub_1B8DFDA60();
    swift_bridgeObjectRelease();
    v25 = (char *)objc_msgSend(v22, sel_initWithDomain_code_userInfo_, v23, 0, v24);

    v26 = (unint64_t *)&v25[OBJC_IVAR____TtC18MobileTimerSupport14MTSessionError_descriptionString];
    *v26 = v20;
    v26[1] = v19;
    swift_bridgeObjectRelease();
    ((void (**)(_QWORD, char *))a4)[2](a4, v25);

  }
  return swift_release();
}

unint64_t sub_1B8D9C254(char *a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  char isEscapingClosureAtFileLocation;
  char *v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  dispatch_queue_t v37;
  uint64_t v38;
  char *v39;
  uint64_t aBlock;
  unint64_t v41;
  uint64_t (*v42)(uint64_t);
  void *v43;
  uint64_t (*v44)();
  uint64_t v45;

  v39 = a1;
  v38 = type metadata accessor for AlarmActivityAttributes(0);
  MEMORY[0x1E0C80A78](v38);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F1D8);
  result = sub_1B8DFD8BC();
  v6 = result;
  if (result >> 62)
    goto LABEL_16;
  v7 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (v7 >= 1)
    {
      v33 = a2;
      v8 = *(NSObject **)&v39[OBJC_IVAR____TtC18MobileTimerSupport23MTAlarmSessionsProvider_serializerQueue];
      v36 = v6 & 0xC000000000000001;
      v37 = v8;
      sub_1B8DFD3AC();
      v9 = 0;
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v34 = v7;
      v35 = v6;
      while (1)
      {
        if (v36)
        {
          v6 = MEMORY[0x1BCCBC814](v9, v6);
        }
        else
        {
          v6 = *(_QWORD *)(v6 + 8 * v9 + 32);
          sub_1B8DFD22C();
        }
        v11 = swift_allocObject();
        v12 = v39;
        *(_QWORD *)(v11 + 16) = v39;
        *(_QWORD *)(v11 + 24) = v6;
        v13 = swift_allocObject();
        *(_QWORD *)(v13 + 16) = sub_1B8D9D2D4;
        *(_QWORD *)(v13 + 24) = v11;
        v44 = sub_1B8D9D2D0;
        v45 = v13;
        aBlock = MEMORY[0x1E0C809B0];
        v41 = 1107296256;
        v42 = sub_1B8D8CD1C;
        v43 = &block_descriptor_150;
        v14 = _Block_copy(&aBlock);
        v15 = v12;
        sub_1B8DFD22C();
        sub_1B8DFD22C();
        swift_release();
        dispatch_sync(v37, v14);
        _Block_release(v14);
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((isEscapingClosureAtFileLocation & 1) != 0)
          break;
        sub_1B8DFD8C8();
        v17 = (char *)*(id *)&v4[*(int *)(v38 + 20)];
        sub_1B8D9A088((uint64_t)v4, type metadata accessor for AlarmActivityAttributes);
        v18 = &v17[OBJC_IVAR____TtC18MobileTimerSupport12AlarmContext_alarmId];
        swift_beginAccess();
        a2 = *(_QWORD *)v18;
        v19 = *((_QWORD *)v18 + 1);
        sub_1B8DFD3AC();

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_1B8D96914(0, v10[2] + 1, 1, v10);
        v21 = v10[2];
        v20 = v10[3];
        if (v21 >= v20 >> 1)
          v10 = sub_1B8D96914((_QWORD *)(v20 > 1), v21 + 1, 1, v10);
        ++v9;
        v10[2] = v21 + 1;
        v22 = &v10[2 * v21];
        v22[4] = a2;
        v22[5] = v19;
        swift_release();
        swift_release();
        v6 = v35;
        if (v34 == v9)
        {
          swift_bridgeObjectRelease_n();
          v23 = (void *)objc_opt_self();
          aBlock = 0;
          v41 = 0xE000000000000000;
          sub_1B8DFDEF8();
          v24 = objc_msgSend(v15, sel_description);
          v25 = sub_1B8DFDB68();
          v27 = v26;

          swift_bridgeObjectRelease();
          aBlock = v25;
          v41 = v27;
          sub_1B8DFDBBC();
          v28 = sub_1B8DFD3AC();
          MEMORY[0x1BCCBC568](v28, MEMORY[0x1E0DEA968]);
          sub_1B8DFDBBC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v29 = (void *)sub_1B8DFDB5C();
          swift_bridgeObjectRelease();
          objc_msgSend(v23, sel_logInfo_, v29);

          a2 = v33;
          goto LABEL_18;
        }
      }
      __break(1u);
LABEL_16:
      sub_1B8DFD3AC();
      v7 = sub_1B8DFDFB8();
      result = swift_bridgeObjectRelease();
      if (!v7)
        goto LABEL_17;
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    v30 = (void *)objc_opt_self();
    v31 = (void *)sub_1B8DFDB5C();
    objc_msgSend(v30, sel_logInfo_, v31);

LABEL_18:
    sub_1B8DFD3AC();
    v32 = (void *)sub_1B8DFDC4C();
    (*(void (**)(uint64_t, void *, _QWORD))(a2 + 16))(a2, v32, 0);

    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1B8D9C704(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001B8E06900 || (sub_1B8DFE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x747865746E6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1B8DFE0D8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1B8D9C7F0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v3 || (sub_1B8DFE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64496D72616C61 && a2 == 0xE700000000000000 || (sub_1B8DFE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1920298856 && a2 == 0xE400000000000000 || (sub_1B8DFE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7235949 && a2 == 0xE300000000000000 || (sub_1B8DFE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x657A6F6F6E537369 && a2 == 0xE900000000000064 || (sub_1B8DFE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x676E697269467369 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1B8DFE0D8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

char *sub_1B8D9CA2C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1B8DFDFF4();
  __break(1u);
  return result;
}

uint64_t sub_1B8D9CB18()
{
  return swift_deallocObject();
}

uint64_t sub_1B8D9CB28()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1B8D9CB4C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1B8D9CB60(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1B8D85A48;
  return sub_1B8D935DC(a1, v4, v5, v6, v7, v8, v9, v10);
}

void sub_1B8D9CC00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1B8D8D990(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t objectdestroy_23Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B8D9CC38()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_19Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B8D9CC90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(type metadata accessor for AlarmEntity() - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_1B8DFDFF4();
  __break(1u);
  return result;
}

unint64_t sub_1B8D9CDA8()
{
  unint64_t result;

  result = qword_1ED36F660;
  if (!qword_1ED36F660)
  {
    result = MEMORY[0x1BCCBD0FC](&protocol conformance descriptor for TimerState, &type metadata for TimerState);
    atomic_store(result, (unint64_t *)&qword_1ED36F660);
  }
  return result;
}

char *sub_1B8D9CDEC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1B8DFDFF4();
  __break(1u);
  return result;
}

uint64_t sub_1B8D9CED4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED36EBA0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1B8DFDFF4();
  __break(1u);
  return result;
}

uint64_t sub_1B8D9CFDC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1B8D9D018(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

_OWORD *sub_1B8D9D04C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1B8D9D05C()
{
  return objectdestroy_91Tm();
}

uint64_t sub_1B8D9D064()
{
  uint64_t *v0;

  return sub_1B8D938C0(v0[2], v0[3], v0[4], (uint64_t)&OBJC_IVAR____TtC18MobileTimerSupport23MTAlarmSessionsProvider_activities, (void (*)(uint64_t, uint64_t))sub_1B8DEBE7C);
}

uint64_t sub_1B8D9D090()
{
  return swift_deallocObject();
}

uint64_t sub_1B8D9D0A4()
{
  uint64_t v0;

  return sub_1B8D944EC(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), &OBJC_IVAR____TtC18MobileTimerSupport23MTAlarmSessionsProvider_activities);
}

uint64_t sub_1B8D9D0C8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8D9D0D8()
{
  return objectdestroy_91Tm();
}

uint64_t objectdestroy_91Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B8D9D118()
{
  uint64_t *v0;

  return sub_1B8D938C0(v0[2], v0[3], v0[4], (uint64_t)&OBJC_IVAR____TtC18MobileTimerSupport23MTTimerSessionsProvider_activities, (void (*)(uint64_t, uint64_t))sub_1B8DEBE70);
}

uint64_t sub_1B8D9D144()
{
  return swift_deallocObject();
}

uint64_t sub_1B8D9D154(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B8D9D190()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B8D9D1B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1B8D85A48;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF1E3EC8 + dword_1EF1E3EC8))(a1, v4);
}

uint64_t objectdestroy_200Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B8D9D254()
{
  uint64_t v0;

  return sub_1B8D944EC(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), &OBJC_IVAR____TtC18MobileTimerSupport23MTTimerSessionsProvider_activities);
}

uint64_t sub_1B8D9D278()
{
  return swift_deallocObject();
}

uint64_t sub_1B8D9D288(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B8D9D3BC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = v0;
  return swift_task_switch();
}

uint64_t sub_1B8D9D3D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[8];
  v2 = swift_task_alloc();
  v0[9] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[10] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1528);
  *v3 = v0;
  v3[1] = sub_1B8D9D484;
  return sub_1B8DFE0F0();
}

uint64_t sub_1B8D9D484()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

void sub_1B8D9D4F0()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 48);
  if (!(v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_1B8DFD3AC();
  v11 = sub_1B8DFDFB8();
  swift_bridgeObjectRelease();
  if (!v11)
    goto LABEL_9;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)MEMORY[0x1BCCBC814](0, v1);
LABEL_6:
    v3 = v2;
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_mutableCopy);

    sub_1B8DFDE5C();
    swift_unknownObjectRelease();
    sub_1B8D9E394(0, (unint64_t *)&unk_1ED36F570);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v4 = *(void **)(v0 + 56);
      v5 = *(void **)(v0 + 64);
      v6 = objc_allocWithZone((Class)DefaultDateProvider);
      v7 = v4;
      v8 = objc_msgSend(v6, sel_init);
      objc_allocWithZone((Class)type metadata accessor for StopwatchViewModel());
      v9 = v5;
      v10 = StopwatchViewModel.init(stopwatch:manager:delegate:dateProvider:registerForNotifications:broadcastUpdates:)(v4, (uint64_t)v5, 0, (uint64_t)v8, 0, 0);

LABEL_11:
      (*(void (**)(uint64_t))(v0 + 8))(v10);
      return;
    }
LABEL_10:
    v10 = 0;
    goto LABEL_11;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v2 = *(id *)(v1 + 32);
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_1B8D9D69C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1B8D9D6D0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(unint64_t, char *, uint64_t);
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t aBlock;
  uint64_t v25;
  void (*v26)(uint64_t, void *);
  void *v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1530);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a2, sel_getStopwatches);
  if (v8)
  {
    v9 = v8;
    v10 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v10((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v12 = swift_allocObject();
    v23 = a1;
    v13 = v12;
    v14 = *(void (**)(unint64_t, char *, uint64_t))(v5 + 32);
    v14(v12 + v11, v7, v4);
    v28 = sub_1B8D9E2C4;
    v29 = v13;
    aBlock = MEMORY[0x1E0C809B0];
    v25 = 1107296256;
    v26 = sub_1B8D9D3B8;
    v27 = &block_descriptor_3;
    v15 = _Block_copy(&aBlock);
    v16 = v9;
    swift_release();
    v17 = objc_msgSend(v16, sel_addSuccessBlock_, v15);
    _Block_release(v15);

    v10(v7, v23, v4);
    v18 = swift_allocObject();
    v14(v18 + v11, v7, v4);
    v28 = sub_1B8D9E338;
    v29 = v18;
    aBlock = MEMORY[0x1E0C809B0];
    v25 = 1107296256;
    v26 = sub_1B8D9D3B8;
    v27 = &block_descriptor_8_0;
    v19 = _Block_copy(&aBlock);
    v20 = v16;
    swift_release();
    v21 = objc_msgSend(v20, sel_addFailureBlock_, v19);

    _Block_release(v19);
  }
}

uint64_t sub_1B8D9D918(void *a1)
{
  id v2;

  sub_1B8D9E394(0, (unint64_t *)&qword_1ED36F7F0);
  v2 = a1;
  sub_1B8DFDFAC();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1530);
  return sub_1B8DFDCD0();
}

uint64_t sub_1B8D9D998(void *a1)
{
  id v1;

  v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1530);
  return sub_1B8DFDCC4();
}

void __swiftcall StopwatchAutoFormatter.init()(MobileTimerSupport::StopwatchAutoFormatter *__return_ptr retstr)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3570]), sel_init);
  v3 = objc_allocWithZone(MEMORY[0x1E0CB3570]);
  v29 = v2;
  v4 = objc_msgSend(v3, sel_init);
  v5 = objc_allocWithZone(MEMORY[0x1E0CB3570]);
  v6 = v4;
  v7 = objc_msgSend(v5, sel_init);
  v8 = objc_allocWithZone(MEMORY[0x1E0CB3570]);
  v9 = v7;
  v10 = objc_msgSend(v8, sel_init);
  v11 = objc_allocWithZone(MEMORY[0x1E0CB3570]);
  v12 = v10;
  v13 = objc_msgSend(v11, sel_init);
  v14 = objc_allocWithZone(MEMORY[0x1E0CB3570]);
  v15 = v13;
  v16 = objc_msgSend(v14, sel_init);
  v17 = objc_allocWithZone(MEMORY[0x1E0CB3570]);
  v18 = v16;
  v19 = objc_msgSend(v17, sel_init);
  v20 = objc_allocWithZone(MEMORY[0x1E0CB3570]);
  v28 = v19;
  v21 = objc_msgSend(v20, sel_init);
  v22 = v29;
  v23 = v6;
  v24 = v9;
  v30 = v12;
  v25 = v15;
  v26 = v18;
  v27 = v21;

  objc_msgSend(v22, sel_setAllowedUnits_, 192);
  objc_msgSend(v22, sel_setUnitsStyle_, 0);
  objc_msgSend(v22, sel_setZeroFormattingBehavior_, 0x10000);
  objc_msgSend(v23, sel_setAllowedUnits_, 224);
  objc_msgSend(v27, sel_setZeroFormattingBehavior_, 0x10000);
  objc_msgSend(v24, sel_setAllowedUnits_, 96);
  objc_msgSend(v24, sel_setUnitsStyle_, 1);
  objc_msgSend(v30, sel_setAllowedUnits_, 32);
  objc_msgSend(v30, sel_setUnitsStyle_, 1);
  objc_msgSend(v25, sel_setAllowedUnits_, 48);
  objc_msgSend(v25, sel_setUnitsStyle_, 1);
  objc_msgSend(v25, sel_setZeroFormattingBehavior_, 14);
  objc_msgSend(v26, sel_setAllowedUnits_, 36);
  objc_msgSend(v26, sel_setUnitsStyle_, 1);
  objc_msgSend(v26, sel_setZeroFormattingBehavior_, 14);
  objc_msgSend(v28, sel_setAllowedUnits_, 20);
  objc_msgSend(v28, sel_setUnitsStyle_, 1);
  objc_msgSend(v28, sel_setZeroFormattingBehavior_, 14);
  objc_msgSend(v27, sel_setAllowedUnits_, 4);
  objc_msgSend(v27, sel_setUnitsStyle_, 1);
  objc_msgSend(v27, sel_setZeroFormattingBehavior_, 14);

  retstr->underOneHourFormatter.super.super.isa = (Class)v22;
  retstr->underTenHourFormatter.super.super.isa = (Class)v23;
  retstr->underHundredHourFormatter.super.super.isa = (Class)v24;
  retstr->underThousandHourFormatter.super.super.isa = (Class)v30;
  retstr->underYearFormatter.super.super.isa = (Class)v25;
  retstr->dayOverYearFormatter.super.super.isa = (Class)v26;
  retstr->overYearFormatter.super.super.isa = (Class)v28;
  retstr->overThousandYearFormatter.super.super.isa = (Class)v27;
  *(_OWORD *)&retstr->oneHour = xmmword_1B8E00CD0;
  *(_OWORD *)&retstr->hundredHours = xmmword_1B8E00CE0;
  *(_OWORD *)&retstr->threeSixtyFiveDays = xmmword_1B8E00CF0;
  retstr->nineNinetyNineYears = 3.1504464e10;
}

Swift::String_optional __swiftcall StopwatchAutoFormatter.formatInterval(_:)(Swift::Double a1)
{
  void *v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  Swift::String_optional result;

  v3 = *(double *)(v2 + 64);
  if (v3 < 0.0)
  {
    __break(1u);
    goto LABEL_39;
  }
  v1 = *(void **)(v2 + 48);
  v5 = *(double *)(v2 + 72);
  v4 = *(double *)(v2 + 80);
  v7 = *(double *)(v2 + 88);
  v6 = *(double *)(v2 + 96);
  v9 = *(double *)(v2 + 104);
  v8 = *(double *)(v2 + 112);
  if (a1 < 0.0 || v3 <= a1)
  {
    if (v3 <= v5)
    {
      if (v3 <= a1 && v5 > a1)
      {
        v10 = objc_msgSend(*(id *)(v2 + 8), sel_stringFromTimeInterval_);
        goto LABEL_21;
      }
      if (v5 <= v4)
      {
        if (v5 <= a1 && v4 > a1)
        {
          v10 = objc_msgSend(*(id *)(v2 + 16), sel_stringFromTimeInterval_);
          goto LABEL_21;
        }
        if (v4 <= v7)
        {
          if (v4 <= a1 && v7 > a1)
          {
            v10 = objc_msgSend(*(id *)(v2 + 24), sel_stringFromTimeInterval_);
            goto LABEL_21;
          }
          if (v7 <= v6)
          {
            if (v7 <= a1 && v6 > a1)
            {
              v10 = objc_msgSend(*(id *)(v2 + 32), sel_stringFromTimeInterval_);
              goto LABEL_21;
            }
            if (v6 <= v9)
            {
              if (v6 <= a1 && v9 > a1)
              {
                v10 = objc_msgSend(*(id *)(v2 + 40), sel_stringFromTimeInterval_);
                goto LABEL_21;
              }
              if (v9 <= v8)
              {
                if (v9 > a1 || v8 <= a1)
                  v10 = objc_msgSend(*(id *)(v2 + 56), sel_stringFromTimeInterval_);
                else
                  v10 = objc_msgSend(v1, sel_stringFromTimeInterval_);
                goto LABEL_21;
              }
LABEL_44:
              __break(1u);
              goto LABEL_45;
            }
LABEL_43:
            __break(1u);
            goto LABEL_44;
          }
LABEL_42:
          __break(1u);
          goto LABEL_43;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v10 = objc_msgSend(*(id *)v2, sel_stringFromTimeInterval_);
LABEL_21:
  v13 = v10;
  if (v13)
  {
    v14 = sub_1B8DFDB68();
    v16 = v15;

  }
  else
  {
    v14 = 0;
    v16 = 0;
  }
  v1 = (void *)v14;
  v17 = v16;
LABEL_45:
  result.value._object = v17;
  result.value._countAndFlagsBits = (uint64_t)v1;
  return result;
}

void destroy for StopwatchAutoFormatter(id *a1)
{

}

uint64_t initializeWithCopy for StopwatchAutoFormatter(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  __int128 v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(void **)(a2 + 32);
  v8 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(void **)(a2 + 48);
  v10 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v11;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v12 = v3;
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v16 = v7;
  v17 = v8;
  v18 = v9;
  v19 = v10;
  return a1;
}

uint64_t assignWithCopy for StopwatchAutoFormatter(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  v16 = *(void **)(a2 + 32);
  v17 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v16;
  v18 = v16;

  v19 = *(void **)(a2 + 40);
  v20 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v19;
  v21 = v19;

  v22 = *(void **)(a2 + 48);
  v23 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v22;
  v24 = v22;

  v25 = *(void **)(a2 + 56);
  v26 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v25;
  v27 = v25;

  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for StopwatchAutoFormatter(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  __int128 v8;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  v7 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for StopwatchAutoFormatter(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StopwatchAutoFormatter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StopwatchAutoFormatter()
{
  return &type metadata for StopwatchAutoFormatter;
}

void sub_1B8D9E2B8(uint64_t a1)
{
  uint64_t v1;

  sub_1B8D9D6D0(a1, *(void **)(v1 + 16));
}

uint64_t sub_1B8D9E2C4(uint64_t a1)
{
  return sub_1B8D9E344(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1B8D9D918);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1530);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1B8D9E338(uint64_t a1)
{
  return sub_1B8D9E344(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1B8D9D998);
}

uint64_t sub_1B8D9E344(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1530) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_1B8D9E394(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_1B8D9E3D8()
{
  unint64_t result;

  result = qword_1EF1E1538;
  if (!qword_1EF1E1538)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E00DD0, &type metadata for AddWorldClockIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1538);
  }
  return result;
}

unint64_t sub_1B8D9E420()
{
  unint64_t result;

  result = qword_1EF1E1540;
  if (!qword_1EF1E1540)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E00DF8, &type metadata for AddWorldClockIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1540);
  }
  return result;
}

uint64_t sub_1B8D9E464()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1B8D9E488()
{
  sub_1B8D9E4C8();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B8D9E4C8()
{
  unint64_t result;

  result = qword_1EF1E1548;
  if (!qword_1EF1E1548)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E00D40, &type metadata for AddWorldClockIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1548);
  }
  return result;
}

uint64_t sub_1B8D9E50C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1B8DFD640();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v5);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1B8DFD664();
}

uint64_t sub_1B8D9E65C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;
  uint64_t v20;

  v20 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v1);
  v19 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1B8DFD640();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1B8DFDB50();
  v9 = MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1B8DFD658();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v12 = *MEMORY[0x1E0CAF9B8];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v13(v6, v12, v3);
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v13(v6, v12, v3);
  v14 = v19;
  sub_1B8DFD664();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1110);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1B8DFF650;
  sub_1B8DFD634();
  v15 = v20;
  sub_1B8DFD310();
  v16 = sub_1B8DFD304();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 0, 1, v16);
}

uint64_t sub_1B8D9E968()
{
  uint64_t v1;

  sub_1B8DFD178();
  return v1;
}

uint64_t sub_1B8D9E9A0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v3;
  return swift_task_switch();
}

uint64_t sub_1B8D9E9BC()
{
  uint64_t v0;

  if (qword_1ED36ED78 != -1)
    swift_once();
  sub_1B8DFD178();
  sub_1B8DDEAD0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = sub_1B8DDBAC0(0);
  sub_1B8D8C494();
  sub_1B8DFD0B8();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8D9EA84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8D9EB30();
  *a1 = result;
  return result;
}

uint64_t sub_1B8D9EAA8()
{
  sub_1B8D9E4C8();
  return sub_1B8DFD07C();
}

ValueMetadata *type metadata accessor for AddWorldClockIntent()
{
  return &type metadata for AddWorldClockIntent;
}

unint64_t sub_1B8D9EAE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF1E1368;
  if (!qword_1EF1E1368)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1E1370);
    result = MEMORY[0x1BCCBD0FC](MEMORY[0x1E0C91580], v1);
    atomic_store(result, (unint64_t *)&qword_1EF1E1368);
  }
  return result;
}

uint64_t sub_1B8D9EB30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v0 = sub_1B8DFD418();
  v37 = *(_QWORD *)(v0 - 8);
  v38 = v0;
  MEMORY[0x1E0C80A78](v0);
  v36 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10D0);
  MEMORY[0x1E0C80A78](v2);
  v35 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E12B8);
  MEMORY[0x1E0C80A78](v4);
  v34 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B8DFDB50();
  v7 = MEMORY[0x1E0C80A78](v6);
  v33 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v10);
  v30 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B8DFD640();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1B8DFD658();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v31 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v32 = (char *)&v29 - v21;
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v22 = *MEMORY[0x1E0CAF9B8];
  v23 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 104);
  v23(v15, v22, v12);
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v23(v15, v22, v12);
  v24 = v30;
  sub_1B8DFD664();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v24, 0, 1, v17);
  v25 = sub_1B8DFDAD8();
  v39 = 0;
  v40 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v34, 1, 1, v25);
  sub_1B8DFDAF0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1558);
  *v15 = type metadata accessor for MTAppIntentsManager();
  v23(v15, *MEMORY[0x1E0CAF9C8], v12);
  sub_1B8DFD79C();
  sub_1B8DFD664();
  v26 = v35;
  sub_1B8DFD0AC();
  v27 = sub_1B8DFD0A0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 0, 1, v27);
  (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v36, *MEMORY[0x1E0C91738], v38);
  return sub_1B8DFD1E4();
}

unint64_t sub_1B8D9EFE0()
{
  unint64_t result;

  result = qword_1EF1E1560;
  if (!qword_1EF1E1560)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E00EF0, &type metadata for ResetStopwatchIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1560);
  }
  return result;
}

unint64_t sub_1B8D9F028()
{
  unint64_t result;

  result = qword_1EF1E1568;
  if (!qword_1EF1E1568)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E00F18, &type metadata for ResetStopwatchIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1568);
  }
  return result;
}

uint64_t sub_1B8D9F06C()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1B8D9F090()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8D9F0A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1B8DFD640();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v5);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0CAF9B8], v1);
  return sub_1B8DFD664();
}

uint64_t sub_1B8D9F1F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD640();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1B8DFDB50();
  v10 = MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v18 = sub_1B8DFD658();
  v11 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v12 = *MEMORY[0x1E0CAF9B8];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v13(v7, v12, v4);
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v13(v7, v12, v4);
  sub_1B8DFD664();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v3, 0, 1, v18);
  v14 = v19;
  sub_1B8DFD310();
  v15 = sub_1B8DFD304();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
}

uint64_t sub_1B8D9F4B0()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1E1590);
  MEMORY[0x1E0C80A78](v0);
  sub_1B8D9F750();
  sub_1B8DFD400();
  return sub_1B8DFD3C4();
}

uint64_t sub_1B8D9F580(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 24) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 32) = v2;
  *v2 = v1;
  v2[1] = sub_1B8D9F5CC;
  return sub_1B8D9D3BC();
}

uint64_t sub_1B8D9F5CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 40) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_1B8D9F640()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);
  if (v1)
  {
    sub_1B8DA3BD0();

  }
  *(_QWORD *)(v0 + 16) = sub_1B8DDBAC0(2);
  sub_1B8D8C494();
  sub_1B8DFD0B8();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8D9F6C0()
{
  sub_1B8D9F750();
  return sub_1B8DFD07C();
}

ValueMetadata *type metadata accessor for ResetStopwatchIntent()
{
  return &type metadata for ResetStopwatchIntent;
}

uint64_t sub_1B8D9F6F8()
{
  return sub_1B8D87FFC(&qword_1EF1E1578, &qword_1EF1E1580, MEMORY[0x1E0C916B0]);
}

uint64_t sub_1B8D9F724()
{
  return sub_1B8D87FFC((unint64_t *)&qword_1EF1E1368, &qword_1EF1E1370, MEMORY[0x1E0C91580]);
}

unint64_t sub_1B8D9F750()
{
  unint64_t result;

  result = qword_1EF1E1588;
  if (!qword_1EF1E1588)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E00E60, &type metadata for ResetStopwatchIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1588);
  }
  return result;
}

uint64_t StopwatchViewModel.__allocating_init(stopwatch:manager:delegate:dateProvider:registerForNotifications:broadcastUpdates:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  objc_class *v6;
  id v13;

  v13 = objc_allocWithZone(v6);
  return StopwatchViewModel.init(stopwatch:manager:delegate:dateProvider:registerForNotifications:broadcastUpdates:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1B8D9F804(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_dateProvider);
  swift_beginAccess();
  *v3 = v2;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t sub_1B8D9F86C()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t sub_1B8D9F8B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_dateProvider);
  swift_beginAccess();
  *v3 = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1B8D9F904())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t StopwatchViewModel.init(stopwatch:manager:delegate:dateProvider:registerForNotifications:broadcastUpdates:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  char *v13;
  uint64_t result;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  objc_class *v27;
  char *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  char *v34;
  id v35;
  char *v36;
  NSObject *v37;
  id v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  _BYTE v54[4];
  int v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t aBlock;
  unint64_t v68;
  uint64_t (*v69)(uint64_t);
  void *v70;
  uint64_t (*v71)();
  uint64_t v72;
  objc_super v73;

  v61 = a6;
  v55 = a5;
  v62 = a4;
  v63 = a2;
  v64 = a3;
  v60 = a1;
  v7 = sub_1B8DFDDB4();
  v58 = *(_QWORD *)(v7 - 8);
  v59 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = &v54[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_1B8DFDDA8();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v10);
  v12 = sub_1B8DFDA30();
  MEMORY[0x1E0C80A78](v12);
  v6[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_broadcastUpdates] = 0;
  v56 = &v6[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_delegate];
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v6[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_displayLink] = 0;
  v57 = OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue;
  sub_1B8D9E394(0, (unint64_t *)&qword_1ED36F840);
  v13 = v6;
  sub_1B8DFDA0C();
  aBlock = MEMORY[0x1E0DEE9D8];
  sub_1B8DA760C((unint64_t *)&unk_1ED36F830, v11, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F810);
  sub_1B8D87FFC((unint64_t *)&qword_1ED36F820, (uint64_t *)&unk_1ED36F810, MEMORY[0x1E0DEAF38]);
  sub_1B8DFDE80();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v58 + 104))(v9, *MEMORY[0x1E0DEF8D0], v59);
  result = sub_1B8DFDDE4();
  *(_QWORD *)&v6[v57] = result;
  v15 = &v13[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_updatedCancellable];
  *(_OWORD *)v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *((_QWORD *)v15 + 4) = 0;
  v16 = &v13[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_lapAddedCancellable];
  *(_OWORD *)v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((_QWORD *)v16 + 4) = 0;
  v17 = &v13[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_clearAllLapsCancellable];
  *(_OWORD *)v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  *((_QWORD *)v17 + 4) = 0;
  v18 = &v13[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_startLapTimerCancellable];
  *(_OWORD *)v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  *((_QWORD *)v18 + 4) = 0;
  v19 = &v13[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_pauseLapTimerCancellable];
  *(_OWORD *)v19 = 0u;
  *((_OWORD *)v19 + 1) = 0u;
  *((_QWORD *)v19 + 4) = 0;
  v20 = &v13[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_lapLapTimerCancellable];
  *(_OWORD *)v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  *((_QWORD *)v20 + 4) = 0;
  v21 = &v13[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_resetLapTimerCancellable];
  *(_OWORD *)v21 = 0u;
  *((_OWORD *)v21 + 1) = 0u;
  *((_QWORD *)v21 + 4) = 0;
  v22 = &v13[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_resumeLapTimerCancellable];
  *((_QWORD *)v22 + 4) = 0;
  *(_OWORD *)v22 = 0u;
  *((_OWORD *)v22 + 1) = 0u;
  if (!v60)
    goto LABEL_15;
  v23 = v60;
  *(_QWORD *)&v13[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_internalStopwatch] = v60;
  result = swift_unknownObjectWeakAssign();
  v24 = v63;
  if (!v63)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  type metadata accessor for SyncManager();
  v25 = swift_allocObject();
  v26 = v23;
  swift_unknownObjectRetain();
  swift_defaultActor_initialize();
  *(_QWORD *)(v25 + 112) = v24;
  *(_QWORD *)&v13[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_syncManager] = v25;
  result = v62;
  if (!v62)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  *(_QWORD *)&v13[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_dateProvider] = v62;
  swift_unknownObjectRetain();

  v27 = (objc_class *)type metadata accessor for StopwatchViewModel();
  v73.receiver = v13;
  v73.super_class = v27;
  v28 = (char *)objc_msgSendSuper2(&v73, sel_init);
  v59 = OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue;
  v29 = *(void **)&v28[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue];
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v28;
  *(_QWORD *)(v30 + 24) = v26;
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = sub_1B8DA019C;
  *(_QWORD *)(v31 + 24) = v30;
  v71 = sub_1B8DA01B0;
  v72 = v31;
  aBlock = MEMORY[0x1E0C809B0];
  v68 = 1107296256;
  v69 = sub_1B8D8CD1C;
  v70 = &block_descriptor_4;
  v32 = _Block_copy(&aBlock);
  v33 = v26;
  v34 = v28;
  v35 = v33;
  v36 = v34;
  v37 = v29;
  sub_1B8DFD22C();
  swift_release();
  dispatch_sync(v37, v32);

  v60 = v35;
  _Block_release(v32);
  LOBYTE(v37) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v37 & 1) != 0)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((v55 & 1) != 0)
    sub_1B8DA01F0();
  v36[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_broadcastUpdates] = v61 & 1;
  aBlock = 0;
  v68 = 0xE000000000000000;
  sub_1B8DFDEF8();
  v38 = objc_msgSend(v36, sel_description);
  sub_1B8DFDB68();

  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  v39 = sub_1B8DFDBBC();
  v40 = *(void **)&v28[v59];
  MEMORY[0x1E0C80A78](v39);
  *(_QWORD *)&v54[-16] = v36;
  sub_1B8D9E394(0, (unint64_t *)&unk_1ED36F570);
  v41 = v40;
  sub_1B8DFDDCC();

  v42 = v65;
  v43 = objc_msgSend(v65, sel_identifier);

  if (v43)
  {
    v44 = (void *)sub_1B8DFDB68();
    v46 = v45;

  }
  else
  {
    v44 = 0;
    v46 = 0;
  }
  v65 = v44;
  v66 = v46;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F7E0);
  sub_1B8DFDF94();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  v47 = objc_msgSend(*(id *)&v36[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_internalStopwatch], sel_identifier);
  if (v47)
  {
    v48 = v47;
    v49 = (void *)sub_1B8DFDB68();
    v51 = v50;

  }
  else
  {
    v49 = 0;
    v51 = 0;
  }
  v65 = v49;
  v66 = v51;
  sub_1B8DFDF94();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  v52 = (void *)objc_opt_self();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  v53 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v52, sel_logInfo_, v53);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return (uint64_t)v36;
}

uint64_t type metadata accessor for SyncManager()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StopwatchViewModel()
{
  return objc_opt_self();
}

uint64_t sub_1B8DA0170()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1B8DA01A0()
{
  return swift_deallocObject();
}

uint64_t sub_1B8DA01B0()
{
  uint64_t v0;

  return sub_1B8D8CCCC(*(uint64_t (**)(void))(v0 + 16));
}

id sub_1B8DA01B8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_internalStopwatch);
  *a1 = v2;
  return v2;
}

uint64_t sub_1B8DA01F0()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v1 = (void *)objc_opt_self();
  sub_1B8DFDEF8();
  v2 = objc_msgSend(v0, sel_description, 0, 0xE000000000000000);
  v3 = sub_1B8DFDB68();
  v5 = v4;
  swift_bridgeObjectRelease();

  sub_1B8DFDBBC();
  v6 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_logInfo_, v6, v3, v5);

  sub_1B8DA4DE8();
  sub_1B8DA5394(MEMORY[0x1E0D4F9E0], (uint64_t)sub_1B8DA7604, (uint64_t)sub_1B8DA77D8, &OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_lapAddedCancellable);
  sub_1B8DA5050();
  sub_1B8DA5394(MEMORY[0x1E0D4F9D8], (uint64_t)sub_1B8DA7604, (uint64_t)sub_1B8DA7798, &OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_startLapTimerCancellable);
  sub_1B8DA5394(MEMORY[0x1E0D4F9C0], (uint64_t)sub_1B8DA7604, (uint64_t)sub_1B8DA7778, &OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_pauseLapTimerCancellable);
  sub_1B8DA5394(MEMORY[0x1E0D4F9B8], (uint64_t)sub_1B8DA7604, (uint64_t)sub_1B8DA7758, &OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_lapLapTimerCancellable);
  sub_1B8DA5394(MEMORY[0x1E0D4F9C8], (uint64_t)sub_1B8DA7604, (uint64_t)sub_1B8DA7738, &OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_resetLapTimerCancellable);
  return sub_1B8DA5394(MEMORY[0x1E0D4F9D0], (uint64_t)sub_1B8DA7604, (uint64_t)sub_1B8DA764C, &OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_resumeLapTimerCancellable);
}

id StopwatchViewModel.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  StopwatchViewModel.unregisterNotifications()();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StopwatchViewModel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall StopwatchViewModel.unregisterNotifications()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  _BYTE v12[24];
  uint64_t v13;

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_updatedCancellable;
  swift_beginAccess();
  sub_1B8DA0908(v2, (uint64_t)v12);
  if (v13)
  {
    sub_1B8DA0950((uint64_t)v12, (uint64_t)v10);
    sub_1B8D9D154((uint64_t)v12, &qword_1ED36F568);
    __swift_project_boxed_opaque_existential_1(v10, v11);
    sub_1B8DFD9AC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    sub_1B8D9D154((uint64_t)v12, &qword_1ED36F568);
  }
  v3 = v1 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_lapAddedCancellable;
  swift_beginAccess();
  sub_1B8DA0908(v3, (uint64_t)v12);
  if (v13)
  {
    sub_1B8DA0950((uint64_t)v12, (uint64_t)v10);
    sub_1B8D9D154((uint64_t)v12, &qword_1ED36F568);
    __swift_project_boxed_opaque_existential_1(v10, v11);
    sub_1B8DFD9AC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    sub_1B8D9D154((uint64_t)v12, &qword_1ED36F568);
  }
  v4 = v1 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_clearAllLapsCancellable;
  swift_beginAccess();
  sub_1B8DA0908(v4, (uint64_t)v12);
  if (v13)
  {
    sub_1B8DA0950((uint64_t)v12, (uint64_t)v10);
    sub_1B8D9D154((uint64_t)v12, &qword_1ED36F568);
    __swift_project_boxed_opaque_existential_1(v10, v11);
    sub_1B8DFD9AC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    sub_1B8D9D154((uint64_t)v12, &qword_1ED36F568);
  }
  v5 = v1 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_startLapTimerCancellable;
  swift_beginAccess();
  sub_1B8DA0908(v5, (uint64_t)v12);
  if (v13)
  {
    sub_1B8DA0950((uint64_t)v12, (uint64_t)v10);
    sub_1B8D9D154((uint64_t)v12, &qword_1ED36F568);
    __swift_project_boxed_opaque_existential_1(v10, v11);
    sub_1B8DFD9AC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    sub_1B8D9D154((uint64_t)v12, &qword_1ED36F568);
  }
  v6 = v1 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_pauseLapTimerCancellable;
  swift_beginAccess();
  sub_1B8DA0908(v6, (uint64_t)v12);
  if (v13)
  {
    sub_1B8DA0950((uint64_t)v12, (uint64_t)v10);
    sub_1B8D9D154((uint64_t)v12, &qword_1ED36F568);
    __swift_project_boxed_opaque_existential_1(v10, v11);
    sub_1B8DFD9AC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    sub_1B8D9D154((uint64_t)v12, &qword_1ED36F568);
  }
  v7 = v1 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_lapLapTimerCancellable;
  swift_beginAccess();
  sub_1B8DA0908(v7, (uint64_t)v12);
  if (v13)
  {
    sub_1B8DA0950((uint64_t)v12, (uint64_t)v10);
    sub_1B8D9D154((uint64_t)v12, &qword_1ED36F568);
    __swift_project_boxed_opaque_existential_1(v10, v11);
    sub_1B8DFD9AC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    sub_1B8D9D154((uint64_t)v12, &qword_1ED36F568);
  }
  v8 = v1 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_resetLapTimerCancellable;
  swift_beginAccess();
  sub_1B8DA0908(v8, (uint64_t)v12);
  if (v13)
  {
    sub_1B8DA0950((uint64_t)v12, (uint64_t)v10);
    sub_1B8D9D154((uint64_t)v12, &qword_1ED36F568);
    __swift_project_boxed_opaque_existential_1(v10, v11);
    sub_1B8DFD9AC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    sub_1B8D9D154((uint64_t)v12, &qword_1ED36F568);
  }
  v9 = v1 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_resumeLapTimerCancellable;
  swift_beginAccess();
  sub_1B8DA0908(v9, (uint64_t)v12);
  if (v13)
  {
    sub_1B8DA0950((uint64_t)v12, (uint64_t)v10);
    sub_1B8D9D154((uint64_t)v12, &qword_1ED36F568);
    __swift_project_boxed_opaque_existential_1(v10, v11);
    sub_1B8DFD9AC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    sub_1B8D9D154((uint64_t)v12, &qword_1ED36F568);
  }
}

uint64_t sub_1B8DA0908(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8DA0950(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1B8DA0AFC(void *a1)
{
  char *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  NSObject *v8;
  char *v9;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v12[6];

  v3 = *(void **)&v1[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue];
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = a1;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1B8DA019C;
  *(_QWORD *)(v5 + 24) = v4;
  v12[4] = sub_1B8DA792C;
  v12[5] = v5;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1B8D8CD1C;
  v12[3] = &block_descriptor_14;
  v6 = _Block_copy(v12);
  v7 = a1;
  v8 = v3;
  v9 = v1;
  sub_1B8DFD22C();
  swift_release();
  dispatch_sync(v8, v6);

  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1B8DA0C4C()
{
  return swift_deallocObject();
}

void sub_1B8DA0CB0(double a1)
{
  sub_1B8DA0D04(1, a1);
}

void sub_1B8DA0D04(int a1, double a2)
{
  char *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  double v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  _QWORD *v34;
  id v35;
  _BYTE v36[12];
  int v37;
  void *v38;
  id v39;
  id v40;
  unint64_t v41;
  uint64_t v42;

  v3 = v2;
  v37 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v36[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *(void **)&v2[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue];
  v38 = v3;
  sub_1B8D9E394(0, (unint64_t *)&unk_1ED36F570);
  v9 = v8;
  sub_1B8DFDDCC();

  v10 = v40;
  v11 = objc_msgSend(v40, sel_laps);

  if (v11)
  {
    sub_1B8D9E394(0, &qword_1ED36ED68);
    v12 = sub_1B8DFDC64();

  }
  else
  {
    v12 = MEMORY[0x1E0DEE9D8];
  }
  v42 = v12;
  sub_1B8D9E394(0, &qword_1ED36ED68);
  v13 = (id)sub_1B8DFDE14();
  MEMORY[0x1BCCBC538]();
  if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1B8DFDC88();
  sub_1B8DFDCA0();
  v14 = sub_1B8DFDC7C();
  MEMORY[0x1E0C80A78](v14);
  *(_QWORD *)&v36[-16] = v3;
  v16 = v15;
  sub_1B8DFDDCC();

  v17 = v40;
  v18 = (void *)sub_1B8DFDC4C();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setLaps_, v18);

  MEMORY[0x1E0C80A78](v19);
  *(_QWORD *)&v36[-16] = v3;
  v21 = v20;
  sub_1B8DFDDCC();

  v22 = v40;
  objc_msgSend(v40, sel_previousLapsTotalInterval);
  objc_msgSend(v22, sel_setPreviousLapsTotalInterval_, v23 + a2);

  v40 = 0;
  v41 = 0xE000000000000000;
  sub_1B8DFDEF8();
  v24 = objc_msgSend(v3, sel_description);
  sub_1B8DFDB68();

  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  sub_1B8DFDD78();
  v25 = sub_1B8DFDBBC();
  MEMORY[0x1E0C80A78](v25);
  *(_QWORD *)&v36[-16] = v3;
  v27 = v26;
  sub_1B8DFDDCC();

  v28 = v39;
  v29 = objc_msgSend(v39, sel_laps);

  if (v29)
  {
    v30 = (void *)sub_1B8DFDC64();

  }
  else
  {
    v30 = 0;
  }
  v31 = (void *)objc_opt_self();
  v39 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36ED60);
  sub_1B8DFDF94();
  swift_bridgeObjectRelease();
  v32 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_logInfo_, v32);

  if ((v37 & 1) != 0)
  {
    v33 = sub_1B8DFDD00();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v7, 1, 1, v33);
    v34 = (_QWORD *)swift_allocObject();
    v34[2] = 0;
    v34[3] = 0;
    v34[4] = v3;
    v34[5] = v13;
    v35 = v3;
    sub_1B8D8DEC0((uint64_t)v7, (uint64_t)&unk_1EF1E16A0, (uint64_t)v34);
    swift_release();
  }
  else
  {

  }
}

uint64_t sub_1B8DA1204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 24) = a4;
  *(_QWORD *)(v5 + 32) = a5;
  return swift_task_switch();
}

uint64_t sub_1B8DA121C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(*(_QWORD *)(v0 + 24)
                                   + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_syncManager);
  sub_1B8DFD22C();
  return swift_task_switch();
}

uint64_t sub_1B8DA126C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(void **)(*(_QWORD *)(v0 + 40) + 112);
  v4 = *(void **)(v2 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue);
  *(_QWORD *)(swift_task_alloc() + 16) = v2;
  sub_1B8D9E394(0, (unint64_t *)&unk_1ED36F570);
  v5 = v4;
  sub_1B8DFDDCC();

  swift_task_dealloc();
  v6 = *(void **)(v0 + 16);
  v7 = objc_msgSend(v3, sel_didAddLap_forStopwatch_sender_, v1, v6, v2);

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DA136C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _BYTE v17[16];
  char *v18;
  char *v19;
  id v20;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue;
  v6 = *(void **)&v0[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue];
  v19 = v1;
  sub_1B8D9E394(0, (unint64_t *)&unk_1ED36F570);
  v7 = v6;
  sub_1B8DFDDCC();

  v8 = v20;
  sub_1B8D9E394(0, &qword_1ED36ED68);
  v9 = (void *)sub_1B8DFDC4C();
  objc_msgSend(v8, sel_setLaps_, v9);

  v10 = *(void **)&v1[v5];
  v18 = v1;
  v11 = v10;
  sub_1B8DFDDCC();

  v12 = v20;
  objc_msgSend(v20, sel_setPreviousLapsTotalInterval_, 0.0);

  v13 = sub_1B8DFDD00();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = v1;
  v15 = v1;
  sub_1B8D8DEC0((uint64_t)v4, (uint64_t)&unk_1EF1E1628, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_1B8DA1528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_1B8DA1540()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 24)
                                   + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_syncManager);
  sub_1B8DFD22C();
  return swift_task_switch();
}

uint64_t sub_1B8DA1590()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(void **)(*(_QWORD *)(v0 + 32) + 112);
  v3 = *(void **)(v1 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue);
  *(_QWORD *)(swift_task_alloc() + 16) = v1;
  sub_1B8D9E394(0, (unint64_t *)&unk_1ED36F570);
  v4 = v3;
  sub_1B8DFDDCC();

  swift_task_dealloc();
  v5 = *(void **)(v0 + 16);
  v6 = objc_msgSend(v2, sel_didClearAllLapsForStopwatch_sender_, v5, v1);

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DA1684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B8D9D2E0;
  v3[3] = v2;
  return swift_task_switch();
}

void sub_1B8DA1718()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v1 = objc_msgSend((id)objc_opt_self(), sel_displayLinkWithTarget_selector_, v0, sel_updateTime);
  v2 = OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_displayLink;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_displayLink);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_displayLink) = v1;

  v4 = *(void **)(v0 + v2);
  if (v4)
  {
    objc_msgSend(v4, sel_setFrameInterval_, 2);
    v5 = *(void **)(v0 + v2);
    if (v5)
    {
      v6 = (void *)objc_opt_self();
      v7 = v5;
      v8 = objc_msgSend(v6, sel_currentRunLoop);
      objc_msgSend(v7, sel_addToRunLoop_forMode_, v8, *MEMORY[0x1E0C99860]);

    }
  }
}

void sub_1B8DA183C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_displayLink;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_displayLink), sel_invalidate);
  v2 = *(void **)(v0 + v1);
  *(_QWORD *)(v0 + v1) = 0;

}

uint64_t sub_1B8DA18D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  void (*v17)(char *, char *, uint64_t);
  double v18;
  uint64_t v19;
  void *v20;
  void *v21;
  double v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  double v31;
  double v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  double v37;
  double v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  double v43;
  double v44;
  double v45;
  void *v46;
  id v47;
  double v48;
  double v49;
  id v50;
  id v51;
  id v52;
  double v53;
  double v54;
  double v55;
  double v56;
  uint64_t result;
  void *v58;
  id v59;
  id v60;
  id v61;
  double v62;
  double v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  id v70;
  id v71;
  id v72;
  id v73;
  _QWORD v74[7];
  id v75;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFD748();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v74 - v10;
  v12 = *(void **)(v0 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue);
  v74[4] = v1;
  v13 = sub_1B8D9E394(0, (unint64_t *)&unk_1ED36F570);
  v14 = v12;
  v74[1] = v13;
  sub_1B8DFDDCC();

  v15 = v75;
  v16 = objc_msgSend(v75, sel_startDate);

  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_7;
  }
  sub_1B8DFD718();

  v17 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v17(v4, v9, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_7:
    v23 = sub_1B8D9D154((uint64_t)v4, (uint64_t *)&unk_1ED36F800);
    v22 = 0.0;
    goto LABEL_10;
  }
  v17(v11, v4, v5);
  sub_1B8DFD6F4();
  if (v18 <= 0.0)
  {
    v22 = -v18;
  }
  else
  {
    v19 = OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_displayLink;
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_displayLink), sel_invalidate);
    v20 = *(void **)(v1 + v19);
    *(_QWORD *)(v1 + v19) = 0;

    v21 = (void *)MEMORY[0x1BCCBD264](v1 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_delegate);
    v22 = 0.0;
    if (v21)
    {
      objc_msgSend(v21, sel_didPauseStopwatch);
      swift_unknownObjectRelease();
    }
  }
  v23 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_10:
  MEMORY[0x1E0C80A78](v23);
  v74[-2] = v1;
  v25 = v24;
  sub_1B8DFDDCC();

  v26 = v75;
  MEMORY[0x1E0C80A78](v27);
  v74[-2] = v1;
  v29 = v28;
  sub_1B8DFDDCC();

  v30 = v75;
  objc_msgSend(v75, sel_offset);
  v32 = v31;

  objc_msgSend(v26, sel_setCurrentInterval_, v22 + v32);
  MEMORY[0x1E0C80A78](v33);
  v74[-2] = v1;
  v35 = v34;
  sub_1B8DFDDCC();

  v36 = v75;
  objc_msgSend(v75, sel_currentInterval);
  v38 = v37;

  MEMORY[0x1E0C80A78](v39);
  v74[-2] = v1;
  v41 = v40;
  sub_1B8DFDDCC();

  v42 = v75;
  objc_msgSend(v75, sel_previousLapsTotalInterval);
  v44 = v43;

  v45 = v38 + v44;
  v46 = (void *)objc_opt_self();
  v47 = objc_msgSend(v46, sel__timeAdjustedFor30fpsDisplay_, v45);
  v49 = v48;
  MEMORY[0x1E0C80A78](v47);
  v74[-2] = v1;
  v51 = v50;
  sub_1B8DFDDCC();

  v52 = v75;
  objc_msgSend(v75, sel_currentInterval);
  v54 = v53;

  objc_msgSend(v46, sel__timeAdjustedFor30fpsDisplay_, v54);
  v56 = v55;
  result = MEMORY[0x1BCCBD264](v1 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_delegate);
  if (result)
  {
    v58 = (void *)result;
    MEMORY[0x1E0C80A78](result);
    v74[-2] = v1;
    v60 = v59;
    sub_1B8DFDDCC();

    v61 = v75;
    objc_msgSend(v75, sel_currentInterval);
    v63 = v62;

    MEMORY[0x1E0C80A78](v64);
    v74[-2] = v1;
    v66 = v65;
    sub_1B8DFDDCC();

    v67 = v75;
    v68 = objc_msgSend(v75, sel_state);

    MEMORY[0x1E0C80A78](v69);
    v74[-2] = v1;
    v71 = v70;
    sub_1B8DFDDCC();

    v72 = v75;
    v73 = objc_msgSend(v75, sel_state);

    objc_msgSend(v58, sel_didUpdateCurrentInterval_adjustedCurrentInterval_totalInterval_adjustedTotalInterval_isStopwatchRunning_isStopwatchStopped_, v68 == (id)2, v73 == 0, v63, v56, v45, v49);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1B8DA1F8C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id *v39;
  id v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  id v62;
  uint64_t v63;
  id v64;
  unint64_t v65;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFD748();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)&v0[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue];
  v61 = v1;
  v13 = sub_1B8D9E394(0, (unint64_t *)&unk_1ED36F570);
  v14 = v12;
  v60 = v13;
  sub_1B8DFDDCC();

  v15 = v64;
  v16 = objc_msgSend(v64, sel_state);

  if (v16 == (id)2)
  {
    v64 = 0;
    v65 = 0xE000000000000000;
    sub_1B8DFDEF8();
    v18 = objc_msgSend(v1, sel_description);
    sub_1B8DFDB68();

    sub_1B8DFDBBC();
    swift_bridgeObjectRelease();
    v19 = sub_1B8DFDBBC();
    MEMORY[0x1E0C80A78](v19);
    *(&v55 - 2) = v1;
    v21 = v20;
    sub_1B8DFDDCC();

    v22 = v62;
    v23 = objc_msgSend(v62, sel_identifier);

    if (v23)
    {
      v24 = (void *)sub_1B8DFDB68();
      v26 = v25;

    }
    else
    {
      v24 = 0;
      v26 = 0;
    }
    v45 = (void *)objc_opt_self();
    v62 = v24;
    v63 = v26;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F7E0);
    sub_1B8DFDF94();
    swift_bridgeObjectRelease();
    sub_1B8DFDBBC();
    v46 = (void *)sub_1B8DFDB5C();
    swift_bridgeObjectRelease();
    objc_msgSend(v45, sel_logInfo_, v46);

  }
  else
  {
    v56 = v11;
    v57 = v6;
    v58 = v5;
    v59 = v4;
    v55 = v8;
    MEMORY[0x1E0C80A78](v17);
    *(&v55 - 2) = v1;
    v28 = v27;
    sub_1B8DFDDCC();

    v29 = v64;
    sub_1B8D9E394(0, &qword_1ED36ED68);
    v30 = (void *)sub_1B8DFDC4C();
    objc_msgSend(v29, sel_setLaps_, v30);

    MEMORY[0x1E0C80A78](v31);
    *(&v55 - 2) = v1;
    v33 = v32;
    sub_1B8DFDDCC();

    v34 = v64;
    objc_msgSend(v64, sel_setOffset_, 0.0);

    MEMORY[0x1E0C80A78](v35);
    *(&v55 - 2) = v1;
    v37 = v36;
    sub_1B8DFDDCC();

    v38 = v64;
    v39 = (id *)&v1[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_dateProvider];
    swift_beginAccess();
    v40 = objc_msgSend(*v39, sel_date);
    if (v40)
    {
      v41 = v55;
      sub_1B8DFD718();

      v43 = v56;
      v42 = v57;
      v44 = v58;
      (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v56, v41, v58);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v43, 0, 1, v44);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v43, 1, v44) == 1)
      {
        v40 = 0;
      }
      else
      {
        v40 = (id)sub_1B8DFD6D0();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56))(v56, 1, 1, v58);
    }
    v47 = (uint64_t)v59;
    objc_msgSend(v38, sel_setStartDate_, v40);

    MEMORY[0x1E0C80A78](v48);
    *(&v55 - 2) = v1;
    v50 = v49;
    sub_1B8DFDDCC();

    v51 = v62;
    objc_msgSend(v62, sel_setState_, 2);

    v52 = sub_1B8DFDD00();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v47, 1, 1, v52);
    v53 = (_QWORD *)swift_allocObject();
    v53[2] = 0;
    v53[3] = 0;
    v53[4] = v1;
    v54 = v1;
    sub_1B8D8DEC0(v47, (uint64_t)&unk_1EF1E1640, (uint64_t)v53);
    swift_release();
  }
}

uint64_t sub_1B8DA25FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_1B8DA2614()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 24)
                                   + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_syncManager);
  swift_unknownObjectWeakInit();
  sub_1B8DFD22C();
  return swift_task_switch();
}

uint64_t sub_1B8DA266C()
{
  uint64_t v0;

  sub_1B8DA3170(*(void **)(*(_QWORD *)(v0 + 32) + 112), v0 + 16, (uint64_t)sub_1B8DA7940, (SEL *)&selRef_didStartLapTimerForStopwatch_sender_);
  swift_release();
  swift_unknownObjectWeakDestroy();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1B8DA26FC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void (*v32)(char *, char *, uint64_t);
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id *v39;
  id v40;
  void *v41;
  char *v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  char *v48;
  char *v49;
  double v50;
  double v51;
  void (*v52)(char *, uint64_t);
  double v53;
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  id v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;
  void *v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  void *v74;
  void *v75;
  uint64_t (*v76)(char *, uint64_t, uint64_t);
  void (*v77)(char *, char *, uint64_t);
  void (*v78)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  id v85;
  unint64_t v86;
  id v87;
  uint64_t v88;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v2);
  v80 = (char *)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD748();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  v9 = MEMORY[0x1E0C80A78](v8);
  v81 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v83 = (char *)&v76 - v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v76 - v13;
  v15 = OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue;
  v16 = *(void **)&v0[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue];
  v84 = v1;
  v17 = sub_1B8D9E394(0, (unint64_t *)&unk_1ED36F570);
  v18 = v16;
  sub_1B8DFDDCC();

  v19 = v85;
  v20 = objc_msgSend(v85, sel_state);

  if (v20 == (id)1)
  {
    v85 = 0;
    v86 = 0xE000000000000000;
    sub_1B8DFDEF8();
    v22 = objc_msgSend(v1, sel_description);
    sub_1B8DFDB68();

    sub_1B8DFDBBC();
    swift_bridgeObjectRelease();
    v23 = sub_1B8DFDBBC();
    MEMORY[0x1E0C80A78](v23);
    *(&v76 - 2) = (uint64_t (*)(char *, uint64_t, uint64_t))v1;
    v25 = v24;
    sub_1B8DFDDCC();

    v26 = v87;
    v27 = objc_msgSend(v87, sel_identifier);

    if (!v27)
    {
      v66 = 0;
      v67 = 0;
LABEL_16:
      v74 = (void *)objc_opt_self();
      v87 = v66;
      v88 = v67;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F7E0);
      sub_1B8DFDF94();
      swift_bridgeObjectRelease();
      sub_1B8DFDBBC();
      v75 = (void *)sub_1B8DFDB5C();
      swift_bridgeObjectRelease();
      objc_msgSend(v74, sel_logInfo_, v75);

      return;
    }
LABEL_14:
    v66 = (void *)sub_1B8DFDB68();
    v67 = v73;

    goto LABEL_16;
  }
  v79 = v15;
  MEMORY[0x1E0C80A78](v21);
  *(&v76 - 2) = (uint64_t (*)(char *, uint64_t, uint64_t))v1;
  v29 = v28;
  v82 = v17;
  sub_1B8DFDDCC();

  v30 = v85;
  v31 = objc_msgSend(v85, sel_startDate);

  if (!v31)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v14, 1, 1, v4);
LABEL_13:
    sub_1B8D9D154((uint64_t)v14, (uint64_t *)&unk_1ED36F800);
    v85 = 0;
    v86 = 0xE000000000000000;
    sub_1B8DFDEF8();
    v68 = objc_msgSend(v1, sel_description);
    sub_1B8DFDB68();

    sub_1B8DFDBBC();
    swift_bridgeObjectRelease();
    v69 = sub_1B8DFDBBC();
    MEMORY[0x1E0C80A78](v69);
    *(&v76 - 2) = (uint64_t (*)(char *, uint64_t, uint64_t))v1;
    v71 = v70;
    sub_1B8DFDDCC();

    v72 = v87;
    v27 = objc_msgSend(v87, sel_identifier);

    if (!v27)
    {
      v66 = 0;
      v67 = 0;
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  sub_1B8DFD718();

  v32 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v32(v14, v7, v4);
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v33(v14, 0, 1, v4);
  v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v34(v14, 1, v4) == 1)
    goto LABEL_13;
  v76 = (uint64_t (*)(char *, uint64_t, uint64_t))v34;
  v77 = v32;
  v78 = v33;
  v35 = sub_1B8D9D154((uint64_t)v14, (uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v35);
  *(&v76 - 2) = (uint64_t (*)(char *, uint64_t, uint64_t))v1;
  v37 = v36;
  sub_1B8DFDDCC();

  v38 = v85;
  v39 = (id *)&v1[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_dateProvider];
  swift_beginAccess();
  v40 = objc_msgSend(*v39, sel_date);
  if (!v40)
  {
    v78(v83, 1, 1, v4);
    goto LABEL_18;
  }
  v41 = v40;
  sub_1B8DFD718();

  v42 = v83;
  v77(v83, v7, v4);
  v78(v42, 0, 1, v4);
  v43 = v76(v42, 1, v4);
  if ((_DWORD)v43 == 1)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  MEMORY[0x1E0C80A78](v43);
  *(&v76 - 2) = (uint64_t (*)(char *, uint64_t, uint64_t))v1;
  v45 = v44;
  sub_1B8DFDDCC();

  v46 = v87;
  v47 = objc_msgSend(v87, sel_startDate);

  if (v47)
  {
    sub_1B8DFD718();

    v48 = v81;
    v77(v81, v7, v4);
    v78(v48, 0, 1, v4);
    if (v76(v48, 1, v4) != 1)
    {
      v49 = v83;
      sub_1B8DFD6B8();
      v51 = v50;
      v52 = *(void (**)(char *, uint64_t))(v5 + 8);
      v52(v48, v4);
      v52(v49, v4);
      objc_msgSend(v38, sel_offset);
      objc_msgSend(v38, sel_setOffset_, v51 + v53);

      MEMORY[0x1E0C80A78](v54);
      *(&v76 - 2) = (uint64_t (*)(char *, uint64_t, uint64_t))v1;
      v56 = v55;
      sub_1B8DFDDCC();

      v57 = v87;
      objc_msgSend(v87, sel_setStartDate_, 0);

      MEMORY[0x1E0C80A78](v58);
      *(&v76 - 2) = (uint64_t (*)(char *, uint64_t, uint64_t))v1;
      v60 = v59;
      sub_1B8DFDDCC();

      v61 = v87;
      objc_msgSend(v87, sel_setState_, 1);

      v62 = sub_1B8DFDD00();
      v63 = (uint64_t)v80;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v80, 1, 1, v62);
      v64 = (_QWORD *)swift_allocObject();
      v64[2] = 0;
      v64[3] = 0;
      v64[4] = v1;
      v65 = v1;
      sub_1B8D8DEC0(v63, (uint64_t)&unk_1EF1E1650, (uint64_t)v64);
      swift_release();
      return;
    }
    goto LABEL_20;
  }
LABEL_19:
  v78(v81, 1, 1, v4);
LABEL_20:
  __break(1u);
}

uint64_t sub_1B8DA30A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_1B8DA30BC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 24)
                                   + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_syncManager);
  swift_unknownObjectWeakInit();
  sub_1B8DFD22C();
  return swift_task_switch();
}

uint64_t sub_1B8DA3114()
{
  uint64_t v0;

  sub_1B8DA3170(*(void **)(*(_QWORD *)(v0 + 32) + 112), v0 + 16, (uint64_t)sub_1B8DA7940, (SEL *)&selRef_didPauseLapTimerForStopwatch_sender_);
  swift_release();
  swift_unknownObjectWeakDestroy();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1B8DA3170(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;

  swift_beginAccess();
  v7 = MEMORY[0x1BCCBD264](a2);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = *(void **)(v7 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue);
    MEMORY[0x1E0C80A78](v7);
    sub_1B8D9E394(0, (unint64_t *)&unk_1ED36F570);
    v10 = v9;
    sub_1B8DFDDCC();

    v11 = v13;
  }
  else
  {
    v11 = 0;
  }
  swift_beginAccess();
  v12 = (void *)MEMORY[0x1BCCBD264](a2);

}

void sub_1B8DA32E8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id *v27;
  id v28;
  void *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  int v38;
  uint64_t v39;
  char *v40;
  double v41;
  double v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  double v47;
  double v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  _QWORD *v59;
  char *v60;
  id v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  id v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  _QWORD v71[2];
  char *v72;
  id v73;
  char *v74;
  uint64_t v75;
  char *v76;
  id v77;
  unint64_t v78;
  id v79;
  uint64_t v80;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v2);
  v72 = (char *)v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v71 - v8;
  v10 = sub_1B8DFD748();
  v75 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v74 = (char *)v71 - v14;
  v15 = (void *)objc_opt_self();
  v77 = 0;
  v78 = 0xE000000000000000;
  sub_1B8DFDEF8();
  v16 = objc_msgSend(v0, sel_description);
  v17 = (void *)sub_1B8DFDB68();
  v19 = v18;
  swift_bridgeObjectRelease();

  v77 = v17;
  v78 = v19;
  sub_1B8DFDBBC();
  v20 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  v73 = v15;
  objc_msgSend(v15, sel_logInfo_, v20);

  v21 = OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue;
  v22 = *(void **)&v0[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue];
  v76 = v1;
  v23 = (void *)sub_1B8D9E394(0, (unint64_t *)&unk_1ED36F570);
  v24 = v22;
  sub_1B8DFDDCC();

  v25 = v77;
  v26 = objc_msgSend(v77, sel_state);

  if (v26 == (id)2)
  {
    v71[1] = v21;
    v73 = v23;
    v27 = (id *)&v1[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_dateProvider];
    swift_beginAccess();
    v28 = objc_msgSend(*v27, sel_date);
    if (v28)
    {
      v29 = v28;
      sub_1B8DFD718();

      v30 = v75;
      v31 = *(void (**)(char *, char *, uint64_t))(v75 + 32);
      v31(v9, v13, v10);
      v71[0] = *(_QWORD *)(v30 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v71[0])(v9, 0, 1, v10);
      v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
      if (v32(v9, 1, v10) != 1)
      {
        v33 = ((uint64_t (*)(char *, char *, uint64_t))v31)(v74, v9, v10);
        MEMORY[0x1E0C80A78](v33);
        v71[-2] = v1;
        v35 = v34;
        sub_1B8DFDDCC();

        v36 = v79;
        v37 = objc_msgSend(v79, sel_startDate);

        if (v37)
        {
          sub_1B8DFD718();

          v31(v7, v13, v10);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v71[0])(v7, 0, 1, v10);
          v38 = v32(v7, 1, v10);
          v39 = (uint64_t)v72;
          if (v38 != 1)
          {
            v40 = v74;
            sub_1B8DFD6B8();
            v42 = v41;
            v75 = *(_QWORD *)(v75 + 8);
            v43 = ((uint64_t (*)(char *, uint64_t))v75)(v7, v10);
            MEMORY[0x1E0C80A78](v43);
            v71[-2] = v1;
            v45 = v44;
            sub_1B8DFDDCC();

            v46 = v79;
            objc_msgSend(v79, sel_offset);
            v48 = v47;

            sub_1B8DA0D04(0, v42 + v48);
            MEMORY[0x1E0C80A78](v49);
            v71[-2] = v1;
            v51 = v50;
            sub_1B8DFDDCC();

            v52 = v79;
            v53 = (void *)sub_1B8DFD6D0();
            objc_msgSend(v52, sel_setStartDate_, v53);

            MEMORY[0x1E0C80A78](v54);
            v71[-2] = v1;
            v56 = v55;
            sub_1B8DFDDCC();

            v57 = v79;
            objc_msgSend(v79, sel_setOffset_, 0.0);

            v58 = sub_1B8DFDD00();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v39, 1, 1, v58);
            v59 = (_QWORD *)swift_allocObject();
            v59[2] = 0;
            v59[3] = 0;
            v59[4] = v1;
            v60 = v1;
            sub_1B8D8DEC0(v39, (uint64_t)&unk_1EF1E1660, (uint64_t)v59);
            swift_release();
            ((void (*)(char *, uint64_t))v75)(v40, v10);
            return;
          }
          goto LABEL_14;
        }
LABEL_13:
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v71[0])(v7, 1, 1, v10);
LABEL_14:
        __break(1u);
        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v75 + 56))(v9, 1, 1, v10);
    }
    __break(1u);
    goto LABEL_13;
  }
  v77 = 0;
  v78 = 0xE000000000000000;
  sub_1B8DFDEF8();
  v61 = objc_msgSend(v1, sel_description);
  sub_1B8DFDB68();

  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  v62 = sub_1B8DFDBBC();
  MEMORY[0x1E0C80A78](v62);
  v71[-2] = v1;
  v64 = v63;
  sub_1B8DFDDCC();

  v65 = v79;
  v66 = objc_msgSend(v79, sel_identifier);

  if (v66)
  {
    v67 = (void *)sub_1B8DFDB68();
    v69 = v68;

  }
  else
  {
    v67 = 0;
    v69 = 0;
  }
  v79 = v67;
  v80 = v69;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F7E0);
  sub_1B8DFDF94();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  v70 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v73, sel_logInfo_, v70);

}

uint64_t sub_1B8DA3AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_1B8DA3AE8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 24)
                                   + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_syncManager);
  swift_unknownObjectWeakInit();
  sub_1B8DFD22C();
  return swift_task_switch();
}

uint64_t sub_1B8DA3B40()
{
  uint64_t v0;

  sub_1B8DA3170(*(void **)(*(_QWORD *)(v0 + 32) + 112), v0 + 16, (uint64_t)sub_1B8DA7940, (SEL *)&selRef_didLapLapTimerForStopwatch_sender_);
  swift_release();
  swift_unknownObjectWeakDestroy();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1B8DA3BD0()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  _BYTE v35[16];
  void *v36;
  id v37;
  uint64_t v38;
  id v39;
  unint64_t v40;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v35[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(void **)&v0[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue];
  v36 = v1;
  sub_1B8D9E394(0, (unint64_t *)&unk_1ED36F570);
  v6 = v5;
  sub_1B8DFDDCC();

  v7 = v39;
  v8 = objc_msgSend(v39, sel_state);

  if (v8)
  {
    MEMORY[0x1E0C80A78](v9);
    *(_QWORD *)&v35[-16] = v1;
    v11 = v10;
    sub_1B8DFDDCC();

    v12 = v39;
    objc_msgSend(v39, sel_setStartDate_, 0);

    MEMORY[0x1E0C80A78](v13);
    *(_QWORD *)&v35[-16] = v1;
    v15 = v14;
    sub_1B8DFDDCC();

    v16 = v39;
    objc_msgSend(v39, sel_setOffset_, 0.0);

    MEMORY[0x1E0C80A78](v17);
    *(_QWORD *)&v35[-16] = v1;
    v19 = v18;
    sub_1B8DFDDCC();

    v20 = v39;
    objc_msgSend(v39, sel_setState_, 0);

    sub_1B8DA136C();
    sub_1B8DA18D8();
    v21 = sub_1B8DFDD00();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v4, 1, 1, v21);
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = 0;
    v22[3] = 0;
    v22[4] = v1;
    v23 = v1;
    sub_1B8D8DEC0((uint64_t)v4, (uint64_t)&unk_1EF1E1670, (uint64_t)v22);
    swift_release();
  }
  else
  {
    v39 = 0;
    v40 = 0xE000000000000000;
    sub_1B8DFDEF8();
    v24 = objc_msgSend(v1, sel_description);
    sub_1B8DFDB68();

    sub_1B8DFDBBC();
    swift_bridgeObjectRelease();
    v25 = sub_1B8DFDBBC();
    MEMORY[0x1E0C80A78](v25);
    *(_QWORD *)&v35[-16] = v1;
    v27 = v26;
    sub_1B8DFDDCC();

    v28 = v37;
    v29 = objc_msgSend(v37, sel_identifier);

    if (v29)
    {
      v30 = (void *)sub_1B8DFDB68();
      v32 = v31;

    }
    else
    {
      v30 = 0;
      v32 = 0;
    }
    v33 = (void *)objc_opt_self();
    v37 = v30;
    v38 = v32;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F7E0);
    sub_1B8DFDF94();
    swift_bridgeObjectRelease();
    sub_1B8DFDBBC();
    v34 = (void *)sub_1B8DFDB5C();
    swift_bridgeObjectRelease();
    objc_msgSend(v33, sel_logInfo_, v34);

  }
}

uint64_t sub_1B8DA402C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_1B8DA4044()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 24)
                                   + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_syncManager);
  swift_unknownObjectWeakInit();
  sub_1B8DFD22C();
  return swift_task_switch();
}

uint64_t sub_1B8DA409C()
{
  uint64_t v0;

  sub_1B8DA3170(*(void **)(*(_QWORD *)(v0 + 32) + 112), v0 + 16, (uint64_t)sub_1B8DA7940, (SEL *)&selRef_didResetLapTimerForStopwatch_sender_);
  swift_release();
  swift_unknownObjectWeakDestroy();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1B8DA412C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id *v22;
  id v23;
  void *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  _QWORD *v47;
  id v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  id v58;
  unint64_t v59;
  id v60;
  uint64_t v61;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFD748();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue;
  v13 = *(void **)&v0[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue];
  v57 = v1;
  v14 = sub_1B8D9E394(0, (unint64_t *)&unk_1ED36F570);
  v15 = v13;
  v56 = v14;
  sub_1B8DFDDCC();

  v16 = v58;
  v17 = objc_msgSend(v58, sel_state);

  if (v17 == (id)1)
  {
    v51 = v11;
    v52 = v6;
    v50 = v8;
    v53 = v5;
    v54 = v12;
    v55 = v4;
    MEMORY[0x1E0C80A78](v18);
    *(&v49 - 2) = (uint64_t)v1;
    v20 = v19;
    sub_1B8DFDDCC();

    v21 = v58;
    v22 = (id *)&v1[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_dateProvider];
    swift_beginAccess();
    v23 = objc_msgSend(*v22, sel_date);
    v24 = v1;
    if (v23)
    {
      v25 = v50;
      sub_1B8DFD718();

      v27 = v51;
      v26 = v52;
      v28 = v53;
      (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v51, v25, v53);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v27, 0, 1, v28);
      v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v27, 1, v28);
      v30 = (uint64_t)v55;
      if (v29 == 1)
      {
        v23 = 0;
      }
      else
      {
        v23 = (id)sub_1B8DFD6D0();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v28);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v51, 1, 1, v53);
      v30 = (uint64_t)v55;
    }
    objc_msgSend(v21, sel_setStartDate_, v23);

    MEMORY[0x1E0C80A78](v42);
    *(&v49 - 2) = (uint64_t)v24;
    v44 = v43;
    sub_1B8DFDDCC();

    v45 = v60;
    objc_msgSend(v60, sel_setState_, 2);

    v46 = sub_1B8DFDD00();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v30, 1, 1, v46);
    v47 = (_QWORD *)swift_allocObject();
    v47[2] = 0;
    v47[3] = 0;
    v47[4] = v24;
    v48 = v24;
    sub_1B8D8DEC0(v30, (uint64_t)&unk_1EF1E1680, (uint64_t)v47);
    swift_release();
  }
  else
  {
    v58 = 0;
    v59 = 0xE000000000000000;
    sub_1B8DFDEF8();
    v31 = objc_msgSend(v1, sel_description);
    sub_1B8DFDB68();

    sub_1B8DFDBBC();
    swift_bridgeObjectRelease();
    v32 = sub_1B8DFDBBC();
    MEMORY[0x1E0C80A78](v32);
    *(&v49 - 2) = (uint64_t)v1;
    v34 = v33;
    sub_1B8DFDDCC();

    v35 = v60;
    v36 = objc_msgSend(v60, sel_identifier);

    if (v36)
    {
      v37 = (void *)sub_1B8DFDB68();
      v39 = v38;

    }
    else
    {
      v37 = 0;
      v39 = 0;
    }
    v40 = (void *)objc_opt_self();
    v60 = v37;
    v61 = v39;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F7E0);
    sub_1B8DFDF94();
    swift_bridgeObjectRelease();
    sub_1B8DFDBBC();
    v41 = (void *)sub_1B8DFDB5C();
    swift_bridgeObjectRelease();
    objc_msgSend(v40, sel_logInfo_, v41);

  }
}

uint64_t sub_1B8DA4698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_1B8DA46B0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 24)
                                   + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_syncManager);
  swift_unknownObjectWeakInit();
  sub_1B8DFD22C();
  return swift_task_switch();
}

uint64_t sub_1B8DA4708()
{
  uint64_t v0;

  sub_1B8DA3170(*(void **)(*(_QWORD *)(v0 + 32) + 112), v0 + 16, (uint64_t)sub_1B8DA7940, (SEL *)&selRef_didResumeLapTimerForStopwatch_sender_);
  swift_release();
  swift_unknownObjectWeakDestroy();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *sub_1B8DA4798()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v12;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  sub_1B8DFDEF8();
  v3 = objc_msgSend(v0, sel_description);
  v4 = (void *)sub_1B8DFDB68();
  swift_bridgeObjectRelease();

  sub_1B8DFDBBC();
  v5 = OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue;
  v6 = *(void **)&v0[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue];
  sub_1B8D9E394(0, (unint64_t *)&unk_1ED36F570);
  v7 = v6;
  sub_1B8DFDDCC();

  v8 = objc_msgSend(v12, sel_description);
  sub_1B8DFDB68();

  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  v9 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_logInfo_, v9);

  v10 = *(id *)&v1[v5];
  sub_1B8DFDDCC();

  objc_msgSend(v4, sel_copy);
  sub_1B8DFDE5C();
  swift_unknownObjectRelease();
  sub_1B8D9E394(0, (unint64_t *)&qword_1ED36F7F0);
  swift_dynamicCast();
  return v12;
}

void sub_1B8DA49F0(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  void *v5;
  id v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  id v20;
  void *v21;
  double v22;
  double v23;
  id v24;

  v5 = *(void **)(v1 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue);
  sub_1B8D9E394(0, (unint64_t *)&unk_1ED36F570);
  v6 = v5;
  sub_1B8DFDDCC();

  v7 = objc_msgSend(v24, sel_laps);
  if (!v7)
  {
    __break(1u);
    goto LABEL_39;
  }
  sub_1B8D9E394(0, &qword_1ED36ED68);
  v8 = sub_1B8DFDC64();

  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_30:
    sub_1B8DFD3AC();
    v2 = sub_1B8DFDFB8();
    swift_bridgeObjectRelease();
    if ((v2 & 0x8000000000000000) == 0)
    {
      sub_1B8DFD3AC();
      v9 = sub_1B8DFDFB8();
      swift_bridgeObjectRelease();
      if (v9 >= (uint64_t)a1)
        goto LABEL_5;
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
LABEL_39:
    __break(1u);
    return;
  }
  v3 = v8 >> 62;
  if (v8 >> 62)
    goto LABEL_30;
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v9 < (uint64_t)a1)
    goto LABEL_32;
LABEL_5:
  if ((v8 & 0xC000000000000001) != 0 && a1)
  {
    v10 = 0;
    do
    {
      v11 = v10 + 1;
      sub_1B8DFDF10();
      v10 = v11;
    }
    while (a1 != v11);
  }
  if (v3)
  {
    sub_1B8DFD3AC();
    v12 = sub_1B8DFDFC4();
    v2 = v13;
    v9 = v14;
    a1 = v15;
    swift_bridgeObjectRelease_n();
    if ((a1 & 1) == 0)
      goto LABEL_13;
  }
  else
  {
    v9 = 0;
    v12 = v8 & 0xFFFFFFFFFFFFFF8;
    v2 = (v8 & 0xFFFFFFFFFFFFFF8) + 32;
    a1 = (2 * a1) | 1;
    if ((a1 & 1) == 0)
      goto LABEL_13;
  }
  sub_1B8DFE0E4();
  swift_unknownObjectRetain_n();
  v16 = swift_dynamicCastClass();
  if (!v16)
  {
    swift_unknownObjectRelease();
    v16 = MEMORY[0x1E0DEE9D8];
  }
  v17 = *(_QWORD *)(v16 + 16);
  swift_release();
  if (__OFSUB__(a1 >> 1, v9))
    goto LABEL_36;
  if (v17 != (a1 >> 1) - v9)
    goto LABEL_37;
  a1 = swift_dynamicCastClass();
  if (!a1)
  {
    swift_unknownObjectRelease();
    a1 = MEMORY[0x1E0DEE9D8];
  }
  while (1)
  {
    swift_unknownObjectRelease();
    if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0)
    {
LABEL_33:
      sub_1B8DFD3AC();
      v12 = sub_1B8DFDFB8();
      if (!v12)
        goto LABEL_34;
    }
    else
    {
      v12 = *(_QWORD *)(a1 + 16);
      sub_1B8DFD3AC();
      if (!v12)
        goto LABEL_34;
    }
    if (v12 >= 1)
      break;
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    swift_unknownObjectRelease();
LABEL_13:
    a1 = sub_1B8DA692C(v12, v2, v9, a1);
  }
  v18 = 0;
  v19 = 0.0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
      v20 = (id)MEMORY[0x1BCCBC814](v18, a1);
    else
      v20 = *(id *)(a1 + 8 * v18 + 32);
    v21 = v20;
    ++v18;
    objc_msgSend(v20, sel_doubleValue);
    v23 = v22;

    v19 = v19 + v23;
  }
  while (v12 != v18);
LABEL_34:
  swift_release_n();
}

id StopwatchViewModel.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void StopwatchViewModel.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1B8DA4DE8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];
  _QWORD v17[5];

  v1 = v0;
  v2 = sub_1B8DFDDFC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F558);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v11 = (id)*MEMORY[0x1E0D4F9F8];
  sub_1B8DFDE08();

  *(_QWORD *)(swift_allocObject() + 16) = v1;
  sub_1B8DA760C((unint64_t *)&qword_1ED36F580, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
  v12 = v1;
  sub_1B8DFD9DC();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1B8D87FFC((unint64_t *)&unk_1ED36F548, (uint64_t *)&unk_1ED36F558, MEMORY[0x1E0C95AD0]);
  v13 = sub_1B8DFD9E8();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  v17[3] = sub_1B8DFD9C4();
  v17[4] = MEMORY[0x1E0C95DF8];
  v17[0] = v13;
  v14 = (uint64_t)v12 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_updatedCancellable;
  swift_beginAccess();
  sub_1B8DA766C((uint64_t)v17, v14);
  return swift_endAccess();
}

uint64_t sub_1B8DA502C()
{
  return sub_1B8DA5394(MEMORY[0x1E0D4F9E0], (uint64_t)sub_1B8DA7604, (uint64_t)sub_1B8DA77D8, &OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_lapAddedCancellable);
}

uint64_t sub_1B8DA5050()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = sub_1B8DFDDFC();
  v19 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F558);
  v20 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)objc_opt_self();
  v21 = 0;
  v22 = 0xE000000000000000;
  sub_1B8DFDEF8();
  v9 = objc_msgSend(v0, sel_description);
  v10 = sub_1B8DFDB68();
  v12 = v11;
  swift_bridgeObjectRelease();

  v21 = v10;
  v22 = v12;
  sub_1B8DFDBBC();
  v13 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_logInfo_, v13);

  sub_1B8DFDB68();
  v14 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v15 = (void *)sub_1B8DFDB5C();
  sub_1B8DFDE08();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1B8DA760C((unint64_t *)&qword_1ED36F580, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
  sub_1B8DFD9DC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v2);
  swift_bridgeObjectRelease();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1B8D87FFC((unint64_t *)&unk_1ED36F548, (uint64_t *)&unk_1ED36F558, MEMORY[0x1E0C95AD0]);
  v16 = sub_1B8DFD9E8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v5);
  v23 = sub_1B8DFD9C4();
  v24 = MEMORY[0x1E0C95DF8];
  v21 = v16;
  v17 = (uint64_t)v1 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_clearAllLapsCancellable;
  swift_beginAccess();
  sub_1B8DA766C((uint64_t)&v21, v17);
  return swift_endAccess();
}

uint64_t sub_1B8DA5370()
{
  return sub_1B8DA5394(MEMORY[0x1E0D4F9D8], (uint64_t)sub_1B8DA7604, (uint64_t)sub_1B8DA7798, &OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_startLapTimerCancellable);
}

uint64_t sub_1B8DA5394(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD v22[5];

  v20 = a3;
  v21 = a4;
  v18 = a2;
  v5 = v4;
  v6 = sub_1B8DFDDFC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F558);
  v19 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8DFDB68();
  v13 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter, v18);
  v14 = (void *)sub_1B8DFDB5C();
  sub_1B8DFDE08();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1B8DA760C((unint64_t *)&qword_1ED36F580, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
  sub_1B8DFD9DC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRelease();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1B8D87FFC((unint64_t *)&unk_1ED36F548, (uint64_t *)&unk_1ED36F558, MEMORY[0x1E0C95AD0]);
  v15 = sub_1B8DFD9E8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v10);
  v22[3] = sub_1B8DFD9C4();
  v22[4] = MEMORY[0x1E0C95DF8];
  v22[0] = v15;
  v16 = v5 + *v21;
  swift_beginAccess();
  sub_1B8DA766C((uint64_t)v22, v16);
  return swift_endAccess();
}

uint64_t sub_1B8DA55F4()
{
  return sub_1B8DA5394(MEMORY[0x1E0D4F9C0], (uint64_t)sub_1B8DA7604, (uint64_t)sub_1B8DA7778, &OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_pauseLapTimerCancellable);
}

uint64_t sub_1B8DA5618()
{
  return sub_1B8DA5394(MEMORY[0x1E0D4F9B8], (uint64_t)sub_1B8DA7604, (uint64_t)sub_1B8DA7758, &OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_lapLapTimerCancellable);
}

uint64_t sub_1B8DA563C()
{
  return sub_1B8DA5394(MEMORY[0x1E0D4F9C8], (uint64_t)sub_1B8DA7604, (uint64_t)sub_1B8DA7738, &OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_resetLapTimerCancellable);
}

uint64_t sub_1B8DA5660()
{
  return sub_1B8DA5394(MEMORY[0x1E0D4F9D0], (uint64_t)sub_1B8DA7604, (uint64_t)sub_1B8DA764C, &OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_resumeLapTimerCancellable);
}

uint64_t sub_1B8DA5684(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22[5];
  __int128 v23;
  __int128 v24;

  v3 = sub_1B8DFD55C();
  if (!v3)
  {
    v23 = 0u;
    v24 = 0u;
LABEL_11:
    sub_1B8D9D154((uint64_t)&v23, (uint64_t *)&unk_1ED36F1C0);
    goto LABEL_12;
  }
  v4 = v3;
  sub_1B8DFDB68();
  sub_1B8DFDEC8();
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_1B8D96F20((uint64_t)v22), (v6 & 1) != 0))
  {
    sub_1B8DA76FC(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v23);
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1B8D9D018((uint64_t)v22);
  if (!*((_QWORD *)&v24 + 1))
    goto LABEL_11;
  sub_1B8D9E394(0, (unint64_t *)&qword_1ED36F7F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    v13 = 0;
    return v13 & 1;
  }
  v7 = v22[0];
  v8 = objc_msgSend(v22[0], sel_identifier);
  if (v8)
  {
    v9 = v8;
    v10 = sub_1B8DFDB68();
    v12 = v11;

  }
  else
  {
    v10 = 0;
    v12 = 0;
  }
  v15 = *(void **)(a2 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue);
  MEMORY[0x1E0C80A78](v8);
  sub_1B8D9E394(0, (unint64_t *)&unk_1ED36F570);
  v16 = v15;
  sub_1B8DFDDCC();

  v17 = v22[0];
  v18 = objc_msgSend(v22[0], sel_identifier);

  if (!v18)
  {
    if (!v12)
    {

      v13 = 1;
      return v13 & 1;
    }
    goto LABEL_22;
  }
  v19 = sub_1B8DFDB68();
  v21 = v20;

  if (!v12)
  {

    if (!v21)
    {
      v13 = 1;
      return v13 & 1;
    }
    goto LABEL_24;
  }
  if (!v21)
  {
LABEL_22:

LABEL_24:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v10 == v19 && v12 == v21)
    v13 = 1;
  else
    v13 = sub_1B8DFE0D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v13 & 1;
}

void sub_1B8DA5924(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCBD264](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = sub_1B8DFDB68();
    v8 = (void *)sub_1B8DA77E0(v6, v7, a1, (unint64_t *)&qword_1ED36F7F0);

    swift_bridgeObjectRelease();
    if (v8)
    {
      swift_beginAccess();
      v9 = MEMORY[0x1BCCBD264](v3);
      if (v9)
      {
        v10 = (void *)v9;
        sub_1B8DA59F4(v8);

      }
    }
  }
}

uint64_t sub_1B8DA59F4(void *a1)
{
  char *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  NSObject *v7;
  char *v8;
  id v9;
  uint64_t result;
  _QWORD aBlock[7];

  objc_msgSend(a1, sel_mutableCopy);
  sub_1B8DFDE5C();
  swift_unknownObjectRelease();
  sub_1B8D9E394(0, (unint64_t *)&unk_1ED36F570);
  swift_dynamicCast();
  v2 = (void *)aBlock[6];
  v3 = *(void **)&v1[OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue];
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1B8DA019C;
  *(_QWORD *)(v5 + 24) = v4;
  aBlock[4] = sub_1B8DA792C;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B8D8CD1C;
  aBlock[3] = &block_descriptor_112;
  v6 = _Block_copy(aBlock);
  v7 = v3;
  v8 = v1;
  v9 = v2;
  sub_1B8DFD22C();
  swift_release();
  dispatch_sync(v7, v6);

  _Block_release(v6);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v9 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1B8DA5B98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  char v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  id v36[8];
  __int128 v37;
  __int128 v38;

  v2 = a2 + 16;
  v3 = sub_1B8DFD55C();
  if (!v3)
  {
    v37 = 0u;
    v38 = 0u;
LABEL_11:
    sub_1B8D9D154((uint64_t)&v37, (uint64_t *)&unk_1ED36F1C0);
    goto LABEL_12;
  }
  v4 = v3;
  v36[5] = (id)sub_1B8DFDB68();
  v36[6] = v5;
  sub_1B8DFDEC8();
  if (*(_QWORD *)(v4 + 16) && (v6 = sub_1B8D96F20((uint64_t)v36), (v7 & 1) != 0))
  {
    sub_1B8DA76FC(*(_QWORD *)(v4 + 56) + 32 * v6, (uint64_t)&v37);
  }
  else
  {
    v37 = 0u;
    v38 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1B8D9D018((uint64_t)v36);
  if (!*((_QWORD *)&v38 + 1))
    goto LABEL_11;
  sub_1B8D9E394(0, (unint64_t *)&qword_1ED36F7F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    swift_beginAccess();
    v14 = (void *)MEMORY[0x1BCCBD264](v2);
    if (!v14
      || (v15 = v14,
          v16 = objc_msgSend(v14, sel_sourceIdentifier),
          v15,
          !v16))
    {
      v24 = 0;
      return v24 & 1;
    }
    v17 = (id)sub_1B8DFDB68();
    v19 = v18;

    v20 = sub_1B8DFD55C();
    if (v20)
    {
      v21 = v20;
      sub_1B8DFDB68();
      sub_1B8DFDEC8();
      if (*(_QWORD *)(v21 + 16) && (v22 = sub_1B8D96F20((uint64_t)v36), (v23 & 1) != 0))
      {
        sub_1B8DA76FC(*(_QWORD *)(v21 + 56) + 32 * v22, (uint64_t)&v37);
      }
      else
      {
        v37 = 0u;
        v38 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1B8D9D018((uint64_t)v36);
      if (*((_QWORD *)&v38 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          if (v36[0] == v17 && v36[1] == v19)
          {
            swift_bridgeObjectRelease_n();
            v24 = 0;
          }
          else
          {
            v34 = sub_1B8DFE0D8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v24 = v34 ^ 1;
          }
          return v24 & 1;
        }
LABEL_40:
        swift_bridgeObjectRelease();
        v24 = 0;
        return v24 & 1;
      }
    }
    else
    {
      v37 = 0u;
      v38 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1B8D9D154((uint64_t)&v37, (uint64_t *)&unk_1ED36F1C0);
    v24 = 0;
    return v24 & 1;
  }
  v8 = v36[0];
  v9 = objc_msgSend(v36[0], sel_identifier);
  if (v9)
  {
    v10 = v9;
    v11 = sub_1B8DFDB68();
    v13 = v12;

  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  swift_beginAccess();
  v25 = MEMORY[0x1BCCBD264](v2);
  if (!v25)
    goto LABEL_33;
  v26 = (void *)v25;
  v27 = *(void **)(v25 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_accessQueue);
  MEMORY[0x1E0C80A78](v25);
  sub_1B8D9E394(0, (unint64_t *)&unk_1ED36F570);
  v28 = v27;
  sub_1B8DFDDCC();

  v29 = (void *)v37;
  v30 = objc_msgSend((id)v37, sel_identifier);

  if (v30)
  {
    v31 = sub_1B8DFDB68();
    v33 = v32;

    if (!v13)
      goto LABEL_31;
  }
  else
  {
LABEL_33:
    v31 = 0;
    v33 = 0;
    if (!v13)
    {
LABEL_31:

      if (!v33)
      {
        v24 = 1;
        return v24 & 1;
      }
      goto LABEL_40;
    }
  }
  if (!v33)
  {

    goto LABEL_40;
  }
  if (v11 == v31 && v13 == v33)
    v24 = 1;
  else
    v24 = sub_1B8DFE0D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v24 & 1;
}

void sub_1B8DA5FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCBD264](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = sub_1B8DFDB68();
    v8 = (void *)sub_1B8DA77E0(v6, v7, a1, &qword_1ED36ED68);

    swift_bridgeObjectRelease();
    if (v8)
    {
      swift_beginAccess();
      v9 = MEMORY[0x1BCCBD264](v3);
      if (v9)
      {
        v10 = (void *)v9;
        v11 = sub_1B8DFDB68();
        v13 = (void *)sub_1B8DA77E0(v11, v12, a1, (unint64_t *)&qword_1ED36F7F0);

        swift_bridgeObjectRelease();
        if (v13)
        {
          swift_beginAccess();
          v14 = MEMORY[0x1BCCBD264](v3);
          if (v14)
          {
            v15 = (void *)v14;
            sub_1B8DA59F4(v13);

          }
          swift_beginAccess();
          v16 = MEMORY[0x1BCCBD264](v3);
          if (v16
            && (v17 = (void *)v16,
                v18 = (void *)MEMORY[0x1BCCBD264](v16 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_delegate),
                v17,
                v18))
          {
            objc_msgSend(v8, sel_doubleValue);
            objc_msgSend(v18, sel_didAddLap_);

            swift_unknownObjectRelease();
          }
          else
          {

          }
        }
      }

    }
  }
}

void sub_1B8DA61A4(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;

  v5 = a2 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCBD264](v5);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = sub_1B8DFDB68();
    v10 = (void *)sub_1B8DA77E0(v8, v9, a1, (unint64_t *)&qword_1ED36F7F0);

    swift_bridgeObjectRelease();
    if (v10)
    {
      swift_beginAccess();
      v11 = MEMORY[0x1BCCBD264](v5);
      if (v11)
      {
        v12 = (void *)v11;
        sub_1B8DA59F4(v10);

      }
      swift_beginAccess();
      v13 = MEMORY[0x1BCCBD264](v5);
      if (v13
        && (v14 = (void *)v13,
            v15 = (void *)MEMORY[0x1BCCBD264](v13 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_delegate),
            v14,
            v15))
      {
        objc_msgSend(v15, *a3);

        swift_unknownObjectRelease();
      }
      else
      {

      }
    }
  }
}

Swift::String_optional __swiftcall StopwatchViewModel.sourceIdentifier()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  Swift::String_optional result;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_broadcastUpdates) == 1)
  {
    sub_1B8DFDE2C();
    v1 = sub_1B8DFE0B4();
  }
  else
  {
    v1 = 0;
    v2 = 0;
  }
  result.value._object = v2;
  result.value._countAndFlagsBits = v1;
  return result;
}

uint64_t sub_1B8DA63CC()
{
  swift_unknownObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_1B8DA63F0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1B8DA6400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B8D9D2E0;
  v3[3] = v2;
  return swift_task_switch();
}

uint64_t sub_1B8DA6464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B8D9D2E0;
  v3[3] = v2;
  return swift_task_switch();
}

uint64_t sub_1B8DA64C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B8D85A48;
  v3[3] = v2;
  return swift_task_switch();
}

uint64_t sub_1B8DA652C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B8D9D2E0;
  v3[3] = v2;
  return swift_task_switch();
}

uint64_t objectdestroy_18Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1B8DA65BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B8D9D2E0;
  v3[3] = v2;
  return swift_task_switch();
}

uint64_t sub_1B8DA661C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1690);
  v3 = swift_allocObject();
  v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = 2 * v4 - 64;
  v5 = sub_1B8DA6F98(&v7, (_BYTE *)(v3 + 32), v1, a1);
  sub_1B8DFD3AC();
  sub_1B8DA7520();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1B8DA66F0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  int64_t v5;
  _QWORD *v8;
  size_t v9;
  void *v10;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    if (v5 <= 0)
    {
      v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0)
          goto LABEL_17;
        v10 = v8 + 4;
        if (a2 + a3 < (unint64_t)v8 + v5 + 32 && (unint64_t)v10 < a2 + a3 + v5)
          goto LABEL_17;
        memcpy(v10, (const void *)(a2 + a3), v5);
        return (uint64_t)v8;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1690);
      v8 = (_QWORD *)swift_allocObject();
      v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * v9 - 64;
      if (v4 != a3)
        goto LABEL_5;
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  result = sub_1B8DFDFF4();
  __break(1u);
  return result;
}

_QWORD *sub_1B8DA6848(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F280);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1B8DA712C((uint64_t)&v8, v3 + 4, v1, a1);
  sub_1B8DFD3AC();
  sub_1B8DA7520();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1B8DA692C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    v8 = v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        sub_1B8D9E394(0, &qword_1ED36ED68);
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36EC28);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 25;
      v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_1B8DFDFF4();
  __break(1u);
  return result;
}

uint64_t sub_1B8DA6ABC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_dateProvider);
  swift_beginAccess();
  *a2 = *v3;
  return swift_unknownObjectRetain();
}

uint64_t method lookup function for StopwatchViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StopwatchViewModel.dateProvider.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of StopwatchViewModel.dateProvider.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of StopwatchViewModel.dateProvider.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of StopwatchViewModel.__allocating_init(stopwatch:manager:delegate:dateProvider:registerForNotifications:broadcastUpdates:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 584))();
}

uint64_t dispatch thunk of StopwatchViewModel.update(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x250))();
}

uint64_t dispatch thunk of StopwatchViewModel.addLap(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x258))();
}

uint64_t dispatch thunk of StopwatchViewModel.clearAllLaps()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x268))();
}

uint64_t dispatch thunk of StopwatchViewModel.updateWithDisplayLink()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x270))();
}

uint64_t dispatch thunk of StopwatchViewModel.invalidateDisplayLink()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x278))();
}

uint64_t dispatch thunk of StopwatchViewModel.updateTime()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x280))();
}

uint64_t dispatch thunk of StopwatchViewModel.startLapTimer()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x288))();
}

uint64_t dispatch thunk of StopwatchViewModel.pauseLapTimer()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x290))();
}

uint64_t dispatch thunk of StopwatchViewModel.lapLapTimer()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x298))();
}

uint64_t dispatch thunk of StopwatchViewModel.resetLapTimer()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2A0))();
}

uint64_t dispatch thunk of StopwatchViewModel.resumeLapTimer()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2A8))();
}

uint64_t dispatch thunk of StopwatchViewModel.getStopwatch()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2B0))();
}

uint64_t dispatch thunk of StopwatchViewModel.runningTotal(forLap:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2B8))();
}

uint64_t sub_1B8DA6CE8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  size_t v12;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_21;
  if (!v5)
    return MEMORY[0x1E0DEE9D8];
  if (v5 <= 0)
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v4 != a3)
    {
LABEL_10:
      if (v5 < 0)
        goto LABEL_24;
      v14 = *(_QWORD *)(type metadata accessor for AlarmEntity() - 8);
      v15 = (char *)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      v16 = *(_QWORD *)(v14 + 72);
      v17 = a2 + v16 * a3;
      v18 = v16 * v5;
      v19 = &v15[v18];
      v20 = v17 + v18;
      if (v17 < (unint64_t)v19 && (unint64_t)v15 < v20)
        goto LABEL_24;
      swift_arrayInitWithCopy();
      return (uint64_t)v11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E14D0);
  v8 = *(_QWORD *)(type metadata accessor for AlarmEntity() - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = (_QWORD *)swift_allocObject();
  v12 = _swift_stdlib_malloc_size(v11);
  if (v9)
  {
    if (v12 - v10 == 0x8000000000000000 && v9 == -1)
      goto LABEL_23;
    v11[2] = v5;
    v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
    if (v4 != a3)
      goto LABEL_10;
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1B8DFDFF4();
  __break(1u);
  return result;
}

_QWORD *sub_1B8DA6EB0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36EC28);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  v6 = sub_1B8DA7328(&v8, v3 + 4, v1, a1);
  sub_1B8DFD3AC();
  sub_1B8DA7520();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1B8DA6F98(_QWORD *result, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_BYTE *)(*(_QWORD *)(a4 + 48) + v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1B8DA712C(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      sub_1B8DFD3AC();
      goto LABEL_38;
    }
    v11 += 2;
    result = sub_1B8DFD3AC();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1B8DA7328(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1B8DA7520()
{
  return swift_release();
}

uint64_t sub_1B8DA7528(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_1B8DA754C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1B8DA7580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_1B8D9D2E0;
  *(_OWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_1B8DA75E0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B8DA7604(uint64_t a1)
{
  uint64_t v1;

  return sub_1B8DA5B98(a1, v1);
}

uint64_t sub_1B8DA760C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1BCCBD0FC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B8DA764C(uint64_t a1)
{
  uint64_t v1;

  sub_1B8DA61A4(a1, v1, (SEL *)&selRef_didResumeLapTimer);
}

uint64_t sub_1B8DA766C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1B8DA76B4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v4 = *(id *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_internalStopwatch);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport18StopwatchViewModel_internalStopwatch) = v2;
  v3 = v2;

}

uint64_t sub_1B8DA76EC()
{
  return swift_deallocObject();
}

uint64_t sub_1B8DA76FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_1B8DA7738(uint64_t a1)
{
  uint64_t v1;

  sub_1B8DA61A4(a1, v1, (SEL *)&selRef_didResetLapTimer);
}

void sub_1B8DA7758(uint64_t a1)
{
  uint64_t v1;

  sub_1B8DA61A4(a1, v1, (SEL *)&selRef_didLapLapTimer);
}

void sub_1B8DA7778(uint64_t a1)
{
  uint64_t v1;

  sub_1B8DA61A4(a1, v1, (SEL *)&selRef_didPauseLapTimer);
}

void sub_1B8DA7798(uint64_t a1)
{
  uint64_t v1;

  sub_1B8DA61A4(a1, v1, (SEL *)&selRef_didStartLapTimer);
}

void sub_1B8DA77B8(uint64_t a1)
{
  uint64_t v1;

  sub_1B8DA61A4(a1, v1, (SEL *)&selRef_didClearAllLaps);
}

void sub_1B8DA77D8(uint64_t a1)
{
  uint64_t v1;

  sub_1B8DA5FFC(a1, v1);
}

uint64_t sub_1B8DA77E0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  _QWORD v12[5];
  __int128 v13;
  __int128 v14;

  v7 = sub_1B8DFD55C();
  if (!v7)
  {
    v13 = 0u;
    v14 = 0u;
LABEL_10:
    sub_1B8D9D154((uint64_t)&v13, (uint64_t *)&unk_1ED36F1C0);
    return 0;
  }
  v8 = v7;
  *(_QWORD *)&v13 = a1;
  *((_QWORD *)&v13 + 1) = a2;
  sub_1B8DFD3AC();
  sub_1B8DFDEC8();
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_1B8D96F20((uint64_t)v12), (v10 & 1) != 0))
  {
    sub_1B8DA76FC(*(_QWORD *)(v8 + 56) + 32 * v9, (uint64_t)&v13);
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1B8D9D018((uint64_t)v12);
  if (!*((_QWORD *)&v14 + 1))
    goto LABEL_10;
  sub_1B8D9E394(0, a4);
  if (swift_dynamicCast())
    return v12[0];
  return 0;
}

uint64_t sub_1B8DA78F8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1B8DA791C(uint64_t a1)
{
  uint64_t v1;

  return sub_1B8DA5684(a1, *(_QWORD *)(v1 + 16));
}

void sub_1B8DA7924(uint64_t a1)
{
  uint64_t v1;

  sub_1B8DA5924(a1, v1);
}

id sub_1B8DA7940@<X0>(_QWORD *a1@<X8>)
{
  return sub_1B8DA01B8(a1);
}

unint64_t sub_1B8DA7960()
{
  unint64_t result;

  result = qword_1EF1E1710;
  if (!qword_1EF1E1710)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E010B0, &type metadata for RemoveWorldClockIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1710);
  }
  return result;
}

unint64_t sub_1B8DA79A8()
{
  unint64_t result;

  result = qword_1EF1E1718;
  if (!qword_1EF1E1718)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E010D8, &type metadata for RemoveWorldClockIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1718);
  }
  return result;
}

uint64_t sub_1B8DA79EC()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1B8DA7A10()
{
  sub_1B8DA7A50();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B8DA7A50()
{
  unint64_t result;

  result = qword_1EF1E1720;
  if (!qword_1EF1E1720)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E01020, &type metadata for RemoveWorldClockIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1720);
  }
  return result;
}

uint64_t sub_1B8DA7A94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1B8DFD640();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v5);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1B8DFD664();
}

uint64_t sub_1B8DA7BE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;
  uint64_t v20;

  v20 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v1);
  v19 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1B8DFD640();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1B8DFDB50();
  v9 = MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1B8DFD658();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v12 = *MEMORY[0x1E0CAF9B8];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v13(v6, v12, v3);
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v13(v6, v12, v3);
  v14 = v19;
  sub_1B8DFD664();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1110);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1B8DFF650;
  sub_1B8DFD634();
  v15 = v20;
  sub_1B8DFD310();
  v16 = sub_1B8DFD304();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 0, 1, v16);
}

uint64_t sub_1B8DA7EFC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v3;
  return swift_task_switch();
}

uint64_t sub_1B8DA7F18()
{
  uint64_t v0;

  if (qword_1ED36ED78 != -1)
    swift_once();
  sub_1B8DFD178();
  sub_1B8DDEAF8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = sub_1B8DDBAC0(0);
  sub_1B8D8C494();
  sub_1B8DFD0B8();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DA7FE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8DA8040();
  *a1 = result;
  return result;
}

uint64_t sub_1B8DA8004()
{
  sub_1B8DA7A50();
  return sub_1B8DFD07C();
}

ValueMetadata *type metadata accessor for RemoveWorldClockIntent()
{
  return &type metadata for RemoveWorldClockIntent;
}

uint64_t sub_1B8DA8040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v0 = sub_1B8DFD418();
  v37 = *(_QWORD *)(v0 - 8);
  v38 = v0;
  MEMORY[0x1E0C80A78](v0);
  v36 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10D0);
  MEMORY[0x1E0C80A78](v2);
  v35 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E12B8);
  MEMORY[0x1E0C80A78](v4);
  v34 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B8DFDB50();
  v7 = MEMORY[0x1E0C80A78](v6);
  v33 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v10);
  v30 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B8DFD640();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1B8DFD658();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v31 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v32 = (char *)&v29 - v21;
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v22 = *MEMORY[0x1E0CAF9B8];
  v23 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 104);
  v23(v15, v22, v12);
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v23(v15, v22, v12);
  v24 = v30;
  sub_1B8DFD664();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v24, 0, 1, v17);
  v25 = sub_1B8DFDAD8();
  v39 = 0;
  v40 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v34, 1, 1, v25);
  sub_1B8DFDAF0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1558);
  *v15 = type metadata accessor for MTAppIntentsManager();
  v23(v15, *MEMORY[0x1E0CAF9C8], v12);
  sub_1B8DFD79C();
  sub_1B8DFD664();
  v26 = v35;
  sub_1B8DFD0AC();
  v27 = sub_1B8DFD0A0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 0, 1, v27);
  (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v36, *MEMORY[0x1E0C91738], v38);
  return sub_1B8DFD1E4();
}

unint64_t sub_1B8DA84F0()
{
  unint64_t result;

  result = qword_1EF1E1730;
  if (!qword_1EF1E1730)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E011D0, &type metadata for StopStopwatchIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1730);
  }
  return result;
}

unint64_t sub_1B8DA8538()
{
  unint64_t result;

  result = qword_1EF1E1738;
  if (!qword_1EF1E1738)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E011F8, &type metadata for StopStopwatchIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1738);
  }
  return result;
}

uint64_t sub_1B8DA857C()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1B8DA85A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8DA85B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1B8DFD640();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v5);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0CAF9B8], v1);
  return sub_1B8DFD664();
}

uint64_t sub_1B8DA8708@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD640();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1B8DFDB50();
  v10 = MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v18 = sub_1B8DFD658();
  v11 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v12 = *MEMORY[0x1E0CAF9B8];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v13(v7, v12, v4);
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v13(v7, v12, v4);
  sub_1B8DFD664();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v3, 0, 1, v18);
  v14 = v19;
  sub_1B8DFD310();
  v15 = sub_1B8DFD304();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
}

uint64_t sub_1B8DA89C0()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1760);
  MEMORY[0x1E0C80A78](v0);
  sub_1B8DA8C34();
  sub_1B8DFD400();
  return sub_1B8DFD3C4();
}

uint64_t sub_1B8DA8A90(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 24) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 32) = v2;
  *v2 = v1;
  v2[1] = sub_1B8DA8ADC;
  return sub_1B8D9D3BC();
}

uint64_t sub_1B8DA8ADC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 40) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_1B8DA8B50()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);
  if (v1)
  {
    sub_1B8DA26FC();

  }
  *(_QWORD *)(v0 + 16) = sub_1B8DDBAC0(2);
  sub_1B8D8C494();
  sub_1B8DFD0B8();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DA8BD0()
{
  sub_1B8DA8C34();
  return sub_1B8DFD07C();
}

ValueMetadata *type metadata accessor for StopStopwatchIntent()
{
  return &type metadata for StopStopwatchIntent;
}

uint64_t sub_1B8DA8C08()
{
  return sub_1B8D87FFC(&qword_1EF1E1748, &qword_1EF1E1750, MEMORY[0x1E0C916B0]);
}

unint64_t sub_1B8DA8C34()
{
  unint64_t result;

  result = qword_1EF1E1758;
  if (!qword_1EF1E1758)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E01140, &type metadata for StopStopwatchIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1758);
  }
  return result;
}

unint64_t sub_1B8DA8C7C()
{
  unint64_t result;

  result = qword_1EF1E1768;
  if (!qword_1EF1E1768)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E012F0, &type metadata for GetTimeForCityIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1768);
  }
  return result;
}

unint64_t sub_1B8DA8CC4()
{
  unint64_t result;

  result = qword_1EF1E1770;
  if (!qword_1EF1E1770)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E01318, &type metadata for GetTimeForCityIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1770);
  }
  return result;
}

uint64_t sub_1B8DA8D08()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1B8DA8D2C()
{
  sub_1B8DA8D6C();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B8DA8D6C()
{
  unint64_t result;

  result = qword_1EF1E1778;
  if (!qword_1EF1E1778)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E01260, &type metadata for GetTimeForCityIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1778);
  }
  return result;
}

uint64_t sub_1B8DA8DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1B8DFD640();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v5);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1B8DFD664();
}

uint64_t sub_1B8DA8F00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;
  uint64_t v20;

  v20 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v1);
  v19 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1B8DFD640();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1B8DFDB50();
  v9 = MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1B8DFD658();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v12 = *MEMORY[0x1E0CAF9B8];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v13(v6, v12, v3);
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v13(v6, v12, v3);
  v14 = v19;
  sub_1B8DFD664();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1110);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1B8DFF650;
  sub_1B8DFD634();
  v15 = v20;
  sub_1B8DFD310();
  v16 = sub_1B8DFD304();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 0, 1, v16);
}

uint64_t sub_1B8DA9214(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v3;
  return swift_task_switch();
}

uint64_t sub_1B8DA9230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF1E0F40 != -1)
    swift_once();
  sub_1B8DFD178();
  sub_1B8DDE1E0();
  v2 = v1;
  v4 = v3;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = v2;
  *(_QWORD *)(v0 + 24) = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F7E0);
  sub_1B8DA985C();
  sub_1B8DFD0D0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DA9300@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8DA93AC();
  *a1 = result;
  return result;
}

uint64_t sub_1B8DA9324()
{
  sub_1B8DA8D6C();
  return sub_1B8DFD07C();
}

ValueMetadata *type metadata accessor for GetTimeForCityIntent()
{
  return &type metadata for GetTimeForCityIntent;
}

unint64_t sub_1B8DA9360()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF1E1788;
  if (!qword_1EF1E1788)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1E1790);
    result = MEMORY[0x1BCCBD0FC](MEMORY[0x1E0C915A0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF1E1788);
  }
  return result;
}

uint64_t sub_1B8DA93AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v0 = sub_1B8DFD418();
  v37 = *(_QWORD *)(v0 - 8);
  v38 = v0;
  MEMORY[0x1E0C80A78](v0);
  v36 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10D0);
  MEMORY[0x1E0C80A78](v2);
  v35 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E12B8);
  MEMORY[0x1E0C80A78](v4);
  v34 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B8DFDB50();
  v7 = MEMORY[0x1E0C80A78](v6);
  v33 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v10);
  v30 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B8DFD640();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1B8DFD658();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v31 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v32 = (char *)&v29 - v21;
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v22 = *MEMORY[0x1E0CAF9B8];
  v23 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 104);
  v23(v15, v22, v12);
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v23(v15, v22, v12);
  v24 = v30;
  sub_1B8DFD664();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v24, 0, 1, v17);
  v25 = sub_1B8DFDAD8();
  v39 = 0;
  v40 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v34, 1, 1, v25);
  sub_1B8DFDAF0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1558);
  *v15 = type metadata accessor for MTAppIntentsManager();
  v23(v15, *MEMORY[0x1E0CAF9C8], v12);
  sub_1B8DFD79C();
  sub_1B8DFD664();
  v26 = v35;
  sub_1B8DFD0AC();
  v27 = sub_1B8DFD0A0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 0, 1, v27);
  (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v36, *MEMORY[0x1E0C91738], v38);
  return sub_1B8DFD1E4();
}

unint64_t sub_1B8DA985C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EF1E1798;
  if (!qword_1EF1E1798)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED36F7E0);
    v2 = sub_1B8DA98C0();
    result = MEMORY[0x1BCCBD0FC](MEMORY[0x1E0C91D78], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF1E1798);
  }
  return result;
}

unint64_t sub_1B8DA98C0()
{
  unint64_t result;

  result = qword_1EF1E17A0;
  if (!qword_1EF1E17A0)
  {
    result = MEMORY[0x1BCCBD0FC](MEMORY[0x1E0C91C78], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EF1E17A0);
  }
  return result;
}

uint64_t StopwatchContext.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1B8DFD3AC();
  return v1;
}

uint64_t StopwatchContext.hash(into:)()
{
  sub_1B8DFD3AC();
  sub_1B8DFDBA4();
  return swift_bridgeObjectRelease();
}

void StopwatchContext.init(_:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = objc_msgSend(a1, sel_identifier);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1B8DFDB68();
    v8 = v7;

    *a2 = v6;
    a2[1] = v8;
  }
  else
  {
    __break(1u);
  }
}

uint64_t static StopwatchContext.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1B8DFE0D8();
}

uint64_t sub_1B8DA9A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B8DACD0C(a1, a2);
  *a3 = result & 1;
  return result;
}

void sub_1B8DA9A38(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1B8DA9A44()
{
  sub_1B8DA9B80();
  return sub_1B8DFE1E0();
}

uint64_t sub_1B8DA9A6C()
{
  sub_1B8DA9B80();
  return sub_1B8DFE1EC();
}

uint64_t StopwatchContext.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F1A8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8DA9B80();
  sub_1B8DFE1A4();
  sub_1B8DFE06C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1B8DA9B80()
{
  unint64_t result;

  result = qword_1ED36F4F8;
  if (!qword_1ED36F4F8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E017B0, &type metadata for StopwatchContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED36F4F8);
  }
  return result;
}

uint64_t StopwatchContext.hashValue.getter()
{
  sub_1B8DFE15C();
  sub_1B8DFD3AC();
  sub_1B8DFDBA4();
  swift_bridgeObjectRelease();
  return sub_1B8DFE18C();
}

uint64_t StopwatchContext.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F588);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8DA9B80();
  sub_1B8DFE198();
  if (!v2)
  {
    v9 = sub_1B8DFE024();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B8DA9D38@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return StopwatchContext.init(from:)(a1, a2);
}

uint64_t sub_1B8DA9D4C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F1A8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8DA9B80();
  sub_1B8DFE1A4();
  sub_1B8DFE06C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1B8DA9E38()
{
  sub_1B8DFE15C();
  sub_1B8DFD3AC();
  sub_1B8DFDBA4();
  swift_bridgeObjectRelease();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8DA9E90()
{
  sub_1B8DFD3AC();
  sub_1B8DFDBA4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8DA9ED4()
{
  sub_1B8DFE15C();
  sub_1B8DFD3AC();
  sub_1B8DFDBA4();
  swift_bridgeObjectRelease();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8DA9F28(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1B8DFE0D8();
}

uint64_t static StopwatchActivityAttributes.version.getter()
{
  swift_beginAccess();
  return qword_1EF1E17A8;
}

uint64_t static StopwatchActivityAttributes.version.setter(uint64_t a1)
{
  uint64_t result;

  result = swift_beginAccess();
  qword_1EF1E17A8 = a1;
  return result;
}

uint64_t (*static StopwatchActivityAttributes.version.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B8DAA01C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1 + OBJC_IVAR____TtC18MobileTimerSupport27StopwatchActivityAttributes_estimatedEndDate;
  swift_beginAccess();
  v4 = sub_1B8DFD748();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_1B8DAA084(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_1B8DFD748();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = *a2 + OBJC_IVAR____TtC18MobileTimerSupport27StopwatchActivityAttributes_estimatedEndDate;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  return swift_endAccess();
}

uint64_t sub_1B8DAA148@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC18MobileTimerSupport27StopwatchActivityAttributes_estimatedEndDate;
  swift_beginAccess();
  v4 = sub_1B8DFD748();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1B8DAA1AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC18MobileTimerSupport27StopwatchActivityAttributes_estimatedEndDate;
  swift_beginAccess();
  v4 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1B8DAA218())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1B8DAA25C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC18MobileTimerSupport27StopwatchActivityAttributes_context);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  sub_1B8DFD3AC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8DAA2C4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport27StopwatchActivityAttributes_context);
  swift_beginAccess();
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return sub_1B8DFD3AC();
}

uint64_t sub_1B8DAA314(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport27StopwatchActivityAttributes_context);
  swift_beginAccess();
  *v4 = v2;
  v4[1] = v3;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B8DAA36C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t StopwatchActivityAttributes.__allocating_init(_:)(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = swift_allocObject();
  v4 = *a1;
  v3 = a1[1];
  sub_1B8DFD73C();
  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC18MobileTimerSupport27StopwatchActivityAttributes_context);
  *v5 = v4;
  v5[1] = v3;
  return v2;
}

uint64_t StopwatchActivityAttributes.init(_:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *a1;
  v3 = a1[1];
  sub_1B8DFD73C();
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport27StopwatchActivityAttributes_context);
  *v4 = v2;
  v4[1] = v3;
  return v1;
}

id StopwatchActivityAttributes.__allocating_init(_:)(void *a1)
{
  uint64_t v2;
  id result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;

  v2 = swift_allocObject();
  sub_1B8DFD73C();
  result = objc_msgSend(a1, sel_identifier);
  if (result)
  {
    v4 = result;
    v5 = sub_1B8DFDB68();
    v7 = v6;

    v8 = (uint64_t *)(v2 + OBJC_IVAR____TtC18MobileTimerSupport27StopwatchActivityAttributes_context);
    *v8 = v5;
    v8[1] = v7;
    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id StopwatchActivityAttributes.init(_:)(void *a1)
{
  uint64_t v1;
  id result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;

  sub_1B8DFD73C();
  result = objc_msgSend(a1, sel_identifier);
  if (result)
  {
    v4 = result;
    v5 = sub_1B8DFDB68();
    v7 = v6;

    v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport27StopwatchActivityAttributes_context);
    *v8 = v5;
    v8[1] = v7;
    return (id)v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B8DAA57C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC18MobileTimerSupport27StopwatchActivityAttributes_context);
  swift_beginAccess();
  v5 = *v4;
  v6 = v4[1];
  v9[1] = v5;
  v9[2] = v6;
  v7 = sub_1B8DFD748();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  sub_1B8DAA67C();
  sub_1B8DAA6C0();
  sub_1B8DAA704();
  sub_1B8DFD3AC();
  return sub_1B8DFD97C();
}

unint64_t sub_1B8DAA67C()
{
  unint64_t result;

  result = qword_1ED36F510;
  if (!qword_1ED36F510)
  {
    result = MEMORY[0x1BCCBD0FC](&protocol conformance descriptor for StopwatchContext, &type metadata for StopwatchContext);
    atomic_store(result, (unint64_t *)&qword_1ED36F510);
  }
  return result;
}

unint64_t sub_1B8DAA6C0()
{
  unint64_t result;

  result = qword_1ED36F150;
  if (!qword_1ED36F150)
  {
    result = MEMORY[0x1BCCBD0FC](&protocol conformance descriptor for StopwatchContext, &type metadata for StopwatchContext);
    atomic_store(result, (unint64_t *)&qword_1ED36F150);
  }
  return result;
}

unint64_t sub_1B8DAA704()
{
  unint64_t result;

  result = qword_1ED36F158;
  if (!qword_1ED36F158)
  {
    result = MEMORY[0x1BCCBD0FC](&protocol conformance descriptor for StopwatchContext, &type metadata for StopwatchContext);
    atomic_store(result, (unint64_t *)&qword_1ED36F158);
  }
  return result;
}

uint64_t sub_1B8DAA748()
{
  sub_1B8DAAA68();
  return sub_1B8DFE1E0();
}

uint64_t sub_1B8DAA770()
{
  sub_1B8DAAA68();
  return sub_1B8DFE1EC();
}

uint64_t StopwatchActivityAttributes.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC18MobileTimerSupport27StopwatchActivityAttributes_estimatedEndDate;
  v2 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t StopwatchActivityAttributes.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC18MobileTimerSupport27StopwatchActivityAttributes_estimatedEndDate;
  v2 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1B8DAA854(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  v2 = v1;
  v4 = sub_1B8DFD748();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F1B0);
  v17 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8DAAA68();
  sub_1B8DFE1A4();
  v11 = v2 + OBJC_IVAR____TtC18MobileTimerSupport27StopwatchActivityAttributes_estimatedEndDate;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v11, v4);
  v20 = 0;
  sub_1B8DA760C(&qword_1ED36F1D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  v12 = v16;
  sub_1B8DFE09C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!v12)
  {
    v13 = (uint64_t *)(v2 + OBJC_IVAR____TtC18MobileTimerSupport27StopwatchActivityAttributes_context);
    swift_beginAccess();
    v14 = v13[1];
    v18 = *v13;
    v19 = v14;
    v21 = 1;
    sub_1B8DAA6C0();
    sub_1B8DFE09C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v10, v8);
}

unint64_t sub_1B8DAAA68()
{
  unint64_t result;

  result = qword_1ED36F518;
  if (!qword_1ED36F518)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E01760, &type metadata for StopwatchActivityAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED36F518);
  }
  return result;
}

uint64_t StopwatchActivityAttributes.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  StopwatchActivityAttributes.init(from:)(a1);
  return v2;
}

uint64_t StopwatchActivityAttributes.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v4 = sub_1B8DFD748();
  v19 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v17 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F590);
  v6 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v1;
  v9 = v1 + OBJC_IVAR____TtC18MobileTimerSupport27StopwatchActivityAttributes_estimatedEndDate;
  sub_1B8DFD73C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8DAAA68();
  sub_1B8DFE198();
  if (v2)
  {
    v14 = v20;
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v9, v4);
    type metadata accessor for StopwatchActivityAttributes();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v16 = v6;
    LOBYTE(v21) = 0;
    sub_1B8DA760C(&qword_1ED36F598, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v11 = v17;
    v10 = v18;
    sub_1B8DFE054();
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 40))(v9, v11, v4);
    swift_endAccess();
    v23 = 1;
    sub_1B8DAA67C();
    sub_1B8DFE054();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v10);
    v13 = v22;
    v14 = v20;
    v15 = (_QWORD *)(v20 + OBJC_IVAR____TtC18MobileTimerSupport27StopwatchActivityAttributes_context);
    *v15 = v21;
    v15[1] = v13;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v14;
}

uint64_t type metadata accessor for StopwatchActivityAttributes()
{
  uint64_t result;

  result = qword_1ED36F308;
  if (!qword_1ED36F308)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1B8DAADC0()
{
  unint64_t result;

  result = qword_1ED36F160;
  if (!qword_1ED36F160)
  {
    result = MEMORY[0x1BCCBD0FC](&protocol conformance descriptor for StopwatchContext, &type metadata for StopwatchContext);
    atomic_store(result, (unint64_t *)&qword_1ED36F160);
  }
  return result;
}

uint64_t sub_1B8DAAE04()
{
  return sub_1B8DA760C((unint64_t *)&unk_1ED36F538, (uint64_t (*)(uint64_t))type metadata accessor for StopwatchActivityAttributes, (uint64_t)&protocol conformance descriptor for StopwatchActivityAttributes);
}

uint64_t sub_1B8DAAE30()
{
  return sub_1B8DA760C(&qword_1ED36F530, (uint64_t (*)(uint64_t))type metadata accessor for StopwatchActivityAttributes, (uint64_t)&protocol conformance descriptor for StopwatchActivityAttributes);
}

uint64_t sub_1B8DAAE68@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  type metadata accessor for StopwatchActivityAttributes();
  v5 = swift_allocObject();
  result = StopwatchActivityAttributes.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1B8DAAEC0(_QWORD *a1)
{
  return sub_1B8DAA854(a1);
}

uint64_t sub_1B8DAAEE8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC18MobileTimerSupport27StopwatchActivityAttributes_context);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return sub_1B8DFD3AC();
}

_QWORD *initializeBufferWithCopyOfBuffer for StopwatchContext(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_1B8DFD3AC();
  return a1;
}

uint64_t destroy for StopwatchContext()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for StopwatchContext(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B8DFD3AC();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for StopwatchContext(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StopwatchContext(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StopwatchContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StopwatchContext()
{
  return &type metadata for StopwatchContext;
}

uint64_t sub_1B8DAB078()
{
  return type metadata accessor for StopwatchActivityAttributes();
}

uint64_t sub_1B8DAB080()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B8DFD748();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for StopwatchActivityAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StopwatchActivityAttributes.estimatedEndDate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of StopwatchActivityAttributes.estimatedEndDate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of StopwatchActivityAttributes.estimatedEndDate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of StopwatchActivityAttributes.context.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of StopwatchActivityAttributes.context.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of StopwatchActivityAttributes.context.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of StopwatchActivityAttributes.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of StopwatchActivityAttributes.content()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of StopwatchActivityAttributes.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of StopwatchActivityAttributes.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

void sub_1B8DAB198(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  id v45;
  id v46;
  void *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  void (*v59)(unint64_t, _QWORD, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  char isUniquelyReferenced_nonNull_native;
  id v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;

  v3 = v1;
  v5 = sub_1B8DFD94C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED36F0C0);
  v88 = *(_QWORD *)(v95 - 8);
  MEMORY[0x1E0C80A78](v95);
  v13 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)objc_msgSend(*(id *)(v3 + 120), sel_numberOfAvailableSessions) < 2)
  {
    v93 = 0;
    v94 = 0xE000000000000000;
    sub_1B8DFDEF8();
    sub_1B8DFDBBC();
    v19 = objc_msgSend(a1, sel_identifier);
    if (v19)
    {
      v20 = v19;
      v21 = sub_1B8DFDB68();
      v23 = v22;

    }
    else
    {
      v21 = 0;
      v23 = 0;
    }
    v38 = (void *)objc_opt_self();
    v91 = v21;
    v92 = v23;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F7E0);
    sub_1B8DFDF94();
    swift_bridgeObjectRelease();
    v39 = (void *)sub_1B8DFDB5C();
    swift_bridgeObjectRelease();
    objc_msgSend(v38, sel_logInfo_, v39);
    goto LABEL_25;
  }
  v86 = v6;
  v87 = v5;
  v93 = 0;
  v94 = 0xE000000000000000;
  sub_1B8DFDEF8();
  sub_1B8DFDBBC();
  v14 = objc_msgSend(a1, sel_identifier);
  if (v14)
  {
    v15 = v14;
    v16 = sub_1B8DFDB68();
    v18 = v17;

  }
  else
  {
    v16 = 0;
    v18 = 0;
  }
  v24 = (void *)objc_opt_self();
  v91 = v16;
  v92 = v18;
  v84 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F7E0);
  sub_1B8DFDF94();
  swift_bridgeObjectRelease();
  v25 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  v85 = v24;
  objc_msgSend(v24, sel_logInfo_, v25);

  v26 = objc_msgSend(a1, sel_identifier);
  if (!v26)
  {
    __break(1u);
    goto LABEL_27;
  }
  v27 = v26;
  v28 = sub_1B8DFDB68();
  v30 = v29;

  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v3 + 112) + 16))
  {
    swift_bridgeObjectRelease();
LABEL_15:
    v78 = (uint64_t *)(v3 + 112);
    v83 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F270);
    v40 = *(_QWORD *)(sub_1B8DFD904() - 8);
    v41 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1B8DFF650;
    v43 = (_QWORD *)(v42 + v41);
    *v43 = 0xD000000000000014;
    v43[1] = 0x80000001B8E06210;
    v82 = 0x80000001B8E06210;
    (*(void (**)(void))(v40 + 104))();
    type metadata accessor for StopwatchActivityAttributes();
    v44 = swift_allocObject();
    v45 = a1;
    sub_1B8DFD73C();
    v46 = objc_msgSend(v45, sel_identifier);
    if (v46)
    {
      v47 = v46;
      v48 = sub_1B8DFDB68();
      v50 = v49;

      v79 = v45;
      v51 = (uint64_t *)(v44 + OBJC_IVAR____TtC18MobileTimerSupport27StopwatchActivityAttributes_context);
      *v51 = v48;
      v51[1] = v50;
      v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F0B8);
      v89 = v44;
      v91 = v48;
      v92 = v50;
      v52 = sub_1B8DFD748();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v11, 1, 1, v52);
      sub_1B8DAA67C();
      sub_1B8DAA6C0();
      v80 = v44;
      sub_1B8DAA704();
      sub_1B8DFD3AC();
      sub_1B8DFD97C();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F278);
      v53 = sub_1B8DFD934();
      v54 = *(_QWORD *)(v53 - 8);
      v55 = *(_QWORD *)(v54 + 72);
      v56 = (*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
      v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = xmmword_1B8DFFCD0;
      v58 = v57 + v56;
      v59 = *(void (**)(unint64_t, _QWORD, uint64_t))(v54 + 104);
      v59(v58, *MEMORY[0x1E0C8FA40], v53);
      v59(v58 + v55, *MEMORY[0x1E0C8FA38], v53);
      v59(v58 + 2 * v55, *MEMORY[0x1E0C8FA48], v53);
      sub_1B8DFD940();
      v60 = v83;
      v61 = sub_1B8DFD8F8();
      if (v60)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v86 + 8))(v8, v87);
        (*(void (**)(char *, uint64_t))(v88 + 8))(v13, v95);
        swift_release();
        return;
      }
      v62 = v61;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v8, v87);
      (*(void (**)(char *, uint64_t))(v88 + 8))(v13, v95);
      v63 = objc_msgSend(v79, sel_identifier);
      if (v63)
      {
        v64 = v63;
        v65 = sub_1B8DFDB68();
        v67 = v66;

        v68 = v78;
        swift_beginAccess();
        sub_1B8DFD22C();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v89 = *v68;
        *v68 = 0x8000000000000000;
        sub_1B8DF5274(v62, v65, v67, isUniquelyReferenced_nonNull_native);
        *v68 = v89;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        v91 = 0;
        v92 = 0xE000000000000000;
        sub_1B8DFDEF8();
        sub_1B8DFDBBC();
        sub_1B8DFD8D4();
        sub_1B8DFDBBC();
        swift_bridgeObjectRelease();
        sub_1B8DFDBBC();
        v70 = objc_msgSend(v79, sel_identifier);
        if (v70)
        {
          v71 = v70;
          v72 = sub_1B8DFDB68();
          v74 = v73;

        }
        else
        {
          v72 = 0;
          v74 = 0;
        }
        v89 = v72;
        v90 = v74;
        sub_1B8DFDF94();
        swift_bridgeObjectRelease();
        v39 = (void *)sub_1B8DFDB5C();
        swift_bridgeObjectRelease();
        objc_msgSend(v85, sel_logInfo_, v39);
        swift_release();
        swift_release();
LABEL_25:

        return;
      }
LABEL_28:
      __break(1u);
      return;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  sub_1B8DFD3AC();
  sub_1B8D96EBC(v28, v30);
  v32 = v31;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v32 & 1) == 0)
    goto LABEL_15;
  v91 = 0;
  v92 = 0xE000000000000000;
  sub_1B8DFDEF8();
  sub_1B8DFDBBC();
  v33 = objc_msgSend(a1, sel_identifier);
  if (v33)
  {
    v34 = v33;
    v35 = sub_1B8DFDB68();
    v37 = v36;

  }
  else
  {
    v35 = 0;
    v37 = 0;
  }
  v89 = v35;
  v90 = v37;
  sub_1B8DFDF94();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  v75 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v85, sel_logInfo_, v75);

  sub_1B8DACEBC();
  swift_allocError();
  *v76 = 1;
  swift_willThrow();
}

uint64_t sub_1B8DABB04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  char v9;
  void *v10;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v19 = sub_1B8DFD91C();
  v14 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)objc_opt_self();
  v17 = 0;
  v18 = 0xE000000000000000;
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  v17 = 0xD000000000000024;
  v18 = 0x80000001B8E07440;
  sub_1B8DFDBBC();
  v8 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_logInfo_, v8);

  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v2 + 112) + 16))
  {
    sub_1B8DFD3AC();
    sub_1B8DFD3AC();
    sub_1B8D96EBC(a1, a2);
    if ((v9 & 1) != 0)
    {
      sub_1B8DFD22C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = 0;
      v16 = 0xE000000000000000;
      sub_1B8DFDEF8();
      swift_bridgeObjectRelease();
      v15 = 0xD00000000000001BLL;
      v16 = 0x80000001B8E069F0;
      sub_1B8DFD8D4();
      sub_1B8DFDBBC();
      swift_bridgeObjectRelease();
      sub_1B8DFDBBC();
      sub_1B8DFDBBC();
      v10 = (void *)sub_1B8DFDB5C();
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_logInfo_, v10);

      v15 = 0;
      v16 = 0;
      sub_1B8DFD910();
      sub_1B8DFD8E0();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v19);
      swift_beginAccess();
      sub_1B8DFD3AC();
      sub_1B8DEBF64(a1, a2);
      swift_endAccess();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1B8DACEBC();
  swift_allocError();
  *v12 = 0;
  return swift_willThrow();
}

uint64_t sub_1B8DABDE8()
{
  unint64_t *v0;
  unint64_t *v1;
  unint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t result;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t *v44;
  uint64_t v45;
  uint64_t v46;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F0B8);
  isUniquelyReferenced_nonNull_native = sub_1B8DFD8BC();
  if (isUniquelyReferenced_nonNull_native >> 62)
  {
LABEL_29:
    sub_1B8DFD3AC();
    v3 = sub_1B8DFDFB8();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
LABEL_3:
      v44 = v1 + 14;
      v42 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
      sub_1B8DFD3AC();
      v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v5 = 4;
      v6 = &unk_1ED370000;
      v40 = isUniquelyReferenced_nonNull_native;
      v41 = v3;
      while (1)
      {
        v7 = v5 - 4;
        if (v42)
        {
          v8 = MEMORY[0x1BCCBC814](v5 - 4, isUniquelyReferenced_nonNull_native);
          v9 = v5 - 3;
          if (__OFADD__(v7, 1))
            goto LABEL_26;
        }
        else
        {
          v8 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * v5);
          sub_1B8DFD22C();
          v9 = v5 - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_26:
            __break(1u);
LABEL_27:
            __break(1u);
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
        }
        v43 = v9;
        v10 = v4;
        sub_1B8DFD8C8();
        v11 = v6;
        v12 = (uint64_t *)(v46 + v6[382]);
        swift_beginAccess();
        v14 = *v12;
        v13 = v12[1];
        sub_1B8DFD3AC();
        swift_release();
        v1 = v44;
        swift_beginAccess();
        sub_1B8DFD22C();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v15 = *v44;
        *v44 = 0x8000000000000000;
        v17 = sub_1B8D96EBC(v14, v13);
        v18 = *(_QWORD *)(v15 + 16);
        v19 = (v16 & 1) == 0;
        v20 = v18 + v19;
        if (__OFADD__(v18, v19))
          goto LABEL_27;
        v1 = v16;
        if (*(_QWORD *)(v15 + 24) >= v20)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = v15;
            if ((v16 & 1) != 0)
              goto LABEL_16;
          }
          else
          {
            sub_1B8DECAEC();
            isUniquelyReferenced_nonNull_native = v15;
            if ((v1 & 1) != 0)
              goto LABEL_16;
          }
        }
        else
        {
          sub_1B8DF3A58(v20, isUniquelyReferenced_nonNull_native);
          v21 = sub_1B8D96EBC(v14, v13);
          if ((v1 & 1) != (v22 & 1))
          {
            result = sub_1B8DFE108();
            __break(1u);
            return result;
          }
          v17 = v21;
          isUniquelyReferenced_nonNull_native = v15;
          if ((v1 & 1) != 0)
          {
LABEL_16:
            v23 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 56);
            swift_release();
            *(_QWORD *)(v23 + 8 * v17) = v8;
            goto LABEL_20;
          }
        }
        *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * (v17 >> 6) + 64) |= 1 << v17;
        v24 = (uint64_t *)(*(_QWORD *)(isUniquelyReferenced_nonNull_native + 48) + 16 * v17);
        *v24 = v14;
        v24[1] = v13;
        *(_QWORD *)(*(_QWORD *)(isUniquelyReferenced_nonNull_native + 56) + 8 * v17) = v8;
        v25 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
        v26 = __OFADD__(v25, 1);
        v27 = v25 + 1;
        if (v26)
          goto LABEL_28;
        *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16) = v27;
        sub_1B8DFD3AC();
LABEL_20:
        *v44 = isUniquelyReferenced_nonNull_native;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        sub_1B8DFD8C8();
        v6 = v11;
        v28 = (uint64_t *)(v45 + v11[382]);
        swift_beginAccess();
        v30 = *v28;
        v29 = v28[1];
        sub_1B8DFD3AC();
        swift_release();
        v4 = v10;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v4 = sub_1B8D96914(0, v10[2] + 1, 1, v10);
        v32 = v4[2];
        v31 = v4[3];
        v1 = (unint64_t *)(v32 + 1);
        if (v32 >= v31 >> 1)
          v4 = sub_1B8D96914((_QWORD *)(v31 > 1), v32 + 1, 1, v4);
        v4[2] = v1;
        v33 = &v4[2 * v32];
        v33[4] = v30;
        v33[5] = v29;
        swift_release();
        ++v5;
        isUniquelyReferenced_nonNull_native = v40;
        if (v43 == v41)
        {
          swift_bridgeObjectRelease_n();
          v34 = (void *)objc_opt_self();
          sub_1B8DFDEF8();
          type metadata accessor for StopwatchSessionsProvider();
          sub_1B8DFDF94();
          sub_1B8DFDBBC();
          v35 = sub_1B8DFD3AC();
          MEMORY[0x1BCCBC568](v35, MEMORY[0x1E0DEA968]);
          sub_1B8DFDBBC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v36 = (void *)sub_1B8DFDB5C();
          swift_bridgeObjectRelease();
          objc_msgSend(v34, sel_logInfo_, v36);

          return (uint64_t)v4;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  v37 = (void *)objc_opt_self();
  v38 = (void *)sub_1B8DFDB5C();
  objc_msgSend(v37, sel_logInfo_, v38);

  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1B8DAC2C0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for StopwatchSessionsProvider()
{
  return objc_opt_self();
}

uint64_t sub_1B8DAC31C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 48) = a4;
  *(_QWORD *)(v5 + 56) = a5;
  return swift_task_switch();
}

uint64_t sub_1B8DAC334()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 56))
    return swift_task_switch();
  __break(1u);
  return result;
}

uint64_t sub_1B8DAC354()
{
  uint64_t v0;

  sub_1B8DAB198(*(void **)(v0 + 56));
  *(_QWORD *)(v0 + 64) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DAC3BC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;

  v1 = *(void **)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  sub_1B8DFDEF8();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  sub_1B8DFDBBC();
  *(_QWORD *)(v0 + 32) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1108);
  sub_1B8DFDF94();
  sub_1B8DFDBBC();
  v3 = objc_msgSend(v1, sel_identifier);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1B8DFDB68();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v8 = *(void **)(v0 + 64);
  v9 = (void *)objc_opt_self();
  *(_QWORD *)(v0 + 32) = v5;
  *(_QWORD *)(v0 + 40) = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F7E0);
  sub_1B8DFDF94();
  swift_bridgeObjectRelease();
  v10 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_logError_, v10);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DAC6CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 48) = a4;
  *(_QWORD *)(v5 + 56) = a5;
  return swift_task_switch();
}

uint64_t sub_1B8DAC6E4()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 56))
    return swift_task_switch();
  __break(1u);
  return result;
}

id sub_1B8DAC704()
{
  uint64_t v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*(id *)(v0 + 56), sel_identifier);
  if (result)
  {
    v2 = result;
    v3 = sub_1B8DFDB68();
    v5 = v4;

    sub_1B8DABB04(v3, v5);
    *(_QWORD *)(v0 + 64) = 0;
    swift_bridgeObjectRelease();
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B8DAC7BC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;

  v1 = *(void **)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  sub_1B8DFDEF8();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  sub_1B8DFDBBC();
  *(_QWORD *)(v0 + 32) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1108);
  sub_1B8DFDF94();
  sub_1B8DFDBBC();
  v3 = objc_msgSend(v1, sel_identifier);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1B8DFDB68();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v8 = *(void **)(v0 + 64);
  v9 = (void *)objc_opt_self();
  *(_QWORD *)(v0 + 32) = v5;
  *(_QWORD *)(v0 + 40) = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F7E0);
  sub_1B8DFDF94();
  swift_bridgeObjectRelease();
  v10 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_logError_, v10);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

ValueMetadata *type metadata accessor for StopwatchActivityAttributes.CodingKeys()
{
  return &type metadata for StopwatchActivityAttributes.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for StopwatchContext.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B8DACB00 + 4 * asc_1B8E01380[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B8DACB20 + 4 * byte_1B8E01385[v4]))();
}

_BYTE *sub_1B8DACB00(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B8DACB20(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B8DACB28(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B8DACB30(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B8DACB38(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B8DACB40(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StopwatchContext.CodingKeys()
{
  return &type metadata for StopwatchContext.CodingKeys;
}

unint64_t sub_1B8DACB60()
{
  unint64_t result;

  result = qword_1EF1E17B0;
  if (!qword_1EF1E17B0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E01658, &type metadata for StopwatchContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1E17B0);
  }
  return result;
}

unint64_t sub_1B8DACBA8()
{
  unint64_t result;

  result = qword_1EF1E17B8;
  if (!qword_1EF1E17B8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E01710, &type metadata for StopwatchActivityAttributes.CodingKeys);
    atomic_store(result, &qword_1EF1E17B8);
  }
  return result;
}

unint64_t sub_1B8DACBF0()
{
  unint64_t result;

  result = qword_1ED36F528;
  if (!qword_1ED36F528)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E01680, &type metadata for StopwatchActivityAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED36F528);
  }
  return result;
}

unint64_t sub_1B8DACC38()
{
  unint64_t result;

  result = qword_1ED36F520;
  if (!qword_1ED36F520)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E016A8, &type metadata for StopwatchActivityAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED36F520);
  }
  return result;
}

unint64_t sub_1B8DACC80()
{
  unint64_t result;

  result = qword_1ED36F508;
  if (!qword_1ED36F508)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E015C8, &type metadata for StopwatchContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED36F508);
  }
  return result;
}

unint64_t sub_1B8DACCC8()
{
  unint64_t result;

  result = qword_1ED36F500;
  if (!qword_1ED36F500)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E015F0, &type metadata for StopwatchContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED36F500);
  }
  return result;
}

uint64_t sub_1B8DACD0C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1B8DFE0D8();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B8DACD78()
{
  return 25705;
}

uint64_t sub_1B8DACD88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1B8D85A48;
  v4[6] = v2;
  v4[7] = v3;
  return swift_task_switch();
}

uint64_t sub_1B8DACDE8(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

void sub_1B8DACDF8(uint64_t a1)
{
  uint64_t v1;

  sub_1B8DE72E0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1B8DACE38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1B8D9D2E0;
  v4[6] = v2;
  v4[7] = v3;
  return swift_task_switch();
}

uint64_t sub_1B8DACE98()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

unint64_t sub_1B8DACEBC()
{
  unint64_t result;

  result = qword_1EF1E17E0;
  if (!qword_1EF1E17E0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E01880, &type metadata for StopwatchSessionError);
    atomic_store(result, (unint64_t *)&qword_1EF1E17E0);
  }
  return result;
}

uint64_t _s18MobileTimerSupport27StopwatchActivityAttributesC10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B8DACF4C + 4 * byte_1B8E0138F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B8DACF80 + 4 * byte_1B8E0138A[v4]))();
}

uint64_t sub_1B8DACF80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DACF88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8DACF90);
  return result;
}

uint64_t sub_1B8DACF9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8DACFA4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B8DACFA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DACFB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StopwatchSessionError()
{
  return &type metadata for StopwatchSessionError;
}

unint64_t sub_1B8DACFD0()
{
  unint64_t result;

  result = qword_1EF1E17E8;
  if (!qword_1EF1E17E8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E01858, &type metadata for StopwatchSessionError);
    atomic_store(result, (unint64_t *)&qword_1EF1E17E8);
  }
  return result;
}

uint64_t sub_1B8DAD030()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1B8DAD07C()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1B8DAD0A0()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for ObserverStore(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ObserverStore);
}

uint64_t sub_1B8DAD0D0()
{
  return sub_1B8DA63F0();
}

void sub_1B8DAD0E8(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  sub_1B8DFD22C();
  v4 = a2;
  v3(a2);
  swift_release();

}

void sub_1B8DAD13C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B8DAD160(a1, a2, a3, (SEL *)&selRef_didCreateStopWatch_source_);
}

void sub_1B8DAD148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B8DAD160(a1, a2, a3, (SEL *)&selRef_didUpdateStopwatch_source_);
}

void sub_1B8DAD154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B8DAD160(a1, a2, a3, (SEL *)&selRef_didDeleteStopwatch_source_);
}

void sub_1B8DAD160(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v7 = objc_msgSend(*(id *)(a1 + 112), sel_allObjects);
  v8 = sub_1B8DFDC64();

  if (!(v8 >> 62))
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    return;
  }
  sub_1B8DFD3AC();
  v9 = sub_1B8DFDFB8();
  swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_11;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v8 & 0xC000000000000001) != 0)
        MEMORY[0x1BCCBC814](v10, v8);
      else
        swift_unknownObjectRetain();
      ++v10;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F180);
      swift_dynamicCast();
      objc_msgSend(v11, *a4, a2, a3);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    while (v9 != v10);
    goto LABEL_11;
  }
  __break(1u);
}

void sub_1B8DAD2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v7 = objc_msgSend(*(id *)(a1 + 112), sel_allObjects);
  v8 = sub_1B8DFDC64();

  if (!(v8 >> 62))
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    return;
  }
  sub_1B8DFD3AC();
  v9 = sub_1B8DFDFB8();
  swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_11;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v8 & 0xC000000000000001) != 0)
        MEMORY[0x1BCCBC814](v10, v8);
      else
        swift_unknownObjectRetain();
      ++v10;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F180);
      swift_dynamicCast();
      objc_msgSend(v11, sel_didAddLap_forStopwatch_source_, a2, a3, a4);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    while (v9 != v10);
    goto LABEL_11;
  }
  __break(1u);
}

void sub_1B8DAD490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B8DAD508(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_15_0, (SEL *)&selRef_didClearAllLapsForStopwatch_withCompletion_source_);
}

void sub_1B8DAD4A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B8DAD508(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_12, (SEL *)&selRef_didStartLapTimerForStopwatch_withCompletion_source_);
}

void sub_1B8DAD4B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B8DAD508(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_9_0, (SEL *)&selRef_didPauseLapTimerForStopwatch_withCompletion_source_);
}

void sub_1B8DAD4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B8DAD508(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_6, (SEL *)&selRef_didLapLapTimerForStopwatch_withCompletion_source_);
}

void sub_1B8DAD4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B8DAD508(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_3, (SEL *)&selRef_didResetLapTimerForStopwatch_withCompletion_source_);
}

void sub_1B8DAD4F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B8DAD508(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_5, (SEL *)&selRef_didResumeLapTimerForStopwatch_withCompletion_source_);
}

void sub_1B8DAD508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, SEL *a7)
{
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[8];

  v8 = objc_msgSend(*(id *)(a1 + 112), sel_allObjects);
  v9 = sub_1B8DFDC64();

  if (!(v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    return;
  }
  sub_1B8DFD3AC();
  v10 = sub_1B8DFDFB8();
  swift_bridgeObjectRelease();
  if (!v10)
    goto LABEL_14;
LABEL_3:
  if (v10 < 1)
  {
    __break(1u);
  }
  else
  {
    v11 = 0;
    do
    {
      if ((v9 & 0xC000000000000001) != 0)
      {
        v13 = MEMORY[0x1BCCBC814](v11, v9);
      }
      else
      {
        v13 = *(_QWORD *)(v9 + 8 * v11 + 32);
        swift_unknownObjectRetain();
      }
      aBlock[7] = v13;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F180);
      swift_dynamicCast();
      v14 = (void *)aBlock[6];
      if (a3)
      {
        aBlock[4] = a3;
        aBlock[5] = a4;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1B8DAD0E8;
        aBlock[3] = a6;
        v12 = _Block_copy(aBlock);
        sub_1B8DFD22C();
        swift_release();
      }
      else
      {
        v12 = 0;
      }
      ++v11;
      objc_msgSend(v14, *a7, a2, v12, a5);
      _Block_release(v12);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    while (v10 != v11);
    swift_bridgeObjectRelease();
  }
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1BCCBD084](a1, v6, a5);
}

unint64_t sub_1B8DAD774()
{
  unint64_t result;

  result = qword_1EF1E17F0;
  if (!qword_1EF1E17F0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E01A00, &type metadata for StartStopwatchIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E17F0);
  }
  return result;
}

unint64_t sub_1B8DAD7BC()
{
  unint64_t result;

  result = qword_1EF1E17F8;
  if (!qword_1EF1E17F8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E01A28, &type metadata for StartStopwatchIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E17F8);
  }
  return result;
}

uint64_t sub_1B8DAD800()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1B8DAD824()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8DAD834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1B8DFD640();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v5);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0CAF9B8], v1);
  return sub_1B8DFD664();
}

uint64_t sub_1B8DAD98C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD640();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1B8DFDB50();
  v10 = MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v18 = sub_1B8DFD658();
  v11 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v12 = *MEMORY[0x1E0CAF9B8];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v13(v7, v12, v4);
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v13(v7, v12, v4);
  sub_1B8DFD664();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v3, 0, 1, v18);
  v14 = v19;
  sub_1B8DFD310();
  v15 = sub_1B8DFD304();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
}

uint64_t sub_1B8DADC44()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1828);
  MEMORY[0x1E0C80A78](v0);
  sub_1B8DADF5C();
  sub_1B8DFD400();
  return sub_1B8DFD3C4();
}

uint64_t sub_1B8DADD08(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 24) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 32) = v2;
  *v2 = v1;
  v2[1] = sub_1B8DADD54;
  return sub_1B8D9D3BC();
}

uint64_t sub_1B8DADD54(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 40) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_1B8DADDC8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + 40);
  if (v1)
  {
    v2 = sub_1B8DA4798();
    v3 = objc_msgSend(v2, sel_state);

    if (v3 == (id)1)
      sub_1B8DA412C();
    else
      sub_1B8DA1F8C();

  }
  *(_QWORD *)(v0 + 16) = sub_1B8DDBAC0(2);
  sub_1B8D8C494();
  sub_1B8DFD0B8();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DADE80(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B8D85A48;
  v3[3] = a1;
  v4 = (_QWORD *)swift_task_alloc();
  v3[4] = v4;
  *v4 = v3;
  v4[1] = sub_1B8DADD54;
  return sub_1B8D9D3BC();
}

uint64_t sub_1B8DADEF8()
{
  sub_1B8DADF5C();
  return sub_1B8DFD07C();
}

ValueMetadata *type metadata accessor for StartStopwatchIntent()
{
  return &type metadata for StartStopwatchIntent;
}

uint64_t sub_1B8DADF30()
{
  return sub_1B8D87FFC(&qword_1EF1E1808, &qword_1EF1E1810, MEMORY[0x1E0C916B0]);
}

unint64_t sub_1B8DADF5C()
{
  unint64_t result;

  result = qword_1EF1E1818;
  if (!qword_1EF1E1818)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E01970, &type metadata for StartStopwatchIntent);
    atomic_store(result, &qword_1EF1E1818);
  }
  return result;
}

unint64_t sub_1B8DADFA4()
{
  unint64_t result;

  result = qword_1EF1E1830;
  if (!qword_1EF1E1830)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E01ADC, &type metadata for DeleteAlarmIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1830);
  }
  return result;
}

uint64_t sub_1B8DADFEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1B8DFD640();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (uint64_t *)((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v5);
  sub_1B8DFDAF0();
  *v4 = type metadata accessor for MTAppIntentsManager();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0CAF9C8], v1);
  sub_1B8DFD79C();
  return sub_1B8DFD664();
}

uint64_t sub_1B8DAE14C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1B8DFD640();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v5);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0CAF9B8], v1);
  return sub_1B8DFD664();
}

uint64_t sub_1B8DAE2A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t *, _QWORD, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v17[0] = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1B8DFD640();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (_QWORD *)((char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_1B8DFDB50();
  v10 = MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v11 = sub_1B8DFD658();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  sub_1B8DFDAF0();
  *v8 = type metadata accessor for MTAppIntentsManager();
  v13 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104);
  v13(v8, *MEMORY[0x1E0CAF9C8], v5);
  sub_1B8DFD79C();
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v13(v8, *MEMORY[0x1E0CAF9B8], v5);
  sub_1B8DFD664();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v3, 0, 1, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1110);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1B8DFF650;
  sub_1B8DFD634();
  v14 = v17[0];
  sub_1B8DFD310();
  v15 = sub_1B8DFD304();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
}

uint64_t sub_1B8DAE5B0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[3] = a1;
  v2[4] = a2;
  v3 = sub_1B8DFD784();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = *(_QWORD *)(type metadata accessor for AlarmEntity() - 8);
  v2[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B8DAE634()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t (*v13)(void);

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FA58]), sel_init);
  sub_1B8DFD178();
  v2 = v0[2];
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = v0[8];
    v5 = v0[6];
    v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v7 = *(_QWORD *)(v4 + 72);
    do
    {
      v8 = v0[9];
      v9 = v0[7];
      v10 = v0[5];
      sub_1B8DAEE3C(v6, v8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v9, v8, v10);
      sub_1B8D861B4(v8);
      sub_1B8DFD754();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v10);
      v11 = (void *)sub_1B8DFDB5C();
      swift_bridgeObjectRelease();
      v12 = objc_msgSend(v1, sel_alarmWithIDString_, v11);

      if (v12)
      {
        if (objc_msgSend(v12, sel_isSleepAlarm))
        {
          swift_bridgeObjectRelease();
          sub_1B8DAEE80();
          swift_allocError();
          swift_willThrow();

          swift_task_dealloc();
          swift_task_dealloc();
          v13 = (uint64_t (*)(void))v0[1];
          return v13();
        }

      }
      v6 += v7;
      --v3;
    }
    while (v3);
  }
  swift_bridgeObjectRelease();
  sub_1B8DFD0DC();

  swift_task_dealloc();
  swift_task_dealloc();
  v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1B8DAE840()
{
  uint64_t v1;

  sub_1B8DFD178();
  return v1;
}

unint64_t sub_1B8DAE874()
{
  unint64_t result;

  result = qword_1EF1E1838;
  if (!qword_1EF1E1838)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E01B04, &type metadata for DeleteAlarmIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1838);
  }
  return result;
}

unint64_t sub_1B8DAE8BC()
{
  unint64_t result;

  result = qword_1EF1E1840;
  if (!qword_1EF1E1840)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E01B94, &type metadata for DeleteAlarmIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1840);
  }
  return result;
}

unint64_t sub_1B8DAE904()
{
  unint64_t result;

  result = qword_1EF1E1848;
  if (!qword_1EF1E1848)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E01BBC, &type metadata for DeleteAlarmIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1848);
  }
  return result;
}

uint64_t sub_1B8DAE948()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8DAE958()
{
  sub_1B8DAE874();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8DAE9A0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1B8D85A48;
  return sub_1B8DAE5B0(a1, v4);
}

uint64_t sub_1B8DAE9F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8DAEA58();
  *a1 = result;
  return result;
}

uint64_t sub_1B8DAEA1C()
{
  sub_1B8DAE874();
  return sub_1B8DFD07C();
}

ValueMetadata *type metadata accessor for DeleteAlarmIntent()
{
  return &type metadata for DeleteAlarmIntent;
}

uint64_t sub_1B8DAEA58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t *, _QWORD, uint64_t);
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v0 = sub_1B8DFD418();
  v29 = *(_QWORD *)(v0 - 8);
  v30 = v0;
  MEMORY[0x1E0C80A78](v0);
  v28 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1B8DFDB50();
  v3 = MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  v26 = (char *)&v24 - v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10D0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v27 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v10);
  v25 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B8DFD640();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1B8DFD658();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v19);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v20 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104);
  v20(v15, *MEMORY[0x1E0CAF9B8], v12);
  sub_1B8DFD664();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v25, 1, 1, v17);
  v31 = 0;
  sub_1B8DFDAF0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1858);
  *v15 = type metadata accessor for MTAppIntentsManager();
  v20(v15, *MEMORY[0x1E0CAF9C8], v12);
  sub_1B8DFD79C();
  sub_1B8DFD664();
  sub_1B8DFD0AC();
  v21 = sub_1B8DFD0A0();
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v22(v9, 0, 1, v21);
  v22(v27, 1, 1, v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v28, *MEMORY[0x1E0C91738], v30);
  sub_1B8D8616C();
  return sub_1B8DFD1C0();
}

uint64_t sub_1B8DAEE3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AlarmEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B8DAEE80()
{
  unint64_t result;

  result = qword_1EF1E1868;
  if (!qword_1EF1E1868)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E01CB0, &type metadata for DeleteAlarmIntent.ActionError);
    atomic_store(result, (unint64_t *)&qword_1EF1E1868);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DeleteAlarmIntent.ActionError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B8DAEF04 + 4 * asc_1B8E01A90[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B8DAEF24 + 4 * byte_1B8E01A95[v4]))();
}

_BYTE *sub_1B8DAEF04(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B8DAEF24(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B8DAEF2C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B8DAEF34(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B8DAEF3C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B8DAEF44(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DeleteAlarmIntent.ActionError()
{
  return &type metadata for DeleteAlarmIntent.ActionError;
}

unint64_t sub_1B8DAEF64()
{
  unint64_t result;

  result = qword_1EF1E1870;
  if (!qword_1EF1E1870)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E01C88, &type metadata for DeleteAlarmIntent.ActionError);
    atomic_store(result, (unint64_t *)&qword_1EF1E1870);
  }
  return result;
}

unint64_t sub_1B8DAEFAC()
{
  unint64_t result;

  result = qword_1EF1E1878;
  if (!qword_1EF1E1878)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E01D80, &type metadata for CancelTimerIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1878);
  }
  return result;
}

unint64_t sub_1B8DAEFF4()
{
  unint64_t result;

  result = qword_1EF1E1880;
  if (!qword_1EF1E1880)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E01DA8, &type metadata for CancelTimerIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E1880);
  }
  return result;
}

uint64_t sub_1B8DAF038()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8DAF048()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8DAF058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1B8DFD640();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v5);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0CAF9B8], v1);
  return sub_1B8DFD664();
}

uint64_t sub_1B8DAF1AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD640();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1B8DFDB50();
  v10 = MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v18 = sub_1B8DFD658();
  v11 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v12 = *MEMORY[0x1E0CAF9B8];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v13(v7, v12, v4);
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v13(v7, v12, v4);
  sub_1B8DFD664();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v3, 0, 1, v18);
  v14 = v19;
  sub_1B8DFD310();
  v15 = sub_1B8DFD304();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
}

uint64_t sub_1B8DAF45C()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E18B0);
  MEMORY[0x1E0C80A78](v0);
  sub_1B8DAF760();
  sub_1B8DFD400();
  return sub_1B8DFD3C4();
}

uint64_t sub_1B8DAF520(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1B8DAF538()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  v1 = objc_msgSend(*(id *)(v0 + 24), sel_timersSync);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(), sel_firstActiveTimerFromTimers_, v1);

    if (objc_msgSend(v3, sel_state))
    {
      v4 = *(void **)(v0 + 24);
      v5 = objc_msgSend(v3, sel_timerByUpdatingWithState_, 1);
      v6 = objc_msgSend(v4, sel_updateTimer_, v5);

      v3 = v6;
    }

  }
  sub_1B8DFD0DC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DAF634(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1B8D85A48;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

id sub_1B8DAF698@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FAB0]), sel_init);
  *a1 = result;
  return result;
}

uint64_t sub_1B8DAF6D0()
{
  sub_1B8DAF760();
  return sub_1B8DFD07C();
}

ValueMetadata *type metadata accessor for CancelTimerIntent()
{
  return &type metadata for CancelTimerIntent;
}

uint64_t sub_1B8DAF708()
{
  return sub_1B8D87FFC(&qword_1EF1E1890, &qword_1EF1E1898, MEMORY[0x1E0C916B0]);
}

uint64_t sub_1B8DAF734()
{
  return sub_1B8D87FFC((unint64_t *)&qword_1EF1E10C0, &qword_1EF1E10C8, MEMORY[0x1E0C91590]);
}

unint64_t sub_1B8DAF760()
{
  unint64_t result;

  result = qword_1EF1E18A0;
  if (!qword_1EF1E18A0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E01CF0, &type metadata for CancelTimerIntent);
    atomic_store(result, &qword_1EF1E18A0);
  }
  return result;
}

uint64_t sub_1B8DAF7A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  type metadata accessor for WatchActivityManager();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0xD000000000000013;
  *(_QWORD *)(v0 + 24) = 0x80000001B8E07700;
  v1 = OBJC_IVAR____TtC18MobileTimerSupport20WatchActivityManager_logger;
  if (qword_1EF1E0EF8 != -1)
    swift_once();
  v2 = sub_1B8DFD9A0();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EF1EC398);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0 + v1, v3, v2);
  qword_1EF1E18B8 = v0;
  return result;
}

uint64_t static WatchActivityManager.shared.getter()
{
  if (qword_1EF1E0EF0 != -1)
    swift_once();
  swift_beginAccess();
  return sub_1B8DFD22C();
}

uint64_t static WatchActivityManager.shared.setter(uint64_t a1)
{
  if (qword_1EF1E0EF0 != -1)
    swift_once();
  swift_beginAccess();
  qword_1EF1E18B8 = a1;
  return swift_release();
}

uint64_t (*static WatchActivityManager.shared.modify())()
{
  if (qword_1EF1E0EF0 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t WatchActivityManager.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC18MobileTimerSupport20WatchActivityManager_logger;
  v2 = sub_1B8DFD9A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t WatchActivityManager.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC18MobileTimerSupport20WatchActivityManager_logger;
  v2 = sub_1B8DFD9A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1B8DAFA54()
{
  return type metadata accessor for WatchActivityManager();
}

uint64_t type metadata accessor for WatchActivityManager()
{
  uint64_t result;

  result = qword_1EF1E18E8;
  if (!qword_1EF1E18E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B8DAFA98()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B8DFD9A0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for WatchActivityManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WatchActivityManager.startActivity(alarmID:firingDate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of WatchActivityManager.endActivity(alarmID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t sub_1B8DAFB34()
{
  uint64_t v0;

  v0 = sub_1B8DFD9A0();
  __swift_allocate_value_buffer(v0, qword_1EF1EC398);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF1EC398);
  return sub_1B8DFD994();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1B8DAFC08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1A50);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD238();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1A58);
  MEMORY[0x1E0C80A78](v8);
  sub_1B8DADF5C();
  sub_1B8DFD2B0();
  sub_1B8DFD2A4();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0C90F68], v4);
  sub_1B8DFD28C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1B8DFD2A4();
  sub_1B8DFD2BC();
  v9 = sub_1B8DFD250();
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  sub_1B8DFD280();
  v11 = sub_1B8DFD250();
  v10(v3, v0);
  sub_1B8DFD280();
  v12 = sub_1B8DFD250();
  v10(v3, v0);
  sub_1B8DFD280();
  v13 = sub_1B8DFD250();
  v10(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1A60);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1B8E01E80;
  *(_QWORD *)(v14 + 32) = v9;
  *(_QWORD *)(v14 + 40) = v11;
  *(_QWORD *)(v14 + 48) = v12;
  *(_QWORD *)(v14 + 56) = v13;
  v15 = sub_1B8DFD244();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1B8DAFEF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1A38);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD238();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1A40);
  MEMORY[0x1E0C80A78](v8);
  sub_1B8DA8C34();
  sub_1B8DFD2B0();
  sub_1B8DFD2A4();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0C90F68], v4);
  sub_1B8DFD28C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1B8DFD2A4();
  sub_1B8DFD2BC();
  v9 = sub_1B8DFD250();
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  sub_1B8DFD280();
  v11 = sub_1B8DFD250();
  v10(v3, v0);
  sub_1B8DFD280();
  v12 = sub_1B8DFD250();
  v10(v3, v0);
  sub_1B8DFD280();
  v13 = sub_1B8DFD250();
  v10(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1A48);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1B8E01E80;
  *(_QWORD *)(v14 + 32) = v9;
  *(_QWORD *)(v14 + 40) = v11;
  *(_QWORD *)(v14 + 48) = v12;
  *(_QWORD *)(v14 + 56) = v13;
  v15 = sub_1B8DFD244();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1B8DB01E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v0 = sub_1B8DFD238();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1A20);
  MEMORY[0x1E0C80A78](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1A28);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8D8C450();
  sub_1B8DFD280();
  v17 = sub_1B8DFD250();
  v9 = *(void (**)(char *, uint64_t))(v6 + 8);
  v9(v8, v5);
  sub_1B8DFD2B0();
  sub_1B8DFD2A4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0C90F68], v0);
  sub_1B8DFD28C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1B8DFD2A4();
  sub_1B8DFD2BC();
  v10 = sub_1B8DFD250();
  v9(v8, v5);
  sub_1B8DFD280();
  v11 = sub_1B8DFD250();
  v9(v8, v5);
  sub_1B8DFD280();
  v12 = sub_1B8DFD250();
  v9(v8, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1A30);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1B8E01E80;
  *(_QWORD *)(v13 + 32) = v17;
  *(_QWORD *)(v13 + 40) = v10;
  *(_QWORD *)(v13 + 48) = v11;
  *(_QWORD *)(v13 + 56) = v12;
  v14 = sub_1B8DFD244();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1B8DB04D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1A08);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD238();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1A10);
  MEMORY[0x1E0C80A78](v8);
  sub_1B8D9F750();
  sub_1B8DFD2B0();
  sub_1B8DFD2A4();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0C90F68], v4);
  sub_1B8DFD28C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1B8DFD2A4();
  sub_1B8DFD2BC();
  v9 = sub_1B8DFD250();
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  sub_1B8DFD280();
  v11 = sub_1B8DFD250();
  v10(v3, v0);
  sub_1B8DFD280();
  v12 = sub_1B8DFD250();
  v10(v3, v0);
  sub_1B8DFD280();
  v13 = sub_1B8DFD250();
  v10(v3, v0);
  sub_1B8DFD280();
  v14 = sub_1B8DFD250();
  v10(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1A18);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B8DFFCF0;
  *(_QWORD *)(v15 + 32) = v9;
  *(_QWORD *)(v15 + 40) = v11;
  *(_QWORD *)(v15 + 48) = v12;
  *(_QWORD *)(v15 + 56) = v13;
  *(_QWORD *)(v15 + 64) = v14;
  v16 = sub_1B8DFD244();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1B8DB07F8()
{
  return sub_1B8DB203C();
}

uint64_t sub_1B8DB0814()
{
  return sub_1B8DB203C();
}

uint64_t sub_1B8DB0830()
{
  return sub_1B8DB203C();
}

uint64_t sub_1B8DB084C()
{
  return sub_1B8DB203C();
}

uint64_t sub_1B8DB0874(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E19F0);
  v3 = *(_QWORD *)(v2 - 8);
  v23 = v2;
  v24 = v3;
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E19F8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v19 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v9);
  sub_1B8DA8D6C();
  sub_1B8DFD2B0();
  sub_1B8DFD2A4();
  swift_getKeyPath();
  v22 = sub_1B8DA98C0();
  v18[1] = a1;
  sub_1B8DFD22C();
  swift_release();
  sub_1B8DFD298();
  swift_release();
  sub_1B8DFD2A4();
  sub_1B8DFD2BC();
  v21 = sub_1B8DFD250();
  v10 = v23;
  v24 = *(_QWORD *)(v24 + 8);
  ((void (*)(char *, uint64_t))v24)(v5, v23);
  sub_1B8DFD2B0();
  sub_1B8DFD2A4();
  swift_getKeyPath();
  sub_1B8DFD22C();
  swift_release();
  sub_1B8DFD298();
  swift_release();
  sub_1B8DFD2A4();
  sub_1B8DFD2BC();
  v20 = sub_1B8DFD250();
  ((void (*)(char *, uint64_t))v24)(v5, v10);
  sub_1B8DFD2B0();
  sub_1B8DFD2A4();
  swift_getKeyPath();
  sub_1B8DFD22C();
  swift_release();
  sub_1B8DFD298();
  swift_release();
  sub_1B8DFD2A4();
  sub_1B8DFD2BC();
  v19 = (char *)sub_1B8DFD250();
  v11 = v23;
  v12 = (void (*)(char *, uint64_t))v24;
  ((void (*)(char *, uint64_t))v24)(v5, v23);
  sub_1B8DFD2B0();
  sub_1B8DFD2A4();
  swift_getKeyPath();
  sub_1B8DFD22C();
  swift_release();
  sub_1B8DFD298();
  swift_release();
  sub_1B8DFD2A4();
  sub_1B8DFD2BC();
  v13 = sub_1B8DFD250();
  v12(v5, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1A00);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1B8E01E80;
  v15 = v20;
  *(_QWORD *)(v14 + 32) = v21;
  *(_QWORD *)(v14 + 40) = v15;
  *(_QWORD *)(v14 + 48) = v19;
  *(_QWORD *)(v14 + 56) = v13;
  v16 = sub_1B8DFD244();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1B8DB0D2C(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *);
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v25 = a1;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E19D8);
  v26 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1B8DFD238();
  v27 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E19E0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v24 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v22 = (char *)&v20 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v10);
  sub_1B8D9E4C8();
  sub_1B8DFD2B0();
  sub_1B8DFD2A4();
  swift_getKeyPath();
  v30 = sub_1B8DA98C0();
  sub_1B8DFD22C();
  swift_release();
  sub_1B8DFD298();
  swift_release();
  sub_1B8DFD2A4();
  LODWORD(v29) = *MEMORY[0x1E0C90F68];
  v11 = v27;
  v28 = *(void (**)(char *))(v27 + 104);
  v12 = v20;
  v28(v4);
  sub_1B8DFD28C();
  v27 = *(_QWORD *)(v11 + 8);
  ((void (*)(char *, uint64_t))v27)(v4, v12);
  sub_1B8DFD2A4();
  sub_1B8DFD2BC();
  v23 = sub_1B8DFD250();
  v26 = *(_QWORD *)(v26 + 8);
  ((void (*)(char *, uint64_t))v26)(v2, v31);
  sub_1B8DFD2B0();
  sub_1B8DFD2A4();
  swift_getKeyPath();
  sub_1B8DFD22C();
  swift_release();
  sub_1B8DFD298();
  swift_release();
  sub_1B8DFD2A4();
  ((void (*)(char *, _QWORD, uint64_t))v28)(v4, v29, v12);
  sub_1B8DFD28C();
  ((void (*)(char *, uint64_t))v27)(v4, v12);
  sub_1B8DFD2A4();
  sub_1B8DFD2BC();
  v21 = sub_1B8DFD250();
  ((void (*)(char *, uint64_t))v26)(v2, v31);
  sub_1B8DFD2B0();
  sub_1B8DFD2A4();
  swift_getKeyPath();
  sub_1B8DFD22C();
  swift_release();
  sub_1B8DFD298();
  swift_release();
  sub_1B8DFD2A4();
  ((void (*)(char *, _QWORD, uint64_t))v28)(v4, v29, v12);
  sub_1B8DFD28C();
  ((void (*)(char *, uint64_t))v27)(v4, v12);
  sub_1B8DFD2A4();
  sub_1B8DFD2BC();
  v29 = sub_1B8DFD250();
  v13 = v31;
  v14 = (void (*)(char *, uint64_t))v26;
  ((void (*)(char *, uint64_t))v26)(v2, v31);
  sub_1B8DFD2B0();
  sub_1B8DFD2A4();
  swift_getKeyPath();
  sub_1B8DFD22C();
  swift_release();
  sub_1B8DFD298();
  swift_release();
  sub_1B8DFD2A4();
  sub_1B8DFD2BC();
  v15 = sub_1B8DFD250();
  v14(v2, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E19E8);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B8E01E80;
  v17 = v21;
  *(_QWORD *)(v16 + 32) = v23;
  *(_QWORD *)(v16 + 40) = v17;
  *(_QWORD *)(v16 + 48) = v29;
  *(_QWORD *)(v16 + 56) = v15;
  v18 = sub_1B8DFD244();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1B8DB1320(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(char *, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  unint64_t v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;

  v33 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E19C0);
  v44 = *(_QWORD *)(v1 - 8);
  v45 = v1;
  MEMORY[0x1E0C80A78](v1);
  v43 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1B8DFD238();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = v3;
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E19C8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v37 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v35 = (char *)&v33 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v13);
  v14 = sub_1B8DA7A50();
  sub_1B8DFD2B0();
  sub_1B8DFD2A4();
  swift_getKeyPath();
  v41 = sub_1B8DA98C0();
  sub_1B8DFD22C();
  swift_release();
  sub_1B8DFD298();
  swift_release();
  sub_1B8DFD2A4();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v46 = *MEMORY[0x1E0C90F68];
  v15 = v46;
  v17 = v5;
  v16(v7, v46, v5);
  v18 = v16;
  v40 = v16;
  sub_1B8DFD28C();
  v19 = *(void (**)(char *, uint64_t))(v4 + 8);
  v39 = v17;
  v19(v7, v17);
  v42 = v19;
  sub_1B8DFD2A4();
  v18(v7, v15, v17);
  sub_1B8DFD28C();
  v19(v7, v17);
  sub_1B8DFD2A4();
  v20 = v43;
  sub_1B8DFD2BC();
  v38 = v14;
  v36 = sub_1B8DFD250();
  v21 = v45;
  v44 = *(_QWORD *)(v44 + 8);
  ((void (*)(char *, uint64_t))v44)(v20, v45);
  sub_1B8DFD2B0();
  sub_1B8DFD2A4();
  swift_getKeyPath();
  sub_1B8DFD22C();
  swift_release();
  sub_1B8DFD298();
  swift_release();
  sub_1B8DFD2A4();
  v22 = v39;
  v23 = v40;
  v40(v7, v46, v39);
  sub_1B8DFD28C();
  v42(v7, v22);
  sub_1B8DFD2A4();
  v24 = v43;
  sub_1B8DFD2BC();
  v34 = sub_1B8DFD250();
  ((void (*)(char *, uint64_t))v44)(v24, v21);
  sub_1B8DFD2B0();
  sub_1B8DFD2A4();
  swift_getKeyPath();
  sub_1B8DFD22C();
  swift_release();
  sub_1B8DFD298();
  swift_release();
  sub_1B8DFD2A4();
  v25 = v39;
  v23(v7, v46, v39);
  sub_1B8DFD28C();
  v26 = v42;
  v42(v7, v25);
  sub_1B8DFD2A4();
  v27 = v43;
  sub_1B8DFD2BC();
  v35 = (char *)sub_1B8DFD250();
  ((void (*)(char *, uint64_t))v44)(v27, v45);
  sub_1B8DFD2B0();
  sub_1B8DFD2A4();
  swift_getKeyPath();
  sub_1B8DFD22C();
  swift_release();
  sub_1B8DFD298();
  swift_release();
  sub_1B8DFD2A4();
  v40(v7, v46, v25);
  sub_1B8DFD28C();
  v26(v7, v25);
  sub_1B8DFD2A4();
  sub_1B8DFD2BC();
  v28 = sub_1B8DFD250();
  ((void (*)(char *, uint64_t))v44)(v27, v45);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E19D0);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1B8E01E80;
  v30 = v34;
  *(_QWORD *)(v29 + 32) = v36;
  *(_QWORD *)(v29 + 40) = v30;
  *(_QWORD *)(v29 + 48) = v35;
  *(_QWORD *)(v29 + 56) = v28;
  v31 = sub_1B8DFD244();
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_1B8DB19CC()
{
  return sub_1B8DB203C();
}

uint64_t sub_1B8DB19E8()
{
  return sub_1B8DB203C();
}

uint64_t sub_1B8DB1A04()
{
  return sub_1B8DB203C();
}

uint64_t sub_1B8DB1A28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  void (*v29)(char *);
  unsigned int v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v35 = a1;
  v37 = sub_1B8DFD238();
  v31 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v36 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E19A0);
  v3 = *(_QWORD *)(v2 - 8);
  v38 = v2;
  v39 = v3;
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E19A8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v32 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v10 = MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v11 = sub_1B8D8C494();
  sub_1B8DFD2B0();
  sub_1B8DFD2A4();
  swift_getKeyPath();
  v34 = sub_1B8DB2A1C();
  sub_1B8DFD22C();
  swift_release();
  sub_1B8DFD298();
  swift_release();
  sub_1B8DFD2A4();
  sub_1B8DFD2BC();
  v33 = sub_1B8DFD250();
  v39 = *(_QWORD *)(v39 + 8);
  ((void (*)(char *, uint64_t))v39)(v5, v2);
  sub_1B8DFD2B0();
  sub_1B8DFD2A4();
  v30 = *MEMORY[0x1E0C90F68];
  v12 = v31;
  v29 = *(void (**)(char *))(v31 + 104);
  v14 = v36;
  v13 = v37;
  v29(v36);
  sub_1B8DFD28C();
  v28 = *(void (**)(char *, uint64_t))(v12 + 8);
  v28(v14, v13);
  sub_1B8DFD2A4();
  swift_getKeyPath();
  sub_1B8DFD22C();
  swift_release();
  sub_1B8DFD298();
  swift_release();
  sub_1B8DFD2A4();
  v15 = v5;
  sub_1B8DFD2BC();
  v26 = v11;
  v31 = sub_1B8DFD250();
  ((void (*)(char *, uint64_t))v39)(v5, v38);
  sub_1B8DFD2B0();
  sub_1B8DFD2A4();
  swift_getKeyPath();
  sub_1B8DFD22C();
  swift_release();
  sub_1B8DFD298();
  swift_release();
  sub_1B8DFD2A4();
  v17 = v36;
  v16 = v37;
  v18 = v30;
  v19 = (void (*)(char *, uint64_t, uint64_t))v29;
  ((void (*)(char *, _QWORD, uint64_t))v29)(v36, v30, v37);
  sub_1B8DFD28C();
  v20 = v28;
  v28(v17, v16);
  sub_1B8DFD2A4();
  sub_1B8DFD2BC();
  v27 = sub_1B8DFD250();
  ((void (*)(char *, uint64_t))v39)(v15, v38);
  sub_1B8DFD2B0();
  sub_1B8DFD2A4();
  v19(v17, v18, v16);
  sub_1B8DFD28C();
  v20(v17, v16);
  sub_1B8DFD2A4();
  swift_getKeyPath();
  sub_1B8DFD22C();
  swift_release();
  sub_1B8DFD298();
  swift_release();
  sub_1B8DFD2A4();
  sub_1B8DFD2BC();
  v21 = sub_1B8DFD250();
  ((void (*)(char *, uint64_t))v39)(v15, v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E19B8);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1B8E01E80;
  v23 = v31;
  *(_QWORD *)(v22 + 32) = v33;
  *(_QWORD *)(v22 + 40) = v23;
  *(_QWORD *)(v22 + 48) = v27;
  *(_QWORD *)(v22 + 56) = v21;
  v24 = sub_1B8DFD244();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1B8DB2018()
{
  return sub_1B8DB203C();
}

uint64_t sub_1B8DB203C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1B8DFD268();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1990);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1B8DFF650;
  *(_QWORD *)(v1 + 32) = v0;
  v2 = sub_1B8DFD25C();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1B8DB209C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v0 = sub_1B8DFD2E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = sub_1B8DDBE08();
  sub_1B8D8C494();
  sub_1B8DFD2EC();
  v4 = sub_1B8DFD2D4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1998);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B8DFF650;
  *(_QWORD *)(v5 + 32) = v4;
  v6 = sub_1B8DFD2C8();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1B8DB2194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1B8DFD220();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8D8C494();
  sub_1B8DFD214();
  v4 = sub_1B8DFD208();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1988);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B8DFF650;
  *(_QWORD *)(v5 + 32) = v4;
  v6 = sub_1B8DFD1FC();
  swift_bridgeObjectRelease();
  return v6;
}

ValueMetadata *type metadata accessor for OpenTabAssitantIntents()
{
  return &type metadata for OpenTabAssitantIntents;
}

ValueMetadata *type metadata accessor for WorldClockAssistantIntents()
{
  return &type metadata for WorldClockAssistantIntents;
}

ValueMetadata *type metadata accessor for StopwatchAssistantIntents()
{
  return &type metadata for StopwatchAssistantIntents;
}

uint64_t sub_1B8DB22A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void (*v5)(char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  id v13;

  v0 = sub_1B8DFD2E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FA88]), sel_init);
  sub_1B8DADF5C();
  sub_1B8DFD2EC();
  v4 = sub_1B8DFD2D4();
  v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FA88]), sel_init);
  sub_1B8DA8C34();
  sub_1B8DFD2EC();
  v6 = sub_1B8DFD2D4();
  v5(v3, v0);
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FA88]), sel_init);
  sub_1B8D8C450();
  sub_1B8DFD2EC();
  v7 = sub_1B8DFD2D4();
  v5(v3, v0);
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FA88]), sel_init);
  sub_1B8D9F750();
  sub_1B8DFD2EC();
  v8 = sub_1B8DFD2D4();
  v5(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1998);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B8E01E80;
  *(_QWORD *)(v9 + 32) = v4;
  *(_QWORD *)(v9 + 40) = v6;
  *(_QWORD *)(v9 + 48) = v7;
  *(_QWORD *)(v9 + 56) = v8;
  v10 = sub_1B8DFD2C8();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1B8DB24E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void (*v5)(char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = sub_1B8DFD220();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8DADF5C();
  sub_1B8DFD214();
  v4 = sub_1B8DFD208();
  v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  sub_1B8DA8C34();
  sub_1B8DFD214();
  v6 = sub_1B8DFD208();
  v5(v3, v0);
  sub_1B8D8C450();
  sub_1B8DFD214();
  v7 = sub_1B8DFD208();
  v5(v3, v0);
  sub_1B8D9F750();
  sub_1B8DFD214();
  v8 = sub_1B8DFD208();
  v5(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1988);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B8E01E80;
  *(_QWORD *)(v9 + 32) = v4;
  *(_QWORD *)(v9 + 40) = v6;
  *(_QWORD *)(v9 + 48) = v7;
  *(_QWORD *)(v9 + 56) = v8;
  v10 = sub_1B8DFD1FC();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1B8DB2698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void (*v5)(char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v0 = sub_1B8DFD2E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B8DA93AC();
  sub_1B8DA8D6C();
  sub_1B8DFD2EC();
  v4 = sub_1B8DFD2D4();
  v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  v12 = sub_1B8D9EB30();
  sub_1B8D9E4C8();
  sub_1B8DFD2EC();
  v6 = sub_1B8DFD2D4();
  v5(v3, v0);
  v12 = sub_1B8DA8040();
  sub_1B8DA7A50();
  sub_1B8DFD2EC();
  v7 = sub_1B8DFD2D4();
  v5(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1998);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B8DFFCD0;
  *(_QWORD *)(v8 + 32) = v4;
  *(_QWORD *)(v8 + 40) = v6;
  *(_QWORD *)(v8 + 48) = v7;
  v9 = sub_1B8DFD2C8();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1B8DB2844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void (*v5)(char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = sub_1B8DFD220();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8DA8D6C();
  sub_1B8DFD214();
  v4 = sub_1B8DFD208();
  v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  sub_1B8D9E4C8();
  sub_1B8DFD214();
  v6 = sub_1B8DFD208();
  v5(v3, v0);
  sub_1B8DA7A50();
  sub_1B8DFD214();
  v7 = sub_1B8DFD208();
  v5(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1988);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B8DFFCD0;
  *(_QWORD *)(v8 + 32) = v4;
  *(_QWORD *)(v8 + 40) = v6;
  *(_QWORD *)(v8 + 48) = v7;
  v9 = sub_1B8DFD1FC();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1B8DB29B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1B8DFD178();
  *a1 = v3;
  return result;
}

uint64_t sub_1B8DB29E8()
{
  return sub_1B8DFD184();
}

unint64_t sub_1B8DB2A1C()
{
  unint64_t result;

  result = qword_1EF1E19B0;
  if (!qword_1EF1E19B0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E03CC4, &type metadata for MTAppIntentsTab);
    atomic_store(result, (unint64_t *)&qword_1EF1E19B0);
  }
  return result;
}

uint64_t keypath_get_2Tm@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_1B8DFD178();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t keypath_set_3Tm()
{
  sub_1B8DFD3AC();
  return sub_1B8DFD184();
}

void sub_1B8DB2AF0(int a1, id a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;

  if (a2)
  {
    v3 = a2;
    sub_1B8DFDEF8();
    swift_bridgeObjectRelease();
    sub_1B8DFD688();
    sub_1B8DB3310();
    sub_1B8DFE0B4();
    sub_1B8DFDBBC();
    swift_bridgeObjectRelease();
    v4 = (void *)objc_opt_self();
    sub_1B8DFDBBC();
    v5 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1108);
    sub_1B8DFDB80();
    sub_1B8DFDBBC();
    swift_bridgeObjectRelease();
    v6 = (void *)sub_1B8DFDB5C();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_logError_, v6);

  }
}

void sub_1B8DB2C40(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  sub_1B8DFD22C();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void sub_1B8DB2CB4(uint64_t a1)
{
  sub_1B8DB2CE8(a1, 0xD000000000000015, 0x80000001B8E06250);
}

uint64_t MTSUtilities.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MTSUtilities.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_1B8DB2CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  void *v18;
  uint64_t inited;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *boxed_opaque_existential_0;
  void (*v26)(uint64_t *, char *, uint64_t);
  void *v27;
  id v28;
  id v29;
  void *v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void (*v44)(uint64_t, void *, void *);
  void *v45;
  void (*v46)(int, void *);
  uint64_t v47;

  v41 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1B10);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v36 - v9;
  v11 = sub_1B8DFD688();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = MEMORY[0x1E0C80A78](v11);
  v40 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v36 - v15;
  sub_1B8DB31A0(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1B8DB31E8((uint64_t)v10);
    v17 = (void *)objc_opt_self();
    v42 = 0;
    v43 = 0xE000000000000000;
    sub_1B8DFDEF8();
    swift_bridgeObjectRelease();
    v42 = 0xD000000000000019;
    v43 = 0x80000001B8E07A80;
    sub_1B8DB31A0(a1, (uint64_t)v8);
    sub_1B8DFDB80();
    sub_1B8DFDBBC();
    swift_bridgeObjectRelease();
    v18 = (void *)sub_1B8DFDB5C();
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_logError_, v18);

  }
  else
  {
    v37 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v38 = a3;
    v37(v16, v10, v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1B18);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B8DFFCD0;
    v42 = sub_1B8DFDB68();
    v43 = v20;
    v39 = v12;
    sub_1B8DFDEC8();
    v21 = MEMORY[0x1E0DEAFA0];
    *(_QWORD *)(inited + 96) = MEMORY[0x1E0DEAFA0];
    *(_BYTE *)(inited + 72) = 1;
    v42 = sub_1B8DFDB68();
    v43 = v22;
    sub_1B8DFDEC8();
    *(_QWORD *)(inited + 168) = v21;
    *(_BYTE *)(inited + 144) = 1;
    v42 = sub_1B8DFDB68();
    v43 = v23;
    v24 = v39;
    sub_1B8DFDEC8();
    *(_QWORD *)(inited + 240) = v11;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 216));
    v26 = *(void (**)(uint64_t *, char *, uint64_t))(v24 + 16);
    v26(boxed_opaque_existential_0, v16, v11);
    sub_1B8D8C628(inited);
    v27 = (void *)sub_1B8DFDA60();
    swift_bridgeObjectRelease();
    v28 = objc_msgSend((id)objc_opt_self(), sel_optionsWithDictionary_, v27);

    v29 = objc_msgSend((id)objc_opt_self(), sel_serviceWithDefaultShellEndpoint);
    if (v29)
    {
      v30 = v29;
      v41 = sub_1B8DFDB5C();
      v31 = v40;
      v26((uint64_t *)v40, v16, v11);
      v32 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      v33 = swift_allocObject();
      v37((char *)(v33 + v32), v31, v11);
      v46 = sub_1B8DB32C4;
      v47 = v33;
      v42 = MEMORY[0x1E0C809B0];
      v43 = 1107296256;
      v44 = sub_1B8DB2C40;
      v45 = &block_descriptor_6;
      v34 = _Block_copy(&v42);
      swift_release();
      v35 = (void *)v41;
      objc_msgSend(v30, sel_openApplication_withOptions_completion_, v41, v28, v34);
      _Block_release(v34);

      (*(void (**)(char *, uint64_t))(v24 + 8))(v16, v11);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v16, v11);

    }
  }
}

uint64_t type metadata accessor for MTSUtilities()
{
  return objc_opt_self();
}

uint64_t method lookup function for MTSUtilities()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static MTSUtilities.launchAppIfPossible(_:bundleId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of static MTSUtilities.launchClockAppIfPossible(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1B8DB31A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1B10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8DB31E8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1B10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1B8DB3264()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1B8DFD688();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_1B8DB32C4(int a1, void *a2)
{
  sub_1B8DFD688();
  sub_1B8DB2AF0(a1, a2);
}

unint64_t sub_1B8DB3310()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF1E1B20;
  if (!qword_1EF1E1B20)
  {
    v1 = sub_1B8DFD688();
    result = MEMORY[0x1BCCBD0FC](MEMORY[0x1E0CB0048], v1);
    atomic_store(result, (unint64_t *)&qword_1EF1E1B20);
  }
  return result;
}

uint64_t sub_1B8DB3358(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x4B72656874616577;
  else
    v3 = 0x6C616E7265746E69;
  if (v2)
    v4 = 0xEA00000000004955;
  else
    v4 = 0xEA00000000007469;
  if ((a2 & 1) != 0)
    v5 = 0x4B72656874616577;
  else
    v5 = 0x6C616E7265746E69;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000007469;
  else
    v6 = 0xEA00000000004955;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B8DFE0D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B8DB3400(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aSkip_3[8 * a1] == *(_QWORD *)&aSkip_3[8 * a2] && qword_1B8E02888[a1] == qword_1B8E02888[a2])
    v3 = 1;
  else
    v3 = sub_1B8DFE0D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B8DB3484(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x656C67676F74;
  else
    v3 = 1852994932;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x656C67676F74;
  else
    v5 = 1852994932;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B8DFE0D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B8DB3518(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aClock_4[8 * a1] == *(_QWORD *)&aClock_4[8 * a2] && qword_1B8E028C0[a1] == qword_1B8E028C0[a2])
    v3 = 1;
  else
    v3 = sub_1B8DFE0D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B8DB359C(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aSunday_2[8 * a1] == *(_QWORD *)&aSunday_2[8 * a2]
    && *(_QWORD *)&aSaturday_2[8 * a1 + 8] == *(_QWORD *)&aSaturday_2[8 * a2 + 8])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1B8DFE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B8DB3620(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6E696E69616D6572;
  else
    v3 = 0x6E6F697461727564;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xED0000656D695467;
  if ((a2 & 1) != 0)
    v5 = 0x6E696E69616D6572;
  else
    v5 = 0x6E6F697461727564;
  if ((a2 & 1) != 0)
    v6 = 0xED0000656D695467;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B8DFE0D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B8DB36CC()
{
  sub_1B8DFDBA4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8DB372C()
{
  sub_1B8DFDBA4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8DB376C()
{
  sub_1B8DFDBA4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8DB37B8()
{
  sub_1B8DFDBA4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8DB37F8()
{
  sub_1B8DFDBA4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8DB3838()
{
  sub_1B8DFDBA4();
  return swift_bridgeObjectRelease();
}

void sub_1B8DB389C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, uint64_t);
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  int *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  id v98;
  id v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  char *v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  int *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  id v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  unsigned int v142;
  void (*v143)(char *, uint64_t, uint64_t);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;

  v132 = a1;
  v144 = a2;
  v2 = sub_1B8DFD610();
  v139 = *(_QWORD *)(v2 - 8);
  v140 = v2;
  v3 = MEMORY[0x1E0C80A78](v2);
  v138 = (char *)&v115 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v137 = (char *)&v115 - v5;
  v6 = sub_1B8DFD688();
  v135 = *(_QWORD *)(v6 - 8);
  v136 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v134 = (char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v133 = (char *)&v115 - v9;
  v10 = sub_1B8DFDB50();
  v11 = MEMORY[0x1E0C80A78](v10);
  v131 = (char *)&v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v130 = (char *)&v115 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v128 = (char *)&v115 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v124 = (char *)&v115 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v122 = (char *)&v115 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v141 = (char *)&v115 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v119 = (char *)&v115 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v126 = (char *)&v115 - v26;
  MEMORY[0x1E0C80A78](v25);
  v145 = sub_1B8DFD640();
  v27 = *(_QWORD *)(v145 - 8);
  MEMORY[0x1E0C80A78](v145);
  v29 = (char *)&v115 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v30);
  v31 = sub_1B8DFD658();
  v32 = MEMORY[0x1E0C80A78](v31);
  v129 = (char *)&v115 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x1E0C80A78](v32);
  v125 = (char *)&v115 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v123 = (char *)&v115 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v121 = (char *)&v115 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v120 = (char *)&v115 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v118 = (char *)&v115 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v117 = (char *)&v115 - v45;
  v46 = MEMORY[0x1E0C80A78](v44);
  v116 = (char *)&v115 - v47;
  MEMORY[0x1E0C80A78](v46);
  v49 = (char *)&v115 - v48;
  sub_1B8DFDAF0();
  v50 = (int *)type metadata accessor for AlarmEntity();
  v51 = v50[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1CD0);
  sub_1B8DFD79C();
  v52 = *MEMORY[0x1E0CAF9B8];
  v143 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 104);
  v53 = v145;
  v143(v29, v52, v145);
  v54 = v29;
  sub_1B8DFD664();
  v127 = MEMORY[0x1BCCBBA28](v49);
  v55 = v144;
  *(_QWORD *)(v144 + v51) = v127;
  sub_1B8DFDAF0();
  v56 = v50[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1CD8);
  sub_1B8DFD79C();
  v57 = v29;
  v58 = v52;
  v59 = v53;
  v60 = v143;
  v143(v57, v52, v59);
  v61 = v116;
  sub_1B8DFD664();
  v126 = (char *)MEMORY[0x1BCCBBA1C](v61);
  *(_QWORD *)(v55 + v56) = v126;
  sub_1B8DFDAF0();
  v62 = (char *)v50[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1CE0);
  sub_1B8DFD79C();
  v63 = v58;
  v64 = v58;
  v142 = v58;
  v65 = v145;
  v66 = v60;
  v60(v54, v63, v145);
  v67 = v117;
  sub_1B8DFD664();
  v68 = MEMORY[0x1BCCBBA40](v67);
  v117 = v62;
  v69 = v144;
  *(_QWORD *)&v62[v144] = v68;
  sub_1B8DFDAF0();
  v70 = (char *)v50[8];
  sub_1B8DFD79C();
  v66(v54, v64, v65);
  v71 = v118;
  v72 = v54;
  sub_1B8DFD664();
  v73 = MEMORY[0x1BCCBBA40](v71);
  v118 = v70;
  v74 = v69;
  *(_QWORD *)&v70[v69] = v73;
  sub_1B8DFDAF0();
  v75 = v50;
  v115 = v50;
  v141 = (char *)v50[9];
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1CE8);
  sub_1B8DFD79C();
  v77 = v142;
  v78 = v145;
  v79 = v143;
  v143(v72, v142, v145);
  v80 = v120;
  sub_1B8DFD664();
  v119 = (char *)v76;
  v81 = MEMORY[0x1BCCBBA34](v80);
  *(_QWORD *)&v141[v74] = v81;
  sub_1B8DFDAF0();
  v82 = (char *)v75[10];
  sub_1B8DFD79C();
  v79(v72, v77, v78);
  v83 = v121;
  sub_1B8DFD664();
  v84 = MEMORY[0x1BCCBBA34](v83);
  v124 = v82;
  *(_QWORD *)&v82[v74] = v84;
  sub_1B8DFDAF0();
  v85 = v115;
  v86 = (char *)v115[11];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1CF0);
  sub_1B8DFD79C();
  v87 = v72;
  v88 = v142;
  v89 = v145;
  v79(v72, v142, v145);
  v90 = v123;
  sub_1B8DFD664();
  v91 = sub_1B8D8B6BC();
  v92 = MEMORY[0x1BCCBBA04](v90, v91);
  v128 = v86;
  v93 = v144;
  *(_QWORD *)&v86[v144] = v92;
  sub_1B8DFDAF0();
  v94 = v85[12];
  sub_1B8DFD79C();
  v79(v87, v88, v89);
  v95 = v125;
  sub_1B8DFD664();
  *(_QWORD *)(v93 + v94) = MEMORY[0x1BCCBBA34](v95);
  sub_1B8DFDAF0();
  v96 = v85[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1CF8);
  sub_1B8DFD79C();
  v79(v87, v88, v145);
  v97 = v129;
  sub_1B8DFD664();
  *(_QWORD *)(v93 + v96) = MEMORY[0x1BCCBBA10](v97);
  v98 = v132;
  v99 = objc_msgSend(v132, sel_alarmID);
  sub_1B8DFD76C();

  v100 = objc_msgSend(v98, sel_displayTitle);
  v101 = sub_1B8DFDB68();
  v103 = v102;

  v146 = v101;
  v147 = v103;
  sub_1B8DFD0F4();
  v104 = objc_msgSend(v98, sel_alarmURL);
  v105 = v133;
  sub_1B8DFD67C();

  v106 = v135;
  v107 = v136;
  (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v134, v105, v136);
  sub_1B8DFD0F4();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v107);
  v108 = objc_msgSend(v98, sel_dateComponents);
  v109 = v137;
  sub_1B8DFD568();

  v110 = v98;
  v111 = v139;
  v112 = v140;
  (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v138, v109, v140);
  sub_1B8DFD0F4();
  (*(void (**)(char *, uint64_t))(v111 + 8))(v109, v112);
  v113 = (unint64_t)objc_msgSend(v110, sel_hour);
  if ((v113 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v146 = v113;
    sub_1B8DFD0F4();
    v114 = (unint64_t)objc_msgSend(v110, sel_minute);
    if ((v114 & 0x8000000000000000) == 0)
    {
      v146 = v114;
      sub_1B8DFD0F4();
      LOBYTE(v146) = objc_msgSend(v110, sel_isEnabled);
      sub_1B8DFD0F4();
      LOBYTE(v146) = objc_msgSend(v110, sel_repeats);
      sub_1B8DFD0F4();
      v146 = (uint64_t)sub_1B8DB5A90((char)objc_msgSend(v110, sel_repeatSchedule));
      sub_1B8DFD0F4();
      LOBYTE(v146) = objc_msgSend(v110, sel_allowsSnooze);
      sub_1B8DFD0F4();

      return;
    }
  }
  __break(1u);
}

uint64_t sub_1B8DB4500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];

  v0 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v1);
  v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1B8DFD640();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1B8DFD658();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CAF9B8], v4);
  sub_1B8DFD664();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v3, 1, 1, v9);
  return sub_1B8DFD460();
}

uint64_t sub_1B8DB46FC(char a1)
{
  return *(_QWORD *)&aSunday_2[8 * a1];
}

uint64_t sub_1B8DB471C()
{
  uint64_t v1;

  type metadata accessor for AlarmEntity();
  sub_1B8DFD0E8();
  return v1;
}

uint64_t sub_1B8DB4758()
{
  type metadata accessor for AlarmEntity();
  return sub_1B8DFD100();
}

uint64_t sub_1B8DB4784(char *a1, char *a2)
{
  return sub_1B8DB359C(*a1, *a2);
}

unint64_t sub_1B8DB4794()
{
  unint64_t result;

  result = qword_1EF1E1B28;
  if (!qword_1EF1E1B28)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E020AC, &type metadata for AlarmEntity.RepeatDay);
    atomic_store(result, (unint64_t *)&qword_1EF1E1B28);
  }
  return result;
}

uint64_t sub_1B8DB47D8()
{
  return sub_1B8DF1198();
}

uint64_t sub_1B8DB47E4()
{
  return sub_1B8DB37F8();
}

uint64_t sub_1B8DB47EC()
{
  return sub_1B8DF1198();
}

uint64_t sub_1B8DB47F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8DBB070();
  *a1 = result;
  return result;
}

uint64_t sub_1B8DB4820@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B8DB46FC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1B8DB484C()
{
  unint64_t result;

  result = qword_1EF1E1B30;
  if (!qword_1EF1E1B30)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E021C4, &type metadata for AlarmEntity.RepeatDay);
    atomic_store(result, (unint64_t *)&qword_1EF1E1B30);
  }
  return result;
}

unint64_t sub_1B8DB4894()
{
  unint64_t result;

  result = qword_1EF1E1B38;
  if (!qword_1EF1E1B38)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E021FC, &type metadata for AlarmEntity.RepeatDay);
    atomic_store(result, (unint64_t *)&qword_1EF1E1B38);
  }
  return result;
}

unint64_t sub_1B8DB48DC()
{
  unint64_t result;

  result = qword_1EF1E1B40;
  if (!qword_1EF1E1B40)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E02114, &type metadata for AlarmEntity.RepeatDay);
    atomic_store(result, (unint64_t *)&qword_1EF1E1B40);
  }
  return result;
}

uint64_t sub_1B8DB4920()
{
  return sub_1B8D87FFC(&qword_1EF1E1B48, qword_1EF1E1278, MEMORY[0x1E0DEAF50]);
}

void sub_1B8DB494C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6F29380;
}

unint64_t sub_1B8DB4960()
{
  unint64_t result;

  result = qword_1EF1E1B50;
  if (!qword_1EF1E1B50)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E0222C, &type metadata for AlarmEntity.RepeatDay);
    atomic_store(result, (unint64_t *)&qword_1EF1E1B50);
  }
  return result;
}

unint64_t sub_1B8DB49A8()
{
  unint64_t result;

  result = qword_1EF1E1B58;
  if (!qword_1EF1E1B58)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E02254, &type metadata for AlarmEntity.RepeatDay);
    atomic_store(result, (unint64_t *)&qword_1EF1E1B58);
  }
  return result;
}

unint64_t sub_1B8DB49F0()
{
  unint64_t result;

  result = qword_1EF1E1B60;
  if (!qword_1EF1E1B60)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E022D4, &type metadata for AlarmEntity.RepeatDay);
    atomic_store(result, (unint64_t *)&qword_1EF1E1B60);
  }
  return result;
}

uint64_t sub_1B8DB4A38()
{
  sub_1B8D8B6BC();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8DB4A78()
{
  sub_1B8D8B6BC();
  return sub_1B8DFD034();
}

unint64_t sub_1B8DB4AB4()
{
  unint64_t result;

  result = qword_1EF1E1B68;
  if (!qword_1EF1E1B68)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E02314, &type metadata for AlarmEntity.RepeatDay);
    atomic_store(result, (unint64_t *)&qword_1EF1E1B68);
  }
  return result;
}

unint64_t sub_1B8DB4AFC()
{
  unint64_t result;

  result = qword_1EF1E1B70;
  if (!qword_1EF1E1B70)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E0218C, &type metadata for AlarmEntity.RepeatDay);
    atomic_store(result, (unint64_t *)&qword_1EF1E1B70);
  }
  return result;
}

unint64_t sub_1B8DB4B44()
{
  unint64_t result;

  result = qword_1EF1E1B78;
  if (!qword_1EF1E1B78)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E020D4, &type metadata for AlarmEntity.RepeatDay);
    atomic_store(result, (unint64_t *)&qword_1EF1E1B78);
  }
  return result;
}

uint64_t sub_1B8DB4B8C()
{
  sub_1B8DB49F0();
  return sub_1B8DFD43C();
}

uint64_t sub_1B8DB4BC4()
{
  return sub_1B8DA760C(&qword_1EF1E1B80, (uint64_t (*)(uint64_t))type metadata accessor for AlarmEntity, (uint64_t)&unk_1B8E023BC);
}

uint64_t type metadata accessor for AlarmEntity()
{
  uint64_t result;

  result = qword_1EF1E1C78;
  if (!qword_1EF1E1C78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B8DB4C2C()
{
  return sub_1B8DA760C(&qword_1EF1E1B88, (uint64_t (*)(uint64_t))type metadata accessor for AlarmEntity, (uint64_t)&unk_1B8E023F4);
}

uint64_t sub_1B8DB4C58()
{
  return sub_1B8DA760C(&qword_1EF1E1B90, (uint64_t (*)(uint64_t))type metadata accessor for AlarmEntity, (uint64_t)&unk_1B8E02424);
}

unint64_t sub_1B8DB4C88()
{
  unint64_t result;

  result = qword_1EF1E1B98;
  if (!qword_1EF1E1B98)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E025AC, &type metadata for AlarmsQuery);
    atomic_store(result, (unint64_t *)&qword_1EF1E1B98);
  }
  return result;
}

uint64_t sub_1B8DB4CCC()
{
  return MEMORY[0x1E0C91C48];
}

uint64_t sub_1B8DB4CD8()
{
  uint64_t v1;

  type metadata accessor for AlarmEntity();
  sub_1B8DFD0E8();
  return v1;
}

uint64_t sub_1B8DB4D14()
{
  type metadata accessor for AlarmEntity();
  return sub_1B8DFD100();
}

uint64_t sub_1B8DB4D40()
{
  uint64_t v1;

  type metadata accessor for AlarmEntity();
  sub_1B8DFD0E8();
  return v1;
}

uint64_t sub_1B8DB4D7C()
{
  type metadata accessor for AlarmEntity();
  return sub_1B8DFD100();
}

uint64_t sub_1B8DB4DA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;

  v27 = a1;
  v1 = sub_1B8DFDAE4();
  v24 = *(_QWORD *)(v1 - 8);
  v25 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFDB38();
  MEMORY[0x1E0C80A78](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v5);
  v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B8DFD640();
  v8 = *(_QWORD *)(v7 - 8);
  v21 = v7;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v11);
  v12 = sub_1B8DFDB50();
  v13 = MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  v14 = sub_1B8DFD658();
  v22 = *(_QWORD *)(v14 - 8);
  v23 = v14;
  MEMORY[0x1E0C80A78](v14);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v15 = *MEMORY[0x1E0CAF9B8];
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v16(v10, v15, v7);
  sub_1B8DFD664();
  sub_1B8DFDB2C();
  sub_1B8DFDB20();
  v17 = v24;
  v18 = v25;
  (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v3, *MEMORY[0x1E0CB1870], v25);
  sub_1B8DFDAFC();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v18);
  sub_1B8DFDB20();
  sub_1B8DFDB44();
  sub_1B8DFD79C();
  v16(v10, v15, v21);
  v19 = v26;
  sub_1B8DFD664();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v23);
  return sub_1B8DFD460();
}

uint64_t sub_1B8DB5104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  void *v46;
  void *v47;
  id v48;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v0 = sub_1B8DFD7FC();
  v64 = *(_QWORD *)(v0 - 8);
  v65 = v0;
  MEMORY[0x1E0C80A78](v0);
  v63 = (char *)&v50 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1B8DFD808();
  v61 = *(_QWORD *)(v2 - 8);
  v62 = v2;
  MEMORY[0x1E0C80A78](v2);
  v60 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD7D8();
  v66 = *(_QWORD *)(v4 - 8);
  v67 = v4;
  MEMORY[0x1E0C80A78](v4);
  v57 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B8DFD610();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v50 - v11;
  v13 = sub_1B8DFD7B4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1B8DFD85C();
  v58 = *(_QWORD *)(v17 - 8);
  v59 = v17;
  MEMORY[0x1E0C80A78](v17);
  v53 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v19);
  v54 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1B8DFD748();
  v55 = *(_QWORD *)(v21 - 8);
  v56 = v21;
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v50 = (char *)&v50 - v25;
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0CB0EF8], v13);
  sub_1B8DFD7C0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  type metadata accessor for AlarmEntity();
  sub_1B8DFD0E8();
  v26 = sub_1B8DFD58C();
  LOBYTE(v16) = v27;
  v28 = *(void (**)(char *, uint64_t))(v7 + 8);
  v28(v12, v6);
  if ((v16 & 1) != 0)
    v29 = 0;
  else
    v29 = v26;
  v52 = v29;
  sub_1B8DFD0E8();
  sub_1B8DFD5C8();
  v28(v10, v6);
  v51 = v24;
  sub_1B8DFD694();
  v30 = v57;
  (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v57, *MEMORY[0x1E0CB0F90], v67);
  v32 = v60;
  v31 = v61;
  v33 = v62;
  (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v60, *MEMORY[0x1E0CB1010], v62);
  v35 = v63;
  v34 = v64;
  v36 = v65;
  (*(void (**)(char *, _QWORD, uint64_t))(v64 + 104))(v63, *MEMORY[0x1E0CB0FD8], v65);
  v37 = (uint64_t)v54;
  v38 = v30;
  v39 = v53;
  sub_1B8DFD82C();
  v40 = *(void (**)(char *, uint64_t))(v34 + 8);
  v42 = v55;
  v41 = v56;
  v40(v35, v36);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v38, v67);
  v43 = *(void (**)(char *, uint64_t))(v42 + 8);
  v43(v51, v41);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v39, v59);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v37, 1, v41) == 1)
  {
    sub_1B8D9D154(v37, (uint64_t *)&unk_1ED36F800);
    return 0;
  }
  else
  {
    v45 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v50, v37, v41);
    v46 = (void *)objc_opt_self();
    v47 = (void *)sub_1B8DFD6D0();
    v48 = objc_msgSend(v46, sel_localizedStringFromDate_dateStyle_timeStyle_, v47, 0, 1);

    v44 = sub_1B8DFDB68();
    v43(v45, v41);
  }
  return v44;
}

uint64_t sub_1B8DB55BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v8;

  v0 = sub_1B8DFDB50();
  v1 = MEMORY[0x1E0C80A78](v0);
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1B8DFD640();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for AlarmEntity();
  sub_1B8DFD0E8();
  sub_1B8DFDAF0();
  *v6 = type metadata accessor for MTAppIntentsManager();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0CAF9C8], v3);
  sub_1B8DFD79C();
  return sub_1B8DFD664();
}

uint64_t sub_1B8DB57B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD v17[2];
  char *v18;
  uint64_t v19;

  v19 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1218);
  MEMORY[0x1E0C80A78](v1);
  v18 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B8DFD658();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v17[1] = (char *)v17 - v11;
  v12 = sub_1B8DFDB38();
  v13 = MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  sub_1B8DFDB2C();
  sub_1B8DFDB20();
  sub_1B8DB5104();
  sub_1B8DFDB08();
  swift_bridgeObjectRelease();
  sub_1B8DFDB20();
  sub_1B8DFD64C();
  sub_1B8DFDB2C();
  sub_1B8DFDB20();
  type metadata accessor for AlarmEntity();
  sub_1B8DFD0E8();
  sub_1B8DFDB08();
  swift_bridgeObjectRelease();
  sub_1B8DFDB20();
  sub_1B8DB55BC();
  sub_1B8DFDB14();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  sub_1B8DFDB20();
  sub_1B8DFD64C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  v14 = v18;
  sub_1B8DFD358();
  v15 = sub_1B8DFD364();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
  return sub_1B8DFD370();
}

void *sub_1B8DB5A90(char a1)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  if ((~a1 & 0x7F) == 0)
    return &unk_1E6F29380;
  v6 = MEMORY[0x1E0DEE9E8];
  if ((~a1 & 0x1F) == 0)
  {
    sub_1B8DB8450(&v5, 1);
    sub_1B8DB8450(&v5, 2);
    sub_1B8DB8450(&v5, 3);
    sub_1B8DB8450(&v5, 4);
    sub_1B8DB8450(&v5, 5);
  }
  if ((~a1 & 0x60) != 0)
  {
    if ((a1 & 1) == 0)
      goto LABEL_7;
  }
  else
  {
    sub_1B8DB8450(&v5, 6);
    sub_1B8DB8450(&v5, 0);
    if ((a1 & 1) == 0)
    {
LABEL_7:
      if ((a1 & 2) == 0)
        goto LABEL_8;
      goto LABEL_18;
    }
  }
  sub_1B8DB8450(&v5, 1);
  if ((a1 & 2) == 0)
  {
LABEL_8:
    if ((a1 & 4) == 0)
      goto LABEL_9;
    goto LABEL_19;
  }
LABEL_18:
  sub_1B8DB8450(&v5, 2);
  if ((a1 & 4) == 0)
  {
LABEL_9:
    if ((a1 & 8) == 0)
      goto LABEL_10;
    goto LABEL_20;
  }
LABEL_19:
  sub_1B8DB8450(&v5, 3);
  if ((a1 & 8) == 0)
  {
LABEL_10:
    if ((a1 & 0x10) == 0)
      goto LABEL_11;
    goto LABEL_21;
  }
LABEL_20:
  sub_1B8DB8450(&v5, 4);
  if ((a1 & 0x10) == 0)
  {
LABEL_11:
    if ((a1 & 0x20) == 0)
      goto LABEL_12;
LABEL_22:
    sub_1B8DB8450(&v5, 6);
    if ((a1 & 0x40) == 0)
      goto LABEL_14;
    goto LABEL_13;
  }
LABEL_21:
  sub_1B8DB8450(&v5, 5);
  if ((a1 & 0x20) != 0)
    goto LABEL_22;
LABEL_12:
  if ((a1 & 0x40) != 0)
LABEL_13:
    sub_1B8DB8450(&v5, 0);
LABEL_14:
  v3 = sub_1B8DFD3AC();
  v4 = sub_1B8DA661C(v3);
  swift_bridgeObjectRelease_n();
  return (void *)v4;
}

uint64_t sub_1B8DB5C4C()
{
  return sub_1B8DA760C(&qword_1EF1E1BA0, (uint64_t (*)(uint64_t))type metadata accessor for AlarmEntity, (uint64_t)&unk_1B8E0245C);
}

uint64_t sub_1B8DB5C78()
{
  return sub_1B8DA760C(&qword_1EF1E1BA8, (uint64_t (*)(uint64_t))type metadata accessor for AlarmEntity, (uint64_t)&unk_1B8E02484);
}

uint64_t sub_1B8DB5CA4()
{
  return sub_1B8DA760C((unint64_t *)&qword_1EF1E11E0, (uint64_t (*)(uint64_t))type metadata accessor for AlarmEntity, (uint64_t)&unk_1B8E024AC);
}

uint64_t sub_1B8DB5CD0()
{
  return sub_1B8DA760C(&qword_1EF1E1BB0, (uint64_t (*)(uint64_t))type metadata accessor for AlarmEntity, (uint64_t)&unk_1B8E02504);
}

uint64_t sub_1B8DB5CFC()
{
  return sub_1B8DA760C((unint64_t *)&qword_1EF1E3F80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
}

uint64_t sub_1B8DB5D28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1B8DFD784();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_1B8DB5D64()
{
  return sub_1B8D87FFC(&qword_1EF1E1BB8, &qword_1EF1E1BC0, MEMORY[0x1E0C91998]);
}

uint64_t sub_1B8DB5D90()
{
  sub_1B8DA760C(&qword_1EF1E10F0, (uint64_t (*)(uint64_t))type metadata accessor for AlarmEntity, (uint64_t)&unk_1B8E0233C);
  return sub_1B8DFD040();
}

uint64_t sub_1B8DB5DE0()
{
  return sub_1B8DA760C((unint64_t *)&unk_1EF1E1BC8, (uint64_t (*)(uint64_t))type metadata accessor for AlarmEntity, (uint64_t)&unk_1B8E02534);
}

uint64_t sub_1B8DB5E10()
{
  sub_1B8DA760C(&qword_1EF1E1BB0, (uint64_t (*)(uint64_t))type metadata accessor for AlarmEntity, (uint64_t)&unk_1B8E02504);
  return sub_1B8DFD4A8();
}

void sub_1B8DB5E60()
{
  __asm { BR              X10 }
}

uint64_t sub_1B8DB5E94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD v6[12];

  swift_getAtPartialKeyPath();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_7;
  sub_1B8DBBAAC(v0 + 16, (uint64_t)v6);
  if (!v6[3])
  {
    swift_bridgeObjectRelease();
    sub_1B8D9D154((uint64_t)v6, (uint64_t *)&unk_1ED36F1C0);
LABEL_7:
    v4 = 0;
    return v4 & 1;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v1 = sub_1B8DFDB8C();
  v3 = v2;
  swift_bridgeObjectRelease();
  v6[0] = v1;
  v6[1] = v3;
  sub_1B8DFDB8C();
  swift_bridgeObjectRelease();
  sub_1B8DBBAF4();
  v4 = sub_1B8DFDE50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1B8DB6208()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1D70);
  __swift_allocate_value_buffer(v0, qword_1EF1EC3B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF1EC3B8);
  type metadata accessor for AlarmEntity();
  sub_1B8DA760C(&qword_1EF1E10F0, (uint64_t (*)(uint64_t))type metadata accessor for AlarmEntity, (uint64_t)&unk_1B8E0233C);
  return sub_1B8DFD388();
}

uint64_t sub_1B8DB629C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1D78);
  swift_getKeyPath();
  sub_1B8DFD34C();
  sub_1B8DA760C(&qword_1EF1E10F0, (uint64_t (*)(uint64_t))type metadata accessor for AlarmEntity, (uint64_t)&unk_1B8E0233C);
  v0 = sub_1B8DFD22C();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1D80);
  swift_getKeyPath();
  sub_1B8DFD22C();
  sub_1B8DFD34C();
  v1 = sub_1B8DFD22C();
  swift_release();
  swift_getKeyPath();
  sub_1B8DFD22C();
  sub_1B8DFD34C();
  v2 = sub_1B8DFD22C();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36EC28);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B8E02950;
  *(_QWORD *)(v3 + 32) = v0;
  *(_QWORD *)(v3 + 40) = v1;
  *(_QWORD *)(v3 + 48) = v2;
  sub_1B8DFDC7C();
  type metadata accessor for AlarmEntity();
  sub_1B8DFD22C();
  v4 = sub_1B8DFD490();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_1B8DB645C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void (*v11)(unint64_t, char *, uint64_t);
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1DB8);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v15 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1DC0);
  swift_allocObject();
  sub_1B8DFD2F8();
  type metadata accessor for AlarmEntity();
  sub_1B8DA760C(&qword_1EF1E10F0, (uint64_t (*)(uint64_t))type metadata accessor for AlarmEntity, (uint64_t)&unk_1B8E0233C);
  sub_1B8DFD4C0();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1DC8);
  swift_allocObject();
  sub_1B8DFD328();
  sub_1B8DFD4C0();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1DD0);
  v7 = *(_QWORD *)(v1 + 72);
  v8 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B8E00210;
  v10 = v9 + v8;
  v11 = *(void (**)(unint64_t, char *, uint64_t))(v1 + 16);
  v11(v10, v6, v0);
  v11(v10 + v7, v4, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1CD0);
  sub_1B8DA98C0();
  v12 = sub_1B8DFD4B4();
  swift_bridgeObjectRelease();
  v13 = *(void (**)(char *, uint64_t))(v1 + 8);
  v13(v4, v0);
  v13(v6, v0);
  return v12;
}

uint64_t sub_1B8DB6694@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;

  v4 = *a1;
  v3 = a1[1];
  KeyPath = swift_getKeyPath();
  *(_QWORD *)(a2 + 40) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)a2 = KeyPath;
  *(_BYTE *)(a2 + 8) = 4;
  return sub_1B8DFD3AC();
}

uint64_t sub_1B8DB66E8()
{
  type metadata accessor for AlarmEntity();
  sub_1B8DFD3AC();
  return sub_1B8DFD0F4();
}

uint64_t sub_1B8DB673C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t KeyPath;

  KeyPath = swift_getKeyPath();
  *(_QWORD *)(a3 + 40) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(a3 + 16) = a1;
  *(_QWORD *)(a3 + 24) = a2;
  *(_QWORD *)a3 = KeyPath;
  *(_BYTE *)(a3 + 8) = 0;
  return sub_1B8DFD3AC();
}

uint64_t sub_1B8DB6790()
{
  return sub_1B8DB67F8();
}

uint64_t sub_1B8DB67AC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B8DB6B14(a1, 1, a2);
}

uint64_t sub_1B8DB67BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B8DB6B14(a1, 2, a2);
}

uint64_t sub_1B8DB67CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B8DB6B14(a1, 3, a2);
}

uint64_t sub_1B8DB67DC()
{
  return sub_1B8DB67F8();
}

uint64_t sub_1B8DB67F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(unint64_t, char *, uint64_t);
  char *v14;
  unint64_t v15;
  char *v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1D88);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v23 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x1E0C80A78](v2);
  v24 = (char *)&v22 - v5;
  MEMORY[0x1E0C80A78](v4);
  v25 = (char *)&v22 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1D90);
  swift_allocObject();
  sub_1B8DFD334();
  type metadata accessor for AlarmEntity();
  sub_1B8DA760C(&qword_1EF1E10F0, (uint64_t (*)(uint64_t))type metadata accessor for AlarmEntity, (uint64_t)&unk_1B8E0233C);
  sub_1B8DFD4C0();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1D98);
  swift_allocObject();
  sub_1B8DFD394();
  sub_1B8DFD4C0();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1DA0);
  swift_allocObject();
  sub_1B8DFD2F8();
  sub_1B8DFD4C0();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1DA8);
  v7 = v1;
  v8 = *(_QWORD *)(v1 + 72);
  v9 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v10 = 2 * v8;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1B8DFFCD0;
  v12 = v11 + v9;
  v13 = *(void (**)(unint64_t, char *, uint64_t))(v1 + 16);
  v14 = v25;
  v13(v12, v25, v0);
  v15 = v12 + v8;
  v16 = v24;
  v13(v15, v24, v0);
  v17 = v12 + v10;
  v18 = v23;
  v13(v17, v23, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1CE0);
  sub_1B8DBBBF8();
  v19 = sub_1B8DFD4B4();
  swift_bridgeObjectRelease();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v18, v0);
  v20(v16, v0);
  v20(v14, v0);
  return v19;
}

uint64_t sub_1B8DB6AE4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B8DB6B14(a1, 1, a2);
}

uint64_t sub_1B8DB6AF4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B8DB6B14(a1, 2, a2);
}

uint64_t sub_1B8DB6B04@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B8DB6B14(a1, 3, a2);
}

uint64_t sub_1B8DB6B14@<X0>(uint64_t *a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t result;

  v5 = *a1;
  result = swift_getKeyPath();
  *(_QWORD *)(a3 + 40) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(a3 + 16) = v5;
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = a2;
  return result;
}

uint64_t sub_1B8DB6B60()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1D30);
  sub_1B8DFD160();
  type metadata accessor for AlarmEntity();
  sub_1B8DFD0E8();
  sub_1B8DFD0E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1B8DB6C74(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2)
{
  unint64_t *v2;
  unint64_t v5;
  uint64_t result;

  type metadata accessor for AlarmEntity();
  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1B8DF5F50(v5);
  result = sub_1B8DB8EBC(a1, a2);
  *v2 = v5;
  return result;
}

uint64_t sub_1B8DB6D10()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1D30);
  sub_1B8DFD160();
  type metadata accessor for AlarmEntity();
  sub_1B8DFD0E8();
  sub_1B8DFD0E8();
  return 0;
}

uint64_t sub_1B8DB6DCC(uint64_t result, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(a2 + 16);
    if ((uint64_t)v3 >= result)
      v4 = result;
    else
      v4 = *(_QWORD *)(a2 + 16);
    if (result)
      v5 = v4;
    else
      v5 = 0;
    if (v3 >= v5)
    {
      type metadata accessor for AlarmEntity();
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1B8DB6E3C()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1D48);
  __swift_allocate_value_buffer(v0, qword_1EF1EC3D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF1EC3D0);
  type metadata accessor for AlarmEntity();
  sub_1B8DA760C(&qword_1EF1E10F0, (uint64_t (*)(uint64_t))type metadata accessor for AlarmEntity, (uint64_t)&unk_1B8E0233C);
  return sub_1B8DFD454();
}

uint64_t sub_1B8DB6EC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  uint64_t v17;
  uint64_t v19;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1D50);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v19 - v6;
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  swift_getKeyPath();
  sub_1B8DA760C(&qword_1EF1E10F0, (uint64_t (*)(uint64_t))type metadata accessor for AlarmEntity, (uint64_t)&unk_1B8E0233C);
  v10 = MEMORY[0x1E0C90BD8];
  sub_1B8D87FFC(&qword_1EF1E1D58, &qword_1EF1E1CD0, MEMORY[0x1E0C90BD8]);
  sub_1B8DFD4CC();
  type metadata accessor for AlarmEntity();
  sub_1B8DFD4FC();
  v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v7, v0);
  swift_getKeyPath();
  sub_1B8D87FFC(&qword_1EF1E1D60, &qword_1EF1E1CE0, v10);
  sub_1B8DFD4CC();
  sub_1B8DFD4FC();
  v11(v4, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1D68);
  v12 = *(_QWORD *)(v1 + 72);
  v13 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1B8E00210;
  v15 = v14 + v13;
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v1 + 16);
  v16(v15, v9, v0);
  v16(v15 + v12, v7, v0);
  v17 = sub_1B8DFD4F0();
  swift_bridgeObjectRelease();
  v11(v7, v0);
  v11(v9, v0);
  return v17;
}

uint64_t sub_1B8DB7100(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (__cdecl *v4)();

  *(_QWORD *)(v1 + 16) = a1;
  v4 = (uint64_t (__cdecl *)())((char *)&dword_1EF1E1D10 + dword_1EF1E1D10);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1B8DB715C;
  return v4();
}

uint64_t sub_1B8DB715C(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)v2 + 32) = a1;
  swift_task_dealloc();
  if (v1)

  return swift_task_switch();
}

uint64_t sub_1B8DB71D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = type metadata accessor for AlarmEntity();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v0 + 16);
  if (v2)
  {
    sub_1B8DAEE3C(v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), *(_QWORD *)(v0 + 16));
    v6 = 0;
  }
  else
  {
    v6 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v5, v6, 1, v3);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DB7268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = type metadata accessor for AlarmEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DB72B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8DB7300(&qword_1EF1E0F00, &qword_1EF1E1D70, (uint64_t)qword_1EF1EC3B8, a1);
}

uint64_t sub_1B8DB72DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8DB7300(&qword_1EF1E0F08, &qword_1EF1E1D48, (uint64_t)qword_1EF1EC3D0, a1);
}

uint64_t sub_1B8DB7300@<X0>(_QWORD *a1@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  if (*a1 != -1)
    swift_once();
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = __swift_project_value_buffer(v7, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v8, v7);
}

uint64_t sub_1B8DB7374(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  char v10;
  char v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, char, uint64_t, uint64_t, char);

  *(_QWORD *)(v6 + 16) = a1;
  v10 = a3 & 1;
  v11 = a6 & 1;
  v14 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, char))((char *)&dword_1EF1E1D28 + dword_1EF1E1D28);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v12;
  *v12 = v6;
  v12[1] = sub_1B8D8A2CC;
  return v14(a2, v10, a4, a5, v11);
}

unint64_t sub_1B8DB740C()
{
  unint64_t result;

  result = qword_1EF1E1BD8;
  if (!qword_1EF1E1BD8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E02604, &type metadata for AlarmsQuery);
    atomic_store(result, (unint64_t *)&qword_1EF1E1BD8);
  }
  return result;
}

unint64_t sub_1B8DB7454()
{
  unint64_t result;

  result = qword_1EF1E1BE0[0];
  if (!qword_1EF1E1BE0[0])
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E02664, &type metadata for AlarmsQuery);
    atomic_store(result, qword_1EF1E1BE0);
  }
  return result;
}

uint64_t sub_1B8DB7498()
{
  return sub_1B8DA760C(&qword_1EF1E10F0, (uint64_t (*)(uint64_t))type metadata accessor for AlarmEntity, (uint64_t)&unk_1B8E0233C);
}

uint64_t sub_1B8DB74C4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (__cdecl *v4)();

  *(_QWORD *)(v1 + 16) = a1;
  v4 = (uint64_t (__cdecl *)())((char *)&dword_1EF1E1D10 + dword_1EF1E1D10);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1B8DB7520;
  return v4();
}

uint64_t sub_1B8DB7520(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 32) = v1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v4 + 8))();
  *(_QWORD *)(v4 + 40) = a1;
  return swift_task_switch();
}

uint64_t sub_1B8DB75A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 16);
  sub_1B8DFD3AC();
  v3 = sub_1B8DBA2E4(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_1B8DB7608(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (__cdecl *v4)();

  *(_QWORD *)(v1 + 16) = a1;
  v4 = (uint64_t (__cdecl *)())((char *)&dword_1EF1E1D10 + dword_1EF1E1D10);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1B8DBBE7C;
  return v4();
}

unint64_t sub_1B8DB7668()
{
  unint64_t result;

  result = qword_1EF1E1BF8;
  if (!qword_1EF1E1BF8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E0268C, &type metadata for AlarmsQuery);
    atomic_store(result, (unint64_t *)&qword_1EF1E1BF8);
  }
  return result;
}

unint64_t sub_1B8DB76B0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF1E1C00;
  if (!qword_1EF1E1C00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EF1E1C08);
    v2 = sub_1B8DA760C((unint64_t *)&qword_1EF1E11E0, (uint64_t (*)(uint64_t))type metadata accessor for AlarmEntity, (uint64_t)&unk_1B8E024AC);
    result = MEMORY[0x1BCCBD0FC](MEMORY[0x1E0C91CE0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF1E1C00);
  }
  return result;
}

uint64_t sub_1B8DB772C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B8D85A48;
  v3[2] = a1;
  v6 = (uint64_t (*)(void))((char *)&dword_1EF1E1D10 + dword_1EF1E1D10);
  v4 = (_QWORD *)swift_task_alloc();
  v3[3] = v4;
  *v4 = v3;
  v4[1] = sub_1B8DB715C;
  return v6();
}

uint64_t destroy for AlarmsQuery.ParameterMapping(uint64_t a1)
{
  uint64_t result;

  result = swift_release();
  if (*(_QWORD *)(a1 + 40))
    return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  return result;
}

uint64_t initializeWithCopy for AlarmsQuery.ParameterMapping(uint64_t a1, uint64_t a2)
{
  _OWORD *v3;
  _OWORD *v4;
  uint64_t v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = (_OWORD *)(a1 + 16);
  v4 = (_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 40);
  sub_1B8DFD22C();
  if (v5)
  {
    *(_QWORD *)(a1 + 40) = v5;
    (**(void (***)(uint64_t, _OWORD *, uint64_t))(v5 - 8))(a1 + 16, v4, v5);
  }
  else
  {
    v6 = v4[1];
    *v3 = *v4;
    *(_OWORD *)(a1 + 32) = v6;
  }
  return a1;
}

uint64_t assignWithCopy for AlarmsQuery.ParameterMapping(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_1B8DFD22C();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 40);
  if (!*(_QWORD *)(a1 + 40))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 40) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v5;
    return a1;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        sub_1B8DFD22C();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          sub_1B8DFD22C();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          sub_1B8DFD22C();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AlarmsQuery.ParameterMapping(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  if (*(_QWORD *)(a1 + 40))
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for AlarmsQuery.ParameterMapping(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AlarmsQuery.ParameterMapping(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AlarmsQuery.ParameterMapping()
{
  return &type metadata for AlarmsQuery.ParameterMapping;
}

ValueMetadata *type metadata accessor for AlarmsQuery()
{
  return &type metadata for AlarmsQuery;
}

uint64_t getEnumTagSinglePayload for AlarmEntity.RepeatDay(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AlarmEntity.RepeatDay(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1B8DB7C68 + 4 * byte_1B8E0209A[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1B8DB7C9C + 4 * byte_1B8E02095[v4]))();
}

uint64_t sub_1B8DB7C9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DB7CA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8DB7CACLL);
  return result;
}

uint64_t sub_1B8DB7CB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8DB7CC0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1B8DB7CC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DB7CCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AlarmEntity.RepeatDay()
{
  return &type metadata for AlarmEntity.RepeatDay;
}

uint64_t *sub_1B8DB7CE8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1B8DFD784();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)v4 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)v4 + v8) = *(uint64_t *)((char *)a2 + v8);
    v9 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)v4 + v9) = *(uint64_t *)((char *)a2 + v9);
    v10 = a3[10];
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)v4 + v10) = *(uint64_t *)((char *)a2 + v10);
    v11 = a3[12];
    *(uint64_t *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)v4 + v11) = *(uint64_t *)((char *)a2 + v11);
    *(uint64_t *)((char *)v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    sub_1B8DFD22C();
    sub_1B8DFD22C();
    sub_1B8DFD22C();
    sub_1B8DFD22C();
    sub_1B8DFD22C();
    sub_1B8DFD22C();
    sub_1B8DFD22C();
    sub_1B8DFD22C();
  }
  sub_1B8DFD22C();
  return v4;
}

uint64_t sub_1B8DB7E18(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1B8DFD784();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1B8DB7EBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1B8DFD784();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v10 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  sub_1B8DFD22C();
  sub_1B8DFD22C();
  sub_1B8DFD22C();
  sub_1B8DFD22C();
  sub_1B8DFD22C();
  sub_1B8DFD22C();
  sub_1B8DFD22C();
  sub_1B8DFD22C();
  sub_1B8DFD22C();
  return a1;
}

uint64_t sub_1B8DB7FC4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_1B8DFD784();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  sub_1B8DFD22C();
  swift_release();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  sub_1B8DFD22C();
  swift_release();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  sub_1B8DFD22C();
  swift_release();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  sub_1B8DFD22C();
  swift_release();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  sub_1B8DFD22C();
  swift_release();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  sub_1B8DFD22C();
  swift_release();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  sub_1B8DFD22C();
  swift_release();
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  sub_1B8DFD22C();
  swift_release();
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  sub_1B8DFD22C();
  swift_release();
  return a1;
}

uint64_t sub_1B8DB8110(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1B8DFD784();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v10 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_1B8DB81BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_1B8DFD784();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_release();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_release();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_release();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_release();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_release();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_release();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_release();
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_release();
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_release();
  return a1;
}

uint64_t sub_1B8DB82C0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DB82CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1B8DFD784();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1B8DB8348()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DB8354(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1B8DFD784();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1B8DB83CC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B8DFD784();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1B8DB8450(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t *v16;
  uint64_t v18;

  v4 = *v2;
  sub_1B8DFD3AC();
  v5 = sub_1B8DF1198();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v8 = ~v6;
    v9 = 8 * (char)a2;
    v10 = *(_QWORD *)&aSunday_2[v9];
    v11 = *(_QWORD *)&aSaturday_2[v9 + 8];
    while (*(_QWORD *)&aSunday_2[8 * *(char *)(*(_QWORD *)(v4 + 48) + v7)] != v10
         || *(_QWORD *)&aSaturday_2[8 * *(char *)(*(_QWORD *)(v4 + 48) + v7) + 8] != v11)
    {
      v13 = sub_1B8DFE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) != 0)
        goto LABEL_11;
      v7 = (v7 + 1) & v8;
      if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    result = 0;
    LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v16 + 48) + v7);
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v16;
    *v16 = 0x8000000000000000;
    sub_1B8DB88D8(a2, v7, isUniquelyReferenced_nonNull_native);
    *v16 = v18;
    swift_bridgeObjectRelease();
    result = 1;
  }
  *a1 = a2;
  return result;
}

uint64_t sub_1B8DB85F8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1D00);
  v3 = sub_1B8DFDEE0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = sub_1B8DFD22C();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
      sub_1B8DFE15C();
      sub_1B8DFDBA4();
      swift_bridgeObjectRelease();
      result = sub_1B8DFE18C();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1B8DB88D8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t *v20;
  char v21;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_16;
  if ((a3 & 1) != 0)
  {
    sub_1B8DB85F8();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1B8DB8A80();
      goto LABEL_16;
    }
    sub_1B8DB8C10();
  }
  v8 = *v3;
  result = sub_1B8DF1198();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = ~v9;
    v11 = 8 * v5;
    v12 = *(_QWORD *)&aSunday_2[v11];
    v13 = *(_QWORD *)&aSaturday_2[v11 + 8];
    while (*(_QWORD *)&aSunday_2[8 * *(char *)(*(_QWORD *)(v8 + 48) + a2)] != v12
         || *(_QWORD *)&aSaturday_2[8 * *(char *)(*(_QWORD *)(v8 + 48) + a2) + 8] != v13)
    {
      v15 = sub_1B8DFE0D8();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v15 & 1) != 0)
        goto LABEL_20;
      a2 = (a2 + 1) & v10;
      if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_16;
    }
    goto LABEL_19;
  }
LABEL_16:
  v16 = *v20;
  *(_QWORD *)(*v20 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v16 + 48) + a2) = v21;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (!v18)
  {
    *(_QWORD *)(v16 + 16) = v19;
    return result;
  }
  __break(1u);
LABEL_19:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_20:
  result = sub_1B8DFE0FC();
  __break(1u);
  return result;
}

void *sub_1B8DB8A80()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1D00);
  v2 = *v0;
  v3 = sub_1B8DFDED4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1B8DB8C10()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1D00);
  v3 = sub_1B8DFDEE0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = sub_1B8DFD22C();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    sub_1B8DFE15C();
    sub_1B8DFDBA4();
    swift_bridgeObjectRelease();
    result = sub_1B8DFE18C();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1B8DB8EBC(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  BOOL v102;
  uint64_t v103;
  char v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t (*v155)(uint64_t, uint64_t);
  uint64_t v156;

  v4 = v3;
  v156 = a2;
  v155 = a1;
  v145 = type metadata accessor for AlarmEntity();
  v152 = *(_QWORD *)(v145 - 8);
  v5 = MEMORY[0x1E0C80A78](v145);
  v146 = (uint64_t)&v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v150 = (uint64_t)&v133 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v133 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v147 = (uint64_t)&v133 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v133 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v133 - v18;
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v133 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v133 - v23;
  v154 = v2;
  v25 = v2[1];
  result = sub_1B8DFE0A8();
  if (result >= v25)
  {
    if (v25 < 0)
      goto LABEL_146;
    if (v25)
      return sub_1B8DB9944(0, v25, 1, v155);
    return result;
  }
  if (v25 >= 0)
    v27 = v25;
  else
    v27 = v25 + 1;
  if (v25 <= -2)
    goto LABEL_155;
  v138 = result;
  if (v25 < 2)
  {
    v31 = MEMORY[0x1E0DEE9D8];
    v151 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80));
    if (v25 != 1)
    {
      v77 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v33 = (char *)MEMORY[0x1E0DEE9D8];
      goto LABEL_109;
    }
    v136 = v24;
    v137 = v22;
    v141 = v19;
    v142 = v16;
    v144 = v11;
    v139 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v136 = v24;
    v137 = v22;
    v141 = v19;
    v142 = v16;
    v144 = v11;
    v28 = v27 >> 1;
    v29 = sub_1B8DFDC94();
    *(_QWORD *)(v29 + 16) = v28;
    v30 = *(unsigned __int8 *)(v152 + 80);
    v139 = v29;
    v151 = v29 + ((v30 + 32) & ~v30);
  }
  v32 = 0;
  v33 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_14:
  v34 = v32;
  v35 = v32 + 1;
  v140 = v33;
  if (v32 + 1 >= v25)
  {
    v49 = v32 + 1;
    goto LABEL_57;
  }
  v149 = v25;
  v36 = v4;
  v37 = *v154;
  v38 = *(_QWORD *)(v152 + 72);
  v39 = (uint64_t)v136;
  sub_1B8DAEE3C(*v154 + v38 * v35, (uint64_t)v136);
  v143 = v37;
  v40 = (uint64_t)v137;
  sub_1B8DAEE3C(v37 + v38 * v34, (uint64_t)v137);
  v41 = v155(v39, v40);
  v4 = v36;
  if (v36)
  {
    sub_1B8D861B4(v40);
    sub_1B8D861B4(v39);
    goto LABEL_123;
  }
  v42 = v41;
  sub_1B8D861B4(v40);
  sub_1B8D861B4(v39);
  v43 = v149;
  v153 = v34 + 2;
  if (v34 + 2 >= v149)
    goto LABEL_21;
  v135 = v34;
  v148 = v38 * v35;
  v44 = v143;
  v45 = v38 * (v34 + 2);
  do
  {
    v46 = (uint64_t)v141;
    sub_1B8DAEE3C(v44 + v45, (uint64_t)v141);
    v47 = (uint64_t)v142;
    sub_1B8DAEE3C(v44 + v148, (uint64_t)v142);
    v48 = v155(v46, v47);
    sub_1B8D861B4(v47);
    sub_1B8D861B4(v46);
    if (((v42 ^ v48) & 1) != 0)
    {
      v33 = v140;
      v34 = v135;
      v43 = v149;
      if ((v42 & 1) != 0)
        goto LABEL_22;
LABEL_56:
      v49 = v153;
      if (v153 < v43)
        goto LABEL_37;
LABEL_57:
      if (v49 < v34)
        goto LABEL_145;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v153 = v49;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v33 = sub_1B8DBA0CC(0, *((_QWORD *)v33 + 2) + 1, 1, v33);
      v76 = *((_QWORD *)v33 + 2);
      v75 = *((_QWORD *)v33 + 3);
      v77 = v76 + 1;
      if (v76 >= v75 >> 1)
        v33 = sub_1B8DBA0CC((char *)(v75 > 1), v76 + 1, 1, v33);
      *((_QWORD *)v33 + 2) = v77;
      v78 = v33 + 32;
      v79 = &v33[16 * v76 + 32];
      v80 = v153;
      *(_QWORD *)v79 = v34;
      *((_QWORD *)v79 + 1) = v80;
      if (v76)
      {
        while (1)
        {
          v81 = v77 - 1;
          if (v77 >= 4)
          {
            v86 = &v78[16 * v77];
            v87 = *((_QWORD *)v86 - 8);
            v88 = *((_QWORD *)v86 - 7);
            v92 = __OFSUB__(v88, v87);
            v89 = v88 - v87;
            if (v92)
              goto LABEL_130;
            v91 = *((_QWORD *)v86 - 6);
            v90 = *((_QWORD *)v86 - 5);
            v92 = __OFSUB__(v90, v91);
            v84 = v90 - v91;
            v85 = v92;
            if (v92)
              goto LABEL_131;
            v93 = v77 - 2;
            v94 = &v78[16 * v77 - 32];
            v96 = *(_QWORD *)v94;
            v95 = *((_QWORD *)v94 + 1);
            v92 = __OFSUB__(v95, v96);
            v97 = v95 - v96;
            if (v92)
              goto LABEL_133;
            v92 = __OFADD__(v84, v97);
            v98 = v84 + v97;
            if (v92)
              goto LABEL_136;
            if (v98 >= v89)
            {
              v116 = &v78[16 * v81];
              v118 = *(_QWORD *)v116;
              v117 = *((_QWORD *)v116 + 1);
              v92 = __OFSUB__(v117, v118);
              v119 = v117 - v118;
              if (v92)
                goto LABEL_140;
              v109 = v84 < v119;
              goto LABEL_94;
            }
          }
          else
          {
            if (v77 != 3)
            {
              v110 = *((_QWORD *)v33 + 4);
              v111 = *((_QWORD *)v33 + 5);
              v92 = __OFSUB__(v111, v110);
              v103 = v111 - v110;
              v104 = v92;
              goto LABEL_88;
            }
            v83 = *((_QWORD *)v33 + 4);
            v82 = *((_QWORD *)v33 + 5);
            v92 = __OFSUB__(v82, v83);
            v84 = v82 - v83;
            v85 = v92;
          }
          if ((v85 & 1) != 0)
            goto LABEL_132;
          v93 = v77 - 2;
          v99 = &v78[16 * v77 - 32];
          v101 = *(_QWORD *)v99;
          v100 = *((_QWORD *)v99 + 1);
          v102 = __OFSUB__(v100, v101);
          v103 = v100 - v101;
          v104 = v102;
          if (v102)
            goto LABEL_135;
          v105 = &v78[16 * v81];
          v107 = *(_QWORD *)v105;
          v106 = *((_QWORD *)v105 + 1);
          v92 = __OFSUB__(v106, v107);
          v108 = v106 - v107;
          if (v92)
            goto LABEL_138;
          if (__OFADD__(v103, v108))
            goto LABEL_139;
          if (v103 + v108 >= v84)
          {
            v109 = v84 < v108;
LABEL_94:
            if (v109)
              v81 = v93;
            goto LABEL_96;
          }
LABEL_88:
          if ((v104 & 1) != 0)
            goto LABEL_134;
          v112 = &v78[16 * v81];
          v114 = *(_QWORD *)v112;
          v113 = *((_QWORD *)v112 + 1);
          v92 = __OFSUB__(v113, v114);
          v115 = v113 - v114;
          if (v92)
            goto LABEL_137;
          if (v115 < v103)
            goto LABEL_105;
LABEL_96:
          v120 = v81 - 1;
          if (v81 - 1 >= v77)
          {
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
            goto LABEL_149;
          }
          if (!*v154)
            goto LABEL_151;
          v121 = v33;
          v122 = &v78[16 * v120];
          v123 = *(_QWORD *)v122;
          v124 = &v78[16 * v81];
          v125 = *((_QWORD *)v124 + 1);
          sub_1B8DB9B80(*v154 + *(_QWORD *)(v152 + 72) * *(_QWORD *)v122, *v154 + *(_QWORD *)(v152 + 72) * *(_QWORD *)v124, *v154 + *(_QWORD *)(v152 + 72) * v125, v151, (uint64_t (*)(char *, char *))v155, v156);
          if (v4)
            goto LABEL_123;
          if (v125 < v123)
            goto LABEL_127;
          if (v81 > *((_QWORD *)v121 + 2))
            goto LABEL_128;
          *(_QWORD *)v122 = v123;
          *(_QWORD *)&v78[16 * v120 + 8] = v125;
          v126 = *((_QWORD *)v121 + 2);
          if (v81 >= v126)
            goto LABEL_129;
          v33 = v121;
          v77 = v126 - 1;
          memmove(&v78[16 * v81], v124 + 16, 16 * (v126 - 1 - v81));
          *((_QWORD *)v121 + 2) = v126 - 1;
          if (v126 <= 2)
            goto LABEL_105;
        }
      }
      v77 = 1;
LABEL_105:
      v25 = v154[1];
      v32 = v153;
      if (v153 >= v25)
      {
        v31 = v139;
LABEL_109:
        v139 = v31;
        if (v77 >= 2)
        {
          v127 = *v154;
          do
          {
            v128 = v77 - 2;
            if (v77 < 2)
              goto LABEL_141;
            if (!v127)
              goto LABEL_154;
            v129 = *(_QWORD *)&v33[16 * v128 + 32];
            v130 = *(_QWORD *)&v33[16 * v77 + 24];
            sub_1B8DB9B80(v127 + *(_QWORD *)(v152 + 72) * v129, v127 + *(_QWORD *)(v152 + 72) * *(_QWORD *)&v33[16 * v77 + 16], v127 + *(_QWORD *)(v152 + 72) * v130, v151, (uint64_t (*)(char *, char *))v155, v156);
            if (v4)
              break;
            if (v130 < v129)
              goto LABEL_142;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v33 = sub_1B8DBA2D0((uint64_t)v33);
            if (v128 >= *((_QWORD *)v33 + 2))
              goto LABEL_143;
            v131 = &v33[16 * v128 + 32];
            *(_QWORD *)v131 = v129;
            *((_QWORD *)v131 + 1) = v130;
            v132 = *((_QWORD *)v33 + 2);
            if (v77 > v132)
              goto LABEL_144;
            memmove(&v33[16 * v77 + 16], &v33[16 * v77 + 32], 16 * (v132 - v77));
            *((_QWORD *)v33 + 2) = v132 - 1;
            v77 = v132 - 1;
          }
          while (v132 > 2);
        }
LABEL_123:
        swift_bridgeObjectRelease();
        goto LABEL_124;
      }
      goto LABEL_14;
    }
    v44 += v38;
    ++v153;
    v43 = v149;
  }
  while (v149 != v153);
  v153 = v149;
  v33 = v140;
  v34 = v135;
LABEL_21:
  if ((v42 & 1) == 0)
    goto LABEL_56;
LABEL_22:
  v49 = v153;
  if (v153 < v34)
    goto LABEL_150;
  if (v34 < v153)
  {
    v50 = 0;
    v51 = v38 * (v153 - 1);
    v52 = v153 * v38;
    v53 = v34;
    v135 = v34;
    v54 = v34 * v38;
    do
    {
      if (v53 != v49 + v50 - 1)
      {
        v56 = v143;
        if (!v143)
          goto LABEL_153;
        v57 = v143 + v54;
        v148 = v143 + v51;
        sub_1B8DBB30C(v143 + v54, v146);
        if (v54 < v51 || v57 >= v56 + v52)
        {
          v55 = v148;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v55 = v148;
          if (v54 != v51)
            swift_arrayInitWithTakeBackToFront();
        }
        sub_1B8DBB30C(v146, v55);
        v33 = v140;
        v49 = v153;
      }
      ++v53;
      --v50;
      v51 -= v38;
      v52 -= v38;
      v54 += v38;
    }
    while (v53 < v49 + v50);
    v34 = v135;
    v43 = v149;
  }
  if (v49 >= v43)
    goto LABEL_57;
LABEL_37:
  if (__OFSUB__(v49, v34))
    goto LABEL_147;
  if (v49 - v34 >= v138)
    goto LABEL_57;
  if (__OFADD__(v34, v138))
    goto LABEL_148;
  if (v34 + v138 >= v43)
    v58 = v43;
  else
    v58 = v34 + v138;
  if (v58 < v34)
  {
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    result = sub_1B8DFDFA0();
    __break(1u);
    return result;
  }
  if (v49 == v58)
    goto LABEL_57;
  v59 = *(_QWORD *)(v152 + 72);
  v148 = 0;
  v149 = v59 * (v49 - 1);
  v143 = v59;
  v60 = v49 * v59;
  v135 = v34;
  v134 = v58;
LABEL_46:
  v61 = 0;
  v62 = v34;
  v153 = v49;
  while (1)
  {
    v64 = *v154;
    v65 = v60;
    v66 = v60 + v61 + *v154;
    v67 = v147;
    sub_1B8DAEE3C(v66, v147);
    v68 = (uint64_t)v144;
    sub_1B8DAEE3C(v149 + v61 + v64, (uint64_t)v144);
    v69 = v148;
    v70 = v155(v67, v68);
    v148 = v69;
    if (v69)
      break;
    v71 = v70;
    sub_1B8D861B4(v68);
    sub_1B8D861B4(v67);
    if ((v71 & 1) == 0)
    {
      v63 = v153;
      v60 = v65;
LABEL_53:
      v49 = v63 + 1;
      v149 += v143;
      v60 += v143;
      v34 = v135;
      if (v49 == v134)
      {
        v49 = v134;
        v33 = v140;
        v4 = v148;
        goto LABEL_57;
      }
      goto LABEL_46;
    }
    v72 = *v154;
    if (!*v154)
      goto LABEL_152;
    v60 = v65;
    v73 = v72 + v149 + v61;
    sub_1B8DBB30C(v72 + v65 + v61, v150);
    swift_arrayInitWithTakeFrontToBack();
    sub_1B8DBB30C(v150, v73);
    v61 -= v143;
    ++v62;
    v63 = v153;
    if (v153 == v62)
      goto LABEL_53;
  }
  sub_1B8D861B4(v68);
  sub_1B8D861B4(v67);
  swift_bridgeObjectRelease();
LABEL_124:
  *(_QWORD *)(v139 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8DB9944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v6 = v4;
  v36 = a4;
  v31 = type metadata accessor for AlarmEntity();
  v10 = MEMORY[0x1E0C80A78](v31);
  v38 = (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v35 = (char *)&v28 - v13;
  result = MEMORY[0x1E0C80A78](v12);
  v34 = (uint64_t)&v28 - v16;
  v30 = a2;
  if (a3 != a2)
  {
    v17 = *(_QWORD *)(v15 + 72);
    v40 = v17 * (a3 - 1);
    v32 = v17;
    v39 = v17 * a3;
    v29 = a1;
    v18 = (uint64_t)v35;
LABEL_4:
    v19 = 0;
    v33 = a3;
    while (1)
    {
      v37 = a1;
      v21 = v6;
      v22 = *v6;
      v23 = v39 + v19 + *v6;
      v24 = v34;
      sub_1B8DAEE3C(v23, v34);
      sub_1B8DAEE3C(v40 + v19 + v22, v18);
      v25 = v36(v24, v18);
      sub_1B8D861B4(v18);
      result = sub_1B8D861B4(v24);
      if (v5)
        break;
      if ((v25 & 1) == 0)
      {
        v20 = v33;
        v6 = v21;
LABEL_11:
        a3 = v20 + 1;
        v40 += v32;
        v39 += v32;
        a1 = v29;
        if (a3 != v30)
          goto LABEL_4;
        return result;
      }
      v26 = *v21;
      if (!*v21)
      {
        __break(1u);
        return result;
      }
      v27 = v26 + v40 + v19;
      sub_1B8DBB30C(v26 + v39 + v19, v38);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_1B8DBB30C(v38, v27);
      v20 = v33;
      v19 -= v32;
      a1 = v37 + 1;
      v6 = v21;
      if (v33 == v37 + 1)
        goto LABEL_11;
    }
  }
  return result;
}

uint64_t sub_1B8DB9B80(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t (*a5)(char *, char *), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t (*v34)(char *, char *);
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t (*v47)(char *, char *);
  unint64_t v48;
  BOOL v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t result;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;

  v58 = a6;
  v57 = type metadata accessor for AlarmEntity();
  v11 = MEMORY[0x1E0C80A78](v57);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v53 - v16;
  MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v53 - v19;
  v59 = *(_QWORD *)(v21 + 72);
  if (!v59)
  {
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  if (a2 - a1 == 0x8000000000000000 && v59 == -1)
    goto LABEL_67;
  v22 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v59 == -1)
    goto LABEL_68;
  v23 = (uint64_t)(a2 - a1) / v59;
  v63 = a1;
  v62 = a4;
  v24 = v22 / v59;
  if (v23 >= v22 / v59)
  {
    if ((v24 & 0x8000000000000000) == 0)
    {
      v26 = a3;
      v27 = v24 * v59;
      v28 = v18;
      if (a4 < a2 || a2 + v27 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v38 = a4 + v27;
      v61 = a4 + v27;
      v63 = a2;
      if (v27 >= 1 && a1 < a2)
      {
        v55 = a4;
        v56 = (unint64_t)v13;
        v54 = a1;
        v40 = -v59;
        while (1)
        {
          v41 = v26;
          sub_1B8DAEE3C(v38 + v40, v28);
          v42 = a2;
          v43 = a2 + v40;
          v20 = (char *)v28;
          v17 = (char *)v56;
          sub_1B8DAEE3C(a2 + v40, v56);
          v44 = v60;
          v45 = a5(v20, v17);
          if (v44)
            goto LABEL_64;
          v46 = v45;
          v60 = 0;
          v47 = a5;
          v48 = v41 + v40;
          sub_1B8D861B4((uint64_t)v17);
          sub_1B8D861B4((uint64_t)v20);
          v28 = (uint64_t)v20;
          if ((v46 & 1) != 0)
          {
            if (v41 < v42 || v48 >= v42)
            {
              swift_arrayInitWithTakeFrontToBack();
              v50 = v55;
            }
            else
            {
              v49 = v41 == v42;
              v50 = v55;
              if (!v49)
                swift_arrayInitWithTakeBackToFront();
            }
            v63 += v40;
          }
          else
          {
            v51 = v61;
            v61 += v40;
            if (v41 < v51 || v48 >= v51)
            {
              swift_arrayInitWithTakeFrontToBack();
              v43 = v42;
              v50 = v55;
            }
            else
            {
              v49 = v41 == v51;
              v50 = v55;
              if (!v49)
                swift_arrayInitWithTakeBackToFront();
              v43 = v42;
            }
          }
          v38 = v61;
          if (v61 > v50)
          {
            a2 = v43;
            v26 = v48;
            a5 = v47;
            if (v43 > v54)
              continue;
          }
          break;
        }
      }
LABEL_46:
      sub_1B8DBA1C4(&v63, &v62, (uint64_t *)&v61);
      return 1;
    }
  }
  else
  {
    v56 = a3;
    if ((v23 & 0x8000000000000000) == 0)
    {
      v25 = v23 * v59;
      if (a4 < a1 || a1 + v25 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a1)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v29 = a4 + v25;
      v61 = a4 + v25;
      v30 = v25 < 1 || a2 >= v56;
      if (!v30)
      {
        while (1)
        {
          sub_1B8DAEE3C(a2, (uint64_t)v20);
          sub_1B8DAEE3C(a4, (uint64_t)v17);
          v31 = v60;
          v32 = a5(v20, v17);
          if (v31)
            break;
          v33 = v32;
          v34 = a5;
          sub_1B8D861B4((uint64_t)v17);
          sub_1B8D861B4((uint64_t)v20);
          v35 = v63;
          if ((v33 & 1) != 0)
          {
            v36 = a2 + v59;
            if (v63 < a2 || v63 >= v36)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v63 == a2)
            {
              v35 = a2;
            }
            else
            {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          else
          {
            v37 = v62 + v59;
            if (v63 < v62 || v63 >= v37)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v63 != v62)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v62 = v37;
            v36 = a2;
          }
          v60 = 0;
          v63 = v35 + v59;
          a4 = v62;
          if (v62 < v29)
          {
            a2 = v36;
            v30 = v36 >= v56;
            a5 = v34;
            if (!v30)
              continue;
          }
          goto LABEL_46;
        }
LABEL_64:
        sub_1B8D861B4((uint64_t)v17);
        sub_1B8D861B4((uint64_t)v20);
        sub_1B8DBA1C4(&v63, &v62, (uint64_t *)&v61);
        return 1;
      }
      goto LABEL_46;
    }
  }
LABEL_69:
  result = sub_1B8DFDFF4();
  __break(1u);
  return result;
}

char *sub_1B8DBA0CC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1D38);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1B8DBA1C4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = type metadata accessor for AlarmEntity();
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_1B8DFDFF4();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_1B8DBA2D0(uint64_t a1)
{
  return sub_1B8DBA0CC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1B8DBA2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  char *v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = sub_1B8DFD784();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v35 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1D20);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AlarmEntity();
  v11 = MEMORY[0x1E0C80A78](v10);
  v29 = (uint64_t)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v37 = (uint64_t)&v27 - v14;
  result = MEMORY[0x1E0DEE9D8];
  v38 = MEMORY[0x1E0DEE9D8];
  v32 = *(_QWORD *)(a1 + 16);
  if (v32)
  {
    v16 = 0;
    v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v33 = *(_QWORD *)(v13 + 72);
    v28 = v17;
    v30 = a1 + v17;
    v31 = a2;
    do
    {
      v34 = v16;
      sub_1B8DAEE3C(v30 + v33 * v16, v37);
      v19 = *(_QWORD *)(a2 + 16);
      if (v19)
      {
        v20 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
        sub_1B8DFD3AC();
        v36 = *(_QWORD *)(v5 + 72);
        v21 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        while (1)
        {
          v21(v9, v20, v4);
          v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
          v18(v9, 0, 1, v4);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4) == 1)
            break;
          v22 = v35;
          (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v35, v9, v4);
          sub_1B8DA760C(&qword_1EF1E14F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
          v23 = sub_1B8DFDACC();
          (*(void (**)(char *, uint64_t))(v5 + 8))(v22, v4);
          if ((v23 & 1) != 0)
          {
            a2 = v31;
            swift_bridgeObjectRelease();
            sub_1B8DBB30C(v37, v29);
            v24 = v38;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B8D97F48(0, *(_QWORD *)(v24 + 16) + 1, 1);
              v24 = v38;
            }
            v26 = *(_QWORD *)(v24 + 16);
            v25 = *(_QWORD *)(v24 + 24);
            if (v26 >= v25 >> 1)
            {
              sub_1B8D97F48(v25 > 1, v26 + 1, 1);
              v24 = v38;
            }
            *(_QWORD *)(v24 + 16) = v26 + 1;
            sub_1B8DBB30C(v29, v24 + v28 + v26 * v33);
            goto LABEL_6;
          }
          v20 += v36;
          if (!--v19)
            goto LABEL_4;
        }
      }
      else
      {
        sub_1B8DFD3AC();
        v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
LABEL_4:
        v18(v9, 1, 1, v4);
      }
      a2 = v31;
      swift_bridgeObjectRelease();
      sub_1B8D861B4(v37);
LABEL_6:
      v16 = v34 + 1;
    }
    while (v34 + 1 != v32);
    return v38;
  }
  return result;
}

unint64_t sub_1B8DBA61C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  char *v53;
  char *v54;
  _BYTE *v55;
  char *v56;
  void (*v57)(char *);
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  _BYTE *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v73;
  char *v74;
  void (*v75)(char *);
  char *v76;
  uint64_t v77;
  unint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int v99;
  void (*v100)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v101;
  void (*v102)(char *);
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;

  v0 = sub_1B8DFDB50();
  v1 = MEMORY[0x1E0C80A78](v0);
  v92 = (char *)&v79 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = MEMORY[0x1E0C80A78](v1);
  v91 = (char *)&v79 - v4;
  v5 = MEMORY[0x1E0C80A78](v3);
  v88 = (char *)&v79 - v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v86 = (char *)&v79 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v84 = (char *)&v79 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v82 = (char *)&v79 - v12;
  MEMORY[0x1E0C80A78](v11);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1218);
  MEMORY[0x1E0C80A78](v13);
  v104 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v15);
  v105 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_1B8DFD640();
  v17 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v19 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_1B8DFD658();
  v23 = *(_QWORD *)(v103 - 8);
  v24 = MEMORY[0x1E0C80A78](v103);
  v90 = (char *)&v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v24);
  v87 = (char *)&v79 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v85 = (char *)&v79 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v83 = (char *)&v79 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v81 = (char *)&v79 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v80 = (char *)&v79 - v35;
  MEMORY[0x1E0C80A78](v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1DD8);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E14D8);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = v36;
  v101 = *(_QWORD *)(v37 + 72);
  v39 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  v40 = swift_allocObject();
  v89 = v40;
  *(_OWORD *)(v40 + 16) = xmmword_1B8E02960;
  *(_BYTE *)(v40 + v39) = 0;
  v96 = v40 + v39;
  sub_1B8DFDAF0();
  v41 = v38;
  v94 = v22;
  v95 = v38;
  sub_1B8DFD79C();
  v99 = *MEMORY[0x1E0CAF9B8];
  v102 = *(void (**)(char *))(v17 + 104);
  v102(v19);
  sub_1B8DFD664();
  v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  v43 = v103;
  v42(v105, 1, 1, v103);
  v100 = v42;
  v44 = sub_1B8DFD364();
  v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56);
  v97 = v44;
  v98 = v45;
  v45(v104, 1, 1, v44);
  sub_1B8DFD370();
  v46 = v101;
  v47 = v96;
  *(_BYTE *)(v96 + v101) = 1;
  sub_1B8DFDAF0();
  v79 = v47 + v46 + *(int *)(v41 + 48);
  sub_1B8DFD79C();
  v93 = v19;
  v48 = v99;
  ((void (*)(char *, _QWORD, uint64_t))v102)(v19, v99, v106);
  sub_1B8DFD664();
  v49 = v105;
  v42(v105, 1, 1, v43);
  v50 = v104;
  v51 = v44;
  v52 = v98;
  v98(v104, 1, 1, v51);
  v53 = v49;
  v54 = v50;
  sub_1B8DFD370();
  v82 = (char *)(2 * v46);
  v55 = (_BYTE *)(v47 + 2 * v46);
  *v55 = 2;
  sub_1B8DFDAF0();
  v80 = &v55[*(int *)(v95 + 48)];
  sub_1B8DFD79C();
  v56 = v93;
  v57 = v102;
  ((void (*)(char *, uint64_t, uint64_t))v102)(v93, v48, v106);
  v58 = v56;
  sub_1B8DFD664();
  v59 = v103;
  v100(v53, 1, 1, v103);
  v52(v54, 1, 1, v97);
  sub_1B8DFD370();
  v60 = v101;
  v82[v101 + v96] = 3;
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v61 = v99;
  v62 = v106;
  ((void (*)(char *, _QWORD, uint64_t))v57)(v58, v99, v106);
  sub_1B8DFD664();
  v63 = v59;
  v64 = v100;
  v100(v105, 1, 1, v63);
  v65 = v97;
  v98(v104, 1, 1, v97);
  sub_1B8DFD370();
  v66 = 4 * v60;
  v67 = v96;
  v68 = (_BYTE *)(v96 + 4 * v60);
  *v68 = 4;
  sub_1B8DFDAF0();
  v86 = &v68[*(int *)(v95 + 48)];
  sub_1B8DFD79C();
  ((void (*)(char *, uint64_t, uint64_t))v102)(v93, v61, v62);
  sub_1B8DFD664();
  v69 = v103;
  v64(v105, 1, 1, v103);
  v70 = v104;
  v71 = v65;
  v72 = v98;
  v98(v104, 1, 1, v71);
  sub_1B8DFD370();
  v73 = v67;
  *(_BYTE *)(v67 + v66 + v101) = 5;
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v74 = v93;
  v75 = v102;
  ((void (*)(char *, _QWORD, uint64_t))v102)(v93, v99, v106);
  sub_1B8DFD664();
  v76 = v105;
  v100(v105, 1, 1, v69);
  v77 = v97;
  v72(v70, 1, 1, v97);
  sub_1B8DFD370();
  *(_BYTE *)(v73 + 6 * v101) = 6;
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  ((void (*)(char *, _QWORD, uint64_t))v75)(v74, v99, v106);
  sub_1B8DFD664();
  v100(v76, 1, 1, v103);
  v72(v70, 1, 1, v77);
  sub_1B8DFD370();
  return sub_1B8D8C768(v89);
}

uint64_t sub_1B8DBB070()
{
  unint64_t v0;

  v0 = sub_1B8DFE00C();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t sub_1B8DBB0B8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(type metadata accessor for AlarmEntity() - 8);
  *(_QWORD *)(v0 + 24) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B8DBB110()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FA58]), sel_init);
  v2 = objc_msgSend(v1, sel_alarmsSync);

  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    goto LABEL_15;
  sub_1B8DBB2D0();
  v4 = sub_1B8DFDC64();

  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease();
LABEL_15:
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
  }
  sub_1B8DFD3AC();
  v5 = sub_1B8DFDFB8();
  swift_bridgeObjectRelease();
  if (!v5)
    goto LABEL_14;
LABEL_4:
  result = sub_1B8D97F48(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    v7 = 0;
    v8 = *(_QWORD *)(v0 + 16);
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x1BCCBC814](v7, v4);
      else
        v9 = *(id *)(v4 + 8 * v7 + 32);
      sub_1B8DB389C(v9, *(_QWORD *)(v0 + 24));
      v11 = *(_QWORD *)(v3 + 16);
      v10 = *(_QWORD *)(v3 + 24);
      if (v11 >= v10 >> 1)
        sub_1B8D97F48(v10 > 1, v11 + 1, 1);
      v12 = *(_QWORD *)(v0 + 24);
      ++v7;
      *(_QWORD *)(v3 + 16) = v11 + 1;
      sub_1B8DBB30C(v12, v3+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v11);
    }
    while (v5 != v7);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

unint64_t sub_1B8DBB2D0()
{
  unint64_t result;

  result = qword_1EF1E1D18;
  if (!qword_1EF1E1D18)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF1E1D18);
  }
  return result;
}

uint64_t sub_1B8DBB30C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AlarmEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8DBB350(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (__cdecl *v9)();

  *(_BYTE *)(v5 + 209) = a5;
  *(_QWORD *)(v5 + 120) = a3;
  *(_QWORD *)(v5 + 128) = a4;
  *(_BYTE *)(v5 + 208) = a2;
  *(_QWORD *)(v5 + 112) = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1D30);
  *(_QWORD *)(v5 + 136) = v6;
  *(_QWORD *)(v5 + 144) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 152) = swift_task_alloc();
  *(_QWORD *)(v5 + 160) = *(_QWORD *)(type metadata accessor for AlarmEntity() - 8);
  *(_QWORD *)(v5 + 168) = swift_task_alloc();
  *(_QWORD *)(v5 + 176) = swift_task_alloc();
  v9 = (uint64_t (__cdecl *)())((char *)&dword_1EF1E1D10 + dword_1EF1E1D10);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 184) = v7;
  *v7 = v5;
  v7[1] = sub_1B8DBB418;
  return v9();
}

uint64_t sub_1B8DBB418(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 192) = a1;
  *(_QWORD *)(v3 + 200) = v1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1B8DBB4B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)();
  uint64_t v23;
  uint64_t KeyPath;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(_QWORD, uint64_t, _QWORD);
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];

  v3 = *(_QWORD *)(v2 + 192);
  v4 = MEMORY[0x1E0DEE9D8];
  v41 = *(_QWORD *)(v3 + 16);
  v43[0] = MEMORY[0x1E0DEE9D8];
  if (v41)
  {
    v5 = 0;
    v6 = v2 + 16;
    v37 = *(_QWORD *)(v2 + 112);
    v38 = *(_QWORD *)(v2 + 160);
    v39 = v3;
    do
    {
      if (v5 >= *(_QWORD *)(v3 + 16))
      {
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      v0 = *(unsigned __int8 *)(v2 + 208);
      v7 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
      v1 = *(_QWORD *)(v38 + 72);
      sub_1B8DAEE3C(*(_QWORD *)(v2 + 192) + v7 + v1 * v5, *(_QWORD *)(v2 + 176));
      v8 = *(_QWORD *)(v37 + 16);
      if ((v0 & 1) != 0)
      {
        if (v8)
        {
          sub_1B8DFD3AC();
          v14 = v37 + 32;
          while (1)
          {
            sub_1B8DBB924(v14, v2 + 16);
            sub_1B8DB5E60();
            v0 = v15;
            sub_1B8DBB958(v2 + 16);
            if ((v0 & 1) != 0)
              break;
            v14 += 48;
            if (!--v8)
              goto LABEL_3;
          }
LABEL_12:
          swift_bridgeObjectRelease();
LABEL_13:
          sub_1B8DBB30C(*(_QWORD *)(v2 + 176), *(_QWORD *)(v2 + 168));
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            v0 = (uint64_t)v43;
            sub_1B8D97F48(0, *(_QWORD *)(v4 + 16) + 1, 1);
            v4 = v43[0];
          }
          v12 = *(_QWORD *)(v4 + 16);
          v11 = *(_QWORD *)(v4 + 24);
          if (v12 >= v11 >> 1)
          {
            v0 = (uint64_t)v43;
            sub_1B8D97F48(v11 > 1, v12 + 1, 1);
            v4 = v43[0];
          }
          v13 = *(_QWORD *)(v2 + 168);
          *(_QWORD *)(v4 + 16) = v12 + 1;
          sub_1B8DBB30C(v13, v4 + v7 + v12 * v1);
          goto LABEL_5;
        }
      }
      else
      {
        if (!v8)
          goto LABEL_13;
        sub_1B8DFD3AC();
        v9 = v37 + 32;
        while (1)
        {
          sub_1B8DBB924(v9, v2 + 64);
          sub_1B8DB5E60();
          v0 = v10;
          sub_1B8DBB958(v2 + 64);
          if ((v0 & 1) == 0)
            break;
          v9 += 48;
          if (!--v8)
            goto LABEL_12;
        }
LABEL_3:
        swift_bridgeObjectRelease();
      }
      sub_1B8D861B4(*(_QWORD *)(v2 + 176));
LABEL_5:
      ++v5;
      v3 = v39;
    }
    while (v5 != v41);
  }
  v16 = *(_QWORD *)(v2 + 120);
  swift_bridgeObjectRelease();
  v43[0] = v4;
  v17 = *(_QWORD *)(v16 + 16);
  if (!v17)
    goto LABEL_32;
  v18 = *(_QWORD *)(v2 + 144);
  v19 = *(_QWORD *)(v2 + 120);
  sub_1B8DFDE74();
  v20 = v19 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  v40 = *(void (**)(_QWORD, uint64_t, _QWORD))(v18 + 16);
  v42 = *(_QWORD *)(v18 + 72);
  sub_1B8DFD3AC();
  do
  {
    v40(*(_QWORD *)(v2 + 152), v20, *(_QWORD *)(v2 + 136));
    v23 = sub_1B8DFD154();
    KeyPath = swift_getKeyPath();
    v25 = MEMORY[0x1BCCBC760](v23, KeyPath);
    swift_release();
    swift_release();
    v26 = *(_QWORD *)(v2 + 152);
    if ((v25 & 1) != 0)
    {
      v21 = swift_task_alloc();
      *(_QWORD *)(v21 + 16) = v26;
      v22 = sub_1B8DBBA90;
LABEL_26:
      sub_1B8DB6C74((uint64_t (*)(uint64_t, uint64_t))v22, v21);
      swift_task_dealloc();
      goto LABEL_27;
    }
    v27 = sub_1B8DFD154();
    v28 = swift_getKeyPath();
    v29 = MEMORY[0x1BCCBC760](v27, v28);
    swift_release();
    swift_release();
    if ((v29 & 1) != 0)
    {
      v30 = *(_QWORD *)(v2 + 152);
      v21 = swift_task_alloc();
      *(_QWORD *)(v21 + 16) = v30;
      v22 = sub_1B8DBBA74;
      goto LABEL_26;
    }
LABEL_27:
    (*(void (**)(_QWORD, _QWORD))(v18 + 8))(*(_QWORD *)(v2 + 152), *(_QWORD *)(v2 + 136));
    v20 += v42;
    --v17;
  }
  while (v17);
  swift_bridgeObjectRelease();
  v4 = v43[0];
LABEL_32:
  if ((*(_BYTE *)(v2 + 209) & 1) != 0)
    goto LABEL_42;
  v0 = sub_1B8DB6DCC(*(_QWORD *)(v2 + 128), v4);
  v4 = v31;
  v1 = v32;
  v6 = v33;
  if ((v33 & 1) == 0)
    goto LABEL_34;
  sub_1B8DFE0E4();
  swift_unknownObjectRetain_n();
  v34 = swift_dynamicCastClass();
  if (!v34)
  {
    swift_unknownObjectRelease();
    v34 = MEMORY[0x1E0DEE9D8];
  }
  v35 = *(_QWORD *)(v34 + 16);
  swift_release();
  if (__OFSUB__(v6 >> 1, v1))
    goto LABEL_44;
  if (v35 == (v6 >> 1) - v1)
  {
    v4 = swift_dynamicCastClass();
    swift_unknownObjectRelease();
    if (!v4)
    {
      v4 = MEMORY[0x1E0DEE9D8];
      goto LABEL_41;
    }
    goto LABEL_42;
  }
LABEL_45:
  swift_unknownObjectRelease();
LABEL_34:
  v4 = sub_1B8DA6CE8(v0, v4, v1, v6);
LABEL_41:
  swift_unknownObjectRelease();
LABEL_42:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v2 + 8))(v4);
}

uint64_t sub_1B8DBB924(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AlarmsQuery.ParameterMapping(a2, a1);
  return a2;
}

uint64_t sub_1B8DBB958(uint64_t a1)
{
  destroy for AlarmsQuery.ParameterMapping(a1);
  return a1;
}

uint64_t sub_1B8DBB984@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for AlarmEntity();
  result = sub_1B8DFD0E8();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B8DBB9D8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  type metadata accessor for AlarmEntity();
  result = sub_1B8DFD0E8();
  *a1 = v3;
  return result;
}

uint64_t sub_1B8DBBA28()
{
  type metadata accessor for AlarmEntity();
  return sub_1B8DFD0F4();
}

uint64_t sub_1B8DBBA74()
{
  return sub_1B8DB6D10() & 1;
}

uint64_t sub_1B8DBBA90()
{
  return sub_1B8DB6B60() & 1;
}

uint64_t sub_1B8DBBAAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F1C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B8DBBAF4()
{
  unint64_t result;

  result = qword_1EF1E1D40;
  if (!qword_1EF1E1D40)
  {
    result = MEMORY[0x1BCCBD0FC](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EF1E1D40);
  }
  return result;
}

uint64_t sub_1B8DBBB38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for AlarmEntity();
  result = sub_1B8DFD100();
  *a1 = result;
  return result;
}

uint64_t sub_1B8DBBB78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for AlarmEntity();
  result = sub_1B8DFD100();
  *a1 = result;
  return result;
}

uint64_t sub_1B8DBBBB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for AlarmEntity();
  result = sub_1B8DFD100();
  *a1 = result;
  return result;
}

unint64_t sub_1B8DBBBF8()
{
  unint64_t result;

  result = qword_1EF1E1DB0;
  if (!qword_1EF1E1DB0)
  {
    result = MEMORY[0x1BCCBD0FC](MEMORY[0x1E0C91D20], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1EF1E1DB0);
  }
  return result;
}

uint64_t sub_1B8DBBC3C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  type metadata accessor for AlarmEntity();
  result = sub_1B8DFD0E8();
  *a1 = v3;
  return result;
}

uint64_t sub_1B8DBBC8C()
{
  type metadata accessor for AlarmEntity();
  return sub_1B8DFD0F4();
}

uint64_t getEnumTagSinglePayload for AlarmsQuery.ParameterMapping.Operation(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AlarmsQuery.ParameterMapping.Operation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1B8DBBDB4 + 4 * byte_1B8E020A4[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1B8DBBDE8 + 4 * byte_1B8E0209F[v4]))();
}

uint64_t sub_1B8DBBDE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DBBDF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8DBBDF8);
  return result;
}

uint64_t sub_1B8DBBE04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8DBBE0CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1B8DBBE10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DBBE18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AlarmsQuery.ParameterMapping.Operation()
{
  return &type metadata for AlarmsQuery.ParameterMapping.Operation;
}

unint64_t sub_1B8DBBE38()
{
  unint64_t result;

  result = qword_1EF1E1DE0;
  if (!qword_1EF1E1DE0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E02844, &type metadata for AlarmsQuery.ParameterMapping.Operation);
    atomic_store(result, (unint64_t *)&qword_1EF1E1DE0);
  }
  return result;
}

void sub_1B8DBBE80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  char *v9;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2040);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B8DFF650;
  v3 = type metadata accessor for SolarPosition(0);
  v4 = *(_DWORD *)(v1 + *(int *)(v3 + 20));
  v5 = MEMORY[0x1E0DEB188];
  v6 = MEMORY[0x1E0DEB1E8];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEB188];
  *(_QWORD *)(v2 + 64) = v6;
  *(_DWORD *)(v2 + 32) = v4;
  sub_1B8DFDB74();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B8DFF650;
  v8 = *(float *)(v1 + *(int *)(v3 + 24));
  *(_QWORD *)(v7 + 56) = v5;
  *(_QWORD *)(v7 + 64) = v6;
  *(float *)(v7 + 32) = v8 * 100.0;
  sub_1B8DFDB74();
  v9 = (char *)&loc_1B8DBBF98 + *((int *)qword_1B8DBC230 + sub_1B8DD5538());
  __asm { BR              X10 }
}

void sub_1B8DBBFA8()
{
  char *v0;

  if ((float)(360.0 / 360.0) >= 0.75)
  {
    v0 = (char *)&loc_1B8DBBFF8 + *((int *)qword_1B8DBC240 + sub_1B8DD5538());
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x1B8DBC228);
}

BOOL sub_1B8DBC260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B8DD64C0(a1, a2)
      && *(float *)(a1 + *(int *)(a3 + 20)) == *(float *)(a2 + *(int *)(a3 + 20))
      && *(float *)(a1 + *(int *)(a3 + 24)) == *(float *)(a2 + *(int *)(a3 + 24));
}

uint64_t sub_1B8DBC2C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  uint64_t result;
  _QWORD v12[2];
  unint64_t v13;
  unint64_t v14;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1E00);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v12 - v5;
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  v13 = 0xD000000000000010;
  v14 = 0x80000001B8E07CB0;
  sub_1B8DBBE80();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  v7 = v0 + *(int *)(type metadata accessor for CurrentLocationSolarPosition(0) + 20);
  sub_1B8DBF1D4(v7, (uint64_t)v6);
  v8 = type metadata accessor for CurrentLocation(0);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  v10 = v9(v6, 1, v8);
  sub_1B8D9D154((uint64_t)v6, &qword_1EF1E1E00);
  if (v10 == 1)
    goto LABEL_4;
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_1B8DBF1D4(v7, (uint64_t)v4);
  result = v9(v4, 1, v8);
  if ((_DWORD)result != 1)
  {
    CurrentLocation.description.getter();
    sub_1B8DFDBBC();
    swift_bridgeObjectRelease();
    sub_1B8DBDD44((uint64_t)v4);
LABEL_4:
    sub_1B8DFDBBC();
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B8DBC4AC()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for SolarDataProvider(0);
  v0 = swift_allocObject();
  result = sub_1B8DBD04C();
  qword_1EF1E1DE8 = v0;
  return result;
}

uint64_t static SolarDataProvider.shared.getter()
{
  if (qword_1EF1E0F10 != -1)
    swift_once();
  return sub_1B8DFD22C();
}

uint64_t sub_1B8DBC528@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  uint64_t v19;
  id v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  double v28;
  double v29;
  double v30;
  double v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2068);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B8DFD748();
  v39 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SolarCycle(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1E00);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CurrentLocation(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (id *)((char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B8DBF1D4(v1 + OBJC_IVAR____TtC18MobileTimerSupport17SolarDataProvider_currentLocation, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1B8D9D154((uint64_t)v14, &qword_1EF1E1E00);
    v19 = type metadata accessor for CurrentLocationSolarPosition(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a1, 1, 1, v19);
  }
  else
  {
    v38 = a1;
    sub_1B8DBF258((uint64_t)v14, (uint64_t)v18, type metadata accessor for CurrentLocation);
    v21 = *v18;
    objc_msgSend(v21, sel_coordinate);
    v23 = v22;
    v25 = v24;
    if (qword_1EF1E0F18 != -1)
      swift_once();
    sub_1B8DFD73C();
    sub_1B8DFD8A4();
    v26 = sub_1B8DFD8B0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v5, 0, 1, v26);
    sub_1B8DD5B58((uint64_t)v11, v23, v25);
    sub_1B8D9D154((uint64_t)v5, &qword_1EF1E2068);
    v27 = *(void (**)(char *, uint64_t))(v39 + 8);
    v27(v8, v6);
    objc_msgSend(v21, sel_coordinate);
    v29 = v28;
    v31 = v30;
    sub_1B8DFD73C();
    sub_1B8DD58F8((uint64_t)v8, v29, v31);
    LODWORD(v29) = v32;
    v27(v8, v6);
    sub_1B8DD56FC();
    LODWORD(v31) = v33;
    v34 = v38;
    sub_1B8DBF258((uint64_t)v11, v38, type metadata accessor for SolarCycle);

    v35 = type metadata accessor for SolarPosition(0);
    *(_DWORD *)(v34 + *(int *)(v35 + 20)) = LODWORD(v29);
    *(_DWORD *)(v34 + *(int *)(v35 + 24)) = LODWORD(v31);
    v36 = type metadata accessor for CurrentLocationSolarPosition(0);
    v37 = v34 + *(int *)(v36 + 20);
    sub_1B8DBF258((uint64_t)v18, v37, type metadata accessor for CurrentLocation);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v37, 0, 1, v15);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v34, 0, 1, v36);
  }
}

uint64_t SolarDataProvider.currentSolarTerminatorPath()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport17SolarDataProvider_solarTerminatorStream);
  sub_1B8DFD22C();
  return sub_1B8DC9764(v3, v1, a1);
}

uint64_t sub_1B8DBC8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[21] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2050);
  v4[22] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  v4[23] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2058);
  v4[24] = v5;
  v4[25] = *(_QWORD *)(v5 - 8);
  v4[26] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2060);
  v4[27] = v6;
  v4[28] = *(_QWORD *)(v6 - 8);
  v4[29] = swift_task_alloc();
  v7 = sub_1B8DFD748();
  v4[30] = v7;
  v4[31] = *(_QWORD *)(v7 - 8);
  v4[32] = swift_task_alloc();
  v4[33] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B8DBC9F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  if (qword_1EF1E0F18 != -1)
    swift_once();
  v1 = v0[33];
  v2 = v0[30];
  v3 = v0[31];
  v5 = v0[25];
  v4 = v0[26];
  v6 = v0[24];
  sub_1B8DFD73C();
  sub_1B8DFD700();
  v8 = v7;
  v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[34] = v9;
  v9(v1, v2);
  v10 = qword_1EF1E2090;
  v11 = *(_QWORD *)(qword_1EF1E2090 + OBJC_IVAR____TtC18MobileTimerSupport5Clock_dateStreamObservers);
  sub_1B8DFD22C();
  sub_1B8DCBD20(1, v11, v10, 1, v4);
  sub_1B8DFDD30();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_beginAccess();
  v0[35] = v8;
  v12 = (_QWORD *)swift_task_alloc();
  v0[36] = v12;
  *v12 = v0;
  v12[1] = sub_1B8DBCB48;
  return sub_1B8DFDD3C();
}

uint64_t sub_1B8DBCB48()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8DBCB9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  double v5;
  double v6;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 184);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
    goto LABEL_6;
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 256), v3, v1);
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 296) = Strong;
  if (!Strong)
  {
    (*(void (**)(_QWORD, _QWORD))(v0 + 272))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
LABEL_6:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(double *)(v0 + 280);
  sub_1B8DFD700();
  *(double *)(v0 + 304) = v6;
  if (vabdd_f64(v6, v5) > 5.0)
    return swift_task_switch();
  (*(void (**)(_QWORD, _QWORD))(v0 + 272))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
  swift_release();
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 288) = v8;
  *v8 = v0;
  v8[1] = sub_1B8DBCB48;
  return sub_1B8DFDD3C();
}

uint64_t sub_1B8DBCD50()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 264);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 272);
  v4 = *(_QWORD *)(v0 + 240);
  v13 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport17SolarDataProvider_solarTerminatorStream);
  sub_1B8DFD73C();
  Date.solarTerminatorPath.getter(v0 + 16);
  v2(v3, v4);
  v6 = *(_QWORD *)(v0 + 16);
  v7 = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 32);
  v9 = (os_unfair_lock_s *)(*(_QWORD *)(v5 + 48) + 16);
  LOBYTE(v2) = *(_BYTE *)(v0 + 40);
  swift_beginAccess();
  os_unfair_lock_lock(v9);
  swift_endAccess();
  sub_1B8DCC750(v6, v7, v8, (char)v2);
  swift_beginAccess();
  os_unfair_lock_unlock(v9);
  swift_endAccess();
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport17SolarDataProvider_currentLocationSolarPositionStream);
  sub_1B8DBC528(v13);
  v11 = (os_unfair_lock_s *)(*(_QWORD *)(v10 + *(_QWORD *)(*(_QWORD *)v10 + 104)) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v11);
  swift_endAccess();
  sub_1B8DCCDBC(v13);
  swift_beginAccess();
  os_unfair_lock_unlock(v11);
  swift_endAccess();
  sub_1B8D9D154(v13, &qword_1EF1E2050);
  return swift_task_switch();
}

uint64_t sub_1B8DBCF10()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (void (*)(uint64_t, uint64_t))v0[34];
  v2 = v0[32];
  v3 = v0[30];
  swift_release();
  v1(v2, v3);
  v0[35] = v0[38];
  v4 = (_QWORD *)swift_task_alloc();
  v0[36] = v4;
  *v4 = v0;
  v4[1] = sub_1B8DBCB48;
  return sub_1B8DFDD3C();
}

uint64_t SolarDataProvider.deinit()
{
  uint64_t v0;

  sub_1B8D9D154(v0 + OBJC_IVAR____TtC18MobileTimerSupport17SolarDataProvider_currentLocation, &qword_1EF1E1E00);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t SolarDataProvider.__deallocating_deinit()
{
  SolarDataProvider.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t sub_1B8DBD04C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_defaultActor_initialize();
  v1 = v0 + OBJC_IVAR____TtC18MobileTimerSupport17SolarDataProvider_currentLocation;
  v2 = type metadata accessor for CurrentLocation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = OBJC_IVAR____TtC18MobileTimerSupport17SolarDataProvider_currentLocationSolarPositionStream;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2070);
  v4 = swift_allocObject();
  v5 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 96);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2050);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 104);
  type metadata accessor for MTSUnfairLock();
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v4 + v7) = v8;
  v9 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 112)) = MEMORY[0x1E0DEE9E0];
  *(_BYTE *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 120)) = 0;
  *(_QWORD *)(v0 + v3) = v4;
  v10 = OBJC_IVAR____TtC18MobileTimerSupport17SolarDataProvider_solarTerminatorStream;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2078);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1B8E02970;
  *(_QWORD *)(v11 + 32) = 0;
  *(_BYTE *)(v11 + 40) = 0;
  v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v11 + 48) = v12;
  *(_QWORD *)(v11 + 56) = v9;
  *(_BYTE *)(v11 + 64) = 0;
  *(_QWORD *)(v0 + v10) = v11;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC18MobileTimerSupport17SolarDataProvider_solarMovementsUpdateTask) = 0;
  v13 = OBJC_IVAR____TtC18MobileTimerSupport17SolarDataProvider_solarCycleStreams;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1E2080);
  v14 = swift_allocObject();
  v15 = swift_allocObject();
  *(_QWORD *)(v0 + v13) = v14;
  *(_DWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC18MobileTimerSupport17SolarDataProvider_solarCycleCancellationBlockByLocation) = v9;
  *(_QWORD *)(v14 + 16) = v15;
  *(_QWORD *)(v14 + 24) = v9;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC18MobileTimerSupport17SolarDataProvider_overrideTimeUpdateTask) = 0;
  return v0;
}

uint64_t SolarDataProvider.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1B8DBD21C()
{
  return type metadata accessor for SolarDataProvider(0);
}

uint64_t type metadata accessor for SolarDataProvider(uint64_t a1)
{
  return sub_1B8D9A054(a1, qword_1EF1E1E58);
}

void sub_1B8DBD238()
{
  unint64_t v0;

  sub_1B8DBD2E8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for SolarDataProvider()
{
  return swift_lookUpClassMethod();
}

void sub_1B8DBD2E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF1E2C80)
  {
    type metadata accessor for CurrentLocation(255);
    v0 = sub_1B8DFDE38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF1E2C80);
  }
}

_QWORD *sub_1B8DBD33C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void **v25;
  void **v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1B8DFD22C();
  }
  else
  {
    v7 = sub_1B8DFD748();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = type metadata accessor for SolarEvent(0);
    *((_BYTE *)a1 + *(int *)(v9 + 20)) = *((_BYTE *)a2 + *(int *)(v9 + 20));
    *(_DWORD *)((char *)a1 + *(int *)(v9 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(v9 + 24));
    v10 = (int *)type metadata accessor for SolarCycle(0);
    v11 = v10[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v8((_QWORD *)((char *)a1 + v11), (_QWORD *)((char *)a2 + v11), v7);
    v12[*(int *)(v9 + 20)] = v13[*(int *)(v9 + 20)];
    *(_DWORD *)&v12[*(int *)(v9 + 24)] = *(_DWORD *)&v13[*(int *)(v9 + 24)];
    v14 = v10[6];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v8((_QWORD *)((char *)a1 + v14), (_QWORD *)((char *)a2 + v14), v7);
    v15[*(int *)(v9 + 20)] = v16[*(int *)(v9 + 20)];
    *(_DWORD *)&v15[*(int *)(v9 + 24)] = *(_DWORD *)&v16[*(int *)(v9 + 24)];
    v17 = v10[7];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v8((_QWORD *)((char *)a1 + v17), (_QWORD *)((char *)a2 + v17), v7);
    v18[*(int *)(v9 + 20)] = v19[*(int *)(v9 + 20)];
    *(_DWORD *)&v18[*(int *)(v9 + 24)] = *(_DWORD *)&v19[*(int *)(v9 + 24)];
    v20 = v10[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v8((_QWORD *)((char *)a1 + v20), (_QWORD *)((char *)a2 + v20), v7);
    v21[*(int *)(v9 + 20)] = v22[*(int *)(v9 + 20)];
    *(_DWORD *)&v21[*(int *)(v9 + 24)] = *(_DWORD *)&v22[*(int *)(v9 + 24)];
    v23 = type metadata accessor for SolarPosition(0);
    *(_DWORD *)((char *)a1 + *(int *)(v23 + 20)) = *(_DWORD *)((char *)a2 + *(int *)(v23 + 20));
    *(_DWORD *)((char *)a1 + *(int *)(v23 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(v23 + 24));
    v24 = *(int *)(a3 + 20);
    v25 = (void **)((char *)a1 + v24);
    v26 = (void **)((char *)a2 + v24);
    v27 = type metadata accessor for CurrentLocation(0);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1E00);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v31 = *v26;
      *v25 = *v26;
      v32 = *(int *)(v27 + 20);
      v33 = (char *)v25 + v32;
      v34 = (char *)v26 + v32;
      v35 = v31;
      v36 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v34, 1, v36))
      {
        v38 = type metadata accessor for LocationAccuracy(0);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v33, v34, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
      }
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
  }
  return a1;
}

uint64_t type metadata accessor for SolarPosition(uint64_t a1)
{
  return sub_1B8D9A054(a1, qword_1EF1E2000);
}

uint64_t sub_1B8DBD608(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  int *v6;
  id *v7;
  uint64_t v8;
  uint64_t result;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_1B8DFD748();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = (int *)type metadata accessor for SolarCycle(0);
  v5(a1 + v6[5], v4);
  v5(a1 + v6[6], v4);
  v5(a1 + v6[7], v4);
  v5(a1 + v6[8], v4);
  v7 = (id *)(a1 + *(int *)(a2 + 20));
  v8 = type metadata accessor for CurrentLocation(0);
  result = (*(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8);
  if (!(_DWORD)result)
  {

    v10 = (char *)v7 + *(int *)(v8 + 20);
    v11 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
    v12 = *(_QWORD *)(v11 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  return result;
}

uint64_t sub_1B8DBD730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = sub_1B8DFD748();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = (int *)type metadata accessor for SolarCycle(0);
  v10 = v9[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(_BYTE *)(v11 + *(int *)(v8 + 20)) = *(_BYTE *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  v13 = v9[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(_BYTE *)(v14 + *(int *)(v8 + 20)) = *(_BYTE *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  v16 = v9[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(_BYTE *)(v17 + *(int *)(v8 + 20)) = *(_BYTE *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  v19 = v9[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(_BYTE *)(v20 + *(int *)(v8 + 20)) = *(_BYTE *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  v22 = type metadata accessor for SolarPosition(0);
  *(_DWORD *)(a1 + *(int *)(v22 + 20)) = *(_DWORD *)(a2 + *(int *)(v22 + 20));
  *(_DWORD *)(a1 + *(int *)(v22 + 24)) = *(_DWORD *)(a2 + *(int *)(v22 + 24));
  v23 = *(int *)(a3 + 20);
  v24 = (void **)(a1 + v23);
  v25 = (void **)(a2 + v23);
  v26 = type metadata accessor for CurrentLocation(0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1E00);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v29 = *v25;
    *v24 = *v25;
    v30 = *(int *)(v26 + 20);
    v31 = (char *)v24 + v30;
    v32 = (char *)v25 + v30;
    v33 = v29;
    v34 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v32, 1, v34))
    {
      v36 = type metadata accessor for LocationAccuracy(0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v31, v32, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v31, 0, 1, v34);
    }
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

uint64_t sub_1B8DBD9BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void **, uint64_t, uint64_t);
  int v29;
  void *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  size_t v38;
  void **v39;
  void **v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;

  v6 = sub_1B8DFD748();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = (int *)type metadata accessor for SolarCycle(0);
  v10 = v9[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(_BYTE *)(v11 + *(int *)(v8 + 20)) = *(_BYTE *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  v13 = v9[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(_BYTE *)(v14 + *(int *)(v8 + 20)) = *(_BYTE *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  v16 = v9[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(_BYTE *)(v17 + *(int *)(v8 + 20)) = *(_BYTE *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  v19 = v9[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(_BYTE *)(v20 + *(int *)(v8 + 20)) = *(_BYTE *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  v22 = type metadata accessor for SolarPosition(0);
  *(_DWORD *)(a1 + *(int *)(v22 + 20)) = *(_DWORD *)(a2 + *(int *)(v22 + 20));
  *(_DWORD *)(a1 + *(int *)(v22 + 24)) = *(_DWORD *)(a2 + *(int *)(v22 + 24));
  v23 = *(int *)(a3 + 20);
  v24 = (void **)(a1 + v23);
  v25 = (void **)(a2 + v23);
  v26 = type metadata accessor for CurrentLocation(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v27 + 48);
  LODWORD(v8) = v28(v24, 1, v26);
  v29 = v28(v25, 1, v26);
  if (!(_DWORD)v8)
  {
    if (!v29)
    {
      v41 = *v25;
      v42 = *v24;
      *v24 = *v25;
      v43 = v41;

      v44 = *(int *)(v26 + 20);
      v45 = (char *)v24 + v44;
      v46 = (char *)v25 + v44;
      v47 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
      v48 = *(_QWORD *)(v47 - 8);
      v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
      LODWORD(v42) = v49(v45, 1, v47);
      v50 = v49(v46, 1, v47);
      if ((_DWORD)v42)
      {
        if (!v50)
        {
          (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
          return a1;
        }
      }
      else
      {
        if (!v50)
        {
          (*(void (**)(char *, char *, uint64_t))(v48 + 24))(v45, v46, v47);
          return a1;
        }
        (*(void (**)(char *, uint64_t))(v48 + 8))(v45, v47);
      }
      v38 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for LocationAccuracy(0) - 8) + 64);
      v39 = (void **)v45;
      v40 = (void **)v46;
      goto LABEL_8;
    }
    sub_1B8DBDD44((uint64_t)v24);
LABEL_7:
    v38 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1E00) - 8) + 64);
    v39 = v24;
    v40 = v25;
LABEL_8:
    memcpy(v39, v40, v38);
    return a1;
  }
  if (v29)
    goto LABEL_7;
  v30 = *v25;
  *v24 = *v25;
  v31 = *(int *)(v26 + 20);
  v32 = (char *)v24 + v31;
  v33 = (char *)v25 + v31;
  v34 = v30;
  v35 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v33, 1, v35))
  {
    v37 = type metadata accessor for LocationAccuracy(0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v32, v33, v35);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v32, 0, 1, v35);
  }
  (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  return a1;
}

uint64_t sub_1B8DBDD44(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CurrentLocation(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B8DBDD80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_1B8DFD748();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = (int *)type metadata accessor for SolarCycle(0);
  v10 = v9[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(_BYTE *)(v11 + *(int *)(v8 + 20)) = *(_BYTE *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  v13 = v9[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(_BYTE *)(v14 + *(int *)(v8 + 20)) = *(_BYTE *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  v16 = v9[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(_BYTE *)(v17 + *(int *)(v8 + 20)) = *(_BYTE *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  v19 = v9[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(_BYTE *)(v20 + *(int *)(v8 + 20)) = *(_BYTE *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  v22 = type metadata accessor for SolarPosition(0);
  *(_DWORD *)(a1 + *(int *)(v22 + 20)) = *(_DWORD *)(a2 + *(int *)(v22 + 20));
  *(_DWORD *)(a1 + *(int *)(v22 + 24)) = *(_DWORD *)(a2 + *(int *)(v22 + 24));
  v23 = *(int *)(a3 + 20);
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  v26 = type metadata accessor for CurrentLocation(0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1E00);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    *v24 = *v25;
    v29 = *(int *)(v26 + 20);
    v30 = (char *)v24 + v29;
    v31 = (char *)v25 + v29;
    v32 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = type metadata accessor for LocationAccuracy(0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

uint64_t sub_1B8DBE008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void **, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  size_t v36;
  void **v37;
  const void *v38;
  void *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t, uint64_t);
  int v46;
  int v47;

  v6 = sub_1B8DFD748();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = (int *)type metadata accessor for SolarCycle(0);
  v10 = v9[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(_BYTE *)(v11 + *(int *)(v8 + 20)) = *(_BYTE *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  v13 = v9[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(_BYTE *)(v14 + *(int *)(v8 + 20)) = *(_BYTE *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  v16 = v9[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(_BYTE *)(v17 + *(int *)(v8 + 20)) = *(_BYTE *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  v19 = v9[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(_BYTE *)(v20 + *(int *)(v8 + 20)) = *(_BYTE *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  v22 = type metadata accessor for SolarPosition(0);
  *(_DWORD *)(a1 + *(int *)(v22 + 20)) = *(_DWORD *)(a2 + *(int *)(v22 + 20));
  *(_DWORD *)(a1 + *(int *)(v22 + 24)) = *(_DWORD *)(a2 + *(int *)(v22 + 24));
  v23 = *(int *)(a3 + 20);
  v24 = (void **)(a1 + v23);
  v25 = (void **)(a2 + v23);
  v26 = type metadata accessor for CurrentLocation(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v27 + 48);
  LODWORD(v8) = v28(v24, 1, v26);
  v29 = v28(v25, 1, v26);
  if (!(_DWORD)v8)
  {
    if (!v29)
    {
      v39 = *v24;
      *v24 = *v25;

      v40 = *(int *)(v26 + 20);
      v41 = (char *)v24 + v40;
      v42 = (char *)v25 + v40;
      v43 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v41, 1, v43);
      v47 = v45(v42, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v41, v42, v43);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
          return a1;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(char *, char *, uint64_t))(v44 + 40))(v41, v42, v43);
          return a1;
        }
        (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v43);
      }
      v36 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for LocationAccuracy(0) - 8) + 64);
      v37 = (void **)v41;
      v38 = v42;
      goto LABEL_8;
    }
    sub_1B8DBDD44((uint64_t)v24);
LABEL_7:
    v36 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1E00) - 8) + 64);
    v37 = v24;
    v38 = v25;
LABEL_8:
    memcpy(v37, v38, v36);
    return a1;
  }
  if (v29)
    goto LABEL_7;
  *v24 = *v25;
  v30 = *(int *)(v26 + 20);
  v31 = (char *)v24 + v30;
  v32 = (char *)v25 + v30;
  v33 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    v35 = type metadata accessor for LocationAccuracy(0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  return a1;
}

uint64_t sub_1B8DBE388()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DBE394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for SolarPosition(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1E00);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1B8DBE40C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DBE418(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for SolarPosition(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1E00);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for CurrentLocationSolarPosition(uint64_t a1)
{
  return sub_1B8D9A054(a1, qword_1EF1E1F70);
}

void sub_1B8DBE4AC()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for SolarPosition(319);
  if (v0 <= 0x3F)
  {
    sub_1B8DBD2E8();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *sub_1B8DBE530(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1B8DFD22C();
  }
  else
  {
    v7 = sub_1B8DFD748();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = type metadata accessor for SolarEvent(0);
    *((_BYTE *)a1 + *(int *)(v9 + 20)) = *((_BYTE *)a2 + *(int *)(v9 + 20));
    *(_DWORD *)((char *)a1 + *(int *)(v9 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(v9 + 24));
    v10 = (int *)type metadata accessor for SolarCycle(0);
    v11 = v10[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v8((_QWORD *)((char *)a1 + v11), (_QWORD *)((char *)a2 + v11), v7);
    v12[*(int *)(v9 + 20)] = v13[*(int *)(v9 + 20)];
    *(_DWORD *)&v12[*(int *)(v9 + 24)] = *(_DWORD *)&v13[*(int *)(v9 + 24)];
    v14 = v10[6];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v8((_QWORD *)((char *)a1 + v14), (_QWORD *)((char *)a2 + v14), v7);
    v15[*(int *)(v9 + 20)] = v16[*(int *)(v9 + 20)];
    *(_DWORD *)&v15[*(int *)(v9 + 24)] = *(_DWORD *)&v16[*(int *)(v9 + 24)];
    v17 = v10[7];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v8((_QWORD *)((char *)a1 + v17), (_QWORD *)((char *)a2 + v17), v7);
    v18[*(int *)(v9 + 20)] = v19[*(int *)(v9 + 20)];
    *(_DWORD *)&v18[*(int *)(v9 + 24)] = *(_DWORD *)&v19[*(int *)(v9 + 24)];
    v20 = v10[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v8((_QWORD *)((char *)a1 + v20), (_QWORD *)((char *)a2 + v20), v7);
    v21[*(int *)(v9 + 20)] = v22[*(int *)(v9 + 20)];
    *(_DWORD *)&v21[*(int *)(v9 + 24)] = *(_DWORD *)&v22[*(int *)(v9 + 24)];
    v23 = *(int *)(a3 + 24);
    *(_DWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 20));
    *(_DWORD *)((char *)a1 + v23) = *(_DWORD *)((char *)a2 + v23);
  }
  return a1;
}

uint64_t sub_1B8DBE6DC(uint64_t a1)
{
  uint64_t v2;
  int *v3;
  void (*v5)(uint64_t, uint64_t);

  v2 = sub_1B8DFD748();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v5(a1, v2);
  v3 = (int *)type metadata accessor for SolarCycle(0);
  v5(a1 + v3[5], v2);
  v5(a1 + v3[6], v2);
  v5(a1 + v3[7], v2);
  return ((uint64_t (*)(uint64_t, uint64_t))v5)(a1 + v3[8], v2);
}

uint64_t sub_1B8DBE788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_1B8DFD748();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = (int *)type metadata accessor for SolarCycle(0);
  v10 = v9[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(_BYTE *)(v11 + *(int *)(v8 + 20)) = *(_BYTE *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  v13 = v9[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(_BYTE *)(v14 + *(int *)(v8 + 20)) = *(_BYTE *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  v16 = v9[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(_BYTE *)(v17 + *(int *)(v8 + 20)) = *(_BYTE *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  v19 = v9[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(_BYTE *)(v20 + *(int *)(v8 + 20)) = *(_BYTE *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  v22 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v22) = *(_DWORD *)(a2 + v22);
  return a1;
}

uint64_t sub_1B8DBE908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_1B8DFD748();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = (int *)type metadata accessor for SolarCycle(0);
  v10 = v9[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(_BYTE *)(v11 + *(int *)(v8 + 20)) = *(_BYTE *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  v13 = v9[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(_BYTE *)(v14 + *(int *)(v8 + 20)) = *(_BYTE *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  v16 = v9[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(_BYTE *)(v17 + *(int *)(v8 + 20)) = *(_BYTE *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  v19 = v9[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(_BYTE *)(v20 + *(int *)(v8 + 20)) = *(_BYTE *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + *(int *)(a3 + 24)) = *(_DWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1B8DBEA8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_1B8DFD748();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = (int *)type metadata accessor for SolarCycle(0);
  v10 = v9[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(_BYTE *)(v11 + *(int *)(v8 + 20)) = *(_BYTE *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  v13 = v9[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(_BYTE *)(v14 + *(int *)(v8 + 20)) = *(_BYTE *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  v16 = v9[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(_BYTE *)(v17 + *(int *)(v8 + 20)) = *(_BYTE *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  v19 = v9[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(_BYTE *)(v20 + *(int *)(v8 + 20)) = *(_BYTE *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  v22 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v22) = *(_DWORD *)(a2 + v22);
  return a1;
}

uint64_t sub_1B8DBEC0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_1B8DFD748();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = (int *)type metadata accessor for SolarCycle(0);
  v10 = v9[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(_BYTE *)(v11 + *(int *)(v8 + 20)) = *(_BYTE *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  v13 = v9[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(_BYTE *)(v14 + *(int *)(v8 + 20)) = *(_BYTE *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  v16 = v9[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(_BYTE *)(v17 + *(int *)(v8 + 20)) = *(_BYTE *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  v19 = v9[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(_BYTE *)(v20 + *(int *)(v8 + 20)) = *(_BYTE *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  v22 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v22) = *(_DWORD *)(a2 + v22);
  return a1;
}

uint64_t sub_1B8DBED8C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DBED98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SolarCycle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1B8DBEDD4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DBEDE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SolarCycle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1B8DBEE20()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SolarCycle(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL sub_1B8DBEE98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char *v29;

  v4 = type metadata accessor for CurrentLocation(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2F90);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1E00);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v28 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v28 - v18;
  if (!sub_1B8DD64C0(a1, a2))
    return 0;
  v20 = type metadata accessor for SolarPosition(0);
  if (*(float *)(a1 + *(int *)(v20 + 20)) != *(float *)(a2 + *(int *)(v20 + 20))
    || *(float *)(a1 + *(int *)(v20 + 24)) != *(float *)(a2 + *(int *)(v20 + 24)))
  {
    return 0;
  }
  v29 = v7;
  v21 = type metadata accessor for CurrentLocationSolarPosition(0);
  sub_1B8DBF1D4(a1 + *(int *)(v21 + 20), (uint64_t)v19);
  sub_1B8DBF1D4(a2 + *(int *)(v21 + 20), (uint64_t)v16);
  v22 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1B8DBF1D4((uint64_t)v19, (uint64_t)v10);
  sub_1B8DBF1D4((uint64_t)v16, v22);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v23((uint64_t)v10, 1, v4) == 1)
  {
    sub_1B8D9D154((uint64_t)v16, &qword_1EF1E1E00);
    sub_1B8D9D154((uint64_t)v19, &qword_1EF1E1E00);
    if (v23(v22, 1, v4) == 1)
    {
      sub_1B8D9D154((uint64_t)v10, &qword_1EF1E1E00);
      return 1;
    }
    v25 = &qword_1EF1E2F90;
    goto LABEL_15;
  }
  sub_1B8DBF1D4((uint64_t)v10, (uint64_t)v13);
  if (v23(v22, 1, v4) == 1)
  {
    v25 = &qword_1EF1E2F90;
LABEL_14:
    sub_1B8D9D154((uint64_t)v16, &qword_1EF1E1E00);
    sub_1B8D9D154((uint64_t)v19, &qword_1EF1E1E00);
    sub_1B8DBDD44((uint64_t)v13);
LABEL_15:
    sub_1B8D9D154((uint64_t)v10, v25);
    return 0;
  }
  v26 = (uint64_t)v29;
  sub_1B8DBF258(v22, (uint64_t)v29, type metadata accessor for CurrentLocation);
  sub_1B8DBF21C();
  if ((sub_1B8DFDE20() & 1) == 0)
  {
    sub_1B8DBDD44(v26);
    v25 = &qword_1EF1E1E00;
    goto LABEL_14;
  }
  v27 = sub_1B8DD1180((uint64_t)&v13[*(int *)(v4 + 20)], v26 + *(int *)(v4 + 20));
  sub_1B8DBDD44(v26);
  sub_1B8D9D154((uint64_t)v16, &qword_1EF1E1E00);
  sub_1B8D9D154((uint64_t)v19, &qword_1EF1E1E00);
  sub_1B8DBDD44((uint64_t)v13);
  sub_1B8D9D154((uint64_t)v10, &qword_1EF1E1E00);
  return (v27 & 1) != 0;
}

uint64_t sub_1B8DBF1D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B8DBF21C()
{
  unint64_t result;

  result = qword_1EF1E2890;
  if (!qword_1EF1E2890)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF1E2890);
  }
  return result;
}

uint64_t sub_1B8DBF258(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B8DBF29C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1B8DFDD00();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1B8DFDCF4();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_1B8D9D154(a1, &qword_1ED36F320);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1B8DFDCB8();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1B8DBF3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1B8DFDD00();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1B8DFDCF4();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1B8D9D154(a1, &qword_1ED36F320);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1B8DFDCB8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1E2810);
  return swift_task_create();
}

BOOL static ClockTimeInterval.< infix(_:_:)(char *a1, char *a2)
{
  return dbl_1B8E03258[*a1] < dbl_1B8E03258[*a2];
}

double ClockTimeInterval.rawValue.getter()
{
  char *v0;

  return dbl_1B8E03258[*v0];
}

MobileTimerSupport::ClockTimeInterval_optional __swiftcall ClockTimeInterval.init(rawValue:)(Swift::Double rawValue)
{
  char *v1;
  char v2;
  char v3;
  MobileTimerSupport::ClockTimeInterval_optional result;

  if (rawValue == 0.01666)
  {
    *v1 = 0;
  }
  else
  {
    if (rawValue == 60.0)
      v2 = 2;
    else
      v2 = 3;
    if (rawValue == 1.0)
      v3 = 1;
    else
      v3 = v2;
    *v1 = v3;
  }
  return result;
}

void *static ClockTimeInterval.allCases.getter()
{
  return &unk_1E6F29538;
}

BOOL sub_1B8DBF590(char *a1, char *a2)
{
  return dbl_1B8E03258[*a1] == dbl_1B8E03258[*a2];
}

uint64_t sub_1B8DBF5B4()
{
  return sub_1B8DF900C();
}

uint64_t sub_1B8DBF5BC()
{
  return sub_1B8DFE180();
}

uint64_t sub_1B8DBF5F0()
{
  return sub_1B8DF1260();
}

MobileTimerSupport::ClockTimeInterval_optional sub_1B8DBF5F8(Swift::Double *a1)
{
  return ClockTimeInterval.init(rawValue:)(*a1);
}

double sub_1B8DBF600@<D0>(double *a1@<X8>)
{
  char *v1;
  double result;

  result = dbl_1B8E03258[*v1];
  *a1 = result;
  return result;
}

void sub_1B8DBF618(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6F29560;
}

BOOL sub_1B8DBF628(char *a1, char *a2)
{
  return dbl_1B8E03258[*a1] < dbl_1B8E03258[*a2];
}

BOOL sub_1B8DBF64C(char *a1, char *a2)
{
  return dbl_1B8E03258[*a2] >= dbl_1B8E03258[*a1];
}

BOOL sub_1B8DBF670(char *a1, char *a2)
{
  return dbl_1B8E03258[*a1] >= dbl_1B8E03258[*a2];
}

BOOL sub_1B8DBF694(char *a1, char *a2)
{
  return dbl_1B8E03258[*a2] < dbl_1B8E03258[*a1];
}

uint64_t OverrideTime.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1B8DFD748();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t OverrideTime.date.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1B8DFD748();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*OverrideTime.date.modify())()
{
  return GEOLocationCoordinate2DMake;
}

__n128 OverrideTime.advancingRate.getter@<Q0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __n128 result;
  __int128 v5;

  v3 = v1 + *(int *)(type metadata accessor for OverrideTime(0) + 20);
  result = *(__n128 *)v3;
  v5 = *(_OWORD *)(v3 + 16);
  *a1 = *(_OWORD *)v3;
  a1[1] = v5;
  return result;
}

uint64_t type metadata accessor for OverrideTime(uint64_t a1)
{
  return sub_1B8D9A054(a1, qword_1EF1E21A8);
}

__n128 OverrideTime.advancingRate.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  __n128 *v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for OverrideTime(0) + 20));
  result = v6;
  *v4 = v6;
  v4[1].n128_u64[0] = v2;
  v4[1].n128_u64[1] = v3;
  return result;
}

uint64_t (*OverrideTime.advancingRate.modify())()
{
  type metadata accessor for OverrideTime(0);
  return GEOLocationCoordinate2DMake;
}

uint64_t OverrideTime.AdvancingRate.offset.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t OverrideTime.AdvancingRate.offset.setter(uint64_t result, uint64_t a2)
{
  _QWORD *v2;

  *v2 = result;
  v2[1] = a2;
  return result;
}

uint64_t (*OverrideTime.AdvancingRate.offset.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t OverrideTime.AdvancingRate.interval.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t OverrideTime.AdvancingRate.interval.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*OverrideTime.AdvancingRate.interval.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t OverrideTime.AdvancingRate.init(offset:interval:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

Swift::Void __swiftcall OverrideTime.AdvancingRate.pause()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = sub_1B8DFE1C8();
  *(_QWORD *)(v0 + 24) = v1;
}

uint64_t static OverrideTime.AdvancingRate.paused.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v2 = sub_1B8DFE1C8();
  v4 = v3;
  result = sub_1B8DFE1C8();
  *a1 = v2;
  a1[1] = v4;
  a1[2] = result;
  a1[3] = v6;
  return result;
}

uint64_t static OverrideTime.AdvancingRate.== infix(_:_:)()
{
  if ((sub_1B8DFE1BC() & 1) != 0)
    return sub_1B8DFE1BC();
  else
    return 0;
}

uint64_t sub_1B8DBF8FC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6C61767265746E69;
  else
    return 0x74657366666FLL;
}

uint64_t sub_1B8DBF930()
{
  char *v0;

  return sub_1B8DBF8FC(*v0);
}

uint64_t sub_1B8DBF938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B8DC88A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B8DBF95C()
{
  sub_1B8DBFB04();
  return sub_1B8DFE1E0();
}

uint64_t sub_1B8DBF984()
{
  sub_1B8DBFB04();
  return sub_1B8DFE1EC();
}

uint64_t OverrideTime.AdvancingRate.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2098);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  v9 = v1[2];
  v13 = v1[3];
  v14 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8DBFB04();
  sub_1B8DFE1A4();
  v16 = v8;
  v17 = v7;
  v18 = 0;
  v10 = v15;
  sub_1B8DFE09C();
  if (!v10)
  {
    v16 = v14;
    v17 = v13;
    v18 = 1;
    sub_1B8DFE09C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1B8DBFB04()
{
  unint64_t result;

  result = qword_1EF1E20A0;
  if (!qword_1EF1E20A0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E031E8, &type metadata for OverrideTime.AdvancingRate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1E20A0);
  }
  return result;
}

uint64_t OverrideTime.AdvancingRate.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v12;
  char v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E20A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8DBFB04();
  sub_1B8DFE198();
  if (!v2)
  {
    v13 = 0;
    sub_1B8DFE054();
    v9 = v12;
    v13 = 1;
    sub_1B8DFE054();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v12;
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B8DBFCC8@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return OverrideTime.AdvancingRate.init(from:)(a1, a2);
}

uint64_t sub_1B8DBFCDC(_QWORD *a1)
{
  return OverrideTime.AdvancingRate.encode(to:)(a1);
}

uint64_t sub_1B8DBFCF0()
{
  if ((sub_1B8DFE1BC() & 1) != 0)
    return sub_1B8DFE1BC();
  else
    return 0;
}

__n128 OverrideTime.init(date:advancingRate:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __n128 *v8;
  __n128 result;
  __n128 v10;

  v10 = *a2;
  v5 = a2[1].n128_u64[0];
  v6 = a2[1].n128_u64[1];
  v7 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a3, a1, v7);
  v8 = (__n128 *)(a3 + *(int *)(type metadata accessor for OverrideTime(0) + 20));
  result = v10;
  *v8 = v10;
  v8[1].n128_u64[0] = v5;
  v8[1].n128_u64[1] = v6;
  return result;
}

BOOL static OverrideTime.== infix(_:_:)()
{
  _BOOL8 result;

  result = 0;
  if ((sub_1B8DFD70C() & 1) != 0)
  {
    type metadata accessor for OverrideTime(0);
    if ((sub_1B8DFE1BC() & 1) != 0 && (sub_1B8DFE1BC() & 1) != 0)
      return 1;
  }
  return result;
}

uint64_t sub_1B8DBFE4C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E69636E61766461;
  else
    return 1702125924;
}

uint64_t sub_1B8DBFE88()
{
  char *v0;

  return sub_1B8DBFE4C(*v0);
}

uint64_t sub_1B8DBFE90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B8DC8988(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B8DBFEB4()
{
  sub_1B8DC0070();
  return sub_1B8DFE1E0();
}

uint64_t sub_1B8DBFEDC()
{
  sub_1B8DC0070();
  return sub_1B8DFE1EC();
}

uint64_t OverrideTime.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __int128 *v9;
  __int128 v10;
  _BYTE v12[16];
  __int128 v13;
  __int128 v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E20B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8DC0070();
  sub_1B8DFE1A4();
  LOBYTE(v13) = 0;
  sub_1B8DFD748();
  sub_1B8DA760C(&qword_1ED36F1D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1B8DFE09C();
  if (!v2)
  {
    v9 = (__int128 *)(v3 + *(int *)(type metadata accessor for OverrideTime(0) + 20));
    v10 = v9[1];
    v13 = *v9;
    v14 = v10;
    v12[15] = 1;
    sub_1B8DC00B4();
    sub_1B8DFE09C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1B8DC0070()
{
  unint64_t result;

  result = qword_1EF1E20B8;
  if (!qword_1EF1E20B8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E03198, &type metadata for OverrideTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1E20B8);
  }
  return result;
}

unint64_t sub_1B8DC00B4()
{
  unint64_t result;

  result = qword_1EF1E20C8;
  if (!qword_1EF1E20C8)
  {
    result = MEMORY[0x1BCCBD0FC](&protocol conformance descriptor for OverrideTime.AdvancingRate, &type metadata for OverrideTime.AdvancingRate);
    atomic_store(result, (unint64_t *)&qword_1EF1E20C8);
  }
  return result;
}

uint64_t OverrideTime.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _OWORD *v16;
  __int128 v17;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  char v29;

  v22 = a2;
  v26 = sub_1B8DFD748();
  v23 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v24 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1E20D0);
  v5 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OverrideTime(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8DC0070();
  sub_1B8DFE198();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = a1;
  v21 = v5;
  v11 = (uint64_t)v10;
  v12 = v23;
  LOBYTE(v27) = 0;
  sub_1B8DA760C(&qword_1ED36F598, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v14 = v24;
  v13 = v25;
  v15 = v26;
  sub_1B8DFE054();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v11, v14, v15);
  v29 = 1;
  sub_1B8DC0394();
  sub_1B8DFE054();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v13);
  v16 = (_OWORD *)(v11 + *(int *)(v8 + 20));
  v17 = v28;
  *v16 = v27;
  v16[1] = v17;
  sub_1B8D9A42C(v11, v22, type metadata accessor for OverrideTime);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return sub_1B8D9A088(v11, type metadata accessor for OverrideTime);
}

unint64_t sub_1B8DC0394()
{
  unint64_t result;

  result = qword_1EF1E20E0;
  if (!qword_1EF1E20E0)
  {
    result = MEMORY[0x1BCCBD0FC](&protocol conformance descriptor for OverrideTime.AdvancingRate, &type metadata for OverrideTime.AdvancingRate);
    atomic_store(result, (unint64_t *)&qword_1EF1E20E0);
  }
  return result;
}

uint64_t sub_1B8DC03D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return OverrideTime.init(from:)(a1, a2);
}

uint64_t sub_1B8DC03EC(_QWORD *a1)
{
  return OverrideTime.encode(to:)(a1);
}

BOOL sub_1B8DC0400()
{
  return (sub_1B8DFD70C() & 1) != 0 && (sub_1B8DFE1BC() & 1) != 0 && (sub_1B8DFE1BC() & 1) != 0;
}

BOOL sub_1B8DC048C()
{
  return (_s18MobileTimerSupport10TimeStringV1loiySbAC_ACtFZ_0() & 1) == 0;
}

BOOL sub_1B8DC04B4()
{
  return (_s18MobileTimerSupport10TimeStringV1loiySbAC_ACtFZ_0() & 1) == 0;
}

uint64_t sub_1B8DC04D0()
{
  return _s18MobileTimerSupport10TimeStringV1loiySbAC_ACtFZ_0();
}

uint64_t sub_1B8DC04E0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  if (MEMORY[0x1BCCBCAFC]("Clock:shared"))
  {
    type metadata accessor for SystemSystemStatusBarOverrideProvider();
    v0 = (_QWORD *)swift_allocObject();
    v0[2] = 0;
    v0[3] = 0;
    v0[4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DB0A20]), sel_init);
    type metadata accessor for SystemOverrideClock();
    v1 = (_QWORD *)swift_allocObject();
    sub_1B8DC8634((uint64_t)v0, v1);
    swift_release();
  }
  type metadata accessor for Clock(0);
  v2 = swift_allocObject();
  result = sub_1B8DC0E44();
  qword_1EF1E2090 = v2;
  return result;
}

uint64_t static Clock.shared.getter()
{
  if (qword_1EF1E0F18 != -1)
    swift_once();
  return sub_1B8DFD22C();
}

uint64_t sub_1B8DC05E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_1B8DFD748();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  v5 = (void *)sub_1B8DFDB5C();
  objc_msgSend(v4, sel_setDateFormat_, v5);

  sub_1B8DFD73C();
  v6 = (void *)sub_1B8DFD6D0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7 = objc_msgSend(v4, sel_stringFromDate_, v6);

  v8 = sub_1B8DFDB68();
  return v8;
}

BOOL sub_1B8DC06FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v14;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E20E8);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v14 - v5;
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18MobileTimerSupport5Clock_overrideClock);
  v8 = type metadata accessor for OverrideTime(0);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v4, 1, 1, v8);
  v10 = (os_unfair_lock_s *)(*(_QWORD *)(v7 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v10);
  swift_endAccess();
  v11 = v7 + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B13OverrideClock_lockedOverrideTime;
  swift_beginAccess();
  sub_1B8D9D154((uint64_t)v4, &qword_1EF1E20E8);
  sub_1B8D9D288(v11, (uint64_t)v4, &qword_1EF1E20E8);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v10);
  swift_endAccess();
  sub_1B8DC8F74((uint64_t)v4, (uint64_t)v6, &qword_1EF1E20E8);
  v12 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1;
  sub_1B8D9D154((uint64_t)v6, &qword_1EF1E20E8);
  return v12;
}

uint64_t sub_1B8DC0890@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v3 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC18MobileTimerSupport5Clock_overrideClock);
  v4 = type metadata accessor for OverrideTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a2, 1, 1, v4);
  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v5);
  swift_endAccess();
  v6 = v3 + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B13OverrideClock_lockedOverrideTime;
  swift_beginAccess();
  sub_1B8D9D154(a2, &qword_1EF1E20E8);
  sub_1B8D9D288(v6, a2, &qword_1EF1E20E8);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v5);
  return swift_endAccess();
}

uint64_t sub_1B8DC098C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E20E8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8D9D288(a1, (uint64_t)v4, &qword_1EF1E20E8);
  return sub_1B8DC0B08((uint64_t)v4);
}

uint64_t sub_1B8DC0A10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport5Clock_overrideClock);
  v4 = type metadata accessor for OverrideTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 1, 1, v4);
  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v5);
  swift_endAccess();
  v6 = v3 + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B13OverrideClock_lockedOverrideTime;
  swift_beginAccess();
  sub_1B8D9D154(a1, &qword_1EF1E20E8);
  sub_1B8D9D288(v6, a1, &qword_1EF1E20E8);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v5);
  return swift_endAccess();
}

uint64_t sub_1B8DC0B08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E20E8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport5Clock_overrideClock);
  v10 = type metadata accessor for OverrideTime(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
  v11 = (os_unfair_lock_s *)(*(_QWORD *)(v9 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v11);
  swift_endAccess();
  v12 = v9 + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B13OverrideClock_lockedOverrideTime;
  swift_beginAccess();
  sub_1B8D9D154((uint64_t)v6, &qword_1EF1E20E8);
  sub_1B8D9D288(v12, (uint64_t)v6, &qword_1EF1E20E8);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v11);
  swift_endAccess();
  sub_1B8DC8F74((uint64_t)v6, (uint64_t)v8, &qword_1EF1E20E8);
  v13 = v1 + OBJC_IVAR____TtC18MobileTimerSupport5Clock_lastOverrideTime;
  swift_beginAccess();
  sub_1B8DC92C8((uint64_t)v8, v13, &qword_1EF1E20E8);
  swift_endAccess();
  sub_1B8D9D288(a1, (uint64_t)v8, &qword_1EF1E20E8);
  sub_1B8DC3FE0((uint64_t)v8);
  return sub_1B8D9D154(a1, &qword_1EF1E20E8);
}

void (*sub_1B8DC0CD0(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t v10;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E20E8) - 8) + 64);
  v5 = malloc(v4);
  v3[10] = v5;
  v6 = malloc(v4);
  v3[11] = v6;
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport5Clock_overrideClock);
  v8 = type metadata accessor for OverrideTime(0);
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
  v9 = (os_unfair_lock_s *)(*(_QWORD *)(v7 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v9);
  swift_endAccess();
  v10 = v7 + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B13OverrideClock_lockedOverrideTime;
  swift_beginAccess();
  sub_1B8D9D154((uint64_t)v5, &qword_1EF1E20E8);
  sub_1B8D9D288(v10, (uint64_t)v5, &qword_1EF1E20E8);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v9);
  swift_endAccess();
  sub_1B8DC8F74((uint64_t)v5, (uint64_t)v6, &qword_1EF1E20E8);
  return sub_1B8DC0E38;
}

void sub_1B8DC0E38(uint64_t a1, char a2)
{
  sub_1B8DC4540(a1, a2, (void (*)(void *))sub_1B8DC0B08);
}

uint64_t sub_1B8DC0E44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v32;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + OBJC_IVAR____TtC18MobileTimerSupport5Clock_lastOverrideTime;
  v6 = type metadata accessor for OverrideTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_1B8DFD73C();
  v7 = OBJC_IVAR____TtC18MobileTimerSupport5Clock_atomicClock;
  type metadata accessor for AtomicClock();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 24) = 0;
  swift_unknownObjectWeakInit();
  v9 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v8 + 32) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v1 + v7) = v8;
  v10 = OBJC_IVAR____TtC18MobileTimerSupport5Clock_textClock;
  *(_QWORD *)(v1 + v10) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TextClock(0)), sel_init);
  v11 = OBJC_IVAR____TtC18MobileTimerSupport5Clock_dateStreamObservers;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E28E8);
  v12 = swift_allocObject();
  type metadata accessor for MTSUnfairLock();
  v13 = swift_allocObject();
  *(_DWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v12 + 16) = v13;
  *(_QWORD *)(v12 + 24) = v9;
  *(_QWORD *)(v1 + v11) = v12;
  v14 = OBJC_IVAR____TtC18MobileTimerSupport5Clock_textClockStreamObservers;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E28F0);
  v15 = swift_allocObject();
  v16 = swift_allocObject();
  *(_DWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v15 + 16) = v16;
  *(_QWORD *)(v15 + 24) = v9;
  *(_QWORD *)(v1 + v14) = v15;
  v17 = OBJC_IVAR____TtC18MobileTimerSupport5Clock__lastOverridePublishTimeByInterval;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E28F8);
  v18 = swift_allocObject();
  v19 = swift_allocObject();
  *(_DWORD *)(v19 + 16) = 0;
  *(_QWORD *)(v18 + 16) = v19;
  *(_QWORD *)(v18 + 24) = v9;
  *(_QWORD *)(v1 + v17) = v18;
  v20 = OBJC_IVAR____TtC18MobileTimerSupport5Clock_overrideDateStream;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E28D8);
  v21 = swift_allocObject();
  v22 = v21 + *(_QWORD *)(*(_QWORD *)v21 + 96);
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  v24 = *(_QWORD *)(*(_QWORD *)v21 + 104);
  v25 = swift_allocObject();
  *(_DWORD *)(v25 + 16) = 0;
  *(_QWORD *)(v21 + v24) = v25;
  *(_QWORD *)(v21 + *(_QWORD *)(*(_QWORD *)v21 + 112)) = v9;
  *(_BYTE *)(v21 + *(_QWORD *)(*(_QWORD *)v21 + 120)) = 0;
  *(_QWORD *)(v1 + v20) = v21;
  type metadata accessor for OverrideClock(0);
  swift_allocObject();
  v26 = sub_1B8DFD22C();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport5Clock_overrideClock) = sub_1B8DC479C(v26);
  v27 = sub_1B8DFDD00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v4, 1, 1, v27);
  sub_1B8DFDCE8();
  sub_1B8DFD22C();
  v28 = sub_1B8DFDCDC();
  v29 = (_QWORD *)swift_allocObject();
  v30 = MEMORY[0x1E0DF06E8];
  v29[2] = v28;
  v29[3] = v30;
  v29[4] = v1;
  sub_1B8D8DEC0((uint64_t)v4, (uint64_t)&unk_1EF1E2908, (uint64_t)v29);
  swift_release();
  swift_release();
  *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport5Clock_overrideClock) + 24) = &off_1E6F2C808;
  swift_unknownObjectWeakAssign();
  return v1;
}

uint64_t sub_1B8DC1198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  sub_1B8DFDCE8();
  *(_QWORD *)(v4 + 24) = sub_1B8DFDCDC();
  sub_1B8DFDCB8();
  return swift_task_switch();
}

uint64_t sub_1B8DC1204()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport5Clock_atomicClock) + 24) = &off_1E6F2C7E8;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport5Clock_textClock)
            + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B9TextClock_delegate
            + 8) = &off_1E6F2C7F8;
  swift_unknownObjectWeakAssign();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DC1284@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  int v5;

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC18MobileTimerSupport5Clock_dateStreamObservers);
  v5 = *a1;
  sub_1B8DFD22C();
  return sub_1B8DCBD20(v5, v4, v2, v5, a2);
}

uint64_t sub_1B8DC12D4(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B8DFDD00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_1B8DFDCE8();
  sub_1B8DFD22C();
  v8 = sub_1B8DFDCDC();
  v9 = swift_allocObject();
  v10 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v10;
  *(_QWORD *)(v9 + 32) = a1;
  *(_BYTE *)(v9 + 40) = a2;
  sub_1B8D8DEC0((uint64_t)v6, (uint64_t)&unk_1EF1E28D0, v9);
  swift_release();
  return sub_1B8DFD73C();
}

uint64_t sub_1B8DC13CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 32) = a5;
  *(_QWORD *)(v5 + 16) = a4;
  sub_1B8DFDCE8();
  *(_QWORD *)(v5 + 24) = sub_1B8DFDCDC();
  sub_1B8DFDCB8();
  return swift_task_switch();
}

uint64_t sub_1B8DC143C()
{
  uint64_t v0;
  unsigned __int8 v1;
  unsigned __int8 v3;

  v1 = *(_BYTE *)(v0 + 32);
  swift_release();
  v3 = v1;
  sub_1B8DC1E18(&v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Clock.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1B8D9D154(v0 + OBJC_IVAR____TtC18MobileTimerSupport5Clock_lastOverrideTime, &qword_1EF1E20E8);
  v1 = v0 + OBJC_IVAR____TtC18MobileTimerSupport5Clock_dateInited;
  v2 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t Clock.__deallocating_deinit()
{
  Clock.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B8DC1580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 + 56) = a5;
  *(_QWORD *)(v5 + 16) = a4;
  v6 = sub_1B8DFD748();
  *(_QWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 40) = swift_task_alloc();
  sub_1B8DFDCE8();
  *(_QWORD *)(v5 + 48) = sub_1B8DFDCDC();
  sub_1B8DFDCB8();
  return swift_task_switch();
}

uint64_t sub_1B8DC1618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  swift_release();
  if (qword_1EF1E0F18 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 56);
  sub_1B8DFD73C();
  sub_1B8DC66B8(v1, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DC16DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_1B8DC16F8()
{
  uint64_t v0;

  sub_1B8DC683C(*(_QWORD *)(v0 + 24), *(double **)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DC1754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = a2;
  v15 = a1;
  v16 = a3;
  sub_1B8DC64C4((void (*)(char *, uint64_t))sub_1B8DC8F24);
  v9 = (os_unfair_lock_s *)(*(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC18MobileTimerSupport5Clock_overrideDateStream)
                                      + *(_QWORD *)(**(_QWORD **)(a1
                                                                + OBJC_IVAR____TtC18MobileTimerSupport5Clock_overrideDateStream)
                                                  + 104))
                          + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v9);
  swift_endAccess();
  sub_1B8DCDB58(a2);
  swift_beginAccess();
  os_unfair_lock_unlock(v9);
  swift_endAccess();
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC18MobileTimerSupport5Clock_textClock);
  sub_1B8D9D288(a2, (uint64_t)v8, (uint64_t *)&unk_1ED36F800);
  v11 = v10 + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B9TextClock_overrideDate;
  swift_beginAccess();
  sub_1B8DC8F30((uint64_t)v8, v11, (uint64_t *)&unk_1ED36F800);
  swift_endAccess();
  sub_1B8DC27DC();
  return sub_1B8D9D154((uint64_t)v8, (uint64_t *)&unk_1ED36F800);
}

uint64_t sub_1B8DC18C0(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  os_unfair_lock_s *v26;
  uint64_t v27;
  uint64_t v28;
  os_unfair_lock_s *v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  int v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  double v39;
  double v40;
  int v41;
  char v42;
  double v43;
  uint64_t v45;
  os_unfair_lock_s *v46;
  uint64_t v47;
  os_unfair_lock_s *v48;
  uint64_t v49;
  uint64_t v50;
  os_unfair_lock_s *v51;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  int v58;
  uint64_t v59;

  v56 = a5;
  v57 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v53 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v53 - v15;
  v17 = sub_1B8DFD748();
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v53 - v21;
  v58 = *a1;
  v24 = v23;
  sub_1B8D9D288(a3, (uint64_t)v16, (uint64_t *)&unk_1ED36F800);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v25(v16, 1, v17) == 1)
  {
    sub_1B8D9D154((uint64_t)v16, (uint64_t *)&unk_1ED36F800);
    if (qword_1EF1E0F18 != -1)
      swift_once();
    sub_1B8DFD73C();
    v26 = (os_unfair_lock_s *)(*(_QWORD *)(v57 + *(_QWORD *)(*(_QWORD *)v57 + 104)) + 16);
    swift_beginAccess();
    os_unfair_lock_lock(v26);
    swift_endAccess();
    sub_1B8DCD3B4((uint64_t)v20);
    swift_beginAccess();
    os_unfair_lock_unlock(v26);
    swift_endAccess();
    v22 = v20;
  }
  else
  {
    v55 = v11;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v22, v16, v17);
    v27 = v24;
    v53 = OBJC_IVAR____TtC18MobileTimerSupport5Clock__lastOverridePublishTimeByInterval;
    v54 = a4;
    v28 = *(_QWORD *)(a4 + OBJC_IVAR____TtC18MobileTimerSupport5Clock__lastOverridePublishTimeByInterval);
    v29 = (os_unfair_lock_s *)(*(_QWORD *)(v28 + 16) + 16);
    swift_beginAccess();
    sub_1B8DFD22C();
    os_unfair_lock_lock(v29);
    swift_beginAccess();
    v30 = *(_QWORD *)(v28 + 24);
    sub_1B8DFD3AC();
    os_unfair_lock_unlock(v29);
    swift_endAccess();
    swift_release();
    if (*(_QWORD *)(v30 + 16))
    {
      v31 = sub_1B8D9708C(v58);
      v24 = v27;
      if ((v32 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v27 + 16))(v14, *(_QWORD *)(v30 + 56) + *(_QWORD *)(v27 + 72) * v31, v17);
        v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
        v33(v14, 0, 1, v17);
      }
      else
      {
        v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
        v33(v14, 1, 1, v17);
      }
    }
    else
    {
      v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
      v33(v14, 1, 1, v17);
      v24 = v27;
    }
    swift_bridgeObjectRelease();
    v34 = v25(v14, 1, v17);
    v35 = (uint64_t)v55;
    if (v34)
    {
      sub_1B8D9D154((uint64_t)v14, (uint64_t *)&unk_1ED36F800);
      v36 = 0.0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v20, v14, v17);
      sub_1B8D9D154((uint64_t)v14, (uint64_t *)&unk_1ED36F800);
      sub_1B8DFD700();
      v36 = v37;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v20, v17);
    }
    v38 = v54;
    sub_1B8DFD700();
    v40 = vabdd_f64(v39, v36);
    v41 = v25(v56, 1, v17);
    v42 = v58;
    if (v58)
    {
      if (v58 == 1)
        v43 = 1.0;
      else
        v43 = 60.0;
    }
    else
    {
      v43 = 0.01666;
    }
    if (v40 > v43 || v41 == 1)
    {
      v45 = v24;
      v46 = (os_unfair_lock_s *)(*(_QWORD *)(v57 + *(_QWORD *)(*(_QWORD *)v57 + 104)) + 16);
      swift_beginAccess();
      os_unfair_lock_lock(v46);
      swift_endAccess();
      sub_1B8DCD3B4((uint64_t)v22);
      swift_beginAccess();
      os_unfair_lock_unlock(v46);
      swift_endAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v45 + 16))(v35, v22, v17);
      v33((char *)v35, 0, 1, v17);
      v47 = *(_QWORD *)(v38 + v53);
      v48 = (os_unfair_lock_s *)(*(_QWORD *)(v47 + 16) + 16);
      swift_beginAccess();
      sub_1B8DFD22C();
      os_unfair_lock_lock(v48);
      swift_beginAccess();
      v49 = *(_QWORD *)(v47 + 24);
      sub_1B8DFD3AC();
      os_unfair_lock_unlock(v48);
      swift_endAccess();
      v59 = v49;
      sub_1B8DC958C(v35, v42);
      v50 = v59;
      swift_beginAccess();
      os_unfair_lock_lock(v48);
      *(_QWORD *)(v47 + 24) = v50;
      sub_1B8DFD3AC();
      swift_bridgeObjectRelease();
      v51 = v48;
      v24 = v45;
      os_unfair_lock_unlock(v51);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v22, v17);
}

uint64_t sub_1B8DC1E18(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t aBlock;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;

  v2 = *a1;
  v3 = swift_allocObject();
  swift_weakInit();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_BYTE *)(v4 + 24) = v2;
  v5 = swift_allocObject();
  *(_BYTE *)(v5 + 16) = v2;
  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v7 = (uint64_t *)(v1 + 32);
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v1 + 32) + 16) || (sub_1B8D9708C(v2), (v8 & 1) == 0))
  {
    if (v2)
    {
      v9 = swift_allocObject();
      *(_QWORD *)(v9 + 16) = sub_1B8DC8DC0;
      *(_QWORD *)(v9 + 24) = v4;
      if (v2 == 1)
      {
        v26 = sub_1B8DC935C;
        v27 = v9;
        v10 = MEMORY[0x1E0C809B0];
        aBlock = MEMORY[0x1E0C809B0];
        v23 = 1107296256;
        v24 = sub_1B8DC24DC;
        v25 = &block_descriptor_57;
        v11 = _Block_copy(&aBlock);
        sub_1B8DFD22C();
        swift_release();
        v26 = sub_1B8DC8DDC;
        v27 = v5;
        aBlock = v10;
        v23 = 1107296256;
        v24 = sub_1B8DC2580;
        v25 = &block_descriptor_60;
        v12 = _Block_copy(&aBlock);
        sub_1B8DFD22C();
        swift_release();
        v13 = objc_msgSend(v6, sel_startSecondUpdatesWithHandler_identificationLog_, v11, v12);
      }
      else
      {
        v26 = sub_1B8DC8E08;
        v27 = v9;
        v16 = MEMORY[0x1E0C809B0];
        aBlock = MEMORY[0x1E0C809B0];
        v23 = 1107296256;
        v24 = sub_1B8DC24DC;
        v25 = &block_descriptor_47;
        v11 = _Block_copy(&aBlock);
        sub_1B8DFD22C();
        swift_release();
        v26 = sub_1B8DC8DDC;
        v27 = v5;
        aBlock = v16;
        v23 = 1107296256;
        v24 = sub_1B8DC2580;
        v25 = &block_descriptor_50;
        v12 = _Block_copy(&aBlock);
        sub_1B8DFD22C();
        swift_release();
        v13 = objc_msgSend(v6, sel_startMinuteUpdatesWithHandler_identificationLog_, v11, v12);
      }
    }
    else
    {
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = sub_1B8DC8DC0;
      *(_QWORD *)(v14 + 24) = v4;
      v26 = sub_1B8DC935C;
      v27 = v14;
      v15 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v23 = 1107296256;
      v24 = sub_1B8DC24DC;
      v25 = &block_descriptor_67;
      v11 = _Block_copy(&aBlock);
      sub_1B8DFD22C();
      swift_release();
      v26 = sub_1B8DC8DDC;
      v27 = v5;
      aBlock = v15;
      v23 = 1107296256;
      v24 = sub_1B8DC2580;
      v25 = &block_descriptor_70;
      v12 = _Block_copy(&aBlock);
      sub_1B8DFD22C();
      swift_release();
      v13 = objc_msgSend(v6, sel_start60fpsUpdatesWithHandler_identificationLog_, v11, v12);
    }
    v17 = v13;
    _Block_release(v12);
    _Block_release(v11);
    swift_beginAccess();
    v18 = v17;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v21 = *v7;
    *v7 = 0x8000000000000000;
    sub_1B8DF5544((uint64_t)v18, v2, isUniquelyReferenced_nonNull_native);
    *v7 = v21;
    swift_bridgeObjectRelease();
    swift_endAccess();

    v6 = v18;
  }

  swift_release();
  return swift_release();
}

uint64_t sub_1B8DC2230(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = MEMORY[0x1BCCBD264](result + 16);
    if (v8)
    {
      v9 = v8;
      if (sub_1B8DC06FC())
      {
        swift_unknownObjectRelease();
      }
      else
      {
        v10 = sub_1B8DFDD00();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
        sub_1B8DFDCE8();
        sub_1B8DFD22C();
        v11 = sub_1B8DFDCDC();
        v12 = swift_allocObject();
        v13 = MEMORY[0x1E0DF06E8];
        *(_QWORD *)(v12 + 16) = v11;
        *(_QWORD *)(v12 + 24) = v13;
        *(_QWORD *)(v12 + 32) = v9;
        *(_BYTE *)(v12 + 40) = a3;
        sub_1B8DBF29C((uint64_t)v6, (uint64_t)&unk_1EF1E28B0, v12);
        swift_release();
        swift_release();
      }
    }
    return swift_release();
  }
  return result;
}

unint64_t sub_1B8DC2380()
{
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  return 0xD000000000000013;
}

uint64_t sub_1B8DC2410(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B8DFD748();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  a2(v6);
  return sub_1B8D9D154((uint64_t)v6, (uint64_t *)&unk_1ED36F800);
}

uint64_t sub_1B8DC24DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_1B8DFD748();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_1B8DFD718();
  sub_1B8DFD22C();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_1B8DC2580(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  void *v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = sub_1B8DFD22C();
  v1(v2);
  swift_release();
  v3 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1B8DC25DC()
{
  uint64_t v0;

  sub_1B8DA7528(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1B8DC2608()
{
  sub_1B8DFE15C();
  sub_1B8DFE180();
  type metadata accessor for TextClockDescriptor(0);
  sub_1B8DFD8B0();
  sub_1B8DA760C((unint64_t *)&unk_1EF1E2800, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1490]);
  sub_1B8DFDAC0();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8DC26A0()
{
  sub_1B8DFE180();
  sub_1B8DFD8B0();
  sub_1B8DA760C((unint64_t *)&unk_1EF1E2800, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1490]);
  return sub_1B8DFDAC0();
}

uint64_t sub_1B8DC2720()
{
  sub_1B8DFE15C();
  sub_1B8DFE180();
  sub_1B8DFD8B0();
  sub_1B8DA760C((unint64_t *)&unk_1EF1E2800, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1490]);
  sub_1B8DFDAC0();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8DC27B4(double *a1, double *a2)
{
  if (*a1 == *a2)
    JUMPOUT(0x1BCCBC190);
  return 0;
}

void sub_1B8DC27DC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34[2];
  uint64_t v35;
  unsigned int (*v36)(_QWORD *, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v1);
  v39 = (uint64_t)v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2858);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v38 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (id *)((char *)v34 - v7);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2848);
  MEMORY[0x1E0C80A78](v9);
  v11 = (id *)((char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(_QWORD *)&v0[OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B9TextClock__timeFormatterByOffset];
  v13 = (os_unfair_lock_s *)(*(_QWORD *)(v12 + 16) + 16);
  swift_beginAccess();
  sub_1B8DFD22C();
  os_unfair_lock_lock(v13);
  swift_beginAccess();
  v14 = *(_QWORD *)(v12 + 24);
  sub_1B8DFD3AC();
  os_unfair_lock_unlock(v13);
  swift_endAccess();
  swift_release();
  v15 = -1 << *(_BYTE *)(v14 + 32);
  v16 = ~v15;
  v17 = *(_QWORD *)(v14 + 64);
  v18 = -v15;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  else
    v19 = -1;
  v40 = v14;
  v41 = v14 + 64;
  v42 = v16;
  v43 = 0;
  v44 = v19 & v17;
  v45 = 0;
  v20 = (uint64_t)&v0[OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B9TextClock_overrideDate];
  v34[1] = (id)v14;
  sub_1B8DFD3AC();
  v34[0] = v0;
  v37 = v20;
  swift_beginAccess();
  sub_1B8DC6A8C(v11);
  v36 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v4 + 48);
  if (v36(v11, 1, v3) != 1)
  {
    v35 = v3;
    do
    {
      sub_1B8DC8F74((uint64_t)v11, (uint64_t)v8, &qword_1EF1E2858);
      v21 = *(int *)(v3 + 48);
      v22 = v38;
      v23 = (uint64_t)&v38[v21];
      v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2870) + 48);
      v25 = (uint64_t)v8 + v21;
      *v22 = *v8;
      sub_1B8D9A42C(v25, v23, type metadata accessor for TextClockDescriptor);
      v26 = *(void **)(v25 + v24);
      *(_QWORD *)(v23 + v24) = v26;
      v27 = v39;
      sub_1B8D9D288(v37, v39, (uint64_t *)&unk_1ED36F800);
      v28 = sub_1B8DFD748();
      v29 = *(_QWORD *)(v28 - 8);
      v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28);
      v31 = v26;
      v32 = 0;
      if (v30 != 1)
      {
        v33 = v39;
        v32 = (void *)sub_1B8DFD6D0();
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v33, v28);
      }
      objc_msgSend(v31, sel_setOverrideDate_, v32);

      sub_1B8D9A088(v23, type metadata accessor for TextClockDescriptor);
      sub_1B8D9D154((uint64_t)v8, &qword_1EF1E2858);
      sub_1B8DC6A8C(v11);
      v3 = v35;
    }
    while (v36(v11, 1, v35) != 1);
  }
  sub_1B8DA7520();
  swift_bridgeObjectRelease();

}

id sub_1B8DC2C30()
{
  void *v0;
  objc_super v2;

  sub_1B8DC2D00();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextClock(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1B8DC2D00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  id result;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  os_unfair_lock_s *v18;

  v1 = OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B9TextClock__timeFormatterByOffset;
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B9TextClock__timeFormatterByOffset);
  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  swift_beginAccess();
  sub_1B8DFD22C();
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 + 24);
  sub_1B8DFD3AC();
  os_unfair_lock_unlock(v3);
  swift_endAccess();
  result = (id)swift_release();
  v6 = 0;
  v7 = v4 + 64;
  v8 = 1 << *(_BYTE *)(v4 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v4 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v11)
      goto LABEL_23;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      v6 = v14 + 1;
      if (v14 + 1 >= v11)
        goto LABEL_23;
      v15 = *(_QWORD *)(v7 + 8 * v6);
      if (!v15)
      {
        v6 = v14 + 2;
        if (v14 + 2 >= v11)
          goto LABEL_23;
        v15 = *(_QWORD *)(v7 + 8 * v6);
        if (!v15)
        {
          v6 = v14 + 3;
          if (v14 + 3 >= v11)
            goto LABEL_23;
          v15 = *(_QWORD *)(v7 + 8 * v6);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    result = objc_msgSend(*(id *)(*(_QWORD *)(v4 + 56) + 8 * v13), sel_removeObserver_, v0);
  }
  v16 = v14 + 4;
  if (v16 >= v11)
  {
LABEL_23:
    swift_release();
    v17 = *(_QWORD *)(v0 + v1);
    v18 = (os_unfair_lock_s *)(*(_QWORD *)(v17 + 16) + 16);
    swift_beginAccess();
    sub_1B8DFD22C();
    os_unfair_lock_lock(v18);
    swift_beginAccess();
    sub_1B8DFD3AC();
    os_unfair_lock_unlock(v18);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    os_unfair_lock_lock(v18);
    *(_QWORD *)(v17 + 24) = MEMORY[0x1E0DEE9E0];
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v18);
    swift_endAccess();
    return (id)swift_release();
  }
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      goto LABEL_23;
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_1B8DC2F78@<X0>(double *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id result;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B8DFD748();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v50 - v14;
  if (qword_1EF1E0F18 != -1)
    swift_once();
  sub_1B8DFD73C();
  if (*a1 != 0.0)
  {
    sub_1B8DFD6C4();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v13, v9);
  }
  v16 = *(_QWORD *)(a2
                  + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B9TextClock__timeFormatterByOffset);
  v17 = (os_unfair_lock_s *)(*(_QWORD *)(v16 + 16) + 16);
  swift_beginAccess();
  sub_1B8DFD22C();
  os_unfair_lock_lock(v17);
  swift_beginAccess();
  v18 = *(_QWORD *)(v16 + 24);
  sub_1B8DFD3AC();
  os_unfair_lock_unlock(v17);
  swift_endAccess();
  swift_release();
  if (*(_QWORD *)(v18 + 16) && (v19 = sub_1B8D970F0(a1), (v20 & 1) != 0))
  {
    v21 = *(id *)(*(_QWORD *)(v18 + 56) + 8 * v19);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C94550]), sel_init);
    v23 = a2 + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B9TextClock_overrideDate;
    swift_beginAccess();
    sub_1B8D9D288(v23, (uint64_t)v8, (uint64_t *)&unk_1ED36F800);
    LODWORD(v23) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
    v21 = v22;
    v24 = 0;
    if ((_DWORD)v23 != 1)
    {
      v24 = (void *)sub_1B8DFD6D0();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    }
    objc_msgSend(v21, sel_setOverrideDate_, v24);

    objc_msgSend(v21, sel_setTimeOffset_, *a1);
    type metadata accessor for TextClockDescriptor(0);
    v25 = (void *)sub_1B8DFD88C();
    objc_msgSend(v21, sel_setTimeZone_, v25);

  }
  result = objc_msgSend(v21, sel_timeText);
  if (!result)
  {
    __break(1u);
    goto LABEL_16;
  }
  v27 = result;
  v55 = v15;
  v28 = sub_1B8DFDB68();
  v56 = v29;
  v57 = v28;

  result = objc_msgSend(v21, sel_timeAndDesignatorText);
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v30 = result;
  v53 = v10;
  v54 = v9;
  v31 = sub_1B8DFDB68();
  v51 = v32;
  v52 = v31;

  v33 = objc_msgSend(v21, sel_designatorRangeInTimeAndDesignatorText);
  v35 = v34;
  result = objc_msgSend(v21, sel_timeSubstringToSeparatorText);
  if (result)
  {
    v36 = result;
    v37 = sub_1B8DFDB68();
    v39 = v38;

    v40 = objc_msgSend(v21, sel_separatorRangeInTimeText);
    v42 = v41;

    v43 = (char *)a1 + *(int *)(type metadata accessor for TextClockDescriptor(0) + 20);
    v44 = type metadata accessor for TimeString(0);
    v45 = &a3[*(int *)(v44 + 36)];
    v46 = sub_1B8DFD8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v45, v43, v46);
    v47 = v55;
    v48 = v56;
    *(_QWORD *)a3 = v57;
    *((_QWORD *)a3 + 1) = v48;
    v49 = v51;
    *((_QWORD *)a3 + 2) = v52;
    *((_QWORD *)a3 + 3) = v49;
    *((_QWORD *)a3 + 4) = v33;
    *((_QWORD *)a3 + 5) = v35;
    *((_QWORD *)a3 + 6) = v37;
    *((_QWORD *)a3 + 7) = v39;
    *((_QWORD *)a3 + 8) = v40;
    *((_QWORD *)a3 + 9) = v42;
    return (id)(*(uint64_t (**)(char *, char *, uint64_t))(v53 + 32))(&a3[*(int *)(v44 + 40)], v47, v54);
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1B8DC33A8@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2888);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)aBlock - v10;
  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
    return a1();
  v13 = type metadata accessor for TimeString(0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v11, 1, 1, v13);
  sub_1B8D9E394(0, (unint64_t *)&qword_1ED36F840);
  v15 = sub_1B8DFDDC0();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v11;
  v16[3] = a1;
  v16[4] = a2;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_1B8DC8D80;
  *(_QWORD *)(v17 + 24) = v16;
  aBlock[4] = sub_1B8DA792C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B8D8CD1C;
  aBlock[3] = &block_descriptor_32;
  v18 = _Block_copy(aBlock);
  sub_1B8DFD22C();
  swift_release();
  dispatch_sync(v15, v18);

  _Block_release(v18);
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v18 & 1) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_1B8D9D288((uint64_t)v11, (uint64_t)v9, &qword_1EF1E2888);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13);
  if ((_DWORD)result == 1)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  sub_1B8DBF258((uint64_t)v9, a3, type metadata accessor for TimeString);
  sub_1B8D9D154((uint64_t)v11, &qword_1EF1E2888);
  return swift_release();
}

uint64_t sub_1B8DC3608(void (*a1)(_QWORD *__return_ptr), uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  char v9;
  _QWORD aBlock[6];
  __int16 v11;

  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
  {
    a1(aBlock);
    return LOBYTE(aBlock[0]);
  }
  v11 = 256;
  sub_1B8D9E394(0, (unint64_t *)&qword_1ED36F840);
  v5 = sub_1B8DFDDC0();
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = &v11;
  v6[3] = a1;
  v6[4] = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1B8DC8B50;
  *(_QWORD *)(v7 + 24) = v6;
  aBlock[4] = sub_1B8DA01B0;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B8D8CD1C;
  aBlock[3] = &block_descriptor_7;
  v8 = _Block_copy(aBlock);
  sub_1B8DFD22C();
  swift_release();
  dispatch_sync((dispatch_queue_t)v5, v8);

  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v5 & 1) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if ((v11 & 0x100) != 0)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v9 = v11;
  swift_release();
  return v9 & 1;
}

void sub_1B8DC37A4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  os_unfair_lock_s *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  _QWORD *v62;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TimeString(0);
  v55 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v55 + 64);
  v9 = MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v9);
  v59 = (uint64_t)&v52 - v10;
  v11 = type metadata accessor for TextClockDescriptor(0);
  v62 = *(_QWORD **)(v11 - 8);
  v12 = v62[8];
  v13 = MEMORY[0x1E0C80A78](v11);
  v56 = (uint64_t)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v52 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2848);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2850);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v61 = (uint64_t)&v52 - v23;
  if (a1)
  {
    v53 = (uint64_t)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    v54 = v6;
    v60 = v15;
    v58 = v2;
    v24 = *(_QWORD *)(v2
                    + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B9TextClock__timeFormatterByOffset);
    v25 = (os_unfair_lock_s *)(*(_QWORD *)(v24 + 16) + 16);
    swift_beginAccess();
    v26 = a1;
    sub_1B8DFD22C();
    os_unfair_lock_lock(v25);
    swift_beginAccess();
    v27 = *(_QWORD *)(v24 + 24);
    sub_1B8DFD3AC();
    os_unfair_lock_unlock(v25);
    swift_endAccess();
    swift_release();
    v57 = v26;
    sub_1B8DC3D68(v27, v57, (uint64_t)v18);
    swift_bridgeObjectRelease();
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2858);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v18, 1, v28) == 1)
    {
      sub_1B8D9D154((uint64_t)v18, &qword_1EF1E2848);
      v29 = 1;
      v30 = v61;
    }
    else
    {
      v32 = (uint64_t)&v18[*(int *)(v28 + 48)];

      v30 = v61;
      sub_1B8DBF258(v32, v61, type metadata accessor for TextClockDescriptor);
      v29 = 0;
    }
    v33 = v62;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v62[7])(v30, v29, 1, v11);
    sub_1B8D9D288(v30, (uint64_t)v22, &qword_1EF1E2850);
    v34 = ((uint64_t (*)(char *, uint64_t, uint64_t))v33[6])(v22, 1, v11);
    v35 = (uint64_t)v60;
    v36 = v58;
    if (v34 == 1)
    {
      sub_1B8D9D154((uint64_t)v22, &qword_1EF1E2850);
      v37 = (void *)objc_opt_self();
      v38 = (void *)sub_1B8DFDB5C();
      objc_msgSend(v37, sel_logError_, v38);

      v39 = v30;
    }
    else
    {
      v40 = sub_1B8DBF258((uint64_t)v22, (uint64_t)v60, type metadata accessor for TextClockDescriptor);
      MEMORY[0x1E0C80A78](v40);
      *(&v52 - 2) = v35;
      *(&v52 - 1) = v36;
      v41 = v59;
      sub_1B8DC33A8((uint64_t (*)(void))sub_1B8DC8B9C, (uint64_t)(&v52 - 4), v59);
      v42 = MEMORY[0x1BCCBD264](v36 + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B9TextClock_delegate);
      if (v42)
      {
        v43 = v42;
        v44 = sub_1B8DFDD00();
        v45 = (uint64_t)v54;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v54, 1, 1, v44);
        v46 = v53;
        sub_1B8D9A42C(v41, v53, type metadata accessor for TimeString);
        v47 = v56;
        sub_1B8D9A42C(v35, v56, type metadata accessor for TextClockDescriptor);
        v48 = (*(unsigned __int8 *)(v55 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
        v49 = (v8 + *((unsigned __int8 *)v62 + 80) + v48) & ~(unint64_t)*((unsigned __int8 *)v62 + 80);
        v50 = (_QWORD *)swift_allocObject();
        v50[2] = 0;
        v50[3] = 0;
        v50[4] = v43;
        sub_1B8DBF258(v46, (uint64_t)v50 + v48, type metadata accessor for TimeString);
        sub_1B8DBF258(v47, (uint64_t)v50 + v49, type metadata accessor for TextClockDescriptor);
        sub_1B8DFD22C();
        v51 = (uint64_t)v50;
        v35 = (uint64_t)v60;
        sub_1B8DBF29C(v45, (uint64_t)&unk_1EF1E2868, v51);
        swift_release();

        swift_release();
      }
      else
      {

      }
      sub_1B8D9A088(v41, type metadata accessor for TimeString);
      sub_1B8D9A088(v35, type metadata accessor for TextClockDescriptor);
      v39 = v30;
    }
    sub_1B8D9D154(v39, &qword_1EF1E2850);
  }
  else
  {
    v31 = (void *)objc_opt_self();
    v62 = (_QWORD *)sub_1B8DFDB5C();
    objc_msgSend(v31, sel_logError_, v62);

  }
}

void sub_1B8DC3D68(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_QWORD *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;

  v20 = a3;
  v27 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2858);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2848);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = -1 << *(_BYTE *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 64);
  v13 = ~v11;
  v14 = -v11;
  v21 = a1;
  v22 = a1 + 64;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  else
    v15 = -1;
  v23 = v13;
  v24 = 0;
  v25 = v15 & v12;
  v26 = 0;
  sub_1B8DFD3AC();
  sub_1B8DC6A8C(v10);
  v19 = v5;
  v16 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v5 + 48);
  if (v16(v10, 1, v4) == 1)
  {
LABEL_7:
    sub_1B8DA7520();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v20, 1, 1, v4);
  }
  else
  {
    while (1)
    {
      sub_1B8DC8F74((uint64_t)v10, (uint64_t)v7, &qword_1EF1E2858);
      sub_1B8D9E394(0, (unint64_t *)&qword_1EF1E2890);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2870);
      if ((sub_1B8DFDE20() & 1) != 0)
        break;
      sub_1B8D9D154((uint64_t)v7, &qword_1EF1E2858);
      sub_1B8DC6A8C(v10);
      if (v16(v10, 1, v4) == 1)
        goto LABEL_7;
    }
    sub_1B8DA7520();
    v17 = v20;
    sub_1B8DC8F74((uint64_t)v7, v20, &qword_1EF1E2858);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v4);
  }

}

uint64_t sub_1B8DC3FE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  v4 = MEMORY[0x1E0C80A78](v3);
  v37 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v36 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E20E8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v38 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v36 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v36 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v36 - v16;
  v18 = type metadata accessor for OverrideTime(0);
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
  v20 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v20);
  swift_endAccess();
  v21 = v1 + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B13OverrideClock_lockedOverrideTime;
  swift_beginAccess();
  sub_1B8D9D154((uint64_t)v17, &qword_1EF1E20E8);
  sub_1B8D9D288(v21, (uint64_t)v17, &qword_1EF1E20E8);
  v40 = a1;
  sub_1B8D9D288(a1, (uint64_t)v15, &qword_1EF1E20E8);
  sub_1B8D9D288(v21, (uint64_t)v12, &qword_1EF1E20E8);
  swift_endAccess();
  swift_beginAccess();
  sub_1B8DC8F30((uint64_t)v15, v21, &qword_1EF1E20E8);
  swift_endAccess();
  sub_1B8DC45C8((uint64_t)v12);
  sub_1B8D9D154((uint64_t)v15, &qword_1EF1E20E8);
  sub_1B8D9D154((uint64_t)v12, &qword_1EF1E20E8);
  swift_beginAccess();
  os_unfair_lock_unlock(v20);
  swift_endAccess();
  v22 = MEMORY[0x1BCCBD264](v1 + 16);
  if (v22)
  {
    v23 = v22;
    v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
    v25 = 1;
    v26 = v24(v17, 1, v18);
    v27 = sub_1B8DFD748();
    v28 = *(_QWORD *)(v27 - 8);
    v29 = (uint64_t)v39;
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v39, v17, v27);
      v25 = 0;
    }
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
    v30(v29, v25, 1, v27);
    v31 = v38;
    sub_1B8D9D288(v40, v38, &qword_1EF1E20E8);
    if (v24((char *)v31, 1, v18) == 1)
    {
      sub_1B8D9D154(v31, &qword_1EF1E20E8);
      v32 = 1;
      v33 = (uint64_t)v37;
    }
    else
    {
      v33 = (uint64_t)v37;
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v37, v31, v27);
      sub_1B8D9A088(v31, type metadata accessor for OverrideTime);
      v32 = 0;
    }
    v30(v33, v32, 1, v27);
    v34 = MEMORY[0x1BCCBCAFC]("Clock:shared");
    if ((_DWORD)v34)
    {
      MEMORY[0x1E0C80A78](v34);
      *(&v36 - 4) = v23;
      *(&v36 - 3) = v33;
      *(&v36 - 2) = v29;
      sub_1B8DE2498(sub_1B8DC8F18, (uint64_t)(&v36 - 6));
    }
    swift_unknownObjectRelease();
    sub_1B8D9D154(v33, (uint64_t *)&unk_1ED36F800);
    sub_1B8D9D154(v29, (uint64_t *)&unk_1ED36F800);
  }
  sub_1B8D9D154(v40, &qword_1EF1E20E8);
  return sub_1B8D9D154((uint64_t)v17, &qword_1EF1E20E8);
}

void (*sub_1B8DC43D8(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t v9;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E20E8) - 8) + 64);
  v5 = malloc(v4);
  v3[10] = v5;
  v6 = malloc(v4);
  v3[11] = v6;
  v7 = type metadata accessor for OverrideTime(0);
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  v8 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v8);
  swift_endAccess();
  v9 = v1 + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B13OverrideClock_lockedOverrideTime;
  swift_beginAccess();
  sub_1B8D9D154((uint64_t)v5, &qword_1EF1E20E8);
  sub_1B8D9D288(v9, (uint64_t)v5, &qword_1EF1E20E8);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v8);
  swift_endAccess();
  sub_1B8DC8F74((uint64_t)v5, (uint64_t)v6, &qword_1EF1E20E8);
  return sub_1B8DC4534;
}

void sub_1B8DC4534(uint64_t a1, char a2)
{
  sub_1B8DC4540(a1, a2, (void (*)(void *))sub_1B8DC3FE0);
}

void sub_1B8DC4540(uint64_t a1, char a2, void (*a3)(void *))
{
  void *v4;
  void *v5;
  void *v6;

  v4 = *(void **)a1;
  v5 = *(void **)(*(_QWORD *)a1 + 80);
  v6 = *(void **)(*(_QWORD *)a1 + 88);
  if ((a2 & 1) != 0)
  {
    sub_1B8D9D288(*(_QWORD *)(*(_QWORD *)a1 + 88), (uint64_t)v5, &qword_1EF1E20E8);
    a3(v5);
    sub_1B8D9D154((uint64_t)v6, &qword_1EF1E20E8);
  }
  else
  {
    a3(*(void **)(*(_QWORD *)a1 + 88));
  }
  free(v6);
  free(v5);
  free(v4);
}

uint64_t sub_1B8DC45C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  uint64_t v13;
  uint64_t result;
  _QWORD v15[2];
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E20E8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v15 - v7;
  v16 = v1;
  v9 = v1 + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B13OverrideClock_lockedOverrideTime;
  swift_beginAccess();
  v10 = type metadata accessor for OverrideTime(0);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  v12 = v11(v9, 1, v10);
  v13 = 0;
  if (!v12)
    v13 = *(_QWORD *)(v9 + *(int *)(v10 + 20) + 16);
  v15[1] = v13;
  sub_1B8D9D288(a1, (uint64_t)v8, &qword_1EF1E20E8);
  if (v11((uint64_t)v8, 1, v10) == 1)
  {
    result = sub_1B8D9D154((uint64_t)v8, &qword_1EF1E20E8);
    if (v12)
      return result;
    goto LABEL_9;
  }
  v15[0] = *(_QWORD *)&v8[*(int *)(v10 + 20) + 24];
  sub_1B8D9A088((uint64_t)v8, type metadata accessor for OverrideTime);
  if (v12 || (sub_1B8DFE1BC() & 1) == 0 || (result = sub_1B8DFE1BC(), (result & 1) == 0))
  {
LABEL_9:
    sub_1B8D9D288(v9, (uint64_t)v6, &qword_1EF1E20E8);
    sub_1B8DC5658((uint64_t)v6);
    return sub_1B8D9D154((uint64_t)v6, &qword_1EF1E20E8);
  }
  return result;
}

_QWORD *sub_1B8DC479C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[3] = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for MTSUnfairLock();
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 16) = 0;
  v1[5] = v6;
  v7 = (char *)v1
     + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B13OverrideClock_lockedOverrideTime;
  v8 = type metadata accessor for OverrideTime(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(_QWORD *)((char *)v1
            + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B13OverrideClock_advanceTimeTask) = 0;
  v9 = (char *)v1
     + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B13OverrideClock_initializationTime;
  sub_1B8DFD724();
  v10 = sub_1B8DFD748();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 0, 1, v10);
  v1[4] = a1;
  if (a1)
  {
    v11 = sub_1B8DFDD00();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 1, v11);
    v12 = swift_allocObject();
    swift_weakInit();
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = a1;
    v13[5] = v12;
    sub_1B8DFD22C();
    sub_1B8D8DEC0((uint64_t)v5, (uint64_t)&unk_1EF1E2918, (uint64_t)v13);
    swift_release();
  }
  return v1;
}

uint64_t sub_1B8DC4938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[18] = a4;
  v5[19] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  v5[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E20E8);
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  v6 = sub_1B8DFD748();
  v5[23] = v6;
  v5[24] = *(_QWORD *)(v6 - 8);
  v5[25] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  v5[26] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[27] = v8;
  v5[28] = *(_QWORD *)(v8 + 64);
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  v5[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2920);
  v5[33] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2928);
  v5[34] = v9;
  v5[35] = *(_QWORD *)(v9 - 8);
  v5[36] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2930);
  v5[37] = v10;
  v5[38] = *(_QWORD *)(v10 - 8);
  v5[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B8DC4AC4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[35];
  v1 = v0[36];
  v3 = v0[34];
  v4 = v0[18];
  v5 = *(_QWORD *)(v4 + 32);
  sub_1B8DFD22C();
  sub_1B8DC9F9C(v5, v4, v1);
  sub_1B8DFDD30();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v6 = (_QWORD *)swift_task_alloc();
  v0[40] = v6;
  *v6 = v0;
  v6[1] = sub_1B8DC4BA4;
  return sub_1B8DFDD3C();
}

uint64_t sub_1B8DC4BA4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8DC4BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  void (*v18)(uint64_t, uint64_t);
  int v19;
  uint64_t v20;
  uint64_t v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;

  v1 = *(_QWORD *)(v0 + 264);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 216) + 48))(v1, 1, *(_QWORD *)(v0 + 208)) == 1)goto LABEL_7;
  sub_1B8DC8F74(v1, *(_QWORD *)(v0 + 256), (uint64_t *)&unk_1ED36F800);
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_1B8D9D154(*(_QWORD *)(v0 + 256), (uint64_t *)&unk_1ED36F800);
LABEL_7:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = Strong;
  v4 = *(_QWORD *)(v0 + 248);
  v6 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 192);
  v7 = Strong
     + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B13OverrideClock_initializationTime;
  sub_1B8D9D288(Strong + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B13OverrideClock_initializationTime, v4, (uint64_t *)&unk_1ED36F800);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  result = v8(v4, 1, v6);
  if ((_DWORD)result != 1)
  {
    v11 = *(_QWORD *)(v0 + 240);
    v10 = *(_QWORD *)(v0 + 248);
    v13 = *(_QWORD *)(v0 + 192);
    v12 = *(_QWORD *)(v0 + 200);
    v14 = *(_QWORD *)(v0 + 184);
    v42 = *(_QWORD *)(v0 + 176);
    v15 = *(_QWORD *)(v0 + 168);
    sub_1B8DFD724();
    sub_1B8DFD6B8();
    v17 = v16;
    v18 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v18(v12, v14);
    v18(v10, v14);
    sub_1B8D9D288(v7, v11, (uint64_t *)&unk_1ED36F800);
    v19 = v8(v11, 1, v14);
    sub_1B8D9D154(v11, (uint64_t *)&unk_1ED36F800);
    v20 = type metadata accessor for OverrideTime(0);
    v21 = *(_QWORD *)(v20 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v15, 1, 1, v20);
    v22 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + 40) + 16);
    swift_beginAccess();
    os_unfair_lock_lock(v22);
    swift_endAccess();
    v23 = v3
        + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B13OverrideClock_lockedOverrideTime;
    swift_beginAccess();
    sub_1B8D9D154(v15, &qword_1EF1E20E8);
    sub_1B8D9D288(v23, v15, &qword_1EF1E20E8);
    swift_endAccess();
    swift_beginAccess();
    os_unfair_lock_unlock(v22);
    swift_endAccess();
    sub_1B8DC8F74(v15, v42, &qword_1EF1E20E8);
    v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v42, 1, v20);
    v25 = *(_QWORD *)(v0 + 176);
    if (v24 == 1)
    {
      sub_1B8D9D154(v25, &qword_1EF1E20E8);
    }
    else
    {
      sub_1B8D9D154(v25, &qword_1EF1E20E8);
      if (v19 != 1 && v17 <= 1.0)
      {
        sub_1B8D9D154(*(_QWORD *)(v0 + 256), (uint64_t *)&unk_1ED36F800);
        swift_release();
LABEL_19:
        v41 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 320) = v41;
        *v41 = v0;
        v41[1] = sub_1B8DC4BA4;
        return sub_1B8DFDD3C();
      }
    }
    v26 = *(_QWORD *)(v0 + 256);
    v27 = *(_QWORD *)(v0 + 232);
    v28 = *(_QWORD *)(v0 + 216);
    v29 = *(_QWORD *)(v0 + 160);
    v30 = sub_1B8DFDD00();
    v31 = *(_QWORD *)(v30 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v29, 1, 1, v30);
    sub_1B8D9D288(v26, v27, (uint64_t *)&unk_1ED36F800);
    v32 = (*(unsigned __int8 *)(v28 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v33 = (_QWORD *)swift_allocObject();
    v33[2] = 0;
    v34 = v33 + 2;
    v33[3] = 0;
    v33[4] = v3;
    sub_1B8DC8F74(v27, (uint64_t)v33 + v32, (uint64_t *)&unk_1ED36F800);
    LODWORD(v27) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30);
    sub_1B8DFD22C();
    v35 = *(_QWORD *)(v0 + 160);
    if ((_DWORD)v27 == 1)
    {
      sub_1B8D9D154(*(_QWORD *)(v0 + 160), &qword_1ED36F320);
      if (*v34)
      {
LABEL_13:
        swift_getObjectType();
        swift_unknownObjectRetain();
        v36 = sub_1B8DFDCB8();
        v38 = v37;
        swift_unknownObjectRelease();
LABEL_16:
        v39 = swift_allocObject();
        *(_QWORD *)(v39 + 16) = &unk_1EF1E2940;
        *(_QWORD *)(v39 + 24) = v33;
        if (v38 | v36)
        {
          *(_QWORD *)(v0 + 16) = 0;
          *(_QWORD *)(v0 + 24) = 0;
          *(_QWORD *)(v0 + 32) = v36;
          *(_QWORD *)(v0 + 40) = v38;
        }
        v40 = *(_QWORD *)(v0 + 256);
        swift_task_create();
        swift_release();
        swift_release();
        sub_1B8D9D154(v40, (uint64_t *)&unk_1ED36F800);
        goto LABEL_19;
      }
    }
    else
    {
      sub_1B8DFDCF4();
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v35, v30);
      if (*v34)
        goto LABEL_13;
    }
    v36 = 0;
    v38 = 0;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B8DC5180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[8] = a4;
  v5[9] = a5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  v5[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B8DC51DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 1, 1, v4);
  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v5);
  swift_endAccess();
  sub_1B8DC5328(v1, v3, v2);
  swift_beginAccess();
  os_unfair_lock_unlock(v5);
  swift_endAccess();
  v6 = MEMORY[0x1BCCBD264](v3 + 16);
  if (v6)
  {
    v7 = v6;
    if (MEMORY[0x1BCCBCAFC]("Clock:shared"))
    {
      v8 = swift_task_alloc();
      v9 = *(_OWORD *)(v0 + 72);
      *(_QWORD *)(v8 + 16) = v7;
      *(_OWORD *)(v8 + 24) = v9;
      sub_1B8DE2498(sub_1B8DC9358, v8);
      swift_unknownObjectRelease();
      swift_task_dealloc();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  sub_1B8D9D154(*(_QWORD *)(v0 + 80), (uint64_t *)&unk_1ED36F800);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DC5328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E20E8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v38 = (uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v36 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v36 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  v15 = MEMORY[0x1E0C80A78](v14);
  v36 = (uint64_t)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v36 - v17;
  v19 = a2 + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B13OverrideClock_lockedOverrideTime;
  swift_beginAccess();
  sub_1B8D9D288(v19, (uint64_t)v13, &qword_1EF1E20E8);
  v20 = type metadata accessor for OverrideTime(0);
  v37 = *(_QWORD *)(v20 - 8);
  v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48))(v13, 1, v20);
  v39 = a2;
  if (v21)
  {
    sub_1B8D9D154((uint64_t)v13, &qword_1EF1E20E8);
    v22 = sub_1B8DFD748();
    v23 = *(_QWORD *)(v22 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v18, 1, 1, v22);
  }
  else
  {
    v22 = sub_1B8DFD748();
    v23 = *(_QWORD *)(v22 - 8);
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v18, v13, v22);
    sub_1B8D9D154((uint64_t)v13, &qword_1EF1E20E8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v18, 0, 1, v22);
  }
  sub_1B8DC92C8((uint64_t)v18, a1, (uint64_t *)&unk_1ED36F800);
  sub_1B8DFD748();
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  v25 = 1;
  if (v24(a3, 1, v22) == 1)
    goto LABEL_7;
  v26 = v36;
  sub_1B8D9D288(a3, v36, (uint64_t *)&unk_1ED36F800);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v24)(v26, 1, v22);
  if ((_DWORD)result != 1)
  {
    v28 = sub_1B8DFE1C8();
    v30 = v29;
    v31 = sub_1B8DFE1C8();
    v33 = v32;
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v11, v26, v22);
    v25 = 0;
    v34 = (uint64_t *)&v11[*(int *)(v20 + 20)];
    *v34 = v28;
    v34[1] = v30;
    v34[2] = v31;
    v34[3] = v33;
LABEL_7:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v11, v25, 1, v20);
    v35 = v38;
    sub_1B8D9D288(v19, v38, &qword_1EF1E20E8);
    swift_beginAccess();
    sub_1B8DC8F30((uint64_t)v11, v19, &qword_1EF1E20E8);
    swift_endAccess();
    sub_1B8DC45C8(v35);
    sub_1B8D9D154((uint64_t)v11, &qword_1EF1E20E8);
    return sub_1B8D9D154(v35, &qword_1EF1E20E8);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B8DC5658(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E20E8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B13OverrideClock_advanceTimeTask;
  if (*(_QWORD *)(v1
                 + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B13OverrideClock_advanceTimeTask))
  {
    sub_1B8DFD22C();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1E2810);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1108);
    sub_1B8DFDD54();
    swift_release();
  }
  *(_QWORD *)(v1 + v9) = 0;
  swift_release();
  sub_1B8D9D288(a1, (uint64_t)v8, &qword_1EF1E20E8);
  v10 = type metadata accessor for OverrideTime(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10) == 1)
    return sub_1B8D9D154((uint64_t)v8, &qword_1EF1E20E8);
  v12 = &v8[*(int *)(v10 + 20)];
  v13 = *(_QWORD *)v12;
  v14 = *((_QWORD *)v12 + 1);
  v15 = *((_QWORD *)v12 + 2);
  v16 = *((_QWORD *)v12 + 3);
  sub_1B8D9A088((uint64_t)v8, type metadata accessor for OverrideTime);
  sub_1B8DFE1C8();
  result = sub_1B8DFE1BC();
  if ((result & 1) == 0)
  {
    sub_1B8DFE1C8();
    result = sub_1B8DFE1BC();
    if ((result & 1) == 0)
    {
      v17 = sub_1B8DFDD00();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v5, 1, 1, v17);
      v18 = swift_allocObject();
      swift_weakInit();
      v19 = (_QWORD *)swift_allocObject();
      v19[2] = 0;
      v19[3] = 0;
      v19[4] = v18;
      v19[5] = v13;
      v19[6] = v14;
      v19[7] = v15;
      v19[8] = v16;
      *(_QWORD *)(v1 + v9) = sub_1B8DBF3D0((uint64_t)v5, (uint64_t)&unk_1EF1E2828, (uint64_t)v19);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1B8DC58A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[17] = a1;
  v8[18] = a4;
  v9 = sub_1B8DFDF88();
  v8[23] = v9;
  v8[24] = *(_QWORD *)(v9 - 8);
  v8[25] = swift_task_alloc();
  v10 = sub_1B8DFDF7C();
  v8[26] = v10;
  v8[27] = *(_QWORD *)(v10 - 8);
  v8[28] = swift_task_alloc();
  v8[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E20E8);
  v8[30] = swift_task_alloc();
  v8[31] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  v8[32] = swift_task_alloc();
  v11 = sub_1B8DFD748();
  v8[33] = v11;
  v8[34] = *(_QWORD *)(v11 - 8);
  v8[35] = swift_task_alloc();
  v8[36] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B8DC59D4()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  _QWORD *v25;
  uint64_t v26;

  if ((sub_1B8DFDD60() & 1) != 0
    || (swift_beginAccess(), Strong = swift_weakLoadStrong(), (*(_QWORD *)(v0 + 296) = Strong) == 0))
  {
    **(_BYTE **)(v0 + 136) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = Strong;
  v3 = *(_QWORD *)(v0 + 240);
  v26 = *(_QWORD *)(v0 + 248);
  v4 = type metadata accessor for OverrideTime(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  v6 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v6);
  swift_endAccess();
  v7 = v2 + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B13OverrideClock_lockedOverrideTime;
  swift_beginAccess();
  sub_1B8D9D154(v3, &qword_1EF1E20E8);
  sub_1B8D9D288(v7, v3, &qword_1EF1E20E8);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v6);
  swift_endAccess();
  sub_1B8DC8F74(v3, v26, &qword_1EF1E20E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v26, 1, v4))
  {
    v8 = *(_QWORD *)(v0 + 264);
    v9 = *(_QWORD *)(v0 + 272);
    v10 = *(_QWORD *)(v0 + 256);
    sub_1B8D9D154(*(_QWORD *)(v0 + 248), &qword_1EF1E20E8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v10, 1, 1, v8);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 272);
    v12 = *(_QWORD *)(v0 + 280);
    v15 = *(_QWORD *)(v0 + 256);
    v14 = *(_QWORD *)(v0 + 264);
    v16 = *(_QWORD *)(v0 + 248);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v16, v14);
    sub_1B8D9D154(v16, &qword_1EF1E20E8);
    sub_1B8DFE1B0();
    sub_1B8DFE1B0();
    sub_1B8DFD6C4();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v14);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v14) != 1)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 32))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));
      goto LABEL_8;
    }
  }
  v17 = *(_QWORD *)(v0 + 256);
  sub_1B8DFD724();
  sub_1B8D9D154(v17, (uint64_t *)&unk_1ED36F800);
LABEL_8:
  v18 = *(_QWORD *)(v0 + 288);
  v19 = *(_QWORD *)(v0 + 224);
  v21 = *(_QWORD *)(v0 + 208);
  v20 = *(_QWORD *)(v0 + 216);
  v22 = swift_task_alloc();
  *(_QWORD *)(v22 + 16) = v2;
  *(_QWORD *)(v22 + 24) = v18;
  sub_1B8DC3608((void (*)(_QWORD *__return_ptr))sub_1B8DC8B38, v22);
  swift_task_dealloc();
  sub_1B8DFDF64();
  sub_1B8DFE1B0();
  sub_1B8DFE1B0();
  v23 = sub_1B8DFE1D4();
  MEMORY[0x1BCCBC868](v23);
  v24 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  *(_QWORD *)(v0 + 304) = v24;
  v24(v19, v21);
  *(_QWORD *)(v0 + 120) = 0;
  *(_QWORD *)(v0 + 112) = 0;
  *(_BYTE *)(v0 + 128) = 1;
  sub_1B8DFE114();
  v25 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v25;
  sub_1B8DA760C((unint64_t *)&unk_1EF1E2838, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0BA0], MEMORY[0x1E0DF0BB0]);
  *v25 = v0;
  v25[1] = sub_1B8DC5E00;
  return sub_1B8DFDD6C();
}

uint64_t sub_1B8DC5E00()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 320) = v0;
  swift_task_dealloc();
  v3 = (void (*)(uint64_t, uint64_t))v2[38];
  v4 = v2[29];
  v5 = v2[26];
  (*(void (**)(_QWORD, _QWORD))(v2[24] + 8))(v2[25], v2[23]);
  v3(v4, v5);
  return swift_task_switch();
}

uint64_t sub_1B8DC5EB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  _QWORD *v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 272);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  if ((sub_1B8DFDD60() & 1) != 0 || (Strong = swift_weakLoadStrong(), (*(_QWORD *)(v0 + 296) = Strong) == 0))
  {
    **(_BYTE **)(v0 + 136) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = Strong;
  v6 = *(_QWORD *)(v0 + 240);
  v29 = *(_QWORD *)(v0 + 248);
  v7 = type metadata accessor for OverrideTime(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  v9 = (os_unfair_lock_s *)(*(_QWORD *)(v5 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v9);
  swift_endAccess();
  v10 = v5 + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B13OverrideClock_lockedOverrideTime;
  swift_beginAccess();
  sub_1B8D9D154(v6, &qword_1EF1E20E8);
  sub_1B8D9D288(v10, v6, &qword_1EF1E20E8);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v9);
  swift_endAccess();
  sub_1B8DC8F74(v6, v29, &qword_1EF1E20E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v29, 1, v7))
  {
    v11 = *(_QWORD *)(v0 + 264);
    v12 = *(_QWORD *)(v0 + 272);
    v13 = *(_QWORD *)(v0 + 256);
    sub_1B8D9D154(*(_QWORD *)(v0 + 248), &qword_1EF1E20E8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v13, 1, 1, v11);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 272);
    v15 = *(_QWORD *)(v0 + 280);
    v18 = *(_QWORD *)(v0 + 256);
    v17 = *(_QWORD *)(v0 + 264);
    v19 = *(_QWORD *)(v0 + 248);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v19, v17);
    sub_1B8D9D154(v19, &qword_1EF1E20E8);
    sub_1B8DFE1B0();
    sub_1B8DFE1B0();
    sub_1B8DFD6C4();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v18, 0, 1, v17);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v18, 1, v17) != 1)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 32))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));
      goto LABEL_8;
    }
  }
  v20 = *(_QWORD *)(v0 + 256);
  sub_1B8DFD724();
  sub_1B8D9D154(v20, (uint64_t *)&unk_1ED36F800);
LABEL_8:
  v21 = *(_QWORD *)(v0 + 288);
  v22 = *(_QWORD *)(v0 + 224);
  v24 = *(_QWORD *)(v0 + 208);
  v23 = *(_QWORD *)(v0 + 216);
  v25 = swift_task_alloc();
  *(_QWORD *)(v25 + 16) = v5;
  *(_QWORD *)(v25 + 24) = v21;
  sub_1B8DC3608((void (*)(_QWORD *__return_ptr))sub_1B8DC8B38, v25);
  swift_task_dealloc();
  sub_1B8DFDF64();
  sub_1B8DFE1B0();
  sub_1B8DFE1B0();
  v26 = sub_1B8DFE1D4();
  MEMORY[0x1BCCBC868](v26);
  v27 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  *(_QWORD *)(v0 + 304) = v27;
  v27(v22, v24);
  *(_QWORD *)(v0 + 120) = 0;
  *(_QWORD *)(v0 + 112) = 0;
  *(_BYTE *)(v0 + 128) = 1;
  sub_1B8DFE114();
  v28 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v28;
  sub_1B8DA760C((unint64_t *)&unk_1EF1E2838, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0BA0], MEMORY[0x1E0DF0BB0]);
  *v28 = v0;
  v28[1] = sub_1B8DC5E00;
  return sub_1B8DFDD6C();
}

uint64_t sub_1B8DC62E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 264);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DC63A0@<X0>(uint64_t a1@<X1>, BOOL *a2@<X8>)
{
  void (*v4)(uint64_t, char);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[4];

  v4 = sub_1B8DC43D8(v11);
  v6 = v5;
  v7 = type metadata accessor for OverrideTime(0);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!v8)
  {
    v9 = sub_1B8DFD748();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v6, a1, v9);
  }
  result = ((uint64_t (*)(_QWORD *, _QWORD))v4)(v11, 0);
  *a2 = v8 != 0;
  return result;
}

uint64_t sub_1B8DC644C()
{
  uint64_t v0;

  sub_1B8DA7528(v0 + 16);
  swift_release();
  swift_release();
  sub_1B8D9D154(v0 + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B13OverrideClock_lockedOverrideTime, &qword_1EF1E20E8);
  swift_release();
  sub_1B8D9D154(v0 + OBJC_IVAR____TtC18MobileTimerSupportP33_F15BF02653F44D6D9AC85F90DB61595B13OverrideClock_initializationTime, (uint64_t *)&unk_1ED36F800);
  return swift_deallocClassInstance();
}

uint64_t sub_1B8DC64C4(void (*a1)(char *, uint64_t))
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  char v19[24];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v3);
  swift_endAccess();
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 24);
  v5 = v4 + 64;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v4 + 64);
  v9 = (unint64_t)(63 - v6) >> 6;
  result = sub_1B8DFD3AC();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_6;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v15 >= v9)
      goto LABEL_22;
    v16 = *(_QWORD *)(v5 + 8 * v15);
    v17 = v11 + 1;
    if (!v16)
    {
      v17 = v11 + 2;
      if (v11 + 2 >= v9)
        goto LABEL_22;
      v16 = *(_QWORD *)(v5 + 8 * v17);
      if (!v16)
      {
        v17 = v11 + 3;
        if (v11 + 3 >= v9)
          goto LABEL_22;
        v16 = *(_QWORD *)(v5 + 8 * v17);
        if (!v16)
          break;
      }
    }
LABEL_21:
    v8 = (v16 - 1) & v16;
    v13 = __clz(__rbit64(v16)) + (v17 << 6);
    v11 = v17;
LABEL_6:
    v14 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v13);
    v19[0] = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v13);
    sub_1B8DFD22C();
    a1(v19, v14);
    result = swift_release();
  }
  v18 = v11 + 4;
  if (v11 + 4 >= v9)
  {
LABEL_22:
    sub_1B8DA7520();
    swift_beginAccess();
    os_unfair_lock_unlock(v3);
    return swift_endAccess();
  }
  v16 = *(_QWORD *)(v5 + 8 * v18);
  if (v16)
  {
    v17 = v11 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v17 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v17 >= v9)
      goto LABEL_22;
    v16 = *(_QWORD *)(v5 + 8 * v17);
    ++v18;
    if (v16)
      goto LABEL_21;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1B8DC66B8(uint64_t a1, char a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  os_unfair_lock_s *v10;

  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v5);
  swift_endAccess();
  swift_beginAccess();
  v6 = *(_QWORD *)(v2 + 24);
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_1B8D9708C(a2), (v8 & 1) != 0))
  {
    v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
    v10 = (os_unfair_lock_s *)(*(_QWORD *)(v9 + *(_QWORD *)(*(_QWORD *)v9 + 104)) + 16);
    swift_beginAccess();
    sub_1B8DFD22C();
    os_unfair_lock_lock(v10);
    swift_endAccess();
    sub_1B8DCD3B4(a1);
    swift_beginAccess();
    os_unfair_lock_unlock(v10);
    swift_endAccess();
    swift_release();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E28B8);
    sub_1B8D87FFC(&qword_1EF1E28C0, &qword_1EF1E28B8, (uint64_t)&unk_1B8E03420);
    swift_allocError();
    swift_willThrow();
  }
  swift_beginAccess();
  os_unfair_lock_unlock(v5);
  return swift_endAccess();
}

uint64_t sub_1B8DC683C(uint64_t a1, double *a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  os_unfair_lock_s *v10;

  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v5);
  swift_endAccess();
  swift_beginAccess();
  v6 = *(_QWORD *)(v2 + 24);
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_5;
  sub_1B8DFD3AC();
  v7 = sub_1B8D970F0(a2);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2878);
    sub_1B8D87FFC(&qword_1EF1E2880, &qword_1EF1E2878, (uint64_t)&unk_1B8E03420);
    swift_allocError();
    swift_willThrow();
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
  sub_1B8DFD22C();
  swift_bridgeObjectRelease();
  v10 = (os_unfair_lock_s *)(*(_QWORD *)(v9 + *(_QWORD *)(*(_QWORD *)v9 + 104)) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v10);
  swift_endAccess();
  sub_1B8DCD78C(a1);
  swift_beginAccess();
  os_unfair_lock_unlock(v10);
  swift_endAccess();
  swift_release();
LABEL_6:
  swift_beginAccess();
  os_unfair_lock_unlock(v5);
  return swift_endAccess();
}

uint64_t sub_1B8DC69DC(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2888);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(v5);
  v8 = type metadata accessor for TimeString(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 0, 1, v8);
  return sub_1B8DC92C8((uint64_t)v7, a1, &qword_1EF1E2888);
}

uint64_t sub_1B8DC6A8C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  int64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;

  v45 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2858);
  v44 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TextClockDescriptor(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2898);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2870);
  v12 = *(_QWORD *)(v46 - 8);
  result = MEMORY[0x1E0C80A78](v46);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *v1;
  v16 = v1[1];
  v19 = v1[2];
  v18 = v1[3];
  v20 = v18;
  v21 = v1[4];
  v40 = v15;
  v41 = v4;
  v47 = v19;
  if (v21)
  {
    v42 = v2;
    v43 = v16;
    v22 = v12;
    v23 = (v21 - 1) & v21;
    v24 = __clz(__rbit64(v21)) | (v18 << 6);
LABEL_3:
    sub_1B8D9A42C(*(_QWORD *)(v17 + 48) + *(_QWORD *)(v6 + 72) * v24, (uint64_t)v8, type metadata accessor for TextClockDescriptor);
    v25 = *(void **)(*(_QWORD *)(v17 + 56) + 8 * v24);
    v26 = *(int *)(v46 + 48);
    v27 = (uint64_t)v8;
    v28 = v46;
    sub_1B8DBF258(v27, (uint64_t)v11, type metadata accessor for TextClockDescriptor);
    *(_QWORD *)&v11[v26] = v25;
    v12 = v22;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v11, 0, 1, v28);
    v29 = v25;
    v2 = v42;
    v16 = v43;
    goto LABEL_23;
  }
  v30 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
LABEL_29:
    __break(1u);
    return result;
  }
  v31 = (unint64_t)(v19 + 64) >> 6;
  if (v30 < v31)
  {
    v32 = *(_QWORD *)(v16 + 8 * v30);
    if (v32)
    {
LABEL_7:
      v42 = v2;
      v43 = v16;
      v22 = v12;
      v23 = (v32 - 1) & v32;
      v24 = __clz(__rbit64(v32)) + (v30 << 6);
      v20 = v30;
      goto LABEL_3;
    }
    v33 = v18 + 2;
    v20 = v18 + 1;
    if (v18 + 2 < v31)
    {
      v32 = *(_QWORD *)(v16 + 8 * v33);
      if (v32)
      {
LABEL_10:
        v30 = v33;
        goto LABEL_7;
      }
      v20 = v18 + 2;
      if (v18 + 3 < v31)
      {
        v32 = *(_QWORD *)(v16 + 8 * (v18 + 3));
        if (v32)
        {
          v30 = v18 + 3;
          goto LABEL_7;
        }
        v33 = v18 + 4;
        v20 = v18 + 3;
        if (v18 + 4 < v31)
        {
          v32 = *(_QWORD *)(v16 + 8 * v33);
          if (v32)
            goto LABEL_10;
          v30 = v18 + 5;
          v20 = v18 + 4;
          if (v18 + 5 < v31)
          {
            v32 = *(_QWORD *)(v16 + 8 * v30);
            if (v32)
              goto LABEL_7;
            v20 = v31 - 1;
            v34 = v18 + 6;
            while (v31 != v34)
            {
              v32 = *(_QWORD *)(v16 + 8 * v34++);
              if (v32)
              {
                v30 = v34 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v28 = v46;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v11, 1, 1, v46);
  v23 = 0;
LABEL_23:
  *v1 = v17;
  v1[1] = v16;
  v1[2] = v47;
  v1[3] = v20;
  v1[4] = v23;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v28) == 1)
  {
    sub_1B8D9D154((uint64_t)v11, &qword_1EF1E2898);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v45, 1, 1, v2);
  }
  v35 = (uint64_t)v40;
  sub_1B8DC8F74((uint64_t)v11, (uint64_t)v40, &qword_1EF1E2870);
  v36 = (uint64_t)&v41[*(int *)(v2 + 48)];
  v37 = v1[5];
  result = sub_1B8DC8F74(v35, v36, &qword_1EF1E2870);
  if (__OFADD__(v37, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  v1[5] = v37 + 1;
  v38 = v45;
  v39 = (uint64_t)v45 + *(int *)(v2 + 48);
  *v45 = v37;
  sub_1B8DC8F74(v36, v39, &qword_1EF1E2870);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v38, 0, 1, v2);
}

uint64_t _s18MobileTimerSupport10TimeStringV1loiySbAC_ACtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void (*v5)(char *, uint64_t);
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = sub_1B8DFD748();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TimeString(0);
  sub_1B8DFD73C();
  v4 = sub_1B8DFD874();
  v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  sub_1B8DFD73C();
  v6 = sub_1B8DFD874();
  v5(v3, v0);
  if (v4 == v6)
  {
    v7 = sub_1B8DFD6E8();
  }
  else
  {
    sub_1B8DFD73C();
    v8 = sub_1B8DFD874();
    v5(v3, v0);
    sub_1B8DFD73C();
    v9 = sub_1B8DFD874();
    v5(v3, v0);
    v7 = v8 < v9;
  }
  return v7 & 1;
}

uint64_t _s18MobileTimerSupport10TimeStringV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  BOOL v5;
  uint64_t v6;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if ((v4 || (sub_1B8DFE0D8() & 1) != 0)
    && (a1[2] == a2[2] ? (v5 = a1[3] == a2[3]) : (v5 = 0),
        (v5 || (sub_1B8DFE0D8() & 1) != 0)
     && a1[4] == a2[4]
     && a1[5] == a2[5]
     && (a1[6] == a2[6] && a1[7] == a2[7] || (sub_1B8DFE0D8() & 1) != 0))
    && a1[8] == a2[8]
    && a1[9] == a2[9]
    && (v6 = type metadata accessor for TimeString(0),
        (MEMORY[0x1BCCBC190]((char *)a1 + *(int *)(v6 + 36), (char *)a2 + *(int *)(v6 + 36)) & 1) != 0))
  {
    return sub_1B8DFD70C();
  }
  else
  {
    return 0;
  }
}

unint64_t sub_1B8DC7098()
{
  unint64_t result;

  result = qword_1EF1E2130;
  if (!qword_1EF1E2130)
  {
    result = MEMORY[0x1BCCBD0FC](&protocol conformance descriptor for ClockTimeInterval, &type metadata for ClockTimeInterval);
    atomic_store(result, (unint64_t *)&qword_1EF1E2130);
  }
  return result;
}

uint64_t sub_1B8DC70DC()
{
  return sub_1B8D87FFC(&qword_1EF1E2138, &qword_1EF1E2140, MEMORY[0x1E0DEAF50]);
}

uint64_t sub_1B8DC7108()
{
  return sub_1B8DA760C(&qword_1EF1E2148, type metadata accessor for TimeString, (uint64_t)&protocol conformance descriptor for TimeString);
}

uint64_t type metadata accessor for TimeString(uint64_t a1)
{
  return sub_1B8D9A054(a1, qword_1EF1E2238);
}

uint64_t storeEnumTagSinglePayload for ClockTimeInterval(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B8DC719C + 4 * byte_1B8E02B15[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B8DC71D0 + 4 * byte_1B8E02B10[v4]))();
}

uint64_t sub_1B8DC71D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DC71D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8DC71E0);
  return result;
}

uint64_t sub_1B8DC71EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8DC71F4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B8DC71F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DC7200(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClockTimeInterval()
{
  return &type metadata for ClockTimeInterval;
}

uint64_t *initializeBufferWithCopyOfBuffer for OverrideTime(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1B8DFD22C();
  }
  else
  {
    v7 = sub_1B8DFD748();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (_OWORD *)((char *)a1 + v8);
    v10 = (_OWORD *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
  }
  return a1;
}

uint64_t destroy for OverrideTime(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1B8DFD748();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for OverrideTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t assignWithCopy for OverrideTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  v8[3] = v9[3];
  return a1;
}

uint64_t initializeWithTake for OverrideTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t assignWithTake for OverrideTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t getEnumTagSinglePayload for OverrideTime()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DC7494(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1B8DFD748();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for OverrideTime()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DC74DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1B8DFD748();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1B8DC751C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B8DFD748();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for OverrideTime.AdvancingRate(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for OverrideTime.AdvancingRate(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for OverrideTime.AdvancingRate()
{
  return &type metadata for OverrideTime.AdvancingRate;
}

_QWORD *initializeBufferWithCopyOfBuffer for TimeString(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1B8DFD22C();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    v9 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v9;
    v10 = *(int *)(a3 + 36);
    v11 = a1 + v10;
    v12 = (uint64_t)a2 + v10;
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    v13 = sub_1B8DFD8B0();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    sub_1B8DFD3AC();
    sub_1B8DFD3AC();
    sub_1B8DFD3AC();
    v14(v11, v12, v13);
    v15 = *(int *)(a3 + 40);
    v16 = (char *)v4 + v15;
    v17 = (uint64_t)a2 + v15;
    v18 = sub_1B8DFD748();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return v4;
}

uint64_t destroy for TimeString(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_1B8DFD8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 40);
  v7 = sub_1B8DFD748();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t initializeWithCopy for TimeString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  v9 = *(int *)(a3 + 36);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v12 = sub_1B8DFD8B0();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  sub_1B8DFD3AC();
  sub_1B8DFD3AC();
  sub_1B8DFD3AC();
  v13(v10, v11, v12);
  v14 = *(int *)(a3 + 40);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

_QWORD *assignWithCopy for TimeString(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B8DFD3AC();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1B8DFD3AC();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_1B8DFD3AC();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1B8DFD8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 40);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1B8DFD748();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *initializeWithTake for TimeString(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  v8 = *(int *)(a3 + 36);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1B8DFD8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = *(int *)(a3 + 40);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1B8DFD748();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

uint64_t assignWithTake for TimeString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v9 = *(int *)(a3 + 36);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1B8DFD8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = *(int *)(a3 + 40);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TimeString()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DC7B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1B8DFD8B0();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 36);
    }
    else
    {
      v10 = sub_1B8DFD748();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 40);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TimeString()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DC7BAC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1B8DFD8B0();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 36);
    }
    else
    {
      v10 = sub_1B8DFD748();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 40);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_1B8DC7C48()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1B8DFD8B0();
  if (v1 <= 0x3F)
  {
    result = sub_1B8DFD748();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B8DC7CE8()
{
  return type metadata accessor for Clock(0);
}

uint64_t type metadata accessor for Clock(uint64_t a1)
{
  return sub_1B8D9A054(a1, (uint64_t *)&unk_1EF1E22B0);
}

void sub_1B8DC7D04()
{
  unint64_t v0;
  unint64_t v1;

  sub_1B8DC7EF0(319, qword_1EF1E22C0, (void (*)(uint64_t))type metadata accessor for OverrideTime);
  if (v0 <= 0x3F)
  {
    sub_1B8DFD748();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for Clock()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Clock.now.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of Clock.nowDebugString.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of Clock.isOverriding.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of Clock.overrideTime.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of Clock.overrideTime.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of Clock.overrideTime.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of Clock.currentTime(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t type metadata accessor for AtomicClock()
{
  return objc_opt_self();
}

uint64_t sub_1B8DC7E40()
{
  return type metadata accessor for TextClock(0);
}

uint64_t type metadata accessor for TextClock(uint64_t a1)
{
  return sub_1B8D9A054(a1, qword_1EF1E25A8);
}

void sub_1B8DC7E5C()
{
  unint64_t v0;

  sub_1B8DC7EF0(319, (unint64_t *)&qword_1ED36F5A0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1B8DC7EF0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1B8DFDE38();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1B8DC7F3C()
{
  return type metadata accessor for OverrideClock(0);
}

uint64_t type metadata accessor for OverrideClock(uint64_t a1)
{
  return sub_1B8D9A054(a1, qword_1EF1E25F8);
}

void sub_1B8DC7F58()
{
  unint64_t v0;
  unint64_t v1;

  sub_1B8DC7EF0(319, qword_1EF1E22C0, (void (*)(uint64_t))type metadata accessor for OverrideTime);
  if (v0 <= 0x3F)
  {
    sub_1B8DC7EF0(319, (unint64_t *)&qword_1ED36F5A0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t *sub_1B8DC8020(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    sub_1B8DFD22C();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1B8DFD8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1B8DC80A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1B8DFD8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *sub_1B8DC80E0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1B8DFD8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1B8DC813C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1B8DFD8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1B8DC8198(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1B8DFD8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1B8DC81F4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1B8DFD8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1B8DC8250()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DC825C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = sub_1B8DFD8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_1B8DC829C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DC82A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = sub_1B8DFD8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t type metadata accessor for TextClockDescriptor(uint64_t a1)
{
  return sub_1B8D9A054(a1, qword_1EF1E2790);
}

uint64_t sub_1B8DC8300()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B8DFD8B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for OverrideTime.CodingKeys()
{
  return &type metadata for OverrideTime.CodingKeys;
}

uint64_t _s18MobileTimerSupport12OverrideTimeV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B8DC83D8 + 4 * byte_1B8E02B1F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B8DC840C + 4 * byte_1B8E02B1A[v4]))();
}

uint64_t sub_1B8DC840C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DC8414(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8DC841CLL);
  return result;
}

uint64_t sub_1B8DC8428(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8DC8430);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B8DC8434(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DC843C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OverrideTime.AdvancingRate.CodingKeys()
{
  return &type metadata for OverrideTime.AdvancingRate.CodingKeys;
}

unint64_t sub_1B8DC845C()
{
  unint64_t result;

  result = qword_1EF1E27C8;
  if (!qword_1EF1E27C8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E03050, &type metadata for OverrideTime.AdvancingRate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1E27C8);
  }
  return result;
}

unint64_t sub_1B8DC84A4()
{
  unint64_t result;

  result = qword_1EF1E27D0;
  if (!qword_1EF1E27D0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E03108, &type metadata for OverrideTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1E27D0);
  }
  return result;
}

uint64_t sub_1B8DC84E8()
{
  return sub_1B8DA760C(&qword_1EF1E27D8, type metadata accessor for TextClockDescriptor, (uint64_t)&unk_1B8E03130);
}

unint64_t sub_1B8DC8518()
{
  unint64_t result;

  result = qword_1EF1E27E0;
  if (!qword_1EF1E27E0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E03078, &type metadata for OverrideTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1E27E0);
  }
  return result;
}

unint64_t sub_1B8DC8560()
{
  unint64_t result;

  result = qword_1EF1E27E8;
  if (!qword_1EF1E27E8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E030A0, &type metadata for OverrideTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1E27E8);
  }
  return result;
}

unint64_t sub_1B8DC85A8()
{
  unint64_t result;

  result = qword_1EF1E27F0;
  if (!qword_1EF1E27F0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E02FC0, &type metadata for OverrideTime.AdvancingRate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1E27F0);
  }
  return result;
}

unint64_t sub_1B8DC85F0()
{
  unint64_t result;

  result = qword_1EF1E27F8;
  if (!qword_1EF1E27F8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E02FE8, &type metadata for OverrideTime.AdvancingRate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1E27F8);
  }
  return result;
}

_QWORD *sub_1B8DC8634(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E28D8);
  v8 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v8 + *(_QWORD *)(*(_QWORD *)v8 + 96), 1, 1, v4);
  v9 = *(_QWORD *)(*(_QWORD *)v8 + 104);
  type metadata accessor for MTSUnfairLock();
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v8 + v9) = v10;
  *(_QWORD *)(v8 + *(_QWORD *)(*(_QWORD *)v8 + 112)) = MEMORY[0x1E0DEE9E0];
  *(_BYTE *)(v8 + *(_QWORD *)(*(_QWORD *)v8 + 120)) = 0;
  a2[4] = v8;
  v11 = sub_1B8DFD748();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E28E0);
  v12 = (_QWORD *)swift_allocObject();
  v13 = swift_allocObject();
  *(_DWORD *)(v13 + 16) = 0;
  v12[2] = v13;
  sub_1B8DC8F74((uint64_t)v7, (uint64_t)v12 + *(_QWORD *)(*v12 + 96), (uint64_t *)&unk_1ED36F800);
  a2[5] = v12;
  a2[2] = a1;
  a2[3] = &off_1E6F2D940;
  v14 = swift_allocObject();
  swift_weakInit();
  if (*(_QWORD *)(a1 + 16))
  {
    v15 = (void *)objc_opt_self();
    swift_retain_n();
    sub_1B8DFD22C();
    v16 = (void *)sub_1B8DFDB5C();
    objc_msgSend(v15, sel_logError_, v16);
    swift_release();
    swift_release();

  }
  else
  {
    *(_QWORD *)(a1 + 16) = sub_1B8DC8FB8;
    *(_QWORD *)(a1 + 24) = v14;
    swift_retain_n();
    swift_retain_n();
    sub_1B8DACDE8(0);
    sub_1B8DD9848();
    swift_release();
    swift_release();
  }
  swift_release();
  return a2;
}

uint64_t sub_1B8DC88A8(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x74657366666FLL && a2 == 0xE600000000000000;
  if (v3 || (sub_1B8DFE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C61767265746E69 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1B8DFE0D8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1B8DC8988(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v3 || (sub_1B8DFE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E69636E61766461 && a2 == 0xED00006574615267)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1B8DFE0D8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1B8DC8A78()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B8DC8A9C()
{
  return objectdestroy_7Tm();
}

uint64_t sub_1B8DC8AA4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1B8D85A48;
  return sub_1B8DC58A4(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1B8DC8B38@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;

  return sub_1B8DC63A0(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1B8DC8B40()
{
  return swift_deallocObject();
}

_QWORD *sub_1B8DC8B50()
{
  uint64_t v0;
  _BYTE *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = *(_BYTE **)(v0 + 16);
  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v0 + 24))(&v3);
  *v1 = v3;
  v1[1] = 0;
  return result;
}

uint64_t sub_1B8DC8B8C()
{
  return swift_deallocObject();
}

id sub_1B8DC8B9C@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1B8DC2F78(*(double **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1B8DC8BA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for TimeString(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for TextClockDescriptor(0);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = (v3 + v4 + v6) & ~v6;
  swift_unknownObjectRelease();
  swift_release();
  v8 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = v0 + v3 + *(int *)(v1 + 36);
  v10 = sub_1B8DFD8B0();
  v11 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v9, v10);
  v12 = v8 + *(int *)(v1 + 40);
  v13 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v11(v0 + *(int *)(v5 + 20) + v7, v10);
  return swift_deallocObject();
}

uint64_t sub_1B8DC8CC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = *(_QWORD *)(type metadata accessor for TimeString(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TextClockDescriptor(0) - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = *(_QWORD *)(v0 + 32);
  v8 = v0 + v3;
  v9 = v0 + (v6 & ~v5);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_1B8D9D2E0;
  v10[3] = v8;
  v10[4] = v9;
  v10[2] = v7;
  return swift_task_switch();
}

uint64_t sub_1B8DC8D70()
{
  return swift_deallocObject();
}

uint64_t sub_1B8DC8D80()
{
  uint64_t v0;

  return sub_1B8DC69DC(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1B8DC8D8C()
{
  return swift_deallocObject();
}

uint64_t sub_1B8DC8D9C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B8DC8DC0(uint64_t a1)
{
  uint64_t v1;

  return sub_1B8DC2230(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_1B8DC8DCC()
{
  return swift_deallocObject();
}

unint64_t sub_1B8DC8DDC()
{
  return sub_1B8DC2380();
}

uint64_t sub_1B8DC8DE4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B8DC8E08(uint64_t a1)
{
  uint64_t v1;

  return sub_1B8DC2410(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_1B8DC8E10()
{
  return objectdestroy_7Tm();
}

uint64_t sub_1B8DC8E18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1B8D9D2E0;
  return sub_1B8DC1580(a1, v4, v5, v6, v7);
}

uint64_t sub_1B8DC8E94()
{
  return objectdestroy_7Tm();
}

uint64_t sub_1B8DC8E9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1B8D9D2E0;
  return sub_1B8DC13CC(a1, v4, v5, v6, v7);
}

uint64_t sub_1B8DC8F18()
{
  uint64_t *v0;

  return sub_1B8DC1754(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B8DC8F24(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B8DC18C0(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(char **)(v2 + 32));
}

uint64_t sub_1B8DC8F30(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B8DC8F74(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B8DC8FB8(uint64_t a1)
{
  return sub_1B8DD6AC8(a1);
}

uint64_t sub_1B8DC8FC0()
{
  return objectdestroy_7Tm();
}

uint64_t objectdestroy_7Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B8DC9000(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1B8D9D2E0;
  return sub_1B8DC1198(a1, v4, v5, v6);
}

uint64_t sub_1B8DC906C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B8DC90A0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1B8D85A48;
  return sub_1B8DC4938(a1, v4, v5, v7, v6);
}

uint64_t sub_1B8DC9118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800) - 8)
                          + 80);
  v2 = (v1 + 40) & ~v1;
  swift_unknownObjectRelease();
  swift_release();
  v3 = sub_1B8DFD748();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_1B8DC91C0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800) - 8)
                          + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1B8D9D2E0;
  return sub_1B8DC5180(a1, v5, v6, v7, v8);
}

uint64_t sub_1B8DC9258(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1B8D9D2E0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF1E3EC8 + dword_1EF1E3EC8))(a1, v4);
}

uint64_t sub_1B8DC92C8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B8DC9360()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B8DFDE38();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1B8DC93F4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, void (*a5)(char *, uint64_t, uint64_t), void (*a6)(uint64_t))
{
  uint64_t *v6;
  uint64_t *v11;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v11 = v6;
  v14 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(a1, 1, v17) == 1)
  {
    sub_1B8D9D154(a1, a3);
    a6(a2);
    v21 = sub_1B8DFD784();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(a2, v21);
    return sub_1B8D9D154((uint64_t)v16, a3);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v20, a1, v17);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v26 = *v11;
    *v11 = 0x8000000000000000;
    a5(v20, a2, isUniquelyReferenced_nonNull_native);
    *v11 = v26;
    swift_bridgeObjectRelease();
    v24 = sub_1B8DFD784();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(a2, v24);
  }
}

uint64_t sub_1B8DC958C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B8DFD748();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1B8D9D154(a1, (uint64_t *)&unk_1ED36F800);
    v13 = sub_1B8D9708C(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1B8DED1C0();
        v17 = v22;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, v9);
      sub_1B8DEC2A0(v15, v17);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_1B8D9D154((uint64_t)v8, (uint64_t *)&unk_1ED36F800);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_1B8DF5678((uint64_t)v12, a2, v19);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B8DC9764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  os_unfair_lock_s *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  char v44;

  v33 = a3;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2A98);
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v36 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2AA0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v38 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v33 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v33 - v12;
  v14 = sub_1B8DFD748();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 48) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v21);
  v22 = *(_BYTE *)(a1 + 64);
  if ((v22 & 1) == 0)
    *(_BYTE *)(a1 + 64) = 1;
  os_unfair_lock_unlock(v21);
  swift_endAccess();
  v42 = xmmword_1B8E02970;
  v43 = 0;
  v44 = 0;
  if ((v22 & 1) == 0)
  {
    v34 = v14;
    v23 = OBJC_IVAR____TtC18MobileTimerSupport17SolarDataProvider_solarMovementsUpdateTask;
    if (!*(_QWORD *)(a2 + OBJC_IVAR____TtC18MobileTimerSupport17SolarDataProvider_solarMovementsUpdateTask))
    {
      v24 = sub_1B8DFDD00();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v20, 1, 1, v24);
      v25 = swift_allocObject();
      swift_weakInit();
      v26 = (_QWORD *)swift_allocObject();
      v26[2] = 0;
      v26[3] = 0;
      v26[4] = v25;
      *(_QWORD *)(a2 + v23) = sub_1B8DBF29C((uint64_t)v20, (uint64_t)&unk_1EF1E2AB8, (uint64_t)v26);
      swift_release();
    }
    if (qword_1EF1E0F18 != -1)
      swift_once();
    sub_1B8DFD73C();
    Date.solarTerminatorPath.getter((uint64_t)&v39);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v34);
    v42 = v39;
    v43 = v40;
    v44 = v41;
  }
  v34 = a2;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2AA8);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  v29(v13, 1, 1, v27);
  swift_beginAccess();
  os_unfair_lock_lock(v21);
  v30 = swift_endAccess();
  MEMORY[0x1E0C80A78](v30);
  *(&v33 - 2) = a1;
  *(&v33 - 1) = (uint64_t)&v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2AB0);
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v36, *MEMORY[0x1E0DF07B8], v37);
  sub_1B8DFDD48();
  v29(v11, 0, 1, v27);
  sub_1B8DC92C8((uint64_t)v11, (uint64_t)v13, &qword_1EF1E2AA0);
  swift_beginAccess();
  os_unfair_lock_unlock(v21);
  swift_endAccess();
  v31 = v38;
  sub_1B8D9D288((uint64_t)v13, v38, &qword_1EF1E2AA0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v31, 1, v27);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v33, v31, v27);
    sub_1B8D9D154((uint64_t)v13, &qword_1EF1E2AA0);
    sub_1B8DCC4D8(v42, *((uint64_t *)&v42 + 1));
    return swift_release();
  }
  return result;
}

uint64_t sub_1B8DC9BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  _QWORD v35[2];
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  LODWORD(v42) = a4;
  v35[0] = a5;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2A50);
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v39 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2A58);
  v10 = MEMORY[0x1E0C80A78](v9);
  v41 = (uint64_t)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v37 = (char *)v35 - v13;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v35 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v35 - v20;
  v22 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 104)) + 16);
  swift_beginAccess();
  sub_1B8DFD22C();
  os_unfair_lock_lock(v22);
  v23 = *(_QWORD *)(*(_QWORD *)a1 + 120);
  v24 = *(_BYTE *)(a1 + v23);
  if ((v24 & 1) == 0)
    *(_BYTE *)(a1 + v23) = 1;
  os_unfair_lock_unlock(v22);
  swift_endAccess();
  v25 = sub_1B8DFD748();
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v26(v21, 1, 1, v25);
  if ((v24 & 1) == 0)
  {
    sub_1B8DFD22C();
    sub_1B8DCBF3C(a2, a3, v42);
    v26(v19, 0, 1, v25);
    sub_1B8DC92C8((uint64_t)v19, (uint64_t)v21, (uint64_t *)&unk_1ED36F800);
  }
  v42 = a3;
  v35[1] = a2;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2058);
  v36 = *(_QWORD *)(v27 - 8);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
  v29 = (uint64_t)v15;
  v28(v15, 1, 1, v27);
  swift_beginAccess();
  os_unfair_lock_lock(v22);
  v30 = swift_endAccess();
  MEMORY[0x1E0C80A78](v30);
  v35[-2] = a1;
  v35[-1] = v21;
  (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v39, *MEMORY[0x1E0DF07B8], v40);
  v31 = (uint64_t)v37;
  sub_1B8DFDD48();
  v28((char *)v31, 0, 1, v27);
  sub_1B8DC92C8(v31, v29, &qword_1EF1E2A58);
  swift_beginAccess();
  os_unfair_lock_unlock(v22);
  swift_endAccess();
  v32 = v41;
  v33 = v36;
  sub_1B8D9D288(v29, v41, &qword_1EF1E2A58);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v32, 1, v27) == 1)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v33 + 32))(v35[0], v32, v27);
    sub_1B8D9D154(v29, &qword_1EF1E2A58);
    sub_1B8D9D154((uint64_t)v21, (uint64_t *)&unk_1ED36F800);
    swift_release_n();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B8DC9F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v24;
  os_unfair_lock_s *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;

  v40 = a2;
  v35 = a3;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2A70);
  v36 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v37 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2A78);
  v6 = MEMORY[0x1E0C80A78](v5);
  v39 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v34 - v9;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v34 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2920);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v34 - v17;
  v19 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 104)) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v19);
  v20 = *(_QWORD *)(*(_QWORD *)a1 + 120);
  v21 = *(_BYTE *)(a1 + v20);
  if ((v21 & 1) == 0)
    *(_BYTE *)(a1 + v20) = 1;
  os_unfair_lock_unlock(v19);
  swift_endAccess();
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23(v18, 1, 1, v22);
  v41 = v18;
  if ((v21 & 1) == 0)
  {
    v24 = *(_QWORD **)(v40 + 40);
    v25 = (os_unfair_lock_s *)(v24[2] + 16);
    swift_beginAccess();
    sub_1B8DFD22C();
    os_unfair_lock_lock(v25);
    v26 = (uint64_t)v24 + *(_QWORD *)(*v24 + 96);
    swift_beginAccess();
    sub_1B8D9D288(v26, (uint64_t)v16, (uint64_t *)&unk_1ED36F800);
    os_unfair_lock_unlock(v25);
    swift_endAccess();
    swift_release();
    v23(v16, 0, 1, v22);
    sub_1B8DC92C8((uint64_t)v16, (uint64_t)v41, &qword_1EF1E2920);
  }
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2928);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  v29(v12, 1, 1, v27);
  swift_beginAccess();
  os_unfair_lock_lock(v19);
  v30 = swift_endAccess();
  MEMORY[0x1E0C80A78](v30);
  v31 = (uint64_t)v41;
  *(&v34 - 2) = a1;
  *(&v34 - 1) = v31;
  (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v37, *MEMORY[0x1E0DF07B8], v38);
  sub_1B8DFDD48();
  v29(v10, 0, 1, v27);
  sub_1B8DC92C8((uint64_t)v10, (uint64_t)v12, &qword_1EF1E2A78);
  swift_beginAccess();
  os_unfair_lock_unlock(v19);
  swift_endAccess();
  v32 = v39;
  sub_1B8D9D288((uint64_t)v12, v39, &qword_1EF1E2A78);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v32, 1, v27);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v35, v32, v27);
    sub_1B8D9D154((uint64_t)v12, &qword_1EF1E2A78);
    sub_1B8D9D154((uint64_t)v41, &qword_1EF1E2920);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B8DCA3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E3020);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v10 = *(_QWORD *)(a2 + 24);
  if (v10 == 1)
  {
    v11 = *(_QWORD *)(a3 + 8);
    if (v11 != 1)
    {
      v12 = *(_QWORD *)(a3 + 16);
      v14 = *(_BYTE *)(a3 + 24);
      v19 = *(_QWORD *)a3;
      v13 = v19;
      v20 = v11;
      v21 = v12;
      v22 = v14;
      swift_bridgeObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2AC0);
      sub_1B8DFDD24();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      sub_1B8DCC750(v13, v11, v12, v14);
      sub_1B8DCC4D8(v13, v11);
    }
  }
  else
  {
    v15 = *(_BYTE *)(a2 + 40);
    v16 = *(_QWORD *)(a2 + 32);
    v19 = *(_QWORD *)(a2 + 16);
    v20 = v10;
    v21 = v16;
    v22 = v15;
    sub_1B8DFD3AC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2AC0);
    sub_1B8DFDD24();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return sub_1B8DCADA8(a1);
}

uint64_t sub_1B8DCA534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v31 = a3;
  v33 = a1;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2A88);
  v4 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1E2F20);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v30 - v11;
  v13 = type metadata accessor for CurrentLocationResult(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v30 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v30 - v21;
  v23 = *(_QWORD *)(*(_QWORD *)a2 + 96);
  v34 = a2;
  v24 = a2 + v23;
  swift_beginAccess();
  sub_1B8D9D288(v24, (uint64_t)v12, (uint64_t *)&unk_1EF1E2F20);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v25(v12, 1, v13) == 1)
  {
    sub_1B8D9D154((uint64_t)v12, (uint64_t *)&unk_1EF1E2F20);
    sub_1B8D9D288(v31, (uint64_t)v9, (uint64_t *)&unk_1EF1E2F20);
    v26 = v25(v9, 1, v13);
    v27 = v33;
    if (v26 == 1)
    {
      sub_1B8D9D154((uint64_t)v9, (uint64_t *)&unk_1EF1E2F20);
    }
    else
    {
      sub_1B8DCC378((uint64_t)v9, (uint64_t)v16);
      sub_1B8DCC3BC((uint64_t)v16, (uint64_t)v19);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2F30);
      sub_1B8DFDD24();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v32);
      sub_1B8DCC9F0((uint64_t)v16);
      sub_1B8DCC400((uint64_t)v16);
    }
  }
  else
  {
    sub_1B8DCC378((uint64_t)v12, (uint64_t)v22);
    sub_1B8DCC3BC((uint64_t)v22, (uint64_t)v19);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2F30);
    v28 = v33;
    sub_1B8DFDD24();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v32);
    sub_1B8DCC400((uint64_t)v22);
    v27 = v28;
  }
  return sub_1B8DCAFD0(v27);
}

uint64_t sub_1B8DCA7EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v29 = a3;
  v32 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2A60);
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v29 - v11;
  v13 = sub_1B8DFD748();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v29 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v29 - v21;
  v23 = *(_QWORD *)(*(_QWORD *)a2 + 96);
  v33 = a2;
  v24 = a2 + v23;
  swift_beginAccess();
  sub_1B8D9D288(v24, (uint64_t)v12, (uint64_t *)&unk_1ED36F800);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v25(v12, 1, v13) == 1)
  {
    sub_1B8D9D154((uint64_t)v12, (uint64_t *)&unk_1ED36F800);
    sub_1B8D9D288(v29, (uint64_t)v10, (uint64_t *)&unk_1ED36F800);
    v26 = v25(v10, 1, v13);
    v27 = v32;
    if (v26 == 1)
    {
      sub_1B8D9D154((uint64_t)v10, (uint64_t *)&unk_1ED36F800);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v10, v13);
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v20, v17, v13);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2F80);
      sub_1B8DFDD24();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v31);
      sub_1B8DCD3B4((uint64_t)v17);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v22, v12, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v20, v22, v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2F80);
    v27 = v32;
    sub_1B8DFDD24();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v31);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
  }
  return sub_1B8DCB200(v27);
}

uint64_t sub_1B8DCAACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v34 = a3;
  v36 = a1;
  v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1E2FB0);
  v4 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2920);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v33 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v33 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v33 - v21;
  v23 = *(_QWORD *)(*(_QWORD *)a2 + 96);
  v37 = a2;
  v24 = a2 + v23;
  swift_beginAccess();
  sub_1B8D9D288(v24, (uint64_t)v12, &qword_1EF1E2920);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v25(v12, 1, v13) == 1)
  {
    v26 = v35;
    sub_1B8D9D154((uint64_t)v12, &qword_1EF1E2920);
    sub_1B8D9D288(v34, (uint64_t)v10, &qword_1EF1E2920);
    v27 = v25(v10, 1, v13);
    v28 = v36;
    if (v27 == 1)
    {
      v29 = &qword_1EF1E2920;
      v30 = (uint64_t)v10;
    }
    else
    {
      sub_1B8DCC258((uint64_t)v10, (uint64_t)v17);
      sub_1B8D9D288((uint64_t)v17, (uint64_t)v20, (uint64_t *)&unk_1ED36F800);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3FA0);
      sub_1B8DFDD24();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v26);
      sub_1B8DCDB58((uint64_t)v17);
      v30 = (uint64_t)v17;
      v29 = (uint64_t *)&unk_1ED36F800;
    }
    sub_1B8D9D154(v30, v29);
  }
  else
  {
    sub_1B8DCC258((uint64_t)v12, (uint64_t)v22);
    sub_1B8D9D288((uint64_t)v22, (uint64_t)v20, (uint64_t *)&unk_1ED36F800);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3FA0);
    v31 = v36;
    sub_1B8DFDD24();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v35);
    sub_1B8D9D154((uint64_t)v22, (uint64_t *)&unk_1ED36F800);
    v28 = v31;
  }
  return sub_1B8DCB430(v28);
}

uint64_t sub_1B8DCADA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[3];

  v19[2] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2AC8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFD784();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v19 - v10;
  sub_1B8DFD778();
  v12 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v12(v9, v11, v5);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2AC0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v4, a1, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v4, 0, 1, v13);
  swift_beginAccess();
  sub_1B8DC93F4((uint64_t)v4, (uint64_t)v9, qword_1EF1E2AC8, &qword_1EF1E2AC0, (void (*)(char *, uint64_t, uint64_t))sub_1B8DF5288, (void (*)(uint64_t))sub_1B8DEBF70);
  swift_endAccess();
  v15 = swift_allocObject();
  swift_weakInit();
  v12(v9, v11, v5);
  v16 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v17 + v16, v9, v5);
  sub_1B8DFD22C();
  sub_1B8DFDD18();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return swift_release();
}

uint64_t sub_1B8DCAFD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[3];

  v19[2] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2A90);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFD784();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v19 - v10;
  sub_1B8DFD778();
  v12 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v12(v8, v11, v5);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2F30);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v4, a1, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v4, 0, 1, v13);
  swift_beginAccess();
  sub_1B8DC93F4((uint64_t)v4, (uint64_t)v8, &qword_1EF1E2A90, &qword_1EF1E2F30, (void (*)(char *, uint64_t, uint64_t))sub_1B8DF53D8, (void (*)(uint64_t))sub_1B8DEBF84);
  swift_endAccess();
  v15 = swift_allocObject();
  swift_weakInit();
  v12(v8, v11, v5);
  v16 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v17 + v16, v8, v5);
  sub_1B8DFD22C();
  sub_1B8DFDD18();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return swift_release();
}

uint64_t sub_1B8DCB200(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[3];

  v19[2] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2A68);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFD784();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v19 - v10;
  sub_1B8DFD778();
  v12 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v12(v9, v11, v5);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2F80);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v4, a1, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v4, 0, 1, v13);
  swift_beginAccess();
  sub_1B8DC93F4((uint64_t)v4, (uint64_t)v9, &qword_1EF1E2A68, &qword_1EF1E2F80, (void (*)(char *, uint64_t, uint64_t))sub_1B8DF53F4, (void (*)(uint64_t))sub_1B8DEC0E8);
  swift_endAccess();
  v15 = swift_allocObject();
  swift_weakInit();
  v12(v9, v11, v5);
  v16 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v17 + v16, v9, v5);
  sub_1B8DFD22C();
  sub_1B8DFDD18();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return swift_release();
}

uint64_t sub_1B8DCB430(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[3];

  v19[2] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2A80);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFD784();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v19 - v10;
  sub_1B8DFD778();
  v12 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v12(v9, v11, v5);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3FA0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v4, a1, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v4, 0, 1, v13);
  swift_beginAccess();
  sub_1B8DC93F4((uint64_t)v4, (uint64_t)v9, &qword_1EF1E2A80, &qword_1EF1E3FA0, (void (*)(char *, uint64_t, uint64_t))sub_1B8DF579C, (void (*)(uint64_t))sub_1B8DEC0FC);
  swift_endAccess();
  v15 = swift_allocObject();
  swift_weakInit();
  v12(v9, v11, v5);
  v16 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v17 + v16, v9, v5);
  sub_1B8DFD22C();
  sub_1B8DFDD18();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return swift_release();
}

uint64_t sub_1B8DCB660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1B8DCB6F0(a3, a4, a5, a6, a7);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B8DCB6F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[6];

  v28 = a4;
  v29 = a5;
  v26 = a1;
  v27 = a3;
  v24 = a2;
  v30 = sub_1B8DFD9F4();
  v33 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B8DFDA30();
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B8DFD784();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = sub_1B8DFDA00();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8D98F94();
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF520], v13);
  v25 = sub_1B8DFDDF0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v17 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v26, v10);
  v18 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v19 + v18, (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = v28;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B8DF1404;
  aBlock[3] = v29;
  v20 = _Block_copy(aBlock);
  sub_1B8DFD22C();
  sub_1B8DFDA0C();
  v34 = MEMORY[0x1E0DEE9D8];
  sub_1B8DCC1BC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36ED30);
  sub_1B8DCC204();
  v21 = v30;
  sub_1B8DFDE80();
  v22 = (void *)v25;
  MEMORY[0x1BCCBC6D0](0, v9, v6, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v21);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v32);
  swift_release();
  return swift_release();
}

uint64_t sub_1B8DCB9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t result;
  os_unfair_lock_s *v7;
  _BYTE v8[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2AC8);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = (os_unfair_lock_s *)(*(_QWORD *)(result + 48) + 16);
    swift_beginAccess();
    os_unfair_lock_lock(v7);
    swift_endAccess();
    swift_beginAccess();
    sub_1B8DEBF70(a2, (uint64_t)v5);
    sub_1B8D9D154((uint64_t)v5, qword_1EF1E2AC8);
    swift_endAccess();
    swift_beginAccess();
    os_unfair_lock_unlock(v7);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B8DCBAF0(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t result;
  os_unfair_lock_s *v11;
  _BYTE v12[24];

  v7 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = (os_unfair_lock_s *)(*(_QWORD *)(result + *(_QWORD *)(*(_QWORD *)result + 104)) + 16);
    swift_beginAccess();
    os_unfair_lock_lock(v11);
    swift_endAccess();
    swift_beginAccess();
    a4(a2);
    sub_1B8D9D154((uint64_t)v9, a3);
    swift_endAccess();
    swift_beginAccess();
    os_unfair_lock_unlock(v11);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B8DCBC38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = sub_1B8DFDE38();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B8DCBCA0()
{
  sub_1B8DCBC38();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ObservationStream(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ObservationStream);
}

uint64_t sub_1B8DCBCD0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1B8DCBD20@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  os_unfair_lock_s *v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;

  v10 = (os_unfair_lock_s *)(*(_QWORD *)(a2 + 16) + 16);
  swift_beginAccess();
  sub_1B8DFD22C();
  os_unfair_lock_lock(v10);
  swift_endAccess();
  v11 = (uint64_t *)(a2 + 24);
  swift_beginAccess();
  v12 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(v12 + 16) && (v13 = sub_1B8D9708C(a1), (v14 & 1) != 0))
  {
    v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
    sub_1B8DFD22C();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2A48);
    v15 = swift_allocObject();
    v16 = v15 + *(_QWORD *)(*(_QWORD *)v15 + 96);
    v17 = sub_1B8DFD748();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
    v18 = *(_QWORD *)(*(_QWORD *)v15 + 104);
    type metadata accessor for MTSUnfairLock();
    v19 = swift_allocObject();
    *(_DWORD *)(v19 + 16) = 0;
    *(_QWORD *)(v15 + v18) = v19;
    *(_QWORD *)(v15 + *(_QWORD *)(*(_QWORD *)v15 + 112)) = MEMORY[0x1E0DEE9E0];
    *(_BYTE *)(v15 + *(_QWORD *)(*(_QWORD *)v15 + 120)) = 0;
    swift_beginAccess();
    sub_1B8DFD22C();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v11;
    *v11 = 0x8000000000000000;
    sub_1B8DF5410(v15, a1, isUniquelyReferenced_nonNull_native);
    *v11 = v22;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  sub_1B8DFD22C();
  sub_1B8DFD22C();
  sub_1B8DC9BC0(v15, a2, a3, a4, a5);
  swift_beginAccess();
  os_unfair_lock_unlock(v10);
  swift_endAccess();
  swift_release_n();
  return swift_release();
}

uint64_t sub_1B8DCBF3C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 16) + 16);
  swift_beginAccess();
  os_unfair_lock_unlock(v9);
  swift_endAccess();
  v10 = sub_1B8DFDD00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  sub_1B8DFDCE8();
  sub_1B8DFD22C();
  v11 = sub_1B8DFDCDC();
  v12 = swift_allocObject();
  v13 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = v13;
  *(_QWORD *)(v12 + 32) = a2;
  *(_BYTE *)(v12 + 40) = a3;
  sub_1B8D8DEC0((uint64_t)v8, (uint64_t)&unk_1EF1E28D0, v12);
  swift_release();
  sub_1B8DFD73C();
  swift_beginAccess();
  os_unfair_lock_lock(v9);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1B8DCC094()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B8DCC0B8()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void type metadata accessor for ObservationStreamCollection()
{
  JUMPOUT(0x1BCCBD084);
}

uint64_t sub_1B8DCC0F0(uint64_t a1)
{
  uint64_t v1;

  return sub_1B8DCA7EC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1B8DCC0F8()
{
  return objectdestroy_7Tm();
}

uint64_t sub_1B8DCC100(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1B8D85A48;
  return sub_1B8DC13CC(a1, v4, v5, v6, v7);
}

uint64_t sub_1B8DCC180(uint64_t a1)
{
  return sub_1B8DCC2EC(a1, (uint64_t)&unk_1E6F2D180, (uint64_t)&unk_1E6F2D1D0, (uint64_t)sub_1B8DCC1A8, (uint64_t)&block_descriptor_8);
}

uint64_t sub_1B8DCC1A8()
{
  return sub_1B8DCC47C(&qword_1EF1E2A68, (void (*)(uint64_t))sub_1B8DEC0E8);
}

unint64_t sub_1B8DCC1BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED36ED20;
  if (!qword_1ED36ED20)
  {
    v1 = sub_1B8DFD9F4();
    result = MEMORY[0x1BCCBD0FC](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1ED36ED20);
  }
  return result;
}

unint64_t sub_1B8DCC204()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED36ED38;
  if (!qword_1ED36ED38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36ED30);
    result = MEMORY[0x1BCCBD0FC](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED36ED38);
  }
  return result;
}

uint64_t sub_1B8DCC250(uint64_t a1)
{
  uint64_t v1;

  return sub_1B8DCAACC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1B8DCC258(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8DCC2A0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B8DCC2C8(uint64_t a1)
{
  return sub_1B8DCC2EC(a1, (uint64_t)&unk_1E6F2D220, (uint64_t)&unk_1E6F2D270, (uint64_t)sub_1B8DCC364, (uint64_t)&block_descriptor_25);
}

uint64_t sub_1B8DCC2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;

  v11 = *(unsigned __int8 *)(*(_QWORD *)(sub_1B8DFD784() - 8) + 80);
  return sub_1B8DCB660(a1, *(_QWORD *)(v5 + 16), v5 + ((v11 + 24) & ~v11), a2, a3, a4, a5);
}

uint64_t sub_1B8DCC364()
{
  return sub_1B8DCC47C(&qword_1EF1E2A80, (void (*)(uint64_t))sub_1B8DEC0FC);
}

uint64_t sub_1B8DCC378(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CurrentLocationResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8DCC3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CurrentLocationResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8DCC400(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CurrentLocationResult(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B8DCC440(uint64_t a1)
{
  return sub_1B8DCC2EC(a1, (uint64_t)&unk_1E6F2D2C0, (uint64_t)&unk_1E6F2D310, (uint64_t)sub_1B8DCC468, (uint64_t)&block_descriptor_38);
}

uint64_t sub_1B8DCC468()
{
  return sub_1B8DCC47C(&qword_1EF1E2A90, (void (*)(uint64_t))sub_1B8DEBF84);
}

uint64_t sub_1B8DCC47C(uint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1B8DFD784() - 8) + 80);
  return sub_1B8DCBAF0(*(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5), a1, a2);
}

uint64_t sub_1B8DCC4D0(uint64_t a1)
{
  uint64_t v1;

  return sub_1B8DCA3A4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1B8DCC4D8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1B8DCC4EC()
{
  return objectdestroy_7Tm();
}

uint64_t sub_1B8DCC4F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1B8D85A48;
  return sub_1B8DBC8E0(a1, v4, v5, v6);
}

uint64_t sub_1B8DCC564(uint64_t a1)
{
  return sub_1B8DCC2EC(a1, (uint64_t)&unk_1E6F2D3B0, (uint64_t)&unk_1E6F2D400, (uint64_t)sub_1B8DCC600, (uint64_t)&block_descriptor_58);
}

uint64_t objectdestroy_7Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1B8DFD784();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1B8DCC600()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1B8DFD784() - 8) + 80);
  return sub_1B8DCB9C4(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1B8DCC630()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1B8DCC638(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B8DCC678 + 4 * byte_1B8E032A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B8DCC698 + 4 * byte_1B8E032A5[v4]))();
}

_BYTE *sub_1B8DCC678(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B8DCC698(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B8DCC6A0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B8DCC6A8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B8DCC6B0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B8DCC6B8(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for ObservationStreamCollection.ObservationError()
{
  JUMPOUT(0x1BCCBD084);
}

void sub_1B8DCC6D0()
{
  JUMPOUT(0x1BCCBD0FCLL);
}

void LocationDataProvider.currentLocation(for:)(char *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  char v4;

  v4 = *a1;
  v3 = sub_1B8DCE8A8(&v4);
  sub_1B8DCEFD0(a2);

}

uint64_t sub_1B8DCC750(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20[8];
  uint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD v24[3];
  char v25;

  swift_beginAccess();
  v9 = *(_QWORD *)(v4 + 16);
  v10 = *(_QWORD *)(v4 + 24);
  v11 = *(_QWORD *)(v4 + 32);
  v12 = *(_BYTE *)(v4 + 40);
  if (!v10)
  {
    if (!a2)
      return sub_1B8DCC4D8(*(_QWORD *)(v4 + 16), 0);
    goto LABEL_11;
  }
  if (v10 == 1)
  {
    sub_1B8DFD3AC();
    sub_1B8DCC4D8(v9, 1);
    v13 = a1;
    v14 = a2;
LABEL_12:
    sub_1B8DCC4D8(v13, v14);
    goto LABEL_13;
  }
  v24[0] = *(_QWORD *)(v4 + 16);
  v24[1] = v10;
  v24[2] = v11;
  v25 = v12;
  if (!a2)
  {
    sub_1B8DD4890(v9, v10);
    sub_1B8DD4890(v9, v10);
    sub_1B8DD4890(v9, v10);
LABEL_11:
    swift_bridgeObjectRelease();
    sub_1B8DCC4D8(v9, v10);
    v13 = v9;
    v14 = v10;
    goto LABEL_12;
  }
  v20[0] = a1 & 1;
  v21 = a2;
  v22 = a3;
  v23 = a4 & 1;
  sub_1B8DD4890(v9, v10);
  sub_1B8DD4890(v9, v10);
  sub_1B8DD4890(v9, v10);
  sub_1B8DFD3AC();
  sub_1B8DD4890(v9, v10);
  sub_1B8DFD3AC();
  v15 = _s18MobileTimerSupport19SolarTerminatorPathV2eeoiySbAC_ACtFZ_0((uint64_t)v24, (uint64_t)v20);
  swift_bridgeObjectRelease();
  sub_1B8DCC4D8(v9, v10);
  swift_bridgeObjectRelease_n();
  sub_1B8DCC4D8(v9, v10);
  result = sub_1B8DCC4D8(v9, v10);
  if (!v15)
  {
LABEL_13:
    v17 = *(_QWORD *)(v4 + 16);
    v18 = *(_QWORD *)(v4 + 24);
    *(_QWORD *)(v4 + 16) = a1;
    *(_QWORD *)(v4 + 24) = a2;
    *(_QWORD *)(v4 + 32) = a3;
    *(_BYTE *)(v4 + 40) = a4;
    sub_1B8DFD3AC();
    sub_1B8DCC4D8(v17, v18);
    swift_beginAccess();
    sub_1B8DFD22C();
    v19 = sub_1B8DFD3AC();
    sub_1B8DD1728(v19, v4);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B8DCC9F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = type metadata accessor for CurrentLocationResult(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v31 = (uint64_t)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2F18);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1E2F20);
  MEMORY[0x1E0C80A78](v9);
  v33 = (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v32 = (uint64_t)&v30 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v30 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v30 - v17;
  v19 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  swift_beginAccess();
  v34 = a1;
  sub_1B8D9A42C(a1, (uint64_t)v18, type metadata accessor for CurrentLocationResult);
  v20 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56);
  v20(v18, 0, 1, v3);
  v21 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_1B8D9D288(v19, (uint64_t)v8, (uint64_t *)&unk_1EF1E2F20);
  sub_1B8D9D288((uint64_t)v18, v21, (uint64_t *)&unk_1EF1E2F20);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v22((uint64_t)v8, 1, v3) == 1)
  {
    sub_1B8D9D154((uint64_t)v18, (uint64_t *)&unk_1EF1E2F20);
    if (v22(v21, 1, v3) == 1)
      return sub_1B8D9D154((uint64_t)v8, (uint64_t *)&unk_1EF1E2F20);
  }
  else
  {
    sub_1B8D9D288((uint64_t)v8, (uint64_t)v15, (uint64_t *)&unk_1EF1E2F20);
    if (v22(v21, 1, v3) != 1)
    {
      v24 = v31;
      sub_1B8DBF258(v21, v31, type metadata accessor for CurrentLocationResult);
      v25 = _s18MobileTimerSupport21CurrentLocationResultV2eeoiySbAC_ACtFZ_0((uint64_t)v15, v24);
      sub_1B8D9A088(v24, type metadata accessor for CurrentLocationResult);
      sub_1B8D9D154((uint64_t)v18, (uint64_t *)&unk_1EF1E2F20);
      sub_1B8D9A088((uint64_t)v15, type metadata accessor for CurrentLocationResult);
      result = sub_1B8D9D154((uint64_t)v8, (uint64_t *)&unk_1EF1E2F20);
      if (v25)
        return result;
      goto LABEL_8;
    }
    sub_1B8D9D154((uint64_t)v18, (uint64_t *)&unk_1EF1E2F20);
    sub_1B8D9A088((uint64_t)v15, type metadata accessor for CurrentLocationResult);
  }
  sub_1B8D9D154((uint64_t)v8, &qword_1EF1E2F18);
LABEL_8:
  v26 = v32;
  sub_1B8D9A42C(v34, v32, type metadata accessor for CurrentLocationResult);
  v20((char *)v26, 0, 1, v3);
  v27 = v26;
  v28 = v33;
  sub_1B8DC8F74(v27, v33, (uint64_t *)&unk_1EF1E2F20);
  swift_beginAccess();
  sub_1B8DC92C8(v28, v19, (uint64_t *)&unk_1EF1E2F20);
  swift_endAccess();
  swift_beginAccess();
  sub_1B8DFD22C();
  v29 = sub_1B8DFD3AC();
  sub_1B8DD1E3C(v29, v1, &qword_1EF1E2A88, (uint64_t *)&unk_1EF1E2F20, type metadata accessor for CurrentLocationResult, &qword_1EF1E2F30);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B8DCCDBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v3 = type metadata accessor for CurrentLocationSolarPosition(0);
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  MEMORY[0x1E0C80A78](v3);
  v45 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = (char *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1E2FF0);
  MEMORY[0x1E0C80A78](v47);
  v50 = (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2050);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v46 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v51 = (uint64_t)&v45 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3000);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3008);
  MEMORY[0x1E0C80A78](v14);
  v54 = (uint64_t)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v53 = (uint64_t)&v45 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v45 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v45 - v22;
  v24 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v52 = v1;
  v25 = v1 + v24;
  swift_beginAccess();
  v55 = a1;
  sub_1B8D9D288(a1, (uint64_t)v23, &qword_1EF1E2050);
  v26 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56);
  v26(v23, 0, 1, v6);
  v27 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_1B8D9D288(v25, (uint64_t)v13, &qword_1EF1E3008);
  sub_1B8D9D288((uint64_t)v23, v27, &qword_1EF1E3008);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v28((uint64_t)v13, 1, v6) == 1)
  {
    sub_1B8D9D154((uint64_t)v23, &qword_1EF1E3008);
    if (v28(v27, 1, v6) == 1)
    {
      v29 = (uint64_t)v13;
      return sub_1B8D9D154(v29, &qword_1EF1E3008);
    }
    v30 = &qword_1EF1E3000;
    goto LABEL_15;
  }
  sub_1B8D9D288((uint64_t)v13, (uint64_t)v20, &qword_1EF1E3008);
  if (v28(v27, 1, v6) == 1)
  {
    v30 = &qword_1EF1E3000;
LABEL_14:
    sub_1B8D9D154((uint64_t)v23, &qword_1EF1E3008);
    sub_1B8D9D154((uint64_t)v20, &qword_1EF1E2050);
LABEL_15:
    sub_1B8D9D154((uint64_t)v13, v30);
LABEL_16:
    v39 = v53;
    sub_1B8D9D288(v55, v53, &qword_1EF1E2050);
    v26((char *)v39, 0, 1, v6);
    v40 = v54;
    sub_1B8DC8F74(v39, v54, &qword_1EF1E3008);
    swift_beginAccess();
    sub_1B8DC92C8(v40, v25, &qword_1EF1E3008);
    swift_endAccess();
    v41 = v52;
    swift_beginAccess();
    sub_1B8DFD22C();
    v42 = sub_1B8DFD3AC();
    sub_1B8DD2258(v42, v41, &qword_1EF1E3010, &qword_1EF1E3008, &qword_1EF1E2050, &qword_1EF1E3018);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v31 = v27;
  v32 = v51;
  sub_1B8DC8F74(v31, v51, &qword_1EF1E2050);
  v33 = v50;
  v34 = v50 + *((int *)v47 + 12);
  v47 = v20;
  sub_1B8D9D288((uint64_t)v20, v50, &qword_1EF1E2050);
  sub_1B8D9D288(v32, v34, &qword_1EF1E2050);
  v35 = v49;
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
  if (v36(v33, 1, v49) == 1)
  {
    if (v36(v34, 1, v35) == 1)
    {
      sub_1B8D9D154(v33, &qword_1EF1E2050);
      sub_1B8D9D154(v51, &qword_1EF1E2050);
      sub_1B8D9D154((uint64_t)v23, &qword_1EF1E3008);
      sub_1B8D9D154((uint64_t)v47, &qword_1EF1E2050);
      v29 = (uint64_t)v13;
      return sub_1B8D9D154(v29, &qword_1EF1E3008);
    }
    goto LABEL_13;
  }
  v38 = v46;
  sub_1B8D9D288(v33, v46, &qword_1EF1E2050);
  if (v36(v34, 1, v35) == 1)
  {
    sub_1B8D9A088(v38, type metadata accessor for CurrentLocationSolarPosition);
LABEL_13:
    sub_1B8D9D154(v33, (uint64_t *)&unk_1EF1E2FF0);
    sub_1B8D9D154(v51, &qword_1EF1E2050);
    v30 = &qword_1EF1E3008;
    v20 = v47;
    goto LABEL_14;
  }
  v43 = v45;
  sub_1B8DBF258(v34, v45, type metadata accessor for CurrentLocationSolarPosition);
  v44 = sub_1B8DBEE98(v38, v43);
  sub_1B8D9A088(v43, type metadata accessor for CurrentLocationSolarPosition);
  sub_1B8D9A088(v38, type metadata accessor for CurrentLocationSolarPosition);
  sub_1B8D9D154(v33, &qword_1EF1E2050);
  sub_1B8D9D154(v51, &qword_1EF1E2050);
  sub_1B8D9D154((uint64_t)v23, &qword_1EF1E3008);
  sub_1B8D9D154((uint64_t)v47, &qword_1EF1E2050);
  result = sub_1B8D9D154((uint64_t)v13, &qword_1EF1E3008);
  if (!v44)
    goto LABEL_16;
  return result;
}

uint64_t sub_1B8DCD3B4(uint64_t a1)
{
  int64_t v1;
  int64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  char *v26;
  char v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;

  v2 = v1;
  v4 = sub_1B8DFD748();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v33 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1E2F60);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  v11 = MEMORY[0x1E0C80A78](v10);
  v36 = (uint64_t)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v35 = (char *)&v33 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v33 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v33 - v18;
  v20 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 96);
  swift_beginAccess();
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v37 = a1;
  v34 = v21;
  v21(v19, a1, v4);
  v22 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56);
  v22(v19, 0, 1, v4);
  v23 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1B8D9D288(v20, (uint64_t)v9, (uint64_t *)&unk_1ED36F800);
  sub_1B8D9D288((uint64_t)v19, v23, (uint64_t *)&unk_1ED36F800);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v24((uint64_t)v9, 1, v4) == 1)
  {
    sub_1B8D9D154((uint64_t)v19, (uint64_t *)&unk_1ED36F800);
    if (v24(v23, 1, v4) == 1)
      return sub_1B8D9D154((uint64_t)v9, (uint64_t *)&unk_1ED36F800);
  }
  else
  {
    sub_1B8D9D288((uint64_t)v9, (uint64_t)v17, (uint64_t *)&unk_1ED36F800);
    if (v24(v23, 1, v4) != 1)
    {
      v26 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v33, v23, v4);
      sub_1B8DA760C((unint64_t *)&unk_1EF1E2F70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
      v27 = sub_1B8DFDACC();
      v28 = *(void (**)(char *, uint64_t))(v5 + 8);
      v28(v26, v4);
      sub_1B8D9D154((uint64_t)v19, (uint64_t *)&unk_1ED36F800);
      v28(v17, v4);
      result = sub_1B8D9D154((uint64_t)v9, (uint64_t *)&unk_1ED36F800);
      if ((v27 & 1) != 0)
        return result;
      goto LABEL_8;
    }
    sub_1B8D9D154((uint64_t)v19, (uint64_t *)&unk_1ED36F800);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v17, v4);
  }
  sub_1B8D9D154((uint64_t)v9, (uint64_t *)&unk_1EF1E2F60);
LABEL_8:
  v29 = v35;
  v34(v35, v37, v4);
  v22(v29, 0, 1, v4);
  v30 = (uint64_t)v29;
  v31 = v36;
  sub_1B8DC8F74(v30, v36, (uint64_t *)&unk_1ED36F800);
  swift_beginAccess();
  sub_1B8DC92C8(v31, v20, (uint64_t *)&unk_1ED36F800);
  swift_endAccess();
  swift_beginAccess();
  sub_1B8DFD22C();
  v32 = sub_1B8DFD3AC();
  sub_1B8DD1A00(v32, v2);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B8DCD78C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = type metadata accessor for TimeString(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v31 = (uint64_t *)((char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1E2F40);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2888);
  v10 = MEMORY[0x1E0C80A78](v9);
  v33 = (uint64_t)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v32 = (uint64_t)&v30 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (uint64_t *)((char *)&v30 - v15);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v30 - v17;
  v19 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  swift_beginAccess();
  v34 = a1;
  sub_1B8D9A42C(a1, (uint64_t)v18, type metadata accessor for TimeString);
  v20 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56);
  v20(v18, 0, 1, v3);
  v21 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_1B8D9D288(v19, (uint64_t)v8, &qword_1EF1E2888);
  sub_1B8D9D288((uint64_t)v18, v21, &qword_1EF1E2888);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v22((uint64_t)v8, 1, v3) == 1)
  {
    sub_1B8D9D154((uint64_t)v18, &qword_1EF1E2888);
    if (v22(v21, 1, v3) == 1)
      return sub_1B8D9D154((uint64_t)v8, &qword_1EF1E2888);
  }
  else
  {
    sub_1B8D9D288((uint64_t)v8, (uint64_t)v16, &qword_1EF1E2888);
    if (v22(v21, 1, v3) != 1)
    {
      v24 = v31;
      sub_1B8DBF258(v21, (uint64_t)v31, type metadata accessor for TimeString);
      v25 = _s18MobileTimerSupport10TimeStringV2eeoiySbAC_ACtFZ_0(v16, v24);
      sub_1B8D9A088((uint64_t)v24, type metadata accessor for TimeString);
      sub_1B8D9D154((uint64_t)v18, &qword_1EF1E2888);
      sub_1B8D9A088((uint64_t)v16, type metadata accessor for TimeString);
      result = sub_1B8D9D154((uint64_t)v8, &qword_1EF1E2888);
      if ((v25 & 1) != 0)
        return result;
      goto LABEL_8;
    }
    sub_1B8D9D154((uint64_t)v18, &qword_1EF1E2888);
    sub_1B8D9A088((uint64_t)v16, type metadata accessor for TimeString);
  }
  sub_1B8D9D154((uint64_t)v8, (uint64_t *)&unk_1EF1E2F40);
LABEL_8:
  v26 = v32;
  sub_1B8D9A42C(v34, v32, type metadata accessor for TimeString);
  v20((char *)v26, 0, 1, v3);
  v27 = v26;
  v28 = v33;
  sub_1B8DC8F74(v27, v33, &qword_1EF1E2888);
  swift_beginAccess();
  sub_1B8DC92C8(v28, v19, &qword_1EF1E2888);
  swift_endAccess();
  swift_beginAccess();
  sub_1B8DFD22C();
  v29 = sub_1B8DFD3AC();
  sub_1B8DD1E3C(v29, v1, &qword_1EF1E2F50, &qword_1EF1E2888, type metadata accessor for TimeString, &qword_1EF1E2F58);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B8DCDB58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v3 = sub_1B8DFD748();
  v4 = *(_QWORD *)(v3 - 8);
  v55 = v3;
  v56 = v4;
  MEMORY[0x1E0C80A78](v3);
  v51 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = (char *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1E2F60);
  MEMORY[0x1E0C80A78](v53);
  v54 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v52 = (uint64_t)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v57 = (uint64_t)&v50 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1E2FA0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2920);
  v16 = MEMORY[0x1E0C80A78](v15);
  v60 = (uint64_t)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v59 = (uint64_t)&v50 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v50 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v50 - v23;
  v25 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v58 = v1;
  v26 = v1 + v25;
  swift_beginAccess();
  v61 = a1;
  v27 = a1;
  v28 = v26;
  sub_1B8D9D288(v27, (uint64_t)v24, (uint64_t *)&unk_1ED36F800);
  v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56);
  v29(v24, 0, 1, v7);
  v30 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_1B8D9D288(v26, (uint64_t)v14, &qword_1EF1E2920);
  sub_1B8D9D288((uint64_t)v24, v30, &qword_1EF1E2920);
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v31((uint64_t)v14, 1, v7) == 1)
  {
    sub_1B8D9D154((uint64_t)v24, &qword_1EF1E2920);
    if (v31(v30, 1, v7) == 1)
    {
      v32 = (uint64_t)v14;
      return sub_1B8D9D154(v32, &qword_1EF1E2920);
    }
    v33 = (uint64_t *)&unk_1EF1E2FA0;
    goto LABEL_15;
  }
  sub_1B8D9D288((uint64_t)v14, (uint64_t)v22, &qword_1EF1E2920);
  if (v31(v30, 1, v7) == 1)
  {
    v33 = (uint64_t *)&unk_1EF1E2FA0;
LABEL_14:
    sub_1B8D9D154((uint64_t)v24, &qword_1EF1E2920);
    sub_1B8D9D154((uint64_t)v22, (uint64_t *)&unk_1ED36F800);
LABEL_15:
    sub_1B8D9D154((uint64_t)v14, v33);
LABEL_16:
    v41 = v59;
    sub_1B8D9D288(v61, v59, (uint64_t *)&unk_1ED36F800);
    v29((char *)v41, 0, 1, v7);
    v42 = v41;
    v43 = v60;
    sub_1B8DC8F74(v42, v60, &qword_1EF1E2920);
    swift_beginAccess();
    sub_1B8DC92C8(v43, v28, &qword_1EF1E2920);
    swift_endAccess();
    v44 = v58;
    swift_beginAccess();
    sub_1B8DFD22C();
    v45 = sub_1B8DFD3AC();
    sub_1B8DD2258(v45, v44, (uint64_t *)&unk_1EF1E2FB0, &qword_1EF1E2920, (uint64_t *)&unk_1ED36F800, &qword_1EF1E3FA0);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v50 = v28;
  v34 = v57;
  sub_1B8DC8F74(v30, v57, (uint64_t *)&unk_1ED36F800);
  v35 = v54;
  v36 = v54 + *((int *)v53 + 12);
  v53 = v22;
  sub_1B8D9D288((uint64_t)v22, v54, (uint64_t *)&unk_1ED36F800);
  sub_1B8D9D288(v34, v36, (uint64_t *)&unk_1ED36F800);
  v37 = v55;
  v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  if (v38(v35, 1, v55) == 1)
  {
    if (v38(v36, 1, v37) == 1)
    {
      sub_1B8D9D154(v35, (uint64_t *)&unk_1ED36F800);
      sub_1B8D9D154(v57, (uint64_t *)&unk_1ED36F800);
      sub_1B8D9D154((uint64_t)v24, &qword_1EF1E2920);
      sub_1B8D9D154((uint64_t)v53, (uint64_t *)&unk_1ED36F800);
      v32 = (uint64_t)v14;
      return sub_1B8D9D154(v32, &qword_1EF1E2920);
    }
    goto LABEL_13;
  }
  v40 = v52;
  sub_1B8D9D288(v35, v52, (uint64_t *)&unk_1ED36F800);
  if (v38(v36, 1, v37) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v40, v37);
LABEL_13:
    sub_1B8D9D154(v35, (uint64_t *)&unk_1EF1E2F60);
    sub_1B8D9D154(v57, (uint64_t *)&unk_1ED36F800);
    v33 = &qword_1EF1E2920;
    v22 = v53;
    v28 = v50;
    goto LABEL_14;
  }
  v46 = v56;
  v47 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v51, v36, v37);
  sub_1B8DA760C((unint64_t *)&unk_1EF1E2F70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  v48 = sub_1B8DFDACC();
  v49 = *(void (**)(char *, uint64_t))(v46 + 8);
  v49(v47, v37);
  v49((char *)v40, v37);
  sub_1B8D9D154(v35, (uint64_t *)&unk_1ED36F800);
  sub_1B8D9D154(v57, (uint64_t *)&unk_1ED36F800);
  sub_1B8D9D154((uint64_t)v24, &qword_1EF1E2920);
  sub_1B8D9D154((uint64_t)v53, (uint64_t *)&unk_1ED36F800);
  result = sub_1B8D9D154((uint64_t)v14, &qword_1EF1E2920);
  v28 = v50;
  if ((v48 & 1) == 0)
    goto LABEL_16;
  return result;
}

uint64_t sub_1B8DCE188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = type metadata accessor for LocationAccuracy(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8D9A42C(v1, (uint64_t)v4, type metadata accessor for LocationAccuracy);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1B8D9A088((uint64_t)v4, type metadata accessor for LocationAccuracy);
    return 0x6E776F6E6B6E55;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v9 = sub_1B8DFD544();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v9;
}

id CurrentLocation.location.getter()
{
  id *v0;

  return *v0;
}

uint64_t CurrentLocation.description.getter()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v1 = type metadata accessor for LocationAccuracy(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = 0;
  v22 = 0xE000000000000000;
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  v21 = 60;
  v22 = 0xE100000000000000;
  v8 = *v0;
  objc_msgSend(*v0, sel_coordinate);
  v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2040);
  v11 = swift_allocObject();
  v19 = xmmword_1B8DFF650;
  v12 = MEMORY[0x1E0DEB070];
  *(_OWORD *)(v11 + 16) = xmmword_1B8DFF650;
  v13 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v11 + 56) = v12;
  *(_QWORD *)(v11 + 64) = v13;
  *(_QWORD *)(v11 + 32) = v10;
  sub_1B8DFDB74();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  objc_msgSend(v8, sel_coordinate);
  v15 = v14;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = v19;
  *(_QWORD *)(v16 + 56) = v12;
  *(_QWORD *)(v16 + 64) = v13;
  *(_QWORD *)(v16 + 32) = v15;
  sub_1B8DFDB74();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  v17 = type metadata accessor for CurrentLocation(0);
  sub_1B8D9A42C(v20 + *(int *)(v17 + 20), (uint64_t)v3, type metadata accessor for LocationAccuracy);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1B8D9A088((uint64_t)v3, type metadata accessor for LocationAccuracy);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    sub_1B8DFD544();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  return v21;
}

uint64_t static CurrentLocation.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B8D9E394(0, (unint64_t *)&qword_1EF1E2890);
  if ((sub_1B8DFDE20() & 1) == 0)
    return 0;
  v4 = *(int *)(type metadata accessor for CurrentLocation(0) + 20);
  return sub_1B8DD1180(a1 + v4, a2 + v4);
}

uint64_t sub_1B8DCE600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B8D9E394(0, (unint64_t *)&qword_1EF1E2890);
  if ((sub_1B8DFDE20() & 1) != 0)
    return sub_1B8DD1180(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20));
  else
    return 0;
}

uint64_t CurrentLocationResult.current.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B8D9D288(v1, a1, &qword_1EF1E1E00);
}

uint64_t CurrentLocationResult.current.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1B8DC92C8(a1, v1, &qword_1EF1E1E00);
}

uint64_t (*CurrentLocationResult.current.modify())()
{
  return GEOLocationCoordinate2DMake;
}

id sub_1B8DCE6D8()
{
  objc_class *v0;
  _QWORD *v1;
  id result;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for LocationDataProvider();
  v1 = (_QWORD *)swift_allocObject();
  swift_defaultActor_initialize();
  v1[14] = MEMORY[0x1E0DEE9E0];
  v3.receiver = v1;
  v3.super_class = v0;
  result = objc_msgSendSuper2(&v3, sel_init);
  qword_1EF1E2B50 = (uint64_t)result;
  return result;
}

id LocationDataProvider.__allocating_init()()
{
  objc_class *v0;
  _QWORD *v1;
  objc_super v3;

  v1 = (_QWORD *)swift_allocObject();
  swift_defaultActor_initialize();
  v1[14] = MEMORY[0x1E0DEE9E0];
  v3.receiver = v1;
  v3.super_class = v0;
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t static LocationDataProvider.shared.getter()
{
  return sub_1B8DD0D44(&qword_1EF1E0F20);
}

MobileTimerSupport::LocationDataProvider::Use_optional __swiftcall LocationDataProvider.Use.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  MobileTimerSupport::LocationDataProvider::Use_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B8DFE00C();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t LocationDataProvider.Use.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x4B72656874616577;
  else
    return 0x6C616E7265746E69;
}

uint64_t sub_1B8DCE854(char *a1, char *a2)
{
  return sub_1B8DB3358(*a1, *a2);
}

MobileTimerSupport::LocationDataProvider::Use_optional sub_1B8DCE860(Swift::String *a1)
{
  return LocationDataProvider.Use.init(rawValue:)(*a1);
}

uint64_t sub_1B8DCE86C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = LocationDataProvider.Use.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B8DCE890()
{
  return sub_1B8DF905C();
}

uint64_t sub_1B8DCE898()
{
  return sub_1B8DB36CC();
}

uint64_t sub_1B8DCE8A0()
{
  return sub_1B8DF1380();
}

id sub_1B8DCE8A8(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  id v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  id v12;
  id v13;
  char isUniquelyReferenced_nonNull_native;
  id v15;
  uint64_t v16;

  v2 = *a1;
  v3 = (uint64_t *)(v1 + 112);
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 112);
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_1B8D96FF0(v2), (v6 & 1) != 0))
  {
    v15 = *(id *)(*(_QWORD *)(v4 + 56) + 8 * v5);
    swift_endAccess();
    return v15;
  }
  else
  {
    swift_endAccess();
    v8 = objc_allocWithZone((Class)type metadata accessor for LocationSource(0));
    if ((v2 & 1) != 0)
    {
      v9 = 0x80000001B8E085C0;
      v10 = 0xD000000000000011;
      v11 = 0;
    }
    else
    {
      v10 = 0xD000000000000035;
      v9 = 0x80000001B8E085E0;
      v11 = 1;
    }
    v12 = sub_1B8DCEAEC(v10, v9, v11);
    swift_beginAccess();
    v13 = v12;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v3;
    *v3 = 0x8000000000000000;
    sub_1B8DF52A4((uint64_t)v13, v2, isUniquelyReferenced_nonNull_native);
    *v3 = v16;
    swift_bridgeObjectRelease();
    swift_endAccess();
    return v13;
  }
}

id LocationDataProvider.init()()
{
  _QWORD *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType();
  swift_defaultActor_initialize();
  v0[14] = MEMORY[0x1E0DEE9E0];
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t LocationDataProvider.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t LocationDataProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

id sub_1B8DCEAEC(uint64_t a1, uint64_t a2, int a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  id v29;
  char *v30;
  void *v31;
  id v32;
  objc_class *v33;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  objc_super v41;
  unint64_t v42;
  unint64_t v43;

  v36 = a3;
  v40 = sub_1B8DFDDA8();
  MEMORY[0x1E0C80A78](v40);
  v39 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1B8DFDDB4();
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = &v35[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_1B8DFDA30();
  MEMORY[0x1E0C80A78](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1E00);
  MEMORY[0x1E0C80A78](v11);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource__isLocationUpdating;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2FD8);
  v15 = swift_allocObject();
  type metadata accessor for MTSUnfairLock();
  v16 = swift_allocObject();
  *(_DWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v15 + 16) = v16;
  *(_BYTE *)(v15 + 24) = 0;
  *(_QWORD *)&v3[v14] = v15;
  v17 = OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource__location;
  v18 = type metadata accessor for CurrentLocation(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v13, 1, 1, v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2FE0);
  v19 = (_QWORD *)swift_allocObject();
  v20 = swift_allocObject();
  *(_DWORD *)(v20 + 16) = 0;
  v19[2] = v20;
  sub_1B8DC8F74((uint64_t)v13, (uint64_t)v19 + *(_QWORD *)(*v19 + 96), &qword_1EF1E1E00);
  *(_QWORD *)&v3[v17] = v19;
  v21 = OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource_stream;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2FE8);
  v22 = swift_allocObject();
  v23 = v22 + *(_QWORD *)(*(_QWORD *)v22 + 96);
  v24 = type metadata accessor for CurrentLocationResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  v25 = *(_QWORD *)(*(_QWORD *)v22 + 104);
  v26 = swift_allocObject();
  *(_DWORD *)(v26 + 16) = 0;
  *(_QWORD *)(v22 + v25) = v26;
  *(_QWORD *)(v22 + *(_QWORD *)(*(_QWORD *)v22 + 112)) = MEMORY[0x1E0DEE9E0];
  *(_BYTE *)(v22 + *(_QWORD *)(*(_QWORD *)v22 + 120)) = 0;
  *(_QWORD *)&v3[v21] = v22;
  v27 = (void *)objc_opt_self();
  v28 = v3;
  v29 = objc_msgSend(v27, sel_meters);
  sub_1B8D9E394(0, &qword_1EF1E2D58);
  sub_1B8DFD520();
  *(_QWORD *)&v28[OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource_inUseAssertion] = 0;
  *(_QWORD *)&v28[OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource____lazy_storage___locationManager] = 1;
  v30 = &v28[OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource_source];
  *(_QWORD *)v30 = a1;
  *((_QWORD *)v30 + 1) = a2;
  LOBYTE(v22) = v36;
  v30[16] = v36 & 1;
  v42 = 0;
  v43 = 0xE000000000000000;
  sub_1B8DD3F54();
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  v42 = 0xD00000000000001FLL;
  v43 = 0x80000001B8E08620;
  if ((v22 & 1) != 0)
  {
    v31 = (void *)sub_1B8DFDB5C();
    v32 = objc_msgSend(v31, sel_lastPathComponent);

    sub_1B8DFDB68();
    sub_1B8DD3F6C();
  }
  sub_1B8D9E394(0, (unint64_t *)&qword_1ED36F840);
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  sub_1B8DFDA18();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v37 + 104))(v9, *MEMORY[0x1E0DEF8D8], v38);
  v42 = MEMORY[0x1E0DEE9D8];
  sub_1B8DA760C((unint64_t *)&unk_1ED36F830, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F810);
  sub_1B8D98FD0();
  sub_1B8DFDE80();
  *(_QWORD *)&v28[OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource_locationQueue] = sub_1B8DFDDE4();

  v33 = (objc_class *)type metadata accessor for LocationSource(0);
  v41.receiver = v28;
  v41.super_class = v33;
  return objc_msgSendSuper2(&v41, sel_init);
}

void sub_1B8DCEFD0(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  char *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v34 = a1;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2FC0);
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2FC8);
  MEMORY[0x1E0C80A78](v4);
  v40 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v36 = (char *)&v32 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1E2F20);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v32 - v15;
  v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource_stream];
  v18 = (os_unfair_lock_s *)(*(_QWORD *)(v17 + *(_QWORD *)(*(_QWORD *)v17 + 104)) + 16);
  swift_beginAccess();
  sub_1B8DFD22C();
  v19 = v1;
  os_unfair_lock_lock(v18);
  v20 = *(_QWORD *)(*(_QWORD *)v17 + 120);
  v21 = *(_BYTE *)(v17 + v20);
  if ((v21 & 1) == 0)
    *(_BYTE *)(v17 + v20) = 1;
  os_unfair_lock_unlock(v18);
  swift_endAccess();
  v22 = type metadata accessor for CurrentLocationResult(0);
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23(v16, 1, 1, v22);
  if ((v21 & 1) == 0)
  {
    sub_1B8DCF564((uint64_t)v13);
    v23(v13, 0, 1, v22);
    sub_1B8DC92C8((uint64_t)v13, (uint64_t)v16, (uint64_t *)&unk_1EF1E2F20);
  }
  v38 = v19;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2FD0);
  v35 = *(_QWORD *)(v24 - 8);
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
  v25(v10, 1, 1, v24);
  swift_beginAccess();
  os_unfair_lock_lock(v18);
  v26 = swift_endAccess();
  v27 = MEMORY[0x1E0C80A78](v26);
  *(&v32 - 2) = v17;
  *(&v32 - 1) = v28;
  v33 = v28;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v37 + 104))(v3, *MEMORY[0x1E0DF07B8], v39, v27);
  v29 = (uint64_t)v36;
  sub_1B8DFDD48();
  v25((char *)v29, 0, 1, v24);
  sub_1B8DC92C8(v29, (uint64_t)v10, &qword_1EF1E2FC8);
  swift_beginAccess();
  os_unfair_lock_unlock(v18);
  swift_endAccess();
  v30 = v40;
  v31 = v35;
  sub_1B8D9D288((uint64_t)v10, v40, &qword_1EF1E2FC8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v30, 1, v24) == 1)
  {

    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v34, v30, v24);
    sub_1B8D9D154((uint64_t)v10, &qword_1EF1E2FC8);
    sub_1B8D9D154(v33, (uint64_t *)&unk_1EF1E2F20);
    swift_release();

  }
}

uint64_t type metadata accessor for LocationAccuracy(uint64_t a1)
{
  return sub_1B8D9A054(a1, (uint64_t *)&unk_1EF1E2EF0);
}

uint64_t type metadata accessor for CurrentLocation(uint64_t a1)
{
  return sub_1B8D9A054(a1, qword_1EF1E2BE0);
}

id sub_1B8DCF3BC()
{
  unsigned __int8 *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  v1 = OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource____lazy_storage___locationManager;
  v2 = *(void **)&v0[OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource____lazy_storage___locationManager];
  v3 = v2;
  if (v2 == (void *)1)
  {
    v3 = sub_1B8DCF428(v0);
    v4 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v3;
    v5 = v3;
    sub_1B8DD4868(v4);
  }
  sub_1B8DD4878(v2);
  return v3;
}

id sub_1B8DCF428(unsigned __int8 *a1)
{
  int v2;
  unsigned __int8 *v3;
  id v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  char **v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;

  v2 = a1[OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource_source + 16];
  v3 = *(unsigned __int8 **)&a1[OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource_locationQueue];
  v4 = objc_allocWithZone(MEMORY[0x1E0C9E3C8]);
  if (v2)
    v5 = a1;
  else
    v5 = v3;
  if (v2)
    v6 = v3;
  else
    v6 = a1;
  if (v2)
    v7 = &selRef_initWithEffectiveBundlePath_delegate_onQueue_;
  else
    v7 = &selRef_initWithEffectiveBundleIdentifier_delegate_onQueue_;
  sub_1B8DD3F54();
  v8 = v5;
  v9 = v6;
  v10 = (void *)sub_1B8DFDB5C();
  sub_1B8DD3F6C();
  v11 = objc_msgSend(v4, *v7, v10, a1, v3);

  if (!v11)
  {
    v12 = (void *)objc_opt_self();
    v13 = (void *)sub_1B8DFDB5C();
    objc_msgSend(v12, sel_logError_, v13);

  }
  return v11;
}

uint64_t sub_1B8DCF564@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  char *v15;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v19 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1E2F20);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - v6;
  v8 = type metadata accessor for CurrentLocationResult(0);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  v10 = *(void **)&v1[OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource_locationQueue];
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v1;
  *(_QWORD *)(v11 + 24) = v7;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1B8DD4850;
  *(_QWORD *)(v12 + 24) = v11;
  aBlock[4] = sub_1B8DA01B0;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B8D8CD1C;
  aBlock[3] = &block_descriptor_10;
  v13 = _Block_copy(aBlock);
  v14 = v10;
  v15 = v1;
  sub_1B8DFD22C();
  swift_release();
  dispatch_sync(v14, v13);

  _Block_release(v13);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_1B8D9D288((uint64_t)v7, (uint64_t)v4, (uint64_t *)&unk_1EF1E2F20);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8);
    if ((_DWORD)result != 1)
    {
      sub_1B8DBF258((uint64_t)v4, v19, type metadata accessor for CurrentLocationResult);
      sub_1B8D9D154((uint64_t)v7, (uint64_t *)&unk_1EF1E2F20);
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

void sub_1B8DCF780(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = type metadata accessor for LocationAccuracy(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1B8DCFC3C() & 1) != 0)
  {
    v6 = sub_1B8DCF3BC();
    if (v6 && (v7 = v6, v8 = objc_msgSend(v6, sel_location), v7, v8))
    {
      objc_msgSend(v8, sel_horizontalAccuracy);
      v9 = objc_msgSend((id)objc_opt_self(), sel_meters);
      sub_1B8D9E394(0, &qword_1EF1E2D58);
      sub_1B8DFD520();
      v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 0, 1, v10);
      sub_1B8D9D154((uint64_t)a2, (uint64_t *)&unk_1EF1E2F20);
      v11 = type metadata accessor for CurrentLocation(0);
      sub_1B8DBF258((uint64_t)v5, (uint64_t)a2 + *(int *)(v11 + 20), type metadata accessor for LocationAccuracy);
      *a2 = v8;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, 0, 1, v11);
      v12 = type metadata accessor for CurrentLocationResult(0);
      v13 = v12;
      *((_BYTE *)a2 + *(int *)(v12 + 20)) = 2;
    }
    else
    {
      sub_1B8D9D154((uint64_t)a2, (uint64_t *)&unk_1EF1E2F20);
      v15 = type metadata accessor for CurrentLocation(0);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 1, 1, v15);
      v12 = type metadata accessor for CurrentLocationResult(0);
      v13 = v12;
      *((_BYTE *)a2 + *(int *)(v12 + 20)) = 1;
    }
  }
  else
  {
    sub_1B8D9D154((uint64_t)a2, (uint64_t *)&unk_1EF1E2F20);
    v14 = type metadata accessor for CurrentLocation(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
    v12 = type metadata accessor for CurrentLocationResult(0);
    v13 = v12;
    *((_BYTE *)a2 + *(int *)(v12 + 20)) = 0;
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a2, 0, 1, v13);
  sub_1B8DCF9D4();
}

void sub_1B8DCF9D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  char v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2F08);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFDA3C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)(v0
                + OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource_locationQueue);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E0DEF740], v4, v6);
  v10 = v9;
  LOBYTE(v9) = sub_1B8DFDA48();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v8, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    return;
  }
  v11 = sub_1B8DCF3BC();
  if (!v11)
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2F10);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v3, 1, 1, v19);
    sub_1B8DD01C8((uint64_t)v3);
LABEL_9:
    sub_1B8D9D154((uint64_t)v3, &qword_1EF1E2F08);
    return;
  }
  v12 = v11;
  if ((sub_1B8DCFC3C() & 1) == 0)
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2F10);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v3, 1, 1, v20);
    sub_1B8DD01C8((uint64_t)v3);

    goto LABEL_9;
  }
  v13 = OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource__isLocationUpdating;
  v14 = *(_QWORD *)(v0
                  + OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource__isLocationUpdating);
  v15 = (os_unfair_lock_s *)(*(_QWORD *)(v14 + 16) + 16);
  swift_beginAccess();
  sub_1B8DFD22C();
  os_unfair_lock_lock(v15);
  swift_beginAccess();
  v16 = *(_BYTE *)(v14 + 24);
  os_unfair_lock_unlock(v15);
  swift_endAccess();
  swift_release();
  if ((v16 & 1) == 0)
  {
    v17 = *(_QWORD *)(v0 + v13);
    v18 = (os_unfair_lock_s *)(*(_QWORD *)(v17 + 16) + 16);
    swift_beginAccess();
    sub_1B8DFD22C();
    os_unfair_lock_lock(v18);
    swift_beginAccess();
    *(_BYTE *)(v17 + 24) = 1;
    os_unfair_lock_unlock(v18);
    swift_endAccess();
    swift_release();
    objc_msgSend(v12, sel_startUpdatingLocation);
  }

}

uint64_t sub_1B8DCFC3C()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v0 = sub_1B8DCF3BC();
  if (!v0)
    return 0;
  v1 = v0;
  switch(objc_msgSend(v0, sel__authorizationStatus))
  {
    case 0u:
      v2 = (void *)objc_opt_self();
      v3 = (void *)sub_1B8DFDB5C();
      objc_msgSend(v2, sel_logInfo_, v3);

      v4 = sub_1B8DCF3BC();
      if (!v4)
        goto LABEL_14;
      v5 = v4;
      v6 = (void *)sub_1B8DFDB5C();
      objc_msgSend(v2, sel_logInfo_, v6);

      goto LABEL_8;
    case 1u:
    case 2u:
      v12 = (void *)objc_opt_self();
      v11 = (void *)sub_1B8DFDB5C();
      objc_msgSend(v12, sel_logInfo_, v11);
      v7 = 0;
      goto LABEL_11;
    case 3u:
    case 4u:
      v13 = (void *)objc_opt_self();
      v11 = (void *)sub_1B8DFDB5C();
      objc_msgSend(v13, sel_logInfo_, v11);
      v7 = 1;
      goto LABEL_11;
    default:
      v8 = sub_1B8DCF3BC();
      if (v8)
      {
        v5 = v8;
        v9 = (void *)objc_opt_self();
        v10 = (void *)sub_1B8DFDB5C();
        objc_msgSend(v9, sel_logInfo_, v10);

LABEL_8:
        objc_msgSend(v5, sel_requestWhenInUseAuthorizationWithPrompt);
        v7 = 0;
        v11 = v1;
        v1 = v5;
LABEL_11:

      }
      else
      {
LABEL_14:
        v7 = 0;
      }

      break;
  }
  return v7;
}

unint64_t sub_1B8DCFF04()
{
  uint64_t v0;
  char v1;
  void *v2;
  id v3;

  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  v1 = *(_BYTE *)(v0
                + OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource_source
                + 16);
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  if ((v1 & 1) != 0)
  {
    v2 = (void *)sub_1B8DFDB5C();
    v3 = objc_msgSend(v2, sel_lastPathComponent);

    sub_1B8DFDB68();
  }
  else
  {
    sub_1B8DFD3AC();
  }
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();

  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  return 0xD000000000000015;
}

id sub_1B8DD00D8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocationSource(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B8DD01C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  id v22;
  uint64_t result;
  uint64_t v24;
  os_unfair_lock_s *v25;
  id v26;
  void *v27;
  void *v28;
  uint64_t v29;
  os_unfair_lock_s *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  void (*v39)(char *, char *, uint64_t);
  _QWORD *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  os_unfair_lock_s *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  void **v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v53 = (char *)a1;
  v56 = type metadata accessor for CurrentLocationResult(0);
  MEMORY[0x1E0C80A78](v56);
  v3 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for CurrentLocation(0);
  v55 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v51 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2F08);
  MEMORY[0x1E0C80A78](v5);
  v7 = (void **)((char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2F10);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v50 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char **)((char *)&v50 - v12);
  MEMORY[0x1E0C80A78](v14);
  v54 = (void **)((char *)&v50 - v15);
  v16 = sub_1B8DFDA3C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char **)((char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = *(void **)(v1
                 + OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource_locationQueue);
  *v20 = v21;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v17 + 104))(v20, *MEMORY[0x1E0DEF740], v16, v18);
  v22 = v21;
  LOBYTE(v21) = sub_1B8DFDA48();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v17 + 8))(v20, v16);
  if ((v21 & 1) != 0)
  {
    v24 = *(_QWORD *)(v1
                    + OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource__isLocationUpdating);
    v25 = (os_unfair_lock_s *)(*(_QWORD *)(v24 + 16) + 16);
    swift_beginAccess();
    sub_1B8DFD22C();
    os_unfair_lock_lock(v25);
    swift_beginAccess();
    *(_BYTE *)(v24 + 24) = 0;
    os_unfair_lock_unlock(v25);
    swift_endAccess();
    swift_release();
    v52 = v1;
    v26 = sub_1B8DCF3BC();
    objc_msgSend(v26, sel_stopUpdatingLocation);

    sub_1B8D9D288((uint64_t)v53, (uint64_t)v7, &qword_1EF1E2F08);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_1B8D9D154((uint64_t)v7, &qword_1EF1E2F08);
      v27 = (void *)objc_opt_self();
      v28 = (void *)sub_1B8DFDB5C();
      objc_msgSend(v27, sel_logInfo_, v28);

      v29 = *(_QWORD *)(v52
                      + OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource_stream);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56))(v3, 1, 1, v57);
      v3[*(int *)(v56 + 20)] = 0;
      v30 = (os_unfair_lock_s *)(*(_QWORD *)(v29 + *(_QWORD *)(*(_QWORD *)v29 + 104)) + 16);
      swift_beginAccess();
      sub_1B8DFD22C();
      os_unfair_lock_lock(v30);
      swift_endAccess();
      sub_1B8DCC9F0((uint64_t)v3);
      swift_beginAccess();
      os_unfair_lock_unlock(v30);
      swift_endAccess();
      swift_release();
      return sub_1B8D9A088((uint64_t)v3, type metadata accessor for CurrentLocationResult);
    }
    else
    {
      v31 = *(int *)(v8 + 48);
      v32 = (char *)v54 + v31;
      v33 = (char *)v7 + v31;
      v34 = *v7;
      *v54 = *v7;
      v35 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
      v36 = *(_QWORD *)(v35 - 8);
      v53 = v3;
      v37 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
      v37(v32, v33, v35);
      v38 = (char *)v13 + *(int *)(v8 + 48);
      *v13 = v34;
      v39 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
      v39(v38, v32, v35);
      v40 = v51;
      v41 = &v51[*(int *)(v57 + 20)];
      v42 = &v50[*(int *)(v8 + 48)];
      v39(v42, v32, v35);
      v37(v41, v42, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v41, 0, 1, v35);
      v43 = (uint64_t)v40;
      *v40 = v34;
      v44 = *(void (**)(char *, uint64_t))(v36 + 8);
      v45 = v34;
      v44(v38, v35);
      v46 = (uint64_t)v53;
      v47 = *(_QWORD *)(v52
                      + OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource_stream);
      v48 = v43;
      sub_1B8D9A42C(v43, (uint64_t)v53, type metadata accessor for CurrentLocation);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v55 + 56))(v46, 0, 1, v57);
      *(_BYTE *)(v46 + *(int *)(v56 + 20)) = 2;
      v49 = (os_unfair_lock_s *)(*(_QWORD *)(v47 + *(_QWORD *)(*(_QWORD *)v47 + 104)) + 16);
      swift_beginAccess();
      sub_1B8DFD22C();
      os_unfair_lock_lock(v49);
      swift_endAccess();
      sub_1B8DCC9F0(v46);
      swift_beginAccess();
      os_unfair_lock_unlock(v49);
      swift_endAccess();
      swift_release();
      sub_1B8D9A088(v46, type metadata accessor for CurrentLocationResult);
      sub_1B8D9A088(v48, type metadata accessor for CurrentLocation);
      return sub_1B8D9D154((uint64_t)v54, &qword_1EF1E2F10);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1B8DD0750(void *a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  double v22;
  id v23;
  void *v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t v31;
  _BYTE v32[24];
  unint64_t v33;
  unint64_t v34;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2F08);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v32[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1B8DFDA3C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = &v32[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = *(void **)(v3
                 + OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource_locationQueue);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v10 + 104))(v13, *MEMORY[0x1E0DEF740], v9, v11);
  v15 = v14;
  LOBYTE(v14) = sub_1B8DFDA48();
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v13, v9);
  if ((v14 & 1) != 0)
  {
    v16 = *(_QWORD *)(v3
                    + OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource__isLocationUpdating);
    v17 = (os_unfair_lock_s *)(*(_QWORD *)(v16 + 16) + 16);
    swift_beginAccess();
    sub_1B8DFD22C();
    os_unfair_lock_lock(v17);
    swift_beginAccess();
    *(_BYTE *)(v16 + 24) = 1;
    os_unfair_lock_unlock(v17);
    swift_endAccess();
    swift_release();
    if (!(a2 >> 62))
    {
      v18 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      sub_1B8DFD3AC();
      if (v18)
        goto LABEL_4;
LABEL_15:
      swift_bridgeObjectRelease();
      v29 = (void *)objc_opt_self();
      v30 = (void *)sub_1B8DFDB5C();
      objc_msgSend(v29, sel_logDebug_, v30);

      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2F10);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v8, 1, 1, v31);
      sub_1B8DD01C8((uint64_t)v8);
LABEL_16:
      sub_1B8D9D154((uint64_t)v8, &qword_1EF1E2F08);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  sub_1B8DFD3AC();
  v18 = sub_1B8DFDFB8();
  if (!v18)
    goto LABEL_15;
LABEL_4:
  v19 = v18 - 1;
  if (__OFSUB__(v18, 1))
  {
    __break(1u);
    goto LABEL_18;
  }
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_18:
    v20 = (id)MEMORY[0x1BCCBC814](v19, a2);
LABEL_9:
    v21 = v20;
    swift_bridgeObjectRelease();
    if ((objc_msgSend(a1, sel__limitsPrecision) & 1) == 0)
    {
      objc_msgSend(v21, sel_horizontalAccuracy);
      if (v22 > 1500.0)
      {

        return;
      }
    }
    v33 = 0;
    v34 = 0xE000000000000000;
    sub_1B8DFDEF8();
    swift_bridgeObjectRelease();
    v33 = 0xD000000000000025;
    v34 = 0x80000001B8E08380;
    v23 = objc_msgSend(v21, sel_description);
    sub_1B8DFDB68();

    sub_1B8DFDBBC();
    swift_bridgeObjectRelease();
    v24 = (void *)objc_opt_self();
    sub_1B8DFDBBC();
    v25 = (void *)sub_1B8DFDB5C();
    swift_bridgeObjectRelease();
    objc_msgSend(v24, sel_logDebug_, v25);

    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2F10);
    *v8 = v21;
    v27 = v21;
    objc_msgSend(v27, sel_horizontalAccuracy);
    v28 = objc_msgSend((id)objc_opt_self(), sel_meters);
    sub_1B8D9E394(0, &qword_1EF1E2D58);
    sub_1B8DFD520();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v8, 0, 1, v26);
    sub_1B8DD01C8((uint64_t)v8);

    goto LABEL_16;
  }
  if ((v19 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v19 < *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v20 = *(id *)(a2 + 8 * v19 + 32);
    goto LABEL_9;
  }
  __break(1u);
}

id sub_1B8DD0CD4()
{
  uint64_t v0;
  id result;

  type metadata accessor for PlacemarkNameLookup();
  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E390]), sel_init);
  *(_QWORD *)(v0 + 112) = result;
  qword_1EF1E2B58 = v0;
  return result;
}

uint64_t static PlacemarkNameLookup.shared.getter()
{
  return sub_1B8DD0D44(&qword_1EF1E0F28);
}

uint64_t sub_1B8DD0D44(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return sub_1B8DFD22C();
}

uint64_t sub_1B8DD0D7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = v1;
  return swift_task_switch();
}

uint64_t sub_1B8DD0D94()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[16];
  v2 = *(void **)(v0[17] + 112);
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1B8DD0E38;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_1B8DD1084;
  v4[3] = &block_descriptor_9;
  v4[4] = v3;
  objc_msgSend(v2, sel_reverseGeocodeLocation_completionHandler_, v1, v4);
  return swift_continuation_await();
}

uint64_t sub_1B8DD0E38()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

void sub_1B8DD0E98()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 120);
  if (!(v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    v4 = 0;
    v6 = 0;
    goto LABEL_9;
  }
  sub_1B8DFD3AC();
  v7 = sub_1B8DFDFB8();
  swift_bridgeObjectRelease();
  if (!v7)
    goto LABEL_8;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)MEMORY[0x1BCCBC814](0, v1);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v2 = *(id *)(v1 + 32);
LABEL_6:
    v3 = v2;
    swift_bridgeObjectRelease();
    v4 = sub_1B8DD2970(v3);
    v6 = v5;

LABEL_9:
    (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v4, v6);
    return;
  }
  __break(1u);
}

uint64_t sub_1B8DD0F78()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 144);
  swift_willThrow();
  v2 = (void *)objc_opt_self();
  sub_1B8DFDEF8();
  *(_QWORD *)(v0 + 80) = 0;
  *(_QWORD *)(v0 + 88) = 0xE000000000000000;
  sub_1B8DFDBBC();
  *(_QWORD *)(v0 + 120) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1108);
  sub_1B8DFDF94();
  v3 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_logDebug_, v3);

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

uint64_t sub_1B8DD1084(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1108);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_1B8D9E394(0, &qword_1EF1E2F88);
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = sub_1B8DFDC64();
    return swift_continuation_throwingResume();
  }
}

uint64_t PlacemarkNameLookup.deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return v0;
}

uint64_t PlacemarkNameLookup.__deallocating_deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t PlacemarkNameLookup.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1B8DD1180(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocationAccuracy(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2F98);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v13[*(int *)(v14 + 48)];
  sub_1B8D9A42C(a1, (uint64_t)v13, type metadata accessor for LocationAccuracy);
  sub_1B8D9A42C(a2, v15, type metadata accessor for LocationAccuracy);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v13, 1, v4) != 1)
  {
    sub_1B8D9A42C((uint64_t)v13, (uint64_t)v10, type metadata accessor for LocationAccuracy);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      sub_1B8D9E394(0, &qword_1EF1E2D58);
      v17 = sub_1B8DFD514();
      v18 = *(void (**)(char *, uint64_t))(v5 + 8);
      v18(v7, v4);
      v18(v10, v4);
      sub_1B8D9A088((uint64_t)v13, type metadata accessor for LocationAccuracy);
      return v17 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_6;
  }
  if (v16(v15, 1, v4) != 1)
  {
LABEL_6:
    sub_1B8D9D154((uint64_t)v13, &qword_1EF1E2F98);
    v17 = 0;
    return v17 & 1;
  }
  sub_1B8D9A088((uint64_t)v13, type metadata accessor for LocationAccuracy);
  v17 = 1;
  return v17 & 1;
}

BOOL _s18MobileTimerSupport21CurrentLocationResultV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = type metadata accessor for CurrentLocation(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2F90);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1E00);
  MEMORY[0x1E0C80A78](v11);
  v30 = (uint64_t)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v27 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v27 - v17;
  v28 = a1;
  sub_1B8D9D288(a1, (uint64_t)&v27 - v17, &qword_1EF1E1E00);
  v29 = a2;
  sub_1B8D9D288(a2, (uint64_t)v15, &qword_1EF1E1E00);
  v19 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1B8D9D288((uint64_t)v18, (uint64_t)v10, &qword_1EF1E1E00);
  sub_1B8D9D288((uint64_t)v15, v19, &qword_1EF1E1E00);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v10, 1, v4) == 1)
  {
    sub_1B8D9D154((uint64_t)v15, &qword_1EF1E1E00);
    sub_1B8D9D154((uint64_t)v18, &qword_1EF1E1E00);
    if (v20(v19, 1, v4) == 1)
    {
      sub_1B8D9D154((uint64_t)v10, &qword_1EF1E1E00);
LABEL_4:
      v21 = type metadata accessor for CurrentLocationResult(0);
      return *(unsigned __int8 *)(v28 + *(int *)(v21 + 20)) == *(unsigned __int8 *)(v29 + *(int *)(v21 + 20));
    }
    goto LABEL_7;
  }
  v23 = v30;
  sub_1B8D9D288((uint64_t)v10, v30, &qword_1EF1E1E00);
  if (v20(v19, 1, v4) == 1)
  {
    sub_1B8D9D154((uint64_t)v15, &qword_1EF1E1E00);
    sub_1B8D9D154((uint64_t)v18, &qword_1EF1E1E00);
    sub_1B8D9A088(v23, type metadata accessor for CurrentLocation);
LABEL_7:
    v24 = &qword_1EF1E2F90;
    v25 = (uint64_t)v10;
LABEL_8:
    sub_1B8D9D154(v25, v24);
    return 0;
  }
  sub_1B8DBF258(v19, (uint64_t)v7, type metadata accessor for CurrentLocation);
  sub_1B8D9E394(0, (unint64_t *)&qword_1EF1E2890);
  if ((sub_1B8DFDE20() & 1) == 0)
  {
    sub_1B8D9A088((uint64_t)v7, type metadata accessor for CurrentLocation);
    sub_1B8D9D154((uint64_t)v15, &qword_1EF1E1E00);
    sub_1B8D9D154((uint64_t)v18, &qword_1EF1E1E00);
    sub_1B8D9A088(v23, type metadata accessor for CurrentLocation);
    v25 = (uint64_t)v10;
    v24 = &qword_1EF1E1E00;
    goto LABEL_8;
  }
  v26 = sub_1B8DD1180(v23 + *(int *)(v4 + 20), (uint64_t)&v7[*(int *)(v4 + 20)]);
  sub_1B8D9A088((uint64_t)v7, type metadata accessor for CurrentLocation);
  sub_1B8D9D154((uint64_t)v15, &qword_1EF1E1E00);
  sub_1B8D9D154((uint64_t)v18, &qword_1EF1E1E00);
  sub_1B8D9A088(v23, type metadata accessor for CurrentLocation);
  sub_1B8D9D154((uint64_t)v10, &qword_1EF1E1E00);
  if ((v26 & 1) != 0)
    goto LABEL_4;
  return 0;
}

uint64_t sub_1B8DD1728(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  int64_t v36;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E3020);
  v29 = *(_QWORD *)(v4 - 8);
  v30 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2AC0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v28 - v12;
  v14 = *(_QWORD *)(a1 + 64);
  v31 = a1 + 64;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v36 = v15;
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  sub_1B8DFD3AC();
  result = swift_beginAccess();
  v19 = 0;
  v36 = (unint64_t)(v36 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v21 = v20 | (v19 << 6);
      goto LABEL_23;
    }
    v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v36)
      return swift_release();
    v23 = *(_QWORD *)(v31 + 8 * v22);
    ++v19;
    if (!v23)
    {
      v19 = v22 + 1;
      if (v22 + 1 >= v36)
        return swift_release();
      v23 = *(_QWORD *)(v31 + 8 * v19);
      if (!v23)
      {
        v19 = v22 + 2;
        if (v22 + 2 >= v36)
          return swift_release();
        v23 = *(_QWORD *)(v31 + 8 * v19);
        if (!v23)
        {
          v19 = v22 + 3;
          if (v22 + 3 >= v36)
            return swift_release();
          v23 = *(_QWORD *)(v31 + 8 * v19);
          if (!v23)
            break;
        }
      }
    }
LABEL_22:
    v17 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_23:
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v13, *(_QWORD *)(a1 + 56) + *(_QWORD *)(v8 + 72) * v21, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, v7);
    v25 = *(_QWORD *)(a2 + 24);
    if (v25 != 1)
    {
      v26 = *(_BYTE *)(a2 + 40);
      v27 = *(_QWORD *)(a2 + 32);
      v32 = *(_QWORD *)(a2 + 16);
      v33 = v25;
      v34 = v27;
      v35 = v26;
      sub_1B8DFD3AC();
      sub_1B8DFDD24();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v30);
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  v24 = v22 + 4;
  if (v24 >= v36)
    return swift_release();
  v23 = *(_QWORD *)(v31 + 8 * v24);
  if (v23)
  {
    v19 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v36)
      return swift_release();
    v23 = *(_QWORD *)(v31 + 8 * v19);
    ++v24;
    if (v23)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1B8DD1A00(uint64_t a1, int64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;

  v53 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2A60);
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  MEMORY[0x1E0C80A78](v3);
  v47 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t *)&unk_1ED36F800;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B8DFD748();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v46 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v45 = (char *)&v41 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2F80);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v41 - v19;
  v21 = *(_QWORD *)(a1 + 64);
  v50 = a1 + 64;
  v22 = 1 << *(_BYTE *)(a1 + 32);
  v51 = v22;
  v52 = a1;
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v54 = v23 & v21;
  v24 = v53 + *(_QWORD *)(*(_QWORD *)v53 + 96);
  sub_1B8DFD3AC();
  result = swift_beginAccess();
  v26 = v54;
  v27 = 0;
  v51 = (unint64_t)(v51 + 63) >> 6;
  v43 = v20;
  v44 = v15;
  v42 = v24;
  while (1)
  {
    if (v26)
    {
      v54 = (v26 - 1) & v26;
      v53 = v27;
      v28 = __clz(__rbit64(v26)) | (v27 << 6);
      goto LABEL_24;
    }
    v29 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v51)
      return swift_release();
    v30 = *(_QWORD *)(v50 + 8 * v29);
    v31 = v27 + 1;
    if (!v30)
    {
      v31 = v27 + 2;
      if (v27 + 2 >= v51)
        return swift_release();
      v30 = *(_QWORD *)(v50 + 8 * v31);
      if (!v30)
      {
        v31 = v27 + 3;
        if (v27 + 3 >= v51)
          return swift_release();
        v30 = *(_QWORD *)(v50 + 8 * v31);
        if (!v30)
        {
          v31 = v27 + 4;
          if (v27 + 4 >= v51)
            return swift_release();
          v30 = *(_QWORD *)(v50 + 8 * v31);
          if (!v30)
            break;
        }
      }
    }
LABEL_23:
    v54 = (v30 - 1) & v30;
    v53 = v31;
    v28 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_24:
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v20, *(_QWORD *)(v52 + 56) + *(_QWORD *)(v15 + 72) * v28, v14);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    sub_1B8D9D288(v24, (uint64_t)v8, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_1B8D9D154((uint64_t)v8, v5);
    }
    else
    {
      v33 = v45;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v45, v8, v9);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v46, v33, v9);
      v34 = v8;
      v35 = v9;
      v36 = v10;
      v37 = v5;
      v38 = v47;
      sub_1B8DFDD24();
      v24 = v42;
      v39 = v38;
      v5 = v37;
      v10 = v36;
      v9 = v35;
      v8 = v34;
      v15 = v44;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v39, v49);
      v40 = v33;
      v20 = v43;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v40, v9);
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    v27 = v53;
    v26 = v54;
  }
  v32 = v27 + 5;
  if (v27 + 5 >= v51)
    return swift_release();
  v30 = *(_QWORD *)(v50 + 8 * v32);
  if (v30)
  {
    v31 = v27 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v31 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v31 >= v51)
      return swift_release();
    v30 = *(_QWORD *)(v50 + 8 * v31);
    ++v32;
    if (v30)
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1B8DD1E3C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t (*a5)(_QWORD), uint64_t *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t (*v45)(_QWORD);
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t (*v50)(_QWORD);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(_QWORD);
  uint64_t v61;
  int64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;

  v11 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v58 = *(_QWORD *)(v11 - 8);
  v59 = v11;
  MEMORY[0x1E0C80A78](v11);
  v57 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = a5;
  v65 = a5(0);
  v16 = *(_QWORD *)(v65 - 8);
  v17 = MEMORY[0x1E0C80A78](v65);
  v56 = (uint64_t)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v54 = (uint64_t)&v51 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(a6);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v22);
  v64 = (char *)&v51 - v24;
  v25 = *(_QWORD *)(a1 + 64);
  v61 = a1 + 64;
  v26 = 1 << *(_BYTE *)(a1 + 32);
  v66 = v26;
  v27 = -1;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  v28 = v27 & v25;
  v29 = a2 + *(_QWORD *)(*(_QWORD *)a2 + 96);
  v30 = v23;
  v31 = a1;
  sub_1B8DFD3AC();
  v63 = v29;
  result = swift_beginAccess();
  v33 = 0;
  v62 = (unint64_t)(v66 + 63) >> 6;
  v55 = v16;
  v52 = v31;
  v53 = v15;
  while (1)
  {
    if (v28)
    {
      v34 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      v66 = v33;
      v35 = v34 | (v33 << 6);
      goto LABEL_24;
    }
    v36 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v36 >= v62)
      return swift_release();
    v37 = *(_QWORD *)(v61 + 8 * v36);
    v38 = v33 + 1;
    if (!v37)
    {
      v38 = v33 + 2;
      if (v33 + 2 >= v62)
        return swift_release();
      v37 = *(_QWORD *)(v61 + 8 * v38);
      if (!v37)
      {
        v38 = v33 + 3;
        if (v33 + 3 >= v62)
          return swift_release();
        v37 = *(_QWORD *)(v61 + 8 * v38);
        if (!v37)
        {
          v38 = v33 + 4;
          if (v33 + 4 >= v62)
            return swift_release();
          v37 = *(_QWORD *)(v61 + 8 * v38);
          if (!v37)
            break;
        }
      }
    }
LABEL_23:
    v28 = (v37 - 1) & v37;
    v66 = v38;
    v35 = __clz(__rbit64(v37)) + (v38 << 6);
LABEL_24:
    v40 = v64;
    (*(void (**)(char *, unint64_t, uint64_t))(v21 + 16))(v64, *(_QWORD *)(v31 + 56) + *(_QWORD *)(v21 + 72) * v35, v20);
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v30, v40, v20);
    sub_1B8D9D288(v63, (uint64_t)v15, a4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v65) == 1)
    {
      sub_1B8D9D154((uint64_t)v15, a4);
    }
    else
    {
      v41 = (uint64_t)v15;
      v42 = v30;
      v43 = v54;
      v44 = a4;
      v45 = v60;
      sub_1B8DBF258(v41, v54, v60);
      sub_1B8D9A42C(v43, v56, v45);
      v46 = v21;
      v47 = v57;
      sub_1B8DFDD24();
      v48 = v47;
      v21 = v46;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v48, v59);
      v49 = v43;
      v30 = v42;
      v50 = v45;
      a4 = v44;
      v31 = v52;
      v15 = v53;
      v16 = v55;
      sub_1B8D9A088(v49, v50);
    }
    v33 = v66;
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v30, v20);
  }
  v39 = v33 + 5;
  if (v33 + 5 >= v62)
    return swift_release();
  v37 = *(_QWORD *)(v61 + 8 * v39);
  if (v37)
  {
    v38 = v33 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v38 = v39 + 1;
    if (__OFADD__(v39, 1))
      break;
    if (v38 >= v62)
      return swift_release();
    v37 = *(_QWORD *)(v61 + 8 * v38);
    ++v39;
    if (v37)
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1B8DD2258(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  int64_t v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  int64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;

  v11 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v58 = *(_QWORD *)(v11 - 8);
  v59 = v11;
  MEMORY[0x1E0C80A78](v11);
  v57 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = a5;
  v65 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v16 = *(_QWORD *)(v65 - 8);
  v17 = MEMORY[0x1E0C80A78](v65);
  v56 = (uint64_t)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v54 = (uint64_t)&v51 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(a6);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v22);
  v64 = (char *)&v51 - v24;
  v25 = *(_QWORD *)(a1 + 64);
  v61 = a1 + 64;
  v26 = 1 << *(_BYTE *)(a1 + 32);
  v66 = v26;
  v27 = -1;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  v28 = v27 & v25;
  v29 = a2 + *(_QWORD *)(*(_QWORD *)a2 + 96);
  v30 = v23;
  v31 = a1;
  sub_1B8DFD3AC();
  v63 = v29;
  result = swift_beginAccess();
  v33 = 0;
  v62 = (unint64_t)(v66 + 63) >> 6;
  v55 = v16;
  v52 = v31;
  v53 = v15;
  while (1)
  {
    if (v28)
    {
      v36 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      v66 = v33;
      v37 = v36 | (v33 << 6);
      goto LABEL_24;
    }
    v38 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v38 >= v62)
      return swift_release();
    v39 = *(_QWORD *)(v61 + 8 * v38);
    v40 = v33 + 1;
    if (!v39)
    {
      v40 = v33 + 2;
      if (v33 + 2 >= v62)
        return swift_release();
      v39 = *(_QWORD *)(v61 + 8 * v40);
      if (!v39)
      {
        v40 = v33 + 3;
        if (v33 + 3 >= v62)
          return swift_release();
        v39 = *(_QWORD *)(v61 + 8 * v40);
        if (!v39)
        {
          v40 = v33 + 4;
          if (v33 + 4 >= v62)
            return swift_release();
          v39 = *(_QWORD *)(v61 + 8 * v40);
          if (!v39)
            break;
        }
      }
    }
LABEL_23:
    v28 = (v39 - 1) & v39;
    v66 = v40;
    v37 = __clz(__rbit64(v39)) + (v40 << 6);
LABEL_24:
    v42 = v64;
    (*(void (**)(char *, unint64_t, uint64_t))(v21 + 16))(v64, *(_QWORD *)(v31 + 56) + *(_QWORD *)(v21 + 72) * v37, v20);
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v30, v42, v20);
    sub_1B8D9D288(v63, (uint64_t)v15, a4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v65) == 1)
    {
      v34 = (uint64_t)v15;
      v35 = a4;
    }
    else
    {
      v43 = (uint64_t)v15;
      v44 = v30;
      v45 = v54;
      v46 = a4;
      v47 = v60;
      sub_1B8DC8F74(v43, v54, v60);
      sub_1B8D9D288(v45, v56, v47);
      v48 = v21;
      v49 = v57;
      sub_1B8DFDD24();
      v50 = v49;
      v21 = v48;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v50, v59);
      v34 = v45;
      v30 = v44;
      v35 = v47;
      a4 = v46;
      v31 = v52;
      v15 = v53;
      v16 = v55;
    }
    sub_1B8D9D154(v34, v35);
    v33 = v66;
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v30, v20);
  }
  v41 = v33 + 5;
  if (v33 + 5 >= v62)
    return swift_release();
  v39 = *(_QWORD *)(v61 + 8 * v41);
  if (v39)
  {
    v40 = v33 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v40 = v41 + 1;
    if (__OFADD__(v41, 1))
      break;
    if (v40 >= v62)
      return swift_release();
    v39 = *(_QWORD *)(v61 + 8 * v40);
    ++v41;
    if (v39)
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1B8DD2670(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t result;
  void *v15;
  void *v16;
  uint64_t v17;
  _QWORD v18[4];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2F08);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B8DFDA3C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)(v2
                 + OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource_locationQueue);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v8 + 104))(v11, *MEMORY[0x1E0DEF740], v7, v9);
  v13 = v12;
  LOBYTE(v12) = sub_1B8DFDA48();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
  if ((v12 & 1) != 0)
  {
    v18[2] = 0;
    v18[3] = 0xE000000000000000;
    sub_1B8DFDEF8();
    sub_1B8DFDBBC();
    v18[1] = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1108);
    sub_1B8DFDF94();
    v15 = (void *)objc_opt_self();
    sub_1B8DFDBBC();
    v16 = (void *)sub_1B8DFDB5C();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_logDebug_, v16);

    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2F10);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 1, 1, v17);
    sub_1B8DD01C8((uint64_t)v6);
    return sub_1B8D9D154((uint64_t)v6, &qword_1EF1E2F08);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1B8DD286C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;

  v1 = sub_1B8DFDA3C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0
                + OBJC_IVAR____TtC18MobileTimerSupportP33_0CD95D0D9EE7821C8CFFD1B73E50A13E14LocationSource_locationQueue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v2 + 104))(v5, *MEMORY[0x1E0DEF740], v1, v3);
  v7 = v6;
  LOBYTE(v6) = sub_1B8DFDA48();
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v5, v1);
  if ((v6 & 1) != 0)
  {
    v8 = (void *)objc_opt_self();
    v9 = (void *)sub_1B8DFDB5C();
    objc_msgSend(v8, sel_logDebug_, v9);

    sub_1B8DCF9D4();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B8DD2970(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_locality);
  if (!v2)
  {
    v2 = objc_msgSend(a1, sel_name);
    if (!v2)
    {
      v2 = objc_msgSend(a1, sel_subAdministrativeArea);
      if (!v2)
      {
        v2 = objc_msgSend(a1, sel_administrativeArea);
        if (!v2)
        {
          v2 = objc_msgSend(a1, sel_inlandWater);
          if (!v2)
          {
            v2 = objc_msgSend(a1, sel_country);
            if (!v2)
            {
              v2 = objc_msgSend(a1, sel_ocean);
              if (!v2)
                return 0;
            }
          }
        }
      }
    }
  }
  v3 = sub_1B8DFDB68();

  return v3;
}

unint64_t sub_1B8DD2A9C()
{
  unint64_t result;

  result = qword_1EF1E2B80;
  if (!qword_1EF1E2B80)
  {
    result = MEMORY[0x1BCCBD0FC](&protocol conformance descriptor for LocationDataProvider.Use, &type metadata for LocationDataProvider.Use);
    atomic_store(result, (unint64_t *)&qword_1EF1E2B80);
  }
  return result;
}

void **initializeBufferWithCopyOfBuffer for CurrentLocation(void **a1, void **a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = (char *)*a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (void **)&v5[(v4 + 16) & ~(unint64_t)v4];
    sub_1B8DFD22C();
  }
  else
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = v5;
    v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      v12 = type metadata accessor for LocationAccuracy(0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
  }
  return a1;
}

uint64_t destroy for CurrentLocation(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

void **initializeWithCopy for CurrentLocation(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = v4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
  {
    v11 = type metadata accessor for LocationAccuracy(0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v6, v7, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
  }
  return a1;
}

void **assignWithCopy for CurrentLocation(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = type metadata accessor for LocationAccuracy(0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

_QWORD *initializeWithTake for CurrentLocation(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = type metadata accessor for LocationAccuracy(0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void **assignWithTake for CurrentLocation(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = type metadata accessor for LocationAccuracy(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for CurrentLocation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DD3000(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for LocationAccuracy(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CurrentLocation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1B8DD3088(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for LocationAccuracy(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1B8DD30FC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for LocationAccuracy(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for CurrentLocationResult(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    sub_1B8DFD22C();
  }
  else
  {
    v7 = type metadata accessor for CurrentLocation(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1E00);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = *a2;
      *(_QWORD *)a1 = *a2;
      v12 = *(int *)(v7 + 20);
      v13 = &a1[v12];
      v14 = (char *)a2 + v12;
      v15 = v11;
      v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      {
        v18 = type metadata accessor for LocationAccuracy(0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v13, v14, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    a1[*(int *)(a3 + 20)] = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for CurrentLocationResult(id *a1)
{
  uint64_t v2;
  uint64_t result;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = type metadata accessor for CurrentLocation(0);
  result = (*(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {

    v4 = (char *)a1 + *(int *)(v2 + 20);
    v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
    v6 = *(_QWORD *)(v5 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  return result;
}

void **initializeWithCopy for CurrentLocationResult(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for CurrentLocation(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1E00);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = *a2;
    *a1 = *a2;
    v10 = *(int *)(v6 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = v9;
    v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
    {
      v16 = type metadata accessor for LocationAccuracy(0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v11, v12, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    }
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void **assignWithCopy for CurrentLocationResult(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void **, uint64_t, uint64_t);
  int v9;
  int v10;
  void *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  size_t v19;
  void **v20;
  void **v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  int v32;

  v6 = type metadata accessor for CurrentLocation(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v22 = *a2;
      v23 = *a1;
      *a1 = *a2;
      v24 = v22;

      v25 = *(int *)(v6 + 20);
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
      v29 = *(_QWORD *)(v28 - 8);
      v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
      v31 = v30(v26, 1, v28);
      v32 = v30(v27, 1, v28);
      if (v31)
      {
        if (!v32)
        {
          (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v32)
        {
          (*(void (**)(char *, char *, uint64_t))(v29 + 24))(v26, v27, v28);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for LocationAccuracy(0) - 8) + 64);
      v20 = (void **)v26;
      v21 = (void **)v27;
      goto LABEL_8;
    }
    sub_1B8D9A088((uint64_t)a1, type metadata accessor for CurrentLocation);
LABEL_7:
    v19 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1E00) - 8) + 64);
    v20 = a1;
    v21 = a2;
LABEL_8:
    memcpy(v20, v21, v19);
    goto LABEL_14;
  }
  if (v10)
    goto LABEL_7;
  v11 = *a2;
  *a1 = *a2;
  v12 = *(int *)(v6 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = v11;
  v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
  {
    v18 = type metadata accessor for LocationAccuracy(0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v13, v14, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
  }
  (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *initializeWithTake for CurrentLocationResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for CurrentLocation(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1E00);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v9 = *(int *)(v6 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = type metadata accessor for LocationAccuracy(0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void **assignWithTake for CurrentLocationResult(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void **, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  void **v18;
  const void *v19;
  void *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;

  v6 = type metadata accessor for CurrentLocation(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v20 = *a1;
      *a1 = *a2;

      v21 = *(int *)(v6 + 20);
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
      v25 = *(_QWORD *)(v24 - 8);
      v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
      v27 = v26(v22, 1, v24);
      v28 = v26(v23, 1, v24);
      if (v27)
      {
        if (!v28)
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v28)
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
      }
      v17 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for LocationAccuracy(0) - 8) + 64);
      v18 = (void **)v22;
      v19 = v23;
      goto LABEL_8;
    }
    sub_1B8D9A088((uint64_t)a1, type metadata accessor for CurrentLocation);
LABEL_7:
    v17 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1E00) - 8) + 64);
    v18 = a1;
    v19 = a2;
LABEL_8:
    memcpy(v18, v19, v17);
    goto LABEL_14;
  }
  if (v10)
    goto LABEL_7;
  *a1 = *a2;
  v11 = *(int *)(v6 + 20);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = type metadata accessor for LocationAccuracy(0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for CurrentLocationResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DD3AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1E00);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 5)
    return v9 - 4;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CurrentLocationResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DD3B3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1E00);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 4;
  return result;
}

uint64_t type metadata accessor for CurrentLocationResult(uint64_t a1)
{
  return sub_1B8D9A054(a1, (uint64_t *)&unk_1EF1E2C70);
}

void sub_1B8DD3BCC()
{
  unint64_t v0;

  sub_1B8DBD2E8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t type metadata accessor for LocationDataProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for LocationDataProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LocationDataProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t storeEnumTagSinglePayload for LocationDataProvider.Use(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B8DD3CBC + 4 * byte_1B8E0346A[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B8DD3CF0 + 4 * byte_1B8E03465[v4]))();
}

uint64_t sub_1B8DD3CF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DD3CF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8DD3D00);
  return result;
}

uint64_t sub_1B8DD3D0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8DD3D14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B8DD3D18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DD3D20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocationDataProvider.Use()
{
  return &type metadata for LocationDataProvider.Use;
}

uint64_t sub_1B8DD3D3C()
{
  return type metadata accessor for LocationSource(0);
}

uint64_t type metadata accessor for LocationSource(uint64_t a1)
{
  return sub_1B8D9A054(a1, (uint64_t *)&unk_1EF1E2D40);
}

void sub_1B8DD3D58()
{
  unint64_t v0;

  sub_1B8DD3E04();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1B8DD3E04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF1E2D50)
  {
    sub_1B8D9E394(255, &qword_1EF1E2D58);
    v0 = sub_1B8DFD550();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF1E2D50);
  }
}

uint64_t type metadata accessor for PlacemarkNameLookup()
{
  return objc_opt_self();
}

uint64_t method lookup function for PlacemarkNameLookup()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlacemarkNameLookup.name(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 96) + *(_QWORD *)(*(_QWORD *)v1 + 96));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1B8DD3EF8;
  return v6(a1);
}

uint64_t sub_1B8DD3EF8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_1B8DD3F54()
{
  return sub_1B8DFD3AC();
}

uint64_t destroy for LocationSource.Source()
{
  return sub_1B8DD3F6C();
}

uint64_t sub_1B8DD3F6C()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s18MobileTimerSupport14LocationSourceC6SourceOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_1B8DD3F54();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LocationSource.Source(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_1B8DD3F54();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1B8DD3F6C();
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LocationSource.Source(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1B8DD3F6C();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationSource.Source(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationSource.Source(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1B8DD40F4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1B8DD40FC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for LocationSource.Source()
{
  return &type metadata for LocationSource.Source;
}

uint64_t storeEnumTagSinglePayload for LocationStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1B8DD4164 + 4 * byte_1B8E03474[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1B8DD4198 + 4 * byte_1B8E0346F[v4]))();
}

uint64_t sub_1B8DD4198(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DD41A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8DD41A8);
  return result;
}

uint64_t sub_1B8DD41B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8DD41BCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1B8DD41C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DD41C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocationStatus()
{
  return &type metadata for LocationStatus;
}

uint64_t *sub_1B8DD41E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    sub_1B8DFD22C();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1B8DD42B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *sub_1B8DD431C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1B8DD43C4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *sub_1B8DD44B8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1B8DD4560(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1B8DD4654()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DD4660(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1B8DD46B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DD46BC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1B8DD4710(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1B8DD474C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E2B60);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

void sub_1B8DD4790()
{
  unint64_t v0;

  sub_1B8DD3E04();
  if (v0 <= 0x3F)
    swift_initEnumMetadataSinglePayload();
}

unint64_t sub_1B8DD47E8()
{
  unint64_t result;

  result = qword_1EF1E2F00;
  if (!qword_1EF1E2F00)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E037F4, &type metadata for LocationStatus);
    atomic_store(result, (unint64_t *)&qword_1EF1E2F00);
  }
  return result;
}

uint64_t sub_1B8DD482C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1B8DD4850()
{
  uint64_t v0;

  sub_1B8DCF780(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_1B8DD4858()
{
  return swift_deallocObject();
}

void sub_1B8DD4868(id a1)
{
  if (a1 != (id)1)

}

id sub_1B8DD4878(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

uint64_t sub_1B8DD4888(uint64_t a1)
{
  uint64_t v1;

  return sub_1B8DCA534(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1B8DD4890(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return sub_1B8DFD3AC();
  return result;
}

_QWORD *sub_1B8DD48AC(_QWORD *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1B8DFD22C();
  }
  else
  {
    v7 = sub_1B8DFD748();
    v8 = *(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = type metadata accessor for SolarEvent(0);
    *((_BYTE *)a1 + *(int *)(v9 + 20)) = a2[*(int *)(v9 + 20)];
    *(_DWORD *)((char *)a1 + *(int *)(v9 + 24)) = *(_DWORD *)&a2[*(int *)(v9 + 24)];
    v10 = a3[5];
    v11 = (char *)a1 + v10;
    v12 = &a2[v10];
    v8((_QWORD *)((char *)a1 + v10), &a2[v10], v7);
    v11[*(int *)(v9 + 20)] = v12[*(int *)(v9 + 20)];
    *(_DWORD *)&v11[*(int *)(v9 + 24)] = *(_DWORD *)&v12[*(int *)(v9 + 24)];
    v13 = a3[6];
    v14 = (char *)a1 + v13;
    v15 = &a2[v13];
    v8((_QWORD *)((char *)a1 + v13), &a2[v13], v7);
    v14[*(int *)(v9 + 20)] = v15[*(int *)(v9 + 20)];
    *(_DWORD *)&v14[*(int *)(v9 + 24)] = *(_DWORD *)&v15[*(int *)(v9 + 24)];
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = &a2[v16];
    v8((_QWORD *)((char *)a1 + v16), &a2[v16], v7);
    v17[*(int *)(v9 + 20)] = v18[*(int *)(v9 + 20)];
    *(_DWORD *)&v17[*(int *)(v9 + 24)] = *(_DWORD *)&v18[*(int *)(v9 + 24)];
    v19 = a3[8];
    v20 = (char *)a1 + v19;
    v21 = &a2[v19];
    v8((_QWORD *)((char *)a1 + v19), v21, v7);
    v20[*(int *)(v9 + 20)] = v21[*(int *)(v9 + 20)];
    *(_DWORD *)&v20[*(int *)(v9 + 24)] = *(_DWORD *)&v21[*(int *)(v9 + 24)];
  }
  return a1;
}

uint64_t type metadata accessor for SolarEvent(uint64_t a1)
{
  return sub_1B8D9A054(a1, qword_1EF1E3120);
}

uint64_t sub_1B8DD4A44(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_1B8DFD748();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  v6(a1 + a2[5], v4);
  v6(a1 + a2[6], v4);
  v6(a1 + a2[7], v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + a2[8], v4);
}

uint64_t sub_1B8DD4AE8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1B8DFD748();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  *(_BYTE *)(v10 + *(int *)(v8 + 20)) = *(_BYTE *)(v11 + *(int *)(v8 + 20));
  *(_DWORD *)(v10 + *(int *)(v8 + 24)) = *(_DWORD *)(v11 + *(int *)(v8 + 24));
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v7(a1 + v12, a2 + v12, v6);
  *(_BYTE *)(v13 + *(int *)(v8 + 20)) = *(_BYTE *)(v14 + *(int *)(v8 + 20));
  *(_DWORD *)(v13 + *(int *)(v8 + 24)) = *(_DWORD *)(v14 + *(int *)(v8 + 24));
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v7(a1 + v15, a2 + v15, v6);
  *(_BYTE *)(v16 + *(int *)(v8 + 20)) = *(_BYTE *)(v17 + *(int *)(v8 + 20));
  *(_DWORD *)(v16 + *(int *)(v8 + 24)) = *(_DWORD *)(v17 + *(int *)(v8 + 24));
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v7(a1 + v18, v20, v6);
  *(_BYTE *)(v19 + *(int *)(v8 + 20)) = *(_BYTE *)(v20 + *(int *)(v8 + 20));
  *(_DWORD *)(v19 + *(int *)(v8 + 24)) = *(_DWORD *)(v20 + *(int *)(v8 + 24));
  return a1;
}

uint64_t sub_1B8DD4C40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1B8DFD748();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  *(_BYTE *)(v10 + *(int *)(v8 + 20)) = *(_BYTE *)(v11 + *(int *)(v8 + 20));
  *(_DWORD *)(v10 + *(int *)(v8 + 24)) = *(_DWORD *)(v11 + *(int *)(v8 + 24));
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v7(a1 + v12, a2 + v12, v6);
  *(_BYTE *)(v13 + *(int *)(v8 + 20)) = *(_BYTE *)(v14 + *(int *)(v8 + 20));
  *(_DWORD *)(v13 + *(int *)(v8 + 24)) = *(_DWORD *)(v14 + *(int *)(v8 + 24));
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v7(a1 + v15, a2 + v15, v6);
  *(_BYTE *)(v16 + *(int *)(v8 + 20)) = *(_BYTE *)(v17 + *(int *)(v8 + 20));
  *(_DWORD *)(v16 + *(int *)(v8 + 24)) = *(_DWORD *)(v17 + *(int *)(v8 + 24));
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v7(a1 + v18, v20, v6);
  *(_BYTE *)(v19 + *(int *)(v8 + 20)) = *(_BYTE *)(v20 + *(int *)(v8 + 20));
  *(_DWORD *)(v19 + *(int *)(v8 + 24)) = *(_DWORD *)(v20 + *(int *)(v8 + 24));
  return a1;
}

uint64_t sub_1B8DD4D98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1B8DFD748();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  *(_BYTE *)(v10 + *(int *)(v8 + 20)) = *(_BYTE *)(v11 + *(int *)(v8 + 20));
  *(_DWORD *)(v10 + *(int *)(v8 + 24)) = *(_DWORD *)(v11 + *(int *)(v8 + 24));
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v7(a1 + v12, a2 + v12, v6);
  *(_BYTE *)(v13 + *(int *)(v8 + 20)) = *(_BYTE *)(v14 + *(int *)(v8 + 20));
  *(_DWORD *)(v13 + *(int *)(v8 + 24)) = *(_DWORD *)(v14 + *(int *)(v8 + 24));
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v7(a1 + v15, a2 + v15, v6);
  *(_BYTE *)(v16 + *(int *)(v8 + 20)) = *(_BYTE *)(v17 + *(int *)(v8 + 20));
  *(_DWORD *)(v16 + *(int *)(v8 + 24)) = *(_DWORD *)(v17 + *(int *)(v8 + 24));
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v7(a1 + v18, v20, v6);
  *(_BYTE *)(v19 + *(int *)(v8 + 20)) = *(_BYTE *)(v20 + *(int *)(v8 + 20));
  *(_DWORD *)(v19 + *(int *)(v8 + 24)) = *(_DWORD *)(v20 + *(int *)(v8 + 24));
  return a1;
}

uint64_t sub_1B8DD4EF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1B8DFD748();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  *(_BYTE *)(v10 + *(int *)(v8 + 20)) = *(_BYTE *)(v11 + *(int *)(v8 + 20));
  *(_DWORD *)(v10 + *(int *)(v8 + 24)) = *(_DWORD *)(v11 + *(int *)(v8 + 24));
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v7(a1 + v12, a2 + v12, v6);
  *(_BYTE *)(v13 + *(int *)(v8 + 20)) = *(_BYTE *)(v14 + *(int *)(v8 + 20));
  *(_DWORD *)(v13 + *(int *)(v8 + 24)) = *(_DWORD *)(v14 + *(int *)(v8 + 24));
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v7(a1 + v15, a2 + v15, v6);
  *(_BYTE *)(v16 + *(int *)(v8 + 20)) = *(_BYTE *)(v17 + *(int *)(v8 + 20));
  *(_DWORD *)(v16 + *(int *)(v8 + 24)) = *(_DWORD *)(v17 + *(int *)(v8 + 24));
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v7(a1 + v18, v20, v6);
  *(_BYTE *)(v19 + *(int *)(v8 + 20)) = *(_BYTE *)(v20 + *(int *)(v8 + 20));
  *(_DWORD *)(v19 + *(int *)(v8 + 24)) = *(_DWORD *)(v20 + *(int *)(v8 + 24));
  return a1;
}

uint64_t sub_1B8DD5048()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DD5054(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SolarEvent(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1B8DD5090()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DD509C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SolarEvent(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SolarCycle(uint64_t a1)
{
  return sub_1B8D9A054(a1, qword_1EF1E3080);
}

uint64_t sub_1B8DD50F0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SolarEvent(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1B8DD5160(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1B8DFD22C();
  }
  else
  {
    v7 = sub_1B8DFD748();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    *(_DWORD *)((char *)a1 + v8) = *(_DWORD *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_1B8DD51F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1B8DD5254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + *(int *)(a3 + 24)) = *(_DWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1B8DD52BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1B8DD5320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1B8DD5384()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DD5390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1B8DFD748();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 4)
    return v9 - 3;
  else
    return 0;
}

uint64_t sub_1B8DD5408()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DD5414(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1B8DFD748();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
  return result;
}

uint64_t sub_1B8DD548C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B8DFD748();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1B8DD550C()
{
  return sub_1B8DA760C(&qword_1EF1E3160, type metadata accessor for SolarEvent, (uint64_t)&unk_1B8E038B8);
}

uint64_t sub_1B8DD5538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  char v9;
  void (*v10)(char *, uint64_t);
  char v12;
  char v13;
  uint64_t v14;

  v1 = type metadata accessor for SolarEvent(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD748();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF1E0F18 != -1)
    swift_once();
  sub_1B8DFD73C();
  v8 = (int *)type metadata accessor for SolarCycle(0);
  sub_1B8D9A42C(v0 + v8[7], (uint64_t)v3, type metadata accessor for SolarEvent);
  v9 = sub_1B8DFD6DC();
  v10 = *(void (**)(char *, uint64_t))(v5 + 8);
  v10(v3, v4);
  if ((v9 & 1) != 0)
  {
    v10(v7, v4);
    return 0;
  }
  else
  {
    sub_1B8D9A42C(v0 + v8[6], (uint64_t)v3, type metadata accessor for SolarEvent);
    v12 = sub_1B8DFD6DC();
    v10(v3, v4);
    if ((v12 & 1) != 0)
    {
      v10(v7, v4);
      return 3;
    }
    else
    {
      sub_1B8D9A42C(v0 + v8[5], (uint64_t)v3, type metadata accessor for SolarEvent);
      v13 = sub_1B8DFD6DC();
      v10(v7, v4);
      v10(v3, v4);
      if ((v13 & 1) != 0)
        return 2;
      else
        return 1;
    }
  }
}

void sub_1B8DD56FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;

  v1 = type metadata accessor for SolarEvent(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD748();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B8DD5538();
  if (qword_1EF1E0F18 != -1)
    swift_once();
  sub_1B8DFD73C();
  v9 = type metadata accessor for SolarCycle(0);
  sub_1B8D9A42C(v0 + *(int *)(v9 + 24), (uint64_t)v3, type metadata accessor for SolarEvent);
  sub_1B8DFD6E8();
  v10 = *(void (**)(char *, uint64_t))(v5 + 8);
  v10(v7, v4);
  v10(v3, v4);
  __asm { BR              X10 }
}

void sub_1B8DD58F8(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  _QWORD v17[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = GEOLocationCoordinate2DMake(a2, a3);
  v11 = v10;
  v12 = sub_1B8DFD748();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v8, a1, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
  v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) != 1)
  {
    v14 = (void *)sub_1B8DFD6D0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
  }
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D270E0]), sel_initWithLocation_date_body_, v14, 0, v9, v11);

  if (v15)
  {
    objc_msgSend(v15, sel_altitude);
  }
  else
  {
    v17[2] = 0;
    v17[3] = 0xE000000000000000;
    sub_1B8DFDEF8();
    sub_1B8DFDBBC();
    *(double *)v17 = a2;
    *(double *)&v17[1] = a3;
    type metadata accessor for CLLocationCoordinate2D(0);
    sub_1B8DFDB80();
    sub_1B8DFDBBC();
    swift_bridgeObjectRelease();
    v16 = (void *)objc_opt_self();
    sub_1B8DFDBBC();
    sub_1B8DA760C(&qword_1EF1E3178, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    sub_1B8DFE0B4();
    sub_1B8DFDBBC();
    swift_bridgeObjectRelease();
    v15 = (id)sub_1B8DFDB5C();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_logError_, v15);
  }

}

uint64_t sub_1B8DD5B58@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  double v29;
  double v30;
  void *v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  id v37;
  char *v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  void (*v43)(uint64_t, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  void (*v51)(uint64_t, uint64_t);
  int *v52;
  uint64_t v53;
  uint64_t v54;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v61 = a1;
  v5 = type metadata accessor for SolarEvent(0);
  MEMORY[0x1E0C80A78](v5);
  v65 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v64 = (uint64_t)&v56 - v8;
  MEMORY[0x1E0C80A78](v9);
  v63 = (uint64_t)&v56 - v10;
  MEMORY[0x1E0C80A78](v11);
  v62 = (uint64_t)&v56 - v12;
  v13 = sub_1B8DFD748();
  v59 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v60 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v58 = (char *)&v56 - v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v56 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v56 - v21;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v56 - v24;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v56 - v27;
  sub_1B8DFD6A0();
  v30 = v29;
  v31 = (void *)objc_opt_self();
  v32 = GEOLocationCoordinate2DMake(a2, a3);
  v34 = v33;
  objc_msgSend(v31, sel_nextEventOfType_after_forLocation_altitudeInDegrees_accuracy_, 8, v30, v32, v33, 0.0, 60.0);
  v57 = v25;
  sub_1B8DFD694();
  v35 = *MEMORY[0x1E0D26430];
  objc_msgSend(v31, sel_prevEventOfType_before_forLocation_altitudeInDegrees_accuracy_, 8, v30, v32, v34, *MEMORY[0x1E0D26430], 60.0);
  sub_1B8DFD694();
  v56 = v28;
  sub_1B8DFD6A0();
  v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D27558]), sel_initWithLocation_time_altitudeInDegrees_accuracy_, v32, v34, v36, v35, 60.0);
  objc_msgSend(v37, sel_nextEventOfType_, 16);
  sub_1B8DFD694();
  objc_msgSend(v37, sel_nextEventOfType_, 32);
  v38 = v19;
  sub_1B8DFD694();
  sub_1B8DFD6A0();
  objc_msgSend(v31, sel_prevEventOfType_before_forLocation_altitudeInDegrees_accuracy_, 512);
  v39 = (uint64_t)v58;
  sub_1B8DFD694();

  sub_1B8DD58F8((uint64_t)v22, a2, a3);
  LODWORD(v32) = v40;
  sub_1B8DD58F8(v39, a2, a3);
  LODWORD(a3) = v41;
  v42 = v59;
  v43 = *(void (**)(uint64_t, char *, uint64_t))(v59 + 16);
  v44 = v62;
  v43(v62, v28, v13);
  *(_BYTE *)(v44 + *(int *)(v5 + 20)) = 0;
  *(_DWORD *)(v44 + *(int *)(v5 + 24)) = 0;
  v45 = v63;
  v46 = v22;
  v43(v63, v22, v13);
  *(_BYTE *)(v45 + *(int *)(v5 + 20)) = 2;
  *(_DWORD *)(v45 + *(int *)(v5 + 24)) = LODWORD(v32);
  v47 = v64;
  v43(v64, v38, v13);
  *(_BYTE *)(v47 + *(int *)(v5 + 20)) = 1;
  *(_DWORD *)(v47 + *(int *)(v5 + 24)) = 0;
  v48 = v65;
  v43(v65, (char *)v39, v13);
  *(_BYTE *)(v48 + *(int *)(v5 + 20)) = 3;
  *(_DWORD *)(v48 + *(int *)(v5 + 24)) = LODWORD(a3);
  v49 = v60;
  v50 = v57;
  v43((uint64_t)v60, v57, v13);
  v51 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
  v51(v39, v13);
  v51((uint64_t)v38, v13);
  v51((uint64_t)v46, v13);
  v51((uint64_t)v50, v13);
  v51((uint64_t)v56, v13);
  v52 = (int *)type metadata accessor for SolarCycle(0);
  v53 = v61;
  v54 = v61 + v52[8];
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v54, v49, v13);
  *(_BYTE *)(v54 + *(int *)(v5 + 20)) = 0;
  *(_DWORD *)(v54 + *(int *)(v5 + 24)) = 0;
  sub_1B8DD6880(v62, v53);
  sub_1B8DD6880(v63, v53 + v52[5]);
  sub_1B8DD6880(v64, v53 + v52[6]);
  return sub_1B8DD6880(v65, v53 + v52[7]);
}

uint64_t sub_1B8DD6024()
{
  sub_1B8DFE15C();
  sub_1B8DFD748();
  sub_1B8DA760C(&qword_1EF1E3170, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1B8DFDAC0();
  type metadata accessor for SolarEvent(0);
  sub_1B8DFE168();
  sub_1B8DFE174();
  return sub_1B8DFE18C();
}

BOOL sub_1B8DD60D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (sub_1B8DFD70C() & 1) != 0
      && *(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(a3 + 20))
      && *(float *)(a1 + *(int *)(a3 + 24)) == *(float *)(a2 + *(int *)(a3 + 24));
}

uint64_t sub_1B8DD6138()
{
  sub_1B8DFD748();
  sub_1B8DA760C(&qword_1EF1E3170, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1B8DFDAC0();
  sub_1B8DFE168();
  return sub_1B8DFE174();
}

uint64_t sub_1B8DD61C8()
{
  sub_1B8DFE15C();
  sub_1B8DFD748();
  sub_1B8DA760C(&qword_1EF1E3170, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1B8DFDAC0();
  sub_1B8DFE168();
  sub_1B8DFE174();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8DD6268()
{
  return sub_1B8DA760C(&qword_1EF1E3168, type metadata accessor for SolarCycle, (uint64_t)&unk_1B8E03920);
}

uint64_t sub_1B8DD6294()
{
  sub_1B8DFD748();
  sub_1B8DA760C(&qword_1EF1E3170, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1B8DFDAC0();
  type metadata accessor for SolarEvent(0);
  sub_1B8DFE168();
  sub_1B8DFE174();
  type metadata accessor for SolarCycle(0);
  sub_1B8DFDAC0();
  sub_1B8DFE168();
  sub_1B8DFE174();
  sub_1B8DFDAC0();
  sub_1B8DFE168();
  sub_1B8DFE174();
  sub_1B8DFDAC0();
  sub_1B8DFE168();
  sub_1B8DFE174();
  sub_1B8DFDAC0();
  sub_1B8DFE168();
  return sub_1B8DFE174();
}

uint64_t sub_1B8DD6448()
{
  sub_1B8DFE15C();
  sub_1B8DD6294();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8DD6488()
{
  sub_1B8DFE15C();
  sub_1B8DD6294();
  return sub_1B8DFE18C();
}

BOOL sub_1B8DD64C0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  float v24;
  float v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  float v29;
  float v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  float v35;
  float v36;
  uint64_t v37;
  char *v38;
  char *v39;
  _BOOL8 v40;
  char *v42;
  uint64_t v43;

  v4 = (int *)type metadata accessor for SolarCycle(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v42 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v42 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v42 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v42 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v42 - v20;
  if ((sub_1B8DFD70C() & 1) == 0
    || (v22 = type metadata accessor for SolarEvent(0),
        *(unsigned __int8 *)(a1 + *(int *)(v22 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v22 + 20))))
  {
    sub_1B8D9A42C(a1, (uint64_t)v21, type metadata accessor for SolarCycle);
    sub_1B8D9A42C(a2, (uint64_t)v19, type metadata accessor for SolarCycle);
LABEL_14:
    sub_1B8DD6844((uint64_t)v19);
    sub_1B8DD6844((uint64_t)v21);
    sub_1B8D9A42C(a1, (uint64_t)v16, type metadata accessor for SolarCycle);
    sub_1B8D9A42C(a2, (uint64_t)v13, type metadata accessor for SolarCycle);
LABEL_15:
    sub_1B8DD6844((uint64_t)v13);
    sub_1B8DD6844((uint64_t)v16);
    sub_1B8D9A42C(a1, (uint64_t)v10, type metadata accessor for SolarCycle);
    sub_1B8D9A42C(a2, (uint64_t)v7, type metadata accessor for SolarCycle);
LABEL_16:
    v40 = 0;
    goto LABEL_17;
  }
  v43 = v22;
  v23 = *(int *)(v22 + 24);
  v24 = *(float *)(a1 + v23);
  v25 = *(float *)(a2 + v23);
  sub_1B8D9A42C(a1, (uint64_t)v21, type metadata accessor for SolarCycle);
  sub_1B8D9A42C(a2, (uint64_t)v19, type metadata accessor for SolarCycle);
  if (v24 != v25)
    goto LABEL_14;
  v26 = v4[5];
  v27 = &v21[v26];
  v42 = &v19[v26];
  if ((sub_1B8DFD70C() & 1) == 0 || v27[*(int *)(v43 + 20)] != v42[*(int *)(v43 + 20)])
    goto LABEL_14;
  v28 = *(int *)(v43 + 24);
  v29 = *(float *)&v27[v28];
  v30 = *(float *)&v42[v28];
  sub_1B8DD6844((uint64_t)v19);
  sub_1B8DD6844((uint64_t)v21);
  sub_1B8D9A42C(a1, (uint64_t)v16, type metadata accessor for SolarCycle);
  sub_1B8D9A42C(a2, (uint64_t)v13, type metadata accessor for SolarCycle);
  if (v29 != v30)
    goto LABEL_15;
  v31 = v4[6];
  v32 = &v16[v31];
  v33 = &v13[v31];
  if ((sub_1B8DFD70C() & 1) == 0 || v32[*(int *)(v43 + 20)] != v33[*(int *)(v43 + 20)])
    goto LABEL_15;
  v34 = *(int *)(v43 + 24);
  v35 = *(float *)&v32[v34];
  v36 = *(float *)&v33[v34];
  sub_1B8DD6844((uint64_t)v13);
  sub_1B8DD6844((uint64_t)v16);
  sub_1B8D9A42C(a1, (uint64_t)v10, type metadata accessor for SolarCycle);
  sub_1B8D9A42C(a2, (uint64_t)v7, type metadata accessor for SolarCycle);
  if (v35 != v36)
    goto LABEL_16;
  v37 = v4[8];
  v38 = &v10[v37];
  v39 = &v7[v37];
  if ((sub_1B8DFD70C() & 1) == 0 || v38[*(int *)(v43 + 20)] != v39[*(int *)(v43 + 20)])
    goto LABEL_16;
  v40 = *(float *)&v38[*(int *)(v43 + 24)] == *(float *)&v39[*(int *)(v43 + 24)];
LABEL_17:
  sub_1B8DD6844((uint64_t)v7);
  sub_1B8DD6844((uint64_t)v10);
  return v40;
}

uint64_t sub_1B8DD6844(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SolarCycle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B8DD6880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SolarEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for SolarCycle.Phase()
{
  return &type metadata for SolarCycle.Phase;
}

uint64_t getEnumTagSinglePayload for MTAppIntentsTab(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s18MobileTimerSupport10SolarEventV4KindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B8DD69B8 + 4 * byte_1B8E03825[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B8DD69EC + 4 * byte_1B8E03820[v4]))();
}

uint64_t sub_1B8DD69EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DD69F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8DD69FCLL);
  return result;
}

uint64_t sub_1B8DD6A08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8DD6A10);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B8DD6A14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DD6A1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SolarEvent.Kind()
{
  return &type metadata for SolarEvent.Kind;
}

unint64_t sub_1B8DD6A3C()
{
  unint64_t result;

  result = qword_1EF1E3180;
  if (!qword_1EF1E3180)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E03954, &type metadata for SolarEvent.Kind);
    atomic_store(result, (unint64_t *)&qword_1EF1E3180);
  }
  return result;
}

unint64_t sub_1B8DD6A84()
{
  unint64_t result;

  result = qword_1EF1E3188;
  if (!qword_1EF1E3188)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E039FC, &type metadata for SolarCycle.Phase);
    atomic_store(result, (unint64_t *)&qword_1EF1E3188);
  }
  return result;
}

uint64_t sub_1B8DD6AC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  os_unfair_lock_s *v21;
  uint64_t v22;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E33F0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v22 - v9;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v12 = result;
    sub_1B8D9D288(a1, (uint64_t)v4, &qword_1EF1E33F0);
    v13 = type metadata accessor for SystemOverrideClockData();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v4, 1, v13) == 1)
    {
      sub_1B8D9D154((uint64_t)v4, &qword_1EF1E33F0);
      v14 = sub_1B8DFD748();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v10, 1, 1, v14);
    }
    else
    {
      v15 = sub_1B8DFD748();
      v16 = *(_QWORD *)(v15 - 8);
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v10, v4, v15);
      sub_1B8DDA9E8((uint64_t)v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v10, 0, 1, v15);
    }
    sub_1B8DD6D70((uint64_t)v10);
    v17 = *(_QWORD *)(v12 + 32);
    v18 = *(_QWORD **)(v12 + 40);
    v19 = (os_unfair_lock_s *)(v18[2] + 16);
    swift_beginAccess();
    sub_1B8DFD22C();
    os_unfair_lock_lock(v19);
    v20 = (uint64_t)v18 + *(_QWORD *)(*v18 + 96);
    swift_beginAccess();
    sub_1B8D9D288(v20, (uint64_t)v8, (uint64_t *)&unk_1ED36F800);
    os_unfair_lock_unlock(v19);
    swift_endAccess();
    swift_release();
    v21 = (os_unfair_lock_s *)(*(_QWORD *)(v17 + *(_QWORD *)(*(_QWORD *)v17 + 104)) + 16);
    swift_beginAccess();
    os_unfair_lock_lock(v21);
    swift_endAccess();
    sub_1B8DCDB58((uint64_t)v8);
    swift_beginAccess();
    os_unfair_lock_unlock(v21);
    swift_endAccess();
    sub_1B8D9D154((uint64_t)v8, (uint64_t *)&unk_1ED36F800);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B8DD6D70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  _QWORD *v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  _BYTE v13[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v13[-v7];
  v9 = *(_QWORD **)(v1 + 40);
  sub_1B8D9D288(a1, (uint64_t)&v13[-v7], (uint64_t *)&unk_1ED36F800);
  v10 = (os_unfair_lock_s *)(v9[2] + 16);
  swift_beginAccess();
  sub_1B8DFD22C();
  os_unfair_lock_lock(v10);
  sub_1B8D9D288((uint64_t)v8, (uint64_t)v6, (uint64_t *)&unk_1ED36F800);
  v11 = (uint64_t)v9 + *(_QWORD *)(*v9 + 96);
  swift_beginAccess();
  sub_1B8D990C4((uint64_t)v6, v11);
  swift_endAccess();
  os_unfair_lock_unlock(v10);
  swift_endAccess();
  sub_1B8D9D154((uint64_t)v8, (uint64_t *)&unk_1ED36F800);
  swift_release();
  return sub_1B8D9D154(a1, (uint64_t *)&unk_1ED36F800);
}

uint64_t sub_1B8DD6EB8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SystemOverrideClock()
{
  return objc_opt_self();
}

uint64_t sub_1B8DD6F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1B8DD6F14@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, void (*a5)(char *, uint64_t, uint64_t)@<X4>, uint64_t (*a6)(uint64_t, uint64_t, uint64_t)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v30 = a3;
  v31 = a5;
  v34 = a8;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1B8DFD748();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for SystemOverrideClockData();
  v32 = *(_QWORD *)(v20 - 8);
  v33 = v20;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8DD70F0(a1, a2, v30, a4, v31, a6, a7, (uint64_t)v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = sub_1B8DFD8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(a7, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1B8D9D154((uint64_t)v15, (uint64_t *)&unk_1ED36F800);
    v24 = 1;
    v25 = v34;
  }
  else
  {
    v26 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v26(v19, v15, v16);
    v26(v22, v19, v16);
    v27 = v34;
    sub_1B8DDA080((uint64_t)v22, v34);
    v24 = 0;
    v25 = v27;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v25, v24, 1, v33);
}

uint64_t sub_1B8DD70F0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, void (*a5)(char *, uint64_t, uint64_t)@<X4>, uint64_t (*a6)(uint64_t, uint64_t, uint64_t)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t (*v70)(char *, uint64_t, uint64_t);
  int v71;
  BOOL v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  void *v78;
  uint64_t v79;
  int v80;
  unsigned int (*v81)(char *, uint64_t, uint64_t);
  unint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  char *v84;
  char *v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t, uint64_t, uint64_t);
  int v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  char *v95;
  char *v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t, _QWORD, uint64_t);
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char v112;
  char v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  void *v121;
  uint64_t v122;
  char *v123;
  void *v124;
  void *v125;
  void (*v126)(char *, uint64_t);
  void (*v127)(char *, uint64_t);
  void *v129;
  void *v130;
  void (*v131)(char *, uint64_t);
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  __int128 v144;
  char *v145;
  uint64_t v146;
  char *v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(char *, uint64_t, uint64_t);
  uint64_t v153;
  uint64_t (*v154)(uint64_t, uint64_t, uint64_t);
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  char *v162;
  char *v163;
  char *v164;
  uint64_t v165;
  char *v166;
  unint64_t v167;
  char *v168;
  char *v169;
  unint64_t v170;
  unint64_t v171;

  v153 = a8;
  v154 = a6;
  v152 = a5;
  v161 = a4;
  v162 = (char *)a1;
  v157 = a3;
  v167 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2068);
  MEMORY[0x1E0C80A78](v9);
  v147 = (char *)&v132 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E33D0);
  MEMORY[0x1E0C80A78](v11);
  v156 = (char *)&v132 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_1B8DFD610();
  v150 = *(_QWORD *)(v151 - 8);
  v13 = MEMORY[0x1E0C80A78](v151);
  v149 = (char *)&v132 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v164 = (char *)&v132 - v16;
  MEMORY[0x1E0C80A78](v15);
  v163 = (char *)&v132 - v17;
  v165 = sub_1B8DFD8B0();
  v155 = *(_QWORD *)(v165 - 8);
  MEMORY[0x1E0C80A78](v165);
  v145 = (char *)&v132 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v144 = sub_1B8DFD7B4();
  v143 = *(_QWORD *)(v144 - 8);
  MEMORY[0x1E0C80A78](v144);
  v142 = (char *)&v132 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1B8DFD85C();
  v159 = *(_QWORD *)(v20 - 8);
  v160 = v20;
  MEMORY[0x1E0C80A78](v20);
  v169 = (char *)&v132 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1B8DFD748();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x1E0C80A78](v22);
  v148 = (char *)&v132 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v24);
  v166 = (char *)&v132 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v140 = (char *)&v132 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v132 = (char *)&v132 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v133 = (char *)&v132 - v33;
  MEMORY[0x1E0C80A78](v32);
  v168 = (char *)&v132 - v34;
  v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  v36 = MEMORY[0x1E0C80A78](v35);
  v146 = (uint64_t)&v132 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x1E0C80A78](v36);
  v158 = (uint64_t)&v132 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v141 = (uint64_t)&v132 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v139 = (char *)&v132 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v136 = (uint64_t)&v132 - v45;
  v46 = MEMORY[0x1E0C80A78](v44);
  v137 = (uint64_t)&v132 - v47;
  v48 = MEMORY[0x1E0C80A78](v46);
  v138 = (uint64_t)&v132 - v49;
  v50 = MEMORY[0x1E0C80A78](v48);
  v52 = (char *)&v132 - v51;
  v53 = MEMORY[0x1E0C80A78](v50);
  v55 = (char *)&v132 - v54;
  v56 = MEMORY[0x1E0C80A78](v53);
  v58 = (char *)&v132 - v57;
  v59 = MEMORY[0x1E0C80A78](v56);
  v61 = (char *)&v132 - v60;
  v62 = MEMORY[0x1E0C80A78](v59);
  v64 = (char *)&v132 - v63;
  v65 = MEMORY[0x1E0C80A78](v62);
  v67 = (char *)&v132 - v66;
  MEMORY[0x1E0C80A78](v65);
  v69 = (char *)&v132 - v68;
  sub_1B8DD82F8((unint64_t)v152, (uint64_t)v154, a7, (uint64_t)&v132 - v68);
  sub_1B8DD8D8C(v157, v161, a7, (uint64_t)v67);
  v157 = a7;
  sub_1B8DD8D8C((uint64_t)v162, v167, a7, (uint64_t)v64);
  v161 = v23;
  v162 = v69;
  v70 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  LODWORD(v69) = v70(v69, 1, v22);
  v167 = (unint64_t)v67;
  sub_1B8D9D288((uint64_t)v67, (uint64_t)v61, (uint64_t *)&unk_1ED36F800);
  if ((_DWORD)v69 == 1)
  {
    v71 = v70(v61, 1, v22);
    sub_1B8D9D154((uint64_t)v61, (uint64_t *)&unk_1ED36F800);
    sub_1B8D9D288((uint64_t)v64, (uint64_t)v58, (uint64_t *)&unk_1ED36F800);
    v72 = v71 == 1;
    v73 = v22;
    v74 = v161;
    v75 = (uint64_t)v64;
    v76 = v153;
    if (v72 && v70(v58, 1, v22) == 1)
    {
      sub_1B8D9D154((uint64_t)v58, (uint64_t *)&unk_1ED36F800);
      v77 = (void *)objc_opt_self();
      v78 = (void *)sub_1B8DFDB5C();
      objc_msgSend(v77, sel_logInfo_, v78);

      sub_1B8D9D154(v75, (uint64_t *)&unk_1ED36F800);
      sub_1B8D9D154(v167, (uint64_t *)&unk_1ED36F800);
      sub_1B8D9D154((uint64_t)v162, (uint64_t *)&unk_1ED36F800);
      v79 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v76, v79, 1, v73);
    }
  }
  else
  {
    sub_1B8D9D154((uint64_t)v61, (uint64_t *)&unk_1ED36F800);
    sub_1B8D9D288((uint64_t)v64, (uint64_t)v58, (uint64_t *)&unk_1ED36F800);
    v73 = v22;
    v74 = v161;
    v75 = (uint64_t)v64;
  }
  sub_1B8D9D154((uint64_t)v58, (uint64_t *)&unk_1ED36F800);
  sub_1B8D9D288(v167, (uint64_t)v55, (uint64_t *)&unk_1ED36F800);
  v80 = v70(v55, 1, v73);
  v154 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v70;
  v135 = v75;
  if (v80 == 1)
  {
    sub_1B8D9D154((uint64_t)v55, (uint64_t *)&unk_1ED36F800);
LABEL_13:
    v87 = v137;
    sub_1B8D9D288(v167, v137, (uint64_t *)&unk_1ED36F800);
    v88 = v136;
    sub_1B8D9D288(v75, v136, (uint64_t *)&unk_1ED36F800);
    v89 = v154;
    v90 = v154(v87, 1, v73);
    v91 = v140;
    v92 = (uint64_t)v139;
    v93 = v138;
    if (v90 == 1)
    {
      sub_1B8DCC258(v88, v138);
      sub_1B8D9D154(v87, (uint64_t *)&unk_1ED36F800);
    }
    else
    {
      sub_1B8D9D154(v88, (uint64_t *)&unk_1ED36F800);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 32))(v93, v87, v73);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v74 + 56))(v93, 0, 1, v73);
    }
    sub_1B8D9D288(v93, v92, (uint64_t *)&unk_1ED36F800);
    v94 = v89(v92, 1, v73);
    v95 = v168;
    if (v94 == 1)
    {
      sub_1B8DFD724();
      sub_1B8D9D154(v93, (uint64_t *)&unk_1ED36F800);
      sub_1B8D9D154(v92, (uint64_t *)&unk_1ED36F800);
      v83 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 32);
    }
    else
    {
      sub_1B8D9D154(v93, (uint64_t *)&unk_1ED36F800);
      v83 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 32);
      v83(v91, v92, v73);
    }
    v96 = v166;
    v83(v95, (uint64_t)v91, v73);
    goto LABEL_20;
  }
  v81 = (unsigned int (*)(char *, uint64_t, uint64_t))v70;
  v82 = v74;
  v83 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 32);
  v84 = v133;
  v83(v133, (uint64_t)v55, v73);
  sub_1B8D9D288(v75, (uint64_t)v52, (uint64_t *)&unk_1ED36F800);
  if (v81(v52, 1, v73) == 1)
  {
    (*(void (**)(char *, uint64_t))(v82 + 8))(v84, v73);
    sub_1B8D9D154((uint64_t)v52, (uint64_t *)&unk_1ED36F800);
    v74 = v82;
    goto LABEL_13;
  }
  v85 = v132;
  v83(v132, (uint64_t)v52, v73);
  sub_1B8DA760C((unint64_t *)&unk_1EF1E2F70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  if ((sub_1B8DFDACC() & 1) != 0)
  {
    v74 = v82;
    v86 = *(void (**)(char *, uint64_t))(v82 + 8);
    v86(v85, v73);
    v86(v84, v73);
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v168, v84, v73);
  v170 = 0;
  v171 = 0xE000000000000000;
  sub_1B8DFDEF8();
  sub_1B8DFDBBC();
  sub_1B8DA760C(&qword_1EF1E3178, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
  sub_1B8DFE0B4();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  sub_1B8DFE0B4();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  v129 = (void *)objc_opt_self();
  sub_1B8DFDBBC();
  v130 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v129, sel_logError_, v130);

  v131 = *(void (**)(char *, uint64_t))(v82 + 8);
  v131(v85, v73);
  v131(v84, v73);
  v96 = v166;
  v89 = v154;
LABEL_20:
  v97 = v141;
  sub_1B8D9D288((uint64_t)v162, v141, (uint64_t *)&unk_1ED36F800);
  v98 = v89(v97, 1, v73);
  v134 = v73;
  if (v98 == 1)
  {
    sub_1B8DFD724();
    sub_1B8D9D154(v97, (uint64_t *)&unk_1ED36F800);
  }
  else
  {
    v83(v96, v97, v73);
  }
  v99 = v143;
  v100 = v142;
  v101 = v144;
  (*(void (**)(char *, _QWORD, _QWORD))(v143 + 104))(v142, *MEMORY[0x1E0CB0EF8], v144);
  sub_1B8DFD7C0();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v100, v101);
  v152 = *(void (**)(char *, uint64_t, uint64_t))(v155 + 16);
  v152(v145, v157, v165);
  sub_1B8DFD844();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E33D8);
  v102 = sub_1B8DFD850();
  v103 = *(_QWORD *)(v102 - 8);
  v104 = *(_QWORD *)(v103 + 72);
  v105 = *(unsigned __int8 *)(v103 + 80);
  v106 = (v105 + 32) & ~v105;
  v145 = (char *)(v105 | 7);
  v107 = swift_allocObject();
  v144 = xmmword_1B8DFFCD0;
  *(_OWORD *)(v107 + 16) = xmmword_1B8DFFCD0;
  v108 = *(void (**)(uint64_t, _QWORD, uint64_t))(v103 + 104);
  v108(v107 + v106, *MEMORY[0x1E0CB1158], v102);
  v108(v107 + v106 + v104, *MEMORY[0x1E0CB1160], v102);
  v108(v107 + v106 + 2 * v104, *MEMORY[0x1E0CB1130], v102);
  sub_1B8DE58C0(v107);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1B8DFD7F0();
  swift_bridgeObjectRelease();
  v109 = swift_allocObject();
  *(_OWORD *)(v109 + 16) = v144;
  v110 = v109 + v106;
  v108(v110, *MEMORY[0x1E0CB1140], v102);
  v108(v110 + v104, *MEMORY[0x1E0CB1178], v102);
  v108(v110 + 2 * v104, *MEMORY[0x1E0CB1188], v102);
  sub_1B8DE58C0(v109);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1B8DFD7F0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v159 + 56))(v156, 1, 1, v160);
  v155 = *(_QWORD *)(v155 + 56);
  v111 = v147;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v155)(v147, 1, 1, v165);
  v145 = (char *)sub_1B8DFD5A4();
  LODWORD(v144) = v112 & 1;
  v143 = sub_1B8DFD5B0();
  LODWORD(v142) = v113 & 1;
  sub_1B8DFD574();
  sub_1B8DFD58C();
  sub_1B8DFD5C8();
  sub_1B8DFD5E0();
  v114 = v149;
  sub_1B8DFD5F8();
  v115 = v165;
  v152(v111, v157, v165);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v155)(v111, 0, 1, v115);
  sub_1B8DFD604();
  v116 = v158;
  sub_1B8DFD838();
  v117 = v116;
  v118 = v146;
  sub_1B8D9D288(v117, v146, (uint64_t *)&unk_1ED36F800);
  v73 = v134;
  if (v154(v118, 1, v134) == 1)
  {
    sub_1B8D9D154(v118, (uint64_t *)&unk_1ED36F800);
    v170 = 0;
    v171 = 0xE000000000000000;
    sub_1B8DFDEF8();
    sub_1B8DFDBBC();
    sub_1B8DA760C(&qword_1EF1E33E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEAB0], MEMORY[0x1E0CAEAF0]);
    v119 = v151;
    sub_1B8DFE0B4();
    sub_1B8DFDBBC();
    swift_bridgeObjectRelease();
    sub_1B8DFDBBC();
    sub_1B8DFE0B4();
    sub_1B8DFDBBC();
    swift_bridgeObjectRelease();
    v120 = (void *)objc_opt_self();
    sub_1B8DFDBBC();
    v121 = (void *)sub_1B8DFDB5C();
    swift_bridgeObjectRelease();
    objc_msgSend(v120, sel_logError_, v121);

    v122 = 2;
    v118 = (uint64_t)v168;
    v76 = v153;
    v74 = v161;
  }
  else
  {
    v122 = 4;
    v76 = v153;
    v74 = v161;
    v119 = v151;
  }
  v123 = v148;
  (*(void (**)(char *, uint64_t, uint64_t))(v74 + 8 * v122))(v148, v118, v73);
  v124 = (void *)objc_opt_self();
  v170 = 0;
  v171 = 0xE000000000000000;
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  v170 = 0xD00000000000001ELL;
  v171 = 0x80000001B8E08810;
  sub_1B8DA760C(&qword_1EF1E3178, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
  sub_1B8DFE0B4();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  v125 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v124, sel_logInfo_, v125);

  sub_1B8D9D154(v158, (uint64_t *)&unk_1ED36F800);
  v126 = *(void (**)(char *, uint64_t))(v150 + 8);
  v126(v114, v119);
  v126(v164, v119);
  v126(v163, v119);
  (*(void (**)(char *, uint64_t))(v159 + 8))(v169, v160);
  v127 = *(void (**)(char *, uint64_t))(v74 + 8);
  v127(v166, v73);
  v127(v168, v73);
  sub_1B8D9D154(v135, (uint64_t *)&unk_1ED36F800);
  sub_1B8D9D154(v167, (uint64_t *)&unk_1ED36F800);
  sub_1B8D9D154((uint64_t)v162, (uint64_t *)&unk_1ED36F800);
  (*(void (**)(uint64_t, char *, uint64_t))(v74 + 32))(v76, v123, v73);
  v79 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v76, v79, 1, v73);
}

void sub_1B8DD82F8(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 *v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  unsigned __int8 *v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 *v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unsigned __int8 *v59;
  unsigned int v60;
  uint64_t v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  void *v77;
  void *v78;
  void (*v79)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  void *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;

  v102 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B8DFD8B0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v101 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1B8DFD7B4();
  v99 = *(_QWORD *)(v13 - 8);
  v100 = v13;
  MEMORY[0x1E0C80A78](v13);
  v98 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1B8DFD85C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v103 = (char *)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2068);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E33D0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1B8DFD610();
  v25 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v86 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    v35 = sub_1B8DFD748();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(a4, 1, 1, v35);
    return;
  }
  v92 = v11;
  v93 = v10;
  v94 = v28;
  v95 = v26;
  v96 = v9;
  v97 = v25;
  v108 = a1;
  v109 = a2;
  v106 = 47;
  v107 = 0xE100000000000000;
  sub_1B8DBBAF4();
  v29 = sub_1B8DFDE44();
  v30 = v29;
  v31 = *(_QWORD *)(v29 + 16);
  v104 = v29;
  v105 = a4;
  if (!v31)
  {
    v34 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_68:
    if (v34[2] == 3)
    {
      swift_bridgeObjectRelease();
      v64 = v16;
      v65 = v15;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56))(v23, 1, 1, v15);
      v66 = v92;
      v67 = v93;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56))(v20, 1, 1, v93);
      v68 = v94;
      sub_1B8DFD5F8();
      v70 = v98;
      v69 = v99;
      v71 = v100;
      (*(void (**)(char *, _QWORD, uint64_t))(v99 + 104))(v98, *MEMORY[0x1E0CB0EF8], v100);
      v72 = v103;
      sub_1B8DFD7C0();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v71);
      (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v101, v102, v67);
      sub_1B8DFD844();
      v73 = (uint64_t)v96;
      sub_1B8DFD838();
      v74 = sub_1B8DFD748();
      v75 = *(_QWORD *)(v74 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74) == 1)
      {
        sub_1B8D9D154(v73, (uint64_t *)&unk_1ED36F800);
        v108 = 0;
        v109 = 0xE000000000000000;
        sub_1B8DFDEF8();
        sub_1B8DFDBBC();
        v76 = v68;
        MEMORY[0x1BCCBC568](v104, MEMORY[0x1E0DEA968]);
        sub_1B8DFDBBC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v77 = (void *)objc_opt_self();
        sub_1B8DFDBBC();
        v78 = (void *)sub_1B8DFDB5C();
        swift_bridgeObjectRelease();
        objc_msgSend(v77, sel_logError_, v78);

        (*(void (**)(char *, uint64_t))(v64 + 8))(v72, v65);
        (*(void (**)(char *, uint64_t))(v95 + 8))(v76, v97);
        v79 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56);
        v80 = v105;
        v81 = 1;
      }
      else
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v64 + 8))(v72, v65);
        (*(void (**)(char *, uint64_t))(v95 + 8))(v68, v97);
        v85 = v105;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32))(v105, v73, v74);
        v79 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56);
        v80 = v85;
        v81 = 0;
      }
      v79(v80, v81, 1, v74);
    }
    else
    {
      swift_bridgeObjectRelease();
      v108 = 0;
      v109 = 0xE000000000000000;
      sub_1B8DFDEF8();
      swift_bridgeObjectRelease();
      v108 = 0xD000000000000021;
      v109 = 0x80000001B8E08910;
      MEMORY[0x1BCCBC568](v30, MEMORY[0x1E0DEA968]);
      sub_1B8DFDBBC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v82 = (void *)objc_opt_self();
      sub_1B8DFDBBC();
      v83 = (void *)sub_1B8DFDB5C();
      swift_bridgeObjectRelease();
      objc_msgSend(v82, sel_logError_, v83);

      v84 = sub_1B8DFD748();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(a4, 1, 1, v84);
    }
    return;
  }
  v88 = v23;
  v89 = v20;
  v90 = v16;
  v91 = v15;
  v32 = v29 + 32;
  v86 = (char *)&v108 + 2;
  v87 = (char *)&v108 + 3;
  sub_1B8DFD3AC();
  v33 = 0;
  v34 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v38 = (uint64_t *)(v32 + 16 * v33);
    v40 = *v38;
    v39 = v38[1];
    v41 = HIBYTE(v39) & 0xF;
    v42 = v40 & 0xFFFFFFFFFFFFLL;
    if ((v39 & 0x2000000000000000) != 0)
      v43 = HIBYTE(v39) & 0xF;
    else
      v43 = v40 & 0xFFFFFFFFFFFFLL;
    if (!v43)
    {
      sub_1B8DFD3AC();
      goto LABEL_7;
    }
    if ((v39 & 0x1000000000000000) == 0)
      break;
    swift_bridgeObjectRetain_n();
    v45 = (uint64_t)sub_1B8DDA0C4(v40, v39, 10);
    v63 = v62;
    swift_bridgeObjectRelease();
    if ((v63 & 1) == 0)
    {
LABEL_53:
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v34 = sub_1B8D96808(0, v34[2] + 1, 1, v34);
      v58 = v34[2];
      v57 = v34[3];
      if (v58 >= v57 >> 1)
        v34 = sub_1B8D96808((_QWORD *)(v57 > 1), v58 + 1, 1, v34);
      v34[2] = v58 + 1;
      v34[v58 + 4] = v45;
      goto LABEL_8;
    }
LABEL_7:
    v108 = 0;
    v109 = 0xE000000000000000;
    sub_1B8DFDEF8();
    swift_bridgeObjectRelease();
    v108 = 0xD000000000000012;
    v109 = 0x80000001B8E088D0;
    sub_1B8DFDBBC();
    v36 = (void *)objc_opt_self();
    sub_1B8DFDBBC();
    v37 = (void *)sub_1B8DFDB5C();
    swift_bridgeObjectRelease();
    objc_msgSend(v36, sel_logError_, v37);
    swift_bridgeObjectRelease();

LABEL_8:
    if (++v33 == v31)
    {
      v30 = v104;
      swift_bridgeObjectRelease();
      a4 = v105;
      v16 = v90;
      v15 = v91;
      v20 = v89;
      v23 = v88;
      goto LABEL_68;
    }
  }
  if ((v39 & 0x2000000000000000) == 0)
  {
    if ((v40 & 0x1000000000000000) != 0)
      v44 = (unsigned __int8 *)((v39 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v44 = (unsigned __int8 *)sub_1B8DFDF28();
    v45 = (uint64_t)sub_1B8DDA1A8(v44, v42, 10);
    v47 = v46 & 1;
LABEL_52:
    sub_1B8DFD3AC();
    if ((v47 & 1) == 0)
      goto LABEL_53;
    goto LABEL_7;
  }
  v108 = v40;
  v109 = v39 & 0xFFFFFFFFFFFFFFLL;
  if (v40 == 43)
  {
    if (!v41)
      goto LABEL_75;
    if (v41 == 1 || (BYTE1(v40) - 48) > 9u)
      goto LABEL_39;
    v45 = (BYTE1(v40) - 48);
    if (v41 != 2)
    {
      if ((BYTE2(v40) - 48) > 9u)
        goto LABEL_39;
      v45 = 10 * (BYTE1(v40) - 48) + (BYTE2(v40) - 48);
      v48 = v41 - 3;
      if (v48)
      {
        v49 = (unsigned __int8 *)v87;
        while (1)
        {
          v50 = *v49 - 48;
          if (v50 > 9)
            goto LABEL_39;
          v51 = 10 * v45;
          if ((unsigned __int128)(v45 * (__int128)10) >> 64 != (10 * v45) >> 63)
            goto LABEL_39;
          v45 = v51 + v50;
          if (__OFADD__(v51, v50))
            goto LABEL_39;
          v47 = 0;
          ++v49;
          if (!--v48)
            goto LABEL_52;
        }
      }
    }
LABEL_51:
    v47 = 0;
    goto LABEL_52;
  }
  if (v40 != 45)
  {
    if (!v41 || (v40 - 48) > 9u)
      goto LABEL_39;
    v45 = (v40 - 48);
    if (v41 != 1)
    {
      if ((BYTE1(v40) - 48) > 9u)
        goto LABEL_39;
      v45 = 10 * (v40 - 48) + (BYTE1(v40) - 48);
      v52 = v41 - 2;
      if (v52)
      {
        v53 = (unsigned __int8 *)v86;
        while (1)
        {
          v54 = *v53 - 48;
          if (v54 > 9)
            goto LABEL_39;
          v55 = 10 * v45;
          if ((unsigned __int128)(v45 * (__int128)10) >> 64 != (10 * v45) >> 63)
            goto LABEL_39;
          v45 = v55 + v54;
          if (__OFADD__(v55, v54))
            goto LABEL_39;
          v47 = 0;
          ++v53;
          if (!--v52)
            goto LABEL_52;
        }
      }
    }
    goto LABEL_51;
  }
  if (v41)
  {
    if (v41 != 1 && (BYTE1(v40) - 48) <= 9u)
    {
      if (v41 == 2)
      {
        v47 = 0;
        v45 = -(uint64_t)(BYTE1(v40) - 48);
        goto LABEL_52;
      }
      if ((BYTE2(v40) - 48) <= 9u)
      {
        v45 = -10 * (BYTE1(v40) - 48) - (BYTE2(v40) - 48);
        v56 = v41 - 3;
        if (!v56)
          goto LABEL_51;
        v59 = (unsigned __int8 *)v87;
        while (1)
        {
          v60 = *v59 - 48;
          if (v60 > 9)
            break;
          v61 = 10 * v45;
          if ((unsigned __int128)(v45 * (__int128)10) >> 64 != (10 * v45) >> 63)
            break;
          v45 = v61 - v60;
          if (__OFSUB__(v61, v60))
            break;
          v47 = 0;
          ++v59;
          if (!--v56)
            goto LABEL_52;
        }
      }
    }
LABEL_39:
    v45 = 0;
    v47 = 1;
    goto LABEL_52;
  }
  __break(1u);
LABEL_75:
  __break(1u);
}

uint64_t sub_1B8DD8D8C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __int128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    v21 = sub_1B8DFD748();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a4, 1, 1, v21);
  }
  v26 = xmmword_1B8DFFCD0;
  v27 = 0x61206D6D3A68;
  v28 = 0xE600000000000000;
  v29 = 0x6D6D3A4848;
  v30 = 0xE500000000000000;
  v31 = 0x73733A6D6D3A4848;
  v32 = 0xE800000000000000;
  sub_1B8DFD3AC();
  sub_1B8DD910C(a1, a2, 0x61206D6D3A68, 0xE600000000000000, a3, v10);
  swift_bridgeObjectRelease();
  v11 = sub_1B8DFD748();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11) != 1)
    goto LABEL_9;
  v23 = a1;
  result = sub_1B8D9D154((uint64_t)v10, (uint64_t *)&unk_1ED36F800);
  if ((unint64_t)v26 < 2)
    goto LABEL_11;
  v22 = a4;
  v16 = v29;
  v15 = v30;
  sub_1B8DFD3AC();
  sub_1B8DD910C(v23, a2, v16, v15, a3, v10);
  a4 = v22;
  swift_bridgeObjectRelease();
  if (v13(v10, 1, v11) == 1)
  {
    result = sub_1B8D9D154((uint64_t)v10, (uint64_t *)&unk_1ED36F800);
    if ((unint64_t)v26 >= 3)
    {
      v18 = v31;
      v17 = v32;
      sub_1B8DFD3AC();
      sub_1B8DD910C(v23, a2, v18, v17, a3, v10);
      a4 = v22;
      swift_bridgeObjectRelease();
      if (v13(v10, 1, v11) == 1)
      {
        sub_1B8D9D154((uint64_t)v10, (uint64_t *)&unk_1ED36F800);
        swift_arrayDestroy();
        v19 = (void *)objc_opt_self();
        v24 = 0;
        v25 = 0xE000000000000000;
        sub_1B8DFDEF8();
        swift_bridgeObjectRelease();
        v24 = 0xD000000000000012;
        v25 = 0x80000001B8E088D0;
        sub_1B8DFDBBC();
        sub_1B8DFDBBC();
        v20 = (void *)sub_1B8DFDB5C();
        swift_bridgeObjectRelease();
        objc_msgSend(v19, sel_logError_, v20);

        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a4, 1, 1, v11);
      }
      goto LABEL_9;
    }
LABEL_11:
    __break(1u);
    return result;
  }
LABEL_9:
  swift_arrayDestroy();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a4, v10, v11);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a4, 0, 1, v11);
}

uint64_t sub_1B8DD910C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  void (*v22)(char *, uint64_t);
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  void (*v31)(char *);
  void *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  char *v39;
  uint64_t v40;
  void *v41;
  unint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  char *v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  void (*v62)(char *);
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  unsigned int v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;

  v75 = a6;
  v76 = a5;
  v68 = a3;
  v69 = a4;
  v66 = a1;
  v67 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v6);
  v74 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B8DFD7B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B8DFD85C();
  v13 = *(_QWORD *)(v12 - 8);
  v61 = v12;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1B8DFD748();
  v72 = *(_QWORD *)(v16 - 8);
  v73 = v16;
  v17 = MEMORY[0x1E0C80A78](v16);
  v59 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v58 - v19;
  sub_1B8DFD724();
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  v78 = *MEMORY[0x1E0CB0EF8];
  v62 = *(void (**)(char *))(v9 + 104);
  v62(v11);
  sub_1B8DFD7C0();
  v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v11, v8);
  v60 = v22;
  v23 = (void *)sub_1B8DFD814();
  v77 = *(void (**)(char *, uint64_t))(v13 + 8);
  v77(v15, v12);
  objc_msgSend(v21, sel_setCalendar_, v23);

  v24 = (void *)sub_1B8DFD88C();
  objc_msgSend(v21, sel_setTimeZone_, v24);

  v25 = (void *)sub_1B8DFDB5C();
  objc_msgSend(v21, sel_setDateFormat_, v25);

  v26 = (void *)sub_1B8DFD6D0();
  v70 = v21;
  v27 = objc_msgSend(v21, sel_stringFromDate_, v26);

  v28 = sub_1B8DFDB68();
  v64 = v29;
  v65 = v28;

  v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  v31 = v62;
  ((void (*)(char *, _QWORD, uint64_t))v62)(v11, v78, v8);
  sub_1B8DFD7C0();
  v22(v11, v8);
  v32 = (void *)sub_1B8DFD814();
  v33 = v61;
  v77(v15, v61);
  objc_msgSend(v30, sel_setCalendar_, v32);

  v34 = (void *)sub_1B8DFD88C();
  objc_msgSend(v30, sel_setTimeZone_, v34);

  v35 = (void *)sub_1B8DFDB5C();
  objc_msgSend(v30, sel_setDateFormat_, v35);

  v71 = v20;
  v36 = (void *)sub_1B8DFD6D0();
  v37 = objc_msgSend(v30, sel_stringFromDate_, v36);

  v63 = sub_1B8DFDB68();
  v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  ((void (*)(char *, _QWORD, uint64_t))v31)(v11, v78, v8);
  sub_1B8DFD7C0();
  v39 = v11;
  v40 = v66;
  v60(v39, v8);
  v41 = (void *)sub_1B8DFD814();
  v77(v15, v33);
  v42 = v67;
  objc_msgSend(v38, sel_setCalendar_, v41);

  v43 = (void *)sub_1B8DFD88C();
  objc_msgSend(v38, sel_setTimeZone_, v43);

  v81 = 0x2D4D4D2D79797979;
  v82 = 0xEB00000000206464;
  sub_1B8DFDBBC();
  sub_1B8DFDBBC();
  sub_1B8DFDBBC();
  v44 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v38, sel_setDateFormat_, v44);

  v81 = v40;
  v82 = v42;
  v79 = 58;
  v80 = 0xE100000000000000;
  sub_1B8DBBAF4();
  if (*(_QWORD *)(sub_1B8DFDE44() + 16))
  {
    sub_1B8DFD3AC();
    swift_bridgeObjectRelease();
    sub_1B8DFDBB0();
  }
  swift_bridgeObjectRelease();
  v81 = 0;
  v82 = 0xE000000000000000;
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  v81 = v65;
  v82 = v64;
  sub_1B8DFDBBC();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  v45 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  v46 = objc_msgSend(v38, sel_dateFromString_, v45);

  if (!v46)
  {

    v56 = v72;
    v49 = v73;
    (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v73);
    v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56);
    v51 = (uint64_t)v74;
    v52(v74, 1, 1, v49);
    goto LABEL_7;
  }
  v47 = v59;
  sub_1B8DFD718();

  v48 = v72;
  v49 = v73;
  (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v73);
  v50 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
  v51 = (uint64_t)v74;
  v50(v74, v47, v49);
  v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56);
  v52((char *)v51, 0, 1, v49);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v51, 1, v49) == 1)
  {
LABEL_7:
    sub_1B8D9D154(v51, (uint64_t *)&unk_1ED36F800);
    v54 = v75;
    v55 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v52)(v54, v55, 1, v49);
  }
  v53 = v75;
  v50(v75, (char *)v51, v49);
  v54 = v53;
  v55 = 0;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v52)(v54, v55, 1, v49);
}

void sub_1B8DD9848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void (*v8)(char *);
  _QWORD aBlock[6];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E33F0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(void **)(v0 + 32);
  v5 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1B8DDA9E0;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B8DAD0E8;
  aBlock[3] = &block_descriptor_10;
  v6 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v4, sel_observeDataWithBlock_, v6);
  _Block_release(v6);
  v7 = objc_msgSend(v4, sel_data);
  sub_1B8DD9A78(v7, (uint64_t)v3);
  v8 = *(void (**)(char *))(v0 + 16);
  if (v8)
  {
    sub_1B8DFD22C();
    v8(v3);
    sub_1B8DACDE8((uint64_t)v8);
  }
  sub_1B8D9D154((uint64_t)v3, &qword_1EF1E33F0);

}

uint64_t sub_1B8DD9998(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  void (*v7)(char *);
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E33F0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = result;
    sub_1B8DD9A78(a1, (uint64_t)v4);
    v7 = *(void (**)(char *))(v6 + 16);
    if (v7)
    {
      sub_1B8DFD22C();
      v7(v4);
      sub_1B8DACDE8((uint64_t)v7);
    }
    sub_1B8D9D154((uint64_t)v4, &qword_1EF1E33F0);
    return swift_release();
  }
  return result;
}

void sub_1B8DD9A78(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  unsigned __int8 v10;
  id v11;
  id v12;
  unsigned __int8 v13;
  id v14;
  id v15;
  unsigned int v16;
  id v17;
  id v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;

  v4 = sub_1B8DFD8B0();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    goto LABEL_11;
  v7 = a1;
  v8 = objc_msgSend(v7, sel_customOverrides);
  v9 = objc_msgSend(v8, sel_shortTimeEntry);

  if (!v9 || (v10 = objc_msgSend(v9, sel_isEnabled), v9, (v10 & 1) == 0))
  {
    v11 = objc_msgSend(v7, sel_customOverrides);
    v12 = objc_msgSend(v11, sel_timeEntry);

    if (!v12 || (v13 = objc_msgSend(v12, sel_isEnabled), v12, (v13 & 1) == 0))
    {
      v14 = objc_msgSend(v7, sel_customOverrides);
      v15 = objc_msgSend(v14, sel_dateEntry);

      if (!v15 || (v16 = objc_msgSend(v15, sel_isEnabled), v15, !v16))
      {

LABEL_11:
        v22 = type metadata accessor for SystemOverrideClockData();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a2, 1, 1, v22);
        return;
      }
    }
  }
  v17 = objc_msgSend(v7, sel_customOverrides);
  v18 = objc_msgSend(v17, sel_shortTimeEntry);

  if (v18)
  {
    v19 = objc_msgSend(v18, sel_stringValue);

    v18 = (id)sub_1B8DFDB68();
    v21 = v20;

  }
  else
  {
    v21 = 0;
  }
  v23 = objc_msgSend(v7, sel_customOverrides);
  v24 = objc_msgSend(v23, sel_timeEntry);

  if (v24)
  {
    v25 = objc_msgSend(v24, sel_stringValue);

    v24 = (id)sub_1B8DFDB68();
    v27 = v26;

  }
  else
  {
    v27 = 0;
  }
  v28 = objc_msgSend(v7, sel_customOverrides);
  v29 = objc_msgSend(v28, sel_dateEntry);

  if (v29)
  {
    v30 = objc_msgSend(v29, sel_stringValue);

    v29 = (id)sub_1B8DFDB68();
    v32 = v31;

  }
  else
  {
    v32 = 0;
  }
  sub_1B8DFD8A4();
  sub_1B8DD6F14((uint64_t)v18, v21, (uint64_t)v24, v27, (void (*)(char *, uint64_t, uint64_t))v29, v32, (uint64_t)v6, a2);

}

uint64_t sub_1B8DD9DB0()
{
  uint64_t v0;

  sub_1B8DACDE8(*(_QWORD *)(v0 + 16));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SystemSystemStatusBarOverrideProvider()
{
  return objc_opt_self();
}

uint64_t sub_1B8DD9DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1B8DFD748();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1B8DD9E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1B8DD9E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1B8DD9EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1B8DD9F04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1B8DD9F48()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DD9F54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1B8DFD748();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1B8DD9F90()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DD9F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1B8DFD748();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SystemOverrideClockData()
{
  uint64_t result;

  result = qword_1EF1E3398;
  if (!qword_1EF1E3398)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B8DDA018()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B8DFD748();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1B8DDA080(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SystemOverrideClockData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned __int8 *sub_1B8DDA0C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  sub_1B8DFD3AC();
  v5 = sub_1B8DFDC04();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1B8DDA424();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1B8DFDF28();
  }
LABEL_7:
  v11 = sub_1B8DDA1A8(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1B8DDA1A8(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1B8DDA424()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1B8DFDC10();
  v4 = sub_1B8DDA4A0(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1B8DDA4A0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_1B8DDA5E4(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1B8DDA6D0(v9, 0);
      v12 = sub_1B8DDA734((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      sub_1B8DFD3AC();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x1BCCBC490](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1BCCBC490);
LABEL_9:
      sub_1B8DFDF28();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1BCCBC490]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1B8DDA5E4(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1B8DDA944(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1B8DDA944(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_1B8DFDBE0();
  }
  __break(1u);
  return result;
}

_QWORD *sub_1B8DDA6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E33E8);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unint64_t sub_1B8DDA734(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_1B8DDA944(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_1B8DFDBEC();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_1B8DFDF28();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_1B8DDA944(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_1B8DFDBC8();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1B8DDA944(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1B8DFDBF8();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1BCCBC4CC](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_1B8DDA9BC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B8DDA9E0(void *a1)
{
  return sub_1B8DD9998(a1);
}

uint64_t sub_1B8DDA9E8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SystemOverrideClockData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B8DDAA24()
{
  unsigned __int8 v1;

  sub_1B8DFD178();
  return v1;
}

uint64_t sub_1B8DDAA54(char a1)
{
  return *(_QWORD *)&aClock_5[8 * a1];
}

uint64_t sub_1B8DDAA74(char *a1, char *a2)
{
  return sub_1B8DB3518(*a1, *a2);
}

unint64_t sub_1B8DDAA84()
{
  unint64_t result;

  result = qword_1EF1E33F8;
  if (!qword_1EF1E33F8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E03B2C, &type metadata for MTAppIntentsTab);
    atomic_store(result, (unint64_t *)&qword_1EF1E33F8);
  }
  return result;
}

uint64_t sub_1B8DDAAC8()
{
  return sub_1B8DF90E4();
}

uint64_t sub_1B8DDAAD0()
{
  return sub_1B8DB37B8();
}

uint64_t sub_1B8DDAAD8()
{
  return sub_1B8DF11FC();
}

uint64_t sub_1B8DDAAE0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8DDC148();
  *a1 = result;
  return result;
}

uint64_t sub_1B8DDAB0C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B8DDAA54(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1B8DDAB38()
{
  unint64_t result;

  result = qword_1EF1E3400;
  if (!qword_1EF1E3400)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E03C0C, &type metadata for MTAppIntentsTab);
    atomic_store(result, (unint64_t *)&qword_1EF1E3400);
  }
  return result;
}

unint64_t sub_1B8DDAB80()
{
  unint64_t result;

  result = qword_1EF1E3408;
  if (!qword_1EF1E3408)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E03C44, &type metadata for MTAppIntentsTab);
    atomic_store(result, (unint64_t *)&qword_1EF1E3408);
  }
  return result;
}

unint64_t sub_1B8DDABC8()
{
  unint64_t result;

  result = qword_1EF1E3410;
  if (!qword_1EF1E3410)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E03B94, &type metadata for MTAppIntentsTab);
    atomic_store(result, (unint64_t *)&qword_1EF1E3410);
  }
  return result;
}

unint64_t sub_1B8DDAC10()
{
  unint64_t result;

  result = qword_1EF1E3418;
  if (!qword_1EF1E3418)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E03C74, &type metadata for MTAppIntentsTab);
    atomic_store(result, (unint64_t *)&qword_1EF1E3418);
  }
  return result;
}

unint64_t sub_1B8DDAC58()
{
  unint64_t result;

  result = qword_1EF1E3420;
  if (!qword_1EF1E3420)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E03C9C, &type metadata for MTAppIntentsTab);
    atomic_store(result, (unint64_t *)&qword_1EF1E3420);
  }
  return result;
}

unint64_t sub_1B8DDACA4()
{
  unint64_t result;

  result = qword_1EF1E3428;
  if (!qword_1EF1E3428)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E03D1C, &type metadata for MTAppIntentsTab);
    atomic_store(result, (unint64_t *)&qword_1EF1E3428);
  }
  return result;
}

uint64_t sub_1B8DDACE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  v0 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v1);
  v12[0] = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1B8DFD640();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1B8DFD658();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1B8DFD46C();
  __swift_allocate_value_buffer(v10, qword_1EF1EC3F8);
  __swift_project_value_buffer(v10, (uint64_t)qword_1EF1EC3F8);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0CAF9B8], v3);
  sub_1B8DFD664();
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v9 + 56))(v12[0], 1, 1, v8);
  return sub_1B8DFD460();
}

uint64_t sub_1B8DDAF10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EF1E0F30 != -1)
    swift_once();
  v2 = sub_1B8DFD46C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EF1EC3F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1B8DDAF80()
{
  sub_1B8DDAFC0();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B8DDAFC0()
{
  unint64_t result;

  result = qword_1EF1E3430;
  if (!qword_1EF1E3430)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E03BCC, &type metadata for MTAppIntentsTab);
    atomic_store(result, (unint64_t *)&qword_1EF1E3430);
  }
  return result;
}

uint64_t sub_1B8DDB004()
{
  sub_1B8DDAFC0();
  return sub_1B8DFD034();
}

unint64_t sub_1B8DDB040()
{
  unint64_t result;

  result = qword_1EF1E3438;
  if (!qword_1EF1E3438)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E03D5C, &type metadata for MTAppIntentsTab);
    atomic_store(result, (unint64_t *)&qword_1EF1E3438);
  }
  return result;
}

unint64_t sub_1B8DDB088()
{
  unint64_t result;

  result = qword_1EF1E3440;
  if (!qword_1EF1E3440)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E03D84, &type metadata for MTAppIntentsTab);
    atomic_store(result, (unint64_t *)&qword_1EF1E3440);
  }
  return result;
}

unint64_t sub_1B8DDB0D0()
{
  unint64_t result;

  result = qword_1EF1E3448;
  if (!qword_1EF1E3448)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E03B54, &type metadata for MTAppIntentsTab);
    atomic_store(result, (unint64_t *)&qword_1EF1E3448);
  }
  return result;
}

uint64_t sub_1B8DDB118()
{
  sub_1B8DDACA4();
  return sub_1B8DFD43C();
}

uint64_t sub_1B8DDB150()
{
  return sub_1B8D87FFC(&qword_1EF1E3450, &qword_1EF1E3458, MEMORY[0x1E0DEAF50]);
}

void sub_1B8DDB17C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6F29658;
}

unint64_t sub_1B8DDB190()
{
  unint64_t result;

  result = qword_1EF1E3460;
  if (!qword_1EF1E3460)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E03E4C, &type metadata for OpenTab);
    atomic_store(result, (unint64_t *)&qword_1EF1E3460);
  }
  return result;
}

unint64_t sub_1B8DDB1D8()
{
  unint64_t result;

  result = qword_1EF1E3468;
  if (!qword_1EF1E3468)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E03E74, &type metadata for OpenTab);
    atomic_store(result, (unint64_t *)&qword_1EF1E3468);
  }
  return result;
}

uint64_t sub_1B8DDB21C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8DDB22C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8DDB23C()
{
  uint64_t result;

  type metadata accessor for MTAppIntentsAppState();
  result = swift_initStaticObject();
  qword_1EF1EC410 = result;
  return result;
}

uint64_t sub_1B8DDB264()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1B8DDB274@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for MTAppIntentsAppState();
  result = sub_1B8DFD9D0();
  *a1 = result;
  return result;
}

uint64_t sub_1B8DDB2AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1B8DFD640();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v5);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0CAF9B8], v1);
  return sub_1B8DFD664();
}

uint64_t sub_1B8DDB404@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD640();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v18 = sub_1B8DFD658();
  v11 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v12 = *MEMORY[0x1E0CAF9B8];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v13(v7, v12, v4);
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v13(v7, v12, v4);
  sub_1B8DFD664();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v3, 0, 1, v18);
  v14 = v19;
  sub_1B8DFD310();
  v15 = sub_1B8DFD304();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
}

uint64_t sub_1B8DDB6B0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3530);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3538);
  MEMORY[0x1E0C80A78](v1);
  sub_1B8D8C494();
  sub_1B8DFD3F4();
  sub_1B8DFD3E8();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3540);
  sub_1B8DFD3DC();
  swift_release();
  sub_1B8DFD3E8();
  sub_1B8DFD40C();
  return sub_1B8DFD3C4();
}

uint64_t sub_1B8DDB82C(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;

  v3 = *v1;
  v2[2] = a1;
  v2[3] = v3;
  sub_1B8DFDCE8();
  v2[4] = sub_1B8DFDCDC();
  sub_1B8DFDCB8();
  return swift_task_switch();
}

uint64_t sub_1B8DDB89C()
{
  uint64_t v0;

  swift_release();
  if (qword_1EF1E0F38 != -1)
    swift_once();
  sub_1B8DFD178();
  sub_1B8DDC990(*(_BYTE *)(v0 + 40));
  sub_1B8DFD0DC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DDB914@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8DDBE08();
  *a1 = result;
  return result;
}

uint64_t sub_1B8DDB938()
{
  sub_1B8D8C494();
  return sub_1B8DFD07C();
}

uint64_t type metadata accessor for MTAppIntentsAppState()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for MTAppIntentsTab(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B8DDB9CC + 4 * byte_1B8E03B25[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B8DDBA00 + 4 * byte_1B8E03B20[v4]))();
}

uint64_t sub_1B8DDBA00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DDBA08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8DDBA10);
  return result;
}

uint64_t sub_1B8DDBA1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8DDBA24);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B8DDBA28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DDBA30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MTAppIntentsTab()
{
  return &type metadata for MTAppIntentsTab;
}

ValueMetadata *type metadata accessor for OpenTab()
{
  return &type metadata for OpenTab;
}

uint64_t sub_1B8DDBA5C()
{
  return sub_1B8D87FFC(&qword_1EF1E3518, &qword_1EF1E3520, MEMORY[0x1E0C916B0]);
}

uint64_t sub_1B8DDBA88()
{
  return sub_1B8D87FFC((unint64_t *)&qword_1EF1E10C0, &qword_1EF1E10C8, MEMORY[0x1E0C91590]);
}

uint64_t sub_1B8DDBAB4()
{
  return MEMORY[0x1E0C96020];
}

uint64_t sub_1B8DDBAC0(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char v29;
  char v30;

  v28 = a1;
  v1 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1B8DFD418();
  v26 = *(_QWORD *)(v2 - 8);
  v27 = v2;
  MEMORY[0x1E0C80A78](v2);
  v25 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10D0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v24 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v23 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B8DFD640();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1B8DFD658();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  sub_1B8DFDAF0();
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3528);
  sub_1B8DFD79C();
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0CAF9B8], v12);
  sub_1B8DFD664();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v11, 1, 1, v17);
  v30 = 4;
  v19 = sub_1B8DFD0A0();
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v8, 1, 1, v19);
  v20(v24, 1, 1, v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v25, *MEMORY[0x1E0C91738], v27);
  sub_1B8DDAFC0();
  v21 = sub_1B8DFD1A8();
  v29 = v28;
  sub_1B8DFD22C();
  sub_1B8DFD184();
  swift_release();
  return v21;
}

uint64_t sub_1B8DDBE08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  v0 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1B8DFD418();
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  MEMORY[0x1E0C80A78](v1);
  v24 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10D0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v23 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1B8DFD640();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v15);
  v16 = sub_1B8DFD658();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  sub_1B8DFDAF0();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3528);
  sub_1B8DFD79C();
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0CAF9B8], v11);
  sub_1B8DFD664();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v10, 1, 1, v16);
  v28 = 4;
  v18 = sub_1B8DFD0A0();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v7, 1, 1, v18);
  v19(v23, 1, 1, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v24, *MEMORY[0x1E0C91738], v26);
  sub_1B8DDAFC0();
  v20 = sub_1B8DFD1A8();
  v27 = 0;
  sub_1B8DFD22C();
  sub_1B8DFD184();
  swift_release();
  return v20;
}

uint64_t sub_1B8DDC148()
{
  unint64_t v0;

  v0 = sub_1B8DFE00C();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_1B8DDC190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *);
  void (*v53)(char *, uint64_t, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  void (*v56)(char *, _QWORD, uint64_t, uint64_t);
  char *v57;
  _QWORD v59[2];
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t, uint64_t);
  void (*v81)(char *, _QWORD, uint64_t, uint64_t);
  unint64_t v82;
  uint64_t v83;
  void (*v84)(char *);
  uint64_t v85;

  v0 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v0);
  v75 = (char *)v59 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v71 = (char *)v59 - v3;
  MEMORY[0x1E0C80A78](v4);
  v67 = (char *)v59 - v5;
  MEMORY[0x1E0C80A78](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1218);
  MEMORY[0x1E0C80A78](v7);
  v74 = (char *)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v72 = (char *)v59 - v10;
  MEMORY[0x1E0C80A78](v11);
  v66 = (char *)v59 - v12;
  MEMORY[0x1E0C80A78](v13);
  v63 = (char *)v59 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v15);
  v73 = (char *)v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v70 = (char *)v59 - v18;
  MEMORY[0x1E0C80A78](v19);
  v65 = (char *)v59 - v20;
  MEMORY[0x1E0C80A78](v21);
  v62 = (char *)v59 - v22;
  v23 = sub_1B8DFD640();
  v24 = *(_QWORD *)(v23 - 8);
  v78 = v23;
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)v59 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_1B8DFD658();
  v30 = *(_QWORD *)(v85 - 8);
  MEMORY[0x1E0C80A78](v85);
  v69 = (char *)v59 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v64 = (char *)v59 - v33;
  MEMORY[0x1E0C80A78](v34);
  v61 = (char *)v59 - v35;
  MEMORY[0x1E0C80A78](v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3548);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E14C0);
  v38 = *(_QWORD *)(v37 - 8);
  v79 = *(_QWORD *)(v38 + 72);
  v39 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  v40 = swift_allocObject();
  v68 = v40;
  *(_OWORD *)(v40 + 16) = xmmword_1B8E01E80;
  *(_BYTE *)(v40 + v39) = 0;
  v41 = v40 + v39;
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v77 = *MEMORY[0x1E0CAF9B8];
  v84 = *(void (**)(char *))(v24 + 104);
  v84(v26);
  sub_1B8DFD664();
  v80 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
  v42 = v85;
  v80(v62, 1, 1, v85);
  v82 = v41;
  v83 = v37;
  v43 = v63;
  sub_1B8DFD358();
  v76 = sub_1B8DFD364();
  v81 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56);
  v81(v43, 0, 1, v76);
  sub_1B8DFD370();
  v44 = v79;
  *(_BYTE *)(v41 + v79) = 1;
  sub_1B8DFDAF0();
  v59[1] = v29;
  sub_1B8DFD79C();
  v60 = v26;
  v45 = v77;
  v46 = v78;
  ((void (*)(char *, _QWORD, uint64_t))v84)(v26, v77, v78);
  sub_1B8DFD664();
  v80(v65, 1, 1, v42);
  v47 = v66;
  sub_1B8DFD358();
  v48 = v76;
  v81(v47, 0, 1, v76);
  sub_1B8DFD370();
  v49 = 2 * v44;
  *(_BYTE *)(v82 + 2 * v44) = 2;
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v50 = v60;
  v51 = v46;
  v52 = v84;
  ((void (*)(char *, uint64_t, uint64_t))v84)(v60, v45, v51);
  sub_1B8DFD664();
  v53 = v80;
  v80(v70, 1, 1, v85);
  v54 = v72;
  sub_1B8DFD358();
  v55 = v48;
  v56 = v81;
  v81(v54, 0, 1, v55);
  sub_1B8DFD370();
  *(_BYTE *)(v82 + v49 + v79) = 3;
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  ((void (*)(char *, _QWORD, uint64_t))v52)(v50, v77, v78);
  sub_1B8DFD664();
  v53(v73, 1, 1, v85);
  v57 = v74;
  sub_1B8DFD358();
  v56(v57, 0, 1, v76);
  sub_1B8DFD370();
  return sub_1B8D8C91C(v68);
}

void *sub_1B8DDC990(unsigned __int8 a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_opt_self();
  sub_1B8DFDEF8();
  sub_1B8DFDBBC();
  sub_1B8DFDF94();
  v3 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_logInfo_, v3);

  if (qword_1ED36ED78 != -1)
    swift_once();
  return sub_1B8DDE900(a1);
}

uint64_t sub_1B8DDCA98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8DFD190();
  *a1 = result;
  return result;
}

unint64_t sub_1B8DDCAC4()
{
  unint64_t result;

  result = qword_1EF1E3560;
  if (!qword_1EF1E3560)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E04040, &type metadata for CreateTimerIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E3560);
  }
  return result;
}

unint64_t sub_1B8DDCB0C()
{
  unint64_t result;

  result = qword_1EF1E3568;
  if (!qword_1EF1E3568)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E04068, &type metadata for CreateTimerIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E3568);
  }
  return result;
}

uint64_t sub_1B8DDCB50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8DDCB60()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8DDCB70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1B8DFD640();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v5);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0CAF9B8], v1);
  return sub_1B8DFD664();
}

uint64_t sub_1B8DDCCC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD640();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v18 = sub_1B8DFD658();
  v11 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v12 = *MEMORY[0x1E0CAF9B8];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v13(v7, v12, v4);
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v13(v7, v12, v4);
  sub_1B8DFD664();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v3, 0, 1, v18);
  v14 = v19;
  sub_1B8DFD310();
  v15 = sub_1B8DFD304();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
}

uint64_t sub_1B8DDCF74()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E35C0);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E35C8);
  MEMORY[0x1E0C80A78](v1);
  sub_1B8DDD69C();
  sub_1B8DFD3F4();
  sub_1B8DFD3E8();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1E35D0);
  sub_1B8DFD3DC();
  swift_release();
  sub_1B8DFD3E8();
  sub_1B8DFD40C();
  return sub_1B8DFD3C4();
}

uint64_t sub_1B8DDD0EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E35B8);
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B8DDD164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v12;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v12 = *(_OWORD *)(v0 + 24);
  sub_1B8DFD178();
  v5 = objc_msgSend((id)objc_opt_self(), sel_seconds);
  sub_1B8DFD538();

  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v6(v2, v3);
  sub_1B8DFD52C();
  v8 = v7;
  v6(v1, v3);
  v9 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v9;
  *(_QWORD *)(v9 + 16) = v8;
  *(_OWORD *)(v9 + 24) = v12;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v10;
  *v10 = v0;
  v10[1] = sub_1B8DDD2A0;
  return sub_1B8DFE0C0();
}

uint64_t sub_1B8DDD2A0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8DDD2FC()
{
  uint64_t v0;

  sub_1B8DFD0DC();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1B8DDD344(double a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  void *v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  _QWORD v14[6];

  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FA70]), sel_initWithState_duration_, 3, a1);
  v7 = objc_msgSend(a4, sel_latestDuration);
  if (v7)
  {
    v8 = v7;
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = v6;
    v9[3] = a3;
    v9[4] = a4;
    v14[4] = sub_1B8DDDC6C;
    v14[5] = v9;
    v14[0] = MEMORY[0x1E0C809B0];
    v14[1] = 1107296256;
    v14[2] = sub_1B8DB2C40;
    v14[3] = &block_descriptor_11;
    v10 = _Block_copy(v14);
    v11 = v6;
    sub_1B8DFD22C();
    v12 = a4;
    swift_release();
    v13 = objc_msgSend(v8, sel_addCompletionBlock_, v10);
    _Block_release(v10);

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1310);
    sub_1B8DFDCD0();

  }
  else
  {
    __break(1u);
  }
}

void sub_1B8DDD4A4(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  id v7;
  id v8;
  void *v10;
  id v11;
  void *v12;

  if (a1)
  {
    v7 = a1;
    v8 = objc_msgSend(v7, sel_sound);
    objc_msgSend(a3, sel_setSound_, v8);

  }
  else if (a2)
  {
    v10 = (void *)objc_opt_self();
    v11 = a2;
    sub_1B8DFDEF8();
    sub_1B8DFDBBC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1108);
    sub_1B8DFDF94();
    v12 = (void *)sub_1B8DFDB5C();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_logError_, v12);

  }
}

uint64_t sub_1B8DDD610(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1B8D85A48;
  return sub_1B8DDD0EC(a1, v5, v4);
}

uint64_t sub_1B8DDD674@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1B8DDD778();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1B8DDD69C()
{
  unint64_t result;

  result = qword_1EF1E3578;
  if (!qword_1EF1E3578)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E03F80, &type metadata for CreateTimerIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E3578);
  }
  return result;
}

uint64_t sub_1B8DDD6E0()
{
  uint64_t v0;

  v0 = qword_1EF1E3550;
  sub_1B8DFD3AC();
  return v0;
}

void sub_1B8DDD714()
{
  sub_1B8DDDBE8();
  JUMPOUT(0x1BCCBB8FCLL);
}

ValueMetadata *type metadata accessor for CreateTimerIntent()
{
  return &type metadata for CreateTimerIntent;
}

uint64_t sub_1B8DDD74C()
{
  return sub_1B8D87FFC(&qword_1EF1E3580, &qword_1EF1E3588, MEMORY[0x1E0C916B0]);
}

uint64_t sub_1B8DDD778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t *, _QWORD, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v0 = sub_1B8DFD418();
  v34 = *(_QWORD *)(v0 - 8);
  v35 = v0;
  MEMORY[0x1E0C80A78](v0);
  v33 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v2);
  v31 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10D0);
  MEMORY[0x1E0C80A78](v5);
  v32 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3590);
  MEMORY[0x1E0C80A78](v7);
  v30 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = v11;
  v12 = sub_1B8DFD640();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1B8DFD658();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v19);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v20 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104);
  v20(v15, *MEMORY[0x1E0CAF9B8], v12);
  sub_1B8DFD664();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v11, 1, 1, v17);
  v21 = *MEMORY[0x1E0C90E00];
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3598);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 104))(v30, v21, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v24, 0, 1, v22);
  sub_1B8DFDAF0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E35A0);
  *v15 = type metadata accessor for MTAppIntentsManager();
  v20(v15, *MEMORY[0x1E0CAF9C8], v12);
  sub_1B8DFD79C();
  sub_1B8DFD664();
  v25 = v32;
  sub_1B8DFD0AC();
  v26 = sub_1B8DFD0A0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 0, 1, v26);
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v33, *MEMORY[0x1E0C91738], v35);
  v27 = sub_1B8DFD1CC();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FAB0]), sel_init);
  return v27;
}

unint64_t sub_1B8DDDBE8()
{
  unint64_t result;

  result = qword_1EF1E35A8;
  if (!qword_1EF1E35A8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E04010, &type metadata for CreateTimerIntent);
    atomic_store(result, &qword_1EF1E35A8);
  }
  return result;
}

void sub_1B8DDDC2C(uint64_t a1)
{
  uint64_t v1;

  sub_1B8DDD344(*(double *)(v1 + 16), a1, *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1B8DDDC38()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1B8DDDC6C(void *a1, void *a2)
{
  uint64_t v2;

  sub_1B8DDD4A4(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1B8DDDC78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8DFD190();
  *a1 = result;
  return result;
}

uint64_t sub_1B8DDDCA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t sub_1B8DDDCA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 24))();
}

uint64_t sub_1B8DDDCB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 32) + *(_QWORD *)(a3 + 32));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1B8D85A48;
  return v9(a1, a2, a3);
}

void sub_1B8DDDD30(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E35E0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v4);
  if (a2)
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
    v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v9 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    aBlock[4] = sub_1B8DDDF3C;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1B8DB2C40;
    aBlock[3] = &block_descriptor_12;
    v10 = _Block_copy(aBlock);
    swift_release();
    v11 = objc_msgSend(a2, sel_addCompletionBlock_, v10);
    _Block_release(v10);

  }
}

uint64_t sub_1B8DDDE74(int a1, id a2)
{
  id v2;

  if (a2)
  {
    v2 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E35E0);
    return sub_1B8DFDCC4();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E35E0);
    return sub_1B8DFDCD0();
  }
}

uint64_t sub_1B8DDDED8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E35E0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1B8DDDF3C(int a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E35E0);
  return sub_1B8DDDE74(a1, a2);
}

id sub_1B8DDDF8C()
{
  uint64_t v0;
  id result;

  type metadata accessor for IntentWorldClockManager();
  v0 = swift_allocObject();
  result = sub_1B8DDDFC4();
  qword_1EF1EC418 = v0;
  return result;
}

id sub_1B8DDDFC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id result;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;

  v1 = v0;
  v2 = sub_1B8DFD7A8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B8DFD8B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  if (result)
  {
    *(_QWORD *)(v1 + 16) = result;
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
    *(_QWORD *)(v1 + 24) = v11;
    v12 = v11;
    sub_1B8DFD8A4();
    v13 = (void *)sub_1B8DFD88C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    objc_msgSend(v12, sel_setTimeZone_, v13);

    v14 = *(id *)(v1 + 24);
    sub_1B8DFD79C();
    v15 = (void *)sub_1B8DFD790();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    objc_msgSend(v14, sel_setLocale_, v15);

    v16 = *(id *)(v1 + 24);
    v17 = (void *)sub_1B8DFDB5C();
    objc_msgSend(v16, sel_setLocalizedDateFormatFromTemplate_, v17);

    v18 = *(void **)(v1 + 24);
    objc_msgSend(v18, sel_setDateStyle_, 0);
    objc_msgSend(v18, sel_setTimeStyle_, 1);
    objc_msgSend(v18, sel_setDoesRelativeDateFormatting_, 1);
    objc_msgSend(v18, sel_setFormattingContext_, 4);
    return (id)v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1B8DDE1E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  unint64_t v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;

  v41 = sub_1B8DFD748();
  v39 = *(_QWORD *)(v41 - 8);
  v1 = MEMORY[0x1E0C80A78](v41);
  v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x1E0C80A78](v1);
  v6 = (char *)&v36 - v5;
  MEMORY[0x1E0C80A78](v4);
  v38 = (char *)&v36 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2068);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1B8DFD8B0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v40 = (char *)&v36 - v16;
  v37 = v0;
  v17 = *(void **)(v0 + 16);
  v18 = (void *)sub_1B8DFDB5C();
  v19 = objc_msgSend(v17, sel_citiesMatchingName_, v18);

  if (v19)
  {
    sub_1B8DDE614();
    v20 = sub_1B8DFDC64();

    if (v20 >> 62)
    {
      sub_1B8DFD3AC();
      v35 = sub_1B8DFDFB8();
      swift_bridgeObjectRelease();
      if (v35)
      {
LABEL_4:
        if ((v20 & 0xC000000000000001) != 0)
        {
          v21 = (id)MEMORY[0x1BCCBC814](0, v20);
        }
        else
        {
          if (!*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_17;
          }
          v21 = *(id *)(v20 + 32);
        }
        v22 = v21;
        swift_bridgeObjectRelease();
        v23 = objc_msgSend(v22, sel_timeZone);
        if (!v23)
        {
LABEL_18:
          __break(1u);
          return;
        }
        v24 = v23;
        sub_1B8DFDB68();

        sub_1B8DFD868();
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
        {

          sub_1B8DDE650((uint64_t)v10);
          return;
        }
        v36 = v22;
        v25 = v40;
        (*(void (**)(void))(v12 + 32))();
        sub_1B8DFD724();
        sub_1B8DFD73C();
        v26 = sub_1B8DFD874();
        v27 = *(void (**)(char *, uint64_t))(v39 + 8);
        v28 = v41;
        v27(v3, v41);
        sub_1B8DFD8A4();
        sub_1B8DFD73C();
        v29 = sub_1B8DFD874();
        v27(v3, v28);
        v30 = *(void (**)(char *, uint64_t))(v12 + 8);
        v30(v15, v11);
        if (!__OFSUB__(v26, v29))
        {
          v31 = v38;
          sub_1B8DFD6C4();
          v27(v6, v28);
          v32 = *(void **)(v37 + 24);
          v33 = (void *)sub_1B8DFD6D0();
          v34 = objc_msgSend(v32, sel_stringFromDate_, v33);

          sub_1B8DFDB68();
          v27(v31, v28);
          v30(v25, v11);
          return;
        }
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
    }
    else if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B8DDE5C8()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IntentWorldClockManager()
{
  return objc_opt_self();
}

unint64_t sub_1B8DDE614()
{
  unint64_t result;

  result = qword_1EF1E3698;
  if (!qword_1EF1E3698)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF1E3698);
  }
  return result;
}

uint64_t sub_1B8DDE650(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2068);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t MTTab.init(rawValue:)(unint64_t a1)
{
  return sub_1B8DDED1C(a1);
}

unint64_t sub_1B8DDE6AC@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_1B8DDED1C(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

id MTAppIntentsManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id static MTAppIntentsManager.sharedManager.getter()
{
  if (qword_1ED36ED78 != -1)
    swift_once();
  return (id)qword_1ED36ED70;
}

uint64_t sub_1B8DDE784()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC18MobileTimerSupport19MTAppIntentsManager_delegate;
  swift_beginAccess();
  return MEMORY[0x1BCCBD264](v1);
}

uint64_t sub_1B8DDE7CC()
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_1B8DDE824(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC18MobileTimerSupport19MTAppIntentsManager_delegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x1BCCBD264](v5);
  return sub_1B8DDE894;
}

void sub_1B8DDE894(void **a1, char a2)
{
  void *v3;

  v3 = *a1;
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

void *sub_1B8DDE900(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  void *v5;
  void *result;
  uint64_t v7;

  sub_1B8DFDEF8();
  sub_1B8DFDBBC();
  sub_1B8DFDF94();
  v3 = (void *)objc_opt_self();
  sub_1B8DFDBBC();
  v4 = v1 + OBJC_IVAR____TtC18MobileTimerSupport19MTAppIntentsManager_delegate;
  swift_beginAccess();
  v7 = MEMORY[0x1BCCBD264](v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E36A8);
  sub_1B8DFDB80();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_logInfo_, v5, v7, a1);

  result = (void *)MEMORY[0x1BCCBD264](v4);
  if (result)
  {
    objc_msgSend(result, sel_didSelectTabWithManager_tab_, v1, a1);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B8DDEAD0(uint64_t a1, uint64_t a2)
{
  return sub_1B8DDEB14(a1, a2, 0x80000001B8E08B80, (SEL *)&selRef_didAddNewWorldClockWithNameWithManager_name_);
}

uint64_t sub_1B8DDEAF8(uint64_t a1, uint64_t a2)
{
  return sub_1B8DDEB14(a1, a2, 0x80000001B8E08BB0, (SEL *)&selRef_didRemoveWorldClockWithNameWithManager_name_);
}

uint64_t sub_1B8DDEB14(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v4;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t result;
  void *v11;
  void *v12;

  v6 = v4;
  v7 = (void *)objc_opt_self();
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  v8 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_logInfo_, v8);

  v9 = v4 + OBJC_IVAR____TtC18MobileTimerSupport19MTAppIntentsManager_delegate;
  swift_beginAccess();
  result = MEMORY[0x1BCCBD264](v9);
  if (result)
  {
    v11 = (void *)result;
    v12 = (void *)sub_1B8DFDB5C();
    objc_msgSend(v11, *a4, v6, v12);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B8DDEC44(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v6 = sub_1B8DFDB68();
  v8 = v7;
  v9 = a1;
  a4(v6, v8);

  return swift_bridgeObjectRelease();
}

id MTAppIntentsManager.init()()
{
  void *v0;
  objc_super v2;

  swift_unknownObjectWeakInit();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MTAppIntentsManager();
  return objc_msgSendSuper2(&v2, sel_init);
}

id MTAppIntentsManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MTAppIntentsManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1B8DDED1C(unint64_t result)
{
  if (result > 3)
    return 0;
  return result;
}

unint64_t sub_1B8DDED30()
{
  unint64_t result;

  result = qword_1EF1E36B0;
  if (!qword_1EF1E36B0)
  {
    result = MEMORY[0x1BCCBD0FC](&protocol conformance descriptor for MTTab, &type metadata for MTTab);
    atomic_store(result, (unint64_t *)&qword_1EF1E36B0);
  }
  return result;
}

uint64_t sub_1B8DDED74@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + OBJC_IVAR____TtC18MobileTimerSupport19MTAppIntentsManager_delegate;
  swift_beginAccess();
  result = MEMORY[0x1BCCBD264](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1B8DDEDC8()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

ValueMetadata *type metadata accessor for MTTab()
{
  return &type metadata for MTTab;
}

uint64_t method lookup function for MTAppIntentsManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MTAppIntentsManager.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of MTAppIntentsManager.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MTAppIntentsManager.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MTAppIntentsManager.didSelectTab(tab:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MTAppIntentsManager.didAddNewWorldClockWithName(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MTAppIntentsManager.didRemoveWorldClockWithName(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t sub_1B8DDEEE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1B8DFD640();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v5);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1B8DFD664();
}

uint64_t sub_1B8DDF030@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD640();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v18 = sub_1B8DFD658();
  v11 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v12 = *MEMORY[0x1E0CAF9B8];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v13(v7, v12, v4);
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v13(v7, v12, v4);
  sub_1B8DFD664();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v3, 0, 1, v18);
  v14 = v19;
  sub_1B8DFD310();
  v15 = sub_1B8DFD304();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
}

uint64_t sub_1B8DDF2E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];

  v0 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v1);
  v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1B8DFD640();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1B8DFD658();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CAF9B8], v4);
  sub_1B8DFD664();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v3, 1, 1, v9);
  return sub_1B8DFD460();
}

uint64_t sub_1B8DDF4CC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E696E69616D6572;
  else
    return 0x6E6F697461727564;
}

uint64_t sub_1B8DDF510(char *a1, char *a2)
{
  return sub_1B8DB3620(*a1, *a2);
}

unint64_t sub_1B8DDF520()
{
  unint64_t result;

  result = qword_1EF1E36B8;
  if (!qword_1EF1E36B8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E0427C, &type metadata for GetCurrentTimerDetailsIntent.GetCurrentTimerMode);
    atomic_store(result, (unint64_t *)&qword_1EF1E36B8);
  }
  return result;
}

uint64_t sub_1B8DDF564()
{
  return sub_1B8DF914C();
}

uint64_t sub_1B8DDF56C()
{
  return sub_1B8DB3838();
}

uint64_t sub_1B8DDF574()
{
  return sub_1B8DF1110();
}

uint64_t sub_1B8DDF57C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1B8DFE00C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1B8DDF5D8@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B8DDF4CC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1B8DDF604()
{
  unint64_t result;

  result = qword_1EF1E36C0;
  if (!qword_1EF1E36C0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E0435C, &type metadata for GetCurrentTimerDetailsIntent.GetCurrentTimerMode);
    atomic_store(result, (unint64_t *)&qword_1EF1E36C0);
  }
  return result;
}

unint64_t sub_1B8DDF64C()
{
  unint64_t result;

  result = qword_1EF1E36C8;
  if (!qword_1EF1E36C8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E04394, &type metadata for GetCurrentTimerDetailsIntent.GetCurrentTimerMode);
    atomic_store(result, (unint64_t *)&qword_1EF1E36C8);
  }
  return result;
}

unint64_t sub_1B8DDF694()
{
  unint64_t result;

  result = qword_1EF1E36D0;
  if (!qword_1EF1E36D0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E042E4, &type metadata for GetCurrentTimerDetailsIntent.GetCurrentTimerMode);
    atomic_store(result, (unint64_t *)&qword_1EF1E36D0);
  }
  return result;
}

unint64_t sub_1B8DDF6DC()
{
  unint64_t result;

  result = qword_1EF1E36D8;
  if (!qword_1EF1E36D8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E043C4, &type metadata for GetCurrentTimerDetailsIntent.GetCurrentTimerMode);
    atomic_store(result, (unint64_t *)&qword_1EF1E36D8);
  }
  return result;
}

unint64_t sub_1B8DDF724()
{
  unint64_t result;

  result = qword_1EF1E36E0;
  if (!qword_1EF1E36E0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E043EC, &type metadata for GetCurrentTimerDetailsIntent.GetCurrentTimerMode);
    atomic_store(result, (unint64_t *)&qword_1EF1E36E0);
  }
  return result;
}

unint64_t sub_1B8DDF76C()
{
  unint64_t result;

  result = qword_1EF1E36E8;
  if (!qword_1EF1E36E8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E04414, &type metadata for GetCurrentTimerDetailsIntent.GetCurrentTimerMode);
    atomic_store(result, (unint64_t *)&qword_1EF1E36E8);
  }
  return result;
}

unint64_t sub_1B8DDF7B4()
{
  unint64_t result;

  result = qword_1EF1E36F0;
  if (!qword_1EF1E36F0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E0446C, &type metadata for GetCurrentTimerDetailsIntent.GetCurrentTimerMode);
    atomic_store(result, (unint64_t *)&qword_1EF1E36F0);
  }
  return result;
}

uint64_t sub_1B8DDF7FC()
{
  sub_1B8DDF83C();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B8DDF83C()
{
  unint64_t result;

  result = qword_1EF1E36F8;
  if (!qword_1EF1E36F8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E0431C, &type metadata for GetCurrentTimerDetailsIntent.GetCurrentTimerMode);
    atomic_store(result, (unint64_t *)&qword_1EF1E36F8);
  }
  return result;
}

uint64_t sub_1B8DDF880()
{
  sub_1B8DDF83C();
  return sub_1B8DFD034();
}

unint64_t sub_1B8DDF8BC()
{
  unint64_t result;

  result = qword_1EF1E3700;
  if (!qword_1EF1E3700)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E044AC, &type metadata for GetCurrentTimerDetailsIntent.GetCurrentTimerMode);
    atomic_store(result, (unint64_t *)&qword_1EF1E3700);
  }
  return result;
}

unint64_t sub_1B8DDF904()
{
  unint64_t result;

  result = qword_1EF1E3708;
  if (!qword_1EF1E3708)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E044D4, &type metadata for GetCurrentTimerDetailsIntent.GetCurrentTimerMode);
    atomic_store(result, (unint64_t *)&qword_1EF1E3708);
  }
  return result;
}

unint64_t sub_1B8DDF94C()
{
  unint64_t result;

  result = qword_1EF1E3710;
  if (!qword_1EF1E3710)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E042A4, &type metadata for GetCurrentTimerDetailsIntent.GetCurrentTimerMode);
    atomic_store(result, (unint64_t *)&qword_1EF1E3710);
  }
  return result;
}

uint64_t sub_1B8DDF994()
{
  sub_1B8DDF7B4();
  return sub_1B8DFD43C();
}

uint64_t sub_1B8DDF9CC()
{
  return sub_1B8D87FFC(&qword_1EF1E3718, &qword_1EF1E3720, MEMORY[0x1E0DEAF50]);
}

void sub_1B8DDF9F8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6F296D0;
}

unint64_t sub_1B8DDFA0C()
{
  unint64_t result;

  result = qword_1EF1E3728;
  if (!qword_1EF1E3728)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E0459C, &type metadata for GetCurrentTimerDetailsIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E3728);
  }
  return result;
}

unint64_t sub_1B8DDFA54()
{
  unint64_t result;

  result = qword_1EF1E3730;
  if (!qword_1EF1E3730)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E045C4, &type metadata for GetCurrentTimerDetailsIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E3730);
  }
  return result;
}

uint64_t sub_1B8DDFA98()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1B8DDFABC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8DDFACC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3798);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E37A0);
  MEMORY[0x1E0C80A78](v1);
  sub_1B8DE0070();
  sub_1B8DFD3F4();
  sub_1B8DFD3E8();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E37A8);
  sub_1B8DFD3DC();
  swift_release();
  sub_1B8DFD3E8();
  sub_1B8DFD40C();
  return sub_1B8DFD3C4();
}

uint64_t sub_1B8DDFC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v3[5] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3778);
  v3[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B8DDFCAC()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;

  v1 = objc_msgSend(*(id *)(v0 + 32), sel_timersSync);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(), sel_firstActiveTimerFromTimers_, v1);

    sub_1B8DFD178();
    v4 = *(_QWORD *)(v0 + 48);
    if (*(_BYTE *)(v0 + 56) == 1)
      objc_msgSend(v3, sel_remainingTime);
    else
      objc_msgSend(v3, sel_duration);
    v6 = objc_msgSend((id)objc_opt_self(), sel_seconds);
    sub_1B8DE0994();
    sub_1B8DFD520();
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E35B8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 0, 1, v7);
    sub_1B8DE08D8();
    sub_1B8DFD0D0();

  }
  else
  {
    v4 = *(_QWORD *)(v0 + 48);
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E35B8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
    sub_1B8DE08D8();
    sub_1B8DFD0D0();
  }
  sub_1B8DE0954(v4);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DDFE8C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1B8D85A48;
  return sub_1B8DDFC48(a1, v5, v4);
}

uint64_t sub_1B8DDFEF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1B8DE04C8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B8DDFF14()
{
  sub_1B8DE0070();
  return sub_1B8DFD07C();
}

ValueMetadata *type metadata accessor for GetCurrentTimerDetailsIntent()
{
  return &type metadata for GetCurrentTimerDetailsIntent;
}

uint64_t storeEnumTagSinglePayload for GetCurrentTimerDetailsIntent.GetCurrentTimerMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B8DDFF98 + 4 * byte_1B8E04275[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B8DDFFCC + 4 * byte_1B8E04270[v4]))();
}

uint64_t sub_1B8DDFFCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DDFFD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8DDFFDCLL);
  return result;
}

uint64_t sub_1B8DDFFE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8DDFFF0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B8DDFFF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DDFFFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GetCurrentTimerDetailsIntent.GetCurrentTimerMode()
{
  return &type metadata for GetCurrentTimerDetailsIntent.GetCurrentTimerMode;
}

uint64_t sub_1B8DE0018()
{
  return sub_1B8D87FFC(&qword_1EF1E3740, &qword_1EF1E3748, MEMORY[0x1E0C916B0]);
}

uint64_t sub_1B8DE0044()
{
  return sub_1B8D87FFC(&qword_1EF1E3750, &qword_1EF1E3758, MEMORY[0x1E0C915A0]);
}

unint64_t sub_1B8DE0070()
{
  unint64_t result;

  result = qword_1EF1E3760;
  if (!qword_1EF1E3760)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E0450C, &type metadata for GetCurrentTimerDetailsIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E3760);
  }
  return result;
}

unint64_t sub_1B8DE00B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v26[2];
  unsigned int v27;
  void (*v28)(char *);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;

  v0 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v0);
  v36 = (char *)v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v32 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)v26 - v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1218);
  MEMORY[0x1E0C80A78](v4);
  v37 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v6);
  v34 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B8DFD640();
  v9 = *(_QWORD *)(v8 - 8);
  v29 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v12);
  v31 = sub_1B8DFD658();
  v13 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v35 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E37B0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E14B0);
  v17 = *(_QWORD *)(v16 - 8);
  v30 = *(_QWORD *)(v17 + 72);
  v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v19 = swift_allocObject();
  v33 = v19;
  *(_OWORD *)(v19 + 16) = xmmword_1B8E00210;
  v20 = v19 + v18;
  *(_BYTE *)(v19 + v18) = 0;
  sub_1B8DFDAF0();
  v26[1] = v20 + *(int *)(v16 + 48);
  sub_1B8DFD79C();
  v27 = *MEMORY[0x1E0CAF9B8];
  v28 = *(void (**)(char *))(v9 + 104);
  v28(v11);
  sub_1B8DFD664();
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v21 = v34;
  v22 = v31;
  v32(v34, 1, 1, v31);
  v23 = sub_1B8DFD364();
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v24(v37, 1, 1, v23);
  sub_1B8DFD370();
  *(_BYTE *)(v20 + v30) = 1;
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  ((void (*)(char *, _QWORD, uint64_t))v28)(v11, v27, v29);
  sub_1B8DFD664();
  v32(v21, 1, 1, v22);
  v24(v37, 1, 1, v23);
  sub_1B8DFD370();
  return sub_1B8D8C938(v33);
}

uint64_t sub_1B8DE04C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t *, _QWORD, uint64_t);
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v0 = sub_1B8DFD418();
  v30 = *(_QWORD *)(v0 - 8);
  v31 = v0;
  MEMORY[0x1E0C80A78](v0);
  v29 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  v27 = (char *)&v25 - v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10D0);
  MEMORY[0x1E0C80A78](v5);
  v28 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v25 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v10);
  v26 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B8DFD640();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1B8DFD658();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v19);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v20 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104);
  v20(v15, *MEMORY[0x1E0CAF9B8], v12);
  sub_1B8DFD664();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v26, 1, 1, v17);
  v32 = 1;
  sub_1B8DFDAF0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3768);
  *v15 = type metadata accessor for MTAppIntentsManager();
  v20(v15, *MEMORY[0x1E0CAF9C8], v12);
  sub_1B8DFD79C();
  sub_1B8DFD664();
  sub_1B8DFD0AC();
  v21 = sub_1B8DFD0A0();
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v22(v9, 0, 1, v21);
  v22(v28, 1, 1, v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v29, *MEMORY[0x1E0C91738], v31);
  sub_1B8DDF83C();
  v23 = sub_1B8DFD1A8();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FAB0]), sel_init);
  return v23;
}

unint64_t sub_1B8DE08D8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF1E3780;
  if (!qword_1EF1E3780)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1E3778);
    v2 = sub_1B8D87FFC(&qword_1EF1E3788, &qword_1EF1E35B8, MEMORY[0x1E0C91C28]);
    result = MEMORY[0x1BCCBD0FC](MEMORY[0x1E0C91D78], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF1E3780);
  }
  return result;
}

uint64_t sub_1B8DE0954(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3778);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B8DE0994()
{
  unint64_t result;

  result = qword_1EF1E3790;
  if (!qword_1EF1E3790)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF1E3790);
  }
  return result;
}

uint64_t sub_1B8DE09D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8DFD190();
  *a1 = result;
  return result;
}

uint64_t sub_1B8DE09FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0C91198];
  v3 = sub_1B8DFD31C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

ValueMetadata *type metadata accessor for MobileTimerAppShortcuts()
{
  return &type metadata for MobileTimerAppShortcuts;
}

uint64_t sub_1B8DE0A50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  void (*v73)(char *, _QWORD, uint64_t);
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  void (*v81)(char *, _QWORD, uint64_t);
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  __int128 v119;
  __int128 v120;
  char *v121;
  char *v122;
  void (*v123)(char *, uint64_t);
  unsigned int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD v128[2];

  v127 = sub_1B8DFD640();
  v125 = *(_QWORD *)(v127 - 8);
  MEMORY[0x1E0C80A78](v127);
  v122 = (char *)&v93 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v1);
  v121 = (char *)&v93 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v3);
  v118 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v115 = (char *)&v93 - v6;
  MEMORY[0x1E0C80A78](v7);
  v111 = (char *)&v93 - v8;
  MEMORY[0x1E0C80A78](v9);
  v106 = (char *)&v93 - v10;
  MEMORY[0x1E0C80A78](v11);
  v102 = (char *)&v93 - v12;
  MEMORY[0x1E0C80A78](v13);
  v104 = (char *)&v93 - v14;
  MEMORY[0x1E0C80A78](v15);
  v107 = (char *)&v93 - v16;
  MEMORY[0x1E0C80A78](v17);
  v109 = (char *)&v93 - v18;
  MEMORY[0x1E0C80A78](v19);
  v123 = (void (*)(char *, uint64_t))((char *)&v93 - v20);
  v21 = sub_1B8DFD658();
  MEMORY[0x1E0C80A78](v21);
  v117 = (char *)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v114 = (char *)&v93 - v24;
  MEMORY[0x1E0C80A78](v25);
  v110 = (char *)&v93 - v26;
  MEMORY[0x1E0C80A78](v27);
  v105 = (char *)&v93 - v28;
  MEMORY[0x1E0C80A78](v29);
  v101 = (char *)&v93 - v30;
  MEMORY[0x1E0C80A78](v31);
  v99 = (char *)&v93 - v32;
  MEMORY[0x1E0C80A78](v33);
  v97 = (char *)&v93 - v34;
  MEMORY[0x1E0C80A78](v35);
  v95 = (char *)&v93 - v36;
  MEMORY[0x1E0C80A78](v37);
  v126 = sub_1B8DFD094();
  *(_QWORD *)&v119 = *(_QWORD *)(v126 - 8);
  MEMORY[0x1E0C80A78](v126);
  v116 = (char *)&v93 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v39);
  v113 = (char *)&v93 - v40;
  MEMORY[0x1E0C80A78](v41);
  v108 = (char *)&v93 - v42;
  MEMORY[0x1E0C80A78](v43);
  v103 = (char *)&v93 - v44;
  MEMORY[0x1E0C80A78](v45);
  v100 = (char *)&v93 - v46;
  MEMORY[0x1E0C80A78](v47);
  v98 = (char *)&v93 - v48;
  MEMORY[0x1E0C80A78](v49);
  v96 = (char *)&v93 - v50;
  MEMORY[0x1E0C80A78](v51);
  v94 = (char *)&v93 - v52;
  MEMORY[0x1E0C80A78](v53);
  v55 = (char *)&v93 - v54;
  v128[0] = sub_1B8DDD778();
  v128[1] = v56;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E37B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E37C0);
  v57 = swift_allocObject();
  v120 = xmmword_1B8DFFCF0;
  *(_OWORD *)(v57 + 16) = xmmword_1B8DFFCF0;
  sub_1B8DDD69C();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v124 = *MEMORY[0x1E0CAF9B8];
  v125 = *(_QWORD *)(v125 + 104);
  v58 = v122;
  v59 = v127;
  ((void (*)(char *))v125)(v122);
  sub_1B8DFD664();
  sub_1B8DFD088();
  v112 = sub_1B8DFD028();
  v123 = *(void (**)(char *, uint64_t))(v119 + 8);
  v60 = v126;
  v123(v55, v126);
  v128[0] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FAB0]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E37C8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E37D0);
  v61 = swift_allocObject();
  v119 = xmmword_1B8DFF650;
  *(_OWORD *)(v61 + 16) = xmmword_1B8DFF650;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E37D0);
  sub_1B8DAF760();
  sub_1B8DFD010();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v62 = v58;
  v63 = v124;
  v64 = (void (*)(char *, uint64_t, uint64_t))v125;
  ((void (*)(char *, _QWORD, uint64_t))v125)(v62, v124, v59);
  sub_1B8DFD664();
  v65 = v94;
  sub_1B8DFD088();
  v109 = (char *)sub_1B8DFD028();
  v123(v65, v60);
  v128[0] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FAB0]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E37D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E37E0);
  *(_OWORD *)(swift_allocObject() + 16) = v119;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E37E0);
  sub_1B8DE23D4();
  sub_1B8DFD010();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v66 = v63;
  v67 = v63;
  v68 = v59;
  v64(v122, v66, v59);
  sub_1B8DFD664();
  v69 = v96;
  sub_1B8DFD088();
  v107 = (char *)sub_1B8DFD028();
  v70 = v126;
  v71 = v123;
  v123(v69, v126);
  v128[0] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FAB0]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E37F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E37F8);
  *(_OWORD *)(swift_allocObject() + 16) = v119;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E37F8);
  sub_1B8DE2418();
  sub_1B8DFD010();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v72 = v68;
  v73 = (void (*)(char *, _QWORD, uint64_t))v125;
  ((void (*)(char *, uint64_t, uint64_t))v125)(v122, v67, v72);
  sub_1B8DFD664();
  v74 = v98;
  sub_1B8DFD088();
  v104 = (char *)sub_1B8DFD028();
  v71(v74, v70);
  sub_1B8D8A77C(v128);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3808);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3810);
  *(_OWORD *)(swift_allocObject() + 16) = v120;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3810);
  sub_1B8D89F58();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v73(v122, v124, v127);
  sub_1B8DFD664();
  v75 = v100;
  sub_1B8DFD088();
  v102 = (char *)sub_1B8DFD028();
  v71(v75, v126);
  v128[0] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FA88]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3818);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3820);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1B8E04660;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3820);
  sub_1B8DADF5C();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFD010();
  *(_QWORD *)&v119 = 0xD000000000000010;
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v76 = v122;
  ((void (*)(char *, _QWORD, uint64_t))v125)(v122, v124, v127);
  sub_1B8DFD664();
  v77 = v103;
  sub_1B8DFD088();
  v106 = (char *)sub_1B8DFD028();
  v71(v77, v126);
  v128[0] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FA88]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3828);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3830);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1B8E02960;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3830);
  sub_1B8DA8C34();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v78 = v124;
  ((void (*)(char *, _QWORD, uint64_t))v125)(v76, v124, v127);
  sub_1B8DFD664();
  v79 = v108;
  sub_1B8DFD088();
  v111 = (char *)sub_1B8DFD028();
  v123(v79, v126);
  v128[0] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FA88]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3838);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3840);
  *(_OWORD *)(swift_allocObject() + 16) = v120;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3840);
  sub_1B8D8C450();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v80 = v78;
  v81 = (void (*)(char *, _QWORD, uint64_t))v125;
  ((void (*)(char *, uint64_t, uint64_t))v125)(v76, v80, v127);
  sub_1B8DFD664();
  v82 = v113;
  sub_1B8DFD088();
  *(_QWORD *)&v120 = sub_1B8DFD028();
  v83 = v126;
  v123(v82, v126);
  v128[0] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FA88]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3848);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3850);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1B8DFFCD0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3850);
  sub_1B8D9F750();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFD010();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v81(v76, v124, v127);
  sub_1B8DFD664();
  v84 = v116;
  sub_1B8DFD088();
  v85 = sub_1B8DFD028();
  v123(v84, v83);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E3858);
  v86 = swift_allocObject();
  *(_OWORD *)(v86 + 16) = xmmword_1B8E04670;
  v87 = v109;
  *(_QWORD *)(v86 + 32) = v112;
  *(_QWORD *)(v86 + 40) = v87;
  v88 = v104;
  *(_QWORD *)(v86 + 48) = v107;
  *(_QWORD *)(v86 + 56) = v88;
  v89 = v106;
  *(_QWORD *)(v86 + 64) = v102;
  *(_QWORD *)(v86 + 72) = v89;
  v90 = v120;
  *(_QWORD *)(v86 + 80) = v111;
  *(_QWORD *)(v86 + 88) = v90;
  *(_QWORD *)(v86 + 96) = v85;
  v91 = sub_1B8DFD01C();
  swift_bridgeObjectRelease();
  return v91;
}

unint64_t sub_1B8DE23D4()
{
  unint64_t result;

  result = qword_1EF1E37E8;
  if (!qword_1EF1E37E8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E048F0, &type metadata for PauseTimerIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E37E8);
  }
  return result;
}

unint64_t sub_1B8DE2418()
{
  unint64_t result;

  result = qword_1EF1E3800;
  if (!qword_1EF1E3800)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E05150, &type metadata for ResumeTimerIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E3800);
  }
  return result;
}

uint64_t Atomic.__allocating_init(wrappedValue:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  Atomic.init(wrappedValue:)(a1);
  return v2;
}

uint64_t sub_1B8DE2498(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[6];

  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
    return a1();
  sub_1B8D98F94();
  v5 = sub_1B8DFDDC0();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v8[4] = sub_1B8DA01B0;
  v8[5] = v6;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1B8D8CD1C;
  v8[3] = &block_descriptor_13;
  v7 = _Block_copy(v8);
  sub_1B8DFD22C();
  swift_release();
  dispatch_sync((dispatch_queue_t)v5, v7);

  _Block_release(v7);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v5 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1B8DE25C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_1B8DE2628(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

char *Atomic.init(wrappedValue:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)v1;
  type metadata accessor for MTSUnfairLock();
  v4 = swift_allocObject();
  *(_DWORD *)(v4 + 16) = 0;
  *((_QWORD *)v1 + 2) = v4;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 32))(&v1[*(_QWORD *)(v3 + 96)], a1);
  return v1;
}

uint64_t type metadata accessor for MTSUnfairLock()
{
  return objc_opt_self();
}

uint64_t sub_1B8DE2714@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  char *v5;

  v3 = (os_unfair_lock_s *)(v1[2] + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v3);
  v4 = *v1;
  v5 = (char *)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *))(*(_QWORD *)(*(_QWORD *)(v4 + 80) - 8) + 16))(a1, v5);
  os_unfair_lock_unlock(v3);
  return swift_endAccess();
}

uint64_t sub_1B8DE27AC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  sub_1B8DE29A4(a1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
}

void (*sub_1B8DE27E8(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v7 = malloc(v6);
  v3[4] = v7;
  sub_1B8DE2714((uint64_t)v7);
  return sub_1B8DE2868;
}

void sub_1B8DE2868(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    sub_1B8DE29A4((uint64_t)v3);
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
  }
  else
  {
    sub_1B8DE29A4(*(_QWORD *)(*(_QWORD *)a1 + 32));
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v7(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t *Atomic.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 96));
  return v0;
}

uint64_t Atomic.__deallocating_deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 96));
  return swift_deallocClassInstance();
}

uint64_t sub_1B8DE2994()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1B8DE29A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  os_unfair_lock_s *v7;
  uint64_t v9;

  v3 = *(_QWORD *)(*v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (os_unfair_lock_s *)(v1[2] + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  sub_1B8DE2628((uint64_t)v6);
  os_unfair_lock_unlock(v7);
  return swift_endAccess();
}

uint64_t sub_1B8DE2A5C@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8DE2714(a1);
}

uint64_t sub_1B8DE2A7C(uint64_t a1)
{
  return sub_1B8DE29A4(a1);
}

uint64_t sub_1B8DE2A9C()
{
  return 8;
}

_QWORD *sub_1B8DE2AA8(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B8DE2AB4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for Atomic(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Atomic);
}

uint64_t method lookup function for Atomic()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Atomic.__allocating_init(wrappedValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of Atomic.wrappedValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of Atomic.wrappedValue.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of Atomic.wrappedValue.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t sub_1B8DE2B78(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1B8DE2B80(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1B8DE2B88()
{
  return swift_deallocObject();
}

id sub_1B8DE2B98()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MTWatchActivityManager()), sel_init);
  qword_1EF1E3980 = (uint64_t)result;
  return result;
}

id MTWatchActivityManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id static MTWatchActivityManager.shared.getter()
{
  if (qword_1EF1E0F48 != -1)
    swift_once();
  swift_beginAccess();
  return (id)qword_1EF1E3980;
}

void static MTWatchActivityManager.shared.setter(uint64_t a1)
{
  void *v2;

  if (qword_1EF1E0F48 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (void *)qword_1EF1E3980;
  qword_1EF1E3980 = a1;

}

uint64_t (*static MTWatchActivityManager.shared.modify())()
{
  if (qword_1EF1E0F48 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

id MTWatchActivityManager.init()()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = OBJC_IVAR____TtC18MobileTimerSupport22MTWatchActivityManager_activityManager;
  v3 = qword_1EF1E0EF0;
  v4 = v0;
  if (v3 != -1)
    swift_once();
  swift_beginAccess();
  *(_QWORD *)&v4[v2] = qword_1EF1E18B8;
  sub_1B8DFD22C();

  v6.receiver = v4;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_init);
}

id MTWatchActivityManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MTWatchActivityManager()
{
  return objc_opt_self();
}

void sub_1B8DE3134(uint64_t a1, void *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD aBlock[6];

  v10 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x1E0C80A78](v10);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))((char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10, v13);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = a5;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B8DE32DC;
  aBlock[3] = a6;
  v16 = _Block_copy(aBlock);
  swift_release();
  v17 = objc_msgSend(a2, sel_addCompletionBlock_, v16);
  _Block_release(v16);

}

uint64_t sub_1B8DE3270(void *a1, id a2, uint64_t a3, uint64_t *a4)
{
  id v5;
  id v7;

  if (a2)
  {
    v5 = a2;
    __swift_instantiateConcreteTypeFromMangledName(a4);
    return sub_1B8DFDCC4();
  }
  else
  {
    v7 = a1;
    __swift_instantiateConcreteTypeFromMangledName(a4);
    return sub_1B8DFDCD0();
  }
}

uint64_t sub_1B8DE32DC(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  sub_1B8DFD22C();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t TimerViewModel.timersAddedStream.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8DE3434(&OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timersAddedStream, &qword_1EF1E39B8, a1);
}

uint64_t TimerViewModel.timersAddedContinuation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8DE3434(&OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timersAddedContinuation, &qword_1EF1E39C0, a1);
}

uint64_t TimerViewModel.timersRemovedStream.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8DE3434(&OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timersRemovedStream, &qword_1EF1E39B8, a1);
}

uint64_t TimerViewModel.timersRemovedContinuation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8DE3434(&OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timersRemovedContinuation, &qword_1EF1E39C0, a1);
}

uint64_t TimerViewModel.timersUpdatedStream.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8DE3434(&OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timersUpdatedStream, &qword_1EF1E39B8, a1);
}

uint64_t TimerViewModel.timersUpdatedContinuation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8DE3434(&OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timersUpdatedContinuation, &qword_1EF1E39C0, a1);
}

uint64_t TimerViewModel.timerFiredStream.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8DE3434(&OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timerFiredStream, &qword_1EF1E39C8, a1);
}

uint64_t TimerViewModel.timerFiredContinuation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8DE3434(&OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timerFiredContinuation, &qword_1EF1E39D0, a1);
}

uint64_t TimerViewModel.recentsStream.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8DE3434(&OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_recentsStream, &qword_1EF1E39D8, a1);
}

uint64_t TimerViewModel.recentsContinuation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8DE3434(&OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_recentsContinuation, &qword_1EF1E39E0, a1);
}

uint64_t TimerViewModel.latestStream.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8DE3434(&OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_latestStream, &qword_1EF1E39E8, a1);
}

uint64_t TimerViewModel.latestContinuation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8DE3434(&OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_latestContinuation, &qword_1EF1E39F0, a1);
}

uint64_t sub_1B8DE3434@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = v3 + *a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, v5, v6);
}

uint64_t TimerViewModel.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  TimerViewModel.init()();
  return v0;
}

uint64_t TimerViewModel.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  void (*v33)(uint64_t, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  void (*v61)(char *);
  unsigned int v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E39F8);
  v89 = *(_QWORD *)(v1 - 8);
  v90 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E39F0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v85 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E39E8);
  v83 = *(_QWORD *)(v7 - 8);
  v84 = v7;
  MEMORY[0x1E0C80A78](v7);
  v82 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3A00);
  v80 = *(_QWORD *)(v9 - 8);
  v81 = v9;
  MEMORY[0x1E0C80A78](v9);
  v78 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E39E0);
  v77 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v76 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E39D8);
  v74 = *(_QWORD *)(v12 - 8);
  v75 = v12;
  MEMORY[0x1E0C80A78](v12);
  v73 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3A08);
  v71 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v69 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E39D0);
  v68 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v67 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E39C8);
  v65 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v64 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3A10);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E39C0);
  v91 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E39B8);
  v63 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v24 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v0 + 16) = 0;
  v87 = v3;
  v88 = v4;
  v86 = v5;
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1B8DFDFB8())
    v25 = sub_1B8DE5B28(MEMORY[0x1E0DEE9D8]);
  else
    v25 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v0 + 24) = v25;
  v26 = v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timersAddedStream;
  v27 = v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timersAddedContinuation;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3A18);
  v62 = *MEMORY[0x1E0DF07B8];
  v61 = *(void (**)(char *))(v18 + 104);
  v61(v20);
  sub_1B8DFDD0C();
  v60 = *(void (**)(char *, uint64_t))(v18 + 8);
  v60(v20, v17);
  v63 = *(_QWORD *)(v63 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v63)(v26, v24, v92);
  v91 = *(_QWORD *)(v91 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v91)(v27, v22, v93);
  v28 = v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timersRemovedStream;
  v59 = v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timersRemovedContinuation;
  v29 = v62;
  v30 = (void (*)(char *, uint64_t, uint64_t))v61;
  ((void (*)(char *, _QWORD, uint64_t))v61)(v20, v62, v17);
  sub_1B8DFDD0C();
  v31 = v60;
  v60(v20, v17);
  v32 = v28;
  v33 = (void (*)(uint64_t, char *, uint64_t))v63;
  ((void (*)(uint64_t, char *, uint64_t))v63)(v32, v24, v92);
  ((void (*)(uint64_t, char *, uint64_t))v91)(v59, v22, v93);
  v58 = v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timersUpdatedStream;
  v59 = v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timersUpdatedContinuation;
  v30(v20, v29, v17);
  sub_1B8DFDD0C();
  v31(v20, v17);
  v33(v58, v24, v92);
  ((void (*)(uint64_t, char *, uint64_t))v91)(v59, v22, v93);
  v34 = v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timerFiredStream;
  v35 = v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timerFiredContinuation;
  sub_1B8D9E394(0, (unint64_t *)&qword_1EF1E3A20);
  v36 = v71;
  v37 = v69;
  v38 = v29;
  v39 = v72;
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 104))(v69, v29, v72);
  v40 = v64;
  v41 = v67;
  sub_1B8DFDD0C();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v39);
  (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v34, v40, v66);
  (*(void (**)(uint64_t, char *, uint64_t))(v68 + 32))(v35, v41, v70);
  v42 = v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_recentsStream;
  v43 = v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_recentsContinuation;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3A28);
  v45 = v80;
  v44 = v81;
  v46 = v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 104))(v78, v38, v81);
  v47 = v73;
  v48 = v76;
  sub_1B8DFDD0C();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v44);
  (*(void (**)(uint64_t, char *, uint64_t))(v74 + 32))(v42, v47, v75);
  (*(void (**)(uint64_t, char *, uint64_t))(v77 + 32))(v43, v48, v79);
  v49 = v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_latestStream;
  v50 = v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_latestContinuation;
  sub_1B8D9E394(0, &qword_1EF1E3A30);
  v52 = v89;
  v51 = v90;
  v53 = v87;
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 104))(v87, v38, v90);
  v54 = v82;
  v55 = v85;
  sub_1B8DFDD0C();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v51);
  (*(void (**)(uint64_t, char *, uint64_t))(v83 + 32))(v49, v54, v84);
  (*(void (**)(uint64_t, char *, uint64_t))(v86 + 32))(v50, v55, v88);
  return v0;
}

uint64_t sub_1B8DE3C74(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = a1;
  v3 = a1;

  v4 = MEMORY[0x1E0D4FA38];
  sub_1B8DE414C(MEMORY[0x1E0D4FA48], MEMORY[0x1E0D4FA38], (uint64_t)sub_1B8DE6A48, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B8DF6E98);
  sub_1B8DE414C(MEMORY[0x1E0D4FA30], v4, (uint64_t)sub_1B8DE6A10, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B8DF6E98);
  sub_1B8DE414C(MEMORY[0x1E0D4FA40], v4, (uint64_t)sub_1B8DE69D8, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B8DF6E98);
  v5 = MEMORY[0x1E0D4FA08];
  sub_1B8DE414C(MEMORY[0x1E0D4FA20], MEMORY[0x1E0D4FA08], (uint64_t)sub_1B8DE69A0, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B8DF6ED0);
  sub_1B8DE414C(MEMORY[0x1E0D4FA10], v5, (uint64_t)sub_1B8DE6998, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B8DF6ED0);
  return sub_1B8DE414C(MEMORY[0x1E0D4FA28], v4, (uint64_t)sub_1B8DE6990, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B8DF709C);
}

Swift::Void __swiftcall TimerViewModel.registerPublishers()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = MEMORY[0x1E0D4FA38];
  sub_1B8DE414C(MEMORY[0x1E0D4FA48], MEMORY[0x1E0D4FA38], (uint64_t)sub_1B8DE6A48, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B8DF6E98);
  sub_1B8DE414C(MEMORY[0x1E0D4FA30], v0, (uint64_t)sub_1B8DE6A10, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B8DF6E98);
  sub_1B8DE414C(MEMORY[0x1E0D4FA40], v0, (uint64_t)sub_1B8DE69D8, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B8DF6E98);
  v1 = MEMORY[0x1E0D4FA08];
  sub_1B8DE414C(MEMORY[0x1E0D4FA20], MEMORY[0x1E0D4FA08], (uint64_t)sub_1B8DE69A0, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B8DF6ED0);
  sub_1B8DE414C(MEMORY[0x1E0D4FA10], v1, (uint64_t)sub_1B8DE6998, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B8DF6ED0);
  sub_1B8DE414C(MEMORY[0x1E0D4FA28], v0, (uint64_t)sub_1B8DE6990, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B8DF709C);
}

uint64_t TimerViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timersAddedStream;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E39B8);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v4 = v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timersAddedContinuation;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E39C0);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v3(v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timersRemovedStream, v2);
  v6(v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timersRemovedContinuation, v5);
  v3(v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timersUpdatedStream, v2);
  v6(v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timersUpdatedContinuation, v5);
  v7 = v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timerFiredStream;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E39C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timerFiredContinuation;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E39D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_recentsStream;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E39D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_recentsContinuation;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E39E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_latestStream;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E39E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = v0 + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_latestContinuation;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E39F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  return v0;
}

uint64_t TimerViewModel.__deallocating_deinit()
{
  TimerViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B8DE4074()
{
  return sub_1B8DE414C(MEMORY[0x1E0D4FA48], MEMORY[0x1E0D4FA38], (uint64_t)sub_1B8DE6A48, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B8DF6E98);
}

uint64_t sub_1B8DE4098()
{
  return sub_1B8DE414C(MEMORY[0x1E0D4FA30], MEMORY[0x1E0D4FA38], (uint64_t)sub_1B8DE6A10, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B8DF6E98);
}

uint64_t sub_1B8DE40BC()
{
  return sub_1B8DE414C(MEMORY[0x1E0D4FA40], MEMORY[0x1E0D4FA38], (uint64_t)sub_1B8DE69D8, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B8DF6E98);
}

uint64_t sub_1B8DE40E0()
{
  return sub_1B8DE414C(MEMORY[0x1E0D4FA20], MEMORY[0x1E0D4FA08], (uint64_t)sub_1B8DE69A0, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B8DF6ED0);
}

uint64_t sub_1B8DE4104()
{
  return sub_1B8DE414C(MEMORY[0x1E0D4FA10], MEMORY[0x1E0D4FA08], (uint64_t)sub_1B8DE6998, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B8DF6ED0);
}

uint64_t sub_1B8DE4128()
{
  return sub_1B8DE414C(MEMORY[0x1E0D4FA28], MEMORY[0x1E0D4FA38], (uint64_t)sub_1B8DE6990, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B8DF709C);
}

uint64_t sub_1B8DE414C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v6 = sub_1B8DFDB68();
  v8 = v7;
  v9 = sub_1B8DFDB68();
  v11 = v10;
  v12 = swift_allocObject();
  swift_weakInit();
  a4(v14, v6, v8, v9, v11, a3, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v14, v14[3]);
  swift_beginAccess();
  sub_1B8DFD9B8();
  swift_endAccess();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
}

uint64_t sub_1B8DE425C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t *a4, _QWORD *a5, uint64_t *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v10 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, Strong + *a5, v10);
    swift_release();
    v22 = v17;
    sub_1B8DFD3AC();
    sub_1B8DFDD24();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v19 = __swift_instantiateConcreteTypeFromMangledName(a6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v16, 0, 1, v19);
  }
  else
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(a6);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v16, 1, 1, v20);
  }
  return sub_1B8D9D154((uint64_t)v16, a4);
}

uint64_t sub_1B8DE43E4(void **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t Strong;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v15;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E39D0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3C90);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, Strong + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timerFiredContinuation, v2);
    swift_release();
    v15 = v9;
    v11 = v9;
    sub_1B8DFDD24();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3C98);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3C98);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 1, 1, v13);
  }
  return sub_1B8D9D154((uint64_t)v8, &qword_1EF1E3C90);
}

uint64_t sub_1B8DE4564(unint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  id v12;
  void *v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  void *v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E39F0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3CA0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  if (!(v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_1B8DFD3AC();
    if (v10)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  sub_1B8DFD3AC();
  result = sub_1B8DFDFB8();
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if ((v9 & 0xC000000000000001) != 0)
  {
    v12 = (id)MEMORY[0x1BCCBC814](0, v9);
  }
  else
  {
    if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    v12 = *(id *)(v9 + 32);
  }
  v13 = v12;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, Strong + OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_latestContinuation, v2);
    swift_release();
    v17 = v13;
    sub_1B8DFDD24();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3CA8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v8, 0, 1, v15);
  }
  else
  {

    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3CA8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
  }
  return sub_1B8D9D154((uint64_t)v8, &qword_1EF1E3CA0);
}

uint64_t TimerViewModel.addTimer(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1B8DE47A0()
{
  _QWORD *v0;
  void *v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(void **)(v0[3] + 16);
  if (v1)
    v2 = objc_msgSend(v1, sel_addTimer_, v0[2]);
  else
    v2 = 0;
  v0[4] = v2;
  v3 = swift_task_alloc();
  v0[5] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  *v4 = v0;
  v4[1] = sub_1B8DE4868;
  return sub_1B8DFE0F0();
}

uint64_t sub_1B8DE4868()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8DE48D4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DE4908()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);
  swift_task_dealloc();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t TimerViewModel.updateTimer(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1B8DE4958()
{
  _QWORD *v0;
  void *v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(void **)(v0[3] + 16);
  if (v1)
    v2 = objc_msgSend(v1, sel_updateTimer_, v0[2]);
  else
    v2 = 0;
  v0[4] = v2;
  v3 = swift_task_alloc();
  v0[5] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  *v4 = v0;
  v4[1] = sub_1B8DE4A20;
  return sub_1B8DFE0F0();
}

uint64_t sub_1B8DE4A20()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t TimerViewModel.getTimers()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1B8DE4AA4()
{
  _QWORD *v0;
  id v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = objc_msgSend(*(id *)(v0[2] + 16), sel_timers);
  v0[3] = v1;
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_1EF1E3A50 + dword_1EF1E3A50);
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_1B8DE4B24;
  return v4((uint64_t)v1);
}

uint64_t sub_1B8DE4B24(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 40) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();

  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t TimerViewModel.repeatTimer(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1B8DE4BC4()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(void **)(v0[3] + 16);
  if (v1)
  {
    v2 = (void *)v0[2];
    v3 = v1;
    v4 = objc_msgSend(v2, sel_timerIDString);
    if (!v4)
    {
      sub_1B8DFDB68();
      v4 = (id)sub_1B8DFDB5C();
      swift_bridgeObjectRelease();
    }
    v5 = objc_msgSend(v3, sel_repeatTimerWithIdentifier_, v4);

  }
  else
  {
    v5 = 0;
  }
  v0[4] = v5;
  v6 = swift_task_alloc();
  v0[5] = v6;
  *(_QWORD *)(v6 + 16) = v5;
  v7 = (_QWORD *)swift_task_alloc();
  v0[6] = v7;
  *v7 = v0;
  v7[1] = sub_1B8DE4A20;
  return sub_1B8DFE0F0();
}

uint64_t TimerViewModel.dismissTimer(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1B8DE4CFC()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(void **)(v0[3] + 16);
  if (v1)
  {
    v2 = (void *)v0[2];
    v3 = v1;
    v4 = objc_msgSend(v2, sel_timerIDString);
    if (!v4)
    {
      sub_1B8DFDB68();
      v4 = (id)sub_1B8DFDB5C();
      swift_bridgeObjectRelease();
    }
    v5 = objc_msgSend(v3, sel_dismissTimerWithIdentifier_, v4);

  }
  else
  {
    v5 = 0;
  }
  v0[4] = v5;
  v6 = swift_task_alloc();
  v0[5] = v6;
  *(_QWORD *)(v6 + 16) = v5;
  v7 = (_QWORD *)swift_task_alloc();
  v0[6] = v7;
  *v7 = v0;
  v7[1] = sub_1B8DE4A20;
  return sub_1B8DFE0F0();
}

uint64_t TimerViewModel.removeTimer(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1B8DE4E34()
{
  _QWORD *v0;
  void *v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(void **)(v0[3] + 16);
  if (v1)
    v2 = objc_msgSend(v1, sel_removeTimer_, v0[2]);
  else
    v2 = 0;
  v0[4] = v2;
  v3 = swift_task_alloc();
  v0[5] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  *v4 = v0;
  v4[1] = sub_1B8DE4A20;
  return sub_1B8DFE0F0();
}

uint64_t TimerViewModel.loadAllDurations()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = v0;
  return swift_task_switch();
}

uint64_t sub_1B8DE4F14()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3A78);
  *v1 = v0;
  v1[1] = sub_1B8DE4FA4;
  return sub_1B8DFE0F0();
}

uint64_t sub_1B8DE4FA4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8DE5008()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1B8DE501C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1B8DE5028(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3C88);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v4);
  v8 = *(void **)(a2 + 16);
  if (v8)
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
    v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v10 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    aBlock[4] = sub_1B8DE68FC;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1B8DE5210;
    aBlock[3] = &block_descriptor_43;
    v11 = _Block_copy(aBlock);
    v12 = v8;
    swift_release();
    objc_msgSend(v12, sel_loadAllDurationsWithCompletion_, v11);
    _Block_release(v11);

  }
}

uint64_t sub_1B8DE5170(int a1, int a2, int a3, void *a4, id a5)
{
  id v5;
  id v7;

  if (a5)
  {
    v5 = a5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3C88);
    return sub_1B8DFDCC4();
  }
  else
  {
    v7 = a4;
    sub_1B8DFD3AC();
    sub_1B8DFD3AC();
    sub_1B8DFD3AC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3C88);
    return sub_1B8DFDCD0();
  }
}

uint64_t sub_1B8DE5210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, void *, void *);
  id v12;
  id v13;

  v10 = a2;
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    sub_1B8D9E394(0, &qword_1EF1E3A30);
    v10 = sub_1B8DFDC64();
  }
  if (a3)
  {
    sub_1B8D9E394(0, &qword_1EF1E3A30);
    a3 = sub_1B8DFDC64();
  }
  if (a4)
  {
    sub_1B8D9E394(0, &qword_1EF1E3A30);
    a4 = sub_1B8DFDC64();
  }
  sub_1B8DFD22C();
  v12 = a5;
  v13 = a6;
  v11(v10, a3, a4, a5, a6);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t TimerViewModel.removeRecentDuration(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1B8DE5350()
{
  _QWORD *v0;
  void *v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(void **)(v0[3] + 16);
  if (v1)
    v2 = objc_msgSend(v1, sel_removeRecentDuration_, v0[2]);
  else
    v2 = 0;
  v0[4] = v2;
  v3 = swift_task_alloc();
  v0[5] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  *v4 = v0;
  v4[1] = sub_1B8DE4A20;
  return sub_1B8DFE0F0();
}

uint64_t TimerViewModel.recentDurations()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1B8DE5430()
{
  _QWORD *v0;
  id v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = objc_msgSend(*(id *)(v0[2] + 16), sel_recentDurations);
  v0[3] = v1;
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_1EF1E3A90 + dword_1EF1E3A90);
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_1B8DE54B0;
  return v4((uint64_t)v1);
}

uint64_t sub_1B8DE54B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 40) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();

  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1B8DE5538()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t TimerViewModel.favoriteDurations()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1B8DE5584()
{
  _QWORD *v0;
  id v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = objc_msgSend(*(id *)(v0[2] + 16), sel_favoriteDurations);
  v0[3] = v1;
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_1EF1E3A90 + dword_1EF1E3A90);
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_1B8DE4B24;
  return v4((uint64_t)v1);
}

uint64_t TimerViewModel.defaultDurations()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1B8DE561C()
{
  _QWORD *v0;
  id v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = objc_msgSend(*(id *)(v0[2] + 16), sel_defaultDurations);
  v0[3] = v1;
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_1EF1E3A90 + dword_1EF1E3A90);
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_1B8DE4B24;
  return v4((uint64_t)v1);
}

uint64_t TimerViewModel.latestDuration()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_1B8DE56B4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;
  _BYTE *v7;

  v1 = *(void **)(*(_QWORD *)(v0 + 24) + 16);
  if (v1
    && (v2 = objc_msgSend(v1, sel_latestDuration), (*(_QWORD *)(v0 + 32) = v2) != 0))
  {
    v3 = v2;
    v4 = swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v4;
    *(_QWORD *)(v4 + 16) = v3;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3AB8);
    *v5 = v0;
    v5[1] = sub_1B8DE57D4;
    return sub_1B8DFE0F0();
  }
  else
  {
    sub_1B8DE62FC();
    swift_allocError();
    *v7 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1B8DE57D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8DE5840()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 16);

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_1B8DE5880()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);
  swift_task_dealloc();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DE58C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_1B8DFD850();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3C58);
    v10 = sub_1B8DFDEEC();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_1B8DA760C(&qword_1EF1E3C60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D0]);
      v14 = sub_1B8DFDAB4();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_1B8DA760C(&qword_1EF1E3C68, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
          v20 = sub_1B8DFDACC();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

unint64_t sub_1B8DE5B28(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(uint64_t);
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    sub_1B8DFD3AC();
    v5 = sub_1B8DFDFB8();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3CD0);
      result = sub_1B8DFDEEC();
      v3 = result;
      v19 = v1;
      if (!v2)
        goto LABEL_4;
LABEL_8:
      sub_1B8DFD3AC();
      v4 = sub_1B8DFDFB8();
      result = swift_bridgeObjectRelease();
      if (!v4)
        return v3;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x1E0DEE9E8];
  v19 = v1;
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return v3;
LABEL_9:
  v6 = 0;
  v7 = v3 + 56;
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00];
  v18 = v4;
  while ((v19 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x1BCCBC814](v6, v19);
    v9 = __OFADD__(v6++, 1);
    if (v9)
      goto LABEL_26;
LABEL_18:
    v20 = result;
    sub_1B8DFD9C4();
    sub_1B8DA760C(&qword_1EF1E3CD8, v8, MEMORY[0x1E0C95E18]);
    result = sub_1B8DFDAB4();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = result & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    if (((1 << v11) & v13) != 0)
    {
      v15 = ~v10;
      sub_1B8DA760C(&qword_1EF1E3CE0, v8, MEMORY[0x1E0C95E20]);
      do
      {
        result = sub_1B8DFDACC();
        if ((result & 1) != 0)
        {
          result = swift_release();
          v4 = v18;
          goto LABEL_11;
        }
        v11 = (v11 + 1) & v15;
        v12 = v11 >> 6;
        v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
        v14 = 1 << v11;
      }
      while ((v13 & (1 << v11)) != 0);
      v4 = v18;
    }
    *(_QWORD *)(v7 + 8 * v12) = v14 | v13;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v20;
    v16 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v16, 1);
    v17 = v16 + 1;
    if (v9)
      goto LABEL_27;
    *(_QWORD *)(v3 + 16) = v17;
LABEL_11:
    v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00];
    if (v6 == v4)
      return v3;
  }
  if (v6 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_28;
  result = sub_1B8DFD22C();
  v9 = __OFADD__(v6++, 1);
  if (!v9)
    goto LABEL_18;
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void sub_1B8DE5DBC(uint64_t a1)
{
  uint64_t v1;

  sub_1B8DDDD30(a1, *(void **)(v1 + 16));
}

uint64_t sub_1B8DE5DC4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_1B8DE5DDC()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;
  _BYTE *v6;

  v1 = *(void **)(v0 + 24);
  if (v1)
  {
    v2 = v1;
    v3 = swift_task_alloc();
    *(_QWORD *)(v0 + 32) = v3;
    *(_QWORD *)(v3 + 16) = v2;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3C78);
    *v4 = v0;
    v4[1] = sub_1B8DE5EDC;
    return sub_1B8DFE0F0();
  }
  else
  {
    sub_1B8DE62FC();
    swift_allocError();
    *v6 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1B8DE5EDC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8DE5F48()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  _BYTE *v4;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    sub_1B8D9E394(0, (unint64_t *)&qword_1EF1E3A20);
    v2 = v1;
    sub_1B8DFDC58();

    v3 = *(void **)(v0 + 24);
    sub_1B8DE62FC();
    swift_allocError();
    *v4 = 1;
    swift_willThrow();

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {

    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_1B8DE6040()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  swift_task_dealloc();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1B8DE6078(uint64_t a1)
{
  uint64_t v1;

  sub_1B8DE5028(a1, v1);
}

uint64_t sub_1B8DE6080(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_1B8DE6098()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;
  _BYTE *v6;

  v1 = *(void **)(v0 + 24);
  if (v1)
  {
    v2 = v1;
    v3 = swift_task_alloc();
    *(_QWORD *)(v0 + 32) = v3;
    *(_QWORD *)(v3 + 16) = v2;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3C78);
    *v4 = v0;
    v4[1] = sub_1B8DE6198;
    return sub_1B8DFE0F0();
  }
  else
  {
    sub_1B8DE62FC();
    swift_allocError();
    *v6 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1B8DE6198()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8DE6204()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  _BYTE *v4;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    sub_1B8D9E394(0, &qword_1EF1E3A30);
    v2 = v1;
    sub_1B8DFDC58();

    v3 = *(void **)(v0 + 24);
    sub_1B8DE62FC();
    swift_allocError();
    *v4 = 1;
    swift_willThrow();

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {

    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

unint64_t sub_1B8DE62FC()
{
  unint64_t result;

  result = qword_1EF1E3AB0;
  if (!qword_1EF1E3AB0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E048AC, &type metadata for TimerViewModel.TimerManagerError);
    atomic_store(result, (unint64_t *)&qword_1EF1E3AB0);
  }
  return result;
}

void sub_1B8DE6340(uint64_t a1)
{
  uint64_t v1;

  sub_1B8DE3134(a1, *(void **)(v1 + 16), &qword_1EF1E3C70, (uint64_t)&unk_1E6F2E4B0, (uint64_t)sub_1B8DE67E0, (uint64_t)&block_descriptor_14);
}

uint64_t sub_1B8DE6378()
{
  return type metadata accessor for TimerViewModel();
}

uint64_t type metadata accessor for TimerViewModel()
{
  uint64_t result;

  result = qword_1EF1E3AE8;
  if (!qword_1EF1E3AE8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1B8DE63BC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1B8DE6668(319, &qword_1EF1E3AF8, &qword_1EF1E3A18, MEMORY[0x1E0DF0838]);
  if (v0 <= 0x3F)
  {
    sub_1B8DE6668(319, &qword_1EF1E3B00, &qword_1EF1E3A18, MEMORY[0x1E0DF07E8]);
    if (v1 <= 0x3F)
    {
      sub_1B8DE6608(319, &qword_1EF1E3B08, (unint64_t *)&qword_1EF1E3A20, 0x1E0D4FAA0, MEMORY[0x1E0DF0838]);
      if (v2 <= 0x3F)
      {
        sub_1B8DE6608(319, &qword_1EF1E3B10, (unint64_t *)&qword_1EF1E3A20, 0x1E0D4FAA0, MEMORY[0x1E0DF07E8]);
        if (v3 <= 0x3F)
        {
          sub_1B8DE6668(319, &qword_1EF1E3B18, &qword_1EF1E3A28, MEMORY[0x1E0DF0838]);
          if (v4 <= 0x3F)
          {
            sub_1B8DE6668(319, &qword_1EF1E3B20, &qword_1EF1E3A28, MEMORY[0x1E0DF07E8]);
            if (v5 <= 0x3F)
            {
              sub_1B8DE6608(319, &qword_1EF1E3B28, &qword_1EF1E3A30, 0x1E0D4FAA8, MEMORY[0x1E0DF0838]);
              if (v6 <= 0x3F)
              {
                sub_1B8DE6608(319, qword_1EF1E3B30, &qword_1EF1E3A30, 0x1E0D4FAA8, MEMORY[0x1E0DF07E8]);
                if (v7 <= 0x3F)
                  swift_updateClassMetadata2();
              }
            }
          }
        }
      }
    }
  }
}

uint64_t method lookup function for TimerViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TimerViewModel.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of TimerViewModel.setupManager(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

void sub_1B8DE6608(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1B8D9E394(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1B8DE6668(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t storeEnumTagSinglePayload for TimerViewModel.TimerManagerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B8DE670C + 4 * byte_1B8E047B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B8DE6740 + 4 * byte_1B8E047B0[v4]))();
}

uint64_t sub_1B8DE6740(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DE6748(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8DE6750);
  return result;
}

uint64_t sub_1B8DE675C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8DE6764);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B8DE6768(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DE6770(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TimerViewModel.TimerManagerError()
{
  return &type metadata for TimerViewModel.TimerManagerError;
}

unint64_t sub_1B8DE6790()
{
  unint64_t result;

  result = qword_1EF1E3C50;
  if (!qword_1EF1E3C50)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E04884, &type metadata for TimerViewModel.TimerManagerError);
    atomic_store(result, (unint64_t *)&qword_1EF1E3C50);
  }
  return result;
}

uint64_t sub_1B8DE67D4()
{
  return objectdestroyTm_2(&qword_1EF1E3C70);
}

uint64_t sub_1B8DE67E0(void *a1, void *a2)
{
  return sub_1B8DE683C(a1, a2, &qword_1EF1E3C70);
}

void sub_1B8DE67EC(uint64_t a1)
{
  uint64_t v1;

  sub_1B8DE3134(a1, *(void **)(v1 + 16), &qword_1EF1E3C80, (uint64_t)&unk_1E6F2E500, (uint64_t)sub_1B8DE6830, (uint64_t)&block_descriptor_37);
}

uint64_t sub_1B8DE6824()
{
  return objectdestroyTm_2(&qword_1EF1E3C80);
}

uint64_t sub_1B8DE6830(void *a1, void *a2)
{
  return sub_1B8DE683C(a1, a2, &qword_1EF1E3C80);
}

uint64_t sub_1B8DE683C(void *a1, void *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8) + 80);
  return sub_1B8DE3270(a1, a2, v3 + ((v7 + 16) & ~v7), a3);
}

uint64_t sub_1B8DE6894()
{
  return objectdestroyTm_2(&qword_1EF1E3C88);
}

uint64_t objectdestroyTm_2(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_1B8DE68FC(int a1, int a2, int a3, void *a4, void *a5)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3C88);
  return sub_1B8DE5170(a1, a2, a3, a4, a5);
}

uint64_t sub_1B8DE696C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B8DE6990(void **a1)
{
  return sub_1B8DE43E4(a1);
}

uint64_t sub_1B8DE6998(unint64_t *a1)
{
  return sub_1B8DE4564(a1);
}

uint64_t sub_1B8DE69A0(uint64_t *a1)
{
  uint64_t v1;

  return sub_1B8DE425C(a1, v1, &qword_1EF1E39E0, &qword_1EF1E3CB0, &OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_recentsContinuation, &qword_1EF1E3CB8);
}

uint64_t sub_1B8DE69D8(uint64_t *a1)
{
  uint64_t v1;

  return sub_1B8DE425C(a1, v1, &qword_1EF1E39C0, &qword_1EF1E3CC0, &OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timersRemovedContinuation, &qword_1EF1E3CC8);
}

uint64_t sub_1B8DE6A10(uint64_t *a1)
{
  uint64_t v1;

  return sub_1B8DE425C(a1, v1, &qword_1EF1E39C0, &qword_1EF1E3CC0, &OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timersAddedContinuation, &qword_1EF1E3CC8);
}

uint64_t sub_1B8DE6A48(uint64_t *a1)
{
  uint64_t v1;

  return sub_1B8DE425C(a1, v1, &qword_1EF1E39C0, &qword_1EF1E3CC0, &OBJC_IVAR____TtC18MobileTimerSupport14TimerViewModel_timersUpdatedContinuation, &qword_1EF1E3CC8);
}

unint64_t sub_1B8DE6AAC()
{
  unint64_t result;

  result = qword_1EF1E3CE8;
  if (!qword_1EF1E3CE8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E04980, &type metadata for PauseTimerIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E3CE8);
  }
  return result;
}

unint64_t sub_1B8DE6AF4()
{
  unint64_t result;

  result = qword_1EF1E3CF0;
  if (!qword_1EF1E3CF0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E049A8, &type metadata for PauseTimerIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E3CF0);
  }
  return result;
}

uint64_t sub_1B8DE6B38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8DE6B48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8DE6B58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1B8DFD640();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v5);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0CAF9B8], v1);
  return sub_1B8DFD664();
}

uint64_t sub_1B8DE6CAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD640();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v18 = sub_1B8DFD658();
  v11 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v12 = *MEMORY[0x1E0CAF9B8];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v13(v7, v12, v4);
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v13(v7, v12, v4);
  sub_1B8DFD664();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v3, 0, 1, v18);
  v14 = v19;
  sub_1B8DFD310();
  v15 = sub_1B8DFD304();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
}

uint64_t sub_1B8DE6F5C()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1E3D18);
  MEMORY[0x1E0C80A78](v0);
  sub_1B8DE23D4();
  sub_1B8DFD400();
  return sub_1B8DFD3C4();
}

uint64_t sub_1B8DE7020(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1B8DE7038()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;

  v1 = objc_msgSend(*(id *)(v0 + 24), sel_timersSync);
  if (!v1)
    goto LABEL_14;
  sub_1B8DE72A4();
  v2 = sub_1B8DFDC64();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1B8DFD3AC();
    if (v3)
      goto LABEL_4;
LABEL_11:
    swift_bridgeObjectRelease_n();
    v1 = 0;
    goto LABEL_14;
  }
LABEL_16:
  sub_1B8DFD3AC();
  v3 = sub_1B8DFDFB8();
  if (!v3)
    goto LABEL_11;
LABEL_4:
  v4 = 0;
  while (1)
  {
    if ((v2 & 0xC000000000000001) != 0)
      v5 = (id)MEMORY[0x1BCCBC814](v4, v2);
    else
      v5 = *(id *)(v2 + 8 * v4 + 32);
    v1 = v5;
    v6 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_16;
    }
    if (objc_msgSend(v5, sel_state) == (id)3)
      break;

    ++v4;
    if (v6 == v3)
      goto LABEL_11;
  }
  swift_bridgeObjectRelease_n();
  v7 = objc_msgSend(v1, sel_timerByUpdatingWithState_, 2);
  if (v7)
  {
    v8 = v7;

  }
LABEL_14:
  sub_1B8DFD0DC();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DE71DC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1B8D85A48;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_1B8DE7240()
{
  sub_1B8DE23D4();
  return sub_1B8DFD07C();
}

ValueMetadata *type metadata accessor for PauseTimerIntent()
{
  return &type metadata for PauseTimerIntent;
}

uint64_t sub_1B8DE7278()
{
  return sub_1B8D87FFC(&qword_1EF1E3D00, &qword_1EF1E3D08, MEMORY[0x1E0C916B0]);
}

unint64_t sub_1B8DE72A4()
{
  unint64_t result;

  result = qword_1EF1E3A20;
  if (!qword_1EF1E3A20)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF1E3A20);
  }
  return result;
}

void sub_1B8DE72E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = sub_1B8DFD628();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

void sub_1B8DE732C(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(void **)(v1 + 112);
  v4 = objc_msgSend(v3, sel_allObjects);
  v5 = sub_1B8DFDC64();

  if (v5 >> 62)
  {
    sub_1B8DFD3AC();
    v6 = sub_1B8DFDFB8();
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v6)
    goto LABEL_12;
LABEL_3:
  if (v6 >= 1)
  {
    v7 = 0;
    while (1)
    {
      if ((v5 & 0xC000000000000001) != 0)
      {
        if (MEMORY[0x1BCCBC814](v7, v5) == a1)
          goto LABEL_10;
      }
      else if (swift_unknownObjectRetain() == a1)
      {
LABEL_10:
        objc_msgSend(v3, sel_removeObject_, a1);
      }
      ++v7;
      swift_unknownObjectRelease();
      if (v6 == v7)
        goto LABEL_12;
    }
  }
  __break(1u);
}

uint64_t sub_1B8DE7450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 80) = a1;
  *(_QWORD *)(v4 + 88) = a4;
  return swift_task_switch();
}

uint64_t sub_1B8DE7468()
{
  uint64_t v0;

  sub_1B8DA0950(*(_QWORD *)(v0 + 88) + 120, v0 + 16);
  return swift_task_switch();
}

uint64_t sub_1B8DE74AC()
{
  _QWORD *v0;

  v0[12] = __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  return swift_task_switch();
}

uint64_t sub_1B8DE74F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_beginAccess();
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v1 + 112);
  sub_1B8DFD3AC();
  return swift_task_switch();
}

uint64_t sub_1B8DE754C()
{
  uint64_t v0;

  sub_1B8DA6EB0(*(_QWORD *)(v0 + 104));
  swift_bridgeObjectRelease();
  sub_1B8DEBC84();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  **(_BYTE **)(v0 + 80) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DE75C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8DEEF14(a1, (uint64_t)v8);
  v9 = sub_1B8DFDD00();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1B8D9D154((uint64_t)v8, &qword_1ED36F320);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v11 = sub_1B8DFDCB8();
      v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1B8DFDCF4();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v11 = 0;
  v13 = 0;
LABEL_6:
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1E2810);
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_1B8DE775C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8DEEF14(a1, (uint64_t)v8);
  v9 = sub_1B8DFDD00();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1B8D9D154((uint64_t)v8, &qword_1ED36F320);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v11 = sub_1B8DFDCB8();
      v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1B8DFDCF4();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v11 = 0;
  v13 = 0;
LABEL_6:
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_1B8DE78EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = v1;
  return swift_task_switch();
}

id sub_1B8DE7904()
{
  uint64_t v0;
  id result;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t v12;

  if (*(_BYTE *)(*(_QWORD *)(v0 + 64) + 160) != 1)
  {
    sub_1B8DEEED0();
    swift_allocError();
    swift_willThrow();
    v11 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v11();
  }
  result = objc_msgSend(*(id *)(v0 + 56), sel_identifier);
  if (result)
  {
    v2 = result;
    v3 = *(void **)(v0 + 56);
    v4 = *(_QWORD *)(v0 + 64);
    v5 = sub_1B8DFDB68();
    v7 = v6;

    swift_beginAccess();
    v8 = v3;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *(_QWORD *)(v4 + 112);
    *(_QWORD *)(v4 + 112) = 0x8000000000000000;
    sub_1B8DF5964((uint64_t)v8, v5, v7, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v4 + 112) = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_1B8DA0950(v4 + 120, v0 + 16);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v10 = sub_1B8DFD3AC();
    sub_1B8DA6EB0(v10);
    swift_bridgeObjectRelease();
    sub_1B8DEBC84();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    v11 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v11();
  }
  __break(1u);
  return result;
}

id sub_1B8DE7A84(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD v10[5];

  if (*(_BYTE *)(v1 + 160) == 1)
  {
    v2 = v1;
    result = objc_msgSend(a1, sel_identifier);
    if (result)
    {
      v4 = result;
      v5 = sub_1B8DFDB68();
      v7 = v6;

      swift_beginAccess();
      v8 = (void *)sub_1B8DEC110(v5, v7);
      swift_endAccess();
      swift_bridgeObjectRelease();

      sub_1B8DA0950(v2 + 120, (uint64_t)v10);
      __swift_project_boxed_opaque_existential_1(v10, v10[3]);
      v9 = sub_1B8DFD3AC();
      sub_1B8DA6EB0(v9);
      swift_bridgeObjectRelease();
      sub_1B8DEBC84();
      swift_release();
      return (id)__swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_1B8DEEED0();
    swift_allocError();
    return (id)swift_willThrow();
  }
  return result;
}

void *sub_1B8DE7BC0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  void *v7;
  uint64_t v8;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  v3 = (void *)sub_1B8DFDB5C();
  objc_msgSend(v2, sel_logInfo_, v3);

  if ((*(_BYTE *)(v1 + 160) & 1) != 0)
  {
    sub_1B8DFDEF8();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v4 = sub_1B8DFD3AC();
    v5 = sub_1B8DA6EB0(v4);
    swift_bridgeObjectRelease();
    v6 = sub_1B8DEEBB4();
    MEMORY[0x1BCCBC568](v5, v6);
    sub_1B8DFDBBC();
    swift_release();
    swift_bridgeObjectRelease();
    v7 = (void *)sub_1B8DFDB5C();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_logInfo_, v7);

    v8 = sub_1B8DFD3AC();
    v3 = sub_1B8DA6EB0(v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B8DEEED0();
    swift_allocError();
    swift_willThrow();
  }
  return v3;
}

uint64_t sub_1B8DE7D68()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

id MTStopwatchStorageProxy.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id MTStopwatchStorageProxy.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  objc_class *v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  uint64_t v28;
  objc_super v29;
  _QWORD v30[5];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_stopwatchActor;
  v5 = (void *)objc_opt_self();
  v6 = v0;
  v7 = objc_msgSend(v5, sel_standardUserDefaults);
  v8 = type metadata accessor for DefaultsStopwatchDataStore();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v7;
  v30[3] = v8;
  v30[4] = &off_1E6F2E948;
  v30[0] = v9;
  type metadata accessor for StopwatchStorageActor();
  v10 = swift_allocObject();
  v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v15 + 16))(v14, v12);
  v16 = *v14;
  sub_1B8DFD22C();
  v17 = sub_1B8DEDB0C(v16, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  swift_release();
  *(_QWORD *)&v0[v4] = v17;
  v18 = OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_observerStore;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F148);
  v19 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v19 + 112) = objc_msgSend((id)objc_opt_self(), sel_weakObjectsHashTable);
  *(_QWORD *)&v6[v18] = v19;
  v20 = OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_sessionsActor;
  type metadata accessor for StopwatchSessionsProvider();
  v21 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v21 + 112) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v21 + 120) = objc_msgSend(objc_allocWithZone((Class)MTSessionsManager), sel_init);
  *(_QWORD *)&v6[v20] = v21;

  v22 = (objc_class *)type metadata accessor for MTStopwatchStorageProxy();
  v29.receiver = v6;
  v29.super_class = v22;
  v23 = objc_msgSendSuper2(&v29, sel_init);
  v24 = sub_1B8DFDD00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v3, 1, 1, v24);
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = 0;
  v25[3] = 0;
  v25[4] = v23;
  v26 = v23;
  sub_1B8DE775C((uint64_t)v3, (uint64_t)&unk_1EF1E3D50, (uint64_t)v25);
  swift_release();
  sub_1B8D9D154((uint64_t)v3, &qword_1ED36F320);
  return v26;
}

uint64_t type metadata accessor for DefaultsStopwatchDataStore()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StopwatchStorageActor()
{
  return objc_opt_self();
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1B8DE80C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_1B8DE80D8()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[2];
  v0[3] = *(_QWORD *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_observerStore);
  v0[4] = *(_QWORD *)(v1 + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_sessionsActor);
  sub_1B8DFD22C();
  return swift_task_switch();
}

uint64_t sub_1B8DE8134()
{
  _QWORD *v0;
  _QWORD *v1;

  objc_msgSend(*(id *)(v0[3] + 112), sel_addObject_, v0[4]);
  swift_release();
  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = v1;
  *v1 = v0;
  v1[1] = sub_1B8DE819C;
  return sub_1B8DEB030();
}

uint64_t sub_1B8DE819C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1B8DE8204(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B8DFDD00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = a2;
  v9[6] = v2;
  sub_1B8DEE404(a1);
  v10 = v2;
  sub_1B8D8DEC0((uint64_t)v7, (uint64_t)&unk_1EF1E3D60, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_1B8DE82E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_1B8DE82FC()
{
  _QWORD *v0;
  uint64_t result;

  if (v0[2])
  {
    v0[5] = *(_QWORD *)(v0[4] + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_stopwatchActor);
    return swift_task_switch();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B8DE832C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = sub_1B8DE7BC0();
  *(_QWORD *)(v0 + 56) = 0;
  return swift_task_switch();
}

uint64_t sub_1B8DE8388()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 48), 0);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DE83CC()
{
  uint64_t v0;
  void *v1;
  void (*v2)(_QWORD, void *);
  id v3;

  v1 = *(void **)(v0 + 56);
  v2 = *(void (**)(_QWORD, void *))(v0 + 16);
  v3 = v1;
  v2(0, v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1B8DE8558(void *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  id v7;

  v5 = a1;
  if (a1)
  {
    sub_1B8DEEBB4();
    v5 = (void *)sub_1B8DFDC4C();
  }
  if (a2)
    v6 = sub_1B8DFD628();
  else
    v6 = 0;
  v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);

}

uint64_t sub_1B8DE85DC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B8DE8C84(a1, a2, a3, a4, (uint64_t)&unk_1E6F2E750, (uint64_t)&unk_1EF1E3DD0);
}

uint64_t sub_1B8DE85F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  return swift_task_switch();
}

uint64_t sub_1B8DE8610()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_stopwatchActor);
  v2 = (_QWORD *)swift_task_alloc();
  v0[7] = v2;
  *v2 = v0;
  v2[1] = sub_1B8DE8680;
  v2[7] = v0[3];
  v2[8] = v1;
  return swift_task_switch();
}

uint64_t sub_1B8DE8680()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8DE86E4()
{
  _QWORD *v0;
  void *v1;
  id v2;

  v1 = (void *)v0[3];
  v0[9] = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_observerStore);
  v2 = v1;
  swift_unknownObjectRetain();
  return swift_task_switch();
}

uint64_t sub_1B8DE873C()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[3];
  sub_1B8DAD13C(v0[9], (uint64_t)v1, v0[4]);
  swift_unknownObjectRelease();

  return swift_task_switch();
}

uint64_t sub_1B8DE8790()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 40))(0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DE87C4()
{
  uint64_t v0;
  void *v1;
  void (*v2)(void *);
  id v3;

  v1 = *(void **)(v0 + 64);
  v2 = *(void (**)(void *))(v0 + 40);
  v3 = v1;
  v2(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DE896C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B8DE8C84(a1, a2, a3, a4, (uint64_t)&unk_1E6F2E778, (uint64_t)&unk_1EF1E3DE0);
}

uint64_t sub_1B8DE8980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  return swift_task_switch();
}

uint64_t sub_1B8DE89A0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_stopwatchActor);
  v2 = (_QWORD *)swift_task_alloc();
  v0[7] = v2;
  *v2 = v0;
  v2[1] = sub_1B8DE8A10;
  v2[7] = v0[3];
  v2[8] = v1;
  return swift_task_switch();
}

uint64_t sub_1B8DE8A10()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8DE8A74()
{
  _QWORD *v0;
  void *v1;
  id v2;

  v1 = (void *)v0[3];
  v0[9] = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_observerStore);
  v2 = v1;
  swift_unknownObjectRetain();
  return swift_task_switch();
}

uint64_t sub_1B8DE8ACC()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[3];
  sub_1B8DAD148(v0[9], (uint64_t)v1, v0[4]);
  swift_unknownObjectRelease();

  return swift_task_switch();
}

uint64_t sub_1B8DE8C70(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B8DE8C84(a1, a2, a3, a4, (uint64_t)&unk_1E6F2E7A0, (uint64_t)&unk_1EF1E3DF0);
}

uint64_t sub_1B8DE8C84(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  id v18;
  uint64_t v20;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1B8DFDD00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = 0;
  v16[3] = 0;
  v16[4] = v6;
  v16[5] = a1;
  v16[6] = a4;
  v16[7] = a2;
  v16[8] = a3;
  v17 = v6;
  v18 = a1;
  swift_unknownObjectRetain();
  sub_1B8DFD22C();
  sub_1B8D8DEC0((uint64_t)v14, a6, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_1B8DE8D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  return swift_task_switch();
}

uint64_t sub_1B8DE8D9C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = *(_QWORD *)(*(_QWORD *)(v0 + 16)
                                   + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_stopwatchActor);
  return swift_task_switch();
}

uint64_t sub_1B8DE8DC0()
{
  uint64_t v0;

  sub_1B8DE7A84(*(void **)(v0 + 24));
  *(_QWORD *)(v0 + 64) = 0;
  return swift_task_switch();
}

uint64_t sub_1B8DE8E20()
{
  _QWORD *v0;
  void *v1;
  id v2;

  v1 = (void *)v0[3];
  v0[9] = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_observerStore);
  v2 = v1;
  swift_unknownObjectRetain();
  return swift_task_switch();
}

uint64_t sub_1B8DE8E78()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[3];
  sub_1B8DAD154(v0[9], (uint64_t)v1, v0[4]);
  swift_unknownObjectRelease();

  return swift_task_switch();
}

uint64_t sub_1B8DE901C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v20;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1B8DFDD00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = v5;
  v15[5] = a2;
  v15[6] = a1;
  v15[7] = a5;
  v15[8] = a3;
  v15[9] = a4;
  v16 = v5;
  v17 = a2;
  v18 = a1;
  swift_unknownObjectRetain();
  sub_1B8DFD22C();
  sub_1B8D8DEC0((uint64_t)v13, (uint64_t)&unk_1EF1E3E00, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_1B8DE911C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;

  v8[6] = a8;
  v8[7] = v10;
  v8[4] = a6;
  v8[5] = a7;
  v8[2] = a4;
  v8[3] = a5;
  return swift_task_switch();
}

uint64_t sub_1B8DE9144()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_stopwatchActor);
  v2 = (_QWORD *)swift_task_alloc();
  v0[8] = v2;
  *v2 = v0;
  v2[1] = sub_1B8DE91B4;
  v2[7] = v0[3];
  v2[8] = v1;
  return swift_task_switch();
}

uint64_t sub_1B8DE91B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8DE9218()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v1 = (void *)v0[4];
  v2 = (void *)v0[3];
  v0[10] = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_observerStore);
  v3 = v1;
  v4 = v2;
  swift_unknownObjectRetain();
  return swift_task_switch();
}

uint64_t sub_1B8DE927C()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[4];
  v2 = (void *)v0[3];
  sub_1B8DAD2F4(v0[10], (uint64_t)v1, (uint64_t)v2, v0[5]);
  swift_unknownObjectRelease();

  return swift_task_switch();
}

uint64_t sub_1B8DE92E4()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 48))(0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DE9318()
{
  uint64_t v0;
  void *v1;
  void (*v2)(void *);
  id v3;

  v1 = *(void **)(v0 + 72);
  v2 = *(void (**)(void *))(v0 + 48);
  v3 = v1;
  v2(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DE94E0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B8DEA678(a1, a2, a3, a4, (uint64_t)&unk_1E6F2E7F0, (uint64_t)&unk_1EF1E3E10);
}

uint64_t sub_1B8DE94F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  return swift_task_switch();
}

void sub_1B8DE9514()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  if (v1)
  {
    v2 = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_stopwatchActor);
    v3 = (_QWORD *)swift_task_alloc();
    v0[7] = v3;
    *v3 = v0;
    v3[1] = sub_1B8DE958C;
    v3[7] = v1;
    v3[8] = v2;
    swift_task_switch();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B8DE958C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8DE95F0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = (void *)v0[3];
  v2 = v0[4];
  v0[9] = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_observerStore);
  v3 = v1;
  sub_1B8DEE404(v2);
  swift_unknownObjectRetain();
  return swift_task_switch();
}

uint64_t sub_1B8DE9660()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;

  v2 = (void *)v0[3];
  v1 = v0[4];
  sub_1B8DAD490(v0[9], (uint64_t)v2, v1, v0[5], v0[6]);
  swift_unknownObjectRelease();
  sub_1B8DACDE8(v1);

  return swift_task_switch();
}

uint64_t sub_1B8DE9840(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B8DEA678(a1, a2, a3, a4, (uint64_t)&unk_1E6F2E818, (uint64_t)&unk_1EF1E3E20);
}

uint64_t sub_1B8DE9854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  return swift_task_switch();
}

void sub_1B8DE9874()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  if (v1)
  {
    v2 = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_stopwatchActor);
    v3 = (_QWORD *)swift_task_alloc();
    v0[7] = v3;
    *v3 = v0;
    v3[1] = sub_1B8DE98EC;
    v3[7] = v1;
    v3[8] = v2;
    swift_task_switch();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B8DE98EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8DE9950()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = (void *)v0[3];
  v2 = v0[4];
  v0[9] = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_observerStore);
  v3 = v1;
  sub_1B8DEE404(v2);
  swift_unknownObjectRetain();
  return swift_task_switch();
}

uint64_t sub_1B8DE99C0()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;

  v2 = (void *)v0[3];
  v1 = v0[4];
  sub_1B8DAD4A4(v0[9], (uint64_t)v2, v1, v0[5], v0[6]);
  swift_unknownObjectRelease();
  sub_1B8DACDE8(v1);

  return swift_task_switch();
}

uint64_t sub_1B8DE9BA0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B8DEA678(a1, a2, a3, a4, (uint64_t)&unk_1E6F2E840, (uint64_t)&unk_1EF1E3E30);
}

uint64_t sub_1B8DE9BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  return swift_task_switch();
}

void sub_1B8DE9BD4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  if (v1)
  {
    v2 = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_stopwatchActor);
    v3 = (_QWORD *)swift_task_alloc();
    v0[7] = v3;
    *v3 = v0;
    v3[1] = sub_1B8DE9C4C;
    v3[7] = v1;
    v3[8] = v2;
    swift_task_switch();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B8DE9C4C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8DE9CB0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = (void *)v0[3];
  v2 = v0[4];
  v0[9] = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_observerStore);
  v3 = v1;
  sub_1B8DEE404(v2);
  swift_unknownObjectRetain();
  return swift_task_switch();
}

uint64_t sub_1B8DE9D20()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;

  v2 = (void *)v0[3];
  v1 = v0[4];
  sub_1B8DAD4B8(v0[9], (uint64_t)v2, v1, v0[5], v0[6]);
  swift_unknownObjectRelease();
  sub_1B8DACDE8(v1);

  return swift_task_switch();
}

uint64_t sub_1B8DE9D94()
{
  uint64_t v0;
  void (*v1)(_QWORD);
  uint64_t result;

  v1 = *(void (**)(_QWORD))(v0 + 32);
  if (v1)
  {
    v1(0);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B8DE9DD4()
{
  uint64_t v0;
  void (*v1)(void *);
  void *v2;
  id v3;
  uint64_t result;

  v1 = *(void (**)(void *))(v0 + 32);
  if (v1)
  {
    v2 = *(void **)(v0 + 64);
    v3 = v2;
    v1(v2);

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B8DE9FA4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B8DEA678(a1, a2, a3, a4, (uint64_t)&unk_1E6F2E868, (uint64_t)&unk_1EF1E3E40);
}

uint64_t sub_1B8DE9FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  return swift_task_switch();
}

void sub_1B8DE9FD8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  if (v1)
  {
    v2 = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_stopwatchActor);
    v3 = (_QWORD *)swift_task_alloc();
    v0[7] = v3;
    *v3 = v0;
    v3[1] = sub_1B8DEA050;
    v3[7] = v1;
    v3[8] = v2;
    swift_task_switch();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B8DEA050()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8DEA0B4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = (void *)v0[3];
  v2 = v0[4];
  v0[9] = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_observerStore);
  v3 = v1;
  sub_1B8DEE404(v2);
  swift_unknownObjectRetain();
  return swift_task_switch();
}

uint64_t sub_1B8DEA124()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;

  v2 = (void *)v0[3];
  v1 = v0[4];
  sub_1B8DAD4CC(v0[9], (uint64_t)v2, v1, v0[5], v0[6]);
  swift_unknownObjectRelease();
  sub_1B8DACDE8(v1);

  return swift_task_switch();
}

uint64_t sub_1B8DEA304(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B8DEA678(a1, a2, a3, a4, (uint64_t)&unk_1E6F2E890, (uint64_t)&unk_1EF1E3E50);
}

uint64_t sub_1B8DEA318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  return swift_task_switch();
}

void sub_1B8DEA338()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  if (v1)
  {
    v2 = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_stopwatchActor);
    v3 = (_QWORD *)swift_task_alloc();
    v0[7] = v3;
    *v3 = v0;
    v3[1] = sub_1B8DEA3B0;
    v3[7] = v1;
    v3[8] = v2;
    swift_task_switch();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B8DEA3B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8DEA414()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = (void *)v0[3];
  v2 = v0[4];
  v0[9] = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_observerStore);
  v3 = v1;
  sub_1B8DEE404(v2);
  swift_unknownObjectRetain();
  return swift_task_switch();
}

uint64_t sub_1B8DEA484()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;

  v2 = (void *)v0[3];
  v1 = v0[4];
  sub_1B8DAD4E0(v0[9], (uint64_t)v2, v1, v0[5], v0[6]);
  swift_unknownObjectRelease();
  sub_1B8DACDE8(v1);

  return swift_task_switch();
}

uint64_t sub_1B8DEA664(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B8DEA678(a1, a2, a3, a4, (uint64_t)&unk_1E6F2E8B8, (uint64_t)&unk_1EF1E3E60);
}

uint64_t sub_1B8DEA678(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  id v18;
  uint64_t v20;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1B8DFDD00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = 0;
  v16[3] = 0;
  v16[4] = v6;
  v16[5] = a1;
  v16[6] = a2;
  v16[7] = a3;
  v16[8] = a4;
  v17 = a1;
  v18 = v6;
  sub_1B8DEE404(a2);
  swift_unknownObjectRetain();
  sub_1B8D8DEC0((uint64_t)v14, a6, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_1B8DEA774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  return swift_task_switch();
}

void sub_1B8DEA794()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  if (v1)
  {
    v2 = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_stopwatchActor);
    v3 = (_QWORD *)swift_task_alloc();
    v0[7] = v3;
    *v3 = v0;
    v3[1] = sub_1B8DEA80C;
    v3[7] = v1;
    v3[8] = v2;
    swift_task_switch();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B8DEA80C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8DEA870()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = (void *)v0[3];
  v2 = v0[4];
  v0[9] = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_observerStore);
  v3 = v1;
  sub_1B8DEE404(v2);
  swift_unknownObjectRetain();
  return swift_task_switch();
}

uint64_t sub_1B8DEA8E0()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;

  v2 = (void *)v0[3];
  v1 = v0[4];
  sub_1B8DAD4F4(v0[9], (uint64_t)v2, v1, v0[5], v0[6]);
  swift_unknownObjectRelease();
  sub_1B8DACDE8(v1);

  return swift_task_switch();
}

uint64_t sub_1B8DEAAC0(uint64_t a1)
{
  return sub_1B8DEAB74(a1, (uint64_t)&unk_1E6F2E8E0, (uint64_t)&unk_1EF1E3E70);
}

uint64_t sub_1B8DEAAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_1B8DEAAEC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 16)
                                   + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_observerStore);
  return swift_task_switch();
}

uint64_t sub_1B8DEAB10()
{
  uint64_t v0;

  objc_msgSend(*(id *)(*(_QWORD *)(v0 + 32) + 112), sel_addObject_, *(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DEAB60(uint64_t a1)
{
  return sub_1B8DEAB74(a1, (uint64_t)&unk_1E6F2E908, (uint64_t)&unk_1EF1E3E80);
}

uint64_t sub_1B8DEAB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B8DFDD00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v3;
  v10[5] = a1;
  v11 = v3;
  swift_unknownObjectRetain();
  sub_1B8D8DEC0((uint64_t)v8, a3, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_1B8DEAC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_1B8DEAC5C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 16)
                                   + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_observerStore);
  return swift_task_switch();
}

uint64_t sub_1B8DEAC80()
{
  uint64_t v0;

  sub_1B8DE732C(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DEACC4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1B8DFDD00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = a1;
  v12[5] = a3;
  swift_unknownObjectRetain_n();
  v13 = a1;
  sub_1B8D8DEC0((uint64_t)v10, a5, (uint64_t)v12);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_1B8DEADB0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFDD00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = v0;
  v6 = v0;
  sub_1B8DE775C((uint64_t)v3, (uint64_t)&unk_1EF1E3E90, (uint64_t)v5);
  swift_release();
  return sub_1B8D9D154((uint64_t)v3, &qword_1ED36F320);
}

uint64_t sub_1B8DEAE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_1B8DEAE94()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(*(_QWORD *)(v0 + 16)
                                   + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_stopwatchActor);
  return swift_task_switch();
}

uint64_t sub_1B8DEAEB8()
{
  uint64_t v0;
  _QWORD *v1;

  *(_BYTE *)(*(_QWORD *)(v0 + 24) + 160) = 1;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_1B8DEAF0C;
  return sub_1B8DEB030();
}

uint64_t sub_1B8DEAF0C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1B8DEB030()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  *(_QWORD *)(v1 + 56) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B8DEB08C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 48)
                                   + OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_sessionsActor);
  return swift_task_switch();
}

uint64_t sub_1B8DEB0B0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = sub_1B8DABDE8();
  return swift_task_switch();
}

uint64_t sub_1B8DEB0F0()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v1 = v0[9];
  v2 = (char *)v0[6];
  sub_1B8DFDEF8();
  v3 = objc_msgSend(v2, sel_description, 0, 0xE000000000000000);
  v4 = sub_1B8DFDB68();
  swift_bridgeObjectRelease();

  sub_1B8DFDBBC();
  MEMORY[0x1BCCBC568](v1, MEMORY[0x1E0DEA968]);
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  v5 = (void *)objc_opt_self();
  v0[10] = v5;
  sub_1B8DFDBBC();
  v6 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_logInfo_, v6, v4);

  v0[11] = *(_QWORD *)&v2[OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_stopwatchActor];
  return swift_task_switch();
}

uint64_t sub_1B8DEB238()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = sub_1B8DE7BC0();
  return swift_task_switch();
}

void sub_1B8DEB2B8()
{
  _QWORD *v0;
  unint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v41;
  _QWORD *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;

  v1 = v0[12];
  v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v54 = MEMORY[0x1E0DEE9D8];
  if (v1 >> 62)
  {
    sub_1B8DFD3AC();
    v3 = sub_1B8DFDFB8();
    swift_bridgeObjectRelease();
    if (v3)
    {
LABEL_3:
      if (v3 < 1)
      {
        __break(1u);
        goto LABEL_59;
      }
      v4 = 0;
      v5 = v0[12] + 32;
      do
      {
        if ((v1 & 0xC000000000000001) != 0)
          v6 = (id)MEMORY[0x1BCCBC814](v4, v0[12]);
        else
          v6 = *(id *)(v5 + 8 * v4);
        v7 = v6;
        if (objc_msgSend(v6, sel_state) == (id)1 || objc_msgSend(v7, sel_state) == (id)2)
        {
          sub_1B8DFDF34();
          sub_1B8DFDF4C();
          sub_1B8DFDF58();
          sub_1B8DFDF40();
        }
        else
        {

        }
        ++v4;
      }
      while (v3 != v4);
      swift_bridgeObjectRelease();
      v8 = v54;
      v53 = v0;
      if (v54 < 0)
        goto LABEL_31;
      goto LABEL_17;
    }
  }
  else
  {
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  v8 = MEMORY[0x1E0DEE9D8];
  v53 = v0;
  if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
    goto LABEL_31;
LABEL_17:
  if ((v8 & 0x4000000000000000) != 0)
  {
LABEL_31:
    sub_1B8DFD3AC();
    v9 = sub_1B8DFDFB8();
    swift_release();
    if (!v9)
      goto LABEL_32;
    goto LABEL_19;
  }
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
LABEL_19:
    sub_1B8D97F74(0, v9 & ~(v9 >> 63), 0);
    if ((v9 & 0x8000000000000000) == 0)
    {
      v10 = 0;
      v11 = v2;
      do
      {
        if ((v8 & 0xC000000000000001) != 0)
          v12 = (id)MEMORY[0x1BCCBC814](v10, v8);
        else
          v12 = *(id *)(v8 + 8 * v10 + 32);
        v13 = v12;
        v14 = objc_msgSend(v12, sel_identifier);
        if (v14)
        {
          v15 = v14;
          v16 = sub_1B8DFDB68();
          v18 = v17;

        }
        else
        {

          v16 = 0;
          v18 = 0;
        }
        v20 = v11[2];
        v19 = v11[3];
        if (v20 >= v19 >> 1)
          sub_1B8D97F74(v19 > 1, v20 + 1, 1);
        ++v10;
        v11[2] = v20 + 1;
        v21 = &v11[2 * v20];
        v21[4] = v16;
        v21[5] = v18;
        v0 = v53;
      }
      while (v9 != v10);
      swift_release();
      goto LABEL_33;
    }
LABEL_59:
    __break(1u);
    return;
  }
LABEL_32:
  swift_release();
  v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_33:
  v23 = v0[9];
  v22 = (void *)v0[10];
  v24 = (void *)v0[6];
  sub_1B8DFDEF8();
  v25 = objc_msgSend(v24, sel_description);
  sub_1B8DFDB68();
  swift_bridgeObjectRelease();

  sub_1B8DFDBBC();
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F7E0);
  MEMORY[0x1BCCBC568](v11, v26);
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  v27 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_logInfo_, v27);

  v52 = *(_QWORD *)(v23 + 16);
  if (v52)
  {
    v49 = v0 + 2;
    v28 = v11[2];
    v51 = v0[9] + 32;
    sub_1B8DFD3AC();
    v29 = 0;
    v50 = v28;
    while (1)
    {
      v30 = (uint64_t *)(v51 + 16 * v29);
      v31 = *v30;
      v32 = v30[1];
      if (v28)
      {
        v33 = v11 + 5;
        v34 = v28;
        do
        {
          if (*v33)
          {
            v35 = *(v33 - 1) == v31 && *v33 == v32;
            if (v35 || (sub_1B8DFE0D8() & 1) != 0)
              goto LABEL_37;
          }
          v33 += 2;
        }
        while (--v34);
      }
      v36 = v0[7];
      v37 = (void *)v53[6];
      v38 = sub_1B8DFDD00();
      v39 = *(_QWORD *)(v38 - 8);
      v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56);
      sub_1B8DFD3AC();
      v40(v36, 1, 1, v38);
      v41 = (_QWORD *)swift_allocObject();
      v41[2] = 0;
      v42 = v41 + 2;
      v41[3] = 0;
      v41[4] = v37;
      v41[5] = v31;
      v41[6] = v32;
      LODWORD(v36) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v36, 1, v38);
      sub_1B8DFD3AC();
      v43 = v37;
      v0 = v53;
      v44 = v53[7];
      if ((_DWORD)v36 == 1)
      {
        sub_1B8D9D154(v53[7], &qword_1ED36F320);
        if (!*v42)
          goto LABEL_52;
      }
      else
      {
        sub_1B8DFDCF4();
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v44, v38);
        if (!*v42)
        {
LABEL_52:
          v45 = 0;
          v47 = 0;
          goto LABEL_53;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      v45 = sub_1B8DFDCB8();
      v47 = v46;
      swift_unknownObjectRelease();
LABEL_53:
      v28 = v50;
      v48 = swift_allocObject();
      *(_QWORD *)(v48 + 16) = &unk_1EF1E3EC0;
      *(_QWORD *)(v48 + 24) = v41;
      if (v47 | v45)
      {
        *v49 = 0;
        v49[1] = 0;
        v53[4] = v45;
        v53[5] = v47;
      }
      swift_task_create();
      swift_bridgeObjectRelease();
      swift_release();
LABEL_37:
      if (++v29 == v52)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_57;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_57:
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  ((void (*)(void))v0[1])();
}

uint64_t sub_1B8DEB8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_1B8DEB8BC()
{
  uint64_t v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;

  v1 = *(char **)(v0 + 16);
  sub_1B8DFDEF8();
  v2 = objc_msgSend(v1, sel_description);
  sub_1B8DFDB68();

  swift_bridgeObjectRelease();
  sub_1B8DFDBBC();
  sub_1B8DFDBBC();
  v3 = (void *)objc_opt_self();
  sub_1B8DFDBBC();
  v4 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_logInfo_, v4);

  *(_QWORD *)(v0 + 40) = *(_QWORD *)&v1[OBJC_IVAR____TtC18MobileTimerSupport23MTStopwatchStorageProxy_sessionsActor];
  return swift_task_switch();
}

uint64_t sub_1B8DEB9EC()
{
  uint64_t v0;

  sub_1B8DABB04(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id MTStopwatchStorageProxy.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MTStopwatchStorageProxy();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B8DEBAB0(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000017;
  else
    return 0x63746177706F7453;
}

void sub_1B8DEBAF4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  _BYTE *v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  if (objc_msgSend(*(id *)(v0 + 16), sel_objectForKey_, CFSTR("MTStopwatches")))
  {
    sub_1B8DFDE5C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_1B8DEEBF0((uint64_t)v5, (uint64_t)v6);
  if (!v7)
  {
    sub_1B8D9D154((uint64_t)v6, (uint64_t *)&unk_1ED36F1C0);
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F178);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    sub_1B8DEEC38();
    swift_allocError();
    *v4 = 0;
    swift_willThrow();
    return;
  }
  v1 = (void *)objc_opt_self();
  v2 = (void *)sub_1B8DFDA60();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_decodeStopwatchesFromDictionary_, v2);

  if (v3)
  {
    sub_1B8DEEBB4();
    sub_1B8DFDC64();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B8DEBC84()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;

  v1 = (void *)objc_opt_self();
  sub_1B8DEEBB4();
  v2 = (void *)sub_1B8DFDC4C();
  v3 = objc_msgSend(v1, sel_encodedDictionaryForStopwatches_, v2);

  if (v3)
  {
    sub_1B8DFDA6C();

    v4 = *(void **)(v0 + 16);
    v3 = (id)sub_1B8DFDA60();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(void **)(v0 + 16);
  }
  objc_msgSend(v4, sel_setObject_forKey_, v3, CFSTR("MTStopwatches"));
  return swift_unknownObjectRelease();
}

uint64_t sub_1B8DEBD9C()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1B8DEBDC0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1B8DEBE24;
  return v6(a1);
}

uint64_t sub_1B8DEBE24()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1B8DEBE70(uint64_t a1, uint64_t a2)
{
  return sub_1B8DEBE88(a1, a2, &qword_1ED36F240);
}

uint64_t sub_1B8DEBE7C(uint64_t a1, uint64_t a2)
{
  return sub_1B8DEBE88(a1, a2, &qword_1ED36F238);
}

uint64_t sub_1B8DEBE88(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v5;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = v3;
  sub_1B8DFD3AC();
  v8 = sub_1B8D96EBC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *v5;
  v14 = *v5;
  *v5 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B8DECAF8(a3);
    v11 = v14;
  }
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v8);
  sub_1B8DEC738(v8, v11);
  *v5 = v11;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1B8DEBF64(uint64_t a1, uint64_t a2)
{
  return sub_1B8DEBE88(a1, a2, (uint64_t *)&unk_1ED36F190);
}

uint64_t sub_1B8DEBF70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B8DEBF98(a1, &qword_1EF1E2AC0, &qword_1EF1E3FD0, a2);
}

uint64_t sub_1B8DEBF84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B8DEBF98(a1, &qword_1EF1E2F30, &qword_1EF1E3FB8, a2);
}

uint64_t sub_1B8DEBF98@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t *v7;
  unint64_t v10;
  char v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v7 = v4;
  sub_1B8DFD3AC();
  v10 = sub_1B8D96F80(a1);
  LOBYTE(a1) = v11;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v7;
    v21 = *v7;
    *v7 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1B8DED3F0(a2, a3);
      v13 = v21;
    }
    v14 = *(_QWORD *)(v13 + 48);
    v15 = sub_1B8DFD784();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * v10, v15);
    v16 = *(_QWORD *)(v13 + 56);
    v17 = __swift_instantiateConcreteTypeFromMangledName(a2);
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 32))(a4, v16 + *(_QWORD *)(v18 + 72) * v10, v17);
    sub_1B8DEC488(v10, v13, a2);
    *v7 = v13;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a4, 0, 1, v17);
  }
  else
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(a2);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a4, 1, 1, v20);
  }
}

uint64_t sub_1B8DEC0E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B8DEBF98(a1, &qword_1EF1E2F80, &qword_1EF1E3F88, a2);
}

uint64_t sub_1B8DEC0FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B8DEBF98(a1, &qword_1EF1E3FA0, (uint64_t *)&unk_1EF1E3FA8, a2);
}

uint64_t sub_1B8DEC110(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  sub_1B8DFD3AC();
  v6 = sub_1B8D96EBC(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B8DED6CC();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_1B8DEC738(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1B8DEC1DC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  sub_1B8DFD3AC();
  v4 = sub_1B8D96F20(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B8DED87C();
    v7 = v10;
  }
  sub_1B8D9D018(*(_QWORD *)(v7 + 48) + 40 * v4);
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_1B8DEC90C(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_1B8DEC2A0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1B8DFDE8C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_1B8DFE15C();
        sub_1B8DFE180();
        result = sub_1B8DFE18C();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v9 < v8)
          goto LABEL_11;
LABEL_12:
        v10 = *(_QWORD *)(a2 + 48);
        v11 = (_BYTE *)(v10 + v3);
        v12 = (_BYTE *)(v10 + v6);
        if (v3 != v6 || v11 >= v12 + 1)
          *v11 = *v12;
        v13 = *(_QWORD *)(a2 + 56);
        v14 = *(_QWORD *)(*(_QWORD *)(sub_1B8DFD748() - 8) + 72);
        v15 = v14 * v3;
        result = v13 + v14 * v3;
        v16 = v14 * v6;
        v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v15 == v16)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v9 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v9)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1B8DEC488(int64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t *v34;
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;

  v34 = a3;
  v5 = sub_1B8DFD784();
  v37 = *(_QWORD *)(v5 - 8);
  result = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2 + 64;
  v10 = -1 << *(_BYTE *)(a2 + 32);
  v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(_QWORD *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    v12 = ~v10;
    result = sub_1B8DFDE8C();
    if ((*(_QWORD *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      v36 = (result + 1) & v12;
      v13 = *(_QWORD *)(v37 + 72);
      v35 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
      v14 = v12;
      do
      {
        v15 = v13;
        v16 = v13 * v11;
        v17 = v14;
        v35(v8, *(_QWORD *)(a2 + 48) + v13 * v11, v5);
        sub_1B8DEF15C();
        v18 = sub_1B8DFDAB4();
        result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v8, v5);
        v14 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            if (v15 * a1 < v16
              || *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(v34) - 8) + 72);
            v24 = v23 * a1;
            result = v22 + v23 * a1;
            v25 = v23 * v11;
            v26 = v22 + v23 * v11 + v23;
            if (v24 < v25 || result >= v26)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v11;
              v14 = v17;
            }
            else
            {
              a1 = v11;
              v14 = v17;
              if (v24 != v25)
              {
                result = swift_arrayInitWithTakeBackToFront();
                v14 = v17;
                a1 = v11;
              }
            }
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v11 = (v11 + 1) & v14;
        v13 = v15;
      }
      while (((*(_QWORD *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    v28 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v28;
    v30 = (-1 << a1) - 1;
  }
  else
  {
    v28 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v28;
    v29 = (-1 << a1) - 1;
  }
  *v28 = v30 & v29;
  v31 = *(_QWORD *)(a2 + 16);
  v32 = __OFSUB__(v31, 1);
  v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1B8DEC738(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1B8DFDE8C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1B8DFE15C();
        sub_1B8DFD3AC();
        sub_1B8DFDBA4();
        v9 = sub_1B8DFE18C();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1B8DEC90C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v13;
  unint64_t v14;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _BYTE v27[40];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1B8DFDE8C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1B8D9CFDC(*(_QWORD *)(a2 + 48) + 40 * v6, (uint64_t)v27);
        v9 = sub_1B8DFDEB0();
        result = sub_1B8D9D018((uint64_t)v27);
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 >= v8 && v3 >= (uint64_t)v10)
          {
LABEL_16:
            v13 = *(_QWORD *)(a2 + 48);
            v14 = v13 + 40 * v3;
            v15 = (__int128 *)(v13 + 40 * v6);
            if (v3 != v6 || v14 >= (unint64_t)v15 + 40)
            {
              v16 = *v15;
              v17 = v15[1];
              *(_QWORD *)(v14 + 32) = *((_QWORD *)v15 + 4);
              *(_OWORD *)v14 = v16;
              *(_OWORD *)(v14 + 16) = v17;
            }
            v18 = *(_QWORD *)(a2 + 56);
            v19 = (_QWORD *)(v18 + 8 * v3);
            v20 = (_QWORD *)(v18 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v19 >= v20 + 1))
            {
              *v19 = *v20;
              v3 = v6;
            }
          }
        }
        else if (v10 >= v8 || v3 >= (uint64_t)v10)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_1B8DECAD4()
{
  return sub_1B8DECAF8(&qword_1ED36F240);
}

void *sub_1B8DECAE0()
{
  return sub_1B8DECAF8(&qword_1ED36F238);
}

void *sub_1B8DECAEC()
{
  return sub_1B8DECAF8((uint64_t *)&unk_1ED36F190);
}

void *sub_1B8DECAF8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1B8DFDFD0();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    sub_1B8DFD3AC();
    result = (void *)sub_1B8DFD22C();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

char *sub_1B8DECCA4()
{
  return sub_1B8DED3F0(&qword_1EF1E2AC0, &qword_1EF1E3FD0);
}

id sub_1B8DECCB8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1E3FC0);
  v2 = *v0;
  v3 = sub_1B8DFDFD0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

char *sub_1B8DECE58()
{
  return sub_1B8DED3F0(&qword_1EF1E2F30, &qword_1EF1E3FB8);
}

char *sub_1B8DECE6C()
{
  return sub_1B8DED3F0(&qword_1EF1E2F80, &qword_1EF1E3F88);
}

void *sub_1B8DECE80()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3F90);
  v2 = *v0;
  v3 = sub_1B8DFDFD0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)sub_1B8DFD22C();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1B8DED020()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3F48);
  v2 = *v0;
  v3 = sub_1B8DFDFD0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B8DED1C0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = sub_1B8DFD748();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3F98);
  v23 = v0;
  v5 = *v0;
  v6 = sub_1B8DFDFD0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v23 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v24 = v5 + 64;
  v25 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_26;
      v20 = *(_QWORD *)(v24 + 8 * v11);
      if (!v20)
        break;
    }
LABEL_25:
    v14 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_12:
    v17 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16);
    v18 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v18, v1);
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v17;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v18, v4, v1);
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_26;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

char *sub_1B8DED3DC()
{
  return sub_1B8DED3F0(&qword_1EF1E3FA0, (uint64_t *)&unk_1EF1E3FA8);
}

char *sub_1B8DED3F0(uint64_t *a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *result;
  char *v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  int64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;

  v44 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v40 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v43 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_1B8DFD784();
  v39 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v41 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v36 = v2;
  v6 = *v2;
  v7 = sub_1B8DFDFD0();
  v8 = *(_QWORD *)(v6 + 16);
  v46 = v7;
  if (!v8)
  {
    result = (char *)swift_release();
    v35 = v46;
    v34 = v36;
LABEL_25:
    *v34 = v35;
    return result;
  }
  v9 = v7;
  result = (char *)(v7 + 64);
  v11 = (char *)(v6 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  v37 = v6 + 64;
  if (v9 != v6 || result >= &v11[8 * v12])
  {
    result = (char *)memmove(result, v11, 8 * v12);
    v9 = v46;
  }
  v13 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v45 = v6;
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 64);
  v38 = (unint64_t)(v14 + 63) >> 6;
  v17 = v39;
  v18 = v40;
  v20 = v41;
  v19 = v42;
  v21 = v44;
  v22 = v46;
  while (1)
  {
    if (v16)
    {
      v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v47 = v13;
      v24 = v23 | (v13 << 6);
      v25 = v45;
      goto LABEL_9;
    }
    v30 = v13 + 1;
    v25 = v45;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v30 >= v38)
      goto LABEL_23;
    v31 = *(_QWORD *)(v37 + 8 * v30);
    v32 = v13 + 1;
    if (!v31)
    {
      v32 = v30 + 1;
      if (v30 + 1 >= v38)
        goto LABEL_23;
      v31 = *(_QWORD *)(v37 + 8 * v32);
      if (!v31)
        break;
    }
LABEL_22:
    v16 = (v31 - 1) & v31;
    v47 = v32;
    v24 = __clz(__rbit64(v31)) + (v32 << 6);
LABEL_9:
    v26 = *(_QWORD *)(v17 + 72) * v24;
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v20, *(_QWORD *)(v25 + 48) + v26, v19);
    v27 = *(_QWORD *)(v18 + 72) * v24;
    v28 = *(_QWORD *)(v25 + 56) + v27;
    v29 = v43;
    (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v43, v28, v21);
    (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(_QWORD *)(v22 + 48) + v26, v20, v19);
    result = (char *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v18 + 32))(*(_QWORD *)(v22 + 56) + v27, v29, v21);
    v13 = v47;
  }
  v33 = v30 + 2;
  if (v33 >= v38)
  {
LABEL_23:
    result = (char *)swift_release();
    v34 = v36;
    v35 = v46;
    goto LABEL_25;
  }
  v31 = *(_QWORD *)(v37 + 8 * v33);
  if (v31)
  {
    v32 = v33;
    goto LABEL_22;
  }
  while (1)
  {
    v32 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v32 >= v38)
      goto LABEL_23;
    v31 = *(_QWORD *)(v37 + 8 * v32);
    ++v33;
    if (v31)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_1B8DED6CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F1A0);
  v2 = *v0;
  v3 = sub_1B8DFDFD0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    sub_1B8DFD3AC();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B8DED87C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v23[2];
  uint64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36ED48);
  v2 = *v0;
  v3 = sub_1B8DFDFD0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    sub_1B8D9CFDC(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    v17 = *(_QWORD *)(v4 + 48) + 40 * v15;
    v18 = v23[0];
    v19 = v23[1];
    *(_QWORD *)(v17 + 32) = v24;
    *(_OWORD *)v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)sub_1B8DFD3AC();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1B8DEDA54(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_1B8DEDABC;
  return v5(v2 + 32);
}

uint64_t sub_1B8DEDABC()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1B8DEDB0C(uint64_t a1, uint64_t isUniquelyReferenced_nonNull_native)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  _QWORD *v34;
  void *v35;
  void *v36;
  float v37;
  float v38;
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  _QWORD *v43;
  void *v44;
  id v45;
  uint64_t v46;
  void *v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  char v54;
  void *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t result;
  uint64_t v59;
  _QWORD *v60;
  id v61;
  unint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  _QWORD v73[3];
  uint64_t v74;
  _UNKNOWN **v75;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v4);
  v6 = (unint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for DefaultsStopwatchDataStore();
  v75 = &off_1E6F2E948;
  v73[0] = a1;
  swift_defaultActor_initialize();
  *(_QWORD *)(isUniquelyReferenced_nonNull_native + 112) = MEMORY[0x1E0DEE9E0];
  *(_BYTE *)(isUniquelyReferenced_nonNull_native + 160) = 0;
  *(_DWORD *)(isUniquelyReferenced_nonNull_native + 164) = 1065353216;
  v7 = (void *)objc_opt_self();
  v8 = (void *)sub_1B8DFDB5C();
  objc_msgSend(v7, sel_logInfo_, v8);

  v64 = (_QWORD *)(isUniquelyReferenced_nonNull_native + 112);
  sub_1B8DA0950((uint64_t)v73, isUniquelyReferenced_nonNull_native + 120);
  __swift_project_boxed_opaque_existential_1(v73, v74);
  sub_1B8DEBAF4();
  v10 = v9;
  v60 = (_QWORD *)(isUniquelyReferenced_nonNull_native + 120);
  if (v9 >> 62)
  {
LABEL_33:
    swift_bridgeObjectRetain_n();
    v11 = sub_1B8DFDFB8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1B8DFD3AC();
  }
  v61 = v7;
  v62 = v6;
  v63 = isUniquelyReferenced_nonNull_native;
  if (v11)
  {
    v67 = v10 & 0xC000000000000001;
    v12 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v13 = 4;
    v65 = v11;
    v66 = v10;
    while (1)
    {
      if (v67)
        v15 = (id)MEMORY[0x1BCCBC814](v13 - 4, v10);
      else
        v15 = *(id *)(v10 + 8 * v13);
      v16 = v15;
      v17 = v13 - 3;
      if (__OFADD__(v13 - 4, 1))
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_1B8DFD3AC();
      v7 = v16;
      v18 = objc_msgSend(v16, sel_identifier);
      if (!v18)
      {
        __break(1u);
        goto LABEL_35;
      }
      v19 = v18;
      v10 = sub_1B8DFDB68();
      v21 = v20;

      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v71 = (unint64_t)v12;
      v6 = sub_1B8D96EBC(v10, v21);
      v23 = v12[2];
      v24 = (v22 & 1) == 0;
      v25 = v23 + v24;
      if (__OFADD__(v23, v24))
        goto LABEL_31;
      v26 = v22;
      if (v12[3] >= v25)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v29 = (_QWORD *)v71;
          if ((v22 & 1) != 0)
            goto LABEL_5;
        }
        else
        {
          sub_1B8DED6CC();
          v29 = (_QWORD *)v71;
          if ((v26 & 1) != 0)
            goto LABEL_5;
        }
      }
      else
      {
        sub_1B8DF4ABC(v25, isUniquelyReferenced_nonNull_native);
        v27 = sub_1B8D96EBC(v10, v21);
        if ((v26 & 1) != (v28 & 1))
          goto LABEL_36;
        v6 = v27;
        v29 = (_QWORD *)v71;
        if ((v26 & 1) != 0)
        {
LABEL_5:
          v14 = v29[7];

          *(_QWORD *)(v14 + 8 * v6) = v7;
          goto LABEL_6;
        }
      }
      v29[(v6 >> 6) + 8] |= 1 << v6;
      v30 = (uint64_t *)(v29[6] + 16 * v6);
      *v30 = v10;
      v30[1] = v21;
      *(_QWORD *)(v29[7] + 8 * v6) = v7;
      v31 = v29[2];
      v32 = __OFADD__(v31, 1);
      v33 = v31 + 1;
      if (v32)
        goto LABEL_32;
      v29[2] = v33;
      sub_1B8DFD3AC();
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v13;
      v12 = v29;
      v10 = v66;
      if (v17 == v65)
        goto LABEL_24;
    }
  }
  v29 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_24:
  swift_bridgeObjectRelease_n();
  v34 = v64;
  swift_beginAccess();
  *v34 = v29;
  swift_bridgeObjectRelease();
  v35 = *(void **)(*__swift_project_boxed_opaque_existential_1(v73, v74) + 16);
  v36 = (void *)sub_1B8DFDB5C();
  objc_msgSend(v35, sel_floatForKey_, v36);
  v38 = v37;

  v39 = v63;
  if (v38 < 1.0)
  {
    v40 = *(void **)(*__swift_project_boxed_opaque_existential_1(v60, *(_QWORD *)(v63 + 144)) + 16);
    v41 = (void *)sub_1B8DFDD84();
    v42 = (void *)sub_1B8DFDB5C();
    objc_msgSend(v40, sel_setValue_forKey_, v41, v42);

  }
  v71 = 0;
  v72 = 0xE000000000000000;
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  v71 = 0xD000000000000015;
  v72 = 0x80000001B8E09550;
  v43 = v64;
  sub_1B8DEEBB4();
  sub_1B8DFD3AC();
  sub_1B8DFDA78();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v44 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  v45 = v61;
  objc_msgSend(v61, sel_logInfo_, v44);

  v46 = v62;
  swift_beginAccess();
  if (*(_QWORD *)(*v43 + 16))
    goto LABEL_29;
  v47 = (void *)sub_1B8DEEF80();
  v48 = objc_msgSend(v47, sel_identifier);
  if (v48)
  {
    v49 = v48;
    v50 = sub_1B8DFDB68();
    v52 = v51;

    swift_beginAccess();
    v53 = v47;
    v54 = swift_isUniquelyReferenced_nonNull_native();
    v68 = *(_QWORD *)(v39 + 112);
    *(_QWORD *)(v39 + 112) = 0x8000000000000000;
    sub_1B8DF5964((uint64_t)v53, v50, v52, v54);
    *(_QWORD *)(v39 + 112) = v68;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    v69 = 0;
    v70 = 0xE000000000000000;
    sub_1B8DFDEF8();
    swift_bridgeObjectRelease();
    v69 = 0xD00000000000001DLL;
    v70 = 0x80000001B8E09510;
    sub_1B8DEEBB4();
    sub_1B8DFD3AC();
    sub_1B8DFDA78();
    sub_1B8DFDBBC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v55 = (void *)sub_1B8DFDB5C();
    swift_bridgeObjectRelease();
    objc_msgSend(v45, (SEL)&selRef_isKindOfClass_ + 7, v55);

    v56 = sub_1B8DFDD00();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v46, 1, 1, v56);
    v57 = (_QWORD *)swift_allocObject();
    v57[2] = 0;
    v57[3] = 0;
    v57[4] = v39;
    sub_1B8DFD22C();
    sub_1B8DE75C4(v46, (uint64_t)&unk_1EF1E3F68, (uint64_t)v57);

    swift_release();
    sub_1B8D9D154(v46, &qword_1ED36F320);
LABEL_29:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
    return v39;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  result = sub_1B8DFE108();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MTStopwatchStorageProxy()
{
  return objc_opt_self();
}

uint64_t sub_1B8DEE330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B8D9D2E0;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_1B8DEE394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1B8D9D2E0;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v5;
  return swift_task_switch();
}

uint64_t sub_1B8DEE404(uint64_t result)
{
  if (result)
    return sub_1B8DFD22C();
  return result;
}

uint64_t sub_1B8DEE418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v2 = *(_QWORD *)(v0 + 64);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  v5 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1B8D9D2E0;
  *(_QWORD *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  *(_OWORD *)(v3 + 32) = v5;
  return swift_task_switch();
}

uint64_t sub_1B8DEE484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v2 = *(_QWORD *)(v0 + 64);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  v5 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1B8D9D2E0;
  *(_QWORD *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  *(_OWORD *)(v3 + 32) = v5;
  return swift_task_switch();
}

uint64_t sub_1B8DEE4F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v2 = *(_QWORD *)(v0 + 64);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  v5 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1B8D9D2E0;
  *(_QWORD *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  *(_OWORD *)(v3 + 32) = v5;
  return swift_task_switch();
}

uint64_t sub_1B8DEE55C()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  v2 = swift_task_alloc();
  v3 = v0[2];
  v4 = v0[3];
  v5 = v0[4];
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_1B8D9D2E0;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = v5;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t sub_1B8DEE5C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;

  v5 = *(_OWORD *)(v0 + 48);
  v6 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1B8D9D2E0;
  *(_QWORD *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 16) = v6;
  *(_OWORD *)(v3 + 32) = v5;
  return swift_task_switch();
}

uint64_t sub_1B8DEE644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;

  v5 = *(_OWORD *)(v0 + 48);
  v6 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1B8D9D2E0;
  *(_QWORD *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 16) = v6;
  *(_OWORD *)(v3 + 32) = v5;
  return swift_task_switch();
}

uint64_t sub_1B8DEE6C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;

  v5 = *(_OWORD *)(v0 + 48);
  v6 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1B8D9D2E0;
  *(_QWORD *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 16) = v6;
  *(_OWORD *)(v3 + 32) = v5;
  return swift_task_switch();
}

uint64_t sub_1B8DEE73C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;

  v5 = *(_OWORD *)(v0 + 48);
  v6 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1B8D9D2E0;
  *(_QWORD *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 16) = v6;
  *(_OWORD *)(v3 + 32) = v5;
  return swift_task_switch();
}

uint64_t sub_1B8DEE7B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;

  v5 = *(_OWORD *)(v0 + 48);
  v6 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1B8D9D2E0;
  *(_QWORD *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 16) = v6;
  *(_OWORD *)(v3 + 32) = v5;
  return swift_task_switch();
}

uint64_t sub_1B8DEE834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;

  v5 = *(_OWORD *)(v0 + 48);
  v6 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1B8D9D2E0;
  *(_QWORD *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 16) = v6;
  *(_OWORD *)(v3 + 32) = v5;
  return swift_task_switch();
}

uint64_t sub_1B8DEE8B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_1B8D9D2E0;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t sub_1B8DEE914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_1B8D9D2E0;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t sub_1B8DEE978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B8D9D2E0;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t method lookup function for MTStopwatchStorageProxy()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MTStopwatchStorageProxy.getStopwatchesWitchCompletion(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MTStopwatchStorageProxy.createStopWatch(_:withCompletion:source:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MTStopwatchStorageProxy.update(_:withCompletion:source:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MTStopwatchStorageProxy.delete(_:withCompletion:source:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MTStopwatchStorageProxy.didAddLap(_:for:withCompletion:source:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MTStopwatchStorageProxy.didClearAllLaps(for:withCompletion:source:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MTStopwatchStorageProxy.didStartLapTimer(for:withCompletion:source:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MTStopwatchStorageProxy.didPauseLapTimer(for:withCompletion:source:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of MTStopwatchStorageProxy.didLapLapTimer(for:withCompletion:source:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of MTStopwatchStorageProxy.didResetLapTimer(for:withCompletion:source:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of MTStopwatchStorageProxy.didResumeLapTimer(for:withCompletion:source:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of MTStopwatchStorageProxy.registerObserver(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of MTStopwatchStorageProxy.unregisterObserver(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of MTStopwatchStorageProxy.setSystemReady()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t sub_1B8DEEB6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1B8DEEB74(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1B8DEEB8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1B8DEEBA4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1B8DEEBAC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

unint64_t sub_1B8DEEBB4()
{
  unint64_t result;

  result = qword_1ED36F7F0;
  if (!qword_1ED36F7F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED36F7F0);
  }
  return result;
}

uint64_t sub_1B8DEEBF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F1C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B8DEEC38()
{
  unint64_t result;

  result = qword_1EF1E3EB0;
  if (!qword_1EF1E3EB0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E04C80, &type metadata for DefaultsStopwatchDataStore.DefaultsError);
    atomic_store(result, &qword_1EF1E3EB0);
  }
  return result;
}

uint64_t sub_1B8DEEC7C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B8DEECB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1B8D9D2E0;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v5;
  return swift_task_switch();
}

uint64_t objectdestroy_47Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B8DEED6C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t objectdestroy_23Tm_0()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  if (*(_QWORD *)(v0 + 48))
    swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroy_19Tm_0()
{
  id *v0;

  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_7Tm_1()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_3Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  if (*(_QWORD *)(v0 + 32))
    swift_release();

  return swift_deallocObject();
}

void sub_1B8DEEEC8(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1B8DE8558(a1, a2, *(_QWORD *)(v2 + 16));
}

unint64_t sub_1B8DEEED0()
{
  unint64_t result;

  result = qword_1ED36F168;
  if (!qword_1ED36F168)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E04C40, &type metadata for StopwatchStorageActor.StorageActorError);
    atomic_store(result, (unint64_t *)&qword_1ED36F168);
  }
  return result;
}

uint64_t sub_1B8DEEF14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8DEEF5C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B8DEEF80()
{
  id v0;
  uint64_t v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FA68]), sel_init);
  objc_msgSend(v0, sel_setOffset_, 0.0);
  objc_msgSend(v0, sel_setCurrentInterval_, 0.0);
  objc_msgSend(v0, sel_setPreviousLapsTotalInterval_, 0.0);
  objc_msgSend(v0, sel_setState_, 0);
  objc_msgSend(v0, sel_copy);
  sub_1B8DFDE5C();

  swift_unknownObjectRelease();
  sub_1B8DEEBB4();
  swift_dynamicCast();
  return v2;
}

uint64_t sub_1B8DEF05C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B8DEF088(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1B8D85A48;
  v5[10] = a1;
  v5[11] = v4;
  return swift_task_switch();
}

uint64_t sub_1B8DEF0EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1B8D85A48;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF1E3F70 + dword_1EF1E3F70))(a1, v4);
}

unint64_t sub_1B8DEF15C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF1E3F80;
  if (!qword_1EF1E3F80)
  {
    v1 = sub_1B8DFD784();
    result = MEMORY[0x1BCCBD0FC](MEMORY[0x1E0CB09C8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF1E3F80);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StopwatchStorageActor.StorageActorError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B8DEF1E4 + 4 * asc_1B8E04A10[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B8DEF204 + 4 * byte_1B8E04A15[v4]))();
}

_BYTE *sub_1B8DEF1E4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B8DEF204(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B8DEF20C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B8DEF214(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B8DEF21C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B8DEF224(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StopwatchStorageActor.StorageActorError()
{
  return &type metadata for StopwatchStorageActor.StorageActorError;
}

uint64_t storeEnumTagSinglePayload for DefaultsStopwatchDataStore.DefaultsError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B8DEF28C + 4 * byte_1B8E04A1F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B8DEF2C0 + 4 * byte_1B8E04A1A[v4]))();
}

uint64_t sub_1B8DEF2C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DEF2C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8DEF2D0);
  return result;
}

uint64_t sub_1B8DEF2DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8DEF2E4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B8DEF2E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DEF2F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DefaultsStopwatchDataStore.DefaultsError()
{
  return &type metadata for DefaultsStopwatchDataStore.DefaultsError;
}

unint64_t sub_1B8DEF310()
{
  unint64_t result;

  result = qword_1EF1E3FD8;
  if (!qword_1EF1E3FD8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E04BB0, &type metadata for DefaultsStopwatchDataStore.DefaultsError);
    atomic_store(result, (unint64_t *)&qword_1EF1E3FD8);
  }
  return result;
}

unint64_t sub_1B8DEF358()
{
  unint64_t result;

  result = qword_1EF1E3FE0;
  if (!qword_1EF1E3FE0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E04C18, &type metadata for StopwatchStorageActor.StorageActorError);
    atomic_store(result, (unint64_t *)&qword_1EF1E3FE0);
  }
  return result;
}

uint64_t sub_1B8DEF3DC()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Scheduler()
{
  return objc_opt_self();
}

uint64_t *sub_1B8DEF448(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1B8DFD784();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1B8DFD748();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
  }
  sub_1B8DFD22C();
  return a1;
}

uint64_t sub_1B8DEF50C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1B8DFD784();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_release();
}

uint64_t sub_1B8DEF580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = sub_1B8DFD784();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  sub_1B8DFD22C();
  return a1;
}

uint64_t sub_1B8DEF61C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = sub_1B8DFD784();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  sub_1B8DFD22C();
  swift_release();
  return a1;
}

uint64_t sub_1B8DEF6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1B8DFD784();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1B8DEF754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1B8DFD784();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1B8DFD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_1B8DEF7F0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DEF7FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1B8DFD784();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1B8DFD748();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_1B8DEF8A4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8DEF8B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1B8DFD784();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1B8DFD748();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ScheduledTask()
{
  uint64_t result;

  result = qword_1EF1E41F0;
  if (!qword_1EF1E41F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B8DEF990()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1B8DFD784();
  if (v1 <= 0x3F)
  {
    result = sub_1B8DFD748();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Scheduler.Schedule(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B8DEFA6C + 4 * byte_1B8E04CE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B8DEFAA0 + 4 * byte_1B8E04CE0[v4]))();
}

uint64_t sub_1B8DEFAA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DEFAA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8DEFAB0);
  return result;
}

uint64_t sub_1B8DEFABC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8DEFAC4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B8DEFAC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DEFAD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Scheduler.Schedule()
{
  return &type metadata for Scheduler.Schedule;
}

unint64_t sub_1B8DEFAF0()
{
  unint64_t result;

  result = qword_1EF1E4230;
  if (!qword_1EF1E4230)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E04DA4, &type metadata for Scheduler.Schedule);
    atomic_store(result, (unint64_t *)&qword_1EF1E4230);
  }
  return result;
}

uint64_t sub_1B8DEFB34()
{
  sub_1B8DFE15C();
  sub_1B8DFD784();
  sub_1B8DA760C((unint64_t *)&qword_1EF1E3F80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1B8DFDAC0();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8DEFBA0()
{
  sub_1B8DFD784();
  sub_1B8DA760C((unint64_t *)&qword_1EF1E3F80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  return sub_1B8DFDAC0();
}

uint64_t sub_1B8DEFBF8()
{
  sub_1B8DFE15C();
  sub_1B8DFD784();
  sub_1B8DA760C((unint64_t *)&qword_1EF1E3F80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1B8DFDAC0();
  return sub_1B8DFE18C();
}

BOOL sub_1B8DEFC60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t, __n128);
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  v4 = sub_1B8DFD784();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v16 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
  v13((char *)&v16 - v11, a1, v4, v10);
  ((void (*)(char *, uint64_t, uint64_t))v13)(v8, a2, v4);
  sub_1B8DA760C(&qword_1EF1E14F8, v5, MEMORY[0x1E0CB09D0]);
  LOBYTE(a2) = sub_1B8DFDACC();
  v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v8, v4);
  v14(v12, v4);
  return (a2 & 1) == 0;
}

uint64_t sub_1B8DEFD70()
{
  return sub_1B8DA760C(&qword_1EF1E4238, (uint64_t (*)(uint64_t))type metadata accessor for ScheduledTask, (uint64_t)&unk_1B8E04DCC);
}

void Date.solarTerminatorPath.getter(uint64_t a1@<X8>)
{
  double v2;
  char v3;
  long double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  double v9;
  _BOOL4 v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  _QWORD *v15;
  long double v16;
  double v17;
  unint64_t v18;
  unint64_t v19;
  double *v20;
  double v21;

  v2 = COERCE_DOUBLE(sub_1B8DEFFA4());
  if ((v3 & 1) != 0)
  {
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    return;
  }
  v4 = v2;
  v5 = sin((v2 + 284.0) * 0.98630137 * 0.0174532925) * 23.45;
  v6 = (fmod(v4, 1.0) * 24.0 + -12.0) * 15.0;
  v7 = tan(v5 * 0.0174532925);
  v8 = 0;
  v9 = fabs(v5);
  v10 = v9 <= 10.0;
  v11 = v9 <= 15.0;
  if (v9 > 15.0)
    v12 = 3;
  else
    v12 = 2 * (v9 > 10.0);
  v13 = v11 && v10;
  if (v11 && v10)
    v14 = 1;
  else
    v14 = 3;
  v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    if (v8 % v14)
      goto LABEL_13;
    v21 = (double)v8 + -180.0;
    if (v7 == 0.0)
    {
      v17 = 0.0;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_17:
        v15 = sub_1B8D96C28(0, v15[2] + 1, 1, v15);
    }
    else
    {
      v16 = cos((v6 + v21) * 0.0174532925);
      v17 = atan(-v16 / v7) * 57.2957795;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        goto LABEL_17;
    }
    v19 = v15[2];
    v18 = v15[3];
    if (v19 >= v18 >> 1)
      v15 = sub_1B8D96C28((_QWORD *)(v18 > 1), v19 + 1, 1, v15);
    v15[2] = v19 + 1;
    v20 = (double *)&v15[2 * v19];
    v20[4] = v17;
    v20[5] = v21;
LABEL_13:
    ++v8;
  }
  while (v8 != 361);
  *(_QWORD *)a1 = v5 > 0.0;
  *(_QWORD *)(a1 + 8) = v15;
  *(_QWORD *)(a1 + 16) = v12;
  *(_BYTE *)(a1 + 24) = v13;
}

uint64_t sub_1B8DEFFA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  void *v26;
  void *v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t *v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v0 = sub_1B8DFD610();
  v53 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v52 = (char *)&v46 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1B8DFD7B4();
  v47 = *(_QWORD *)(v2 - 8);
  v48 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFD85C();
  v50 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  MEMORY[0x1E0C80A78](v5);
  v49 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B8DFD748();
  v55 = *(_QWORD *)(v10 - 8);
  v56 = v10;
  MEMORY[0x1E0C80A78](v10);
  v54 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2068);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v46 - v16;
  v18 = sub_1B8DFD8B0();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v46 - v23;
  sub_1B8DFD880();
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v25(v15, 1, v18) == 1)
  {
    sub_1B8D9D154((uint64_t)v15, &qword_1EF1E2068);
    v26 = (void *)objc_opt_self();
    v27 = (void *)sub_1B8DFDB5C();
    objc_msgSend(v26, sel_logError_, v27);

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
LABEL_4:
    v29 = &qword_1EF1E2068;
    v30 = (uint64_t)v17;
LABEL_5:
    sub_1B8D9D154(v30, v29);
    *(double *)&result = 0.0;
    return result;
  }
  v46 = v0;
  v28 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v28(v17, v15, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
  if (v25(v17, 1, v18) == 1)
    goto LABEL_4;
  v28(v24, v17, v18);
  sub_1B8DF04F4((uint64_t)v9);
  v33 = v55;
  v32 = v56;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v9, 1, v56) == 1)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v24, v18);
    v29 = (uint64_t *)&unk_1ED36F800;
    v30 = (uint64_t)v9;
    goto LABEL_5;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v54, v9, v32);
  v35 = v47;
  v34 = v48;
  (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v4, *MEMORY[0x1E0CB0EF8], v48);
  v36 = v49;
  sub_1B8DFD7C0();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v4, v34);
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v22, v24, v18);
  sub_1B8DFD844();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E33D8);
  v37 = sub_1B8DFD850();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1B8DFF650;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v38 + 104))(v40 + v39, *MEMORY[0x1E0CB1188], v37);
  sub_1B8DE58C0(v40);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v41 = v52;
  v42 = v54;
  sub_1B8DFD7E4();
  swift_bridgeObjectRelease();
  v43 = sub_1B8DFD5E0();
  LOBYTE(v40) = v44;
  v45 = (double)v43 / 86400.0;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v41, v46);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v51);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v42, v56);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v24, v18);
  if ((v40 & 1) != 0)
    *(double *)&result = 1.0;
  else
    *(double *)&result = v45 + 1.0;
  return result;
}

uint64_t SolarTerminatorPath.init(isNorthernHemisphereSummer:coordinates:preferredRenderingMethod:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  char v5;

  v4 = *a3;
  v5 = *((_BYTE *)a3 + 8);
  *(_BYTE *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = v4;
  *(_BYTE *)(a4 + 24) = v5;
  return result;
}

uint64_t sub_1B8DF04F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  void *v25;
  void *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v53 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F800);
  MEMORY[0x1E0C80A78](v2);
  v51 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD610();
  v52 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v50 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_1B8DFD7B4();
  v6 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v8 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B8DFD85C();
  v48 = *(_QWORD *)(v9 - 8);
  v49 = v9;
  MEMORY[0x1E0C80A78](v9);
  v47 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E2068);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v44 - v15;
  v17 = sub_1B8DFD8B0();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)v44 - v22;
  sub_1B8DFD880();
  v54 = v18;
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v24(v14, 1, v17) == 1)
  {
    sub_1B8D9D154((uint64_t)v14, &qword_1EF1E2068);
    v25 = (void *)objc_opt_self();
    v26 = (void *)sub_1B8DFDB5C();
    objc_msgSend(v25, sel_logError_, v26);

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v16, 1, 1, v17);
LABEL_4:
    sub_1B8D9D154((uint64_t)v16, &qword_1EF1E2068);
    v29 = sub_1B8DFD748();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v53, 1, 1, v29);
  }
  v44[1] = v1;
  v45 = v4;
  v27 = v54;
  v28 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
  v28(v16, v14, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v16, 0, 1, v17);
  if (v24(v16, 1, v17) == 1)
    goto LABEL_4;
  v28(v23, v16, v17);
  v31 = v46;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0CB0EF8], v46);
  v32 = v47;
  sub_1B8DFD7C0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v31);
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v21, v23, v17);
  sub_1B8DFD844();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E33D8);
  v33 = sub_1B8DFD850();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1B8DFF650;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v34 + 104))(v36 + v35, *MEMORY[0x1E0CB1158], v33);
  sub_1B8DE58C0(v36);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v37 = v50;
  sub_1B8DFD7F0();
  swift_bridgeObjectRelease();
  sub_1B8DFD5BC();
  sub_1B8DFD580();
  sub_1B8DFD598();
  sub_1B8DFD5D4();
  sub_1B8DFD5EC();
  v38 = (uint64_t)v51;
  sub_1B8DFD838();
  v39 = sub_1B8DFD748();
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39) == 1)
  {
    sub_1B8D9D154(v38, (uint64_t *)&unk_1ED36F800);
    v41 = (void *)objc_opt_self();
    v42 = (void *)sub_1B8DFDB5C();
    objc_msgSend(v41, sel_logError_, v42);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v37, v45);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v32, v49);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v23, v17);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v53, 1, 1, v39);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v52 + 8))(v37, v45);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v32, v49);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v23, v17);
    v43 = v53;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v53, v38, v39);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v43, 0, 1, v39);
  }
}

BOOL sub_1B8DF0AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t v4;
  double *v5;
  double *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  BOOL v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
    return 0;
  if (v2 == 1)
    return 1;
  v4 = v2 - 2;
  v5 = (double *)(a1 + 40);
  v6 = (double *)(a2 + 40);
  do
  {
    v7 = *v5++;
    v8 = v7;
    v9 = *v6++;
    v10 = v9;
    v12 = v4-- != 0;
    result = v8 == v10;
  }
  while (v8 == v10 && v12);
  return result;
}

BOOL static SolarTerminatorPath.PreferredRenderingMethod.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
    return (*(_BYTE *)(a2 + 8) & 1) != 0;
  if ((*(_BYTE *)(a2 + 8) & 1) != 0)
    return 0;
  return *(_QWORD *)a1 == *(_QWORD *)a2;
}

uint64_t sub_1B8DF0B6C(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t result;

  v3 = *(_BYTE *)(a1 + 8);
  result = *(unsigned __int8 *)(a2 + 8);
  if ((v3 & 1) == 0)
    return (*(_QWORD *)a1 == *(_QWORD *)a2) & ~(_DWORD)result;
  return result;
}

uint64_t SolarTerminatorPath.isNorthernHemisphereSummer.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t SolarTerminatorPath.coordinates.getter()
{
  return sub_1B8DFD3AC();
}

void SolarTerminatorPath.preferredRenderingMethod.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(a1 + 8) = v2;
}

BOOL _s18MobileTimerSupport19SolarTerminatorPathV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(v2 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v31 = MEMORY[0x1E0DEE9D8];
    sub_1B8DFD3AC();
    sub_1B8D97EE4(0, v4, 0);
    v5 = v31;
    v6 = *(_QWORD *)(v31 + 16);
    v7 = 32;
    v8 = v4;
    do
    {
      v9 = *(_QWORD *)(v2 + v7);
      v10 = *(_QWORD *)(v31 + 24);
      if (v6 >= v10 >> 1)
        sub_1B8D97EE4(v10 > 1, v6 + 1, 1);
      *(_QWORD *)(v31 + 16) = v6 + 1;
      *(_QWORD *)(v31 + 8 * v6 + 32) = v9;
      v7 += 16;
      ++v6;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  v11 = *(_QWORD *)(v3 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v32 = MEMORY[0x1E0DEE9D8];
    sub_1B8DFD3AC();
    sub_1B8D97EE4(0, v11, 0);
    v12 = v32;
    v13 = *(_QWORD *)(v32 + 16);
    v14 = 32;
    v15 = v11;
    do
    {
      v16 = *(_QWORD *)(v3 + v14);
      v17 = *(_QWORD *)(v32 + 24);
      if (v13 >= v17 >> 1)
        sub_1B8D97EE4(v17 > 1, v13 + 1, 1);
      *(_QWORD *)(v32 + 16) = v13 + 1;
      *(_QWORD *)(v32 + 8 * v13 + 32) = v16;
      v14 += 16;
      ++v13;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
  }
  v18 = sub_1B8DF0AC0(v5, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v18)
    return 0;
  v19 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v33 = MEMORY[0x1E0DEE9D8];
    sub_1B8DFD3AC();
    sub_1B8D97EE4(0, v4, 0);
    v19 = v33;
    v20 = *(_QWORD *)(v33 + 16);
    v21 = 40;
    do
    {
      v22 = *(_QWORD *)(v2 + v21);
      v23 = *(_QWORD *)(v33 + 24);
      if (v20 >= v23 >> 1)
        sub_1B8D97EE4(v23 > 1, v20 + 1, 1);
      *(_QWORD *)(v33 + 16) = v20 + 1;
      *(_QWORD *)(v33 + 8 * v20 + 32) = v22;
      v21 += 16;
      ++v20;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  v25 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v34 = MEMORY[0x1E0DEE9D8];
    sub_1B8DFD3AC();
    sub_1B8D97EE4(0, v11, 0);
    v25 = v34;
    v26 = *(_QWORD *)(v34 + 16);
    v27 = 40;
    do
    {
      v28 = *(_QWORD *)(v3 + v27);
      v29 = *(_QWORD *)(v34 + 24);
      if (v26 >= v29 >> 1)
        sub_1B8D97EE4(v29 > 1, v26 + 1, 1);
      *(_QWORD *)(v34 + 16) = v26 + 1;
      *(_QWORD *)(v34 + 8 * v26 + 32) = v28;
      v27 += 16;
      ++v26;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  v30 = sub_1B8DF0AC0(v19, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t initializeWithCopy for SolarTerminatorPath(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  sub_1B8DFD3AC();
  return a1;
}

uint64_t assignWithCopy for SolarTerminatorPath(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1B8DFD3AC();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SolarTerminatorPath(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SolarTerminatorPath(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SolarTerminatorPath(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SolarTerminatorPath()
{
  return &type metadata for SolarTerminatorPath;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SolarTerminatorPath.PreferredRenderingMethod(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SolarTerminatorPath.PreferredRenderingMethod(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_1B8DF10C4(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1B8DF10E0(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SolarTerminatorPath.PreferredRenderingMethod()
{
  return &type metadata for SolarTerminatorPath.PreferredRenderingMethod;
}

uint64_t sub_1B8DF1110()
{
  sub_1B8DFE15C();
  sub_1B8DFDBA4();
  swift_bridgeObjectRelease();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8DF1198()
{
  sub_1B8DFE15C();
  sub_1B8DFDBA4();
  swift_bridgeObjectRelease();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8DF11FC()
{
  sub_1B8DFE15C();
  sub_1B8DFDBA4();
  swift_bridgeObjectRelease();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8DF1260()
{
  sub_1B8DFE15C();
  sub_1B8DFE180();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8DF12AC()
{
  sub_1B8DFE15C();
  sub_1B8DFDBA4();
  swift_bridgeObjectRelease();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8DF131C()
{
  sub_1B8DFE15C();
  sub_1B8DFDBA4();
  swift_bridgeObjectRelease();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8DF1380()
{
  sub_1B8DFE15C();
  sub_1B8DFDBA4();
  swift_bridgeObjectRelease();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8DF1404(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = sub_1B8DFD22C();
  v1(v2);
  return swift_release();
}

uint64_t ObservableStore.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9E0];
  return result;
}

uint64_t ObservableStore.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9E0];
  return result;
}

void sub_1B8DF1470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD v37[5];

  v7 = (uint64_t *)(v3 + 16);
  swift_beginAccess();
  v8 = *(_QWORD *)(v3 + 16);
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_14;
  sub_1B8DFD3AC();
  v9 = sub_1B8D96F20(a3);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_14:
    sub_1B8D9CFDC(a3, (uint64_t)v37);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36ED50);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1B8DFF650;
    *(_QWORD *)(v26 + 32) = a1;
    *(_QWORD *)(v26 + 40) = a2;
    swift_beginAccess();
    swift_unknownObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v36 = *v7;
    *v7 = 0x8000000000000000;
    v28 = v26;
LABEL_21:
    sub_1B8DF5AC0(v28, (uint64_t)v37, isUniquelyReferenced_nonNull_native);
    *v7 = v36;
    swift_bridgeObjectRelease();
    sub_1B8D9D018((uint64_t)v37);
    swift_endAccess();
    return;
  }
  v11 = *(_QWORD **)(*(_QWORD *)(v8 + 56) + 8 * v9);
  sub_1B8DFD3AC();
  swift_bridgeObjectRelease();
  v12 = v11[2];
  if (!v12)
  {
LABEL_16:
    swift_unknownObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1B8D96D34(0, v11[2] + 1, 1, v11);
    v30 = v11[2];
    v29 = v11[3];
    if (v30 >= v29 >> 1)
      v11 = sub_1B8D96D34((_QWORD *)(v29 > 1), v30 + 1, 1, v11);
    v11[2] = v30 + 1;
    v31 = &v11[2 * v30];
    v31[4] = a1;
    v31[5] = a2;
    sub_1B8D9CFDC(a3, (uint64_t)v37);
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v36 = *v7;
    *v7 = 0x8000000000000000;
    v28 = (uint64_t)v11;
    goto LABEL_21;
  }
  v34 = a3;
  sub_1B8DFD3AC();
  v35 = v11;
  v13 = v11 + 5;
  while (1)
  {
    v14 = *(v13 - 1);
    if (!v14)
      goto LABEL_5;
    v15 = *v13;
    ObjectType = swift_getObjectType();
    v37[0] = v14;
    v17 = *(_QWORD *)(v15 + 8);
    v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8);
    swift_unknownObjectRetain_n();
    v19 = v18(ObjectType, v17);
    v21 = v20;
    v22 = swift_getObjectType();
    v37[0] = a1;
    if (v19 == (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a2 + 8) + 8))(v22) && v21 == v23)
      break;
    v25 = sub_1B8DFE0D8();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v25 & 1) != 0)
      goto LABEL_23;
LABEL_5:
    v13 += 2;
    if (!--v12)
    {
      v11 = v35;
      swift_bridgeObjectRelease();
      a3 = v34;
      goto LABEL_16;
    }
  }
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease_n();
LABEL_23:
  swift_bridgeObjectRelease_n();
  v32 = (void *)objc_opt_self();
  v33 = (void *)sub_1B8DFDB5C();
  objc_msgSend(v32, sel_logInfo_, v33);

}

uint64_t sub_1B8DF17D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v44;
  _QWORD v45[6];
  _QWORD *v46;

  v5 = (_QWORD *)(v3 + 16);
  result = swift_beginAccess();
  v7 = *(_QWORD *)(v3 + 16);
  if (!*(_QWORD *)(v7 + 16))
    return result;
  sub_1B8DFD3AC();
  v8 = sub_1B8D96F20(a3);
  if ((v9 & 1) == 0)
    return swift_bridgeObjectRelease();
  v10 = *(_QWORD **)(*(_QWORD *)(v7 + 56) + 8 * v8);
  sub_1B8DFD3AC();
  swift_bridgeObjectRelease();
  v46 = v10;
  sub_1B8DFD3AC();
  swift_unknownObjectRetain();
  v11 = sub_1B8DF5F78((uint64_t)v10, a1, a2);
  v13 = v12;
  swift_bridgeObjectRelease();
  result = swift_unknownObjectRelease();
  v39 = a3;
  if ((v13 & 1) != 0)
  {
    v11 = v10[2];
    v16 = v11;
    goto LABEL_11;
  }
  v14 = v11 + 1;
  if (__OFADD__(v11, 1))
    goto LABEL_41;
  v38 = v5;
  v15 = v10[2];
  if (v14 == v15)
  {
    v16 = v11 + 1;
LABEL_7:
    v5 = v38;
    if ((uint64_t)v16 < v11)
    {
      __break(1u);
      return swift_bridgeObjectRelease();
    }
LABEL_11:
    sub_1B8DF60D8(v11, v16);
    sub_1B8D9CFDC(v39, (uint64_t)v45);
    v17 = (uint64_t)v46;
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v44 = *v5;
    *v5 = 0x8000000000000000;
    sub_1B8DF5AC0(v17, (uint64_t)v45, isUniquelyReferenced_nonNull_native);
    *v5 = v44;
    swift_bridgeObjectRelease();
    sub_1B8D9D018((uint64_t)v45);
    return swift_endAccess();
  }
  v19 = 2 * v11;
  v16 = v11 + 1;
  v41 = v11 + 1;
  while ((v14 & 0x8000000000000000) == 0)
  {
    if (v16 >= v15)
      goto LABEL_35;
    v21 = &v10[v19];
    v22 = v10[v19 + 6];
    if (!v22)
      goto LABEL_25;
    v23 = v21[7];
    ObjectType = swift_getObjectType();
    v45[0] = v22;
    v25 = *(_QWORD *)(v23 + 8);
    v26 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8);
    swift_unknownObjectRetain_n();
    v27 = v26(ObjectType, v25);
    v29 = v28;
    v30 = swift_getObjectType();
    v45[0] = a1;
    if (v27 == (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a2 + 8) + 8))(v30) && v29 == v31)
    {
      swift_unknownObjectRelease_n();
      result = swift_bridgeObjectRelease_n();
      v14 = v41;
      goto LABEL_16;
    }
    v33 = sub_1B8DFE0D8();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v14 = v41;
    if ((v33 & 1) == 0)
    {
LABEL_25:
      if (v16 != v11)
      {
        if (v11 < 0)
          goto LABEL_37;
        v34 = v10[2];
        if (v11 >= v34)
          goto LABEL_38;
        if (v16 >= v34)
          goto LABEL_39;
        v35 = v21[6];
        v36 = v21[7];
        v40 = *(_OWORD *)&v10[2 * v11 + 4];
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_1B8DF5F64(v10);
        v37 = &v10[2 * v11];
        v37[4] = v35;
        v37[5] = v36;
        result = swift_unknownObjectRelease();
        if (v16 >= v10[2])
          goto LABEL_40;
        *(_OWORD *)&v10[v19 + 6] = v40;
        result = swift_unknownObjectRelease();
        v46 = v10;
      }
      if (__OFADD__(v11++, 1))
        goto LABEL_36;
    }
LABEL_16:
    ++v16;
    v15 = v10[2];
    v19 += 2;
    if (v16 == v15)
      goto LABEL_7;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t ObservableStore.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ObservableStore.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t DataStore.id.getter()
{
  uint64_t v0;

  v0 = sub_1B8DF6248();
  sub_1B8DFD3AC();
  return v0;
}

uint64_t sub_1B8DF1BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  uint64_t result;
  _QWORD aBlock[6];
  _OWORD v14[2];
  uint64_t v15;

  v4 = v3;
  v7 = *(NSObject **)(v3 + 40);
  sub_1B8D9CFDC(a3, (uint64_t)v14);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v4;
  *(_QWORD *)(v8 + 24) = a1;
  *(_QWORD *)(v8 + 32) = a2;
  v9 = v14[1];
  *(_OWORD *)(v8 + 40) = v14[0];
  *(_OWORD *)(v8 + 56) = v9;
  *(_QWORD *)(v8 + 72) = v15;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1B8DF6254;
  *(_QWORD *)(v10 + 24) = v8;
  aBlock[4] = sub_1B8DA01B0;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B8D8CD1C;
  aBlock[3] = &block_descriptor_15;
  v11 = _Block_copy(aBlock);
  sub_1B8DFD22C();
  swift_unknownObjectRetain();
  sub_1B8DFD22C();
  swift_release();
  dispatch_sync(v7, v11);
  _Block_release(v11);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v7 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1B8DF1D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  uint64_t result;
  _QWORD aBlock[6];
  _OWORD v14[2];
  uint64_t v15;

  v4 = v3;
  v7 = *(NSObject **)(v3 + 40);
  sub_1B8D9CFDC(a3, (uint64_t)v14);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v4;
  *(_QWORD *)(v8 + 24) = a1;
  *(_QWORD *)(v8 + 32) = a2;
  v9 = v14[1];
  *(_OWORD *)(v8 + 40) = v14[0];
  *(_OWORD *)(v8 + 56) = v9;
  *(_QWORD *)(v8 + 72) = v15;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1B8DF62C4;
  *(_QWORD *)(v10 + 24) = v8;
  aBlock[4] = sub_1B8DA792C;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B8D8CD1C;
  aBlock[3] = &block_descriptor_13_0;
  v11 = _Block_copy(aBlock);
  sub_1B8DFD22C();
  swift_unknownObjectRetain();
  sub_1B8DFD22C();
  swift_release();
  dispatch_sync(v7, v11);
  _Block_release(v11);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v7 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1B8DF1E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  sub_1B8DFD22C();
  a5(a2, a3, a4);
  return swift_release();
}

uint64_t DataStore.__allocating_init(identifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  DataStore.init(identifier:)(a1, a2);
  return v4;
}

_QWORD *DataStore.init(identifier:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD v15[4];
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;

  v3 = v2;
  v6 = sub_1B8DFDDB4();
  v17 = *(_QWORD *)(v6 - 8);
  v18 = v6;
  MEMORY[0x1E0C80A78](v6);
  v16 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B8DFDDA8();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1B8DFDA30();
  MEMORY[0x1E0C80A78](v9);
  v3[2] = sub_1B8DFDA54();
  type metadata accessor for ObservableStore();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x1E0DEE9E0];
  v3[7] = v10;
  v3[3] = a1;
  v3[4] = a2;
  v19 = sub_1B8D98F94();
  v20 = 0;
  v21 = 0xE000000000000000;
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  v20 = 0xD000000000000025;
  v21 = 0x80000001B8E09680;
  sub_1B8DFD3AC();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  sub_1B8DFDA0C();
  v20 = MEMORY[0x1E0DEE9D8];
  v15[2] = sub_1B8DA760C((unint64_t *)&unk_1ED36F830, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  v15[1] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F810);
  v15[3] = sub_1B8DF6594((unint64_t *)&qword_1ED36F820, (uint64_t *)&unk_1ED36F810);
  sub_1B8DFDE80();
  v11 = *MEMORY[0x1E0DEF8D0];
  v12 = v16;
  v17 = *(_QWORD *)(v17 + 104);
  v13 = v18;
  ((void (*)(char *, uint64_t, uint64_t))v17)(v16, v11, v18);
  v3[5] = sub_1B8DFDDE4();
  v20 = 0;
  v21 = 0xE000000000000000;
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  v20 = 0xD000000000000029;
  v21 = 0x80000001B8E096B0;
  sub_1B8DFD3AC();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  sub_1B8DFDA0C();
  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B8DFDE80();
  ((void (*)(char *, uint64_t, uint64_t))v17)(v12, v11, v13);
  v3[6] = sub_1B8DFDDE4();
  return v3;
}

uint64_t sub_1B8DF2278(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  char *v7;
  NSObject *v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD aBlock[6];

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[5];
  (*(void (**)(char *, __n128))(v4 + 16))(v7, v6);
  v9 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v10 = (char *)swift_allocObject();
  *((_QWORD *)v10 + 2) = v3;
  *((_QWORD *)v10 + 3) = *(_QWORD *)(v2 + 88);
  *((_QWORD *)v10 + 4) = v1;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v10[v9], v7, v3);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1B8DF6388;
  *(_QWORD *)(v11 + 24) = v10;
  aBlock[4] = sub_1B8DA792C;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B8D8CD1C;
  aBlock[3] = &block_descriptor_23;
  v12 = _Block_copy(aBlock);
  sub_1B8DFD22C();
  sub_1B8DFD22C();
  swift_release();
  dispatch_sync(v8, v12);
  _Block_release(v12);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1B8DF2414(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v39[4];
  uint64_t v40[3];
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;

  v4 = *a1;
  v5 = *(_QWORD *)(*a1 + 80);
  v6 = sub_1B8DFDE38();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v39 - v7;
  v9 = *(_QWORD *)(*(_QWORD *)(v4 + 88) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v39[0] = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v39 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v39 - v17;
  sub_1B8DFDF04();
  v39[1] = swift_getAssociatedConformanceWitness();
  sub_1B8DFE000();
  v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v18, AssociatedTypeWitness);
  v20 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v8, a2, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v8, 0, 1, v5);
  swift_beginAccess();
  sub_1B8DFDA90();
  sub_1B8DFDAA8();
  swift_endAccess();
  v43 = 0;
  v44 = 0xE000000000000000;
  sub_1B8DFDEF8();
  v41 = v43;
  v42 = v44;
  sub_1B8DFDBBC();
  sub_1B8DFE0CC();
  sub_1B8DFDBBC();
  v21 = a1[7];
  sub_1B8DFD22C();
  v39[2] = v9;
  sub_1B8DFDF04();
  sub_1B8DFE000();
  v19(v15, AssociatedTypeWitness);
  swift_beginAccess();
  v22 = *(_QWORD *)(v21 + 16);
  sub_1B8DFD3AC();
  swift_release();
  if (*(_QWORD *)(v22 + 16) && (v23 = sub_1B8D96F20((uint64_t)&v43), (v24 & 1) != 0))
  {
    v25 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v23);
    sub_1B8DFD3AC();
  }
  else
  {
    v25 = 0;
  }
  v26 = v39[0];
  swift_bridgeObjectRelease();
  v27 = (void *)objc_opt_self();
  sub_1B8D9D018((uint64_t)&v43);
  v40[0] = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36ED28);
  sub_1B8DFDF94();
  swift_bridgeObjectRelease();
  v28 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_logInfo_, v28);

  v29 = a1[7];
  sub_1B8DFD22C();
  sub_1B8DFDF04();
  sub_1B8DFE000();
  swift_beginAccess();
  v30 = *(_QWORD *)(v29 + 16);
  sub_1B8DFD3AC();
  swift_release();
  if (*(_QWORD *)(v30 + 16))
  {
    v31 = sub_1B8D96F20((uint64_t)&v43);
    if ((v32 & 1) != 0)
    {
      v33 = v19;
      v34 = *(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v31);
      sub_1B8DFD3AC();
      swift_bridgeObjectRelease();
      v35 = *(_QWORD *)(v34 + 16);
      if (v35)
      {
        sub_1B8DFD3AC();
        v36 = 0;
        do
        {
          v37 = v34 + 16 * v36++;
          *(_OWORD *)v40 = *(_OWORD *)(v37 + 32);
          swift_unknownObjectRetain();
          sub_1B8DF28B8(v40, a1, a2);
          swift_unknownObjectRelease();
        }
        while (v35 != v36);
        swift_bridgeObjectRelease();
      }
      v19 = v33;
    }
  }
  swift_bridgeObjectRelease();
  sub_1B8D9D018((uint64_t)&v43);
  return ((uint64_t (*)(uint64_t, uint64_t))v19)(v26, AssociatedTypeWitness);
}

void sub_1B8DF28B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, __n128);
  uint64_t v22;
  unint64_t v23;
  char *v24;
  void *v25;
  char *v26;
  uint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[8];

  v30 = a3;
  v5 = *a2;
  v6 = sub_1B8DFD9F4();
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x1E0C80A78](v6);
  v31 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B8DFDA30();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v5 + 80);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v17 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a1;
  if (*a1)
  {
    v20 = a1[1];
    v28[1] = a2[6];
    v29 = v15;
    v21 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16);
    v22 = v30;
    v30 = v16;
    v21((char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v11, v17);
    v23 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v24 = (char *)swift_allocObject();
    *((_QWORD *)v24 + 2) = v11;
    *((_QWORD *)v24 + 3) = *(_QWORD *)(v5 + 88);
    *((_QWORD *)v24 + 4) = v19;
    *((_QWORD *)v24 + 5) = v20;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v24[v23], v18, v11);
    aBlock[4] = sub_1B8DF6644;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1B8DF1404;
    aBlock[3] = &block_descriptor_45;
    v25 = _Block_copy(aBlock);
    swift_unknownObjectRetain_n();
    sub_1B8DFDA0C();
    aBlock[7] = MEMORY[0x1E0DEE9D8];
    sub_1B8DA760C((unint64_t *)&qword_1ED36ED20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36ED30);
    sub_1B8DF6594((unint64_t *)&qword_1ED36ED38, &qword_1ED36ED30);
    v26 = v31;
    v27 = v33;
    sub_1B8DFDE80();
    MEMORY[0x1BCCBC6D0](0, v10, v26, v25);
    _Block_release(v25);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v26, v27);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v29);
    swift_release();
  }
}

uint64_t sub_1B8DF2B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v12[5];

  ObjectType = swift_getObjectType();
  v12[3] = a4;
  v12[4] = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_0, a3, a4);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(a2 + 16))(v12, ObjectType, a2);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
}

uint64_t sub_1B8DF2BD4()
{
  void *v0;
  void *v1;

  v0 = (void *)objc_opt_self();
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  sub_1B8DFDEA4();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  v1 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_logInfo_, v1);

  sub_1B8DFDE38();
  return sub_1B8DFDDCC();
}

uint64_t sub_1B8DF2CE0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  swift_beginAccess();
  v5 = a1[2];
  v6 = *(_QWORD *)(v4 + 80);
  sub_1B8DFD3AC();
  MEMORY[0x1BCCBC394](a2, v5, MEMORY[0x1E0DEC198], v6, MEMORY[0x1E0DEC1A0]);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8DF2D74()
{
  sub_1B8DFDE38();
  return sub_1B8DFDDCC();
}

uint64_t sub_1B8DF2DD4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  _QWORD v13[6];

  v4 = *(_QWORD *)(*a1 + 80);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v6 = sub_1B8DFDE38();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v13 - v8;
  swift_beginAccess();
  v13[5] = a1[2];
  v10 = sub_1B8DFDA90();
  MEMORY[0x1BCCBD0FC](MEMORY[0x1E0DEA0E0], v10);
  sub_1B8DFDD90();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v9, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a2, 1, 1, v4);
  }
  else
  {
    v12 = *(_QWORD *)(v4 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a2, &v9[*(int *)(TupleTypeMetadata2 + 48)], v4);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v4);
    return sub_1B8D9D018((uint64_t)v9);
  }
}

uint64_t sub_1B8DF2F74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  uint64_t result;
  unint64_t aBlock;
  unint64_t v13;
  uint64_t (*v14)(uint64_t);
  void *v15;
  uint64_t (*v16)();
  uint64_t v17;
  _OWORD v18[2];
  uint64_t v19;

  v2 = v1;
  v4 = (void *)objc_opt_self();
  sub_1B8DFDEF8();
  swift_bridgeObjectRelease();
  aBlock = 0xD000000000000014;
  v13 = 0x80000001B8E09700;
  sub_1B8DFDEA4();
  sub_1B8DFDBBC();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_logInfo_, v5);

  v6 = *(NSObject **)(v1 + 40);
  sub_1B8D9CFDC(a1, (uint64_t)v18);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v2;
  v8 = v18[1];
  *(_OWORD *)(v7 + 24) = v18[0];
  *(_OWORD *)(v7 + 40) = v8;
  *(_QWORD *)(v7 + 56) = v19;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1B8DF6414;
  *(_QWORD *)(v9 + 24) = v7;
  v16 = sub_1B8DA792C;
  v17 = v9;
  aBlock = MEMORY[0x1E0C809B0];
  v13 = 1107296256;
  v14 = sub_1B8D8CD1C;
  v15 = &block_descriptor_33;
  v10 = _Block_copy(&aBlock);
  sub_1B8DFD22C();
  sub_1B8DFD22C();
  swift_release();
  dispatch_sync(v6, v10);
  _Block_release(v10);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v2 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1B8DF3158(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[4];
  _BYTE v27[40];

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v5 = sub_1B8DFDE38();
  v24 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - v9;
  swift_beginAccess();
  v11 = *((_QWORD *)a1 + 2);
  sub_1B8DFD3AC();
  MEMORY[0x1BCCBC394](a2, v11, MEMORY[0x1E0DEC198], v4, MEMORY[0x1E0DEC1A0]);
  swift_bridgeObjectRelease();
  sub_1B8D9CFDC(a2, (uint64_t)v27);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v7, 1, 1, v4);
  swift_beginAccess();
  sub_1B8DFDA90();
  sub_1B8DFDAA8();
  swift_endAccess();
  v12 = *((_QWORD *)a1 + 7);
  swift_beginAccess();
  v13 = *(_QWORD *)(v12 + 16);
  if (*(_QWORD *)(v13 + 16))
  {
    sub_1B8DFD3AC();
    v14 = sub_1B8D96F20(a2);
    if ((v15 & 1) != 0)
    {
      v16 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v14);
      sub_1B8DFD3AC();
    }
    else
    {
      v16 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
  }
  swift_beginAccess();
  sub_1B8DFD22C();
  sub_1B8DEC1DC(a2);
  swift_endAccess();
  swift_release();
  swift_bridgeObjectRelease();
  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  sub_1B8DFDEF8();
  sub_1B8DFDBBC();
  sub_1B8DFE0CC();
  v17 = (void *)objc_opt_self();
  sub_1B8DFDBBC();
  v25 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36ED28);
  sub_1B8DFDF94();
  v18 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_logInfo_, v18);

  if (v16)
  {
    v19 = *(_QWORD *)(v16 + 16);
    if (v19)
    {
      sub_1B8DFD3AC();
      v20 = 0;
      do
      {
        v21 = v16 + 16 * v20++;
        *(_OWORD *)v26 = *(_OWORD *)(v21 + 32);
        swift_unknownObjectRetain();
        sub_1B8DF34CC(v26, (uint64_t)v10, a1);
        swift_unknownObjectRelease();
      }
      while (v19 != v20);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v10, v5);
}

uint64_t sub_1B8DF34CC(uint64_t *a1, uint64_t a2, char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v25)(char *, char *, uint64_t);
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD aBlock[8];

  v44 = a2;
  v35 = a3;
  v4 = *(_QWORD *)a3;
  v5 = sub_1B8DFD9F4();
  v41 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  MEMORY[0x1E0C80A78](v5);
  v40 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B8DFDA30();
  v38 = *(_QWORD *)(v7 - 8);
  v39 = v7;
  MEMORY[0x1E0C80A78](v7);
  v36 = v4;
  v37 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v4 + 80);
  v10 = sub_1B8DFDE38();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v34 - v12;
  v14 = *(_QWORD *)(v9 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v16);
  v17 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v34 - v20;
  v22 = *a1;
  v23 = a1[1];
  v43 = v22;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v13, v44, v10, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v9) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v44 = v23;
  v25 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v25(v21, v13, v9);
  if (!v43)
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v21, v9);
  v34 = *((_QWORD *)v35 + 6);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v21, v9);
  v26 = (*(unsigned __int8 *)(v14 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v27 = (_QWORD *)swift_allocObject();
  v35 = v21;
  v28 = v27;
  v27[2] = v9;
  v29 = v43;
  v27[3] = *(_QWORD *)(v36 + 88);
  v27[4] = v29;
  v27[5] = v44;
  v25((char *)v27 + v26, v17, v9);
  aBlock[4] = sub_1B8DF6588;
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B8DF1404;
  aBlock[3] = &block_descriptor_39;
  v30 = _Block_copy(aBlock);
  swift_unknownObjectRetain_n();
  v31 = v37;
  sub_1B8DFDA0C();
  aBlock[7] = MEMORY[0x1E0DEE9D8];
  sub_1B8DA760C((unint64_t *)&qword_1ED36ED20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36ED30);
  sub_1B8DF6594((unint64_t *)&qword_1ED36ED38, &qword_1ED36ED30);
  v32 = v40;
  v33 = v42;
  sub_1B8DFDE80();
  MEMORY[0x1BCCBC6D0](0, v31, v32, v30);
  _Block_release(v30);
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v33);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v31, v39);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v35, v9);
  return swift_release();
}

uint64_t sub_1B8DF3848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v12[5];

  ObjectType = swift_getObjectType();
  v12[3] = a4;
  v12[4] = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_0, a3, a4);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(a2 + 24))(v12, ObjectType, a2);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
}

uint64_t sub_1B8DF38D4()
{
  void *v0;
  void *v1;
  uint64_t v2;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1B8DFDB5C();
  objc_msgSend(v0, sel_logInfo_, v1);

  swift_beginAccess();
  v2 = sub_1B8DFDA84();
  sub_1B8DFD3AC();
  MEMORY[0x1BCCBD0FC](MEMORY[0x1E0DE9ED0], v2);
  sub_1B8DFDC1C();
  return swift_bridgeObjectRelease();
}

uint64_t DataStore.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t DataStore.__deallocating_deinit()
{
  DataStore.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B8DF3A2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_1B8DF6248();
  a1[1] = v2;
  return sub_1B8DFD3AC();
}

uint64_t sub_1B8DF3A58(uint64_t a1, char a2)
{
  return sub_1B8DF3A64(a1, a2, (uint64_t *)&unk_1ED36F190);
}

uint64_t sub_1B8DF3A64(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_1B8DFDFDC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = sub_1B8DFD22C();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      sub_1B8DFD3AC();
      sub_1B8DFD22C();
    }
    sub_1B8DFE15C();
    sub_1B8DFDBA4();
    result = sub_1B8DFE18C();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1B8DF3D74(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  char v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  uint64_t v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1E3FC0);
  v6 = a2;
  v7 = sub_1B8DFDFDC();
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v33 = v2;
  v34 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = sub_1B8DFD22C();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_31;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          v3 = v33;
          if ((v6 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v14 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v14 = v24;
      }
    }
LABEL_30:
    v11 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_31:
    v29 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v20);
    v30 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v6 & 1) == 0)
      v31 = v30;
    sub_1B8DFE15C();
    sub_1B8DFDBA4();
    swift_bridgeObjectRelease();
    result = sub_1B8DFE18C();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v17 == v26;
        if (v17 == v26)
          v17 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v28 == -1);
      v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_BYTE *)(*(_QWORD *)(v8 + 48) + v18) = v29;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v30;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v3 = v33;
  v22 = (_QWORD *)(v5 + 64);
  if ((v6 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v22, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_1B8DF40A4(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  _QWORD *v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[4];
  int v46;
  uint64_t *v47;
  int64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;

  v6 = v4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v54 = *(_QWORD *)(v8 - 8);
  v55 = v8;
  MEMORY[0x1E0C80A78](v8);
  v53 = &v45[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_1B8DFD784();
  v52 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v45[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v14 = sub_1B8DFDFDC();
  v15 = v14;
  if (!*(_QWORD *)(v13 + 16))
    goto LABEL_41;
  v16 = 1 << *(_BYTE *)(v13 + 32);
  v17 = *(_QWORD *)(v13 + 64);
  v49 = (_QWORD *)(v13 + 64);
  if (v16 < 64)
    v18 = ~(-1 << v16);
  else
    v18 = -1;
  v19 = v18 & v17;
  v47 = v4;
  v48 = (unint64_t)(v16 + 63) >> 6;
  v20 = v14 + 64;
  v51 = v13;
  result = sub_1B8DFD22C();
  v22 = 0;
  v46 = a2;
  v23 = 16;
  if ((a2 & 1) != 0)
    v23 = 32;
  v50 = v23;
  v24 = v23;
  while (1)
  {
    if (v19)
    {
      v26 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v27 = v26 | (v22 << 6);
      goto LABEL_24;
    }
    v28 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v28 >= v48)
      break;
    v29 = v49;
    v30 = v49[v28];
    ++v22;
    if (!v30)
    {
      v22 = v28 + 1;
      if (v28 + 1 >= v48)
        goto LABEL_34;
      v30 = v49[v22];
      if (!v30)
      {
        v31 = v28 + 2;
        if (v31 >= v48)
        {
LABEL_34:
          v43 = v51;
          swift_release();
          v6 = v47;
          if ((v46 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v30 = v49[v31];
        if (!v30)
        {
          while (1)
          {
            v22 = v31 + 1;
            if (__OFADD__(v31, 1))
              goto LABEL_43;
            if (v22 >= v48)
              goto LABEL_34;
            v30 = v49[v22];
            ++v31;
            if (v30)
              goto LABEL_23;
          }
        }
        v22 = v31;
      }
    }
LABEL_23:
    v19 = (v30 - 1) & v30;
    v27 = __clz(__rbit64(v30)) + (v22 << 6);
LABEL_24:
    v32 = v51;
    v33 = *(_QWORD *)(v52 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v52 + v24))(v12, *(_QWORD *)(v51 + 48) + v33 * v27, v10);
    v34 = *(_QWORD *)(v32 + 56);
    v35 = *(_QWORD *)(v54 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v54 + v24))(v53, v34 + v35 * v27, v55);
    sub_1B8DA760C((unint64_t *)&qword_1EF1E3F80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_1B8DFDAB4();
    v36 = -1 << *(_BYTE *)(v15 + 32);
    v37 = result & ~v36;
    v38 = v37 >> 6;
    if (((-1 << v37) & ~*(_QWORD *)(v20 + 8 * (v37 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v20 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v39 = 0;
      v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v41 = v38 == v40;
        if (v38 == v40)
          v38 = 0;
        v39 |= v41;
        v42 = *(_QWORD *)(v20 + 8 * v38);
      }
      while (v42 == -1);
      v25 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(_QWORD *)(v20 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v52 + 32))(*(_QWORD *)(v15 + 48) + v33 * v25, v12, v10);
    result = (*(uint64_t (**)(unint64_t, _BYTE *, uint64_t))(v54 + 32))(*(_QWORD *)(v15 + 56) + v35 * v25, v53, v55);
    ++*(_QWORD *)(v15 + 16);
  }
  v43 = v51;
  swift_release();
  v6 = v47;
  v29 = v49;
  if ((v46 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v44 = 1 << *(_BYTE *)(v43 + 32);
  if (v44 >= 64)
    bzero(v29, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v29 = -1 << v44;
  *(_QWORD *)(v43 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v6 = v15;
  return result;
}

unint64_t sub_1B8DF44A0(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3F90);
  v6 = (_QWORD *)sub_1B8DFDFDC();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    result = sub_1B8DFD22C();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v15 = v14 | (v13 << 6);
      }
      else
      {
        v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11)
          goto LABEL_22;
        v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          v13 = v16 + 1;
          if (v16 + 1 >= v11)
            goto LABEL_22;
          v17 = v8[v13];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v21 = 1 << *(_BYTE *)(v5 + 32);
                if (v21 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v21 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v21;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                v13 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_29;
                if (v13 >= v11)
                  goto LABEL_22;
                v17 = v8[v13];
                ++v18;
                if (v17)
                  goto LABEL_19;
              }
            }
            v13 = v18;
          }
        }
LABEL_19:
        v10 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      v19 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v15);
      v20 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v15);
      if ((a2 & 1) == 0)
        sub_1B8DFD22C();
      result = sub_1B8DF5C20(v19, v20, v6);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

unint64_t sub_1B8DF4680(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  void *v20;
  id v21;
  uint64_t v22;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3F48);
  v6 = (_QWORD *)sub_1B8DFDFDC();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    result = sub_1B8DFD22C();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v15 = v14 | (v13 << 6);
      }
      else
      {
        v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11)
          goto LABEL_22;
        v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          v13 = v16 + 1;
          if (v16 + 1 >= v11)
            goto LABEL_22;
          v17 = v8[v13];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v22 = 1 << *(_BYTE *)(v5 + 32);
                if (v22 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v22;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                v13 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_29;
                if (v13 >= v11)
                  goto LABEL_22;
                v17 = v8[v13];
                ++v18;
                if (v17)
                  goto LABEL_19;
              }
            }
            v13 = v18;
          }
        }
LABEL_19:
        v10 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      v19 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v15);
      v20 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v15);
      if ((a2 & 1) == 0)
        v21 = v20;
      result = sub_1B8DF5C20(v19, (uint64_t)v20, v6);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_1B8DF485C(uint64_t a1, int a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t result;
  int v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  int v28;
  _QWORD *v29;

  v3 = v2;
  v5 = sub_1B8DFD748();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E3F98);
  v29 = (_QWORD *)sub_1B8DFDFDC();
  if (*(_QWORD *)(v9 + 16))
  {
    v27 = v2;
    v10 = 1 << *(_BYTE *)(v9 + 32);
    v11 = (_QWORD *)(v9 + 64);
    v12 = -1;
    if (v10 < 64)
      v12 = ~(-1 << v10);
    v13 = v12 & *(_QWORD *)(v9 + 64);
    v14 = (unint64_t)(v10 + 63) >> 6;
    result = sub_1B8DFD22C();
    v16 = a2;
    v17 = 0;
    v28 = v16;
    if ((v16 & 1) != 0)
      v18 = 4;
    else
      v18 = 2;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v17 << 6);
      }
      else
      {
        v22 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_31:
          __break(1u);
          return result;
        }
        if (v22 >= v14)
          goto LABEL_22;
        v23 = v11[v22];
        ++v17;
        if (!v23)
        {
          v17 = v22 + 1;
          if (v22 + 1 >= v14)
            goto LABEL_22;
          v23 = v11[v17];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v14)
            {
LABEL_22:
              swift_release();
              if ((v28 & 1) == 0)
              {
                result = swift_release();
                v3 = v27;
                goto LABEL_29;
              }
              v25 = 1 << *(_BYTE *)(v9 + 32);
              if (v25 >= 64)
                bzero((void *)(v9 + 64), ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v11 = -1 << v25;
              v3 = v27;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v23 = v11[v24];
            if (!v23)
            {
              while (1)
              {
                v17 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_31;
                if (v17 >= v14)
                  goto LABEL_22;
                v23 = v11[v17];
                ++v24;
                if (v23)
                  goto LABEL_21;
              }
            }
            v17 = v24;
          }
        }
LABEL_21:
        v13 = (v23 - 1) & v23;
        v20 = __clz(__rbit64(v23)) + (v17 << 6);
      }
      v21 = *(_BYTE *)(*(_QWORD *)(v9 + 48) + v20);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 8 * v18))(v8, *(_QWORD *)(v9 + 56) + *(_QWORD *)(v6 + 72) * v20, v5);
      result = sub_1B8DF5CD8(v21, (uint64_t)v8, v29);
    }
  }
  result = swift_release();
LABEL_29:
  *v3 = v29;
  return result;
}

uint64_t sub_1B8DF4ABC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F1A0);
  v38 = a2;
  v6 = sub_1B8DFDFDC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = sub_1B8DFD22C();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      sub_1B8DFD3AC();
      v33 = v32;
    }
    sub_1B8DFE15C();
    sub_1B8DFDBA4();
    result = sub_1B8DFE18C();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1B8DF4DC8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  _QWORD *v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36ED48);
  v6 = sub_1B8DFDFDC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v36 = v2;
  v37 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = sub_1B8DFD22C();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_22;
    }
    v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v20 >= v37)
      break;
    v21 = (_QWORD *)(v5 + 64);
    v22 = *(_QWORD *)(v38 + 8 * v20);
    ++v13;
    if (!v22)
    {
      v13 = v20 + 1;
      if (v20 + 1 >= v37)
        goto LABEL_34;
      v22 = *(_QWORD *)(v38 + 8 * v13);
      if (!v22)
      {
        v23 = v20 + 2;
        if (v23 >= v37)
        {
LABEL_34:
          swift_release();
          v3 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v22 = *(_QWORD *)(v38 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            v13 = v23 + 1;
            if (__OFADD__(v23, 1))
              goto LABEL_43;
            if (v13 >= v37)
              goto LABEL_34;
            v22 = *(_QWORD *)(v38 + 8 * v13);
            ++v23;
            if (v22)
              goto LABEL_21;
          }
        }
        v13 = v23;
      }
    }
LABEL_21:
    v10 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_22:
    v24 = *(_QWORD *)(v5 + 48) + 40 * v19;
    if ((a2 & 1) != 0)
    {
      v25 = *(_OWORD *)v24;
      v26 = *(_OWORD *)(v24 + 16);
      v41 = *(_QWORD *)(v24 + 32);
      v39 = v25;
      v40 = v26;
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v19);
    }
    else
    {
      sub_1B8D9CFDC(v24, (uint64_t)&v39);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v19);
      sub_1B8DFD3AC();
    }
    result = sub_1B8DFDEB0();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v11 + 8 * (v29 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v11 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v11 + 8 * v30);
      }
      while (v34 == -1);
      v14 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = *(_QWORD *)(v7 + 48) + 40 * v14;
    v16 = v39;
    v17 = v40;
    *(_QWORD *)(v15 + 32) = v41;
    *(_OWORD *)v15 = v16;
    *(_OWORD *)(v15 + 16) = v17;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v14) = v27;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v21 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v21, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v21 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1B8DF50D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B8DF5100(a1, a2, a3, a4, (void (*)(void))sub_1B8DECAD4, &qword_1ED36F240);
}

uint64_t sub_1B8DF50EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B8DF5100(a1, a2, a3, a4, (void (*)(void))sub_1B8DECAE0, &qword_1ED36F238);
}

uint64_t sub_1B8DF5100(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), uint64_t *a6)
{
  _QWORD *v6;
  _QWORD *v9;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t result;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;

  v9 = v6;
  v14 = *v6;
  v16 = sub_1B8D96EBC(a2, a3);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= v19 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v21 >= v19 && (a4 & 1) == 0)
  {
    a5();
LABEL_7:
    v22 = (_QWORD *)*v9;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = v22[7];
      result = swift_release();
      *(_QWORD *)(v23 + 8 * v16) = a1;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    v27 = (uint64_t *)(v22[6] + 16 * v16);
    *v27 = a2;
    v27[1] = a3;
    *(_QWORD *)(v22[7] + 8 * v16) = a1;
    v28 = v22[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (!v29)
    {
      v22[2] = v30;
      return sub_1B8DFD3AC();
    }
    goto LABEL_14;
  }
  sub_1B8DF3A64(v19, a4 & 1, a6);
  v25 = sub_1B8D96EBC(a2, a3);
  if ((v20 & 1) == (v26 & 1))
  {
    v16 = v25;
    v22 = (_QWORD *)*v9;
    if ((v20 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1B8DFE108();
  __break(1u);
  return result;
}

uint64_t sub_1B8DF5274(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B8DF5100(a1, a2, a3, a4, (void (*)(void))sub_1B8DECAEC, (uint64_t *)&unk_1ED36F190);
}

uint64_t sub_1B8DF5288(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1B8DF57B8(a1, a2, a3, (void (*)(void))sub_1B8DECCA4, &qword_1EF1E2AC0, &qword_1EF1E3FD0);
}

void sub_1B8DF52A4(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v7 = a2 & 1;
  v8 = *v3;
  v10 = sub_1B8D96FF0(a2 & 1);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1B8DECCB8();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = v7;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_1B8DF3D74(v13, a3 & 1);
  v18 = sub_1B8D96FF0(v7);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1B8DFE108();
  __break(1u);
}

uint64_t sub_1B8DF53D8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1B8DF57B8(a1, a2, a3, (void (*)(void))sub_1B8DECE58, &qword_1EF1E2F30, &qword_1EF1E3FB8);
}

uint64_t sub_1B8DF53F4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1B8DF57B8(a1, a2, a3, (void (*)(void))sub_1B8DECE6C, &qword_1EF1E2F80, &qword_1EF1E3F88);
}

uint64_t sub_1B8DF5410(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1B8D9708C(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1B8DECE80();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_release();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v19 = v16[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_1B8DF44A0(result, a3 & 1);
  result = sub_1B8D9708C(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1B8DFE108();
  __break(1u);
  return result;
}

void sub_1B8DF5544(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1B8D9708C(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1B8DED020();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_1B8DF4680(v13, a3 & 1);
  v18 = sub_1B8D9708C(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1B8DFE108();
  __break(1u);
}

uint64_t sub_1B8DF5678(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1B8D9708C(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = sub_1B8DFD748();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_1B8DF5DC0(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1B8DED1C0();
      goto LABEL_7;
    }
    sub_1B8DF485C(v13, a3 & 1);
    v20 = sub_1B8D9708C(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1B8DF5DC0(v10, a2, a1, v16);
    }
  }
  result = sub_1B8DFE108();
  __break(1u);
  return result;
}

uint64_t sub_1B8DF579C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1B8DF57B8(a1, a2, a3, (void (*)(void))sub_1B8DED3DC, &qword_1EF1E3FA0, (uint64_t *)&unk_1EF1E3FA8);
}

uint64_t sub_1B8DF57B8(uint64_t a1, uint64_t a2, char a3, void (*a4)(void), uint64_t *a5, uint64_t *a6)
{
  _QWORD *v6;
  _QWORD **v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  int v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  void (*v32)(void);
  uint64_t *v33;
  uint64_t v34;

  v32 = a4;
  v33 = a6;
  v8 = (_QWORD **)v6;
  v34 = a1;
  v11 = sub_1B8DFD784();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (_QWORD *)*v6;
  v17 = sub_1B8D96F80(a2);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = v15[3];
    if (v22 >= v20 && (a3 & 1) != 0)
    {
LABEL_7:
      v23 = a5;
      v24 = *v8;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v25 = v24[7];
        v26 = __swift_instantiateConcreteTypeFromMangledName(v23);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v17, v34, v26);
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a3 & 1) == 0)
    {
      v32();
      goto LABEL_7;
    }
    v28 = a3 & 1;
    v23 = a5;
    sub_1B8DF40A4(v20, v28, a5, v33);
    v29 = sub_1B8D96F80(a2);
    if ((v21 & 1) == (v30 & 1))
    {
      v17 = v29;
      v24 = *v8;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
      return sub_1B8DF5E4C(v17, (uint64_t)v14, v34, v24, v23);
    }
  }
  result = sub_1B8DFE108();
  __break(1u);
  return result;
}

void sub_1B8DF5964(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1B8D96EBC(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1B8DED6CC();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      sub_1B8DFD3AC();
      return;
    }
    goto LABEL_14;
  }
  sub_1B8DF4ABC(v15, a4 & 1);
  v20 = sub_1B8D96EBC(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1B8DFE108();
  __break(1u);
}

uint64_t sub_1B8DF5AC0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _OWORD v27[2];
  uint64_t v28;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1B8D96F20(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1B8DED87C();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1B8DF4DC8(v13, a3 & 1);
  v19 = sub_1B8D96F20(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_16:
    result = sub_1B8DFE108();
    __break(1u);
    return result;
  }
  v10 = v19;
  v16 = (_QWORD *)*v4;
  if ((v14 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  result = sub_1B8D9CFDC(a2, (uint64_t)v27);
  v16[(v10 >> 6) + 8] |= 1 << v10;
  v21 = v16[6] + 40 * v10;
  v22 = v28;
  v23 = v27[1];
  *(_OWORD *)v21 = v27[0];
  *(_OWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 32) = v22;
  *(_QWORD *)(v16[7] + 8 * v10) = a1;
  v24 = v16[2];
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (v25)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v16[2] = v26;
  return result;
}

unint64_t sub_1B8DF5C20(char a1, uint64_t a2, _QWORD *a3)
{
  unint64_t result;

  sub_1B8DFE15C();
  sub_1B8DFE180();
  sub_1B8DFE18C();
  result = sub_1B8DFDE98();
  *(_QWORD *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(_BYTE *)(a3[6] + result) = a1;
  *(_QWORD *)(a3[7] + 8 * result) = a2;
  ++a3[2];
  return result;
}

uint64_t sub_1B8DF5CD8(char a1, uint64_t a2, _QWORD *a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  sub_1B8DFE15C();
  sub_1B8DFE180();
  sub_1B8DFE18C();
  v6 = sub_1B8DFDE98();
  *(_QWORD *)((char *)a3 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
  *(_BYTE *)(a3[6] + v6) = a1;
  v7 = a3[7];
  v8 = sub_1B8DFD748();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v6, a2, v8);
  ++a3[2];
  return result;
}

uint64_t sub_1B8DF5DC0(unint64_t a1, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  v7 = a4[7];
  v8 = sub_1B8DFD748();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_1B8DF5E4C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a4[6];
  v11 = sub_1B8DFD784();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a2, v11);
  v12 = a4[7];
  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * a1, a3, v13);
  v15 = a4[2];
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    a4[2] = v17;
  return result;
}

unint64_t sub_1B8DF5F08(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_1B8DF5F50(unint64_t a1)
{
  return sub_1B8D96A20(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_1B8DF5F64(_QWORD *a1)
{
  return sub_1B8D96D34(0, a1[2], 0, a1);
}

uint64_t sub_1B8DF5F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *i;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v5 = 0;
    for (i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      if (*(i - 1))
      {
        v7 = *i;
        ObjectType = swift_getObjectType();
        v9 = *(_QWORD *)(v7 + 8);
        v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
        swift_unknownObjectRetain_n();
        v11 = v10(ObjectType, v9);
        v13 = v12;
        v14 = swift_getObjectType();
        if (v11 == (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a3 + 8) + 8))(v14) && v13 == v15)
        {
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease_n();
          return v5;
        }
        v17 = sub_1B8DFE0D8();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v17 & 1) != 0)
          return v5;
      }
      if (v3 == ++v5)
        return 0;
    }
  }
  return 0;
}

uint64_t sub_1B8DF60D8(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1B8D96D34(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED36EBA0);
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (_QWORD *)&v16[16 * v15])
      result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_1B8DFDFF4();
  __break(1u);
  return result;
}

uint64_t sub_1B8DF6248()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_1B8DF6254()
{
  uint64_t *v0;

  return sub_1B8DF1E88(v0[2], v0[3], v0[4], (uint64_t)(v0 + 5), sub_1B8DF1470);
}

uint64_t sub_1B8DF627C()
{
  return swift_deallocObject();
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return swift_deallocObject();
}

uint64_t sub_1B8DF62C4()
{
  uint64_t *v0;

  return sub_1B8DF1E88(v0[2], v0[3], v0[4], (uint64_t)(v0 + 5), (void (*)(uint64_t, uint64_t, uint64_t))sub_1B8DF17D0);
}

uint64_t sub_1B8DF62EC()
{
  return swift_deallocObject();
}

uint64_t type metadata accessor for ObservableStore()
{
  return objc_opt_self();
}

uint64_t sub_1B8DF631C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1B8DF6388()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80);
  return sub_1B8DF2414(*(uint64_t **)(v0 + 32), v0 + ((v1 + 40) & ~v1));
}

uint64_t sub_1B8DF63A8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8DF63B8()
{
  uint64_t v0;

  return sub_1B8DF2CE0(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1B8DF63D0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_1B8DF2DD4(v1, a1);
}

uint64_t sub_1B8DF63E8()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1B8DF6414()
{
  uint64_t v0;

  return sub_1B8DF3158(*(char **)(v0 + 16), v0 + 24);
}

uint64_t sub_1B8DF6420()
{
  return swift_deallocObject();
}

uint64_t sub_1B8DF6430(uint64_t a1)
{
  return sub_1B8DF2F74(a1);
}

uint64_t sub_1B8DF6454()
{
  return MEMORY[0x1E0DEA978];
}

uint64_t dispatch thunk of ObserverIdentifiable.observerId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DataStoreObserver.dataStoreDidUpdate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of DataStoreObserver.dataStoreDidRemove(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t method lookup function for ObservableStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ObservableStore.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of ObservableStore.registerObserver(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ObservableStore.deregisterObserver(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t sub_1B8DF64A4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DataStore(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DataStore);
}

uint64_t method lookup function for DataStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DataStore.registerObserver(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DataStore.deregisterObserver(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DataStore.__allocating_init(identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of DataStore.updateEntry(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DataStore.getEntry(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of DataStore.getCurrentEntry()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DataStore.clear(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of DataStore.clear()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t sub_1B8DF6588()
{
  return sub_1B8DF6650((uint64_t (*)(_QWORD, _QWORD, char *))sub_1B8DF3848);
}

uint64_t sub_1B8DF6594(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1BCCBD0FC](MEMORY[0x1E0DEAF38], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_35Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1B8DF6644()
{
  return sub_1B8DF6650((uint64_t (*)(_QWORD, _QWORD, char *))sub_1B8DF2B48);
}

uint64_t sub_1B8DF6650(uint64_t (*a1)(_QWORD, _QWORD, char *))
{
  char *v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(*((_QWORD *)v1 + 2) - 8) + 80);
  return a1(*((_QWORD *)v1 + 4), *((_QWORD *)v1 + 5), &v1[(v2 + 48) & ~v2]);
}

unint64_t sub_1B8DF66A0()
{
  unint64_t result;

  result = qword_1EF1E4240;
  if (!qword_1EF1E4240)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E051E0, &type metadata for ResumeTimerIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E4240);
  }
  return result;
}

unint64_t sub_1B8DF66E8()
{
  unint64_t result;

  result = qword_1EF1E4248;
  if (!qword_1EF1E4248)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E05208, &type metadata for ResumeTimerIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E4248);
  }
  return result;
}

uint64_t sub_1B8DF672C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8DF673C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8DF674C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1B8DFD640();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v5);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0CAF9B8], v1);
  return sub_1B8DFD664();
}

uint64_t sub_1B8DF68A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFD640();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v18 = sub_1B8DFD658();
  v11 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v12 = *MEMORY[0x1E0CAF9B8];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v13(v7, v12, v4);
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v13(v7, v12, v4);
  sub_1B8DFD664();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v3, 0, 1, v18);
  v14 = v19;
  sub_1B8DFD310();
  v15 = sub_1B8DFD304();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
}

uint64_t sub_1B8DF6B50()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4270);
  MEMORY[0x1E0C80A78](v0);
  sub_1B8DE2418();
  sub_1B8DFD400();
  return sub_1B8DFD3C4();
}

uint64_t sub_1B8DF6C14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1B8DF6C2C()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;

  v1 = objc_msgSend(*(id *)(v0 + 24), sel_timersSync);
  if (!v1)
    goto LABEL_14;
  sub_1B8DE72A4();
  v2 = sub_1B8DFDC64();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1B8DFD3AC();
    if (v3)
      goto LABEL_4;
LABEL_11:
    swift_bridgeObjectRelease_n();
    v1 = 0;
    goto LABEL_14;
  }
LABEL_16:
  sub_1B8DFD3AC();
  v3 = sub_1B8DFDFB8();
  if (!v3)
    goto LABEL_11;
LABEL_4:
  v4 = 0;
  while (1)
  {
    if ((v2 & 0xC000000000000001) != 0)
      v5 = (id)MEMORY[0x1BCCBC814](v4, v2);
    else
      v5 = *(id *)(v2 + 8 * v4 + 32);
    v1 = v5;
    v6 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_16;
    }
    if (objc_msgSend(v5, sel_state) == (id)2)
      break;

    ++v4;
    if (v6 == v3)
      goto LABEL_11;
  }
  swift_bridgeObjectRelease_n();
  v7 = objc_msgSend(v1, sel_timerByUpdatingWithState_, 3);
  if (v7)
  {
    v8 = v7;

  }
LABEL_14:
  sub_1B8DFD0DC();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DF6DD0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1B8D85A48;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_1B8DF6E34()
{
  sub_1B8DE2418();
  return sub_1B8DFD07C();
}

ValueMetadata *type metadata accessor for ResumeTimerIntent()
{
  return &type metadata for ResumeTimerIntent;
}

uint64_t sub_1B8DF6E6C()
{
  return sub_1B8D87FFC(&qword_1EF1E4258, &qword_1EF1E4260, MEMORY[0x1E0C916B0]);
}

uint64_t sub_1B8DF6E98@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  return sub_1B8DF6F08(a1, a2, a3, a4, (uint64_t)&unk_1E6F2F7F0, a5, (uint64_t)sub_1B8DF8E80);
}

uint64_t sub_1B8DF6ED0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  return sub_1B8DF6F08(a1, a2, a3, a4, (uint64_t)&unk_1E6F2F7A0, a5, (uint64_t)sub_1B8DF8E3C);
}

uint64_t sub_1B8DF6F08@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X7>, uint64_t *a6@<X8>, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v23[2] = a5;
  v24 = a1;
  v25 = a3;
  v26 = a7;
  v10 = sub_1B8DFDDFC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v15 = (void *)sub_1B8DFDB5C();
  sub_1B8DFDE08();

  v16 = swift_allocObject();
  swift_weakInit();
  v17 = (_QWORD *)swift_allocObject();
  v18 = v24;
  v17[2] = v16;
  v17[3] = v18;
  v19 = v25;
  v17[4] = a2;
  v17[5] = v19;
  v17[6] = a4;
  sub_1B8DF8BD8();
  sub_1B8DFD3AC();
  sub_1B8DFD22C();
  v20 = sub_1B8DFD9E8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  result = sub_1B8DFD9C4();
  v22 = MEMORY[0x1E0C95DF8];
  a6[3] = result;
  a6[4] = v22;
  *a6 = v20;
  return result;
}

uint64_t sub_1B8DF709C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  return sub_1B8DF6F08(a1, a2, a3, a4, (uint64_t)&unk_1E6F2F750, a5, (uint64_t)sub_1B8DF8E28);
}

uint64_t sub_1B8DF70D4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a1;
  v22 = a3;
  v8 = sub_1B8DFDDFC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v13 = (void *)sub_1B8DFDB5C();
  sub_1B8DFDE08();

  v14 = swift_allocObject();
  swift_weakInit();
  v15 = (_QWORD *)swift_allocObject();
  v16 = v21;
  v15[2] = v14;
  v15[3] = v16;
  v17 = v22;
  v15[4] = a2;
  v15[5] = v17;
  v15[6] = a4;
  sub_1B8DF8BD8();
  sub_1B8DFD3AC();
  sub_1B8DFD22C();
  v18 = sub_1B8DFD9E8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  result = sub_1B8DFD9C4();
  v20 = MEMORY[0x1E0C95DF8];
  a5[3] = result;
  a5[4] = v20;
  *a5 = v18;
  return result;
}

uint64_t sub_1B8DF7268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6, uint64_t *a7)
{
  uint64_t result;
  uint64_t v13;
  uint64_t v14;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = sub_1B8DF8D20(a3, a4, a1, a7);
    result = swift_release();
    if (v13)
    {
      v14 = v13;
      a5(&v14);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1B8DF7318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void **))
{
  void *v8;
  void *v9;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v8 = (void *)sub_1B8DF8C20(a3, a4);
    swift_release();
    if (v8)
    {
      v9 = v8;
      a5(&v9);

    }
  }
}

id AlarmsViewModel.manager.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 152);
}

uint64_t sub_1B8DF73BC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 160) = v2;
  sub_1B8DFD3AC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8DF7418()
{
  swift_beginAccess();
  return sub_1B8DFD3AC();
}

uint64_t sub_1B8DF744C(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 160) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B8DF7490())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t AlarmsViewModel.__allocating_init(manager:delegate:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 144) = 0;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_QWORD *)(v5 + 128) = 0;
  swift_unknownObjectWeakInit();
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v5 + 152) = a1;
  *(_QWORD *)(v5 + 160) = v6;
  *(_QWORD *)(v5 + 144) = a3;
  swift_unknownObjectWeakAssign();
  v7 = a1;
  sub_1B8DF8184();
  sub_1B8DF82B0();
  sub_1B8DF83DC();
  swift_unknownObjectRelease();

  return v5;
}

uint64_t AlarmsViewModel.init(manager:delegate:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  id v7;

  *(_QWORD *)(v3 + 144) = 0;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  swift_unknownObjectWeakInit();
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v3 + 152) = a1;
  *(_QWORD *)(v3 + 160) = v6;
  *(_QWORD *)(v3 + 144) = a3;
  swift_unknownObjectWeakAssign();
  v7 = a1;
  sub_1B8DF8184();
  sub_1B8DF82B0();
  sub_1B8DF83DC();

  swift_unknownObjectRelease();
  return v3;
}

Swift::Void __swiftcall AlarmsViewModel.registerPublishers()()
{
  sub_1B8DF8184();
  sub_1B8DF82B0();
  sub_1B8DF83DC();
}

uint64_t sub_1B8DF7618(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 144) = a2;
  return swift_unknownObjectWeakAssign();
}

uint64_t AlarmsViewModel.deinit()
{
  uint64_t v0;

  AlarmsViewModel.unregisterPublishers()();
  sub_1B8D9D154(v0 + 16, &qword_1ED36F568);
  sub_1B8D9D154(v0 + 56, &qword_1ED36F568);
  sub_1B8D9D154(v0 + 96, &qword_1ED36F568);
  sub_1B8DA7528(v0 + 136);

  swift_bridgeObjectRelease();
  return v0;
}

Swift::Void __swiftcall AlarmsViewModel.unregisterPublishers()()
{
  uint64_t v0;
  _QWORD v1[3];
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;

  swift_beginAccess();
  sub_1B8DA0908(v0 + 16, (uint64_t)&v3);
  if (*((_QWORD *)&v4 + 1))
  {
    sub_1B8DA0950((uint64_t)&v3, (uint64_t)v1);
    sub_1B8D9D154((uint64_t)&v3, &qword_1ED36F568);
    __swift_project_boxed_opaque_existential_1(v1, v2);
    sub_1B8DFD9AC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  }
  else
  {
    sub_1B8D9D154((uint64_t)&v3, &qword_1ED36F568);
  }
  v5 = 0;
  v3 = 0u;
  v4 = 0u;
  swift_beginAccess();
  sub_1B8DA766C((uint64_t)&v3, v0 + 16);
  swift_endAccess();
  swift_beginAccess();
  sub_1B8DA0908(v0 + 56, (uint64_t)&v3);
  if (*((_QWORD *)&v4 + 1))
  {
    sub_1B8DA0950((uint64_t)&v3, (uint64_t)v1);
    sub_1B8D9D154((uint64_t)&v3, &qword_1ED36F568);
    __swift_project_boxed_opaque_existential_1(v1, v2);
    sub_1B8DFD9AC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  }
  else
  {
    sub_1B8D9D154((uint64_t)&v3, &qword_1ED36F568);
  }
  v5 = 0;
  v3 = 0u;
  v4 = 0u;
  swift_beginAccess();
  sub_1B8DA766C((uint64_t)&v3, v0 + 56);
  swift_endAccess();
  swift_beginAccess();
  sub_1B8DA0908(v0 + 96, (uint64_t)&v3);
  if (*((_QWORD *)&v4 + 1))
  {
    sub_1B8DA0950((uint64_t)&v3, (uint64_t)v1);
    sub_1B8D9D154((uint64_t)&v3, &qword_1ED36F568);
    __swift_project_boxed_opaque_existential_1(v1, v2);
    sub_1B8DFD9AC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  }
  else
  {
    sub_1B8D9D154((uint64_t)&v3, &qword_1ED36F568);
  }
  v5 = 0;
  v3 = 0u;
  v4 = 0u;
  swift_beginAccess();
  sub_1B8DA766C((uint64_t)&v3, v0 + 96);
  swift_endAccess();
}

uint64_t AlarmsViewModel.__deallocating_deinit()
{
  uint64_t v0;

  AlarmsViewModel.unregisterPublishers()();
  sub_1B8D9D154(v0 + 16, &qword_1ED36F568);
  sub_1B8D9D154(v0 + 56, &qword_1ED36F568);
  sub_1B8D9D154(v0 + 96, &qword_1ED36F568);
  sub_1B8DA7528(v0 + 136);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1B8DF7958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36F320);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8DFDD00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = v0;
  sub_1B8DFD22C();
  sub_1B8DE775C((uint64_t)v3, (uint64_t)&unk_1EF1E4280, (uint64_t)v5);
  swift_release();
  return sub_1B8D9D154((uint64_t)v3, &qword_1ED36F320);
}

uint64_t sub_1B8DF7A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 48) = a4;
  return swift_task_switch();
}

uint64_t sub_1B8DF7A40()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E4290);
  *v1 = v0;
  v1[1] = sub_1B8DF7AD0;
  return sub_1B8DFE0F0();
}

uint64_t sub_1B8DF7AD0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8DF7B34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  swift_beginAccess();
  *(_QWORD *)(v2 + 160) = v1;
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DF7B80()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DF7BB0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_1B8DF7BC8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF1E4290);
  *v1 = v0;
  v1[1] = sub_1B8DF7C58;
  return sub_1B8DFE0F0();
}

uint64_t sub_1B8DF7C58()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8DF7CBC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1B8DF7CC8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1B8DF7CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4440);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = objc_msgSend(*(id *)(a2 + 152), sel_alarms, MEMORY[0x1E0C80A78](v4).n128_f64[0]);
  if (v7)
  {
    v8 = v7;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v10 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    aBlock[4] = sub_1B8DF88A8;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1B8DB2C40;
    aBlock[3] = &block_descriptor_16;
    v11 = _Block_copy(aBlock);
    v12 = v8;
    swift_release();
    v13 = objc_msgSend(v12, sel_addCompletionBlock_, v11);

    _Block_release(v11);
  }
}

uint64_t sub_1B8DF7E48(uint64_t a1, id a2)
{
  id v2;

  if (a2)
  {
    v2 = a2;
  }
  else
  {
    if (a1)
    {
      sub_1B8D9E394(0, (unint64_t *)&qword_1EF1E1D18);
      sub_1B8DFDC58();
    }
    sub_1B8DF88F8();
    swift_allocError();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4440);
  return sub_1B8DFDCC4();
}

uint64_t sub_1B8DF7F14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1B8DF7F2C()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = objc_msgSend(*(id *)(v0[3] + 152), sel_addAlarm_, v0[2]);
  v0[4] = v1;
  v2 = swift_task_alloc();
  v0[5] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[6] = v3;
  *v3 = v0;
  v3[1] = sub_1B8DE4868;
  return sub_1B8DFE0F0();
}

uint64_t sub_1B8DF7FE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1B8DF7FFC()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = objc_msgSend(*(id *)(v0[3] + 152), sel_updateAlarm_, v0[2]);
  v0[4] = v1;
  v2 = swift_task_alloc();
  v0[5] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[6] = v3;
  *v3 = v0;
  v3[1] = sub_1B8DE4A20;
  return sub_1B8DFE0F0();
}

uint64_t sub_1B8DF80B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1B8DF80CC()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = objc_msgSend(*(id *)(v0[3] + 152), sel_removeAlarm_, v0[2]);
  v0[4] = v1;
  v2 = swift_task_alloc();
  v0[5] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[6] = v3;
  *v3 = v0;
  v3[1] = sub_1B8DE4A20;
  return sub_1B8DFE0F0();
}

uint64_t sub_1B8DF8184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7[5];

  swift_beginAccess();
  sub_1B8DA0908(v0 + 16, (uint64_t)v7);
  v1 = v7[3];
  result = sub_1B8D9D154((uint64_t)v7, &qword_1ED36F568);
  if (!v1)
  {
    sub_1B8DFDB68();
    v3 = sub_1B8DFDB68();
    v5 = v4;
    v6 = swift_allocObject();
    swift_weakInit();
    sub_1B8DF70D4(v3, v5, (uint64_t)sub_1B8DF8E1C, v6, v7);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_1B8DA766C((uint64_t)v7, v0 + 16);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1B8DF82B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7[5];

  swift_beginAccess();
  sub_1B8DA0908(v0 + 56, (uint64_t)v7);
  v1 = v7[3];
  result = sub_1B8D9D154((uint64_t)v7, &qword_1ED36F568);
  if (!v1)
  {
    sub_1B8DFDB68();
    v3 = sub_1B8DFDB68();
    v5 = v4;
    v6 = swift_allocObject();
    swift_weakInit();
    sub_1B8DF70D4(v3, v5, (uint64_t)sub_1B8DF8E14, v6, v7);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_1B8DA766C((uint64_t)v7, v0 + 56);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1B8DF83DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7[5];

  swift_beginAccess();
  sub_1B8DA0908(v0 + 96, (uint64_t)v7);
  v1 = v7[3];
  result = sub_1B8D9D154((uint64_t)v7, &qword_1ED36F568);
  if (!v1)
  {
    sub_1B8DFDB68();
    v3 = sub_1B8DFDB68();
    v5 = v4;
    v6 = swift_allocObject();
    swift_weakInit();
    sub_1B8DF70D4(v3, v5, (uint64_t)sub_1B8DF8BC0, v6, v7);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_1B8DA766C((uint64_t)v7, v0 + 96);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1B8DF8508()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B8DF8534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B8D85A48;
  v3[6] = v2;
  return swift_task_switch();
}

void sub_1B8DF8594(uint64_t a1)
{
  uint64_t v1;

  sub_1B8DF7CD4(a1, v1);
}

uint64_t sub_1B8DF859C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 160);
  return sub_1B8DFD3AC();
}

uint64_t dispatch thunk of AlarmViewModelDelegate.didUpdateAlarms(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of AlarmViewModelDelegate.didFireAlarm(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of AlarmViewModelDelegate.didDeleteAlarms(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for AlarmsViewModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for AlarmsViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AlarmsViewModel.alarms.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of AlarmsViewModel.alarms.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of AlarmsViewModel.alarms.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of AlarmsViewModel.__allocating_init(manager:delegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of AlarmsViewModel.updateDelegate(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of AlarmsViewModel.fetchAlarms()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of AlarmsViewModel.fetchAlarmsFromServer()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 272) + *(_QWORD *)(*(_QWORD *)v0 + 272));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1B8DF86C8;
  return v4();
}

uint64_t sub_1B8DF86C8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of AlarmsViewModel.createAlarm(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 280) + *(_QWORD *)(*(_QWORD *)v1 + 280));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1B8D85A48;
  return v6(a1);
}

uint64_t dispatch thunk of AlarmsViewModel.updateAlarm(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 288) + *(_QWORD *)(*(_QWORD *)v1 + 288));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1B8D9D2E0;
  return v6(a1);
}

uint64_t dispatch thunk of AlarmsViewModel.deleteAlarm(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 296) + *(_QWORD *)(*(_QWORD *)v1 + 296));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1B8D9D2E0;
  return v6(a1);
}

uint64_t sub_1B8DF8844()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4440);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1B8DF88A8(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4440);
  return sub_1B8DF7E48(a1, a2);
}

unint64_t sub_1B8DF88F8()
{
  unint64_t result;

  result = qword_1EF1E4448;
  if (!qword_1EF1E4448)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E0539C, &type metadata for AlarmsViewModel.AlarmViewModelError);
    atomic_store(result, (unint64_t *)&qword_1EF1E4448);
  }
  return result;
}

uint64_t sub_1B8DF893C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B8DF8960(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    v4 = MEMORY[0x1BCCBD264](result + 136);
    v5 = *(_QWORD *)(v3 + 144);
    result = swift_release();
    if (v4)
    {
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(v1, ObjectType, v5);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_1B8DF89F4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v1 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1B8DFD3AC();
    if (v2)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  sub_1B8DFD3AC();
  if (!sub_1B8DFDFB8())
    goto LABEL_12;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v3 = (id)MEMORY[0x1BCCBC814](0, v1);
  }
  else
  {
    if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v3 = *(id *)(v1 + 32);
  }
  v4 = v3;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong && (v6 = Strong, v7 = MEMORY[0x1BCCBD264](Strong + 136), v8 = *(_QWORD *)(v6 + 144), swift_release(), v7))
  {
    ObjectType = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t))(v8 + 16))(v4, ObjectType, v8);

    swift_unknownObjectRelease();
  }
  else
  {

  }
}

uint64_t sub_1B8DF8B2C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    v4 = MEMORY[0x1BCCBD264](result + 136);
    v5 = *(_QWORD *)(v3 + 144);
    result = swift_release();
    if (v4)
    {
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v1, ObjectType, v5);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1B8DF8BC0(uint64_t *a1)
{
  return sub_1B8DF8B2C(a1);
}

uint64_t sub_1B8DF8BCC(uint64_t a1)
{
  return sub_1B8DF8E8C(a1, qword_1EF1E4290);
}

unint64_t sub_1B8DF8BD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED36F580;
  if (!qword_1ED36F580)
  {
    v1 = sub_1B8DFDDFC();
    result = MEMORY[0x1BCCBD0FC](MEMORY[0x1E0CB1F20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED36F580);
  }
  return result;
}

uint64_t sub_1B8DF8C20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  _QWORD v9[5];
  __int128 v10;
  __int128 v11;

  v4 = sub_1B8DFD55C();
  if (v4)
  {
    v5 = v4;
    *(_QWORD *)&v10 = a1;
    *((_QWORD *)&v10 + 1) = a2;
    sub_1B8DFD3AC();
    sub_1B8DFDEC8();
    if (*(_QWORD *)(v5 + 16) && (v6 = sub_1B8D96F20((uint64_t)v9), (v7 & 1) != 0))
    {
      sub_1B8DA76FC(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)&v10);
    }
    else
    {
      v10 = 0u;
      v11 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1B8D9D018((uint64_t)v9);
  }
  else
  {
    v10 = 0u;
    v11 = 0u;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F1C0);
  sub_1B8D9E394(0, (unint64_t *)&qword_1EF1E3A20);
  if (swift_dynamicCast())
    return v9[0];
  else
    return 0;
}

uint64_t sub_1B8DF8D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  _QWORD v12[5];
  __int128 v13;
  __int128 v14;

  v7 = sub_1B8DFD55C();
  if (v7)
  {
    v8 = v7;
    *(_QWORD *)&v13 = a1;
    *((_QWORD *)&v13 + 1) = a2;
    sub_1B8DFD3AC();
    sub_1B8DFDEC8();
    if (*(_QWORD *)(v8 + 16) && (v9 = sub_1B8D96F20((uint64_t)v12), (v10 & 1) != 0))
    {
      sub_1B8DA76FC(*(_QWORD *)(v8 + 56) + 32 * v9, (uint64_t)&v13);
    }
    else
    {
      v13 = 0u;
      v14 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1B8D9D018((uint64_t)v12);
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36F1C0);
  __swift_instantiateConcreteTypeFromMangledName(a4);
  if (swift_dynamicCast())
    return v12[0];
  else
    return 0;
}

void sub_1B8DF8E14(uint64_t *a1)
{
  sub_1B8DF89F4(a1);
}

uint64_t sub_1B8DF8E1C(uint64_t *a1)
{
  return sub_1B8DF8960(a1);
}

void sub_1B8DF8E28(uint64_t a1)
{
  uint64_t v1;

  sub_1B8DF7318(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(void **))(v1 + 40));
}

uint64_t sub_1B8DF8E3C(uint64_t a1)
{
  return sub_1B8DF8E8C(a1, &qword_1EF1E3A28);
}

uint64_t objectdestroy_28Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B8DF8E80(uint64_t a1)
{
  return sub_1B8DF8E8C(a1, &qword_1EF1E3A18);
}

uint64_t sub_1B8DF8E8C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_1B8DF7268(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void (**)(uint64_t *))(v2 + 40), *(_QWORD *)(v2 + 48), a2);
}

uint64_t storeEnumTagSinglePayload for AlarmsViewModel.AlarmViewModelError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B8DF8EF0 + 4 * asc_1B8E05270[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B8DF8F10 + 4 * byte_1B8E05275[v4]))();
}

_BYTE *sub_1B8DF8EF0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B8DF8F10(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B8DF8F18(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B8DF8F20(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B8DF8F28(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B8DF8F30(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AlarmsViewModel.AlarmViewModelError()
{
  return &type metadata for AlarmsViewModel.AlarmViewModelError;
}

unint64_t sub_1B8DF8F50()
{
  unint64_t result;

  result = qword_1EF1E4450;
  if (!qword_1EF1E4450)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E05374, &type metadata for AlarmsViewModel.AlarmViewModelError);
    atomic_store(result, (unint64_t *)&qword_1EF1E4450);
  }
  return result;
}

uint64_t sub_1B8DF8FA4()
{
  sub_1B8DFE15C();
  sub_1B8DFDBA4();
  swift_bridgeObjectRelease();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8DF900C()
{
  sub_1B8DFE15C();
  sub_1B8DFE180();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8DF905C()
{
  sub_1B8DFE15C();
  sub_1B8DFDBA4();
  swift_bridgeObjectRelease();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8DF90E4()
{
  sub_1B8DFE15C();
  sub_1B8DFDBA4();
  swift_bridgeObjectRelease();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8DF914C()
{
  sub_1B8DFE15C();
  sub_1B8DFDBA4();
  swift_bridgeObjectRelease();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8DF91D8()
{
  sub_1B8DFE15C();
  sub_1B8DFDBA4();
  swift_bridgeObjectRelease();
  return sub_1B8DFE18C();
}

uint64_t sub_1B8DF924C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];

  v0 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v1);
  v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1B8DFD640();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1B8DFD658();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CAF9B8], v4);
  sub_1B8DFD664();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v3, 1, 1, v9);
  return sub_1B8DFD460();
}

uint64_t sub_1B8DF9444(char a1)
{
  if ((a1 & 1) != 0)
    return 0x656C67676F74;
  else
    return 1852994932;
}

uint64_t sub_1B8DF9470(char *a1, char *a2)
{
  return sub_1B8DB3484(*a1, *a2);
}

unint64_t sub_1B8DF9480()
{
  unint64_t result;

  result = qword_1EF1E4458;
  if (!qword_1EF1E4458)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E053EC, &type metadata for ToggleAlarmIntent.Operation);
    atomic_store(result, (unint64_t *)&qword_1EF1E4458);
  }
  return result;
}

uint64_t sub_1B8DF94C4()
{
  return sub_1B8DF91D8();
}

uint64_t sub_1B8DF94CC()
{
  return sub_1B8DB376C();
}

uint64_t sub_1B8DF94D4()
{
  return sub_1B8DF12AC();
}

uint64_t sub_1B8DF94DC@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1B8DFE00C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1B8DF9538@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B8DF9444(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1B8DF9564()
{
  unint64_t result;

  result = qword_1EF1E4460;
  if (!qword_1EF1E4460)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E054CC, &type metadata for ToggleAlarmIntent.Operation);
    atomic_store(result, (unint64_t *)&qword_1EF1E4460);
  }
  return result;
}

unint64_t sub_1B8DF95AC()
{
  unint64_t result;

  result = qword_1EF1E4468;
  if (!qword_1EF1E4468)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E05504, &type metadata for ToggleAlarmIntent.Operation);
    atomic_store(result, (unint64_t *)&qword_1EF1E4468);
  }
  return result;
}

unint64_t sub_1B8DF95F4()
{
  unint64_t result;

  result = qword_1EF1E4470;
  if (!qword_1EF1E4470)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E05454, &type metadata for ToggleAlarmIntent.Operation);
    atomic_store(result, (unint64_t *)&qword_1EF1E4470);
  }
  return result;
}

unint64_t sub_1B8DF963C()
{
  unint64_t result;

  result = qword_1EF1E4478;
  if (!qword_1EF1E4478)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E05534, &type metadata for ToggleAlarmIntent.Operation);
    atomic_store(result, (unint64_t *)&qword_1EF1E4478);
  }
  return result;
}

unint64_t sub_1B8DF9684()
{
  unint64_t result;

  result = qword_1EF1E4480;
  if (!qword_1EF1E4480)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E0555C, &type metadata for ToggleAlarmIntent.Operation);
    atomic_store(result, (unint64_t *)&qword_1EF1E4480);
  }
  return result;
}

unint64_t sub_1B8DF96CC()
{
  unint64_t result;

  result = qword_1EF1E4488;
  if (!qword_1EF1E4488)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E05584, &type metadata for ToggleAlarmIntent.Operation);
    atomic_store(result, (unint64_t *)&qword_1EF1E4488);
  }
  return result;
}

unint64_t sub_1B8DF9714()
{
  unint64_t result;

  result = qword_1EF1E4490;
  if (!qword_1EF1E4490)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E055DC, &type metadata for ToggleAlarmIntent.Operation);
    atomic_store(result, (unint64_t *)&qword_1EF1E4490);
  }
  return result;
}

uint64_t sub_1B8DF975C()
{
  sub_1B8DF979C();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B8DF979C()
{
  unint64_t result;

  result = qword_1EF1E4498;
  if (!qword_1EF1E4498)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E0548C, &type metadata for ToggleAlarmIntent.Operation);
    atomic_store(result, (unint64_t *)&qword_1EF1E4498);
  }
  return result;
}

uint64_t sub_1B8DF97E0()
{
  sub_1B8DF979C();
  return sub_1B8DFD034();
}

unint64_t sub_1B8DF981C()
{
  unint64_t result;

  result = qword_1EF1E44A0;
  if (!qword_1EF1E44A0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E0561C, &type metadata for ToggleAlarmIntent.Operation);
    atomic_store(result, (unint64_t *)&qword_1EF1E44A0);
  }
  return result;
}

unint64_t sub_1B8DF9864()
{
  unint64_t result;

  result = qword_1EF1E44A8;
  if (!qword_1EF1E44A8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E05644, &type metadata for ToggleAlarmIntent.Operation);
    atomic_store(result, (unint64_t *)&qword_1EF1E44A8);
  }
  return result;
}

unint64_t sub_1B8DF98AC()
{
  unint64_t result;

  result = qword_1EF1E44B0;
  if (!qword_1EF1E44B0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E05414, &type metadata for ToggleAlarmIntent.Operation);
    atomic_store(result, (unint64_t *)&qword_1EF1E44B0);
  }
  return result;
}

uint64_t sub_1B8DF98F4()
{
  sub_1B8DF9714();
  return sub_1B8DFD43C();
}

uint64_t sub_1B8DF992C()
{
  return sub_1B8D87FFC(&qword_1EF1E44B8, &qword_1EF1E44C0, MEMORY[0x1E0DEAF50]);
}

void sub_1B8DF9958(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6F29770;
}

unint64_t sub_1B8DF996C()
{
  unint64_t result;

  result = qword_1EF1E44C8;
  if (!qword_1EF1E44C8)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E0570C, &type metadata for ToggleAlarmIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E44C8);
  }
  return result;
}

unint64_t sub_1B8DF99B4()
{
  unint64_t result;

  result = qword_1EF1E44D0;
  if (!qword_1EF1E44D0)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E05734, &type metadata for ToggleAlarmIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E44D0);
  }
  return result;
}

uint64_t sub_1B8DF99F8()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1B8DF9A1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8DF9A2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1B8DFD640();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v5);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0CAF9B8], v1);
  return sub_1B8DFD664();
}

uint64_t sub_1B8DF9B80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;
  uint64_t v20;

  v20 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v1);
  v19 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1B8DFD640();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1B8DFD658();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v12 = *MEMORY[0x1E0CAF9B8];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v13(v6, v12, v3);
  sub_1B8DFD664();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v13(v6, v12, v3);
  v14 = v19;
  sub_1B8DFD664();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1110);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1B8E00210;
  sub_1B8DFD634();
  sub_1B8DFD634();
  v15 = v20;
  sub_1B8DFD310();
  v16 = sub_1B8DFD304();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 0, 1, v16);
}

uint64_t sub_1B8DF9EA8()
{
  return sub_1B8DFD190();
}

uint64_t sub_1B8DF9EC8()
{
  return sub_1B8DFD190();
}

uint64_t sub_1B8DF9EE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  void (*v18)(char *, uint64_t);
  _QWORD v20[3];
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v26 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4548);
  v2 = *(_QWORD *)(v1 - 8);
  v24 = v1;
  v25 = v2;
  MEMORY[0x1E0C80A78](v1);
  v22 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v23 = (char *)v20 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4550);
  v21 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v20 - v10;
  v27 = 0;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4558);
  sub_1B8DFBBA8();
  sub_1B8DF96CC();
  sub_1B8D87FFC(&qword_1EF1E4560, &qword_1EF1E4558, MEMORY[0x1E0C916B0]);
  v20[1] = v12;
  sub_1B8DFD4D8();
  v20[2] = sub_1B8D87FFC(&qword_1EF1E4568, &qword_1EF1E4550, MEMORY[0x1E0C91B38]);
  v13 = v11;
  sub_1B8DFD484();
  v21 = *(_QWORD *)(v21 + 8);
  ((void (*)(char *, uint64_t))v21)(v8, v6);
  v14 = v22;
  sub_1B8DFD508();
  sub_1B8D87FFC(&qword_1EF1E4570, &qword_1EF1E4548, MEMORY[0x1E0C91C18]);
  v16 = v23;
  v15 = v24;
  v17 = v14;
  sub_1B8DFD484();
  v18 = *(void (**)(char *, uint64_t))(v25 + 8);
  v18(v17, v15);
  sub_1B8DFD478();
  v18(v16, v15);
  return ((uint64_t (*)(char *, uint64_t))v21)(v13, v6);
}

uint64_t sub_1B8DFA198@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t);
  _QWORD v12[2];

  v12[1] = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4578);
  MEMORY[0x1E0C80A78](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4580);
  MEMORY[0x1E0C80A78](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4558);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v12 - v8;
  sub_1B8DFBBA8();
  sub_1B8DFD3F4();
  sub_1B8DFD3E8();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4588);
  sub_1B8DFD3DC();
  swift_release();
  sub_1B8DFD3E8();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4590);
  sub_1B8DFD3DC();
  swift_release();
  sub_1B8DFD3E8();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4598);
  sub_1B8DFD3DC();
  swift_release();
  sub_1B8DFD3E8();
  sub_1B8DFD40C();
  sub_1B8DFD3C4();
  sub_1B8D87FFC(&qword_1EF1E4560, &qword_1EF1E4558, MEMORY[0x1E0C916B0]);
  sub_1B8DFD424();
  v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v6, v3);
  sub_1B8DFD424();
  return ((uint64_t (*)(char *, uint64_t))v10)(v9, v3);
}

uint64_t sub_1B8DFA464@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t);
  _QWORD v12[2];

  v12[1] = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4578);
  MEMORY[0x1E0C80A78](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4580);
  MEMORY[0x1E0C80A78](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4558);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v12 - v8;
  sub_1B8DFBBA8();
  sub_1B8DFD3F4();
  sub_1B8DFD3E8();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4588);
  sub_1B8DFD3DC();
  swift_release();
  sub_1B8DFD3E8();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4590);
  sub_1B8DFD3DC();
  swift_release();
  sub_1B8DFD3E8();
  sub_1B8DFD40C();
  sub_1B8DFD3C4();
  sub_1B8D87FFC(&qword_1EF1E4560, &qword_1EF1E4558, MEMORY[0x1E0C916B0]);
  sub_1B8DFD424();
  v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v6, v3);
  sub_1B8DFD424();
  return ((uint64_t (*)(char *, uint64_t))v10)(v9, v3);
}

uint64_t sub_1B8DFA6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  v4[12] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10D8);
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  sub_1B8DFDB38();
  v4[16] = swift_task_alloc();
  v5 = sub_1B8DFD0A0();
  v4[17] = v5;
  v4[18] = *(_QWORD *)(v5 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  sub_1B8DFDB50();
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  sub_1B8DFD7A8();
  v4[27] = swift_task_alloc();
  v6 = sub_1B8DFD640();
  v4[28] = v6;
  v4[29] = *(_QWORD *)(v6 - 8);
  v4[30] = swift_task_alloc();
  v7 = sub_1B8DFD658();
  v4[31] = v7;
  v4[32] = *(_QWORD *)(v7 - 8);
  v4[33] = swift_task_alloc();
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  v8 = sub_1B8DFD784();
  v4[37] = v8;
  v4[38] = *(_QWORD *)(v8 - 8);
  v4[39] = swift_task_alloc();
  v9 = type metadata accessor for AlarmEntity();
  v4[40] = v9;
  v4[41] = *(_QWORD *)(v9 - 8);
  v4[42] = swift_task_alloc();
  v4[43] = swift_task_alloc();
  return swift_task_switch();
}

void sub_1B8DFA91C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  void (*v7)(uint64_t, uint64_t);
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 296);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FA58]), sel_init);
  sub_1B8DFD178();
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 352) = v6;
  v6(v2, v1, v4);
  sub_1B8D861B4(v1);
  sub_1B8DFD754();
  v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v0 + 360) = v7;
  v7(v2, v4);
  v8 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v5, sel_alarmWithIDString_, v8);

  if (v9)
  {
    objc_msgSend(v9, sel_mutableCopy);

    sub_1B8DFDE5C();
    swift_unknownObjectRelease();
    sub_1B8DFC9FC();
    if (swift_dynamicCast())
    {
      v10 = *(void **)(v0 + 48);
      *(_QWORD *)(v0 + 368) = v10;
      sub_1B8DFD178();
      if ((*(_BYTE *)(v0 + 400) & 1) != 0)
      {
        v11 = objc_msgSend(v10, sel_isEnabled) ^ 1;
      }
      else
      {
        sub_1B8DFD178();
        v11 = *(unsigned __int8 *)(v0 + 401);
      }
      objc_msgSend(v10, sel_setEnabled_, v11);
      v17 = swift_task_alloc();
      *(_QWORD *)(v0 + 376) = v17;
      *(_QWORD *)(v17 + 16) = v10;
      v18 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 384) = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4528);
      *v18 = v0;
      v18[1] = sub_1B8DFAD8C;
      sub_1B8DFE0F0();
    }
    else
    {
      v12 = *(_QWORD *)(v0 + 232);
      v13 = *(uint64_t **)(v0 + 240);
      v14 = *(_QWORD *)(v0 + 224);
      v15 = *(_QWORD *)(v0 + 152);
      v19 = *(_QWORD *)(v0 + 144);
      v20 = *(_QWORD *)(v0 + 136);
      v16 = *(_QWORD *)(v0 + 104);
      (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 328) + 56))(v16, 1, 1, *(_QWORD *)(v0 + 320));
      sub_1B8DFDAF0();
      *v13 = type metadata accessor for MTAppIntentsManager();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v12 + 104))(v13, *MEMORY[0x1E0CAF9C8], v14);
      sub_1B8DFD79C();
      sub_1B8DFD664();
      sub_1B8DFD0AC();
      sub_1B8D88A28();
      sub_1B8DFD0C4();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v15, v20);
      sub_1B8D88AD4(v16);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      (*(void (**)(void))(v0 + 8))();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B8DFAD8C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 392) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_1B8DFAE04()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t *);
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;

  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 352);
  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 360);
  v3 = *(_QWORD *)(v0 + 344);
  v4 = *(_QWORD *)(v0 + 312);
  v5 = *(_QWORD *)(v0 + 296);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FA58]), sel_init);
  sub_1B8DFD178();
  v2(v4, v3, v5);
  sub_1B8D861B4(v3);
  sub_1B8DFD754();
  v1(v4, v5);
  v7 = (void *)sub_1B8DFDB5C();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_alarmWithIDString_, v7);

  v9 = *(void **)(v0 + 368);
  if (v8)
  {
    v10 = *(_QWORD *)(v0 + 232);
    sub_1B8DB389C(v9, *(_QWORD *)(v0 + 336));
    v35 = v8;
    objc_msgSend(v8, sel_isEnabled);
    v11 = *(uint64_t **)(v0 + 240);
    sub_1B8DFDAF0();
    v31 = type metadata accessor for MTAppIntentsManager();
    *v11 = v31;
    v28 = *MEMORY[0x1E0CAF9C8];
    v27 = *(void (**)(uint64_t *))(v10 + 104);
    v27(v11);
    sub_1B8DFD79C();
    v32 = *(void **)(v0 + 368);
    v23 = *(_QWORD *)(v0 + 336);
    v25 = *(_QWORD *)(v0 + 328);
    v26 = *(_QWORD *)(v0 + 320);
    v17 = *(_QWORD *)(v0 + 288);
    v34 = *(_QWORD *)(v0 + 256);
    v18 = *(uint64_t **)(v0 + 240);
    v22 = *(_QWORD *)(v0 + 248);
    v24 = *(_QWORD *)(v0 + 224);
    v19 = *(_QWORD *)(v0 + 168);
    v29 = *(_QWORD *)(v0 + 144);
    v30 = *(_QWORD *)(v0 + 136);
    v20 = *(_QWORD *)(v0 + 120);
    sub_1B8DFD664();
    sub_1B8DFDB2C();
    sub_1B8DFDB20();
    sub_1B8DB5104();
    sub_1B8DFDB08();
    swift_bridgeObjectRelease();
    sub_1B8DFDB20();
    sub_1B8DFDB14();
    sub_1B8DFDB20();
    sub_1B8DFDB44();
    type metadata accessor for MTAppIntentsManager();
    *v18 = v31;
    ((void (*)(uint64_t *, _QWORD, uint64_t))v27)(v18, v28, v24);
    sub_1B8DFD79C();
    sub_1B8DFD664();
    sub_1B8DFD0AC();
    sub_1B8DAEE3C(v23, v20);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v20, 0, 1, v26);
    sub_1B8D88A28();
    sub_1B8DFD0C4();

    sub_1B8D88AD4(v20);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v19, v30);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v17, v22);
    sub_1B8D861B4(v23);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 232);
    v13 = *(uint64_t **)(v0 + 240);
    v14 = *(_QWORD *)(v0 + 224);
    v15 = *(_QWORD *)(v0 + 160);
    v33 = *(_QWORD *)(v0 + 144);
    v36 = *(_QWORD *)(v0 + 136);
    v16 = *(_QWORD *)(v0 + 112);
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 328) + 56))(v16, 1, 1, *(_QWORD *)(v0 + 320));
    sub_1B8DFDAF0();
    *v13 = type metadata accessor for MTAppIntentsManager();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v12 + 104))(v13, *MEMORY[0x1E0CAF9C8], v14);
    sub_1B8DFD79C();
    sub_1B8DFD664();
    sub_1B8DFD0AC();
    sub_1B8D88A28();
    sub_1B8DFD0C4();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v15, v36);
    sub_1B8D88AD4(v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8DFB3E8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1B8DFB550(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4530);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4FA58]), sel_init);
  v8 = objc_msgSend(v7, sel_updateAlarm_, a2);

  if (v8)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v10 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    aBlock[4] = sub_1B8DFCAA4;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1B8DB2C40;
    aBlock[3] = &block_descriptor_17;
    v11 = _Block_copy(aBlock);
    swift_release();
    v12 = objc_msgSend(v8, sel_addCompletionBlock_, v11);
    _Block_release(v11);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B8DFB6D8(void *a1)
{
  id v1;

  v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4530);
  return sub_1B8DFDCD0();
}

uint64_t sub_1B8DFB720()
{
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4538);
  sub_1B8D87FFC(&qword_1EF1E4540, &qword_1EF1E4538, MEMORY[0x1E0C91BF0]);
  return sub_1B8DFD4E4();
}

uint64_t sub_1B8DFB7B0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1B8D85A48;
  return sub_1B8DFA6EC(a1, v4, v5, v6);
}

char *sub_1B8DFB81C@<X0>(char **a1@<X8>)
{
  char *result;
  char *v3;
  char *v4;

  result = sub_1B8DFBFE8();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1B8DFB844()
{
  sub_1B8DFBBA8();
  return sub_1B8DFD07C();
}

uint64_t destroy for ToggleAlarmIntent()
{
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *_s18MobileTimerSupport17ToggleAlarmIntentVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_1B8DFD22C();
  sub_1B8DFD22C();
  sub_1B8DFD22C();
  return a1;
}

_QWORD *assignWithCopy for ToggleAlarmIntent(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_1B8DFD22C();
  swift_release();
  a1[1] = a2[1];
  sub_1B8DFD22C();
  swift_release();
  a1[2] = a2[2];
  sub_1B8DFD22C();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ToggleAlarmIntent(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ToggleAlarmIntent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ToggleAlarmIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ToggleAlarmIntent()
{
  return &type metadata for ToggleAlarmIntent;
}

uint64_t storeEnumTagSinglePayload for ToggleAlarmIntent.Operation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B8DFBAA4 + 4 * byte_1B8E053E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B8DFBAD8 + 4 * byte_1B8E053E0[v4]))();
}

uint64_t sub_1B8DFBAD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DFBAE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8DFBAE8);
  return result;
}

uint64_t sub_1B8DFBAF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8DFBAFCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B8DFBB00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8DFBB08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ToggleAlarmIntent.Operation()
{
  return &type metadata for ToggleAlarmIntent.Operation;
}

uint64_t sub_1B8DFBB24()
{
  return sub_1B8D87FFC(&qword_1EF1E44E0, &qword_1EF1E44E8, MEMORY[0x1E0C91BB8]);
}

uint64_t sub_1B8DFBB50()
{
  return sub_1B8D87FFC(&qword_1EF1E44F0, &qword_1EF1E44F8, MEMORY[0x1E0C915B0]);
}

uint64_t sub_1B8DFBB7C()
{
  return sub_1B8D87FFC(&qword_1EF1E4500, &qword_1EF1E44F8, MEMORY[0x1E0C915A0]);
}

unint64_t sub_1B8DFBBA8()
{
  unint64_t result;

  result = qword_1EF1E4508;
  if (!qword_1EF1E4508)
  {
    result = MEMORY[0x1BCCBD0FC](&unk_1B8E0567C, &type metadata for ToggleAlarmIntent);
    atomic_store(result, (unint64_t *)&qword_1EF1E4508);
  }
  return result;
}

unint64_t sub_1B8DFBBEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v26[2];
  unsigned int v27;
  void (*v28)(char *);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;

  v0 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v0);
  v36 = (char *)v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v32 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)v26 - v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E1218);
  MEMORY[0x1E0C80A78](v4);
  v37 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v6);
  v34 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B8DFD640();
  v9 = *(_QWORD *)(v8 - 8);
  v29 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v12);
  v31 = sub_1B8DFD658();
  v13 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v35 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1E45A0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E14A0);
  v17 = *(_QWORD *)(v16 - 8);
  v30 = *(_QWORD *)(v17 + 72);
  v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v19 = swift_allocObject();
  v33 = v19;
  *(_OWORD *)(v19 + 16) = xmmword_1B8E00210;
  v20 = v19 + v18;
  *(_BYTE *)(v19 + v18) = 0;
  sub_1B8DFDAF0();
  v26[1] = v20 + *(int *)(v16 + 48);
  sub_1B8DFD79C();
  v27 = *MEMORY[0x1E0CAF9B8];
  v28 = *(void (**)(char *))(v9 + 104);
  v28(v11);
  sub_1B8DFD664();
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v21 = v34;
  v22 = v31;
  v32(v34, 1, 1, v31);
  v23 = sub_1B8DFD364();
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v24(v37, 1, 1, v23);
  sub_1B8DFD370();
  *(_BYTE *)(v20 + v30) = 1;
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  ((void (*)(char *, _QWORD, uint64_t))v28)(v11, v27, v29);
  sub_1B8DFD664();
  v32(v21, 1, 1, v22);
  v24(v37, 1, 1, v23);
  sub_1B8DFD370();
  return sub_1B8D8C954(v33);
}

char *sub_1B8DFBFE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t *);
  void (*v47)(uint64_t *);
  char *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(uint64_t *, _QWORD, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v62[3];
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  void (*v81)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  char *v83;
  void (*v84)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  unsigned int v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char v91;
  char v92;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10D8);
  MEMORY[0x1E0C80A78](v0);
  v76 = (char *)v62 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E12B0);
  MEMORY[0x1E0C80A78](v2);
  v72 = (char *)v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_1B8DFD418();
  v82 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v90 = (char *)v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8DFDB50();
  MEMORY[0x1E0C80A78](v5);
  v75 = (char *)v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v73 = (char *)v62 - v8;
  MEMORY[0x1E0C80A78](v9);
  v67 = (char *)v62 - v10;
  MEMORY[0x1E0C80A78](v11);
  v69 = (char *)v62 - v12;
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  v83 = (char *)v62 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10D0);
  MEMORY[0x1E0C80A78](v16);
  v74 = (char *)v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v68 = (char *)v62 - v19;
  MEMORY[0x1E0C80A78](v20);
  v80 = (char *)v62 - v21;
  MEMORY[0x1E0C80A78](v22);
  v63 = (char *)v62 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E0);
  MEMORY[0x1E0C80A78](v24);
  v71 = (char *)v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v65 = (char *)v62 - v27;
  MEMORY[0x1E0C80A78](v28);
  v79 = (char *)v62 - v29;
  v30 = sub_1B8DFD640();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v33 = (_QWORD *)((char *)v62 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = sub_1B8DFD7A8();
  MEMORY[0x1E0C80A78](v34);
  v35 = sub_1B8DFD658();
  v36 = *(_QWORD *)(v35 - 8);
  v85 = v35;
  MEMORY[0x1E0C80A78](v35);
  v70 = (char *)v62 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v38);
  v66 = (char *)v62 - v39;
  MEMORY[0x1E0C80A78](v40);
  v64 = (char *)v62 - v41;
  MEMORY[0x1E0C80A78](v42);
  v62[2] = (char *)v62 - v43;
  MEMORY[0x1E0C80A78](v44);
  MEMORY[0x1E0C80A78](v45);
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v86 = *MEMORY[0x1E0CAF9B8];
  v46 = *(void (**)(uint64_t *))(v31 + 104);
  v77 = v30;
  v46(v33);
  sub_1B8DFD664();
  v84 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
  v84(v79, 1, 1, v35);
  v92 = 0;
  sub_1B8DFDAF0();
  v62[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4510);
  v88 = type metadata accessor for MTAppIntentsManager();
  *v33 = v88;
  v87 = *MEMORY[0x1E0CAF9C8];
  v46(v33);
  v47 = v46;
  sub_1B8DFD79C();
  sub_1B8DFD664();
  v48 = v63;
  sub_1B8DFD0AC();
  v49 = sub_1B8DFD0A0();
  v78 = v49;
  v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56);
  v81 = v50;
  v50(v48, 0, 1, v49);
  v50(v80, 1, 1, v49);
  LODWORD(v83) = *MEMORY[0x1E0C91738];
  v82 = *(_QWORD *)(v82 + 104);
  v51 = v89;
  ((void (*)(char *))v82)(v90);
  sub_1B8DF979C();
  v79 = (char *)sub_1B8DFD1A8();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v52 = v77;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v47)(v33, v86, v77);
  v62[0] = v47;
  sub_1B8DFD664();
  v84(v65, 1, 1, v85);
  v91 = 1;
  v53 = sub_1B8DFDCAC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v72, 1, 1, v53);
  sub_1B8DFDAF0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E12F0);
  *v33 = v88;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v47)(v33, v87, v52);
  sub_1B8DFD79C();
  sub_1B8DFD664();
  v54 = v68;
  sub_1B8DFD0AC();
  v81(v54, 0, 1, v78);
  ((void (*)(char *, _QWORD, uint64_t))v82)(v90, v83, v51);
  v72 = (char *)sub_1B8DFD1F0();
  sub_1B8DFDAF0();
  sub_1B8DFD79C();
  v55 = v77;
  v56 = (void (*)(uint64_t *, _QWORD, uint64_t))v62[0];
  ((void (*)(uint64_t *, _QWORD, uint64_t))v62[0])(v33, v86, v77);
  sub_1B8DFD664();
  v84(v71, 1, 1, v85);
  v57 = type metadata accessor for AlarmEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v76, 1, 1, v57);
  sub_1B8DFDAF0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E10E8);
  *v33 = v88;
  v56(v33, v87, v55);
  sub_1B8DFD79C();
  sub_1B8DFD664();
  v58 = v74;
  sub_1B8DFD0AC();
  v59 = v78;
  v60 = v81;
  v81(v58, 0, 1, v78);
  v60(v80, 1, 1, v59);
  ((void (*)(char *, _QWORD, uint64_t))v82)(v90, v83, v89);
  sub_1B8DB4C88();
  sub_1B8DFD1B4();
  return v79;
}

unint64_t sub_1B8DFC9FC()
{
  unint64_t result;

  result = qword_1EF1E4520;
  if (!qword_1EF1E4520)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF1E4520);
  }
  return result;
}

void sub_1B8DFCA38(uint64_t a1)
{
  uint64_t v1;

  sub_1B8DFB550(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1B8DFCA40()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4530);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1B8DFCAA4(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1E4530);
  return sub_1B8DFB6D8(a1);
}

uint64_t sub_1B8DFCAF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8DFD190();
  *a1 = result;
  return result;
}

uint64_t sub_1B8DFCB1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8DFD190();
  *a1 = result;
  return result;
}

uint64_t sub_1B8DFCB44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8DFD190();
  *a1 = result;
  return result;
}

uint64_t __getHKSPSleepStoreClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return __getHKHealthStoreClass_block_invoke_cold_1(v0);
}

uint64_t __getHKHealthStoreClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return +[MTSessionUtilities logError:].cold.1(v0);
}

uint64_t sub_1B8DFCFF8()
{
  return MEMORY[0x1E0C902C8]();
}

uint64_t sub_1B8DFD004()
{
  return MEMORY[0x1E0C90308]();
}

uint64_t sub_1B8DFD010()
{
  return MEMORY[0x1E0C903E8]();
}

uint64_t sub_1B8DFD01C()
{
  return MEMORY[0x1E0C903F8]();
}

uint64_t sub_1B8DFD028()
{
  return MEMORY[0x1E0C90400]();
}

uint64_t sub_1B8DFD034()
{
  return MEMORY[0x1E0C904D8]();
}

uint64_t sub_1B8DFD040()
{
  return MEMORY[0x1E0C90518]();
}

uint64_t sub_1B8DFD04C()
{
  return MEMORY[0x1E0C905A0]();
}

uint64_t sub_1B8DFD058()
{
  return MEMORY[0x1E0C905D0]();
}

uint64_t sub_1B8DFD064()
{
  return MEMORY[0x1E0C905E0]();
}

uint64_t sub_1B8DFD070()
{
  return MEMORY[0x1E0C90640]();
}

uint64_t sub_1B8DFD07C()
{
  return MEMORY[0x1E0C90650]();
}

uint64_t sub_1B8DFD088()
{
  return MEMORY[0x1E0C906C0]();
}

uint64_t sub_1B8DFD094()
{
  return MEMORY[0x1E0C906C8]();
}

uint64_t sub_1B8DFD0A0()
{
  return MEMORY[0x1E0C907D0]();
}

uint64_t sub_1B8DFD0AC()
{
  return MEMORY[0x1E0C907F0]();
}

uint64_t sub_1B8DFD0B8()
{
  return MEMORY[0x1E0C909C8]();
}

uint64_t sub_1B8DFD0C4()
{
  return MEMORY[0x1E0C909E0]();
}

uint64_t sub_1B8DFD0D0()
{
  return MEMORY[0x1E0C909F0]();
}

uint64_t sub_1B8DFD0DC()
{
  return MEMORY[0x1E0C90A08]();
}

uint64_t sub_1B8DFD0E8()
{
  return MEMORY[0x1E0C90AD8]();
}

uint64_t sub_1B8DFD0F4()
{
  return MEMORY[0x1E0C90AE8]();
}

uint64_t sub_1B8DFD100()
{
  return MEMORY[0x1E0C90AF8]();
}

uint64_t sub_1B8DFD10C()
{
  return MEMORY[0x1E0C90B08]();
}

uint64_t sub_1B8DFD118()
{
  return MEMORY[0x1E0C90B60]();
}

uint64_t sub_1B8DFD124()
{
  return MEMORY[0x1E0C90B70]();
}

uint64_t sub_1B8DFD130()
{
  return MEMORY[0x1E0C90B80]();
}

uint64_t sub_1B8DFD13C()
{
  return MEMORY[0x1E0C90B98]();
}

uint64_t sub_1B8DFD148()
{
  return MEMORY[0x1E0C90BB0]();
}

uint64_t sub_1B8DFD154()
{
  return MEMORY[0x1E0C90C48]();
}

uint64_t sub_1B8DFD160()
{
  return MEMORY[0x1E0C90C50]();
}

uint64_t sub_1B8DFD16C()
{
  return MEMORY[0x1E0C90CF0]();
}

uint64_t sub_1B8DFD178()
{
  return MEMORY[0x1E0C90D00]();
}

uint64_t sub_1B8DFD184()
{
  return MEMORY[0x1E0C90D10]();
}

uint64_t sub_1B8DFD190()
{
  return MEMORY[0x1E0C90D20]();
}

uint64_t sub_1B8DFD19C()
{
  return MEMORY[0x1E0C90D90]();
}

uint64_t sub_1B8DFD1A8()
{
  return MEMORY[0x1E0C90D98]();
}

uint64_t sub_1B8DFD1B4()
{
  return MEMORY[0x1E0C90DB8]();
}

uint64_t sub_1B8DFD1C0()
{
  return MEMORY[0x1E0C90DC8]();
}

uint64_t sub_1B8DFD1CC()
{
  return MEMORY[0x1E0C90E10]();
}

uint64_t sub_1B8DFD1D8()
{
  return MEMORY[0x1E0C90E18]();
}

uint64_t sub_1B8DFD1E4()
{
  return MEMORY[0x1E0C90E50]();
}

uint64_t sub_1B8DFD1F0()
{
  return MEMORY[0x1E0C90E60]();
}

uint64_t sub_1B8DFD1FC()
{
  return MEMORY[0x1E0C90F08]();
}

uint64_t sub_1B8DFD208()
{
  return MEMORY[0x1E0C90F20]();
}

uint64_t sub_1B8DFD214()
{
  return MEMORY[0x1E0C90F28]();
}

uint64_t sub_1B8DFD220()
{
  return MEMORY[0x1E0C90F38]();
}

uint64_t sub_1B8DFD22C()
{
  return MEMORY[0x1E0C90F60]();
}

uint64_t sub_1B8DFD238()
{
  return MEMORY[0x1E0C90F78]();
}

uint64_t sub_1B8DFD244()
{
  return MEMORY[0x1E0C90F90]();
}

uint64_t sub_1B8DFD250()
{
  return MEMORY[0x1E0C90FA0]();
}

uint64_t sub_1B8DFD25C()
{
  return MEMORY[0x1E0C90FB0]();
}

uint64_t sub_1B8DFD268()
{
  return MEMORY[0x1E0C90FC0]();
}

uint64_t sub_1B8DFD274()
{
  return MEMORY[0x1E0C90FD0]();
}

uint64_t sub_1B8DFD280()
{
  return MEMORY[0x1E0C91030]();
}

uint64_t sub_1B8DFD28C()
{
  return MEMORY[0x1E0C91040]();
}

uint64_t sub_1B8DFD298()
{
  return MEMORY[0x1E0C91048]();
}

uint64_t sub_1B8DFD2A4()
{
  return MEMORY[0x1E0C91058]();
}

uint64_t sub_1B8DFD2B0()
{
  return MEMORY[0x1E0C91068]();
}

uint64_t sub_1B8DFD2BC()
{
  return MEMORY[0x1E0C91090]();
}

uint64_t sub_1B8DFD2C8()
{
  return MEMORY[0x1E0C910B8]();
}

uint64_t sub_1B8DFD2D4()
{
  return MEMORY[0x1E0C910D0]();
}

uint64_t sub_1B8DFD2E0()
{
  return MEMORY[0x1E0C910D8]();
}

uint64_t sub_1B8DFD2EC()
{
  return MEMORY[0x1E0C91100]();
}

uint64_t sub_1B8DFD2F8()
{
  return MEMORY[0x1E0C91108]();
}

uint64_t sub_1B8DFD304()
{
  return MEMORY[0x1E0C91128]();
}

uint64_t sub_1B8DFD310()
{
  return MEMORY[0x1E0C91148]();
}

uint64_t sub_1B8DFD31C()
{
  return MEMORY[0x1E0C911A0]();
}

uint64_t sub_1B8DFD328()
{
  return MEMORY[0x1E0C91210]();
}

uint64_t sub_1B8DFD334()
{
  return MEMORY[0x1E0C91260]();
}

uint64_t sub_1B8DFD340()
{
  return MEMORY[0x1E0C912C8]();
}

uint64_t sub_1B8DFD34C()
{
  return MEMORY[0x1E0C912F0]();
}

uint64_t sub_1B8DFD358()
{
  return MEMORY[0x1E0C91468]();
}

uint64_t sub_1B8DFD364()
{
  return MEMORY[0x1E0C91480]();
}

uint64_t sub_1B8DFD370()
{
  return MEMORY[0x1E0C914B0]();
}

uint64_t sub_1B8DFD37C()
{
  return MEMORY[0x1E0C914D0]();
}

uint64_t sub_1B8DFD388()
{
  return MEMORY[0x1E0C914E8]();
}

uint64_t sub_1B8DFD394()
{
  return MEMORY[0x1E0C91540]();
}

uint64_t sub_1B8DFD3A0()
{
  return MEMORY[0x1E0C91640]();
}

uint64_t sub_1B8DFD3AC()
{
  return MEMORY[0x1E0C91658]();
}

uint64_t sub_1B8DFD3B8()
{
  return MEMORY[0x1E0C91668]();
}

uint64_t sub_1B8DFD3C4()
{
  return MEMORY[0x1E0C91690]();
}

uint64_t sub_1B8DFD3D0()
{
  return MEMORY[0x1E0C91698]();
}

uint64_t sub_1B8DFD3DC()
{
  return MEMORY[0x1E0C916C0]();
}

uint64_t sub_1B8DFD3E8()
{
  return MEMORY[0x1E0C916C8]();
}

uint64_t sub_1B8DFD3F4()
{
  return MEMORY[0x1E0C916D0]();
}

uint64_t sub_1B8DFD400()
{
  return MEMORY[0x1E0C916E8]();
}

uint64_t sub_1B8DFD40C()
{
  return MEMORY[0x1E0C916F8]();
}

uint64_t sub_1B8DFD418()
{
  return MEMORY[0x1E0C91750]();
}

uint64_t sub_1B8DFD424()
{
  return MEMORY[0x1E0C91768]();
}

uint64_t sub_1B8DFD430()
{
  return MEMORY[0x1E0C91780]();
}

uint64_t sub_1B8DFD43C()
{
  return MEMORY[0x1E0C917F8]();
}

uint64_t sub_1B8DFD448()
{
  return MEMORY[0x1E0C91820]();
}

uint64_t sub_1B8DFD454()
{
  return MEMORY[0x1E0C918B8]();
}

uint64_t sub_1B8DFD460()
{
  return MEMORY[0x1E0C91920]();
}

uint64_t sub_1B8DFD46C()
{
  return MEMORY[0x1E0C91930]();
}

uint64_t sub_1B8DFD478()
{
  return MEMORY[0x1E0C919F0]();
}

uint64_t sub_1B8DFD484()
{
  return MEMORY[0x1E0C91A10]();
}

uint64_t sub_1B8DFD490()
{
  return MEMORY[0x1E0C91A20]();
}

uint64_t sub_1B8DFD49C()
{
  return MEMORY[0x1E0C91A30]();
}

uint64_t sub_1B8DFD4A8()
{
  return MEMORY[0x1E0C91A38]();
}

uint64_t sub_1B8DFD4B4()
{
  return MEMORY[0x1E0C91AA8]();
}

uint64_t sub_1B8DFD4C0()
{
  return MEMORY[0x1E0C91AB8]();
}

uint64_t sub_1B8DFD4CC()
{
  return MEMORY[0x1E0C91AD0]();
}

uint64_t sub_1B8DFD4D8()
{
  return MEMORY[0x1E0C91B20]();
}

uint64_t sub_1B8DFD4E4()
{
  return MEMORY[0x1E0C91BA0]();
}

uint64_t sub_1B8DFD4F0()
{
  return MEMORY[0x1E0C91BC8]();
}

uint64_t sub_1B8DFD4FC()
{
  return MEMORY[0x1E0C91BD0]();
}

uint64_t sub_1B8DFD508()
{
  return MEMORY[0x1E0C91C08]();
}

uint64_t sub_1B8DFD514()
{
  return MEMORY[0x1E0CAE228]();
}

uint64_t sub_1B8DFD520()
{
  return MEMORY[0x1E0CAE248]();
}

uint64_t sub_1B8DFD52C()
{
  return MEMORY[0x1E0CAE250]();
}

uint64_t sub_1B8DFD538()
{
  return MEMORY[0x1E0CAE310]();
}

uint64_t sub_1B8DFD544()
{
  return MEMORY[0x1E0CAE318]();
}

uint64_t sub_1B8DFD550()
{
  return MEMORY[0x1E0CAE328]();
}

uint64_t sub_1B8DFD55C()
{
  return MEMORY[0x1E0CAE638]();
}

uint64_t sub_1B8DFD568()
{
  return MEMORY[0x1E0CAE9B8]();
}

uint64_t sub_1B8DFD574()
{
  return MEMORY[0x1E0CAE9C8]();
}

uint64_t sub_1B8DFD580()
{
  return MEMORY[0x1E0CAE9D0]();
}

uint64_t sub_1B8DFD58C()
{
  return MEMORY[0x1E0CAE9F8]();
}

uint64_t sub_1B8DFD598()
{
  return MEMORY[0x1E0CAEA00]();
}

uint64_t sub_1B8DFD5A4()
{
  return MEMORY[0x1E0CAEA10]();
}

uint64_t sub_1B8DFD5B0()
{
  return MEMORY[0x1E0CAEA20]();
}

uint64_t sub_1B8DFD5BC()
{
  return MEMORY[0x1E0CAEA28]();
}

uint64_t sub_1B8DFD5C8()
{
  return MEMORY[0x1E0CAEA38]();
}

uint64_t sub_1B8DFD5D4()
{
  return MEMORY[0x1E0CAEA40]();
}

uint64_t sub_1B8DFD5E0()
{
  return MEMORY[0x1E0CAEA48]();
}

uint64_t sub_1B8DFD5EC()
{
  return MEMORY[0x1E0CAEA50]();
}

uint64_t sub_1B8DFD5F8()
{
  return MEMORY[0x1E0CAEA80]();
}

uint64_t sub_1B8DFD604()
{
  return MEMORY[0x1E0CAEAA8]();
}

uint64_t sub_1B8DFD610()
{
  return MEMORY[0x1E0CAEAB0]();
}

uint64_t sub_1B8DFD61C()
{
  return MEMORY[0x1E0CAF328]();
}

uint64_t sub_1B8DFD628()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_1B8DFD634()
{
  return MEMORY[0x1E0CAF9B0]();
}

uint64_t sub_1B8DFD640()
{
  return MEMORY[0x1E0CAF9D0]();
}

uint64_t sub_1B8DFD64C()
{
  return MEMORY[0x1E0CAF9D8]();
}

uint64_t sub_1B8DFD658()
{
  return MEMORY[0x1E0CAF9F8]();
}

uint64_t sub_1B8DFD664()
{
  return MEMORY[0x1E0CAFA28]();
}

uint64_t sub_1B8DFD670()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1B8DFD67C()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_1B8DFD688()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1B8DFD694()
{
  return MEMORY[0x1E0CB03B8]();
}

uint64_t sub_1B8DFD6A0()
{
  return MEMORY[0x1E0CB03C0]();
}

uint64_t sub_1B8DFD6AC()
{
  return MEMORY[0x1E0CB05A8]();
}

uint64_t sub_1B8DFD6B8()
{
  return MEMORY[0x1E0CB05D8]();
}

uint64_t sub_1B8DFD6C4()
{
  return MEMORY[0x1E0CB0680]();
}

uint64_t sub_1B8DFD6D0()
{
  return MEMORY[0x1E0CB06B8]();
}

uint64_t sub_1B8DFD6DC()
{
  return MEMORY[0x1E0CB06D0]();
}

uint64_t sub_1B8DFD6E8()
{
  return MEMORY[0x1E0CB06D8]();
}

uint64_t sub_1B8DFD6F4()
{
  return MEMORY[0x1E0CB0708]();
}

uint64_t sub_1B8DFD700()
{
  return MEMORY[0x1E0CB07C0]();
}

uint64_t sub_1B8DFD70C()
{
  return MEMORY[0x1E0CB07C8]();
}

uint64_t sub_1B8DFD718()
{
  return MEMORY[0x1E0CB07E8]();
}

uint64_t sub_1B8DFD724()
{
  return MEMORY[0x1E0CB07F8]();
}

uint64_t sub_1B8DFD730()
{
  return MEMORY[0x1E0CB0828]();
}

uint64_t sub_1B8DFD73C()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_1B8DFD748()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1B8DFD754()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1B8DFD760()
{
  return MEMORY[0x1E0CB0948]();
}

uint64_t sub_1B8DFD76C()
{
  return MEMORY[0x1E0CB0958]();
}

uint64_t sub_1B8DFD778()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1B8DFD784()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1B8DFD790()
{
  return MEMORY[0x1E0CB0BE0]();
}

uint64_t sub_1B8DFD79C()
{
  return MEMORY[0x1E0CB0CC8]();
}

uint64_t sub_1B8DFD7A8()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t sub_1B8DFD7B4()
{
  return MEMORY[0x1E0CB0F00]();
}

uint64_t sub_1B8DFD7C0()
{
  return MEMORY[0x1E0CB0F20]();
}

uint64_t sub_1B8DFD7CC()
{
  return MEMORY[0x1E0CB0F60]();
}

uint64_t sub_1B8DFD7D8()
{
  return MEMORY[0x1E0CB0F98]();
}

uint64_t sub_1B8DFD7E4()
{
  return MEMORY[0x1E0CB0FB0]();
}

uint64_t sub_1B8DFD7F0()
{
  return MEMORY[0x1E0CB0FB8]();
}

uint64_t sub_1B8DFD7FC()
{
  return MEMORY[0x1E0CB0FE8]();
}

uint64_t sub_1B8DFD808()
{
  return MEMORY[0x1E0CB1018]();
}

uint64_t sub_1B8DFD814()
{
  return MEMORY[0x1E0CB1028]();
}

uint64_t sub_1B8DFD820()
{
  return MEMORY[0x1E0CB1030]();
}

uint64_t sub_1B8DFD82C()
{
  return MEMORY[0x1E0CB1058]();
}

uint64_t sub_1B8DFD838()
{
  return MEMORY[0x1E0CB1060]();
}

uint64_t sub_1B8DFD844()
{
  return MEMORY[0x1E0CB10E0]();
}

uint64_t sub_1B8DFD850()
{
  return MEMORY[0x1E0CB11B8]();
}

uint64_t sub_1B8DFD85C()
{
  return MEMORY[0x1E0CB11F0]();
}

uint64_t sub_1B8DFD868()
{
  return MEMORY[0x1E0CB1400]();
}

uint64_t sub_1B8DFD874()
{
  return MEMORY[0x1E0CB1430]();
}

uint64_t sub_1B8DFD880()
{
  return MEMORY[0x1E0CB1438]();
}

uint64_t sub_1B8DFD88C()
{
  return MEMORY[0x1E0CB1440]();
}

uint64_t sub_1B8DFD898()
{
  return MEMORY[0x1E0CB1450]();
}

uint64_t sub_1B8DFD8A4()
{
  return MEMORY[0x1E0CB1460]();
}

uint64_t sub_1B8DFD8B0()
{
  return MEMORY[0x1E0CB1470]();
}

uint64_t sub_1B8DFD8BC()
{
  return MEMORY[0x1E0C8F590]();
}

uint64_t sub_1B8DFD8C8()
{
  return MEMORY[0x1E0C8F598]();
}

uint64_t sub_1B8DFD8D4()
{
  return MEMORY[0x1E0C8F5A0]();
}

uint64_t sub_1B8DFD8E0()
{
  return MEMORY[0x1E0C8F5C0]();
}

uint64_t sub_1B8DFD8EC()
{
  return MEMORY[0x1E0C8F5C8]();
}

uint64_t sub_1B8DFD8F8()
{
  return MEMORY[0x1E0C8F5D0]();
}

uint64_t sub_1B8DFD904()
{
  return MEMORY[0x1E0C8F778]();
}

uint64_t sub_1B8DFD910()
{
  return MEMORY[0x1E0C8F9A0]();
}

uint64_t sub_1B8DFD91C()
{
  return MEMORY[0x1E0C8F9A8]();
}

uint64_t sub_1B8DFD928()
{
  return MEMORY[0x1E0C8FA50]();
}

uint64_t sub_1B8DFD934()
{
  return MEMORY[0x1E0C8FA58]();
}

uint64_t sub_1B8DFD940()
{
  return MEMORY[0x1E0C8FA70]();
}

uint64_t sub_1B8DFD94C()
{
  return MEMORY[0x1E0C8FA78]();
}

uint64_t sub_1B8DFD958()
{
  return MEMORY[0x1E0C8FCC8]();
}

uint64_t sub_1B8DFD964()
{
  return MEMORY[0x1E0C8FD08]();
}

uint64_t sub_1B8DFD970()
{
  return MEMORY[0x1E0C8FD10]();
}

uint64_t sub_1B8DFD97C()
{
  return MEMORY[0x1E0C8FD80]();
}

uint64_t sub_1B8DFD988()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1B8DFD994()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1B8DFD9A0()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1B8DFD9AC()
{
  return MEMORY[0x1E0C95D08]();
}

uint64_t sub_1B8DFD9B8()
{
  return MEMORY[0x1E0C95D10]();
}

uint64_t sub_1B8DFD9C4()
{
  return MEMORY[0x1E0C95E00]();
}

uint64_t sub_1B8DFD9D0()
{
  return MEMORY[0x1E0C95ED8]();
}

uint64_t sub_1B8DFD9DC()
{
  return MEMORY[0x1E0C96308]();
}

uint64_t sub_1B8DFD9E8()
{
  return MEMORY[0x1E0C96410]();
}

uint64_t sub_1B8DFD9F4()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1B8DFDA00()
{
  return MEMORY[0x1E0DEF560]();
}

uint64_t sub_1B8DFDA0C()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1B8DFDA18()
{
  return MEMORY[0x1E0DEF580]();
}

uint64_t sub_1B8DFDA24()
{
  return MEMORY[0x1E0DEF588]();
}

uint64_t sub_1B8DFDA30()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1B8DFDA3C()
{
  return MEMORY[0x1E0DEF748]();
}

uint64_t sub_1B8DFDA48()
{
  return MEMORY[0x1E0DEF778]();
}

uint64_t sub_1B8DFDA54()
{
  return MEMORY[0x1E0DE9D60]();
}

uint64_t sub_1B8DFDA60()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1B8DFDA6C()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1B8DFDA78()
{
  return MEMORY[0x1E0DE9E38]();
}

uint64_t sub_1B8DFDA84()
{
  return MEMORY[0x1E0DE9EC0]();
}

uint64_t sub_1B8DFDA90()
{
  return MEMORY[0x1E0DEA048]();
}

uint64_t sub_1B8DFDA9C()
{
  return MEMORY[0x1E0DEA0A0]();
}

uint64_t sub_1B8DFDAA8()
{
  return MEMORY[0x1E0DEA0A8]();
}

uint64_t sub_1B8DFDAB4()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1B8DFDAC0()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_1B8DFDACC()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1B8DFDAD8()
{
  return MEMORY[0x1E0C91C98]();
}

uint64_t sub_1B8DFDAE4()
{
  return MEMORY[0x1E0CB1898]();
}

uint64_t sub_1B8DFDAF0()
{
  return MEMORY[0x1E0CB18A0]();
}

uint64_t sub_1B8DFDAFC()
{
  return MEMORY[0x1E0CB18A8]();
}

uint64_t sub_1B8DFDB08()
{
  return MEMORY[0x1E0CB18C0]();
}

uint64_t sub_1B8DFDB14()
{
  return MEMORY[0x1E0CB18C8]();
}

uint64_t sub_1B8DFDB20()
{
  return MEMORY[0x1E0CB18D8]();
}

uint64_t sub_1B8DFDB2C()
{
  return MEMORY[0x1E0CB18E0]();
}

uint64_t sub_1B8DFDB38()
{
  return MEMORY[0x1E0CB18E8]();
}

uint64_t sub_1B8DFDB44()
{
  return MEMORY[0x1E0CB18F0]();
}

uint64_t sub_1B8DFDB50()
{
  return MEMORY[0x1E0CB18F8]();
}

uint64_t sub_1B8DFDB5C()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1B8DFDB68()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1B8DFDB74()
{
  return MEMORY[0x1E0CB19C0]();
}

uint64_t sub_1B8DFDB80()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1B8DFDB8C()
{
  return MEMORY[0x1E0DEA610]();
}

uint64_t sub_1B8DFDB98()
{
  return MEMORY[0x1E0DEA6F8]();
}

uint64_t sub_1B8DFDBA4()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1B8DFDBB0()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_1B8DFDBBC()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1B8DFDBC8()
{
  return MEMORY[0x1E0DEA858]();
}

uint64_t sub_1B8DFDBD4()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t sub_1B8DFDBE0()
{
  return MEMORY[0x1E0DEA878]();
}

uint64_t sub_1B8DFDBEC()
{
  return MEMORY[0x1E0DEA880]();
}

uint64_t sub_1B8DFDBF8()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t sub_1B8DFDC04()
{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t sub_1B8DFDC10()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1B8DFDC1C()
{
  return MEMORY[0x1E0DEAB40]();
}

uint64_t sub_1B8DFDC28()
{
  return MEMORY[0x1E0DEACB8]();
}

uint64_t sub_1B8DFDC34()
{
  return MEMORY[0x1E0DEAD30]();
}

uint64_t sub_1B8DFDC40()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_1B8DFDC4C()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1B8DFDC58()
{
  return MEMORY[0x1E0CB1AE0]();
}

uint64_t sub_1B8DFDC64()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1B8DFDC70()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_1B8DFDC7C()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1B8DFDC88()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_1B8DFDC94()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_1B8DFDCA0()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_1B8DFDCAC()
{
  return MEMORY[0x1E0C91CF8]();
}

uint64_t sub_1B8DFDCB8()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_1B8DFDCC4()
{
  return MEMORY[0x1E0DF05C8]();
}

uint64_t sub_1B8DFDCD0()
{
  return MEMORY[0x1E0DF05D0]();
}

uint64_t sub_1B8DFDCDC()
{
  return MEMORY[0x1E0DF06D8]();
}

uint64_t sub_1B8DFDCE8()
{
  return MEMORY[0x1E0DF06E0]();
}

uint64_t sub_1B8DFDCF4()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_1B8DFDD00()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_1B8DFDD0C()
{
  return MEMORY[0x1E0DF0770]();
}

uint64_t sub_1B8DFDD18()
{
  return MEMORY[0x1E0DF07A0]();
}

uint64_t sub_1B8DFDD24()
{
  return MEMORY[0x1E0DF07D8]();
}

uint64_t sub_1B8DFDD30()
{
  return MEMORY[0x1E0DF07F8]();
}

uint64_t sub_1B8DFDD3C()
{
  return MEMORY[0x1E0DF0800]();
}

uint64_t sub_1B8DFDD48()
{
  return MEMORY[0x1E0DF0840]();
}

uint64_t sub_1B8DFDD54()
{
  return MEMORY[0x1E0DF0870]();
}

uint64_t sub_1B8DFDD60()
{
  return MEMORY[0x1E0DF08B8]();
}

uint64_t sub_1B8DFDD6C()
{
  return MEMORY[0x1E0DF08E0]();
}

uint64_t sub_1B8DFDD78()
{
  return MEMORY[0x1E0DEB030]();
}

uint64_t sub_1B8DFDD84()
{
  return MEMORY[0x1E0CB1B88]();
}

uint64_t sub_1B8DFDD90()
{
  return MEMORY[0x1E0DEB620]();
}

uint64_t sub_1B8DFDD9C()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1B8DFDDA8()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_1B8DFDDB4()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_1B8DFDDC0()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_1B8DFDDCC()
{
  return MEMORY[0x1E0DEF8F8]();
}

uint64_t sub_1B8DFDDD8()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1B8DFDDE4()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_1B8DFDDF0()
{
  return MEMORY[0x1E0DEF920]();
}

uint64_t sub_1B8DFDDFC()
{
  return MEMORY[0x1E0CB1F30]();
}

uint64_t sub_1B8DFDE08()
{
  return MEMORY[0x1E0CB1F50]();
}

uint64_t sub_1B8DFDE14()
{
  return MEMORY[0x1E0CB20C8]();
}

uint64_t sub_1B8DFDE20()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_1B8DFDE2C()
{
  return MEMORY[0x1E0DEFCF0]();
}

uint64_t sub_1B8DFDE38()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1B8DFDE44()
{
  return MEMORY[0x1E0CB2410]();
}

uint64_t sub_1B8DFDE50()
{
  return MEMORY[0x1E0CB2588]();
}

uint64_t sub_1B8DFDE5C()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1B8DFDE68()
{
  return MEMORY[0x1E0DEBE80]();
}

uint64_t sub_1B8DFDE74()
{
  return MEMORY[0x1E0DEBE88]();
}

uint64_t sub_1B8DFDE80()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1B8DFDE8C()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1B8DFDE98()
{
  return MEMORY[0x1E0DEC078]();
}

uint64_t sub_1B8DFDEA4()
{
  return MEMORY[0x1E0DEC160]();
}

uint64_t sub_1B8DFDEB0()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1B8DFDEBC()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_1B8DFDEC8()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_1B8DFDED4()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1B8DFDEE0()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1B8DFDEEC()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1B8DFDEF8()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1B8DFDF04()
{
  return MEMORY[0x1E0DEC2F0]();
}

uint64_t sub_1B8DFDF10()
{
  return MEMORY[0x1E0DEC3D0]();
}

uint64_t sub_1B8DFDF1C()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1B8DFDF28()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1B8DFDF34()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1B8DFDF40()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1B8DFDF4C()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1B8DFDF58()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1B8DFDF64()
{
  return MEMORY[0x1E0DF0B48]();
}

uint64_t sub_1B8DFDF70()
{
  return MEMORY[0x1E0DF0B50]();
}

uint64_t sub_1B8DFDF7C()
{
  return MEMORY[0x1E0DF0B60]();
}

uint64_t sub_1B8DFDF88()
{
  return MEMORY[0x1E0DF0BA0]();
}

uint64_t sub_1B8DFDF94()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1B8DFDFA0()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1B8DFDFAC()
{
  return MEMORY[0x1E0DECBF8]();
}

uint64_t sub_1B8DFDFB8()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1B8DFDFC4()
{
  return MEMORY[0x1E0DECD20]();
}

uint64_t sub_1B8DFDFD0()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1B8DFDFDC()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1B8DFDFE8()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1B8DFDFF4()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1B8DFE000()
{
  return MEMORY[0x1E0DECF20]();
}

uint64_t sub_1B8DFE00C()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1B8DFE018()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_1B8DFE024()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_1B8DFE030()
{
  return MEMORY[0x1E0DECFC8]();
}

uint64_t sub_1B8DFE03C()
{
  return MEMORY[0x1E0DECFD0]();
}

uint64_t sub_1B8DFE048()
{
  return MEMORY[0x1E0DECFE8]();
}

uint64_t sub_1B8DFE054()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1B8DFE060()
{
  return MEMORY[0x1E0DED0C0]();
}

uint64_t sub_1B8DFE06C()
{
  return MEMORY[0x1E0DED0F0]();
}

uint64_t sub_1B8DFE078()
{
  return MEMORY[0x1E0DED0F8]();
}

uint64_t sub_1B8DFE084()
{
  return MEMORY[0x1E0DED100]();
}

uint64_t sub_1B8DFE090()
{
  return MEMORY[0x1E0DED118]();
}

uint64_t sub_1B8DFE09C()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1B8DFE0A8()
{
  return MEMORY[0x1E0DED1B0]();
}

uint64_t sub_1B8DFE0B4()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1B8DFE0C0()
{
  return MEMORY[0x1E0DF0DD0]();
}

uint64_t sub_1B8DFE0CC()
{
  return MEMORY[0x1E0DED548]();
}

uint64_t sub_1B8DFE0D8()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1B8DFE0E4()
{
  return MEMORY[0x1E0DED770]();
}

uint64_t sub_1B8DFE0F0()
{
  return MEMORY[0x1E0DF0EC0]();
}

uint64_t sub_1B8DFE0FC()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1B8DFE108()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1B8DFE114()
{
  return MEMORY[0x1E0DF0F10]();
}

uint64_t sub_1B8DFE120()
{
  return MEMORY[0x1E0CB2650]();
}

uint64_t sub_1B8DFE12C()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1B8DFE138()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1B8DFE144()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1B8DFE150()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1B8DFE15C()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1B8DFE168()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1B8DFE174()
{
  return MEMORY[0x1E0DEDF28]();
}

uint64_t sub_1B8DFE180()
{
  return MEMORY[0x1E0DEDF30]();
}

uint64_t sub_1B8DFE18C()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1B8DFE198()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1B8DFE1A4()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1B8DFE1B0()
{
  return MEMORY[0x1E0DEE750]();
}

uint64_t sub_1B8DFE1BC()
{
  return MEMORY[0x1E0DEE7A8]();
}

uint64_t sub_1B8DFE1C8()
{
  return MEMORY[0x1E0DEE7C0]();
}

uint64_t sub_1B8DFE1D4()
{
  return MEMORY[0x1E0DEE7C8]();
}

uint64_t sub_1B8DFE1E0()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1B8DFE1EC()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t MTLogForCategory()
{
  return MEMORY[0x1E0D4F9A8]();
}

uint64_t _BSIsInternalInstall()
{
  return MEMORY[0x1E0D018D0]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81020](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81038](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1E0DA88F0]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

uint64_t abort_report_np()
{
  return MEMORY[0x1E0C813B0]();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return MEMORY[0x1E0C81588](*(_QWORD *)&__upper_bound);
}

long double atan(long double __x)
{
  long double result;

  MEMORY[0x1E0C81618](__x);
  return result;
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

long double cos(long double __x)
{
  long double result;

  MEMORY[0x1E0C82B40](__x);
  return result;
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

long double fmod(long double __x, long double __y)
{
  long double result;

  MEMORY[0x1E0C83440](__x, __y);
  return result;
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1E0DE7CB0](name);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7FE0](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

long double sin(long double __x)
{
  long double result;

  MEMORY[0x1E0C85418](__x);
  return result;
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1E0DF0FA0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1E0DF0FA8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x1E0DF0FB0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1E0DF0FB8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1E0DF0FC0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1E0DEEB88]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getAtPartialKeyPath()
{
  return MEMORY[0x1E0DEEC20]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1E0DEECB8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1E0DEECE8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1E0DEED70]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x1E0DEED80]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

long double tan(long double __x)
{
  long double result;

  MEMORY[0x1E0C857E8](__x);
  return result;
}

