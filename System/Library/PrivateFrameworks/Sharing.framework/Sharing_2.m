void sub_1A2A5A9C0(void **a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B3C0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1A2A4BF8C(*a1, a2, *(objc_class **)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1A2A5AA40(uint64_t a1)
{
  return sub_1A2A5C1CC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A4E934);
}

uint64_t sub_1A2A5AA4C()
{
  return objectdestroy_72Tm(&qword_1EE67DC20);
}

uint64_t sub_1A2A5AA58()
{
  return sub_1A2A5AA7C(&qword_1EE67DC20, (uint64_t)&unk_1E48385F0, (uint64_t)sub_1A2A5AB54, (uint64_t)&block_descriptor_130);
}

uint64_t sub_1A2A5AA7C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = v4 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1A2A4F1D4(*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(void **)(v4 + 32), v4 + v10, *(void (**)(uint64_t *, uint64_t))v11, *(_QWORD *)(v11 + 8), a1, a2, a3, a4);
}

uint64_t sub_1A2A5AB04()
{
  return swift_deallocObject();
}

uint64_t sub_1A2A5AB14()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A2A5AB38()
{
  return swift_deallocObject();
}

uint64_t sub_1A2A5AB48()
{
  return objectdestroy_88Tm(&qword_1EE67DC20);
}

uint64_t sub_1A2A5AB54(void *a1)
{
  return sub_1A2A5AB60(a1, &qword_1EE67DC20);
}

uint64_t sub_1A2A5AB60(void *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8) + 80);
  return sub_1A2A4FD20(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_1A2A5ABB0()
{
  return objectdestroy_88Tm(&qword_1EE67DC20);
}

uint64_t sub_1A2A5ABBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A2A5BF40(a1, a2, a3, a4, a5, &qword_1EE67DC20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A2A4CED0);
}

uint64_t sub_1A2A5ABD0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1A2A5AC04(void **a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A2A4BDAC(*a1, a2, *(objc_class **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_1A2A5AC28(uint64_t a1)
{
  return sub_1A2A5C1CC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A4E654);
}

uint64_t sub_1A2A5AC34()
{
  return objectdestroy_72Tm(&qword_1EE67DC28);
}

uint64_t sub_1A2A5AC40()
{
  return sub_1A2A5AA7C(&qword_1EE67DC28, (uint64_t)&unk_1E48387A8, (uint64_t)sub_1A2A5AC90, (uint64_t)&block_descriptor_168);
}

uint64_t sub_1A2A5AC64()
{
  return swift_deallocObject();
}

uint64_t sub_1A2A5AC74()
{
  return swift_deallocObject();
}

uint64_t sub_1A2A5AC84()
{
  return objectdestroy_88Tm(&qword_1EE67DC28);
}

uint64_t sub_1A2A5AC90(void *a1)
{
  return sub_1A2A5AB60(a1, &qword_1EE67DC28);
}

uint64_t sub_1A2A5AC9C()
{
  return objectdestroy_88Tm(&qword_1EE67DC28);
}

uint64_t sub_1A2A5ACA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A2A5BF40(a1, a2, a3, a4, a5, &qword_1EE67DC28, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A2A4CDB0);
}

void sub_1A2A5ACC0(void **a1, uint64_t a2)
{
  sub_1A2A5B5B0(a1, a2, &qword_1EE675108, (uint64_t)&unk_1E48389B0, (uint64_t)sub_1A2A5AD74, (uint64_t)&block_descriptor_212);
}

uint64_t sub_1A2A5ACF4(uint64_t a1)
{
  return sub_1A2A5C1CC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A4D514);
}

uint64_t sub_1A2A5AD00()
{
  return objectdestroy_72Tm(&qword_1EE675108);
}

uint64_t sub_1A2A5AD0C()
{
  return sub_1A2A5AA7C(&qword_1EE675108, (uint64_t)&unk_1E4838960, (uint64_t)sub_1A2A5AD5C, (uint64_t)&block_descriptor_206);
}

uint64_t sub_1A2A5AD30()
{
  return swift_deallocObject();
}

uint64_t sub_1A2A5AD40()
{
  return swift_deallocObject();
}

uint64_t sub_1A2A5AD50()
{
  return objectdestroy_88Tm(&qword_1EE675108);
}

uint64_t sub_1A2A5AD5C(void *a1)
{
  return sub_1A2A5AB60(a1, &qword_1EE675108);
}

uint64_t sub_1A2A5AD68()
{
  return objectdestroy_88Tm(&qword_1EE675108);
}

uint64_t sub_1A2A5AD78(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675108);
  return sub_1A2A4CCA8(a1, a2, a3, a4, a5);
}

uint64_t sub_1A2A5ADF0(_QWORD *a1, uint64_t a2)
{
  return sub_1A2A5BE2C(a1, a2, type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, unint64_t, _QWORD, _QWORD))sub_1A2A4B958);
}

uint64_t sub_1A2A5AE14()
{
  return objectdestroy_88Tm(&qword_1EE675108);
}

uint64_t sub_1A2A5AE20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for SFAirDropInvocations.BoopAtADistanceUpdate.Parameters(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  v5 = v0 + v3;
  v6 = sub_1A2AE3130();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = v5 + *(int *)(type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction(0) + 20);
  v9 = sub_1A2AE30C4();
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v11 = v5 + *(int *)(v1 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = type metadata accessor for SFAirDropClient.BoopAtADistance.TapEvent(0);
  v10(v11 + *(int *)(v12 + 24), v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = v11 + *(int *)(v12 + 52);
  swift_bridgeObjectRelease();
  sub_1A29736C4(*(_QWORD *)(v13 + 16), *(_QWORD *)(v13 + 24));
  v14 = type metadata accessor for SFAirDropClient.BoopAtADistance.ServerInfo(0);
  v7(v13 + *(int *)(v14 + 24), v6);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A2A5AFB8(_QWORD *a1, uint64_t a2)
{
  return sub_1A2A5BE2C(a1, a2, type metadata accessor for SFAirDropInvocations.BoopAtADistanceUpdate.Parameters, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, unint64_t, _QWORD, _QWORD))sub_1A2A4B728);
}

uint64_t sub_1A2A5AFDC()
{
  return objectdestroy_88Tm(&qword_1EE675108);
}

uint64_t objectdestroy_214Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  v5 = v0 + v3;
  v6 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v5 + *(int *)(v1 + 20);
  v8 = sub_1A2AE30C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A2A5B0C0(_QWORD *a1, uint64_t a2)
{
  return sub_1A2A5BE2C(a1, a2, type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, unint64_t, _QWORD, _QWORD))sub_1A2A4B4F8);
}

uint64_t sub_1A2A5B0E4(uint64_t a1)
{
  return sub_1A2A5C1CC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A4E374);
}

uint64_t sub_1A2A5B0F0()
{
  return objectdestroy_72Tm(&qword_1EE67DC30);
}

uint64_t sub_1A2A5B0FC()
{
  return sub_1A2A5AA7C(&qword_1EE67DC30, (uint64_t)&unk_1E4838C08, (uint64_t)sub_1A2A5B14C, (uint64_t)&block_descriptor_268);
}

uint64_t sub_1A2A5B120()
{
  return swift_deallocObject();
}

uint64_t sub_1A2A5B130()
{
  return swift_deallocObject();
}

uint64_t sub_1A2A5B140()
{
  return objectdestroy_88Tm(&qword_1EE67DC30);
}

uint64_t sub_1A2A5B14C(void *a1)
{
  return sub_1A2A5AB60(a1, &qword_1EE67DC30);
}

uint64_t sub_1A2A5B158()
{
  return objectdestroy_88Tm(&qword_1EE67DC30);
}

uint64_t sub_1A2A5B164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A2A5BF40(a1, a2, a3, a4, a5, &qword_1EE67DC30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A2A4C9A4);
}

uint64_t sub_1A2A5B178()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v1 = (int *)type metadata accessor for SFAirDrop.NearbySharingInteraction(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease();
  v6 = v0 + v4;
  v7 = sub_1A2AE3130();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v0 + v4, v7);
  v10 = v0 + v4 + v1[5];
  type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = v5;
    v11 = type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
    v12 = v10 + *(int *)(v11 + 20);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
      v9(v12, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9(v10 + *(int *)(v11 + 44), v7);
    v5 = v19;
    v4 = (v3 + 32) & ~v3;
  }
  v13 = v6 + v1[6];
  v14 = sub_1A2AE30C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = v6 + v1[7];
  v16 = sub_1A2AE3BC8();
  v17 = *(_QWORD *)(v16 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A2A5B354(_QWORD *a1, uint64_t a2)
{
  return sub_1A2A5BE2C(a1, a2, type metadata accessor for SFAirDrop.NearbySharingInteraction, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, unint64_t, _QWORD, _QWORD))sub_1A2A4B2C8);
}

uint64_t sub_1A2A5B378()
{
  return objectdestroy_88Tm(&qword_1EE675108);
}

void sub_1A2A5B388(void **a1, uint64_t a2)
{
  sub_1A2A5B978(a1, a2, &qword_1EE675110, (uint64_t)&unk_1E4838E60, (uint64_t)sub_1A2A5B43C, (uint64_t)&block_descriptor_326);
}

uint64_t sub_1A2A5B3BC(uint64_t a1)
{
  return sub_1A2A5C1CC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A4E094);
}

uint64_t sub_1A2A5B3C8()
{
  return objectdestroy_72Tm(&qword_1EE675110);
}

uint64_t sub_1A2A5B3D4()
{
  return sub_1A2A5AA7C(&qword_1EE675110, (uint64_t)&unk_1E4838E10, (uint64_t)sub_1A2A5B424, (uint64_t)&block_descriptor_320);
}

uint64_t sub_1A2A5B3F8()
{
  return swift_deallocObject();
}

uint64_t sub_1A2A5B408()
{
  return swift_deallocObject();
}

uint64_t sub_1A2A5B418()
{
  return objectdestroy_88Tm(&qword_1EE675110);
}

uint64_t sub_1A2A5B424(void *a1)
{
  return sub_1A2A5AB60(a1, &qword_1EE675110);
}

uint64_t sub_1A2A5B430()
{
  return objectdestroy_88Tm(&qword_1EE675110);
}

uint64_t sub_1A2A5B43C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1A2A5B450(a1, a2, a3, a4, a5, &qword_1EE675110, (void (*)(uint64_t *__return_ptr, void *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1A2A3C138);
}

uint64_t sub_1A2A5B450(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t *a6, void (*a7)(uint64_t *__return_ptr, void *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v15;

  v15 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8) + 80);
  return sub_1A2A4D110(a1, a2, a3, a4, a5, v7 + ((v15 + 16) & ~v15), a7, a6);
}

uint64_t objectdestroy_67Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1A2AE3130();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

void sub_1A2A5B57C(void **a1, uint64_t a2)
{
  sub_1A2A5B5B0(a1, a2, &qword_1EE675108, (uint64_t)&unk_1E4838ED8, (uint64_t)sub_1A2A5AD74, (uint64_t)&block_descriptor_338);
}

void sub_1A2A5B5B0(void **a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;

  v13 = *(_QWORD *)(sub_1A2AE3130() - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = (*(_QWORD *)(v13 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1A2A4BB88(*a1, a2, *(void **)(v6 + 16), *(_QWORD *)(v6 + 24), v6 + v14, *(_QWORD *)(v6 + v15), *(_QWORD *)(v6 + ((v15 + 15) & 0xFFFFFFFFFFFFF8)), a3, a4, a5, a6);
}

uint64_t sub_1A2A5B660()
{
  return objectdestroy_88Tm(&qword_1EE675108);
}

uint64_t sub_1A2A5B66C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for SFAirDrop.NearbySharingAssertionRequest(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  v4 = sub_1A2AE3130();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A2A5B72C(_QWORD *a1, uint64_t a2)
{
  return sub_1A2A5BE2C(a1, a2, type metadata accessor for SFAirDrop.NearbySharingAssertionRequest, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, unint64_t, _QWORD, _QWORD))sub_1A2A4B098);
}

uint64_t sub_1A2A5B750(uint64_t a1)
{
  return sub_1A2A5C1CC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A4DDB4);
}

uint64_t sub_1A2A5B75C()
{
  return objectdestroy_72Tm(&qword_1EE67DC50);
}

uint64_t sub_1A2A5B768()
{
  return sub_1A2A5AA7C(&qword_1EE67DC50, (uint64_t)&unk_1E4839040, (uint64_t)sub_1A2A5B7B8, (uint64_t)&block_descriptor_370);
}

uint64_t sub_1A2A5B78C()
{
  return swift_deallocObject();
}

uint64_t sub_1A2A5B79C()
{
  return swift_deallocObject();
}

uint64_t sub_1A2A5B7AC()
{
  return objectdestroy_88Tm(&qword_1EE67DC50);
}

uint64_t sub_1A2A5B7B8(void *a1)
{
  return sub_1A2A5AB60(a1, &qword_1EE67DC50);
}

uint64_t sub_1A2A5B7C4()
{
  return objectdestroy_88Tm(&qword_1EE67DC50);
}

uint64_t sub_1A2A5B7D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A2A5BF40(a1, a2, a3, a4, a5, &qword_1EE67DC50, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A2A4C69C);
}

uint64_t sub_1A2A5B7E4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1A2A5B820(void **a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A2A4AEA8(*a1, a2, *(objc_class **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_1A2A5B844()
{
  return objectdestroy_88Tm(&qword_1EE675108);
}

uint64_t sub_1A2A5B850()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for SFAirDrop.NearbySharingDiscovery.Request(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  v4 = sub_1A2AE3130();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A2A5B910(_QWORD *a1, uint64_t a2)
{
  return sub_1A2A5BE2C(a1, a2, type metadata accessor for SFAirDrop.NearbySharingDiscovery.Request, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, unint64_t, _QWORD, _QWORD))sub_1A2A4AC78);
}

uint64_t sub_1A2A5B934()
{
  return objectdestroy_88Tm(&qword_1EE675108);
}

void sub_1A2A5B944(void **a1, uint64_t a2)
{
  sub_1A2A5B978(a1, a2, &qword_1EE675108, (uint64_t)&unk_1E48391F8, (uint64_t)sub_1A2A5AD74, (uint64_t)&block_descriptor_412);
}

void sub_1A2A5B978(void **a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  sub_1A2A4C1B8(*a1, a2, *(objc_class **)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), a3, a4, a5, a6);
}

uint64_t sub_1A2A5B9B4()
{
  return objectdestroy_88Tm(&qword_1EE675108);
}

void sub_1A2A5B9C4(void **a1, uint64_t a2)
{
  sub_1A2A5B978(a1, a2, &qword_1EE67DC68, (uint64_t)&unk_1E48393B0, (uint64_t)sub_1A2A5BA78, (uint64_t)&block_descriptor_450);
}

uint64_t sub_1A2A5B9F8(uint64_t a1)
{
  return sub_1A2A5C1CC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A4DAD4);
}

uint64_t sub_1A2A5BA04()
{
  return objectdestroy_72Tm(&qword_1EE67DC68);
}

uint64_t sub_1A2A5BA10()
{
  return sub_1A2A5AA7C(&qword_1EE67DC68, (uint64_t)&unk_1E4839360, (uint64_t)sub_1A2A5BA60, (uint64_t)&block_descriptor_444);
}

uint64_t sub_1A2A5BA34()
{
  return swift_deallocObject();
}

uint64_t sub_1A2A5BA44()
{
  return swift_deallocObject();
}

uint64_t sub_1A2A5BA54()
{
  return objectdestroy_88Tm(&qword_1EE67DC68);
}

uint64_t sub_1A2A5BA60(void *a1)
{
  return sub_1A2A5AB60(a1, &qword_1EE67DC68);
}

uint64_t sub_1A2A5BA6C()
{
  return objectdestroy_88Tm(&qword_1EE67DC68);
}

uint64_t sub_1A2A5BA78(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1A2A5B450(a1, a2, a3, a4, a5, &qword_1EE67DC68, (void (*)(uint64_t *__return_ptr, void *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1A2A3B834);
}

uint64_t sub_1A2A5BA8C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;

  v1 = *(_QWORD *)(type metadata accessor for SFAirDropInvocations.BecomeTransferPresenter.Parameters(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  swift_bridgeObjectRelease();
  type metadata accessor for SFAirDropClient.Identifier();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    v5 = sub_1A2AE3130();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v2, v5);
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A2A5BB5C(_QWORD *a1, uint64_t a2)
{
  return sub_1A2A5BE2C(a1, a2, type metadata accessor for SFAirDropInvocations.BecomeTransferPresenter.Parameters, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, unint64_t, _QWORD, _QWORD))sub_1A2A4AA48);
}

uint64_t sub_1A2A5BB80()
{
  return objectdestroy_88Tm(&qword_1EE675108);
}

uint64_t sub_1A2A5BB8C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for SFAirDrop.TransferIdentifier() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  v4 = sub_1A2AE3130();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A2A5BC30(_QWORD *a1, uint64_t a2)
{
  return sub_1A2A5BE2C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, unint64_t, _QWORD, _QWORD))sub_1A2A4A818);
}

uint64_t sub_1A2A5BC54()
{
  return objectdestroy_88Tm(&qword_1EE675108);
}

uint64_t sub_1A2A5BC60()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, uint64_t);
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t *v12;
  unint64_t v13;

  v1 = (int *)type metadata accessor for SFAirDropSend.Request();
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease();
  v5 = v0 + v3;
  v6 = sub_1A2AE3130();
  v7 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v0 + v3, v6);
  sub_1A2994E20(*(_QWORD *)(v5 + v1[5]), *(_QWORD *)(v5 + v1[5] + 8), *(_BYTE *)(v5 + v1[5] + 16));
  swift_bridgeObjectRelease();
  v7(v0 + v3 + v1[7], v6);
  v8 = v0 + v3 + v1[8];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE674658);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v7(v8, v6);
    swift_release();
  }
  swift_bridgeObjectRelease();
  v10 = (uint64_t *)(v5 + v1[10]);
  v11 = v10[1];
  if (v11 >> 60 != 15)
    sub_1A29736C4(*v10, v11);
  v12 = (uint64_t *)(v5 + v1[11]);
  v13 = v12[1];
  if (v13 >> 60 != 15)
    sub_1A29736C4(*v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A2A5BE08(_QWORD *a1, uint64_t a2)
{
  return sub_1A2A5BE2C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropSend.Request, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, unint64_t, _QWORD, _QWORD))sub_1A2A4A5E8);
}

uint64_t sub_1A2A5BE2C(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(_QWORD, uint64_t, _QWORD, _QWORD, unint64_t, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v8 = *(_QWORD *)(a3(0) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a4(*a1, a2, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), v4 + v9, *(_QWORD *)(v4 + v10), *(_QWORD *)(v4 + ((v10 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1A2A5BEAC(uint64_t a1)
{
  return sub_1A2A5C1CC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A4D7F4);
}

uint64_t sub_1A2A5BEB8()
{
  return objectdestroy_72Tm(&qword_1EE67DC70);
}

uint64_t sub_1A2A5BEC4()
{
  return sub_1A2A5AA7C(&qword_1EE67DC70, (uint64_t)&unk_1E4839608, (uint64_t)sub_1A2A5BF14, (uint64_t)&block_descriptor_511);
}

uint64_t sub_1A2A5BEE8()
{
  return swift_deallocObject();
}

uint64_t sub_1A2A5BEF8()
{
  return swift_deallocObject();
}

uint64_t sub_1A2A5BF08()
{
  return objectdestroy_88Tm(&qword_1EE67DC70);
}

uint64_t sub_1A2A5BF14(void *a1)
{
  return sub_1A2A5AB60(a1, &qword_1EE67DC70);
}

uint64_t sub_1A2A5BF20()
{
  return objectdestroy_88Tm(&qword_1EE67DC70);
}

uint64_t sub_1A2A5BF2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A2A5BF40(a1, a2, a3, a4, a5, &qword_1EE67DC70, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A2A4C394);
}

uint64_t sub_1A2A5BF40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v13;

  v13 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8) + 80);
  return a7(a1, a2, a3, a4, a5, v7 + ((v13 + 16) & ~v13));
}

void sub_1A2A5BFC0(void **a1, uint64_t a2)
{
  sub_1A2A5B978(a1, a2, &qword_1EE675108, (uint64_t)&unk_1E48396D0, (uint64_t)sub_1A2A5AD74, (uint64_t)&block_descriptor_529);
}

uint64_t sub_1A2A5BFF4()
{
  return objectdestroy_88Tm(&qword_1EE675108);
}

void sub_1A2A5C004(void **a1, uint64_t a2)
{
  sub_1A2A5B978(a1, a2, &qword_1EE675108, (uint64_t)&unk_1E4839748, (uint64_t)sub_1A2A5AD74, (uint64_t)&block_descriptor_541);
}

uint64_t sub_1A2A5C038()
{
  return objectdestroy_88Tm(&qword_1EE675108);
}

void sub_1A2A5C048(void **a1, uint64_t a2)
{
  sub_1A2A5B978(a1, a2, &qword_1EE675D98, (uint64_t)&unk_1E4839900, (uint64_t)sub_1A2A5C0FC, (uint64_t)&block_descriptor_581);
}

uint64_t sub_1A2A5C07C(uint64_t a1)
{
  return sub_1A2A5C1CC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A4EEF4);
}

uint64_t sub_1A2A5C088()
{
  return objectdestroy_72Tm(&qword_1EE675D98);
}

uint64_t sub_1A2A5C094()
{
  return sub_1A2A5AA7C(&qword_1EE675D98, (uint64_t)&unk_1E48398B0, (uint64_t)sub_1A2A5C0E4, (uint64_t)&block_descriptor_575);
}

uint64_t sub_1A2A5C0B8()
{
  return swift_deallocObject();
}

uint64_t sub_1A2A5C0C8()
{
  return swift_deallocObject();
}

uint64_t sub_1A2A5C0D8()
{
  return objectdestroy_88Tm(&qword_1EE675D98);
}

uint64_t sub_1A2A5C0E4(void *a1)
{
  return sub_1A2A5AB60(a1, &qword_1EE675D98);
}

uint64_t sub_1A2A5C0F0()
{
  return objectdestroy_88Tm(&qword_1EE675D98);
}

uint64_t sub_1A2A5C0FC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1A2A5B450(a1, a2, a3, a4, a5, &qword_1EE675D98, (void (*)(uint64_t *__return_ptr, void *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1A2A3CE84);
}

void sub_1A2A5C114(void **a1, uint64_t a2)
{
  sub_1A2A5B978(a1, a2, &qword_1EE675108, (uint64_t)&unk_1E4839978, (uint64_t)sub_1A2A5AD74, (uint64_t)&block_descriptor_593);
}

uint64_t sub_1A2A5C148()
{
  return objectdestroy_88Tm(&qword_1EE675108);
}

uint64_t objectdestroy_290Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1A2A5C18C(void **a1, uint64_t a2)
{
  sub_1A2A5B978(a1, a2, &qword_1EE67DCB8, (uint64_t)&unk_1E4839B30, (uint64_t)sub_1A2A5C348, (uint64_t)&block_descriptor_631);
}

uint64_t sub_1A2A5C1C0(uint64_t a1)
{
  return sub_1A2A5C1CC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A4D234);
}

uint64_t sub_1A2A5C1CC(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1A2A5C1E0()
{
  return objectdestroy_72Tm(&qword_1EE67DCB8);
}

uint64_t objectdestroy_72Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_bridgeObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A2A5C284()
{
  return sub_1A2A5AA7C(&qword_1EE67DCB8, (uint64_t)&unk_1E4839AE0, (uint64_t)sub_1A2A5C2D4, (uint64_t)&block_descriptor_625);
}

uint64_t sub_1A2A5C2A8()
{
  return swift_deallocObject();
}

uint64_t sub_1A2A5C2B8()
{
  return swift_deallocObject();
}

uint64_t sub_1A2A5C2C8()
{
  return objectdestroy_88Tm(&qword_1EE67DCB8);
}

uint64_t sub_1A2A5C2D4(void *a1)
{
  return sub_1A2A5AB60(a1, &qword_1EE67DCB8);
}

uint64_t sub_1A2A5C2E0()
{
  return objectdestroy_88Tm(&qword_1EE67DCB8);
}

uint64_t objectdestroy_88Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_1A2A5C348(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1A2A5B450(a1, a2, a3, a4, a5, &qword_1EE67DCB8, (void (*)(uint64_t *__return_ptr, void *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1A2A3AAF0);
}

uint64_t sub_1A2A5C6E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = v1;
  return swift_task_switch();
}

uint64_t sub_1A2A5C6F8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);

  *(_QWORD *)(v0 + 40) = &type metadata for VoidParameters;
  sub_1A296E4B4(v0 + 16, v0 + 48);
  if (swift_dynamicCast())
  {
    v1 = *(_QWORD *)(v0 + 104);
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
    v2 = (_QWORD *)(v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68));
    v8 = (uint64_t (*)(_QWORD))(*(int *)*v2 + *v2);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v3;
    *v3 = v0;
    v3[1] = sub_1A2A5C8A0;
    return v8(*(_QWORD *)(v0 + 96));
  }
  else
  {
    *(_QWORD *)(v0 + 80) = 0;
    *(_QWORD *)(v0 + 88) = 0xE000000000000000;
    sub_1A2AE3BF8();
    v5 = *(_QWORD *)(v0 + 80);
    v6 = *(_QWORD *)(v0 + 88);
    sub_1A297AFB8();
    swift_allocError();
    *(_QWORD *)v7 = v5;
    *(_QWORD *)(v7 + 8) = v6;
    *(_OWORD *)(v7 + 16) = xmmword_1A2B06510;
    *(_QWORD *)(v7 + 32) = 0;
    *(_QWORD *)(v7 + 40) = 0;
    *(_QWORD *)(v7 + 48) = 0xD00000000000004CLL;
    *(_QWORD *)(v7 + 56) = 0x80000001A2B44FE0;
    *(_OWORD *)(v7 + 64) = xmmword_1A2B06520;
    *(_QWORD *)(v7 + 88) = 0;
    *(_QWORD *)(v7 + 96) = 0;
    *(_QWORD *)(v7 + 80) = 0xA000000000000000;
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1A2A5C8A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A2A5C904()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A2A5C910(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1A2A5C92C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t (*v7)(_QWORD, uint64_t);

  v1 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v0 + 32);
    *(_BYTE *)(v0 + 56) = *(_BYTE *)(v1 + 32);
    v3 = (_QWORD *)(v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0) + 68));
    v7 = (uint64_t (*)(_QWORD, uint64_t))(*(int *)*v3 + *v3);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v4;
    *v4 = v0;
    v4[1] = sub_1A2A5CA58;
    return v7(*(_QWORD *)(v0 + 16), v0 + 56);
  }
  else
  {
    sub_1A297AFB8();
    swift_allocError();
    *(_QWORD *)v6 = 0xD000000000000021;
    *(_QWORD *)(v6 + 8) = 0x80000001A2B44FB0;
    *(_QWORD *)(v6 + 16) = 0xD00000000000004CLL;
    *(_QWORD *)(v6 + 24) = 0x80000001A2B44FE0;
    *(_QWORD *)(v6 + 32) = 33;
    *(_OWORD *)(v6 + 40) = 0u;
    *(_OWORD *)(v6 + 56) = 0u;
    *(_QWORD *)(v6 + 72) = 0;
    *(_QWORD *)(v6 + 80) = 0x2000000000000000;
    *(_QWORD *)(v6 + 88) = 0;
    *(_QWORD *)(v6 + 96) = 0;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1A2A5CA58()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A2A5CABC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void SFAirDrop.PermissionRequest.declineAction.getter()
{
  type metadata accessor for SFAirDrop.PermissionRequest.Style();
}

uint64_t sub_1A2A5CB0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[96];

  v10 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v12 = &v17[-v11];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(&v17[-v11], v2 + *(int *)(v3 + 60), a1);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v15);
    strcpy(&v17[-48], "title prompt acceptActions declineAction ");
    v16 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v8 - 112) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v8 - 104) = v16;
    *(_QWORD *)(v8 - 144) = v4;
    *(_QWORD *)(v8 - 136) = v5;
    *(_QWORD *)(v8 - 128) = v6;
    *(_QWORD *)(v8 - 120) = v7;
    type metadata accessor for SFAirDrop.AcceptAction();
  }
  v13 = type metadata accessor for SFAirDrop.DeclineAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v1, 1, 1, v13);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v12, a1);
}

void type metadata accessor for SFAirDrop.PermissionRequest.Style()
{
  JUMPOUT(0x1A8589544);
}

uint64_t type metadata accessor for SFAirDrop.DeclineAction()
{
  uint64_t result;

  result = qword_1EE674F20;
  if (!qword_1EE674F20)
    return swift_getSingletonMetadata();
  return result;
}

void type metadata accessor for SFAirDrop.AcceptAction()
{
  JUMPOUT(0x1A8589544);
}

uint64_t sub_1A2A5CD34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SFAirDrop.DeclineAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t static SFAirDrop.PermissionRequest.== infix(_:_:)()
{
  if ((_s7Sharing9SFAirDropO17PermissionRequestV18InterventionActionV2eeoiySbAGy_x_G_AItFZ_0() & 1) != 0)
    type metadata accessor for SFAirDrop.PermissionRequest();
  return 0;
}

void type metadata accessor for SFAirDrop.PermissionRequest()
{
  JUMPOUT(0x1A8589544);
}

void SFAirDrop.PermissionRequest.answered()()
{
  type metadata accessor for SFAirDrop.PermissionRequest.Style();
}

void sub_1A2A5CE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;

  v13 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&a9 - v14;
  v16 = sub_1A2AE30C4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&a9 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1A2AE3130();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&a9 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v23 + 16))(v22, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v9 + *(int *)(v10 + 56), v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v9 + *(int *)(v10 + 60), a1);
  SFAirDrop.PermissionRequest.init(id:requestDate:style:isAnswered:)((uint64_t)v22, *(_QWORD *)(v11 - 120));
}

void sub_1A2A5CFB8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A2A5D008(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A2A5D090 + 4 * byte_1A2B06536[a2]))(0x636972656E6567);
}

uint64_t sub_1A2A5D090(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x636972656E6567 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1A2AE3EE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1A2A5D168(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1A2A5D1B4(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A2A5D250 + 4 * byte_1A2B06546[a2]))(a3 - 1);
}

uint64_t sub_1A2A5D250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 - 1 && v3 == 0x80000001A2B444B0)
    v4 = 1;
  else
    v4 = sub_1A2AE3EE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1A2A5D36C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x65766965636572;
    else
      v3 = 0x6F666E4965726F6DLL;
    if (v2 == 1)
      v4 = 0xE700000000000000;
    else
      v4 = 0xE800000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x65766965636572;
      else
        v6 = 0x6F666E4965726F6DLL;
      if (v5 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0xE800000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1684956531;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 1684956531)
  {
LABEL_21:
    v8 = sub_1A2AE3EE0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1A2A5D474(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A2A5D4C4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A2A5D5A8 + 4 * byte_1A2B06558[a2]))(0xD000000000000012);
}

uint64_t sub_1A2A5D5A8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000012 && v1 == 0x80000001A2B44410)
    v2 = 1;
  else
    v2 = sub_1A2AE3EE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1A2A5D6EC(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1A2A5D738(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A2A5D7DC + 4 * byte_1A2B06569[a2]))(a3 + 14);
}

uint64_t sub_1A2A5D7DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 + 14 && v3 == 0x80000001A2B44280)
    v4 = 1;
  else
    v4 = sub_1A2AE3EE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1A2A5D8B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEFB6D0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A2A0ACEC(a1, (uint64_t)v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a2;
  v9[5] = a3;
  v10 = sub_1A2AE36E8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10);
  swift_retain();
  if (v12 == 1)
  {
    sub_1A2A0A8FC((uint64_t)v8);
    v13 = 0;
    v14 = 0;
  }
  else
  {
    sub_1A2AE36DC();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    if (v9[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v13 = sub_1A2AE3688();
      v14 = v15;
      swift_unknownObjectRelease();
    }
    else
    {
      v13 = 0;
      v14 = 0;
    }
  }
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = &unk_1EE67E580;
  *(_QWORD *)(v16 + 24) = v9;
  if (v14 | v13)
  {
    v18[0] = 0;
    v18[1] = 0;
    v18[2] = v13;
    v18[3] = v14;
  }
  return swift_task_create();
}

uint64_t sub_1A2A5DA7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A2AE31D8();
  __swift_allocate_value_buffer(v0, qword_1EE67DCC0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE67DCC0);
  if (qword_1EE676030 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE676010);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t SFAirDrop.PermissionRequest.isAnswered.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 52));
}

uint64_t SFAirDrop.PermissionRequest.requestDate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 56);
  v5 = sub_1A2AE30C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

void SFAirDrop.PermissionRequest.style.getter()
{
  type metadata accessor for SFAirDrop.PermissionRequest.Style();
}

uint64_t sub_1A2A5DB8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

Swift::Void __swiftcall SFAirDrop.PermissionRequest.cancel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  v2 = v1;
  v3 = v0;
  v4 = *(_QWORD *)(v0 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  ((void (*)())MEMORY[0x1E0C80A78])();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEFB6D0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A2AE36E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2, v3);
  v10 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v11 = swift_allocObject();
  v12 = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v11 + 16) = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v11 + 32) = v12;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v11 + v10, (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  sub_1A2A5D8B4((uint64_t)v8, (uint64_t)&unk_1EE67DCE0, v11);
  swift_release();
  swift_release();
  sub_1A2A0A8FC((uint64_t)v8);
}

void sub_1A2A5DCF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[38] = a5;
  v6[39] = a6;
  v6[36] = a3;
  v6[37] = a4;
  v6[35] = a2;
  v6[2] = a3;
  v6[3] = a4;
  v6[4] = a5;
  v6[5] = a6;
  type metadata accessor for SFAirDrop.PermissionRequest.InterventionAction();
}

void sub_1A2A5DD44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[40] = a1;
  v4[41] = *(_QWORD *)(a1 - 8);
  v4[42] = swift_task_alloc();
  v4[43] = type metadata accessor for SFAirDrop.DeclineAction();
  v4[44] = swift_task_alloc();
  v4[45] = swift_task_alloc();
  v4[6] = v5;
  v4[7] = v3;
  v4[8] = v1;
  v4[9] = v2;
  type metadata accessor for SFAirDrop.PermissionRequest.Style();
}

uint64_t sub_1A2A5DDB0(uint64_t a1)
{
  _QWORD *v1;

  v1[46] = a1;
  v1[47] = *(_QWORD *)(a1 - 8);
  v1[48] = swift_task_alloc();
  return swift_task_switch();
}

void sub_1A2A5DDF8()
{
  _OWORD *v0;

  v0[5] = v0[18];
  v0[6] = v0[19];
  type metadata accessor for SFAirDrop.PermissionRequest();
}

uint64_t sub_1A2A5DE3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5 + *(int *)(a1 + 60), v1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v17 = *(_OWORD *)(v4 + 304);
    v19 = *(_OWORD *)(v4 + 288);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    strcpy((char *)swift_task_alloc(), "title prompt acceptActions declineAction ");
    v15 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v4 + 208) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v4 + 216) = v15;
    *(_OWORD *)(v4 + 176) = v19;
    *(_OWORD *)(v4 + 192) = v17;
    type metadata accessor for SFAirDrop.AcceptAction();
  }
  if (EnumCaseMultiPayload != 1)
  {
    v18 = *(_OWORD *)(v4 + 304);
    v20 = *(_OWORD *)(v4 + 288);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    strcpy((char *)swift_task_alloc(), "title prompt acceptActions declineAction ");
    v16 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v4 + 112) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v4 + 120) = v16;
    *(_OWORD *)(v4 + 144) = v20;
    *(_OWORD *)(v4 + 160) = v18;
    type metadata accessor for SFAirDrop.AcceptAction();
  }
  v7 = *(_QWORD *)(v4 + 384);
  v9 = *(_QWORD *)(v4 + 328);
  v8 = *(_QWORD *)(v4 + 336);
  v10 = *(_QWORD *)(v4 + 320);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v8, v7 + *(int *)(TupleTypeMetadata2 + 48), v10);
  *(_BYTE *)(v4 + 440) = 1;
  v12 = swift_task_alloc();
  *(_QWORD *)(v4 + 408) = v12;
  *(_QWORD *)v12 = v4;
  *(_QWORD *)(v12 + 8) = sub_1A2A5E498;
  v13 = *(_QWORD *)(v4 + 336);
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v4 + 320);
  *(_QWORD *)(v12 + 64) = v13;
  *(_BYTE *)(v12 + 49) = *(_BYTE *)(v4 + 440);
  return swift_task_switch();
}

void sub_1A2A5E118()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata;

  v1[16] = sub_1A2AE3670();
  v1[17] = v2;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  swift_task_dealloc();
  sub_1A2A5CD34(v3 + *(int *)(TupleTypeMetadata + 80), v0);
  v1[53] = swift_task_alloc();
  JUMPOUT(0x1A2A5E190);
}

uint64_t sub_1A2A5E1BC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 400) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A2A5E220()
{
  uint64_t v0;

  sub_1A2A69254(*(_QWORD *)(v0 + 360));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A2A5E280()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  sub_1A2A69254(*(_QWORD *)(v0 + 360));
  v1 = *(void **)(v0 + 400);
  if (qword_1EE67AA78 != -1)
    swift_once();
  v2 = sub_1A2AE31D8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EE67DCC0);
  v3 = v1;
  v4 = v1;
  v5 = sub_1A2AE31C0();
  v6 = sub_1A2AE3958();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue();
    v9 = sub_1A2AE3F94();
    *(_QWORD *)(v0 + 264) = sub_1A296DA00(v9, v10, &v12);
    sub_1A2AE3A60();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A2830000, v5, v6, "Failed to cancel PermissionRequest {error: %s}", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85896E8](v8, -1, -1);
    MEMORY[0x1A85896E8](v7, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A2A5E498()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 416) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A2A5E4FC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 320));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A2A5E564()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 432) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A2A5E5C8()
{
  uint64_t v0;

  sub_1A2A69254(*(_QWORD *)(v0 + 352));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A2A5E628()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  sub_1A2A69254(*(_QWORD *)(v0 + 352));
  v1 = *(void **)(v0 + 432);
  if (qword_1EE67AA78 != -1)
    swift_once();
  v2 = sub_1A2AE31D8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EE67DCC0);
  v3 = v1;
  v4 = v1;
  v5 = sub_1A2AE31C0();
  v6 = sub_1A2AE3958();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue();
    v9 = sub_1A2AE3F94();
    *(_QWORD *)(v0 + 264) = sub_1A296DA00(v9, v10, &v12);
    sub_1A2AE3A60();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A2830000, v5, v6, "Failed to cancel PermissionRequest {error: %s}", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85896E8](v8, -1, -1);
    MEMORY[0x1A85896E8](v7, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A2A5E840()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 320));
  v1 = *(void **)(v0 + 416);
  if (qword_1EE67AA78 != -1)
    swift_once();
  v2 = sub_1A2AE31D8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EE67DCC0);
  v3 = v1;
  v4 = v1;
  v5 = sub_1A2AE31C0();
  v6 = sub_1A2AE3958();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue();
    v9 = sub_1A2AE3F94();
    *(_QWORD *)(v0 + 264) = sub_1A296DA00(v9, v10, &v12);
    sub_1A2AE3A60();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A2830000, v5, v6, "Failed to cancel PermissionRequest {error: %s}", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85896E8](v8, -1, -1);
    MEMORY[0x1A85896E8](v7, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SFAirDrop.DeclineAction.decline()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  type metadata accessor for SFAirDrop.DeclineAction();
  v3 = (uint64_t (*)(uint64_t))((char *)&dword_1EE67DCF0 + dword_1EE67DCF0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1A2A5EAD0;
  return v3((uint64_t)v3);
}

uint64_t sub_1A2A5EAD0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 24) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A2A5EB34()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SFAirDrop.PermissionRequest.InterventionAction.respond(with:)(_BYTE *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 56) = a2;
  *(_QWORD *)(v3 + 64) = v2;
  *(_BYTE *)(v3 + 49) = *a1;
  return swift_task_switch();
}

uint64_t sub_1A2A5EB60()
{
  uint64_t v0;
  char v1;
  uint64_t inited;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  v1 = *(_BYTE *)(v0 + 49);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67DD00);
  inited = swift_initStackObject();
  *(_QWORD *)(v0 + 72) = inited;
  *(_OWORD *)(inited + 16) = xmmword_1A2AFED80;
  *(_BYTE *)(inited + 32) = v1;
  v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EE67DD08 + dword_1EE67DD08);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v3;
  *v3 = v0;
  v3[1] = sub_1A2A5EC04;
  return v5((uint64_t)v5, inited);
}

uint64_t sub_1A2A5EC04()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_setDeallocating();
  return swift_task_switch();
}

uint64_t sub_1A2A5EC70()
{
  uint64_t v0;

  swift_setDeallocating();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void SFAirDrop.PermissionRequest.init(id:requestDate:title:prompt:acceptActions:declineAction:isAnswered:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  type metadata accessor for SFAirDrop.PermissionRequest();
}

void sub_1A2A5ED24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(a1 + 56);
  v4 = sub_1A2AE30C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, v2, v4);
  type metadata accessor for SFAirDrop.AcceptAction();
}

void sub_1A2A5EDD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  sub_1A2AE3670();
  type metadata accessor for SFAirDrop.DeclineAction();
  v15 = (uint64_t)v14 + *(int *)(swift_getTupleTypeMetadata() + 80);
  *v14 = v13;
  v14[1] = v12;
  v14[2] = a9;
  v14[3] = a10;
  v14[4] = a11;
  sub_1A2A5CD34(a12, v15);
  type metadata accessor for SFAirDrop.PermissionRequest.Style();
}

uint64_t sub_1A2A5EE40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  char v3;

  result = swift_storeEnumTagMultiPayload();
  *(_BYTE *)(v0 + *(int *)(v1 + 52)) = v3;
  return result;
}

void SFAirDrop.PermissionRequest.init(id:requestDate:interventionWorkflow:action:isAnswered:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  type metadata accessor for SFAirDrop.PermissionRequest();
}

void sub_1A2A5EEF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(a1 + 56);
  v4 = sub_1A2AE30C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, v2, v4);
  type metadata accessor for SFAirDrop.PermissionRequest.InterventionAction();
}

void sub_1A2A5EF40(uint64_t a1)
{
  char v1;
  uint64_t v2;
  _BYTE *v3;
  _BYTE *v5;

  v5 = &v3[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  *v3 = v1;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v5, v2, a1);
  type metadata accessor for SFAirDrop.PermissionRequest.Style();
}

uint64_t sub_1A2A5EF98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  char v3;

  result = swift_storeEnumTagMultiPayload();
  *(_BYTE *)(v0 + *(int *)(v1 + 52)) = v3;
  return result;
}

void SFAirDrop.PermissionRequest.init(id:requestDate:style:isAnswered:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  type metadata accessor for SFAirDrop.PermissionRequest();
}

void sub_1A2A5F04C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(a1 + 56);
  v4 = sub_1A2AE30C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, v2, v4);
  type metadata accessor for SFAirDrop.PermissionRequest.Style();
}

uint64_t sub_1A2A5F094(uint64_t a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v4, v3, a1);
  *(_BYTE *)(v2 + *(int *)(v5 + 52)) = v1;
  return result;
}

void SFAirDrop.PermissionRequest.description.getter()
{
  type metadata accessor for SFAirDrop.PermissionRequest.Style();
}

void sub_1A2A5F114(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[96];

  MEMORY[0x1E0C80A78](a1);
  v10 = &v17[-v9];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(&v17[-v9], v1 + *(int *)(v2 + 60), a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)(v7 - 112) = 0;
      *(_QWORD *)(v7 - 104) = 0xE000000000000000;
      sub_1A2AE3B20();
      swift_bridgeObjectRelease();
      strcpy((char *)(v7 - 144), "intervention: ");
      *(_BYTE *)(v7 - 129) = -18;
      *(_QWORD *)(v7 - 112) = v6;
      *(_QWORD *)(v7 - 104) = v5;
      *(_QWORD *)(v7 - 96) = v4;
      *(_QWORD *)(v7 - 88) = v3;
      type metadata accessor for SFAirDrop.PermissionRequest.InterventionAction();
    }
    *(_QWORD *)(v7 - 152) = *((_QWORD *)v10 + 2);
    v15 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v15);
    strcpy(&v17[-48], "title prompt acceptActions declineAction ");
    v16 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v7 - 112) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v7 - 104) = v16;
    *(_QWORD *)(v7 - 144) = v6;
    *(_QWORD *)(v7 - 136) = v5;
    *(_QWORD *)(v7 - 128) = v4;
    *(_QWORD *)(v7 - 120) = v3;
    type metadata accessor for SFAirDrop.AcceptAction();
  }
  swift_bridgeObjectRelease();
  v13 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v13);
  strcpy(&v17[-48], "title prompt acceptActions declineAction ");
  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 - 112) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 - 104) = v14;
  *(_QWORD *)(v7 - 144) = v6;
  *(_QWORD *)(v7 - 136) = v5;
  *(_QWORD *)(v7 - 128) = v4;
  *(_QWORD *)(v7 - 120) = v3;
  type metadata accessor for SFAirDrop.AcceptAction();
}

void sub_1A2A5F4A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v3, a1);
  JUMPOUT(0x1A2A5F4FCLL);
}

void static SFAirDrop.PermissionRequest.Style.== infix(_:_:)()
{
  type metadata accessor for SFAirDrop.PermissionRequest.InterventionAction();
}

void sub_1A2A5F570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)(v13 - 240) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v13 - 232) = a1;
  v14 = MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v13 - 256) = (char *)&a9 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  *(_QWORD *)(v13 - 248) = (char *)&a9 - v16;
  v17 = type metadata accessor for SFAirDrop.DeclineAction();
  *(_QWORD *)(v13 - 200) = v17;
  v18 = MEMORY[0x1E0C80A78](v17);
  *(_QWORD *)(v13 - 272) = (char *)&a9 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  *(_QWORD *)(v13 - 264) = (char *)&a9 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v22);
  *(_QWORD *)(v13 - 192) = v12;
  *(_QWORD *)(v13 - 184) = v11;
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 112) = v11;
  *(_QWORD *)(v13 - 176) = v10;
  *(_QWORD *)(v13 - 168) = v9;
  *(_QWORD *)(v13 - 104) = v10;
  *(_QWORD *)(v13 - 96) = v9;
  type metadata accessor for SFAirDrop.PermissionRequest.Style();
}

uint64_t sub_1A2A5F67C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  unsigned __int8 *v19;
  void (*v20)(unsigned __int8 *, uint64_t, uint64_t);
  int EnumCaseMultiPayload;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 *v25;
  int v26;
  int v27;
  unsigned __int8 *v28;
  uint64_t v29;
  void (*v30)(_QWORD, unsigned __int8 *, uint64_t);
  unint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  void (*v49)(_QWORD, uint64_t);
  _BYTE v51[96];

  v5 = a1;
  v6 = *(_QWORD *)(a1 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = &v51[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = &v51[-v11];
  MEMORY[0x1E0C80A78](v10);
  v14 = &v51[-v13];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v4 - 216) = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v16 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v18 = &v51[-v17];
  *(_QWORD *)(v4 - 208) = v16;
  v19 = &v51[*(int *)(v16 + 48) - v17];
  *(_QWORD *)(v4 - 224) = v6;
  v20 = *(void (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 16);
  v20(&v51[-v17], v3, v5);
  v20(v19, *(_QWORD *)(v4 - 160), v5);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    *(_QWORD *)(v4 - 240) = v2;
    *(_QWORD *)(v4 - 232) = v1;
    *(_QWORD *)(v4 - 160) = v18;
    v35 = ((uint64_t (*)(_BYTE *, _BYTE *, uint64_t))v20)(v14, v18, v5);
    MEMORY[0x1E0C80A78](v35);
    strcpy(&v51[-48], "title prompt acceptActions declineAction ");
    v36 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v4 - 120) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v4 - 112) = v36;
    v37 = *(_QWORD *)(v4 - 184);
    *(_QWORD *)(v4 - 152) = *(_QWORD *)(v4 - 192);
    *(_QWORD *)(v4 - 144) = v37;
    v38 = *(_QWORD *)(v4 - 168);
    *(_QWORD *)(v4 - 136) = *(_QWORD *)(v4 - 176);
    *(_QWORD *)(v4 - 128) = v38;
    type metadata accessor for SFAirDrop.AcceptAction();
  }
  if (EnumCaseMultiPayload != 1)
  {
    *(_QWORD *)(v4 - 160) = v18;
    v39 = ((uint64_t (*)(_BYTE *, _BYTE *, uint64_t))v20)(v9, v18, v5);
    MEMORY[0x1E0C80A78](v39);
    strcpy(&v51[-48], "title prompt acceptActions declineAction ");
    v40 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v4 - 120) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v4 - 112) = v40;
    v41 = *(_QWORD *)(v4 - 184);
    *(_QWORD *)(v4 - 152) = *(_QWORD *)(v4 - 192);
    *(_QWORD *)(v4 - 144) = v41;
    v42 = *(_QWORD *)(v4 - 168);
    *(_QWORD *)(v4 - 136) = *(_QWORD *)(v4 - 176);
    *(_QWORD *)(v4 - 128) = v42;
    type metadata accessor for SFAirDrop.AcceptAction();
  }
  v22 = v18;
  v20(v12, (uint64_t)v18, v5);
  v23 = *(_QWORD *)(v4 - 232);
  v24 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  v25 = &v12[v24];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v26 = *v12;
    v27 = *v19;
    v28 = &v19[v24];
    v29 = *(_QWORD *)(v4 - 240);
    v30 = *(void (**)(_QWORD, unsigned __int8 *, uint64_t))(v29 + 32);
    v30(*(_QWORD *)(v4 - 248), v25, v23);
    v30(*(_QWORD *)(v4 - 256), v28, v23);
    if (v26)
    {
      if (v26 == 1)
      {
        v31 = 0xE700000000000000;
        v32 = 0x65766965636572;
        v33 = v18;
        if (v27)
          goto LABEL_7;
LABEL_16:
        v34 = 0xE400000000000000;
        if (v32 != 1684956531)
          goto LABEL_21;
        goto LABEL_19;
      }
      v31 = 0xE800000000000000;
      v32 = 0x6F666E4965726F6DLL;
      v33 = v18;
      if (!v27)
        goto LABEL_16;
    }
    else
    {
      v31 = 0xE400000000000000;
      v32 = 1684956531;
      v33 = v18;
      if (!v27)
        goto LABEL_16;
    }
LABEL_7:
    if (v27 == 1)
    {
      v34 = 0xE700000000000000;
      if (v32 != 0x65766965636572)
        goto LABEL_21;
    }
    else
    {
      v34 = 0xE800000000000000;
      if (v32 != 0x6F666E4965726F6DLL)
        goto LABEL_21;
    }
LABEL_19:
    if (v31 == v34)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_22;
    }
LABEL_21:
    v45 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v45 & 1) == 0)
    {
      v49 = *(void (**)(_QWORD, uint64_t))(v29 + 8);
      v49(*(_QWORD *)(v4 - 256), v23);
      v49(*(_QWORD *)(v4 - 248), v23);
      v43 = 0;
      goto LABEL_24;
    }
LABEL_22:
    v47 = *(_QWORD *)(v4 - 256);
    v46 = *(_QWORD *)(v4 - 248);
    v43 = _s7Sharing9SFAirDropO17PermissionRequestV18InterventionActionV2eeoiySbAGy_x_G_AItFZ_0();
    v48 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v48(v47, v23);
    v48(v46, v23);
LABEL_24:
    v44 = *(_QWORD *)(v4 - 224);
    goto LABEL_25;
  }
  (*(void (**)(unsigned __int8 *, uint64_t))(*(_QWORD *)(v4 - 240) + 8))(&v12[v24], v23);
  v43 = 0;
  v44 = *(_QWORD *)(v4 - 216);
  v5 = *(_QWORD *)(v4 - 208);
  v33 = v22;
LABEL_25:
  (*(void (**)(_BYTE *, uint64_t))(v44 + 8))(v33, v5);
  return v43 & 1;
}

uint64_t sub_1A2A5FFA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726577736E417369 && a2 == 0xEA00000000006465 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4474736575716572 && a2 == 0xEB00000000657461 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A2A6015C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A2A60184 + 4 * byte_1A2B06572[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1A2A60184()
{
  return 0x726577736E417369;
}

uint64_t sub_1A2A601A0()
{
  return 0x4474736575716572;
}

uint64_t sub_1A2A601C0()
{
  return 0x656C797473;
}

uint64_t sub_1A2A601D4(unsigned __int8 *a1, unsigned __int8 *a2, _QWORD *a3, uint64_t a4)
{
  return sub_1A2A64C24(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A70A08);
}

uint64_t sub_1A2A601E4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_1A2A64C4C(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A70A04);
}

uint64_t sub_1A2A601F0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_1A2A64C6C(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A70A04);
}

uint64_t sub_1A2A601FC(_QWORD *a1, uint64_t a2)
{
  return sub_1A2A64CCC(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A6015C);
}

uint64_t sub_1A2A60208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_1A2A61358(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A5FFA0, a4);
}

uint64_t sub_1A2A60214@<X0>(_QWORD *a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_1A2A68504(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A6942C, a2);
}

uint64_t sub_1A2A60220(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B07F18, a1);
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A60254(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B07F18, a1);
  return sub_1A2AE4108();
}

void SFAirDrop.PermissionRequest.encode(to:)()
{
  _s17PermissionRequestV10CodingKeysOMa();
}

uint64_t sub_1A2A602D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  MEMORY[0x1A85895EC](&unk_1A2B07F18, a1);
  v3 = sub_1A2AE3E50();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v12 - v5;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_1A2AE40E4();
  *(_BYTE *)(v2 - 112) = 0;
  sub_1A2AE3130();
  sub_1A296E8A4(&qword_1EE6766D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  v7 = *(_QWORD *)(v2 - 120);
  sub_1A2AE3E2C();
  if (!v7)
  {
    v9 = *(_QWORD *)(v2 - 136);
    *(_BYTE *)(v2 - 112) = 1;
    sub_1A2AE3DFC();
    *(_BYTE *)(v2 - 112) = 2;
    sub_1A2AE30C4();
    sub_1A296E8A4(&qword_1EE67AB88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1A2AE3E2C();
    *(_BYTE *)(v2 - 65) = 3;
    v10 = *(_QWORD *)(v2 - 144);
    *(_QWORD *)(v2 - 112) = v9;
    *(_QWORD *)(v2 - 104) = v10;
    v11 = *(_QWORD *)(v2 - 160);
    *(_QWORD *)(v2 - 96) = *(_QWORD *)(v2 - 152);
    *(_QWORD *)(v2 - 88) = v11;
    type metadata accessor for SFAirDrop.PermissionRequest.Style();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void SFAirDrop.PermissionRequest.init(from:)()
{
  type metadata accessor for SFAirDrop.PermissionRequest.Style();
}

void sub_1A2A60540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v13 - 208) = a1;
  *(_QWORD *)(v13 - 232) = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v13 - 216) = (char *)&a9 - v14;
  v15 = sub_1A2AE30C4();
  *(_QWORD *)(v13 - 168) = v15;
  *(_QWORD *)(v13 - 200) = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)(v13 - 176) = (char *)&a9 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1A2AE3130();
  *(_QWORD *)(v13 - 160) = v17;
  *(_QWORD *)(v13 - 192) = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  *(_QWORD *)(v13 - 144) = (char *)&a9 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v13 - 112) = v11;
  *(_QWORD *)(v13 - 104) = v12;
  *(_QWORD *)(v13 - 96) = v10;
  *(_QWORD *)(v13 - 88) = v9;
  _s17PermissionRequestV10CodingKeysOMa();
}

void sub_1A2A60608(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1A85895EC](&unk_1A2B07F18, a1);
  v6 = sub_1A2AE3DA8();
  *(_QWORD *)(v5 - 128) = v6;
  *(_QWORD *)(v5 - 184) = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 96) = v2;
  *(_QWORD *)(v5 - 88) = v1;
  type metadata accessor for SFAirDrop.PermissionRequest();
}

uint64_t sub_1A2A60674(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  *(_QWORD *)(v2 - 152) = a1;
  v3 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v20 - v4;
  v6 = *(_QWORD **)(v2 - 72);
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  *(_QWORD *)(v2 - 136) = v1;
  v7 = *(_QWORD *)(v2 - 120);
  sub_1A2AE40C0();
  if (v7)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v6);
  *(_QWORD *)(v2 - 120) = v3;
  v9 = *(_QWORD *)(v2 - 184);
  v8 = *(_QWORD *)(v2 - 176);
  v10 = v5;
  v11 = *(_QWORD *)(v2 - 152);
  v12 = *(_QWORD *)(v2 - 168);
  *(_BYTE *)(v2 - 112) = 0;
  sub_1A296E8A4(&qword_1EE676788, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
  v13 = *(_QWORD *)(v2 - 160);
  sub_1A2AE3D78();
  (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v2 - 192) + 32))(v10, *(_QWORD *)(v2 - 144), v13);
  *(_BYTE *)(v2 - 112) = 1;
  v10[*(int *)(v11 + 52)] = sub_1A2AE3D48() & 1;
  *(_BYTE *)(v2 - 112) = 2;
  sub_1A296E8A4(&qword_1EE67AC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  sub_1A2AE3D78();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 200) + 32))(&v10[*(int *)(*(_QWORD *)(v2 - 152) + 56)], v8, v12);
  *(_BYTE *)(v2 - 112) = 3;
  v14 = *(_QWORD *)(v2 - 208);
  MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDrop.PermissionRequest<A>.Style, v14);
  v15 = *(_QWORD *)(v2 - 216);
  sub_1A2AE3D78();
  (*(void (**)(_QWORD, _QWORD))(v9 + 8))(*(_QWORD *)(v2 - 136), *(_QWORD *)(v2 - 128));
  v16 = v15;
  v17 = *(_QWORD *)(v2 - 152);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 232) + 32))(&v10[*(int *)(v17 + 60)], v16, v14);
  v18 = *(_QWORD *)(v2 - 120);
  (*(void (**)(_QWORD, char *, uint64_t))(v18 + 16))(*(_QWORD *)(v2 - 224), v10, v17);
  __swift_destroy_boxed_opaque_existential_0Tm(*(_QWORD *)(v2 - 72));
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v10, v17);
}

void sub_1A2A60968()
{
  SFAirDrop.PermissionRequest.init(from:)();
}

void sub_1A2A60988()
{
  SFAirDrop.PermissionRequest.encode(to:)();
}

uint64_t sub_1A2A609A0()
{
  return static SFAirDrop.PermissionRequest.== infix(_:_:)();
}

void SFAirDrop.PermissionRequest.Style.description.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v3 + 16))((char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)&v12 = 0;
      *((_QWORD *)&v12 + 1) = 0xE000000000000000;
      sub_1A2AE3B20();
      swift_bridgeObjectRelease();
      strcpy((char *)&v10, "intervention: ");
      HIBYTE(v10) = -18;
      v9 = *(_OWORD *)(a1 + 32);
      v12 = *(_OWORD *)(a1 + 16);
      v13 = v9;
      type metadata accessor for SFAirDrop.PermissionRequest.InterventionAction();
    }
    v7 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v7);
    strcpy((char *)&v10 - 48, "title prompt acceptActions declineAction ");
    *(_QWORD *)&v12 = MEMORY[0x1E0DEA968];
    *((_QWORD *)&v12 + 1) = MEMORY[0x1E0DEA968];
    v8 = *(_OWORD *)(a1 + 32);
    v10 = *(_OWORD *)(a1 + 16);
    v11 = v8;
    type metadata accessor for SFAirDrop.AcceptAction();
  }
  swift_bridgeObjectRelease();
  v5 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v5);
  strcpy((char *)&v10 - 48, "title prompt acceptActions declineAction ");
  *(_QWORD *)&v12 = MEMORY[0x1E0DEA968];
  *((_QWORD *)&v12 + 1) = MEMORY[0x1E0DEA968];
  v6 = *(_OWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a1 + 16);
  v11 = v6;
  type metadata accessor for SFAirDrop.AcceptAction();
}

void sub_1A2A60D50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v3, a1);
  JUMPOUT(0x1A2A60DACLL);
}

uint64_t sub_1A2A60DD4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A2A60E04 + 4 * byte_1A2B06576[a1]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_1A2A60E04()
{
  return 0x74706D6F7270;
}

uint64_t sub_1A2A60E18()
{
  return 0x6341747065636361;
}

uint64_t sub_1A2A60E3C()
{
  return 0x41656E696C636564;
}

uint64_t sub_1A2A60E60(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656E696C6E69 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65767265746E69 && a2 == 0xEC0000006E6F6974 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7472656C61 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A2A60FBC(char a1)
{
  if (!a1)
    return 0x656E696C6E69;
  if (a1 == 1)
    return 0x6E65767265746E69;
  return 0x7472656C61;
}

uint64_t sub_1A2A61014(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74706D6F7270 && a2 == 0xE600000000000000 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6341747065636361 && a2 == 0xED0000736E6F6974 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x41656E696C636564 && a2 == 0xED00006E6F697463)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A2A61204(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x776F6C666B726F77 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A2A612EC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E6F69746361;
  else
    return 0x776F6C666B726F77;
}

uint64_t sub_1A2A61320()
{
  return sub_1A2A64B1C();
}

uint64_t sub_1A2A61340(_QWORD *a1, uint64_t a2)
{
  return sub_1A2A64CCC(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A60DD4);
}

uint64_t sub_1A2A6134C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_1A2A61358(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A61014, a4);
}

uint64_t sub_1A2A61358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD)@<X4>, _BYTE *a5@<X8>)
{
  uint64_t result;

  result = a4(a1, a2, a3[2], a3[3], a3[4], a3[5]);
  *a5 = result;
  return result;
}

uint64_t sub_1A2A6138C(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B07EC8, a1);
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A613C0(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B07EC8, a1);
  return sub_1A2AE4108();
}

uint64_t sub_1A2A613F4(_QWORD *a1, uint64_t a2)
{
  return sub_1A2A64CCC(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A60FBC);
}

uint64_t sub_1A2A61400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_1A2A61358(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A60E60, a4);
}

uint64_t sub_1A2A6140C@<X0>(_QWORD *a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_1A2A68504(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A69434, a2);
}

uint64_t sub_1A2A61418(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B07DD8, a1);
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A6144C(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B07DD8, a1);
  return sub_1A2AE4108();
}

uint64_t sub_1A2A61480(_QWORD *a1, uint64_t a2)
{
  return sub_1A2A64CCC(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A70A14);
}

uint64_t sub_1A2A6148C(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B07E28, a1);
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A614C0(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B07E28, a1);
  return sub_1A2AE4108();
}

uint64_t sub_1A2A614F4(unsigned __int8 *a1, unsigned __int8 *a2, _QWORD *a3, uint64_t a4)
{
  return sub_1A2A6844C(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A70A20);
}

uint64_t sub_1A2A61504(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_1A2A68468(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A70A1C);
}

uint64_t sub_1A2A61510(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_1A2A68480(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A70A1C);
}

uint64_t sub_1A2A6151C(_QWORD *a1, uint64_t a2)
{
  return sub_1A2A684E0(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A612EC);
}

uint64_t sub_1A2A61528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_1A2A61358(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A61204, a4);
}

uint64_t sub_1A2A61534@<X0>(_QWORD *a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_1A2A68504(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1A29F3C70, a2);
}

uint64_t sub_1A2A61540(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B07E78, a1);
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A61574(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B07E78, a1);
  return sub_1A2AE4108();
}

void SFAirDrop.PermissionRequest.Style.encode(to:)()
{
  _s17PermissionRequestV5StyleO15AlertCodingKeysOMa();
}

void sub_1A2A615F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v15 = MEMORY[0x1A85895EC](&unk_1A2B07EC8, a1);
  *(_QWORD *)(v13 - 312) = a1;
  *(_QWORD *)(v13 - 320) = v15;
  v16 = sub_1A2AE3E50();
  *(_QWORD *)(v13 - 296) = v16;
  *(_QWORD *)(v13 - 392) = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  *(_QWORD *)(v13 - 304) = (char *)&a9 - v17;
  *(_QWORD *)(v13 - 120) = v9;
  *(_QWORD *)(v13 - 112) = v10;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v12;
  _s17PermissionRequestV5StyleO22InterventionCodingKeysOMa();
}

void sub_1A2A6167C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v15 = MEMORY[0x1A85895EC](&unk_1A2B07E78, a1);
  *(_QWORD *)(v13 - 360) = a1;
  *(_QWORD *)(v13 - 368) = v15;
  v16 = sub_1A2AE3E50();
  *(_QWORD *)(v13 - 328) = v16;
  *(_QWORD *)(v13 - 408) = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  *(_QWORD *)(v13 - 344) = (char *)&a9 - v17;
  *(_QWORD *)(v13 - 120) = v9;
  *(_QWORD *)(v13 - 112) = v10;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v12;
  type metadata accessor for SFAirDrop.PermissionRequest.InterventionAction();
}

void sub_1A2A61704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v13 - 336) = a1;
  *(_QWORD *)(v13 - 288) = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v13 - 352) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 120) = v9;
  *(_QWORD *)(v13 - 112) = v10;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v12;
  _s17PermissionRequestV5StyleO16InlineCodingKeysOMa();
}

void sub_1A2A61758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v15 = MEMORY[0x1A85895EC](&unk_1A2B07E28, a1);
  *(_QWORD *)(v13 - 376) = a1;
  *(_QWORD *)(v13 - 384) = v15;
  v16 = sub_1A2AE3E50();
  *(_QWORD *)(v13 - 216) = v16;
  *(_QWORD *)(v13 - 400) = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  *(_QWORD *)(v13 - 224) = (char *)&a9 - v17;
  v18 = type metadata accessor for SFAirDrop.DeclineAction();
  *(_QWORD *)(v13 - 264) = v18;
  v19 = MEMORY[0x1E0C80A78](v18);
  *(_QWORD *)(v13 - 280) = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v19);
  *(_QWORD *)(v13 - 272) = (char *)&a9 - v22;
  MEMORY[0x1E0C80A78](v21);
  *(_QWORD *)(v13 - 240) = v10;
  *(_QWORD *)(v13 - 232) = v9;
  *(_QWORD *)(v13 - 120) = v9;
  *(_QWORD *)(v13 - 112) = v10;
  *(_QWORD *)(v13 - 256) = v12;
  *(_QWORD *)(v13 - 248) = v11;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v12;
  _s17PermissionRequestV5StyleO10CodingKeysOMa();
}

uint64_t sub_1A2A61874(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t EnumCaseMultiPayload;
  char v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v27[96];

  MEMORY[0x1A85895EC](&unk_1A2B07DD8, a1);
  v6 = sub_1A2AE3E50();
  *(_QWORD *)(v5 - 192) = v6;
  *(_QWORD *)(v5 - 208) = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v27[-v7];
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  *(_QWORD *)(v5 - 176) = v8;
  sub_1A2AE40E4();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 16))(v3, *(_QWORD *)(v5 - 184), v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)EnumCaseMultiPayload)
  {
    *(_QWORD *)(v5 - 184) = *((_QWORD *)v3 + 2);
    MEMORY[0x1E0C80A78](EnumCaseMultiPayload);
    strcpy(&v27[-48], "title prompt acceptActions declineAction ");
    v20 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v5 - 120) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v5 - 112) = v20;
    v21 = *(_QWORD *)(v5 - 240);
    *(_QWORD *)(v5 - 152) = *(_QWORD *)(v5 - 232);
    *(_QWORD *)(v5 - 144) = v21;
    v22 = *(_QWORD *)(v5 - 256);
    *(_QWORD *)(v5 - 136) = *(_QWORD *)(v5 - 248);
    *(_QWORD *)(v5 - 128) = v22;
    type metadata accessor for SFAirDrop.AcceptAction();
  }
  if ((_DWORD)EnumCaseMultiPayload != 1)
  {
    *(_QWORD *)(v5 - 216) = *((_QWORD *)v3 + 2);
    *(_QWORD *)(v5 - 184) = *((_QWORD *)v3 + 3);
    MEMORY[0x1E0C80A78](EnumCaseMultiPayload);
    strcpy(&v27[-48], "title prompt acceptActions declineAction ");
    v23 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v5 - 120) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v5 - 112) = v23;
    v24 = *(_QWORD *)(v5 - 240);
    *(_QWORD *)(v5 - 152) = *(_QWORD *)(v5 - 232);
    *(_QWORD *)(v5 - 144) = v24;
    v25 = *(_QWORD *)(v5 - 256);
    *(_QWORD *)(v5 - 136) = *(_QWORD *)(v5 - 248);
    *(_QWORD *)(v5 - 128) = v25;
    type metadata accessor for SFAirDrop.AcceptAction();
  }
  v10 = *v3;
  v11 = *(_QWORD *)(v5 - 336);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v13 = *(_QWORD *)(v5 - 288);
  v14 = *(_QWORD *)(v5 - 352);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v14, &v3[*(int *)(TupleTypeMetadata2 + 48)], v11);
  *(_BYTE *)(v5 - 120) = 1;
  v15 = *(_QWORD *)(v5 - 344);
  v16 = *(_QWORD *)(v5 - 192);
  v17 = *(_QWORD *)(v5 - 176);
  sub_1A2AE3DB4();
  *(_BYTE *)(v5 - 120) = v10;
  *(_BYTE *)(v5 - 152) = 0;
  sub_1A2A45704();
  v18 = *(_QWORD *)(v5 - 328);
  v19 = *(_QWORD *)(v5 - 200);
  sub_1A2AE3E2C();
  if (v19)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 408) + 8))(v15, v18);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v11);
  }
  else
  {
    *(_BYTE *)(v5 - 120) = 1;
    MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDrop.PermissionRequest<A>.InterventionAction, v11);
    sub_1A2AE3E2C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 408) + 8))(v15, v18);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 288) + 8))(v14, v11);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 208) + 8))(v17, v16);
}

void sub_1A2A61F54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v5 = sub_1A2AE3670();
  *(_QWORD *)(v3 - 168) = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDrop.AcceptAction<A>, a1);
  MEMORY[0x1A85895EC](MEMORY[0x1E0DEAF10], v5, v3 - 168);
  sub_1A2AE3E2C();
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 400) + 8))(*(_QWORD *)(v3 - 224), *(_QWORD *)(v3 - 216));
    sub_1A2A69254(*(_QWORD *)(v3 - 272));
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v3 - 208) + 8))(*(_QWORD *)(v3 - 176), v2);
    swift_bridgeObjectRelease();
    JUMPOUT(0x1A2A61EF8);
  }
  swift_bridgeObjectRelease();
  *(_BYTE *)(v3 - 120) = 3;
  sub_1A296E8A4(&qword_1EE67B5B0, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDrop.DeclineAction, (uint64_t)&protocol conformance descriptor for SFAirDrop.DeclineAction);
  sub_1A2AE3E2C();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 400) + 8))(*(_QWORD *)(v3 - 224), *(_QWORD *)(v3 - 216));
  JUMPOUT(0x1A2A61BB8);
}

void sub_1A2A62020(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v6 = sub_1A2AE3670();
  *(_QWORD *)(v4 - 160) = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDrop.AcceptAction<A>, a1);
  MEMORY[0x1A85895EC](MEMORY[0x1E0DEAF10], v6, v4 - 160);
  sub_1A2AE3E2C();
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 392) + 8))(v2, v3);
    sub_1A2A69254(*(_QWORD *)(v4 - 280));
    JUMPOUT(0x1A2A620B8);
  }
  swift_bridgeObjectRelease();
  *(_BYTE *)(v4 - 120) = 3;
  sub_1A296E8A4(&qword_1EE67B5B0, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDrop.DeclineAction, (uint64_t)&protocol conformance descriptor for SFAirDrop.DeclineAction);
  sub_1A2AE3E2C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 392) + 8))(v2, v3);
  JUMPOUT(0x1A2A61EE0);
}

void SFAirDrop.PermissionRequest.Style.init(from:)()
{
  _s17PermissionRequestV5StyleO15AlertCodingKeysOMa();
}

void sub_1A2A62204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v15 = MEMORY[0x1A85895EC](&unk_1A2B07EC8, a1);
  *(_QWORD *)(v13 - 288) = a1;
  *(_QWORD *)(v13 - 296) = v15;
  v16 = sub_1A2AE3DA8();
  *(_QWORD *)(v13 - 336) = v16;
  *(_QWORD *)(v13 - 360) = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  *(_QWORD *)(v13 - 264) = (char *)&a9 - v17;
  *(_QWORD *)(v13 - 128) = v12;
  *(_QWORD *)(v13 - 120) = v11;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 104) = v10;
  _s17PermissionRequestV5StyleO22InterventionCodingKeysOMa();
}

void sub_1A2A6228C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v15 = MEMORY[0x1A85895EC](&unk_1A2B07E78, a1);
  *(_QWORD *)(v13 - 304) = a1;
  *(_QWORD *)(v13 - 312) = v15;
  v16 = sub_1A2AE3DA8();
  *(_QWORD *)(v13 - 352) = v16;
  *(_QWORD *)(v13 - 376) = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  *(_QWORD *)(v13 - 280) = (char *)&a9 - v17;
  *(_QWORD *)(v13 - 128) = v12;
  *(_QWORD *)(v13 - 120) = v11;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 104) = v10;
  _s17PermissionRequestV5StyleO16InlineCodingKeysOMa();
}

void sub_1A2A62314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v15 = MEMORY[0x1A85895EC](&unk_1A2B07E28, a1);
  *(_QWORD *)(v13 - 320) = a1;
  *(_QWORD *)(v13 - 328) = v15;
  v16 = sub_1A2AE3DA8();
  *(_QWORD *)(v13 - 344) = v16;
  *(_QWORD *)(v13 - 368) = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  *(_QWORD *)(v13 - 272) = (char *)&a9 - v17;
  *(_QWORD *)(v13 - 128) = v12;
  *(_QWORD *)(v13 - 120) = v11;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 104) = v10;
  _s17PermissionRequestV5StyleO10CodingKeysOMa();
}

void sub_1A2A6239C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 - 200) = MEMORY[0x1A85895EC](&unk_1A2B07DD8, a1);
  v6 = sub_1A2AE3DA8();
  *(_QWORD *)(v5 - 240) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 - 232) = v6;
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)(v5 - 392) = v4;
  *(_QWORD *)(v5 - 128) = v4;
  *(_QWORD *)(v5 - 120) = v3;
  *(_QWORD *)(v5 - 384) = v3;
  *(_QWORD *)(v5 - 216) = v2;
  *(_QWORD *)(v5 - 208) = v1;
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v2;
  type metadata accessor for SFAirDrop.PermissionRequest.Style();
}

uint64_t sub_1A2A62418(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[96];

  *(_QWORD *)(v2 - 248) = a1;
  v3 = *(_QWORD *)(a1 - 8);
  v4 = MEMORY[0x1E0C80A78](a1);
  v6 = &v51[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = &v51[-v8];
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = &v51[-v11];
  MEMORY[0x1E0C80A78](v10);
  v14 = &v51[-v13];
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v2 - 184), *(_QWORD *)(*(_QWORD *)(v2 - 184) + 24));
  *(_QWORD *)(v2 - 224) = v1;
  v15 = *(_QWORD *)(v2 - 192);
  sub_1A2AE40C0();
  if (!v15)
  {
    *(_QWORD *)(v2 - 400) = v9;
    *(_QWORD *)(v2 - 416) = v12;
    *(_QWORD *)(v2 - 408) = v6;
    v16 = *(_QWORD *)(v2 - 216);
    v17 = *(_QWORD *)(v2 - 208);
    *(_QWORD *)(v2 - 200) = v3;
    *(_QWORD *)(v2 - 424) = v14;
    *(_QWORD *)(v2 - 192) = 0;
    v18 = *(_QWORD *)(v2 - 224);
    v19 = *(_QWORD *)(v2 - 232);
    *(_QWORD *)(v2 - 160) = sub_1A2AE3D9C();
    v20 = sub_1A2AE3670();
    MEMORY[0x1A85895EC](MEMORY[0x1E0DEAF38], v20);
    *(_QWORD *)(v2 - 128) = sub_1A2AE3AA8();
    *(_QWORD *)(v2 - 120) = v21;
    *(_QWORD *)(v2 - 112) = v22;
    *(_QWORD *)(v2 - 104) = v23;
    v24 = sub_1A2AE3A9C();
    MEMORY[0x1A85895EC](MEMORY[0x1E0DEBF88], v24);
    sub_1A2AE38BC();
    v25 = *(unsigned __int8 *)(v2 - 160);
    if (v25 == 3
      || (v27 = *(_OWORD *)(v2 - 128),
          v26 = *(_OWORD *)(v2 - 112),
          *(_OWORD *)(v2 - 448) = v27,
          *(_OWORD *)(v2 - 160) = v27,
          *(_OWORD *)(v2 - 144) = v26,
          (sub_1A2AE38F8() & 1) == 0))
    {
      v31 = sub_1A2AE3B5C();
      swift_allocError();
      v33 = v32;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE67AC00);
      *v33 = *(_QWORD *)(v2 - 248);
      sub_1A2AE3CF4();
      sub_1A2AE3B50();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v33, *MEMORY[0x1E0DEC450], v31);
      swift_willThrow();
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 240) + 8))(v18, v19);
    }
    else if (v25)
    {
      if (v25 == 1)
      {
        *(_BYTE *)(v2 - 160) = 1;
        v28 = *(_QWORD *)(v2 - 192);
        sub_1A2AE3CE8();
        v29 = *(_QWORD *)(v2 - 240);
        if (!v28)
        {
          *(_BYTE *)(v2 - 65) = 0;
          sub_1A2A692CC();
          sub_1A2AE3D78();
          v30 = *(_QWORD *)(v2 - 384);
          *(_QWORD *)(v2 - 160) = *(_QWORD *)(v2 - 392);
          *(_QWORD *)(v2 - 152) = v30;
          *(_QWORD *)(v2 - 144) = v17;
          *(_QWORD *)(v2 - 136) = v16;
          type metadata accessor for SFAirDrop.PermissionRequest.InterventionAction();
        }
      }
      else
      {
        *(_BYTE *)(v2 - 160) = 2;
        v35 = *(_QWORD *)(v2 - 192);
        sub_1A2AE3CE8();
        v29 = *(_QWORD *)(v2 - 240);
        if (!v35)
        {
          *(_BYTE *)(v2 - 160) = 0;
          v37 = sub_1A2AE3D3C();
          v42 = *(uint64_t **)(v2 - 408);
          *v42 = v37;
          v42[1] = v43;
          *(_BYTE *)(v2 - 160) = 1;
          v44 = sub_1A2AE3D3C();
          v48 = *(_QWORD *)(v2 - 408);
          *(_QWORD *)(v2 - 192) = v48 + 32;
          *(_QWORD *)(v48 + 16) = v44;
          *(_QWORD *)(v48 + 24) = v49;
          v50 = *(_QWORD *)(v2 - 384);
          *(_QWORD *)(v2 - 160) = *(_QWORD *)(v2 - 392);
          *(_QWORD *)(v2 - 152) = v50;
          *(_QWORD *)(v2 - 144) = v17;
          *(_QWORD *)(v2 - 136) = v16;
          type metadata accessor for SFAirDrop.AcceptAction();
        }
      }
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v18, v19);
    }
    else
    {
      *(_BYTE *)(v2 - 160) = 0;
      v34 = *(_QWORD *)(v2 - 192);
      sub_1A2AE3CE8();
      if (!v34)
      {
        *(_BYTE *)(v2 - 160) = 0;
        v36 = sub_1A2AE3D3C();
        v39 = *(uint64_t **)(v2 - 416);
        *v39 = v36;
        v39[1] = v40;
        *(_BYTE *)(v2 - 160) = 1;
        v41 = sub_1A2AE3D3C();
        v45 = *(_QWORD *)(v2 - 416);
        *(_QWORD *)(v2 - 192) = v45 + 32;
        *(_QWORD *)(v45 + 16) = v41;
        *(_QWORD *)(v45 + 24) = v46;
        v47 = *(_QWORD *)(v2 - 384);
        *(_QWORD *)(v2 - 160) = *(_QWORD *)(v2 - 392);
        *(_QWORD *)(v2 - 152) = v47;
        *(_QWORD *)(v2 - 144) = v17;
        *(_QWORD *)(v2 - 136) = v16;
        type metadata accessor for SFAirDrop.AcceptAction();
      }
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 240) + 8))(v18, v19);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0Tm(*(_QWORD *)(v2 - 184));
}

void sub_1A2A62BCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = v1;
  v9 = sub_1A2AE3670();
  *(_BYTE *)(v6 - 65) = 2;
  v10 = a1;
  v11 = *(_QWORD *)(v6 - 336);
  *(_QWORD *)(v6 - 168) = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDrop.AcceptAction<A>, v10);
  MEMORY[0x1A85895EC](MEMORY[0x1E0DEAF40], v9, v6 - 168);
  v12 = sub_1A2AE3D78();
  if (v8)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 360) + 8))(v2, v11);
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);
    JUMPOUT(0x1A2A62C78);
  }
  MEMORY[0x1E0C80A78](v12);
  v13 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 - 160) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 - 152) = v13;
  *(_QWORD *)(v6 - 144) = v9;
  *(_QWORD *)(v6 - 136) = type metadata accessor for SFAirDrop.DeclineAction();
  swift_getTupleTypeMetadata();
  type metadata accessor for SFAirDrop.DeclineAction();
  *(_BYTE *)(v6 - 160) = 3;
  sub_1A296E8A4(&qword_1EE67B6E8, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDrop.DeclineAction, (uint64_t)&protocol conformance descriptor for SFAirDrop.DeclineAction);
  v14 = *(_QWORD *)(v6 - 336);
  sub_1A2AE3D78();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 360) + 8))(v2, v14);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);
  v15 = *(_QWORD *)(v6 - 408);
  v16 = *(_QWORD *)(v6 - 248);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 200) + 32))(*(_QWORD *)(v6 - 424), v15, v16);
  JUMPOUT(0x1A2A62A8CLL);
}

void sub_1A2A63048()
{
  SFAirDrop.PermissionRequest.Style.init(from:)();
}

void sub_1A2A63068()
{
  SFAirDrop.PermissionRequest.Style.encode(to:)();
}

void sub_1A2A6307C()
{
  static SFAirDrop.PermissionRequest.Style.== infix(_:_:)();
}

void SFAirDrop.PermissionRequest.defaultDestination.getter()
{
  type metadata accessor for SFAirDrop.AcceptAction.Single();
}

void sub_1A2A630D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 176) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v5 - 168) = a1;
  MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v5 - 112) = v2;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 96) = v3;
  *(_QWORD *)(v5 - 88) = v4;
  type metadata accessor for SFAirDrop.AcceptAction();
}

void sub_1A2A63114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v15 = sub_1A2AE39F4();
  v16 = MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)(v13 - 160) = a1;
  *(_QWORD *)(v13 - 152) = (char *)&a9 - v17;
  *(_QWORD *)(v13 - 144) = *(_QWORD *)(a1 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v18);
  *(_QWORD *)(v13 - 136) = v10;
  *(_QWORD *)(v13 - 112) = v10;
  *(_QWORD *)(v13 - 104) = v9;
  *(_QWORD *)(v13 - 96) = v11;
  *(_QWORD *)(v13 - 88) = v12;
  type metadata accessor for SFAirDrop.PermissionRequest.Style();
}

uint64_t sub_1A2A631B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t TupleTypeMetadata;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  int EnumCaseMultiPayload;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[96];

  v9 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v11 = &v35[-v10];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v9 + 16))(&v35[-v10], *(_QWORD *)(v7 - 120) + *(int *)(v2 + 60), a1);
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, a1);
LABEL_5:
    v22 = *(_QWORD *)(v7 - 136);
    v23 = *(_QWORD *)(v7 - 128);
    goto LABEL_6;
  }
  *(_QWORD *)(v7 - 120) = v6;
  v12 = v3;
  *(_QWORD *)(v7 - 184) = v5;
  v13 = *(_QWORD *)(v7 - 168);
  swift_bridgeObjectRelease();
  v14 = swift_bridgeObjectRelease();
  v15 = *((_QWORD *)v11 + 4);
  MEMORY[0x1E0C80A78](v14);
  strcpy(&v35[-48], "title prompt acceptActions declineAction ");
  v16 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 - 112) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 - 104) = v16;
  v17 = *(_QWORD *)(v7 - 160);
  *(_QWORD *)(v7 - 96) = sub_1A2AE3670();
  *(_QWORD *)(v7 - 88) = type metadata accessor for SFAirDrop.DeclineAction();
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  sub_1A2A69254((uint64_t)&v11[*(int *)(TupleTypeMetadata + 80)]);
  *(_QWORD *)(v7 - 112) = v15;
  v19 = sub_1A2AE3670();
  MEMORY[0x1A85895EC](MEMORY[0x1E0DEAF50], v19);
  v20 = *(_QWORD *)(v7 - 152);
  sub_1A2AE38E0();
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v7 - 144);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v20, 1, v17) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v20, v4);
    goto LABEL_5;
  }
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32);
  v28 = *(_QWORD *)(v7 - 120);
  v27(v28, v20, v17);
  v29 = v1;
  v27(v1, v28, v17);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v22 = *(_QWORD *)(v7 - 136);
  v23 = *(_QWORD *)(v7 - 128);
  if (EnumCaseMultiPayload != 1)
  {
    v31 = sub_1A2AE3130();
    v32 = v29 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    v34 = *(_QWORD *)(v7 - 184);
    v33 = *(_QWORD *)(v7 - 176);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v34, v29, v13);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v32, v31);
    v24 = *(_QWORD *)(v22 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v23, v34 + *(int *)(v13 + 64), v22);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v13);
    v25 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v23, v25, 1, v22);
  }
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v29, v17);
LABEL_6:
  v24 = *(_QWORD *)(v22 - 8);
  v25 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v23, v25, 1, v22);
}

uint64_t SFAirDrop.ButtonConfiguration.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  _QWORD v4[2];

  if (*(_BYTE *)(v0 + 32))
  {
    if (*(_BYTE *)(v0 + 32) != 1)
    {
      sub_1A2AE3B20();
      swift_bridgeObjectRelease();
      strcpy((char *)v4, "symbol+text: ");
      HIWORD(v4[1]) = -4864;
      sub_1A2AE34F0();
      sub_1A2AE34F0();
      goto LABEL_7;
    }
    v1 = 0x203A6C6F626D7973;
    v2 = 0xE800000000000000;
  }
  else
  {
    v1 = 0x203A74786574;
    v2 = 0xE600000000000000;
  }
  v4[0] = v1;
  v4[1] = v2;
LABEL_7:
  sub_1A2AE34F0();
  return v4[0];
}

uint64_t SFAirDrop.ButtonConfiguration.localizedTitle.getter()
{
  uint64_t *v0;
  uint64_t v1;

  if (!*((_BYTE *)v0 + 32))
    goto LABEL_6;
  if (*((_BYTE *)v0 + 32) != 1)
  {
    v0 += 2;
LABEL_6:
    v1 = *v0;
    swift_bridgeObjectRetain();
    return v1;
  }
  return 0;
}

uint64_t sub_1A2A6360C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6C6F626D7973;
  if (*v0 != 1)
    v1 = 0x65546C6F626D7973;
  if (*v0)
    return v1;
  else
    return 1954047348;
}

uint64_t sub_1A2A63660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2A6943C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2A63684()
{
  sub_1A2A6931C();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A636AC()
{
  sub_1A2A6931C();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A636D4()
{
  return 0x614E6D6574737973;
}

uint64_t sub_1A2A636F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x614E6D6574737973 && a2 == 0xEA0000000000656DLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A2AE3EE0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A2A63790()
{
  sub_1A2A693A4();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A637B8()
{
  sub_1A2A693A4();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A637E0()
{
  _BYTE *v0;

  if (*v0)
    return 0x657A696C61636F6CLL;
  else
    return 0x614E6D6574737973;
}

uint64_t sub_1A2A6382C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2A69584(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2A63850()
{
  sub_1A2A69360();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A63878()
{
  sub_1A2A69360();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A638A0()
{
  return 0x657A696C61636F6CLL;
}

uint64_t sub_1A2A638C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x657A696C61636F6CLL && a2 == 0xEE00656C74695464)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A2AE3EE0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A2A6397C()
{
  sub_1A2A693E8();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A639A4()
{
  sub_1A2A693E8();
  return sub_1A2AE4108();
}

uint64_t SFAirDrop.ButtonConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;

  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67DD18);
  v24 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v30 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67DD20);
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  MEMORY[0x1E0C80A78](v4);
  v27 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67DD28);
  v25 = *(_QWORD *)(v6 - 8);
  v26 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67DD30);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v1;
  v32 = v1[1];
  v33 = v13;
  v14 = v1[2];
  v23[1] = v1[3];
  v23[2] = v14;
  v15 = *((unsigned __int8 *)v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2A6931C();
  sub_1A2AE40E4();
  if (v15)
  {
    v16 = v34;
    v17 = v9;
    if (v15 == 1)
    {
      v36 = 1;
      sub_1A2A693A4();
      v18 = v27;
      sub_1A2AE3DB4();
      v19 = v29;
      sub_1A2AE3DF0();
      v20 = v28;
    }
    else
    {
      v39 = 2;
      sub_1A2A69360();
      v18 = v30;
      sub_1A2AE3DB4();
      v38 = 0;
      v19 = v31;
      sub_1A2AE3DF0();
      if (!v16)
      {
        v37 = 1;
        sub_1A2AE3DF0();
      }
      v20 = v24;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v17);
  }
  else
  {
    v35 = 0;
    sub_1A2A693E8();
    sub_1A2AE3DB4();
    v21 = v26;
    sub_1A2AE3DF0();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t SFAirDrop.ButtonConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;

  v46 = a2;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67DD58);
  v50 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v52 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67DD60);
  v49 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v51 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67DD68);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67DD70);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v53 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1A2A6931C();
  v14 = v54;
  sub_1A2AE40C0();
  if (!v14)
  {
    v45 = v6;
    v15 = v5;
    v17 = v51;
    v16 = v52;
    v54 = v10;
    v18 = sub_1A2AE3D9C();
    if (*(_QWORD *)(v18 + 16) == 1)
    {
      v44 = v12;
      v19 = *(unsigned __int8 *)(v18 + 32);
      if (*(_BYTE *)(v18 + 32))
      {
        if (v19 == 1)
        {
          v56 = 1;
          sub_1A2A693A4();
          v20 = v17;
          sub_1A2AE3CE8();
          v21 = v47;
          v22 = sub_1A2AE3D3C();
          v30 = v29;
          v31 = *(void (**)(char *, uint64_t))(v49 + 8);
          v52 = (char *)v22;
          v31(v20, v21);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v54 + 8))(v44, v9);
          v32 = 0;
          v33 = 0;
          v34 = (uint64_t)v52;
        }
        else
        {
          v59 = 2;
          sub_1A2A69360();
          sub_1A2AE3CE8();
          v51 = (char *)v9;
          v58 = 0;
          v28 = v48;
          v34 = sub_1A2AE3D3C();
          v37 = v36;
          v57 = 1;
          v38 = sub_1A2AE3D3C();
          v39 = v16;
          v40 = v54;
          v32 = v38;
          v33 = v41;
          (*(void (**)(char *, uint64_t))(v50 + 8))(v39, v28);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, char *))(v40 + 8))(v44, v51);
          v30 = v37;
        }
      }
      else
      {
        v55 = 0;
        sub_1A2A693E8();
        sub_1A2AE3CE8();
        v26 = v15;
        v34 = sub_1A2AE3D3C();
        v30 = v35;
        (*(void (**)(char *, uint64_t))(v45 + 8))(v8, v26);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v54 + 8))(v44, v9);
        v32 = 0;
        v33 = 0;
      }
      v42 = v46;
      *v46 = v34;
      v42[1] = v30;
      v42[2] = v32;
      v42[3] = v33;
      *((_BYTE *)v42 + 32) = v19;
    }
    else
    {
      v23 = sub_1A2AE3B5C();
      swift_allocError();
      v25 = v24;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE67AC00);
      *v25 = &type metadata for SFAirDrop.ButtonConfiguration;
      sub_1A2AE3CF4();
      sub_1A2AE3B50();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x1E0DEC450], v23);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v12, v9);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v53);
}

uint64_t sub_1A2A64274@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SFAirDrop.ButtonConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1A2A64288(_QWORD *a1)
{
  return SFAirDrop.ButtonConfiguration.encode(to:)(a1);
}

uint64_t SFAirDrop.AcceptAction.Single.id.getter()
{
  uint64_t v0;

  v0 = sub_1A2A696A4();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t SFAirDrop.AcceptAction.Single.buttonConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(a1 + 32) = v6;
  return sub_1A2993E10(v2, v3, v4, v5, v6);
}

uint64_t SFAirDrop.AcceptAction.Single.prominent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t SFAirDrop.AcceptAction.Single.hidden.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 50);
}

uint64_t SFAirDrop.AcceptAction.Single.defaultAnswer.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 64));
}

void static SFAirDrop.AcceptAction.Single.== infix(_:_:)()
{
  type metadata accessor for SFAirDrop.AcceptAction.Single();
}

uint64_t sub_1A2A64358(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  char v12;
  void (*v13)(_BYTE *, _QWORD *, uint64_t);
  void (*v14)(_BYTE *, uint64_t);
  char v15;
  void (*v16)(_BYTE *, _QWORD *, uint64_t);
  char v17;
  __int128 v18;
  char v19;
  __int128 v20;
  void (*v21)(_BYTE *, uint64_t);
  _BYTE v23[80];

  v5 = *(_QWORD *)(a1 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v10 = &v23[-v9];
  if (*v2 == *v1 && v2[1] == v1[1])
  {
    v16 = *(void (**)(_BYTE *, _QWORD *, uint64_t))(v5 + 16);
    v16(&v23[-v9], v2, a1);
    v16(v8, v1, a1);
    goto LABEL_8;
  }
  v12 = sub_1A2AE3EE0();
  v13 = *(void (**)(_BYTE *, _QWORD *, uint64_t))(v5 + 16);
  v13(v10, v2, a1);
  v13(v8, v1, a1);
  if ((v12 & 1) != 0)
  {
LABEL_8:
    v17 = v10[48];
    v18 = *((_OWORD *)v10 + 2);
    *(_OWORD *)(v3 - 112) = *((_OWORD *)v10 + 1);
    *(_OWORD *)(v3 - 96) = v18;
    *(_BYTE *)(v3 - 80) = v17;
    v19 = v8[48];
    v20 = *((_OWORD *)v8 + 2);
    *(_OWORD *)(v3 - 160) = *((_OWORD *)v8 + 1);
    *(_OWORD *)(v3 - 144) = v20;
    *(_BYTE *)(v3 - 128) = v19;
    v15 = _s7Sharing9SFAirDropO19ButtonConfigurationO2eeoiySbAE_AEtFZ_0(v3 - 112, v3 - 160);
    v21 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
    v21(v8, a1);
    v21(v10, a1);
    return v15 & 1;
  }
  v14 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v14(v8, a1);
  v14(v10, a1);
  v15 = 0;
  return v15 & 1;
}

void SFAirDrop.AcceptAction.Single.init(id:buttonConfiguration:prominent:hidden:defaultAnswer:operation:)()
{
  sub_1A2A4574C();
  sub_1A2A56374();
  type metadata accessor for SFXPCBlock();
}

void sub_1A2A64518(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v11;

  *(_QWORD *)(v9 - 152) = a1;
  MEMORY[0x1E0C80A78](a1);
  v10 = *(_BYTE *)(v5 + 32);
  *(_QWORD *)v2 = v7;
  *(_QWORD *)(v2 + 8) = v1;
  v11 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v5;
  *(_OWORD *)(v2 + 32) = v11;
  *(_BYTE *)(v2 + 48) = v10;
  *(_BYTE *)(v2 + 49) = *(_DWORD *)(v9 - 184);
  *(_BYTE *)(v2 + 50) = *(_DWORD *)(v9 - 180);
  *(_QWORD *)(v9 - 128) = v3;
  *(_QWORD *)(v9 - 120) = v6;
  *(_QWORD *)(v9 - 112) = v4;
  *(_QWORD *)(v9 - 104) = v8;
  type metadata accessor for SFAirDrop.AcceptAction.Single();
}

uint64_t sub_1A2A6457C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v10 = *(_QWORD *)(v2 - 8);
  v11 = *(_QWORD *)(v8 - 176);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v1 + *(int *)(a1 + 64), v11, v2);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v2;
  v12[3] = v5;
  v12[4] = v4;
  v12[5] = v6;
  v13 = *(_QWORD *)(v8 - 136);
  v12[6] = *(_QWORD *)(v8 - 144);
  v12[7] = v13;
  SFXPCBlock.init(_:)((uint64_t)&unk_1EE67DD80, (uint64_t)v12, v2, (uint64_t)&type metadata for VoidResponse, v5, v4, *(_QWORD *)(v8 - 160), *(_QWORD *)(v8 - 168), v3);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v7 + 32))(v1 + *(int *)(a1 + 68), v3, *(_QWORD *)(v8 - 152));
}

uint64_t sub_1A2A6463C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a2;
  return swift_task_switch();
}

uint64_t sub_1A2A64658()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 24))(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SFAirDrop.AcceptAction.Single.accept(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  return swift_task_switch();
}

void sub_1A2A646AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  __int128 v8;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v1 + 16);
  sub_1A2A68AC8(v3, v3);
  v4 = *(_QWORD *)(v3 - 8);
  swift_allocObject();
  *(_QWORD *)(v0 + 88) = sub_1A2AE3634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v2, v3);
  sub_1A2AE3670();
  *(_QWORD *)(v0 + 96) = swift_task_alloc();
  v6 = sub_1A2A4574C();
  v7 = sub_1A2A56374();
  v8 = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = &type metadata for VoidResponse;
  *(_OWORD *)(v0 + 32) = v8;
  *(_QWORD *)(v0 + 48) = v6;
  *(_QWORD *)(v0 + 56) = v7;
  type metadata accessor for SFXPCBlock();
}

uint64_t sub_1A2A6478C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  *v1 = v2;
  v1[1] = sub_1A2A647BC;
  return SFXPCBlock.dynamicallyCall(withArguments:)(a1, v3, a1);
}

uint64_t sub_1A2A647BC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1A2A64828()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_1A2A6485C(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1A2A6486C()
{
  return sub_1A2AE4018();
}

uint64_t sub_1A2A64890(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A2B47C30 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E656E696D6F7270 && a2 == 0xE900000000000074 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6564646968 && a2 == 0xE600000000000000 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x41746C7561666564 && a2 == 0xED0000726577736ELL || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F6974617265706FLL && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1A2A64B1C()
{
  sub_1A2AE400C();
  sub_1A2AE4018();
  return sub_1A2AE4030();
}

uint64_t sub_1A2A64B60(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A2A64B88 + 4 * byte_1A2B0657A[a1]))(25705, 0xE200000000000000);
}

unint64_t sub_1A2A64B88()
{
  return 0xD000000000000013;
}

uint64_t sub_1A2A64BA4()
{
  return 0x6E656E696D6F7270;
}

uint64_t sub_1A2A64BC4()
{
  return 0x6E6564646968;
}

uint64_t sub_1A2A64BD8()
{
  return 0x41746C7561666564;
}

uint64_t sub_1A2A64BFC()
{
  return 0x6F6974617265706FLL;
}

uint64_t sub_1A2A64C18(unsigned __int8 *a1, unsigned __int8 *a2, _QWORD *a3, uint64_t a4)
{
  return sub_1A2A64C24(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A6485C);
}

uint64_t sub_1A2A64C24(unsigned __int8 *a1, unsigned __int8 *a2, _QWORD *a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(*a1, *a2, a3[2], a3[3], a3[4], a3[5]);
}

uint64_t sub_1A2A64C40(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_1A2A64C4C(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A6486C);
}

uint64_t sub_1A2A64C4C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v4;

  return a4(a1, *v4, a2[2], a2[3], a2[4], a2[5]);
}

uint64_t sub_1A2A64C60(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_1A2A64C6C(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A6486C);
}

uint64_t sub_1A2A64C6C(uint64_t a1, _QWORD *a2, uint64_t a3, void (*a4)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v4;
  _BYTE v8[72];

  sub_1A2AE400C();
  a4(v8, *v4, a2[2], a2[3], a2[4], a2[5]);
  return sub_1A2AE4030();
}

uint64_t sub_1A2A64CC0(_QWORD *a1, uint64_t a2)
{
  return sub_1A2A64CCC(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A64B60);
}

uint64_t sub_1A2A64CCC(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v3;

  return a3(*v3, a1[2], a1[3], a1[4], a1[5]);
}

uint64_t sub_1A2A64CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_1A2A61358(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A64890, a4);
}

uint64_t sub_1A2A64CEC@<X0>(_QWORD *a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_1A2A68504(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A707B0, a2);
}

uint64_t sub_1A2A64CF8(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B07C48, a1);
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A64D2C(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B07C48, a1);
  return sub_1A2AE4108();
}

void SFAirDrop.AcceptAction.Single.encode(to:)()
{
  _s12AcceptActionO6SingleV10CodingKeysOMa();
}

uint64_t sub_1A2A64DB0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;

  MEMORY[0x1A85895EC](&unk_1A2B07C48, a1);
  v3 = sub_1A2AE3E50();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - v5;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v7 = *(_QWORD *)(v2 - 136);
  sub_1A2AE40E4();
  *(_BYTE *)(v2 - 128) = 0;
  v8 = *(_QWORD *)(v2 - 144);
  sub_1A2AE3DF0();
  if (!v8)
  {
    v9 = *(_QWORD *)(v2 - 160);
    v10 = *(_QWORD *)(v2 - 152);
    v11 = *(_BYTE *)(v7 + 48);
    v12 = *(_OWORD *)(v7 + 32);
    *(_OWORD *)(v2 - 128) = *(_OWORD *)(v7 + 16);
    *(_OWORD *)(v2 - 112) = v12;
    *(_BYTE *)(v2 - 96) = v11;
    *(_BYTE *)(v2 - 65) = 1;
    sub_1A2A69744();
    sub_1A2AE3E2C();
    *(_BYTE *)(v2 - 128) = 2;
    sub_1A2AE3DFC();
    *(_BYTE *)(v2 - 128) = 3;
    sub_1A2AE3DFC();
    *(_BYTE *)(v2 - 128) = 4;
    v14 = v10;
    v15 = *(_QWORD *)(v2 - 176);
    sub_1A2AE3E2C();
    *(_BYTE *)(v2 - 65) = 5;
    v16 = sub_1A2A4574C();
    v17 = sub_1A2A56374();
    *(_QWORD *)(v2 - 128) = v14;
    *(_QWORD *)(v2 - 120) = &type metadata for VoidResponse;
    *(_QWORD *)(v2 - 112) = v9;
    *(_QWORD *)(v2 - 104) = v15;
    *(_QWORD *)(v2 - 96) = v16;
    *(_QWORD *)(v2 - 88) = v17;
    type metadata accessor for SFXPCBlock();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void SFAirDrop.AcceptAction.Single.init(from:)()
{
  sub_1A2A4574C();
  sub_1A2A56374();
  type metadata accessor for SFXPCBlock();
}

void sub_1A2A65064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v13 - 176) = a1;
  *(_QWORD *)(v13 - 232) = *(_QWORD *)(a1 - 8);
  v14 = MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v13 - 216) = (char *)&a9 - v15;
  *(_QWORD *)(v13 - 200) = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v14);
  *(_QWORD *)(v13 - 184) = (char *)&a9 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v13 - 128) = v10;
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 112) = v11;
  *(_QWORD *)(v13 - 104) = v9;
  _s12AcceptActionO6SingleV10CodingKeysOMa();
}

void sub_1A2A650E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1A85895EC](&unk_1A2B07C48, a1);
  v6 = sub_1A2AE3DA8();
  *(_QWORD *)(v5 - 152) = v6;
  *(_QWORD *)(v5 - 192) = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)(v5 - 208) = v2;
  *(_QWORD *)(v5 - 128) = v2;
  *(_QWORD *)(v5 - 120) = v4;
  *(_QWORD *)(v5 - 168) = v4;
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v1;
  type metadata accessor for SFAirDrop.AcceptAction.Single();
}

uint64_t sub_1A2A65154(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v21 - v6;
  v8 = v1[3];
  *(_QWORD *)(v3 - 144) = v1;
  __swift_project_boxed_opaque_existential_1(v1, v8);
  *(_QWORD *)(v3 - 160) = v2;
  v9 = *(_QWORD *)(v3 - 136);
  sub_1A2AE40C0();
  if (v9)
    return __swift_destroy_boxed_opaque_existential_0Tm(*(_QWORD *)(v3 - 144));
  v10 = *(_QWORD *)(v3 - 192);
  v11 = *(_QWORD *)(v3 - 184);
  *(_QWORD *)(v3 - 136) = v5;
  v12 = *(_QWORD *)(v3 - 176);
  *(_BYTE *)(v3 - 128) = 0;
  v13 = v7;
  *(_QWORD *)v7 = sub_1A2AE3D3C();
  *((_QWORD *)v7 + 1) = v14;
  *(_BYTE *)(v3 - 65) = 1;
  sub_1A2A69788();
  sub_1A2AE3D78();
  v15 = *(_BYTE *)(v3 - 96);
  v16 = *(_OWORD *)(v3 - 112);
  *((_OWORD *)v7 + 1) = *(_OWORD *)(v3 - 128);
  *((_OWORD *)v7 + 2) = v16;
  v7[48] = v15;
  *(_BYTE *)(v3 - 128) = 2;
  v7[49] = sub_1A2AE3D48() & 1;
  *(_BYTE *)(v3 - 128) = 3;
  v7[50] = sub_1A2AE3D48() & 1;
  *(_BYTE *)(v3 - 128) = 4;
  v17 = *(_QWORD *)(v3 - 208);
  sub_1A2AE3D78();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 200) + 32))(&v13[*(int *)(a1 + 64)], v11, v17);
  *(_BYTE *)(v3 - 128) = 5;
  MEMORY[0x1A85895EC](&protocol conformance descriptor for SFXPCBlock<A, B>, v12);
  v18 = *(_QWORD *)(v3 - 216);
  sub_1A2AE3D78();
  (*(void (**)(_QWORD, _QWORD))(v10 + 8))(*(_QWORD *)(v3 - 160), *(_QWORD *)(v3 - 152));
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 232) + 32))(&v13[*(int *)(a1 + 68)], v18, v12);
  v19 = *(_QWORD *)(v3 - 136);
  (*(void (**)(_QWORD, char *, uint64_t))(v19 + 16))(*(_QWORD *)(v3 - 224), v13, a1);
  __swift_destroy_boxed_opaque_existential_0Tm(*(_QWORD *)(v3 - 144));
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v13, a1);
}

void sub_1A2A65438()
{
  SFAirDrop.AcceptAction.Single.init(from:)();
}

void sub_1A2A65458()
{
  SFAirDrop.AcceptAction.Single.encode(to:)();
}

uint64_t sub_1A2A6546C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_1A2A696A4();
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void sub_1A2A65494()
{
  static SFAirDrop.AcceptAction.Single.== infix(_:_:)();
}

uint64_t SFAirDrop.AcceptAction.Composite.buttonConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(a1 + 32) = v6;
  return sub_1A2993E10(v2, v3, v4, v5, v6);
}

uint64_t SFAirDrop.AcceptAction.Composite.actions.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 SFAirDrop.AcceptAction.Composite.init(buttonConfiguration:actions:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  __n128 result;
  __int128 v5;

  v3 = *(_BYTE *)(a1 + 32);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v5;
  *(_BYTE *)(a3 + 32) = v3;
  *(_QWORD *)(a3 + 40) = a2;
  return result;
}

uint64_t static SFAirDrop.AcceptAction.Composite.== infix(_:_:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v10;
  char v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[2];
  char v16;
  __int128 v17;
  __int128 v18;
  char v19;

  v10 = *((_BYTE *)a1 + 32);
  v11 = *(_BYTE *)(a2 + 32);
  v12 = a1[1];
  v17 = *a1;
  v18 = v12;
  v19 = v10;
  v13 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v13;
  v16 = v11;
  if ((_s7Sharing9SFAirDropO19ButtonConfigurationO2eeoiySbAE_AEtFZ_0((uint64_t)&v17, (uint64_t)v15) & 1) != 0)
  {
    *(_QWORD *)&v17 = a3;
    *((_QWORD *)&v17 + 1) = a4;
    *(_QWORD *)&v18 = a5;
    *((_QWORD *)&v18 + 1) = a6;
    type metadata accessor for SFAirDrop.AcceptAction.Single();
  }
  return 0;
}

uint64_t sub_1A2A655A0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x80000001A2B47C30 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736E6F69746361 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A2A6568C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x736E6F69746361;
  else
    return 0xD000000000000013;
}

uint64_t sub_1A2A656C8()
{
  return sub_1A2A683D8();
}

uint64_t sub_1A2A656EC(_QWORD *a1, uint64_t a2)
{
  return sub_1A2A684E0(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A6568C);
}

uint64_t sub_1A2A656F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_1A2A61358(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A655A0, a4);
}

uint64_t sub_1A2A65704(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B07BF8, a1);
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A65738(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B07BF8, a1);
  return sub_1A2AE4108();
}

void SFAirDrop.AcceptAction.Composite.encode(to:)()
{
  _s12AcceptActionO9CompositeV10CodingKeysOMa();
}

uint64_t sub_1A2A657B8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  MEMORY[0x1A85895EC](&unk_1A2B07BF8, a1);
  v4 = sub_1A2AE3E50();
  *(_QWORD *)(v3 - 152) = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - v5;
  *(_OWORD *)(v3 - 176) = *(_OWORD *)v1;
  v7 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v3 - 184) = *(_QWORD *)(v1 + 24);
  *(_DWORD *)(v3 - 188) = *(unsigned __int8 *)(v1 + 32);
  *(_QWORD *)(v3 - 232) = *(_QWORD *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1A2AE40E4();
  *(_OWORD *)(v3 - 120) = *(_OWORD *)(v3 - 176);
  v8 = *(_QWORD *)(v3 - 184);
  *(_QWORD *)(v3 - 104) = v7;
  *(_QWORD *)(v3 - 96) = v8;
  *(_BYTE *)(v3 - 88) = *(_DWORD *)(v3 - 188);
  *(_BYTE *)(v3 - 72) = 0;
  sub_1A2A69744();
  v9 = *(_QWORD *)(v3 - 144);
  sub_1A2AE3E2C();
  if (!v9)
  {
    *(_QWORD *)(v3 - 72) = *(_QWORD *)(v3 - 232);
    *(_BYTE *)(v3 - 121) = 1;
    v10 = *(_QWORD *)(v3 - 208);
    *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 200);
    *(_QWORD *)(v3 - 112) = v10;
    v11 = *(_QWORD *)(v3 - 224);
    *(_QWORD *)(v3 - 104) = *(_QWORD *)(v3 - 216);
    *(_QWORD *)(v3 - 96) = v11;
    type metadata accessor for SFAirDrop.AcceptAction.Single();
  }
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v3 - 152) + 8))(v6, v4);
}

void SFAirDrop.AcceptAction.Composite.init(from:)()
{
  _s12AcceptActionO9CompositeV10CodingKeysOMa();
}

uint64_t sub_1A2A659D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  MEMORY[0x1A85895EC](&unk_1A2B07BF8, a1);
  v5 = sub_1A2AE3DA8();
  *(_QWORD *)(v4 - 144) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  *(_QWORD *)(v4 - 152) = v8;
  v9 = *(_QWORD *)(v4 - 136);
  sub_1A2AE40C0();
  if (!v9)
  {
    *(_QWORD *)(v4 - 184) = v3;
    v11 = *(_QWORD *)(v4 - 168);
    v10 = *(_QWORD *)(v4 - 160);
    *(_QWORD *)(v4 - 136) = v6;
    *(_BYTE *)(v4 - 72) = 0;
    sub_1A2A69788();
    sub_1A2AE3D78();
    v13 = *(_QWORD *)(v4 - 120);
    *(_QWORD *)(v4 - 200) = *(_QWORD *)(v4 - 104);
    *(_QWORD *)(v4 - 192) = v13;
    *(_QWORD *)(v4 - 208) = *(_QWORD *)(v4 - 96);
    *(_QWORD *)(v4 - 120) = v1;
    *(_QWORD *)(v4 - 112) = v2;
    *(_QWORD *)(v4 - 104) = v11;
    *(_QWORD *)(v4 - 96) = v10;
    type metadata accessor for SFAirDrop.AcceptAction.Single();
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v3);
}

void sub_1A2A65B1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v8 = sub_1A2AE3670();
  *(_BYTE *)(v6 - 120) = 1;
  v9 = *(_QWORD *)(v6 - 208);
  *(_QWORD *)(v6 - 160) = v4;
  v10 = v4;
  v12 = *(_QWORD *)(v6 - 200);
  v11 = *(_QWORD *)(v6 - 192);
  *(_DWORD *)(v6 - 168) = v5;
  sub_1A2993E10(v11, v10, v12, v9, v5);
  *(_QWORD *)(v6 - 128) = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDrop.AcceptAction<A>.Single, a1);
  MEMORY[0x1A85895EC](MEMORY[0x1E0DEAF40], v8, v6 - 128);
  sub_1A2AE3D78();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 136) + 8))(v1, v3);
  if (v2)
  {
    v13 = *(_QWORD *)(v6 - 192);
    v14 = *(_QWORD *)(v6 - 160);
    v15 = *(_DWORD *)(v6 - 168);
    sub_1A2994DD4(v13, v14, v12, v9, v15);
    __swift_destroy_boxed_opaque_existential_0Tm(*(_QWORD *)(v6 - 184));
    sub_1A2994DD4(v13, v14, v12, v9, v15);
  }
  else
  {
    v16 = *(_QWORD *)(v6 - 72);
    v17 = *(_QWORD *)(v6 - 192);
    v18 = *(_QWORD *)(v6 - 160);
    v19 = *(_DWORD *)(v6 - 168);
    sub_1A2993E10(v17, v18, v12, v9, v19);
    swift_bridgeObjectRetain();
    sub_1A2994DD4(v17, v18, v12, v9, v19);
    v20 = v12;
    v21 = *(_QWORD *)(v6 - 184);
    v22 = *(_QWORD *)(v6 - 176);
    *(_QWORD *)v22 = v17;
    *(_QWORD *)(v22 + 8) = v18;
    *(_QWORD *)(v22 + 16) = v20;
    *(_QWORD *)(v22 + 24) = v9;
    *(_BYTE *)(v22 + 32) = v19;
    *(_QWORD *)(v22 + 40) = v16;
    __swift_destroy_boxed_opaque_existential_0Tm(v21);
    sub_1A2994DD4(v17, v18, v20, v9, v19);
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1A2A65ACCLL);
}

void sub_1A2A65CA0()
{
  SFAirDrop.AcceptAction.Composite.init(from:)();
}

void sub_1A2A65CC0()
{
  SFAirDrop.AcceptAction.Composite.encode(to:)();
}

uint64_t sub_1A2A65CD4(__int128 *a1, uint64_t a2, uint64_t *a3)
{
  return static SFAirDrop.AcceptAction.Composite.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4], a3[5]);
}

void SFAirDrop.AcceptAction.id.getter(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  MEMORY[0x1E0C80A78](a1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v3);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1A2994DD4(*(_QWORD *)v3, *((_QWORD *)v3 + 1), *((_QWORD *)v3 + 2), *((_QWORD *)v3 + 3), v3[32]);
    swift_bridgeObjectRelease();
    v5 = *(_OWORD *)(a1 + 32);
    v7 = *(_OWORD *)(a1 + 16);
    v8 = v5;
    type metadata accessor for SFAirDrop.AcceptAction.Composite();
  }
  v6 = *(_OWORD *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 16);
  v8 = v6;
  type metadata accessor for SFAirDrop.AcceptAction.Single();
}

void sub_1A2A65DE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t TupleTypeMetadata2;

  v4 = sub_1A2AE3130();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v1, v2 + *(int *)(TupleTypeMetadata2 + 48), v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
  JUMPOUT(0x1A2A65E40);
}

void SFAirDrop.AcceptAction.hidden.getter()
{
  type metadata accessor for SFAirDrop.AcceptAction.Single();
}

uint64_t sub_1A2A65E8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE v15[80];

  v4 = *(_QWORD *)(a1 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = &v15[-v6];
  v8 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v5);
  v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, v2, v1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v1);
    return 0;
  }
  else
  {
    v12 = sub_1A2AE3130();
    v13 = &v10[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 32))(v7, v10, a1);
    v11 = v7[50];
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v7, a1);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v13, v12);
  }
  return v11;
}

void static SFAirDrop.AcceptAction.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[34];

  v18[16] = a1;
  v18[17] = a2;
  v10 = sub_1A2AE3130();
  v18[19] = *(_QWORD *)(v10 - 8);
  v18[20] = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v18[13] = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v18[14] = (char *)v18 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v18[6] = (char *)v18 - v16;
  MEMORY[0x1E0C80A78](v15);
  v18[11] = (char *)v18 - v17;
  v18[27] = a3;
  v18[28] = a4;
  v18[29] = a5;
  v18[30] = a6;
  type metadata accessor for SFAirDrop.AcceptAction.Single();
}

void sub_1A2A6609C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v13 - 256) = a1;
  *(_QWORD *)(v13 - 272) = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v13 - 320) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 136) = v11;
  *(_QWORD *)(v13 - 128) = v9;
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 112) = v10;
  type metadata accessor for SFAirDrop.AcceptAction();
}

uint64_t sub_1A2A660EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  void (*v18)(_BYTE *, _BYTE *, uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  void (*v23)(_QWORD, _BYTE *, uint64_t);
  uint64_t v24;
  _BYTE v26[96];

  v7 = *(_QWORD *)(a1 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v26[-v11];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v5 - 288) = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v14 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v16 = &v26[-v15];
  *(_QWORD *)(v5 - 280) = v14;
  v17 = &v26[*(int *)(v14 + 48) - v15];
  *(_QWORD *)(v5 - 232) = v7;
  v18 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16);
  v18(&v26[-v15], *(_BYTE **)(v5 - 224), a1);
  v18(v17, *(_BYTE **)(v5 - 216), a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(_QWORD *)(v5 - 208) = v16;
  if (EnumCaseMultiPayload == 1)
  {
    v18(v10, v16, a1);
    *(_QWORD *)(v5 - 304) = *v10;
    *(_QWORD *)(v5 - 272) = v10[1];
    *(_QWORD *)(v5 - 264) = v10[2];
    *(_QWORD *)(v5 - 256) = v10[3];
    *(_QWORD *)(v5 - 136) = v3;
    *(_QWORD *)(v5 - 128) = v1;
    *(_QWORD *)(v5 - 120) = v4;
    *(_QWORD *)(v5 - 112) = v2;
    type metadata accessor for SFAirDrop.AcceptAction.Composite();
  }
  *(_QWORD *)(v5 - 312) = v3;
  *(_QWORD *)(v5 - 296) = v1;
  *(_QWORD *)(v5 - 224) = v4;
  *(_QWORD *)(v5 - 216) = v2;
  v18(v12, v16, a1);
  v20 = *(_QWORD *)(v5 - 256);
  v21 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v22 = &v17[v21];
    (*(void (**)(_QWORD, _BYTE *, uint64_t))(*(_QWORD *)(v5 - 272) + 32))(*(_QWORD *)(v5 - 320), v17, v20);
    v23 = *(void (**)(_QWORD, _BYTE *, uint64_t))(*(_QWORD *)(v5 - 200) + 32);
    v24 = *(_QWORD *)(v5 - 192);
    v23(*(_QWORD *)(v5 - 264), &v12[v21], v24);
    v23(*(_QWORD *)(v5 - 304), v22, v24);
    static SFAirDrop.AcceptAction.Single.== infix(_:_:)();
  }
  (*(void (**)(_BYTE *, _QWORD))(*(_QWORD *)(v5 - 200) + 8))(&v12[v21], *(_QWORD *)(v5 - 192));
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v5 - 272) + 8))(v12, v20);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v5 - 288) + 8))(*(_QWORD *)(v5 - 208), *(_QWORD *)(v5 - 280));
  return 0;
}

BOOL sub_1A2A66650(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1A2A66660()
{
  return sub_1A2AE4018();
}

uint64_t sub_1A2A66684(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C676E6973 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7469736F706D6F63 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A2A66778(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7469736F706D6F63;
  else
    return 0x656C676E6973;
}

uint64_t sub_1A2A667B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A2A66894(char a1)
{
  if ((a1 & 1) != 0)
    return 0x696669746E656469;
  else
    return 12383;
}

uint64_t sub_1A2A668C4(unsigned __int8 *a1, unsigned __int8 *a2, _QWORD *a3, uint64_t a4)
{
  return sub_1A2A6844C(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A66650);
}

uint64_t sub_1A2A668D0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_1A2A68468(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A66660);
}

uint64_t sub_1A2A668DC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_1A2A68480(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A66660);
}

uint64_t sub_1A2A668E8(_QWORD *a1, uint64_t a2)
{
  return sub_1A2A684E0(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A66778);
}

uint64_t sub_1A2A668F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_1A2A61358(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A66684, a4);
}

uint64_t sub_1A2A66900(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B07B08, a1);
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A66934(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B07B08, a1);
  return sub_1A2AE4108();
}

uint64_t sub_1A2A66968(_QWORD *a1, uint64_t a2)
{
  return sub_1A2A684E0(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A70A18);
}

uint64_t sub_1A2A66974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_1A2A61358(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A667B0, a4);
}

uint64_t sub_1A2A66980(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B07BA8, a1);
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A669B4(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B07BA8, a1);
  return sub_1A2AE4108();
}

uint64_t sub_1A2A669E8(_QWORD *a1, uint64_t a2)
{
  return sub_1A2A684E0(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A66894);
}

uint64_t sub_1A2A669F4(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B07B58, a1);
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A66A28(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B07B58, a1);
  return sub_1A2AE4108();
}

void SFAirDrop.AcceptAction.encode(to:)()
{
  _s12AcceptActionO19CompositeCodingKeysOMa();
}

void sub_1A2A66AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v15 = MEMORY[0x1A85895EC](&unk_1A2B07BA8, a1);
  *(_QWORD *)(v13 - 272) = a1;
  *(_QWORD *)(v13 - 280) = v15;
  v16 = sub_1A2AE3E50();
  *(_QWORD *)(v13 - 160) = v16;
  *(_QWORD *)(v13 - 256) = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  *(_QWORD *)(v13 - 168) = (char *)&a9 - v17;
  *(_QWORD *)(v13 - 136) = v9;
  *(_QWORD *)(v13 - 128) = v10;
  *(_QWORD *)(v13 - 120) = v11;
  *(_QWORD *)(v13 - 112) = v12;
  _s12AcceptActionO16SingleCodingKeysOMa();
}

void sub_1A2A66B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v15 = MEMORY[0x1A85895EC](&unk_1A2B07B58, a1);
  *(_QWORD *)(v13 - 320) = a1;
  *(_QWORD *)(v13 - 328) = v15;
  v16 = sub_1A2AE3E50();
  *(_QWORD *)(v13 - 264) = v16;
  *(_QWORD *)(v13 - 344) = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  *(_QWORD *)(v13 - 184) = (char *)&a9 - v17;
  v18 = sub_1A2AE3130();
  *(_QWORD *)(v13 - 232) = v18;
  *(_QWORD *)(v13 - 248) = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x1E0C80A78](v18);
  *(_QWORD *)(v13 - 176) = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  *(_QWORD *)(v13 - 192) = (char *)&a9 - v21;
  *(_QWORD *)(v13 - 136) = v9;
  *(_QWORD *)(v13 - 128) = v10;
  *(_QWORD *)(v13 - 120) = v11;
  *(_QWORD *)(v13 - 112) = v12;
  type metadata accessor for SFAirDrop.AcceptAction.Single();
}

void sub_1A2A66C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v13 - 336) = a1;
  *(_QWORD *)(v13 - 216) = *(_QWORD *)(a1 - 8);
  v14 = MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v13 - 224) = (char *)&a9 - v15;
  MEMORY[0x1E0C80A78](v14);
  *(_QWORD *)(v13 - 288) = v9;
  *(_QWORD *)(v13 - 136) = v9;
  *(_QWORD *)(v13 - 128) = v10;
  *(_QWORD *)(v13 - 296) = v10;
  *(_QWORD *)(v13 - 304) = v11;
  *(_QWORD *)(v13 - 120) = v11;
  *(_QWORD *)(v13 - 112) = v12;
  *(_QWORD *)(v13 - 312) = v12;
  _s12AcceptActionO10CodingKeysOMa();
}

uint64_t sub_1A2A66CA0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  MEMORY[0x1A85895EC](&unk_1A2B07B08, a1);
  v6 = sub_1A2AE3E50();
  *(_QWORD *)(v5 - 144) = v6;
  *(_QWORD *)(v5 - 208) = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - v7;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(_QWORD *)(v5 - 152) = v8;
  sub_1A2AE40E4();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v5 - 200), v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_QWORD *)(v5 - 224) = *(_QWORD *)(v3 + 24);
    *(_DWORD *)(v5 - 264) = *(unsigned __int8 *)(v3 + 32);
    v9 = *(_QWORD *)(v5 - 296);
    *(_QWORD *)(v5 - 136) = *(_QWORD *)(v5 - 288);
    *(_QWORD *)(v5 - 128) = v9;
    v10 = *(_QWORD *)(v5 - 312);
    *(_QWORD *)(v5 - 120) = *(_QWORD *)(v5 - 304);
    *(_QWORD *)(v5 - 112) = v10;
    type metadata accessor for SFAirDrop.AcceptAction.Composite();
  }
  v11 = *(_QWORD *)(v5 - 336);
  v12 = *(_QWORD *)(v5 - 232);
  v13 = v3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 216) + 32))(*(_QWORD *)(v5 - 224), v3, v11);
  v14 = *(_QWORD *)(v5 - 248);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v14 + 32))(*(_QWORD *)(v5 - 192), v13, v12);
  *(_BYTE *)(v5 - 136) = 0;
  v16 = *(_QWORD *)(v5 - 152);
  v15 = *(_QWORD *)(v5 - 144);
  sub_1A2AE3DB4();
  *(_BYTE *)(v5 - 136) = 0;
  MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDrop.AcceptAction<A>.Single, v11);
  v17 = *(_QWORD *)(v5 - 264);
  v18 = *(_QWORD *)(v5 - 240);
  sub_1A2AE3E2C();
  if (!v18)
  {
    *(_BYTE *)(v5 - 136) = 1;
    sub_1A296E8A4(&qword_1EE6766D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
    sub_1A2AE3E2C();
  }
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v5 - 344) + 8))(*(_QWORD *)(v5 - 184), v17);
  (*(void (**)(_QWORD, uint64_t))(v14 + 8))(*(_QWORD *)(v5 - 192), v12);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v5 - 216) + 8))(*(_QWORD *)(v5 - 224), v11);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 208) + 8))(v16, v15);
}

void SFAirDrop.AcceptAction.init(from:)()
{
  _s12AcceptActionO19CompositeCodingKeysOMa();
}

void sub_1A2A6714C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v13 - 232) = MEMORY[0x1A85895EC](&unk_1A2B07BA8, a1);
  *(_QWORD *)(v13 - 224) = a1;
  v15 = sub_1A2AE3DA8();
  *(_QWORD *)(v13 - 288) = v15;
  *(_QWORD *)(v13 - 296) = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)(v13 - 216) = (char *)&a9 - v16;
  *(_QWORD *)(v13 - 128) = v12;
  *(_QWORD *)(v13 - 120) = v11;
  *(_QWORD *)(v13 - 112) = v10;
  *(_QWORD *)(v13 - 104) = v9;
  _s12AcceptActionO16SingleCodingKeysOMa();
}

void sub_1A2A671C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v13 - 248) = MEMORY[0x1A85895EC](&unk_1A2B07B58, a1);
  *(_QWORD *)(v13 - 240) = a1;
  v15 = sub_1A2AE3DA8();
  *(_QWORD *)(v13 - 304) = v15;
  *(_QWORD *)(v13 - 312) = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)(v13 - 208) = (char *)&a9 - v16;
  *(_QWORD *)(v13 - 128) = v12;
  *(_QWORD *)(v13 - 120) = v11;
  *(_QWORD *)(v13 - 112) = v10;
  *(_QWORD *)(v13 - 104) = v9;
  _s12AcceptActionO10CodingKeysOMa();
}

void sub_1A2A6723C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1A85895EC](&unk_1A2B07B08, a1);
  v6 = sub_1A2AE3DA8();
  *(_QWORD *)(v5 - 176) = v6;
  *(_QWORD *)(v5 - 200) = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)(v5 - 280) = v4;
  *(_QWORD *)(v5 - 128) = v4;
  *(_QWORD *)(v5 - 120) = v3;
  *(_QWORD *)(v5 - 272) = v3;
  *(_QWORD *)(v5 - 264) = v2;
  *(_QWORD *)(v5 - 112) = v2;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 256) = v1;
  type metadata accessor for SFAirDrop.AcceptAction();
}

uint64_t sub_1A2A672C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v35[96];

  *(_QWORD *)(v2 - 192) = a1;
  v3 = *(_QWORD *)(a1 - 8);
  v4 = MEMORY[0x1E0C80A78](a1);
  v6 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = &v35[-v8];
  MEMORY[0x1E0C80A78](v7);
  v11 = &v35[-v10];
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v2 - 72), *(_QWORD *)(*(_QWORD *)(v2 - 72) + 24));
  *(_QWORD *)(v2 - 184) = v1;
  v12 = *(_QWORD *)(v2 - 168);
  sub_1A2AE40C0();
  if (!v12)
  {
    *(_QWORD *)(v2 - 168) = 0;
    *(_QWORD *)(v2 - 328) = v9;
    *(_QWORD *)(v2 - 336) = v6;
    *(_QWORD *)(v2 - 352) = v3;
    *(_QWORD *)(v2 - 344) = v11;
    v13 = *(_QWORD *)(v2 - 192);
    v14 = *(_QWORD *)(v2 - 184);
    *(_QWORD *)(v2 - 160) = sub_1A2AE3D9C();
    v15 = sub_1A2AE3670();
    MEMORY[0x1A85895EC](MEMORY[0x1E0DEAF38], v15);
    *(_QWORD *)(v2 - 128) = sub_1A2AE3AA8();
    *(_QWORD *)(v2 - 120) = v16;
    *(_QWORD *)(v2 - 112) = v17;
    *(_QWORD *)(v2 - 104) = v18;
    v19 = sub_1A2AE3A9C();
    MEMORY[0x1A85895EC](MEMORY[0x1E0DEBF88], v19);
    sub_1A2AE38BC();
    v20 = *(unsigned __int8 *)(v2 - 160);
    if (v20 == 2
      || (v22 = *(_OWORD *)(v2 - 128),
          v21 = *(_OWORD *)(v2 - 112),
          *(_OWORD *)(v2 - 368) = v22,
          *(_OWORD *)(v2 - 160) = v22,
          *(_OWORD *)(v2 - 144) = v21,
          (sub_1A2AE38F8() & 1) == 0))
    {
      v27 = sub_1A2AE3B5C();
      swift_allocError();
      v29 = v28;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE67AC00);
      *v29 = v13;
      v30 = *(_QWORD *)(v2 - 176);
      sub_1A2AE3CF4();
      sub_1A2AE3B50();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, *MEMORY[0x1E0DEC450], v27);
      swift_willThrow();
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 200) + 8))(v14, v30);
    }
    else
    {
      if ((v20 & 1) != 0)
      {
        *(_BYTE *)(v2 - 160) = 1;
        v24 = *(_QWORD *)(v2 - 176);
        v31 = *(_QWORD *)(v2 - 168);
        sub_1A2AE3CE8();
        if (!v31)
        {
          v32 = *(_QWORD *)(v2 - 272);
          *(_QWORD *)(v2 - 160) = *(_QWORD *)(v2 - 280);
          *(_QWORD *)(v2 - 152) = v32;
          v33 = *(_QWORD *)(v2 - 256);
          *(_QWORD *)(v2 - 144) = *(_QWORD *)(v2 - 264);
          *(_QWORD *)(v2 - 136) = v33;
          type metadata accessor for SFAirDrop.AcceptAction.Composite();
        }
      }
      else
      {
        *(_BYTE *)(v2 - 160) = 0;
        v24 = *(_QWORD *)(v2 - 176);
        v23 = *(_QWORD *)(v2 - 168);
        sub_1A2AE3CE8();
        if (!v23)
        {
          v25 = *(_QWORD *)(v2 - 272);
          *(_QWORD *)(v2 - 160) = *(_QWORD *)(v2 - 280);
          *(_QWORD *)(v2 - 152) = v25;
          v26 = *(_QWORD *)(v2 - 256);
          *(_QWORD *)(v2 - 144) = *(_QWORD *)(v2 - 264);
          *(_QWORD *)(v2 - 136) = v26;
          type metadata accessor for SFAirDrop.AcceptAction.Single();
        }
      }
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 200) + 8))(v14, v24);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0Tm(*(_QWORD *)(v2 - 72));
}

void sub_1A2A679A8()
{
  SFAirDrop.AcceptAction.init(from:)();
}

void sub_1A2A679C8()
{
  SFAirDrop.AcceptAction.encode(to:)();
}

void sub_1A2A679DC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  static SFAirDrop.AcceptAction.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4], a3[5]);
}

uint64_t SFAirDrop.DeclineAction.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDrop.DeclineAction.buttonConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(a1 + 32) = v6;
  return sub_1A2993E10(v2, v3, v4, v5, v6);
}

uint64_t SFAirDrop.DeclineAction.hidden.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;

  v10 = *(_BYTE *)(a3 + 32);
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  v11 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a7 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(a7 + 32) = v11;
  *(_BYTE *)(a7 + 48) = v10;
  *(_BYTE *)(a7 + 49) = a4;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a5;
  *(_QWORD *)(v12 + 24) = a6;
  v13 = a7 + *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
  sub_1A2AE3124();
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788);
  v15 = (_QWORD *)(v13 + *(int *)(result + 68));
  *v15 = &unk_1EE67DDA8;
  v15[1] = v12;
  return result;
}

uint64_t sub_1A2A67AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a3;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_1A2A67AF0()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A2A67B24()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A2A67B48 + 4 * byte_1A2B06580[*v0]))(25705, 0xE200000000000000);
}

unint64_t sub_1A2A67B48()
{
  return 0xD000000000000013;
}

uint64_t sub_1A2A67B64()
{
  return 0x6E6564646968;
}

uint64_t sub_1A2A67B78()
{
  return 0x6F6974617265706FLL;
}

uint64_t sub_1A2A67B94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2A707B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2A67BB8()
{
  sub_1A2A6988C();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A67BE0()
{
  sub_1A2A6988C();
  return sub_1A2AE4108();
}

uint64_t SFAirDrop.DeclineAction.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v9;
  __int128 v10;
  _BYTE v12[16];
  __int128 v13;
  __int128 v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67DDB0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2A6988C();
  sub_1A2AE40E4();
  LOBYTE(v13) = 0;
  sub_1A2AE3DF0();
  if (!v2)
  {
    v9 = *(_BYTE *)(v3 + 48);
    v10 = *(_OWORD *)(v3 + 32);
    v13 = *(_OWORD *)(v3 + 16);
    v14 = v10;
    v15 = v9;
    v12[15] = 1;
    sub_1A2A69744();
    sub_1A2AE3E2C();
    LOBYTE(v13) = 2;
    sub_1A2AE3DFC();
    type metadata accessor for SFAirDrop.DeclineAction();
    LOBYTE(v13) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788);
    sub_1A296E5E4(&qword_1EE67DDC0, &qword_1EE67B788, (uint64_t)&protocol conformance descriptor for SFXPCBlock<A, B>);
    sub_1A2AE3E2C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SFAirDrop.DeclineAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  char v27;
  char v28;

  v20 = a2;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788);
  MEMORY[0x1E0C80A78](v21);
  v22 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67DDC8);
  v4 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SFAirDrop.DeclineAction();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2A6988C();
  v10 = v24;
  sub_1A2AE40C0();
  if (v10)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  v24 = v7;
  v11 = v4;
  v13 = (uint64_t)v22;
  v12 = v23;
  LOBYTE(v25) = 0;
  *(_QWORD *)v9 = sub_1A2AE3D3C();
  *((_QWORD *)v9 + 1) = v14;
  v28 = 1;
  sub_1A2A69788();
  sub_1A2AE3D78();
  v15 = v27;
  v16 = v26;
  *((_OWORD *)v9 + 1) = v25;
  *((_OWORD *)v9 + 2) = v16;
  v9[48] = v15;
  LOBYTE(v25) = 2;
  v17 = sub_1A2AE3D48();
  v19 = 0;
  v9[49] = v17 & 1;
  LOBYTE(v25) = 3;
  sub_1A296E5E4(&qword_1EE67DDD0, &qword_1EE67B788, (uint64_t)&protocol conformance descriptor for SFXPCBlock<A, B>);
  sub_1A2AE3D78();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v12);
  sub_1A2990414(v13, (uint64_t)&v9[*(int *)(v24 + 28)], &qword_1EE67B788);
  sub_1A2A698D0((uint64_t)v9, v20);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return sub_1A2A69254((uint64_t)v9);
}

uint64_t sub_1A2A680E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDrop.DeclineAction.init(from:)(a1, a2);
}

uint64_t sub_1A2A680F8(_QWORD *a1)
{
  return SFAirDrop.DeclineAction.encode(to:)(a1);
}

uint64_t sub_1A2A6810C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t _s7Sharing9SFAirDropO17PermissionRequestV2id10Foundation4UUIDVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1A2AE3130();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void SFAirDrop.PermissionRequest.InterventionAction.init(id:operation:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v22 = a6;
  v23 = a7;
  v21 = a5;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A2AE3130();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(a8, a1, v16);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = a3;
  sub_1A2AE3124();
  v19 = &v15[*(int *)(v13 + 68)];
  *(_QWORD *)v19 = &unk_1EE67DDE0;
  *((_QWORD *)v19 + 1) = v18;
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a1, v16);
  v24 = a4;
  v25 = v21;
  v26 = v22;
  v27 = v23;
  type metadata accessor for SFAirDrop.PermissionRequest.InterventionAction();
}

uint64_t sub_1A2A6825C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_1A2990414(v2, v1 + *(int *)(a1 + 52), &qword_1EE67B7A0);
}

uint64_t sub_1A2A68294(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a3;
  *(_QWORD *)(v4 + 24) = a4;
  *(_BYTE *)(v4 + 32) = *a2;
  return swift_task_switch();
}

uint64_t sub_1A2A682B4()
{
  uint64_t v0;
  void (*v1)(char *);
  char v3;

  v1 = *(void (**)(char *))(v0 + 16);
  v3 = *(_BYTE *)(v0 + 32);
  v1(&v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A2A682F4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6974617265706FLL && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A2A683D8()
{
  sub_1A2AE400C();
  sub_1A2AE4018();
  return sub_1A2AE4030();
}

uint64_t sub_1A2A6841C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6F6974617265706FLL;
  else
    return 25705;
}

uint64_t sub_1A2A6844C(unsigned __int8 *a1, unsigned __int8 *a2, _QWORD *a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(*a1, *a2, a3[2], a3[3], a3[4], a3[5]);
}

uint64_t sub_1A2A68468(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v4;

  return a4(a1, *v4, a2[2], a2[3], a2[4], a2[5]);
}

uint64_t sub_1A2A68480(uint64_t a1, _QWORD *a2, uint64_t a3, void (*a4)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v4;
  _BYTE v8[72];

  sub_1A2AE400C();
  a4(v8, *v4, a2[2], a2[3], a2[4], a2[5]);
  return sub_1A2AE4030();
}

uint64_t sub_1A2A684D4(_QWORD *a1, uint64_t a2)
{
  return sub_1A2A684E0(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A6841C);
}

uint64_t sub_1A2A684E0(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v3;

  return a3(*v3, a1[2], a1[3], a1[4], a1[5]);
}

uint64_t sub_1A2A684F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_1A2A61358(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A2A682F4, a4);
}

uint64_t sub_1A2A68504@<X0>(_QWORD *a1@<X1>, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD)@<X3>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = a2(a1[2], a1[3], a1[4], a1[5]);
  *a3 = result;
  return result;
}

uint64_t sub_1A2A68538(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B07A68, a1);
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A6856C(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B07A68, a1);
  return sub_1A2AE4108();
}

void SFAirDrop.PermissionRequest.InterventionAction.encode(to:)()
{
  _s17PermissionRequestV18InterventionActionV10CodingKeysOMa();
}

uint64_t sub_1A2A685E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  MEMORY[0x1A85895EC](&unk_1A2B07A68, a1);
  v3 = sub_1A2AE3E50();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - v5;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_1A2AE40E4();
  *(_BYTE *)(v2 - 112) = 0;
  sub_1A2AE3130();
  sub_1A296E8A4(&qword_1EE6766D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  v7 = *(_QWORD *)(v2 - 72);
  sub_1A2AE3E2C();
  if (!v7)
  {
    *(_BYTE *)(v2 - 112) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0);
    sub_1A296E5E4(&qword_1EE67DDE8, &qword_1EE67B7A0, (uint64_t)&protocol conformance descriptor for SFXPCBlock<A, B>);
    sub_1A2AE3E2C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void SFAirDrop.PermissionRequest.InterventionAction.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[5];
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a1;
  v14[2] = a6;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0);
  MEMORY[0x1E0C80A78](v15);
  v14[4] = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A2AE3130();
  v12 = *(_QWORD *)(v11 - 8);
  v17 = v11;
  v18 = v12;
  MEMORY[0x1E0C80A78](v11);
  v16 = (char *)v14 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  _s17PermissionRequestV18InterventionActionV10CodingKeysOMa();
}

void sub_1A2A68820(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1A85895EC](&unk_1A2B07A68, a1);
  v6 = sub_1A2AE3DA8();
  *(_QWORD *)(v5 - 128) = v6;
  *(_QWORD *)(v5 - 184) = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 96) = v2;
  *(_QWORD *)(v5 - 88) = v1;
  type metadata accessor for SFAirDrop.PermissionRequest.InterventionAction();
}

uint64_t sub_1A2A6888C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  *(_QWORD *)(v2 - 200) = a1;
  v3 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v18 - v4;
  v6 = *(_QWORD **)(v2 - 72);
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  *(_QWORD *)(v2 - 152) = v1;
  v7 = *(_QWORD *)(v2 - 120);
  sub_1A2AE40C0();
  if (v7)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v6);
  *(_QWORD *)(v2 - 120) = v3;
  v9 = *(_QWORD *)(v2 - 184);
  v8 = *(_QWORD *)(v2 - 176);
  v10 = v5;
  v11 = *(_QWORD *)(v2 - 136);
  *(_BYTE *)(v2 - 112) = 0;
  sub_1A296E8A4(&qword_1EE676788, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
  v12 = *(_QWORD *)(v2 - 160);
  v13 = *(_QWORD *)(v2 - 152);
  v14 = *(_QWORD *)(v2 - 144);
  sub_1A2AE3D78();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v10, v12, v14);
  *(_BYTE *)(v2 - 112) = 1;
  sub_1A296E5E4(qword_1EE67DDF0, &qword_1EE67B7A0, (uint64_t)&protocol conformance descriptor for SFXPCBlock<A, B>);
  sub_1A2AE3D78();
  (*(void (**)(uint64_t, _QWORD))(v9 + 8))(v13, *(_QWORD *)(v2 - 128));
  v15 = *(_QWORD *)(v2 - 200);
  sub_1A2990414(v8, (uint64_t)&v10[*(int *)(v15 + 52)], &qword_1EE67B7A0);
  v16 = *(_QWORD *)(v2 - 120);
  (*(void (**)(_QWORD, char *, uint64_t))(v16 + 16))(*(_QWORD *)(v2 - 192), v10, v15);
  __swift_destroy_boxed_opaque_existential_0Tm(*(_QWORD *)(v2 - 72));
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v10, v15);
}

void sub_1A2A68A90(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  SFAirDrop.PermissionRequest.InterventionAction.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

void sub_1A2A68AB0()
{
  SFAirDrop.PermissionRequest.InterventionAction.encode(to:)();
}

uint64_t sub_1A2A68AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType())
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E570);
  else
    return sub_1A2AE3E68();
}

uint64_t _s7Sharing9SFAirDropO19ButtonConfigurationO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v20;
  char v21;
  BOOL v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(unsigned __int8 *)(a1 + 32);
  v7 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(unsigned __int8 *)(a2 + 32);
  v12 = *(_QWORD *)a1;
  v13 = v3;
  if (!*(_BYTE *)(a1 + 32))
  {
    v14 = *(_QWORD *)(a1 + 16);
    if (!*(_BYTE *)(a2 + 32))
    {
      v15 = *(_QWORD *)(a1 + 24);
      if (v2 != v7 || v3 != v8)
      {
        v20 = *(_QWORD *)a2;
        v21 = sub_1A2AE3EE0();
        v7 = v20;
        v32 = v21;
        LOBYTE(v11) = 0;
        LOBYTE(v6) = 0;
        goto LABEL_32;
      }
      LOBYTE(v11) = 0;
      LOBYTE(v6) = 0;
      goto LABEL_28;
    }
LABEL_25:
    v15 = *(_QWORD *)(a1 + 24);
    v32 = 0;
    goto LABEL_32;
  }
  if (v6 == 1)
  {
    v14 = *(_QWORD *)(a1 + 16);
    if (v11 == 1)
    {
      v15 = *(_QWORD *)(a1 + 24);
      if (v2 != v7 || v3 != v8)
      {
        v17 = *(_QWORD *)a2;
        v18 = sub_1A2AE3EE0();
        v7 = v17;
        v32 = v18;
        LOBYTE(v11) = 1;
        LOBYTE(v6) = 1;
        goto LABEL_32;
      }
      LOBYTE(v11) = 1;
      LOBYTE(v6) = 1;
LABEL_28:
      v32 = 1;
      goto LABEL_32;
    }
    goto LABEL_25;
  }
  if (v11 != 2)
  {
    v14 = *(_QWORD *)(a1 + 16);
    goto LABEL_25;
  }
  v22 = v2 == v7 && v3 == v8;
  if (v22 || (v23 = *(_QWORD *)a2, v24 = sub_1A2AE3EE0(), v7 = v23, (v24 & 1) != 0))
  {
    if (v4 == v9 && v5 == v10)
    {
      v14 = v4;
      v15 = v5;
      v32 = 1;
    }
    else
    {
      v14 = v4;
      v15 = v5;
      v25 = v9;
      v26 = v7;
      v27 = sub_1A2AE3EE0();
      v7 = v26;
      v9 = v25;
      v32 = v27;
    }
  }
  else
  {
    v14 = v4;
    v15 = v5;
    v32 = 0;
  }
  LOBYTE(v11) = 2;
  LOBYTE(v6) = 2;
LABEL_32:
  v28 = v8;
  v29 = v8;
  v30 = v7;
  sub_1A2993E10(v7, v28, v9, v10, v11);
  sub_1A2993E10(v12, v13, v14, v15, v6);
  sub_1A2994DD4(v12, v13, v14, v15, v6);
  sub_1A2994DD4(v30, v29, v9, v10, v11);
  return v32 & 1;
}

uint64_t _s7Sharing9SFAirDropO13DeclineActionV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char v11;
  char v12;
  char v13;
  __int128 v14;
  char v15;
  __int128 v16;
  _OWORD v18[2];
  char v19;
  _OWORD v20[2];
  char v21;

  v4 = type metadata accessor for SFAirDrop.DeclineAction();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v18 - v8;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_1A2A698D0((uint64_t)a1, (uint64_t)v18 - v8);
    sub_1A2A698D0((uint64_t)a2, (uint64_t)v7);
    goto LABEL_8;
  }
  v11 = sub_1A2AE3EE0();
  sub_1A2A698D0((uint64_t)a1, (uint64_t)v9);
  sub_1A2A698D0((uint64_t)a2, (uint64_t)v7);
  if ((v11 & 1) != 0)
  {
LABEL_8:
    v13 = v9[48];
    v14 = *((_OWORD *)v9 + 2);
    v20[0] = *((_OWORD *)v9 + 1);
    v20[1] = v14;
    v21 = v13;
    v15 = v7[48];
    v16 = *((_OWORD *)v7 + 2);
    v18[0] = *((_OWORD *)v7 + 1);
    v18[1] = v16;
    v19 = v15;
    v12 = _s7Sharing9SFAirDropO19ButtonConfigurationO2eeoiySbAE_AEtFZ_0((uint64_t)v20, (uint64_t)v18);
    sub_1A2A69254((uint64_t)v7);
    sub_1A2A69254((uint64_t)v9);
    return v12 & 1;
  }
  sub_1A2A69254((uint64_t)v7);
  sub_1A2A69254((uint64_t)v9);
  v12 = 0;
  return v12 & 1;
}

void sub_1A2A68E94()
{
  type metadata accessor for SFAirDrop.PermissionRequest();
}

void sub_1A2A68ED0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v8 = *(_QWORD *)(a1 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  *(_QWORD *)(v6 - 160) = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v6 - 152) = v9;
  v10 = v1 + v9;
  v11 = sub_1A2AE3130();
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  *(_QWORD *)(v6 - 168) = v12;
  v12(v10, v11);
  v13 = v10 + *(int *)(a1 + 56);
  v14 = sub_1A2AE30C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  *(_QWORD *)(v6 - 112) = v4;
  *(_QWORD *)(v6 - 104) = v2;
  *(_QWORD *)(v6 - 96) = v3;
  *(_QWORD *)(v6 - 88) = v5;
  type metadata accessor for SFAirDrop.PermissionRequest.Style();
}

uint64_t sub_1A2A68F54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      goto LABEL_4;
    case 1:
      *(_QWORD *)(v4 - 112) = v2;
      *(_QWORD *)(v4 - 104) = v0;
      *(_QWORD *)(v4 - 96) = v1;
      *(_QWORD *)(v4 - 88) = v3;
      type metadata accessor for SFAirDrop.PermissionRequest.InterventionAction();
    case 0:
LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v6);
      v7 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v4 - 112) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v4 - 104) = v7;
      *(_QWORD *)(v4 - 144) = v2;
      *(_QWORD *)(v4 - 136) = v0;
      *(_QWORD *)(v4 - 128) = v1;
      *(_QWORD *)(v4 - 120) = v3;
      type metadata accessor for SFAirDrop.AcceptAction();
  }
  return swift_deallocObject();
}

void type metadata accessor for SFAirDrop.PermissionRequest.InterventionAction()
{
  JUMPOUT(0x1A8589544);
}

void sub_1A2A69164()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[3];
  v3 = v0[4];
  v4 = v0[5];
  v1[2] = v0[2];
  v1[3] = v2;
  v1[4] = v3;
  v1[5] = v4;
  type metadata accessor for SFAirDrop.PermissionRequest();
}

void sub_1A2A691A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v8 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v9 = v2 + ((v8 + 48) & ~v8);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 48) = v10;
  *v10 = v4;
  v10[1] = sub_1A2A6920C;
  sub_1A2A5DCF4(v1, v9, v3, v5, v6, v7);
}

uint64_t sub_1A2A6920C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A2A69254(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SFAirDrop.DeclineAction();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void _s17PermissionRequestV10CodingKeysOMa()
{
  JUMPOUT(0x1A8589544);
}

void _s17PermissionRequestV5StyleO15AlertCodingKeysOMa()
{
  JUMPOUT(0x1A8589544);
}

void _s17PermissionRequestV5StyleO22InterventionCodingKeysOMa()
{
  JUMPOUT(0x1A8589544);
}

void _s17PermissionRequestV5StyleO16InlineCodingKeysOMa()
{
  JUMPOUT(0x1A8589544);
}

void _s17PermissionRequestV5StyleO10CodingKeysOMa()
{
  JUMPOUT(0x1A8589544);
}

unint64_t sub_1A2A692CC()
{
  unint64_t result;

  result = qword_1EE67DD10;
  if (!qword_1EE67DD10)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFInterventionWorkflow, &type metadata for SFInterventionWorkflow);
    atomic_store(result, (unint64_t *)&qword_1EE67DD10);
  }
  return result;
}

void type metadata accessor for SFAirDrop.AcceptAction.Single()
{
  JUMPOUT(0x1A8589544);
}

unint64_t sub_1A2A6931C()
{
  unint64_t result;

  result = qword_1EE67DD38;
  if (!qword_1EE67DD38)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B07D88, &_s19ButtonConfigurationO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67DD38);
  }
  return result;
}

unint64_t sub_1A2A69360()
{
  unint64_t result;

  result = qword_1EE67DD40;
  if (!qword_1EE67DD40)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B07D38, &_s19ButtonConfigurationO20SymbolTextCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67DD40);
  }
  return result;
}

unint64_t sub_1A2A693A4()
{
  unint64_t result;

  result = qword_1EE67DD48;
  if (!qword_1EE67DD48)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B07CE8, &_s19ButtonConfigurationO16SymbolCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67DD48);
  }
  return result;
}

unint64_t sub_1A2A693E8()
{
  unint64_t result;

  result = qword_1EE67DD50;
  if (!qword_1EE67DD50)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B07C98, &_s19ButtonConfigurationO14TextCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67DD50);
  }
  return result;
}

uint64_t sub_1A2A6942C()
{
  return 4;
}

uint64_t sub_1A2A69434()
{
  return 3;
}

uint64_t sub_1A2A6943C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1954047348 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65546C6F626D7973 && a2 == 0xEA00000000007478)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A2A69584(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x614E6D6574737973 && a2 == 0xEA0000000000656DLL;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657A696C61636F6CLL && a2 == 0xEE00656C74695464)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A2A696A4()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_1A2A696AC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A2A696D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;

  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v2 + 48);
  *(_QWORD *)(v3 + 16) = v5;
  *(_QWORD *)v5 = v3;
  *(_QWORD *)(v5 + 8) = sub_1A2971EBC;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a2;
  return swift_task_switch();
}

void _s12AcceptActionO6SingleV10CodingKeysOMa()
{
  JUMPOUT(0x1A8589544);
}

unint64_t sub_1A2A69744()
{
  unint64_t result;

  result = qword_1EE67DD90;
  if (!qword_1EE67DD90)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDrop.ButtonConfiguration, &type metadata for SFAirDrop.ButtonConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EE67DD90);
  }
  return result;
}

unint64_t sub_1A2A69788()
{
  unint64_t result;

  result = qword_1EE67DD98;
  if (!qword_1EE67DD98)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDrop.ButtonConfiguration, &type metadata for SFAirDrop.ButtonConfiguration);
    atomic_store(result, &qword_1EE67DD98);
  }
  return result;
}

void _s12AcceptActionO9CompositeV10CodingKeysOMa()
{
  JUMPOUT(0x1A8589544);
}

void type metadata accessor for SFAirDrop.AcceptAction.Composite()
{
  JUMPOUT(0x1A8589544);
}

void _s12AcceptActionO19CompositeCodingKeysOMa()
{
  JUMPOUT(0x1A8589544);
}

void _s12AcceptActionO16SingleCodingKeysOMa()
{
  JUMPOUT(0x1A8589544);
}

void _s12AcceptActionO10CodingKeysOMa()
{
  JUMPOUT(0x1A8589544);
}

uint64_t sub_1A2A69808()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A2A6982C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_1A2972038;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

unint64_t sub_1A2A6988C()
{
  unint64_t result;

  result = qword_1EE67DDB8;
  if (!qword_1EE67DDB8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B07AB8, &_s13DeclineActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67DDB8);
  }
  return result;
}

uint64_t sub_1A2A698D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SFAirDrop.DeclineAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A2A69914(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;

  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v2 + 16);
  *(_QWORD *)(v3 + 16) = v5;
  *(_QWORD *)v5 = v3;
  *(_QWORD *)(v5 + 8) = sub_1A2972038;
  *(_OWORD *)(v5 + 16) = v6;
  *(_BYTE *)(v5 + 32) = *a2;
  return swift_task_switch();
}

void _s17PermissionRequestV18InterventionActionV10CodingKeysOMa()
{
  JUMPOUT(0x1A8589544);
}

uint64_t sub_1A2A6998C()
{
  return sub_1A296E8A4(&qword_1EE6766E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
}

uint64_t sub_1A2A699B8()
{
  return MEMORY[0x1E0DEA978];
}

uint64_t sub_1A2A699C4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1A2AE3130();
  if (v1 <= 0x3F)
  {
    result = sub_1A2AE30C4();
    if (v2 <= 0x3F)
      type metadata accessor for SFAirDrop.PermissionRequest.Style();
  }
  return result;
}

uint64_t sub_1A2A69A78(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v14 = sub_1A2AE3130();
    (*(void (**)(_QWORD *, _QWORD *))(*(_QWORD *)(v14 - 8) + 16))(a1, a2);
    v7 = *(int *)(a3 + 56);
    *((_BYTE *)a1 + *(int *)(a3 + 52)) = *((_BYTE *)a2 + *(int *)(a3 + 52));
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1A2AE30C4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    type metadata accessor for SFAirDrop.PermissionRequest.Style();
  }
  v11 = *a2;
  *a1 = *a2;
  v12 = v11 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v12;
}

void sub_1A2A69F94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 56);
  v6 = sub_1A2AE30C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for SFAirDrop.PermissionRequest.Style();
}

uint64_t sub_1A2A6A024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      goto LABEL_4;
    case 1:
      *(_QWORD *)(v4 - 112) = v3;
      *(_QWORD *)(v4 - 104) = v2;
      *(_QWORD *)(v4 - 96) = v1;
      *(_QWORD *)(v4 - 88) = v0;
      type metadata accessor for SFAirDrop.PermissionRequest.InterventionAction();
    case 0:
LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v6);
      v7 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v4 - 112) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v4 - 104) = v7;
      *(_QWORD *)(v4 - 144) = v3;
      *(_QWORD *)(v4 - 136) = v2;
      *(_QWORD *)(v4 - 128) = v1;
      *(_QWORD *)(v4 - 120) = v0;
      type metadata accessor for SFAirDrop.AcceptAction();
  }
  return result;
}

void sub_1A2A6A20C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v10 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2);
  v6 = *(int *)(a3 + 56);
  *(_BYTE *)(a1 + *(int *)(a3 + 52)) = *(_BYTE *)(a2 + *(int *)(a3 + 52));
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1A2AE30C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  type metadata accessor for SFAirDrop.PermissionRequest.Style();
}

void sub_1A2A6A2B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v7 - 152) = a1;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_BYTE *)v1 = *(_BYTE *)v4;
    *(_QWORD *)(v7 - 112) = v3;
    *(_QWORD *)(v7 - 104) = v2;
    *(_QWORD *)(v7 - 96) = v6;
    *(_QWORD *)(v7 - 88) = v5;
    type metadata accessor for SFAirDrop.PermissionRequest.InterventionAction();
  }
  v8 = *(_QWORD *)(v4 + 8);
  *(_QWORD *)v1 = *(_QWORD *)v4;
  *(_QWORD *)(v1 + 8) = v8;
  v9 = *(_QWORD *)(v4 + 24);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v1 + 24) = v9;
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v4 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = swift_bridgeObjectRetain();
  MEMORY[0x1E0C80A78](v10);
  v11 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 - 112) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 - 104) = v11;
  *(_QWORD *)(v7 - 144) = v3;
  *(_QWORD *)(v7 - 136) = v2;
  *(_QWORD *)(v7 - 128) = v6;
  *(_QWORD *)(v7 - 120) = v5;
  type metadata accessor for SFAirDrop.AcceptAction();
}

void sub_1A2A6A438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;

  *(_QWORD *)(v2 - 96) = sub_1A2AE3670();
  *(_QWORD *)(v2 - 88) = type metadata accessor for SFAirDrop.DeclineAction();
  v3 = *(int *)(swift_getTupleTypeMetadata() + 80);
  v4 = v0 + v3;
  v5 = v1 + v3;
  v6 = *(_QWORD *)(v1 + v3 + 8);
  *(_QWORD *)v4 = *(_QWORD *)(v1 + v3);
  *(_QWORD *)(v4 + 8) = v6;
  v7 = *(_QWORD *)(v1 + v3 + 16);
  v8 = *(_QWORD *)(v5 + 24);
  v9 = *(_QWORD *)(v5 + 32);
  v10 = *(_QWORD *)(v5 + 40);
  v11 = *(_BYTE *)(v5 + 48);
  swift_bridgeObjectRetain();
  sub_1A2993E10(v7, v8, v9, v10, v11);
  *(_QWORD *)(v4 + 16) = v7;
  *(_QWORD *)(v4 + 24) = v8;
  *(_QWORD *)(v4 + 32) = v9;
  *(_QWORD *)(v4 + 40) = v10;
  *(_BYTE *)(v4 + 48) = v11;
  *(_BYTE *)(v4 + 49) = *(_BYTE *)(v5 + 49);
  v12 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v2 - 168))(v4 + v12, v5 + v12, *(_QWORD *)(v2 - 160));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788);
  JUMPOUT(0x1A2A6A500);
}

uint64_t sub_1A2A6A540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 52)) = *(_BYTE *)(a2 + *(int *)(a3 + 52));
  v7 = *(int *)(a3 + 56);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1A2AE30C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  if (a1 != a2)
    type metadata accessor for SFAirDrop.PermissionRequest.Style();
  return a1;
}

void sub_1A2A6A8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 56);
  *(_BYTE *)(a1 + *(int *)(a3 + 52)) = *(_BYTE *)(a2 + *(int *)(a3 + 52));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1A2AE30C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  type metadata accessor for SFAirDrop.PermissionRequest.Style();
}

void sub_1A2A6A994(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t EnumCaseMultiPayload;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v7 - 152) = a1;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    *(_BYTE *)v1 = *(_BYTE *)v3;
    *(_QWORD *)(v7 - 112) = v2;
    *(_QWORD *)(v7 - 104) = v5;
    *(_QWORD *)(v7 - 96) = v6;
    *(_QWORD *)(v7 - 88) = v4;
    type metadata accessor for SFAirDrop.PermissionRequest.InterventionAction();
  }
  *(_QWORD *)(v7 - 168) = &v11;
  v9 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)v1 = *(_OWORD *)v3;
  *(_OWORD *)(v1 + 16) = v9;
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v3 + 32);
  MEMORY[0x1E0C80A78](EnumCaseMultiPayload);
  v10 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 - 112) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 - 104) = v10;
  *(_QWORD *)(v7 - 144) = v2;
  *(_QWORD *)(v7 - 136) = v5;
  *(_QWORD *)(v7 - 128) = v6;
  *(_QWORD *)(v7 - 120) = v4;
  type metadata accessor for SFAirDrop.AcceptAction();
}

void sub_1A2A6AAFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  *(_QWORD *)(v3 - 96) = sub_1A2AE3670();
  *(_QWORD *)(v3 - 88) = type metadata accessor for SFAirDrop.DeclineAction();
  v4 = *(int *)(swift_getTupleTypeMetadata() + 80);
  v5 = v0 + v4;
  v6 = v2 + v4;
  v7 = *(_OWORD *)(v2 + v4 + 16);
  *(_OWORD *)v5 = *(_OWORD *)(v2 + v4);
  *(_OWORD *)(v5 + 16) = v7;
  *(_OWORD *)(v5 + 32) = *(_OWORD *)(v2 + v4 + 32);
  *(_WORD *)(v5 + 48) = *(_WORD *)(v2 + v4 + 48);
  v8 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 - 160))(v5 + v8, v6 + v8, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788);
  JUMPOUT(0x1A2A6ABA0);
}

uint64_t sub_1A2A6ABDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 56);
  *(_BYTE *)(a1 + *(int *)(a3 + 52)) = *(_BYTE *)(a2 + *(int *)(a3 + 52));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1A2AE30C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  if (a1 != a2)
    type metadata accessor for SFAirDrop.PermissionRequest.Style();
  return a1;
}

uint64_t sub_1A2A6AEF0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2A6AEFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1A2AE3130();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 254)
  {
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 52));
    if (v9 >= 2)
      return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
    else
      return 0;
  }
  else
  {
    v10 = sub_1A2AE30C4();
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) != (_DWORD)a2)
      type metadata accessor for SFAirDrop.PermissionRequest.Style();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1 + *(int *)(a3 + 56), a2, v10);
  }
}

uint64_t sub_1A2A6AFFC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2A6B008(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_1A2AE3130();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  if (a3 == 254)
  {
    *(_BYTE *)(a1 + *(int *)(a4 + 52)) = a2 + 1;
  }
  else
  {
    v10 = sub_1A2AE30C4();
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) != a3)
      type metadata accessor for SFAirDrop.PermissionRequest.Style();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a1 + *(int *)(a4 + 56), a2, a2, v10);
  }
  return result;
}

uint64_t sub_1A2A6B0F8()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  char *v3;

  result = type metadata accessor for SFAirDrop.DeclineAction();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout();
    v3 = &v2;
    type metadata accessor for SFAirDrop.PermissionRequest.InterventionAction();
  }
  return result;
}

uint64_t sub_1A2A6B208(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        *(_BYTE *)a1 = *(_BYTE *)a2;
        type metadata accessor for SFAirDrop.PermissionRequest.InterventionAction();
      }
      v12 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v12;
      v13 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v13;
      *(_QWORD *)(a1 + 32) = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = swift_bridgeObjectRetain();
      MEMORY[0x1E0C80A78](v14);
      type metadata accessor for SFAirDrop.AcceptAction();
    }
    v9 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v9;
    v10 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = a2[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = swift_bridgeObjectRetain();
    MEMORY[0x1E0C80A78](v11);
    type metadata accessor for SFAirDrop.AcceptAction();
  }
  v7 = *a2;
  *(_QWORD *)a1 = *a2;
  v8 = v7 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v8;
}

uint64_t sub_1A2A6B6D0()
{
  uint64_t result;
  uint64_t v1;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      goto LABEL_4;
    case 1:
      type metadata accessor for SFAirDrop.PermissionRequest.InterventionAction();
    case 0:
LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v1 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v1);
      type metadata accessor for SFAirDrop.AcceptAction();
  }
  return result;
}

void sub_1A2A6B8EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    type metadata accessor for SFAirDrop.PermissionRequest.InterventionAction();
  }
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = swift_bridgeObjectRetain();
  MEMORY[0x1E0C80A78](v6);
  type metadata accessor for SFAirDrop.AcceptAction();
}

void sub_1A2A6BAA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v2 - 96) = sub_1A2AE3670();
  *(_QWORD *)(v2 - 88) = type metadata accessor for SFAirDrop.DeclineAction();
  v3 = *(int *)(swift_getTupleTypeMetadata() + 80);
  v4 = v0 + v3;
  v5 = v1 + v3;
  v6 = *(_QWORD *)(v1 + v3 + 8);
  *(_QWORD *)v4 = *(_QWORD *)(v1 + v3);
  *(_QWORD *)(v4 + 8) = v6;
  v7 = *(_QWORD *)(v1 + v3 + 16);
  v8 = *(_QWORD *)(v5 + 24);
  v9 = *(_QWORD *)(v5 + 32);
  v10 = *(_QWORD *)(v5 + 40);
  v11 = *(_BYTE *)(v5 + 48);
  swift_bridgeObjectRetain();
  sub_1A2993E10(v7, v8, v9, v10, v11);
  *(_QWORD *)(v4 + 16) = v7;
  *(_QWORD *)(v4 + 24) = v8;
  *(_QWORD *)(v4 + 32) = v9;
  *(_QWORD *)(v4 + 40) = v10;
  *(_BYTE *)(v4 + 48) = v11;
  *(_BYTE *)(v4 + 49) = *(_BYTE *)(v5 + 49);
  v12 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
  v13 = v4 + v12;
  v14 = v5 + v12;
  v15 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788);
  JUMPOUT(0x1A2A6BB7CLL);
}

uint64_t sub_1A2A6BBBC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;

  v3 = result;
  if (result != a2)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(result, a3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_BYTE *)v3 = *(_BYTE *)a2;
      type metadata accessor for SFAirDrop.PermissionRequest.InterventionAction();
    }
    *(_QWORD *)v3 = *(_QWORD *)a2;
    *(_QWORD *)(v3 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(v3 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(v3 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(v3 + 32) = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = swift_bridgeObjectRetain();
    MEMORY[0x1E0C80A78](v5);
    type metadata accessor for SFAirDrop.AcceptAction();
  }
  return result;
}

void sub_1A2A6BEC0(uint64_t a1, uint64_t a2)
{
  uint64_t EnumCaseMultiPayload;
  __int128 v5;
  __int128 v6;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((_DWORD)EnumCaseMultiPayload != 2)
  {
    if ((_DWORD)EnumCaseMultiPayload == 1)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      type metadata accessor for SFAirDrop.PermissionRequest.InterventionAction();
    }
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    MEMORY[0x1E0C80A78](EnumCaseMultiPayload);
    type metadata accessor for SFAirDrop.AcceptAction();
  }
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  MEMORY[0x1E0C80A78](EnumCaseMultiPayload);
  type metadata accessor for SFAirDrop.AcceptAction();
}

void sub_1A2A6C1C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v2 - 80) = sub_1A2AE3670();
  *(_QWORD *)(v2 - 72) = type metadata accessor for SFAirDrop.DeclineAction();
  v3 = *(int *)(swift_getTupleTypeMetadata() + 80);
  v4 = v0 + v3;
  v5 = v1 + v3;
  v6 = *(_OWORD *)(v1 + v3 + 16);
  *(_OWORD *)v4 = *(_OWORD *)(v1 + v3);
  *(_OWORD *)(v4 + 16) = v6;
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(v1 + v3 + 32);
  *(_WORD *)(v4 + 48) = *(_WORD *)(v1 + v3 + 48);
  v7 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
  v8 = v4 + v7;
  v9 = v5 + v7;
  v10 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788);
  *(_OWORD *)(v8 + *(int *)(v11 + 68)) = *(_OWORD *)(v9 + *(int *)(v11 + 68));
  JUMPOUT(0x1A2A6C27CLL);
}

uint64_t sub_1A2A6C2A0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t EnumCaseMultiPayload;
  __int128 v6;
  __int128 v7;

  v3 = result;
  if (result != a2)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(result, a3);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if ((_DWORD)EnumCaseMultiPayload != 2)
    {
      if ((_DWORD)EnumCaseMultiPayload == 1)
      {
        *(_BYTE *)v3 = *(_BYTE *)a2;
        type metadata accessor for SFAirDrop.PermissionRequest.InterventionAction();
      }
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)v3 = *(_OWORD *)a2;
      *(_OWORD *)(v3 + 16) = v7;
      *(_QWORD *)(v3 + 32) = *(_QWORD *)(a2 + 32);
      MEMORY[0x1E0C80A78](EnumCaseMultiPayload);
      type metadata accessor for SFAirDrop.AcceptAction();
    }
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)v3 = *(_OWORD *)a2;
    *(_OWORD *)(v3 + 16) = v6;
    *(_QWORD *)(v3 + 32) = *(_QWORD *)(a2 + 32);
    MEMORY[0x1E0C80A78](EnumCaseMultiPayload);
    type metadata accessor for SFAirDrop.AcceptAction();
  }
  return result;
}

uint64_t _s19ButtonConfigurationOwxx(uint64_t a1)
{
  return sub_1A2994DD4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t _s19ButtonConfigurationOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A2993E10(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t _s19ButtonConfigurationOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A2993E10(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1A2994DD4(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t _s19ButtonConfigurationOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1A2994DD4(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t _s19ButtonConfigurationOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s19ButtonConfigurationOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A2A6C858(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1A2A6C860(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SFAirDrop.ButtonConfiguration()
{
  return &type metadata for SFAirDrop.ButtonConfiguration;
}

void sub_1A2A6C878()
{
  type metadata accessor for SFAirDrop.AcceptAction.Single();
}

uint64_t sub_1A2A6C948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = sub_1A2AE3130();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  v14 = v13 + 7;
  v15 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + v12 + (((v12 | 7) + v9 + ((v8 + 51) & ~v8)) & ~(v12 | 7)) + 16;
  v16 = (v15 & ~v12) + v13;
  v17 = ((v12 + 48) & ~v12) + v13;
  if (v17 <= v16)
    v18 = v16;
  else
    v18 = v17;
  if ((v12 | (unint64_t)v7) > 7
    || ((*(_DWORD *)(v11 + 80) | v7) & 0x100000) != 0
    || v18 + 1 > 0x18)
  {
    v21 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v21 + (((v12 | v7) & 0xF8 ^ 0x1F8) & ((v12 | v7) + 16));
    swift_retain();
  }
  else
  {
    v22 = *(unsigned __int8 *)(a2 + v18);
    v52 = *(_QWORD *)(v10 - 8);
    if (v22 >= 2)
    {
      if (v18 <= 3)
        v23 = v18;
      else
        v23 = 4;
      __asm { BR              X12 }
    }
    v53 = v18;
    v54 = v10;
    v51 = ~v12;
    v24 = *(_QWORD *)a2;
    if (v22 == 1)
    {
      v25 = *(_QWORD *)(a2 + 8);
      v26 = *(_QWORD *)(a2 + 16);
      v27 = *(_QWORD *)(a2 + 24);
      v28 = *(_BYTE *)(a2 + 32);
      sub_1A2993E10(*(_QWORD *)a2, v25, v26, v27, v28);
      *(_QWORD *)a1 = v24;
      *(_QWORD *)(a1 + 8) = v25;
      *(_QWORD *)(a1 + 16) = v26;
      *(_QWORD *)(a1 + 24) = v27;
      *(_BYTE *)(a1 + 32) = v28;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16);
      swift_bridgeObjectRetain();
      v29((a1 + v12 + 48) & v51, (a2 + v12 + 48) & v51, v54);
      *(_BYTE *)(a1 + v53) = 1;
    }
    else
    {
      v47 = v5;
      v49 = ~(v12 | 7);
      v50 = v15;
      v30 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = v24;
      *(_QWORD *)(a1 + 8) = v30;
      v31 = (a1 + 23) & 0xFFFFFFFFFFFFFFF8;
      v32 = (a2 + 23) & 0xFFFFFFFFFFFFFFF8;
      v33 = *(_QWORD *)v32;
      v44 = *(_QWORD *)(v32 + 8);
      v45 = v12 | 7;
      v46 = v9;
      v34 = *(_QWORD *)(v32 + 16);
      v35 = *(_QWORD *)(v32 + 24);
      v36 = *(_BYTE *)(v32 + 32);
      v48 = v14;
      swift_bridgeObjectRetain();
      sub_1A2993E10(v33, v44, v34, v35, v36);
      *(_QWORD *)v31 = v33;
      *(_QWORD *)(v31 + 8) = v44;
      *(_QWORD *)(v31 + 16) = v34;
      *(_QWORD *)(v31 + 24) = v35;
      *(_BYTE *)(v31 + 32) = v36;
      *(_BYTE *)(v31 + 33) = *(_BYTE *)(v32 + 33);
      *(_BYTE *)(v31 + 34) = *(_BYTE *)(v32 + 34);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))((v31 + v8 + 35) & ~v8, (v32 + v8 + 35) & ~v8, v47);
      v37 = (((v31 + v8 + 35) & ~v8) + v46 + v45) & v49;
      v38 = (((v32 + v8 + 35) & ~v8) + v46 + v45) & v49;
      v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16);
      v39(v37, v38, v54);
      v40 = (_QWORD *)((v48 + v37) & 0xFFFFFFFFFFFFFFF8);
      v41 = (_QWORD *)((v48 + v38) & 0xFFFFFFFFFFFFFFF8);
      v42 = v41[1];
      *v40 = *v41;
      v40[1] = v42;
      swift_retain();
      v39((v50 + a1) & v51, (v50 + a2) & v51, v54);
      *(_BYTE *)(a1 + v53) = 0;
    }
  }
  return a1;
}

uint64_t sub_1A2A6CCAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v23;
  void (*v24)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = sub_1A2AE3130();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + v9 + (((v9 | 7) + v6 + ((v5 + 51) & ~v5)) & ~(v9 | 7)) + 16;
  v12 = (v11 & ~v9) + v10;
  v13 = ((v9 + 48) & ~v9) + v10;
  if (v13 > v12)
    v12 = v13;
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (v14 >= 2)
  {
    if (v12 <= 3)
      v15 = v12;
    else
      v15 = 4;
    __asm { BR              X13 }
  }
  if (v14 == 1)
  {
    sub_1A2994DD4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
    swift_bridgeObjectRelease();
    v16 = (a1 + v9 + 48) & ~v9;
    v17 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    v18 = v7;
  }
  else
  {
    v23 = v11;
    swift_bridgeObjectRelease();
    v19 = v6;
    v20 = (a1 + 23) & 0xFFFFFFFFFFFFFFF8;
    sub_1A2994DD4(*(_QWORD *)v20, *(_QWORD *)(v20 + 8), *(_QWORD *)(v20 + 16), *(_QWORD *)(v20 + 24), *(_BYTE *)(v20 + 32));
    v21 = (v20 + v5 + 35) & ~v5;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v21, v3);
    v24 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v24((v21 + v19 + (v9 | 7)) & ~(v9 | 7), v7);
    swift_release();
    v16 = (v23 + a1) & ~v9;
    v18 = v7;
    v17 = (uint64_t (*)(uint64_t, uint64_t))v24;
  }
  return v17(v16, v18);
}

uint64_t sub_1A2A6CEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  char v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v51 = sub_1A2AE3130();
  v9 = *(_QWORD *)(v51 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = v11 + 7;
  v13 = ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + v10 + (((v10 | 7) + v8 + ((v7 + 51) & ~v7)) & ~(v10 | 7)) + 16;
  v14 = (v13 & ~v10) + v11;
  v15 = ((v10 + 48) & ~v10) + v11;
  if (v15 <= v14)
    v16 = v14;
  else
    v16 = v15;
  v17 = *(unsigned __int8 *)(a2 + v16);
  if (v17 >= 2)
  {
    if (v16 <= 3)
      v18 = v16;
    else
      v18 = 4;
    __asm { BR              X12 }
  }
  v49 = ~v10;
  v50 = v16;
  v19 = *(_QWORD *)a2;
  if (v17 == 1)
  {
    v20 = *(_QWORD *)(a2 + 8);
    v21 = *(_QWORD *)(a2 + 16);
    v22 = *(_QWORD *)(a2 + 24);
    v23 = *(_BYTE *)(a2 + 32);
    sub_1A2993E10(*(_QWORD *)a2, v20, v21, v22, v23);
    *(_QWORD *)a1 = v19;
    *(_QWORD *)(a1 + 8) = v20;
    *(_QWORD *)(a1 + 16) = v21;
    *(_QWORD *)(a1 + 24) = v22;
    *(_BYTE *)(a1 + 32) = v23;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain();
    v24((a1 + v10 + 48) & v49, (a2 + v10 + 48) & v49, v51);
    v25 = 1;
  }
  else
  {
    v43 = v8;
    v46 = *(_QWORD *)(v51 - 8);
    v47 = ~(v10 | 7);
    v26 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = v19;
    *(_QWORD *)(a1 + 8) = v26;
    v44 = v5;
    v45 = v12;
    v27 = (a1 + 23) & 0xFFFFFFFFFFFFFFF8;
    v28 = (a2 + 23) & 0xFFFFFFFFFFFFFFF8;
    v29 = *(_QWORD *)v28;
    v30 = *(_QWORD *)(v28 + 8);
    v41 = v6;
    v42 = v10 | 7;
    v31 = *(_QWORD *)(v28 + 16);
    v32 = *(_QWORD *)(v28 + 24);
    v33 = *(_BYTE *)(v28 + 32);
    v48 = v13;
    swift_bridgeObjectRetain();
    sub_1A2993E10(v29, v30, v31, v32, v33);
    *(_QWORD *)v27 = v29;
    *(_QWORD *)(v27 + 8) = v30;
    *(_QWORD *)(v27 + 16) = v31;
    *(_QWORD *)(v27 + 24) = v32;
    *(_BYTE *)(v27 + 32) = v33;
    *(_BYTE *)(v27 + 33) = *(_BYTE *)(v28 + 33);
    *(_BYTE *)(v27 + 34) = *(_BYTE *)(v28 + 34);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v41 + 16))((v27 + v7 + 35) & ~v7, (v28 + v7 + 35) & ~v7, v44);
    v34 = (((v27 + v7 + 35) & ~v7) + v43 + v42) & v47;
    v35 = (((v28 + v7 + 35) & ~v7) + v43 + v42) & v47;
    v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16);
    v36(v34, v35, v51);
    v37 = (_QWORD *)((v45 + v34) & 0xFFFFFFFFFFFFFFF8);
    v38 = (_QWORD *)((v45 + v35) & 0xFFFFFFFFFFFFFFF8);
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    swift_retain();
    v36((v48 + a1) & v49, (v48 + a2) & v49, v51);
    v25 = 0;
  }
  *(_BYTE *)(a1 + v50) = v25;
  return a1;
}

uint64_t sub_1A2A6D1B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  char v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  if (a1 != a2)
  {
    v51 = *(_QWORD *)(a3 + 16);
    v5 = *(_QWORD *)(v51 - 8);
    v55 = *(unsigned __int8 *)(v5 + 80);
    v52 = v5;
    v6 = *(_QWORD *)(v5 + 64);
    v7 = sub_1A2AE3130();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = v9 | 7;
    v11 = *(_QWORD *)(v8 + 64);
    v53 = v11 + 7;
    v50 = ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + v9 + (((v9 | 7) + v6 + ((v55 + 51) & ~v55)) & ~(v9 | 7)) + 16;
    v12 = (v50 & ~v9) + v11;
    v13 = ((v9 + 48) & ~v9) + v11;
    if (v13 <= v12)
      v14 = v12;
    else
      v14 = v13;
    v15 = *(unsigned __int8 *)(a1 + v14);
    if (v15 >= 2)
    {
      if (v14 <= 3)
        v16 = v14;
      else
        v16 = 4;
      __asm { BR              X12 }
    }
    v56 = *(_QWORD *)(v7 - 8);
    v57 = v7;
    v54 = ~v9;
    v48 = v9 | 7;
    v49 = v6;
    v47 = ~v55;
    if (v15 == 1)
    {
      sub_1A2994DD4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))((a1 + v9 + 48) & ~v9, v57);
    }
    else
    {
      swift_bridgeObjectRelease();
      v17 = (a1 + 23) & 0xFFFFFFFFFFFFFFF8;
      sub_1A2994DD4(*(_QWORD *)v17, *(_QWORD *)(v17 + 8), *(_QWORD *)(v17 + 16), *(_QWORD *)(v17 + 24), *(_BYTE *)(v17 + 32));
      v18 = (v17 + v55 + 35) & ~v55;
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v18, v51);
      v19 = v18 + v6 + v10;
      v20 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
      v20(v19 & ~v10, v57);
      swift_release();
      v20((v50 + a1) & v54, v57);
    }
    v21 = *(unsigned __int8 *)(a2 + v14);
    if (v21 >= 2)
    {
      if (v14 <= 3)
        v22 = v14;
      else
        v22 = 4;
      __asm { BR              X12 }
    }
    v23 = *(_QWORD *)a2;
    if (v21 == 1)
    {
      v24 = *(_QWORD *)(a2 + 8);
      v25 = *(_QWORD *)(a2 + 16);
      v26 = *(_QWORD *)(a2 + 24);
      v27 = *(_BYTE *)(a2 + 32);
      sub_1A2993E10(*(_QWORD *)a2, v24, v25, v26, v27);
      *(_QWORD *)a1 = v23;
      *(_QWORD *)(a1 + 8) = v24;
      *(_QWORD *)(a1 + 16) = v25;
      *(_QWORD *)(a1 + 24) = v26;
      *(_BYTE *)(a1 + 32) = v27;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16);
      swift_bridgeObjectRetain();
      v28((a1 + v9 + 48) & v54, (a2 + v9 + 48) & v54, v57);
      v29 = 1;
    }
    else
    {
      *(_QWORD *)a1 = v23;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      v30 = (a1 + 23) & 0xFFFFFFFFFFFFFFF8;
      v31 = (a2 + 23) & 0xFFFFFFFFFFFFFFF8;
      v32 = *(_QWORD *)v31;
      v33 = *(_QWORD *)(v31 + 8);
      v46 = v14;
      v34 = ~v10;
      v35 = *(_QWORD *)(v31 + 16);
      v36 = *(_QWORD *)(v31 + 24);
      v37 = *(_BYTE *)(v31 + 32);
      swift_bridgeObjectRetain();
      sub_1A2993E10(v32, v33, v35, v36, v37);
      *(_QWORD *)v30 = v32;
      *(_QWORD *)(v30 + 8) = v33;
      *(_QWORD *)(v30 + 16) = v35;
      *(_QWORD *)(v30 + 24) = v36;
      *(_BYTE *)(v30 + 32) = v37;
      *(_BYTE *)(v30 + 33) = *(_BYTE *)(v31 + 33);
      *(_BYTE *)(v30 + 34) = *(_BYTE *)(v31 + 34);
      v38 = (v31 + v55 + 35) & v47;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v52 + 16))((v30 + v55 + 35) & v47, v38, v51);
      v39 = (((v30 + v55 + 35) & v47) + v49 + v48) & v34;
      v40 = (v38 + v49 + v48) & v34;
      v14 = v46;
      v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16);
      v41(v39, v40, v57);
      v42 = (_QWORD *)((v53 + v39) & 0xFFFFFFFFFFFFFFF8);
      v43 = (_QWORD *)((v53 + v40) & 0xFFFFFFFFFFFFFFF8);
      v44 = v43[1];
      *v42 = *v43;
      v42[1] = v44;
      swift_retain();
      v41((v50 + a1) & v54, (v50 + a2) & v54, v57);
      v29 = 0;
    }
    *(_BYTE *)(a1 + v14) = v29;
  }
  return a1;
}

_OWORD *sub_1A2A6D62C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  unint64_t v45;
  _OWORD *v46;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = sub_1A2AE3130();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v11 | 7;
  v13 = *(_QWORD *)(v10 + 64);
  v14 = v13 + 7;
  v15 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + v11 + (((v11 | 7) + v8 + ((v7 + 51) & ~v7)) & ~(v11 | 7)) + 16;
  v16 = (v15 & ~v11) + v13;
  v17 = ((v11 + 48) & ~v11) + v13;
  if (v17 <= v16)
    v18 = v16;
  else
    v18 = v17;
  v19 = *((unsigned __int8 *)a2 + v18);
  if (v19 >= 2)
  {
    if (v18 <= 3)
      v20 = v18;
    else
      v20 = 4;
    __asm { BR              X13 }
  }
  v21 = ~v11;
  if (v19 == 1)
  {
    v22 = a2[1];
    *a1 = *a2;
    a1[1] = v22;
    a1[2] = a2[2];
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))(((unint64_t)a1 + v11 + 48) & v21, ((unint64_t)a2 + v11 + 48) & v21, v9);
    v23 = 1;
  }
  else
  {
    v24 = ~v7;
    *a1 = *a2;
    v25 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
    v26 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
    v27 = *(_OWORD *)v26;
    v28 = *(_OWORD *)(v26 + 16);
    *(_BYTE *)(v25 + 32) = *(_BYTE *)(v26 + 32);
    *(_OWORD *)v25 = v27;
    *(_OWORD *)(v25 + 16) = v28;
    *(_BYTE *)(v25 + 33) = *(_BYTE *)(v26 + 33);
    *(_BYTE *)(v25 + 34) = *(_BYTE *)(v26 + 34);
    v29 = v26 + v7;
    v30 = (v25 + v7 + 35) & ~v7;
    v45 = v18;
    v46 = a1;
    v31 = (v29 + 35) & v24;
    v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    v33 = v8;
    v34 = v9;
    v35 = v5;
    v36 = v10;
    v37 = v14;
    v32(v30, v31, v35);
    v38 = v33 + v12;
    v39 = (v30 + v33 + v12) & ~v12;
    v40 = v31 + v38;
    v18 = v45;
    v41 = v40 & ~v12;
    v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32);
    v42(v39, v41, v34);
    *(_OWORD *)((v37 + v39) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v37 + v41) & 0xFFFFFFFFFFFFF8);
    v43 = v34;
    a1 = v46;
    v42(((unint64_t)v46 + v15) & v21, ((unint64_t)a2 + v15) & v21, v43);
    v23 = 0;
  }
  *((_BYTE *)a1 + v18) = v23;
  return a1;
}

uint64_t sub_1A2A6D8A8(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  unsigned int v27;
  uint64_t v28;
  __int128 v29;
  unint64_t v30;
  unint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  char v40;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;

  if ((_OWORD *)a1 != a2)
  {
    v49 = *(_QWORD *)(a3 + 16);
    v5 = *(_QWORD *)(v49 - 8);
    v6 = *(unsigned __int8 *)(v5 + 80);
    v46 = v5;
    v7 = *(_QWORD *)(v5 + 64);
    v8 = sub_1A2AE3130();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = v10 | 7;
    v12 = *(_QWORD *)(v9 + 64);
    v47 = v12 + 7;
    v48 = ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + v10 + (((v10 | 7) + v7 + ((v6 + 51) & ~v6)) & ~(v10 | 7)) + 16;
    v13 = (v48 & ~v10) + v12;
    v14 = ((v10 + 48) & ~v10) + v12;
    if (v14 <= v13)
      v15 = v13;
    else
      v15 = v14;
    v16 = *(unsigned __int8 *)(a1 + v15);
    if (v16 >= 2)
    {
      if (v15 <= 3)
        v17 = v15;
      else
        v17 = 4;
      __asm { BR              X12 }
    }
    v18 = ~v6;
    v19 = ~v11;
    v20 = ~v10;
    v50 = *(_QWORD *)(v8 - 8);
    v43 = ~v11;
    v44 = v15;
    v45 = v6;
    v42 = v10 | 7;
    if (v16 == 1)
    {
      v21 = ~v6;
      sub_1A2994DD4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))((a1 + v10 + 48) & v20, v8);
    }
    else
    {
      swift_bridgeObjectRelease();
      v22 = v8;
      v23 = (a1 + 23) & 0xFFFFFFFFFFFFFFF8;
      sub_1A2994DD4(*(_QWORD *)v23, *(_QWORD *)(v23 + 8), *(_QWORD *)(v23 + 16), *(_QWORD *)(v23 + 24), *(_BYTE *)(v23 + 32));
      v24 = v23 + v6 + 35;
      v21 = ~v6;
      v25 = v24 & v18;
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v24 & v18, v49);
      v26 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v26((v25 + v7 + (v10 | 7)) & v19, v22);
      v8 = v22;
      v20 = ~v10;
      swift_release();
      v26((v48 + a1) & ~v10, v8);
    }
    v27 = *((unsigned __int8 *)a2 + v44);
    if (v27 >= 2)
    {
      if (v44 <= 3)
        v28 = v44;
      else
        v28 = 4;
      __asm { BR              X12 }
    }
    if (v27 == 1)
    {
      v29 = a2[1];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v29;
      *(_OWORD *)(a1 + 32) = a2[2];
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v50 + 32))((a1 + v10 + 48) & v20, ((unint64_t)a2 + v10 + 48) & v20, v8);
      v40 = 1;
    }
    else
    {
      *(_OWORD *)a1 = *a2;
      v30 = (a1 + 23) & 0xFFFFFFFFFFFFFFF8;
      v31 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
      v32 = *(_OWORD *)v31;
      v33 = *(_OWORD *)(v31 + 16);
      *(_BYTE *)(v30 + 32) = *(_BYTE *)(v31 + 32);
      *(_OWORD *)v30 = v32;
      *(_OWORD *)(v30 + 16) = v33;
      *(_BYTE *)(v30 + 33) = *(_BYTE *)(v31 + 33);
      *(_BYTE *)(v30 + 34) = *(_BYTE *)(v31 + 34);
      v34 = v8;
      v35 = (v30 + v45 + 35) & v21;
      v36 = (v31 + v45 + 35) & v21;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32))(v35, v36, v49);
      v37 = (v35 + v7 + v42) & v43;
      v38 = (v36 + v7 + v42) & v43;
      v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32);
      v39(v37, v38, v34);
      *(_OWORD *)((v47 + v37) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v47 + v38) & 0xFFFFFFFFFFFFF8);
      v39((v48 + a1) & v20, ((unint64_t)a2 + v48) & v20, v34);
      v40 = 0;
    }
    *(_BYTE *)(a1 + v44) = v40;
  }
  return a1;
}

uint64_t sub_1A2A6DCCC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  int v16;
  unsigned int v18;
  int v19;
  unsigned int v20;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 51) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(sub_1A2AE3130() - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = ((v9 + ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + ((v6 + v7 + (v9 | 7)) & ~(v9 | 7)) + 16) & ~v9) + v10;
  v12 = ((v9 + 48) & ~v9) + v10;
  if (v12 <= v11)
    v13 = v11;
  else
    v13 = v12;
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_22;
  v14 = v13 + 1;
  v15 = 8 * (v13 + 1);
  if ((v13 + 1) <= 3)
  {
    v18 = ((a2 + ~(-1 << v15) - 254) >> v15) + 1;
    if (HIWORD(v18))
    {
      v16 = *(_DWORD *)(a1 + v14);
      if (!v16)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v18 > 0xFF)
    {
      v16 = *(unsigned __int16 *)(a1 + v14);
      if (!*(_WORD *)(a1 + v14))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v18 < 2)
    {
LABEL_22:
      v20 = *(unsigned __int8 *)(a1 + v13);
      if (v20 >= 2)
        return (v20 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v16 = *(unsigned __int8 *)(a1 + v14);
  if (!*(_BYTE *)(a1 + v14))
    goto LABEL_22;
LABEL_15:
  v19 = (v16 - 1) << v15;
  if (v14 > 3)
    v19 = 0;
  if ((_DWORD)v14)
  {
    if (v14 > 3)
      LODWORD(v14) = 4;
    __asm { BR              X11 }
  }
  return (v19 + 255);
}

void sub_1A2A6DE54(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  size_t v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 51) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(sub_1A2AE3130() - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  v13 = ((v11 + ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + ((v8 + v9 + (v11 | 7)) & ~(v11 | 7)) + 16) & ~v11) + v12;
  v14 = ((v11 + 48) & ~v11) + v12;
  if (v14 <= v13)
    v14 = v13;
  v15 = v14 + 1;
  if (a3 < 0xFF)
  {
    v16 = 0u;
  }
  else if (v15 <= 3)
  {
    v18 = ((a3 + ~(-1 << (8 * v15)) - 254) >> (8 * v15)) + 1;
    if (HIWORD(v18))
    {
      v16 = 4u;
    }
    else if (v18 >= 0x100)
    {
      v16 = 2;
    }
    else
    {
      v16 = v18 > 1;
    }
  }
  else
  {
    v16 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v17 = a2 - 255;
  if (v15 < 4)
  {
    if ((_DWORD)v14 != -1)
    {
      v19 = v17 & ~(-1 << (8 * v15));
      bzero(a1, v15);
      if ((_DWORD)v15 == 3)
      {
        *(_WORD *)a1 = v19;
        a1[2] = BYTE2(v19);
      }
      else if ((_DWORD)v15 == 2)
      {
        *(_WORD *)a1 = v19;
      }
      else
      {
        *a1 = v19;
      }
    }
  }
  else
  {
    bzero(a1, v14 + 1);
    *(_DWORD *)a1 = v17;
  }
  __asm { BR              X10 }
}

uint64_t sub_1A2A6E058(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 51) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(sub_1A2AE3130() - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = ((v7 + ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + ((v4 + v5 + (v7 | 7)) & ~(v7 | 7)) + 16) & ~v7) + v8;
  v10 = ((v7 + 48) & ~v7) + v8;
  if (v10 <= v9)
    v10 = v9;
  result = *(unsigned __int8 *)(a1 + v10);
  if (result >= 2)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X12 }
  }
  return result;
}

void sub_1A2A6E158(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  size_t v18;
  size_t v19;
  unsigned int v20;
  unsigned int v21;
  int v22;

  if (a2 > 1)
  {
    v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
    v12 = (*(unsigned __int8 *)(v11 + 80) + 51) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v13 = *(_QWORD *)(v11 + 64);
    v14 = *(_QWORD *)(sub_1A2AE3130() - 8);
    v15 = *(unsigned __int8 *)(v14 + 80);
    v16 = *(_QWORD *)(v14 + 64);
    v17 = ((v15 + ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + ((v12 + v13 + (v15 | 7)) & ~(v15 | 7)) + 16) & ~v15) + v16;
    v18 = ((v15 + 48) & ~v15) + v16;
    if (v18 <= v17)
      v19 = v17;
    else
      v19 = v18;
    v20 = a2 - 2;
    if (v19 < 4)
    {
      v21 = v20 >> (8 * v19);
      v22 = v20 & ~(-1 << (8 * v19));
      a1[v19] = v21 + 2;
      bzero(a1, v19);
      if ((_DWORD)v19 == 3)
      {
        *(_WORD *)a1 = v22;
        a1[2] = BYTE2(v22);
      }
      else if ((_DWORD)v19 == 2)
      {
        *(_WORD *)a1 = v22;
      }
      else
      {
        *a1 = v22;
      }
    }
    else
    {
      a1[v19] = 2;
      bzero(a1, v19);
      *(_DWORD *)a1 = v20;
    }
  }
  else
  {
    v6 = *(_QWORD *)(sub_1A2AE3130() - 8);
    v7 = *(unsigned __int8 *)(v6 + 80);
    v8 = *(_QWORD *)(v6 + 64);
    v9 = ((v7 + 48) & ~v7) + v8;
    v10 = ((v7
          + ((v8 + 7) & 0xFFFFFFFFFFFFFFF8)
          + ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64)
            + (v7 | 7)
            + ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80) + 51) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80))) & ~(v7 | 7))
          + 16) & ~v7)
        + v8;
    if (v9 > v10)
      v10 = v9;
    a1[v10] = a2;
  }
}

uint64_t sub_1A2A6E2E8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    sub_1A2A4574C();
    sub_1A2A56374();
    type metadata accessor for SFXPCBlock();
  }
  return result;
}

uint64_t *sub_1A2A6E3CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = sub_1A2AE3130();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v12 & 0xF8 | 7;
  v14 = v9 + v13;
  v15 = *(_QWORD *)(v11 + 64) + 7;
  v16 = (v12 | v7) & 0x100000;
  if ((v13 | v7) != 7
    || v16 != 0
    || (v15 & 0xFFFFFFFFFFFFFFF8)
     + ((v9 + v13 + ((v7 + 51) & ~(unint64_t)v7)) & ~v13)
     + 16 > 0x18)
  {
    v19 = *a2;
    *a1 = *a2;
    v29 = (uint64_t *)(v19 + (((v13 | v7) + 16) & ~(v13 | v7)));
  }
  else
  {
    v38 = v5;
    v40 = ~v13;
    v41 = v10;
    v20 = a2[1];
    *a1 = *a2;
    a1[1] = v20;
    v42 = a1;
    v21 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
    v22 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
    v23 = *(_QWORD *)v22;
    v24 = *(_QWORD *)(v22 + 8);
    v25 = *(_QWORD *)(v22 + 16);
    v26 = *(_QWORD *)(v22 + 24);
    v27 = *(_BYTE *)(v22 + 32);
    v39 = v15;
    v37 = v14;
    swift_bridgeObjectRetain();
    sub_1A2993E10(v23, v24, v25, v26, v27);
    *(_QWORD *)v21 = v23;
    *(_QWORD *)(v21 + 8) = v24;
    *(_QWORD *)(v21 + 16) = v25;
    *(_QWORD *)(v21 + 24) = v26;
    *(_BYTE *)(v21 + 32) = v27;
    *(_BYTE *)(v21 + 33) = *(_BYTE *)(v22 + 33);
    *(_BYTE *)(v21 + 34) = *(_BYTE *)(v22 + 34);
    v28 = v21 + v8;
    v29 = v42;
    v30 = (v28 + 35) & ~v8;
    v31 = (v22 + v8 + 35) & ~v8;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v30, v31, v38);
    v32 = (v30 + v37) & v40;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v32, (v31 + v37) & v40, v41);
    v33 = (_QWORD *)((v39 + ((v31 + v37) & v40)) & 0xFFFFFFFFFFFFFFF8);
    v34 = v33[1];
    v35 = (_QWORD *)((v39 + v32) & 0xFFFFFFFFFFFFFFF8);
    *v35 = *v33;
    v35[1] = v34;
  }
  swift_retain();
  return v29;
}

uint64_t sub_1A2A6E590(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  v4 = (a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_1A2994DD4(*(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_BYTE *)(v4 + 32));
  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 35) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t))(v5 + 8))(v6);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = sub_1A2AE3130();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  (*(void (**)(unint64_t, uint64_t))(v9 + 8))((v6 + v7 + v10) & ~v10, v8);
  return swift_release();
}

_QWORD *sub_1A2A6E648(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)v7;
  v9 = *(_QWORD *)(v7 + 8);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = *(_QWORD *)(v7 + 24);
  v12 = *(_BYTE *)(v7 + 32);
  swift_bridgeObjectRetain();
  sub_1A2993E10(v8, v9, v10, v11, v12);
  *(_QWORD *)v6 = v8;
  *(_QWORD *)(v6 + 8) = v9;
  *(_QWORD *)(v6 + 16) = v10;
  *(_QWORD *)(v6 + 24) = v11;
  *(_BYTE *)(v6 + 32) = v12;
  *(_BYTE *)(v6 + 33) = *(_BYTE *)(v7 + 33);
  *(_BYTE *)(v6 + 34) = *(_BYTE *)(v7 + 34);
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (v14 + 35 + v6) & ~v14;
  v16 = (v14 + 35 + v7) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v15, v16);
  v17 = *(_QWORD *)(v13 + 64);
  v18 = sub_1A2AE3130();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_DWORD *)(v19 + 80) & 0xF8 | 7;
  v21 = (v17 + v20 + v15) & ~v20;
  v22 = (v17 + v20 + v16) & ~v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v21, v22, v18);
  v23 = *(_QWORD *)(v19 + 64) + 7;
  v24 = (_QWORD *)((v23 + v21) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)((v23 + v22) & 0xFFFFFFFFFFFFFFF8);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_retain();
  return a1;
}

_QWORD *sub_1A2A6E780(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)v7;
  v9 = *(_QWORD *)(v7 + 8);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = *(_QWORD *)(v7 + 24);
  v12 = *(_BYTE *)(v7 + 32);
  sub_1A2993E10(*(_QWORD *)v7, v9, v10, v11, v12);
  v13 = *(_QWORD *)v6;
  v14 = *(_QWORD *)(v6 + 8);
  v15 = *(_QWORD *)(v6 + 16);
  v16 = *(_QWORD *)(v6 + 24);
  *(_QWORD *)v6 = v8;
  *(_QWORD *)(v6 + 8) = v9;
  *(_QWORD *)(v6 + 16) = v10;
  *(_QWORD *)(v6 + 24) = v11;
  v17 = *(_BYTE *)(v6 + 32);
  *(_BYTE *)(v6 + 32) = v12;
  sub_1A2994DD4(v13, v14, v15, v16, v17);
  *(_BYTE *)(v6 + 33) = *(_BYTE *)(v7 + 33);
  *(_BYTE *)(v6 + 34) = *(_BYTE *)(v7 + 34);
  v18 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v19 + 35 + v6) & ~v19;
  v21 = (v19 + 35 + v7) & ~v19;
  (*(void (**)(uint64_t, uint64_t))(v18 + 24))(v20, v21);
  v22 = *(_QWORD *)(v18 + 64);
  v23 = sub_1A2AE3130();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_DWORD *)(v24 + 80) & 0xF8 | 7;
  v26 = (v22 + v25 + v20) & ~v25;
  v27 = (v22 + v25 + v21) & ~v25;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 24))(v26, v27, v23);
  v28 = *(_QWORD *)(v24 + 64) + 7;
  v29 = (_QWORD *)((v28 + v26) & 0xFFFFFFFFFFFFFFF8);
  v30 = (_QWORD *)((v28 + v27) & 0xFFFFFFFFFFFFFFF8);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1A2A6E8EC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v4 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v5 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_OWORD *)v5;
  v7 = *(_OWORD *)(v5 + 16);
  *(_BYTE *)(v4 + 32) = *(_BYTE *)(v5 + 32);
  *(_OWORD *)v4 = v6;
  *(_OWORD *)(v4 + 16) = v7;
  *(_BYTE *)(v4 + 33) = *(_BYTE *)(v5 + 33);
  *(_BYTE *)(v4 + 34) = *(_BYTE *)(v5 + 34);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 35 + v4) & ~v9;
  v11 = (v9 + 35 + v5) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v10, v11);
  v12 = *(_QWORD *)(v8 + 64);
  v13 = sub_1A2AE3130();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_DWORD *)(v14 + 80) & 0xF8 | 7;
  v16 = (v12 + v15 + v10) & ~v15;
  v17 = (v12 + v15 + v11) & ~v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v16, v17, v13);
  *(_OWORD *)((*(_QWORD *)(v14 + 64) + 7 + v16) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v14 + 64) + 7 + v17) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_1A2A6E9E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_BYTE *)(v7 + 32);
  v9 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_QWORD *)(v9 + 16);
  v13 = *(_QWORD *)(v9 + 24);
  v14 = *(_OWORD *)(v7 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v7;
  *(_OWORD *)(v9 + 16) = v14;
  v15 = *(_BYTE *)(v9 + 32);
  *(_BYTE *)(v9 + 32) = v8;
  sub_1A2994DD4(v10, v11, v12, v13, v15);
  *(_BYTE *)(v9 + 33) = *(_BYTE *)(v7 + 33);
  *(_BYTE *)(v9 + 34) = *(_BYTE *)(v7 + 34);
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = (v17 + 35 + v9) & ~v17;
  v19 = (v17 + 35 + v7) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v16 + 40))(v18, v19);
  v20 = *(_QWORD *)(v16 + 64);
  v21 = sub_1A2AE3130();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_DWORD *)(v22 + 80) & 0xF8 | 7;
  v24 = (v20 + v23 + v18) & ~v23;
  v25 = (v20 + v23 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 40))(v24, v25, v21);
  *(_OWORD *)((*(_QWORD *)(v22 + 64) + 7 + v24) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v22 + 64)
                                                                                       + 7
                                                                                       + v25) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1A2A6EB0C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  unint64_t v17;
  unint64_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(sub_1A2AE3130() - 8);
  if (*(_DWORD *)(v7 + 84) <= 0x7FFFFFFFu)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v7 + 84);
  if (v6 <= v8)
    v9 = v8;
  else
    v9 = v6;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = *(_QWORD *)(v5 + 64);
  v12 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  if (v9 < a2)
  {
    if (((((*(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + ((v11 + v12 + ((v10 + 51) & ~v10)) & ~v12) + 16) & 0xFFFFFFF8) != 0)
      v13 = 2;
    else
      v13 = a2 - v9 + 1;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v15 = v14;
    else
      v15 = 0;
    __asm { BR              X0 }
  }
  if ((v9 & 0x80000000) != 0)
  {
    v18 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v10 + 35) & ~v10;
    if (v6 >= v8)
      return (*(uint64_t (**)(unint64_t))(v5 + 48))(v18);
    else
      return (*(uint64_t (**)(unint64_t))(v7 + 48))((v18 + v11 + v12) & ~v12);
  }
  else
  {
    v17 = *(_QWORD *)(a1 + 8);
    if (v17 >= 0xFFFFFFFF)
      LODWORD(v17) = -1;
    return (v17 + 1);
  }
}

void sub_1A2A6ECC0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  size_t v12;
  unsigned int v13;
  int v14;
  int v15;
  unsigned int v16;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_1A2AE3130() - 8);
  if (*(_DWORD *)(v9 + 84) <= 0x7FFFFFFFu)
    v10 = 0x7FFFFFFF;
  else
    v10 = *(_DWORD *)(v9 + 84);
  if (v8 <= v10)
    v11 = v10;
  else
    v11 = v8;
  v12 = ((*(_QWORD *)(v7 + 64)
        + (*(_DWORD *)(v9 + 80) & 0xF8 | 7)
        + ((*(unsigned __int8 *)(v7 + 80) + 51) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))) & ~(*(_DWORD *)(v9 + 80) & 0xF8 | 7))
      + ((*(_QWORD *)(v9 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v11 >= a3)
  {
    v15 = 0u;
    if (a2 <= v11)
      goto LABEL_20;
  }
  else
  {
    if ((_DWORD)v12)
      v13 = 2;
    else
      v13 = a3 - v11 + 1;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v15 = v14;
    else
      v15 = 0;
    if (a2 <= v11)
LABEL_20:
      __asm { BR              X0 }
  }
  if ((_DWORD)v12)
  {
    v16 = ~v11 + a2;
    bzero(a1, v12);
    *a1 = v16;
  }
  __asm { BR              X10 }
}

void sub_1A2A6EE08()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x1A2A6EE9CLL);
}

void sub_1A2A6EE10()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = 0;
  if (v0)
    JUMPOUT(0x1A2A6EE18);
  JUMPOUT(0x1A2A6EE9CLL);
}

void sub_1A2A6EE2C()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x1A2A6EE9CLL);
}

void sub_1A2A6EE34()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x1A2A6EE9CLL);
}

void sub_1A2A6EE3C()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_WORD *)(v2 + v3) = 0;
  if (v1)
  {
    if (v0 < 0)
      JUMPOUT(0x1A2A6EE48);
    if (v1 < 0)
      JUMPOUT(0x1A2A6EE94);
    *(_QWORD *)(v2 + 8) = (v1 - 1);
  }
  JUMPOUT(0x1A2A6EE9CLL);
}

uint64_t sub_1A2A6EEF0(uint64_t a1)
{
  sub_1A2994DD4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A2A6EF24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_1A2993E10(*(_QWORD *)a2, v5, v6, v7, v8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A2A6EF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_1A2993E10(*(_QWORD *)a2, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v13 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v8;
  sub_1A2994DD4(v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A2A6F030(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  unsigned __int8 v10;

  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  v10 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v4;
  sub_1A2994DD4(v5, v6, v7, v8, v10);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A2A6F088(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1A2A6F0D0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t _s13DeclineActionVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v21 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[2];
    v9 = a2[3];
    v10 = a2[4];
    v11 = a2[5];
    v12 = *((_BYTE *)a2 + 48);
    swift_bridgeObjectRetain();
    sub_1A2993E10(v8, v9, v10, v11, v12);
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v11;
    *(_BYTE *)(a1 + 48) = v12;
    *(_BYTE *)(a1 + 49) = *((_BYTE *)a2 + 49);
    v13 = *(int *)(a3 + 28);
    v14 = a1 + v13;
    v15 = (uint64_t)a2 + v13;
    v16 = sub_1A2AE3130();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
    v18 = (_QWORD *)(v14 + v17);
    v19 = (_QWORD *)(v15 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
  }
  swift_retain();
  return a1;
}

uint64_t _s13DeclineActionVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  sub_1A2994DD4(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788);
  return swift_release();
}

uint64_t _s13DeclineActionVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  sub_1A2993E10(v7, v8, v9, v10, v11);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_BYTE *)(a1 + 48) = v11;
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  v12 = *(int *)(a3 + 28);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
  v17 = (_QWORD *)(v13 + v16);
  v18 = (_QWORD *)(v14 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_retain();
  return a1;
}

uint64_t _s13DeclineActionVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_BYTE *)(a2 + 48);
  sub_1A2993E10(v6, v7, v8, v9, v10);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  v15 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v10;
  sub_1A2994DD4(v11, v12, v13, v14, v15);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  v16 = *(int *)(a3 + 28);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
  v21 = (_QWORD *)(v17 + v20);
  v22 = (_QWORD *)(v18 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s13DeclineActionVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  v5 = *(int *)(a3 + 28);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788);
  *(_OWORD *)(v6 + *(int *)(v9 + 68)) = *(_OWORD *)(v7 + *(int *)(v9 + 68));
  return a1;
}

uint64_t _s13DeclineActionVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_BYTE *)(a2 + 48);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v12;
  v13 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v7;
  sub_1A2994DD4(v8, v9, v10, v11, v13);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  v14 = *(int *)(a3 + 28);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788);
  *(_OWORD *)(v15 + *(int *)(v18 + 68)) = *(_OWORD *)(v16 + *(int *)(v18 + 68));
  swift_release();
  return a1;
}

uint64_t _s13DeclineActionVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2A6F5AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t _s13DeclineActionVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2A6F638(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1A2A6F6B0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A2A6FCB4(319, &qword_1EE674668, (void (*)(void))sub_1A2A563BC, (void (*)(void))sub_1A2A4562C);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A2A6F758()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1A2AE3130();
  if (v1 <= 0x3F)
  {
    result = sub_1A2A6FCB4(319, (uint64_t *)&unk_1EE674670, (void (*)(void))sub_1A2A456C0, (void (*)(void))sub_1A2A6FD48);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1A2A6F7FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1A2AE3130();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(a3 + 52);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v8((uint64_t *)((char *)a1 + v9), (uint64_t *)v11, v7);
    v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0) + 68);
    v13 = &v10[v12];
    v14 = &v11[v12];
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1A2A6F8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = sub_1A2AE3130();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 52), v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0);
  return swift_release();
}

uint64_t sub_1A2A6F934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = sub_1A2AE3130();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 52);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, v10, v6);
  v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0) + 68);
  v12 = (_QWORD *)(v9 + v11);
  v13 = (_QWORD *)(v10 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  return a1;
}

uint64_t sub_1A2A6F9D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = sub_1A2AE3130();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 52);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, v10, v6);
  v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0) + 68);
  v12 = (_QWORD *)(v9 + v11);
  v13 = (_QWORD *)(v10 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1A2A6FA78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1A2AE3130();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 52);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, v10, v6);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0);
  *(_OWORD *)(v9 + *(int *)(v11 + 68)) = *(_OWORD *)(v10 + *(int *)(v11 + 68));
  return a1;
}

uint64_t sub_1A2A6FB08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1A2AE3130();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 52);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, v10, v6);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0);
  *(_OWORD *)(v9 + *(int *)(v11 + 68)) = *(_OWORD *)(v10 + *(int *)(v11 + 68));
  swift_release();
  return a1;
}

uint64_t sub_1A2A6FBA4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2A6FBB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_1A2AE3130();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0);
    v10 = a1 + *(int *)(a3 + 52);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1A2A6FC28()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2A6FC34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_1A2AE3130();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0);
    v12 = a1 + *(int *)(a4 + 52);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1A2A6FCB4(uint64_t a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    a3();
    a4();
    sub_1A2A4574C();
    sub_1A2A56374();
    type metadata accessor for SFXPCBlock();
  }
  return result;
}

unint64_t sub_1A2A6FD48()
{
  unint64_t result;

  result = qword_1EE674938;
  if (!qword_1EE674938)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFInterventionResponse, &type metadata for SFInterventionResponse);
    atomic_store(result, (unint64_t *)&qword_1EE674938);
  }
  return result;
}

ValueMetadata *_s13DeclineActionV10CodingKeysOMa()
{
  return &_s13DeclineActionV10CodingKeysON;
}

uint64_t sub_1A2A6FDA4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A2A6FDF0 + 4 * byte_1A2B065D3[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A2A6FE24 + 4 * byte_1A2B065CE[v4]))();
}

uint64_t sub_1A2A6FE24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A6FE2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2A6FE34);
  return result;
}

uint64_t sub_1A2A6FE40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2A6FE48);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A2A6FE4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A6FE54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s19ButtonConfigurationO10CodingKeysOMa()
{
  return &_s19ButtonConfigurationO10CodingKeysON;
}

ValueMetadata *_s19ButtonConfigurationO14TextCodingKeysOMa()
{
  return &_s19ButtonConfigurationO14TextCodingKeysON;
}

uint64_t _s19ButtonConfigurationO14TextCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A2A6FEC8 + 4 * byte_1A2B065D8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A2A6FEE8 + 4 * byte_1A2B065DD[v4]))();
}

_BYTE *sub_1A2A6FEC8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A2A6FEE8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A2A6FEF0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A2A6FEF8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A2A6FF00(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A2A6FF08(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s19ButtonConfigurationO16SymbolCodingKeysOMa()
{
  return &_s19ButtonConfigurationO16SymbolCodingKeysON;
}

ValueMetadata *_s19ButtonConfigurationO20SymbolTextCodingKeysOMa()
{
  return &_s19ButtonConfigurationO20SymbolTextCodingKeysON;
}

uint64_t _s19ButtonConfigurationO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A2A6FF80 + 4 * byte_1A2B065E7[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A2A6FFB4 + 4 * byte_1A2B065E2[v4]))();
}

uint64_t sub_1A2A6FFB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A6FFBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2A6FFC4);
  return result;
}

uint64_t sub_1A2A6FFD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2A6FFD8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A2A6FFDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A6FFE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s19ButtonConfigurationO20SymbolTextCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A2A7003C + 4 * byte_1A2B065F1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A2A70070 + 4 * byte_1A2B065EC[v4]))();
}

uint64_t sub_1A2A70070(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A70078(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2A70080);
  return result;
}

uint64_t sub_1A2A7008C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2A70094);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A2A70098(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A700A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s13DeclineActionV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A2A700F8 + 4 * byte_1A2B065FB[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A2A7012C + 4 * byte_1A2B065F6[v4]))();
}

uint64_t sub_1A2A7012C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A70134(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2A7013CLL);
  return result;
}

uint64_t sub_1A2A70148(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2A70150);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A2A70154(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A7015C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1A2A70168()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A70178()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A70188()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A70198()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A701A8()
{
  JUMPOUT(0x1A85895ECLL);
}

unint64_t sub_1A2A701BC()
{
  unint64_t result;

  result = qword_1EE67E4F8;
  if (!qword_1EE67E4F8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B07310, &_s19ButtonConfigurationO20SymbolTextCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E4F8);
  }
  return result;
}

unint64_t sub_1A2A70204()
{
  unint64_t result;

  result = qword_1EE67E500;
  if (!qword_1EE67E500)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B073C8, &_s19ButtonConfigurationO16SymbolCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E500);
  }
  return result;
}

unint64_t sub_1A2A7024C()
{
  unint64_t result;

  result = qword_1EE67E508;
  if (!qword_1EE67E508)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B07480, &_s19ButtonConfigurationO14TextCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E508);
  }
  return result;
}

unint64_t sub_1A2A70294()
{
  unint64_t result;

  result = qword_1EE67E510;
  if (!qword_1EE67E510)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B07538, &_s19ButtonConfigurationO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E510);
  }
  return result;
}

void sub_1A2A702D8()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A702E8()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A702F8()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A70308()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A70318()
{
  JUMPOUT(0x1A85895ECLL);
}

unint64_t sub_1A2A7032C()
{
  unint64_t result;

  result = qword_1EE67E518;
  if (!qword_1EE67E518)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B07988, &_s13DeclineActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E518);
  }
  return result;
}

void sub_1A2A70370()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A70380()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A70390()
{
  JUMPOUT(0x1A85895ECLL);
}

unint64_t sub_1A2A703A4()
{
  unint64_t result;

  result = qword_1EE67E520;
  if (!qword_1EE67E520)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B078F8, &_s13DeclineActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E520);
  }
  return result;
}

unint64_t sub_1A2A703EC()
{
  unint64_t result;

  result = qword_1EE67E528;
  if (!qword_1EE67E528)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B07920, &_s13DeclineActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E528);
  }
  return result;
}

void sub_1A2A70430()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A70440()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A70450()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A70460()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A70470()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A70480()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A70490()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A704A0()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A704B0()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A704C0()
{
  JUMPOUT(0x1A85895ECLL);
}

unint64_t sub_1A2A704D4()
{
  unint64_t result;

  result = qword_1EE67E530;
  if (!qword_1EE67E530)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B073F0, &_s19ButtonConfigurationO14TextCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E530);
  }
  return result;
}

unint64_t sub_1A2A7051C()
{
  unint64_t result;

  result = qword_1EE67E538;
  if (!qword_1EE67E538)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B07418, &_s19ButtonConfigurationO14TextCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E538);
  }
  return result;
}

unint64_t sub_1A2A70564()
{
  unint64_t result;

  result = qword_1EE67E540;
  if (!qword_1EE67E540)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B07338, &_s19ButtonConfigurationO16SymbolCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E540);
  }
  return result;
}

unint64_t sub_1A2A705AC()
{
  unint64_t result;

  result = qword_1EE67E548;
  if (!qword_1EE67E548)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B07360, &_s19ButtonConfigurationO16SymbolCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E548);
  }
  return result;
}

unint64_t sub_1A2A705F4()
{
  unint64_t result;

  result = qword_1EE67E550;
  if (!qword_1EE67E550)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B07280, &_s19ButtonConfigurationO20SymbolTextCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E550);
  }
  return result;
}

unint64_t sub_1A2A7063C()
{
  unint64_t result;

  result = qword_1EE67E558;
  if (!qword_1EE67E558)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B072A8, &_s19ButtonConfigurationO20SymbolTextCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E558);
  }
  return result;
}

unint64_t sub_1A2A70684()
{
  unint64_t result;

  result = qword_1EE67E560;
  if (!qword_1EE67E560)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B074A8, &_s19ButtonConfigurationO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E560);
  }
  return result;
}

unint64_t sub_1A2A706CC()
{
  unint64_t result;

  result = qword_1EE67E568;
  if (!qword_1EE67E568)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B074D0, &_s19ButtonConfigurationO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E568);
  }
  return result;
}

void sub_1A2A70710()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A70720()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A70730()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A70740()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A70750()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A70760()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A70770()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A70780()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A70790()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2A707A0()
{
  JUMPOUT(0x1A85895ECLL);
}

uint64_t sub_1A2A707B0()
{
  return 6;
}

uint64_t sub_1A2A707B8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A2B47C30 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6564646968 && a2 == 0xE600000000000000 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F6974617265706FLL && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A2A70954()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A2A70980(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1A2971EBC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EE67E578 + dword_1EE67E578))(a1, v4, v5, v6);
}

BOOL static SFAirDrop.AskProgress.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SFAirDrop.AskProgress.hash(into:)()
{
  return sub_1A2AE4018();
}

uint64_t sub_1A2A70A64()
{
  sub_1A2A7307C();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A70A8C()
{
  sub_1A2A7307C();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A70AB4()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000015;
  if (*v0 != 1)
    v1 = 0xD000000000000013;
  if (*v0)
    return v1;
  else
    return 0x7472617453746F6ELL;
}

uint64_t sub_1A2A70B20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2A73EC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2A70B44()
{
  sub_1A2A73038();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A70B6C()
{
  sub_1A2A73038();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A70B94()
{
  sub_1A2A73104();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A70BBC()
{
  sub_1A2A73104();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A70BE4()
{
  sub_1A2A730C0();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A70C0C()
{
  sub_1A2A730C0();
  return sub_1A2AE4108();
}

uint64_t SFAirDrop.AskProgress.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E590);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x1E0C80A78](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E598);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E5A0);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E5A8);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2A73038();
  sub_1A2AE40E4();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_1A2A730C0();
      sub_1A2AE3DB4();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_1A2A7307C();
      v16 = v21;
      sub_1A2AE3DB4();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_1A2A73104();
    sub_1A2AE3DB4();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

uint64_t SFAirDrop.AskProgress.hashValue.getter()
{
  sub_1A2AE400C();
  sub_1A2AE4018();
  return sub_1A2AE4030();
}

uint64_t SFAirDrop.AskProgress.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E5D0);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E5D8);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E5E0);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E5E8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2A73038();
  v13 = v41;
  sub_1A2AE40C0();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_1A2AE3D9C();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_1A2AE3B5C();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE67AC00);
    *v25 = &type metadata for SFAirDrop.AskProgress;
    sub_1A2AE3CF4();
    sub_1A2AE3B50();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x1E0DEC450], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0Tm(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_1A2A730C0();
      v20 = v9;
      sub_1A2AE3CE8();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_1A2A7307C();
      v28 = v15;
      sub_1A2AE3CE8();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_1A2A73104();
    sub_1A2AE3CE8();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_0Tm(v26);
}

uint64_t sub_1A2A71320@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return SFAirDrop.AskProgress.init(from:)(a1, a2);
}

uint64_t sub_1A2A71334(_QWORD *a1)
{
  return SFAirDrop.AskProgress.encode(to:)(a1);
}

uint64_t SFAirDrop.Progress.percent.getter()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t result;

  v1 = v0[2];
  if (v1 >> 62)
  {
    if (v1 >> 62 == 1)
      *(double *)&result = 1.0;
    else
      *(double *)&result = 0.0;
  }
  else if ((v1 & 1) != 0)
  {
    *(double *)&result = 0.0;
  }
  else
  {
    *(double *)&result = (double)v0[3] / (double)v0[1];
  }
  return result;
}

uint64_t SFAirDrop.Progress.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  void (*v36)(_QWORD, _QWORD, _QWORD);
  void (*v37)(char *, uint64_t);
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_QWORD, _QWORD, _QWORD);
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;

  v1 = sub_1A2AE2F44();
  v46 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A2AE2ECC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A2AE3148();
  MEMORY[0x1E0C80A78](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B420);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v16 = (char *)&v42 - v15;
  v18 = v0[1];
  v17 = v0[2];
  v19 = v0[4];
  if (!(v17 >> 62))
  {
    v30 = v0[3];
    v44 = (void (*)(_QWORD, _QWORD, _QWORD))v7;
    v45 = v4;
    v46 = v5;
    v49 = 0;
    v50 = 0xE000000000000000;
    if ((v17 & 1) != 0)
    {
      sub_1A2AE3B20();
      v48 = v30;
      v39 = sub_1A2AE3E5C();
      v41 = v40;
      swift_bridgeObjectRelease();
      v49 = v39;
      v50 = v41;
      sub_1A2AE34F0();
      v48 = v19;
    }
    else
    {
      v31 = v13;
      v42 = v14;
      v32 = v18;
      sub_1A2AE3B20();
      v43 = v19;
      v48 = v30;
      v33 = sub_1A2AE3E5C();
      v35 = v34;
      swift_bridgeObjectRelease();
      v49 = v33;
      v50 = v35;
      sub_1A2AE34F0();
      v48 = v32;
      sub_1A2AE3E5C();
      sub_1A2AE34F0();
      swift_bridgeObjectRelease();
      sub_1A2AE34F0();
      v47 = (double)v30 / (double)v32;
      sub_1A2AE313C();
      sub_1A298C428();
      sub_1A2AE2EA8();
      v36 = v44;
      sub_1A2AE2EC0();
      MEMORY[0x1A858655C](v36, v31);
      (*(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t))(v46 + 8))(v36, v45);
      v37 = *(void (**)(char *, uint64_t))(v42 + 8);
      v37(v12, v31);
      sub_1A296E5E4(&qword_1EE67B430, &qword_1EE67B420, MEMORY[0x1E0CAFAC8]);
      sub_1A2AE3358();
      v37(v16, v31);
      sub_1A2AE34F0();
      swift_bridgeObjectRelease();
      sub_1A2AE34F0();
      v48 = v43;
    }
    sub_1A2AE3E5C();
    sub_1A2AE34F0();
    swift_bridgeObjectRelease();
    sub_1A2AE34F0();
    return v49;
  }
  v20 = *v0;
  if (v17 >> 62 == 1)
  {
    v21 = *(_QWORD *)(v20 + 16);
    v22 = MEMORY[0x1E0DEE9D8];
    if (v21)
    {
      v48 = MEMORY[0x1E0DEE9D8];
      sub_1A29BE308(0, v21, 0);
      v23 = v20 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
      v24 = *(_QWORD *)(v46 + 72);
      v44 = *(void (**)(_QWORD, _QWORD, _QWORD))(v46 + 16);
      v45 = v24;
      do
      {
        v44(v3, v23, v1);
        v49 = 0;
        v50 = 0xE000000000000000;
        sub_1A2AE2F2C();
        sub_1A2AE34F0();
        swift_bridgeObjectRelease();
        sub_1A2AE34F0();
        sub_1A2AE2EFC();
        sub_1A2AE34F0();
        swift_bridgeObjectRelease();
        v26 = v49;
        v25 = v50;
        (*(void (**)(char *, uint64_t))(v46 + 8))(v3, v1);
        v22 = v48;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A29BE308(0, *(_QWORD *)(v22 + 16) + 1, 1);
          v22 = v48;
        }
        v28 = *(_QWORD *)(v22 + 16);
        v27 = *(_QWORD *)(v22 + 24);
        if (v28 >= v27 >> 1)
        {
          sub_1A29BE308(v27 > 1, v28 + 1, 1);
          v22 = v48;
        }
        *(_QWORD *)(v22 + 16) = v28 + 1;
        v29 = v22 + 16 * v28;
        *(_QWORD *)(v29 + 32) = v26;
        *(_QWORD *)(v29 + 40) = v25;
        v23 += v45;
        --v21;
      }
      while (v21);
    }
    v49 = 0x6574656C706D6F63;
    v50 = 0xEA00000000002864;
    v48 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6764B8);
    sub_1A296E5E4((unint64_t *)&qword_1EE67AAD0, &qword_1EE6764B8, MEMORY[0x1E0DEAF20]);
    sub_1A2AE33AC();
    swift_bridgeObjectRelease();
    sub_1A2AE34F0();
    swift_bridgeObjectRelease();
    return v49;
  }
  if (v17 == 0x8000000000000000 && (v18 | v20 | v0[3] | v19) == 0)
    return 0x72617453746F6E2ELL;
  else
    return 0xD00000000000001ALL;
}

uint64_t SFAirDrop.Progress.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;

  v2 = v1;
  v4 = *v2;
  v5 = v2[2];
  if (v5 >> 62)
  {
    if (v5 >> 62 == 1)
    {
      sub_1A2AE4018();
      return sub_1A2A72C08(a1, v4);
    }
  }
  else
  {
    sub_1A2AE4018();
    sub_1A2AE4018();
    sub_1A2AE4024();
    if ((v5 & 1) == 0)
      sub_1A2AE4018();
    sub_1A2AE4018();
  }
  return sub_1A2AE4018();
}

uint64_t sub_1A2A71AB8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A2A71AEC + 4 * byte_1A2B07F70[*v0]))(0x7472617453746F6ELL, 0xEA00000000006465);
}

unint64_t sub_1A2A71AEC()
{
  return 0xD000000000000019;
}

uint64_t sub_1A2A71B08()
{
  return 0x726566736E617274;
}

uint64_t sub_1A2A71B28()
{
  return 0x6574656C706D6F63;
}

uint64_t sub_1A2A71B44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2A74018(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2A71B68()
{
  sub_1A2A73148();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A71B90()
{
  sub_1A2A73148();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A71BB8()
{
  return 1936487029;
}

uint64_t sub_1A2A71BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1936487029 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A2AE3EE0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A2A71C4C()
{
  sub_1A2A7318C();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A71C74()
{
  sub_1A2A7318C();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A71C9C()
{
  sub_1A2A73258();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A71CC4()
{
  sub_1A2A73258();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A71CEC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A2A71D24 + 4 * byte_1A2B07F74[*v0]))(0x706F4373656C6966, 0xEB00000000646569);
}

uint64_t sub_1A2A71D24()
{
  return 0x7479426C61746F74;
}

uint64_t sub_1A2A71D40()
{
  return 0x706F437365747962;
}

unint64_t sub_1A2A71D54()
{
  return 0xD000000000000016;
}

uint64_t sub_1A2A71D70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2A741F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2A71D94()
{
  sub_1A2A731D0();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A71DBC()
{
  sub_1A2A731D0();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A71DE4()
{
  sub_1A2A73214();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A71E0C()
{
  sub_1A2A73214();
  return sub_1A2AE4108();
}

uint64_t SFAirDrop.Progress.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E5F0);
  v36 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v37 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E5F8);
  v4 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E600);
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E608);
  v9 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E610);
  v43 = *(_QWORD *)(v12 - 8);
  v44 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = *v1;
  v15 = v1[2];
  v41 = v1[1];
  v42 = v14;
  v16 = v1[3];
  v34 = v1[4];
  v35 = v16;
  v17 = a1[3];
  v18 = a1;
  v19 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v18, v17);
  sub_1A2A73148();
  sub_1A2AE40E4();
  if (!(v15 >> 62))
  {
    v23 = v4;
    LOBYTE(v46) = 2;
    sub_1A2A731D0();
    v24 = v39;
    v21 = v44;
    sub_1A2AE3DB4();
    LOBYTE(v46) = 0;
    v25 = v40;
    v26 = v45;
    sub_1A2AE3E14();
    if (!v26)
    {
      LOBYTE(v46) = 1;
      sub_1A2AE3DD8();
      LOBYTE(v46) = 2;
      sub_1A2AE3E14();
      LOBYTE(v46) = 3;
      sub_1A2AE3E14();
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v25);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v21);
  }
  if (v15 >> 62 == 1)
  {
    LOBYTE(v46) = 3;
    sub_1A2A7318C();
    v20 = v37;
    v21 = v44;
    sub_1A2AE3DB4();
    v46 = v42;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B520);
    sub_1A2A7329C(&qword_1EE67B528, &qword_1EE67B530, MEMORY[0x1E0CB0010], MEMORY[0x1E0DEAF10]);
    v22 = v38;
    sub_1A2AE3E2C();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v20, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v21);
  }
  if (v15 != 0x8000000000000000 || v35 | v41 | v42 | v34)
  {
    LOBYTE(v46) = 1;
    sub_1A2A73214();
    v29 = v44;
    sub_1A2AE3DB4();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v33);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v29);
  }
  else
  {
    LOBYTE(v46) = 0;
    sub_1A2A73258();
    v28 = v44;
    sub_1A2AE3DB4();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v31);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v28);
  }
}

uint64_t SFAirDrop.Progress.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  _BYTE v4[72];

  v1 = *v0;
  v2 = v0[2];
  sub_1A2AE400C();
  if (!(v2 >> 62))
  {
    sub_1A2AE4018();
    sub_1A2AE4018();
    sub_1A2AE4024();
    if ((v2 & 1) == 0)
      sub_1A2AE4018();
    sub_1A2AE4018();
    goto LABEL_8;
  }
  if (v2 >> 62 != 1)
  {
LABEL_8:
    sub_1A2AE4018();
    return sub_1A2AE4030();
  }
  sub_1A2AE4018();
  sub_1A2A72C08((uint64_t)v4, v1);
  return sub_1A2AE4030();
}

uint64_t SFAirDrop.Progress.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD v20[7];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;

  v22 = a2;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E640);
  v20[4] = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v27 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E648);
  v23 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v25 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E650);
  v20[5] = *(_QWORD *)(v5 - 8);
  v20[6] = v5;
  MEMORY[0x1E0C80A78](v5);
  v24 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E658);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E660);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1A2A73148();
  v14 = v29;
  sub_1A2AE40C0();
  if (!v14)
  {
    v20[1] = v8;
    v20[2] = v7;
    v20[3] = 0;
    v29 = v10;
    v15 = sub_1A2AE3D9C();
    if (*(_QWORD *)(v15 + 16) == 1)
    {
      v20[0] = v12;
      __asm { BR              X10 }
    }
    v16 = sub_1A2AE3B5C();
    swift_allocError();
    v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE67AC00);
    *v18 = &type metadata for SFAirDrop.Progress;
    sub_1A2AE3CF4();
    sub_1A2AE3B50();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x1E0DEC450], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v9);
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
}

uint64_t sub_1A2A72AD0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDrop.Progress.init(from:)(a1, a2);
}

uint64_t sub_1A2A72AE4(_QWORD *a1)
{
  return SFAirDrop.Progress.encode(to:)(a1);
}

uint64_t sub_1A2A72B00()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  _BYTE v4[72];

  v1 = *v0;
  v2 = v0[2];
  sub_1A2AE400C();
  if (!(v2 >> 62))
  {
    sub_1A2AE4018();
    sub_1A2AE4018();
    sub_1A2AE4024();
    if ((v2 & 1) == 0)
      sub_1A2AE4018();
    sub_1A2AE4018();
    goto LABEL_8;
  }
  if (v2 >> 62 != 1)
  {
LABEL_8:
    sub_1A2AE4018();
    return sub_1A2AE4030();
  }
  sub_1A2AE4018();
  sub_1A2A72C08((uint64_t)v4, v1);
  return sub_1A2AE4030();
}

uint64_t sub_1A2A72C08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD v17[2];

  v4 = sub_1A2AE2F44();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BB88);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a2 + 16);
  v17[1] = a1;
  sub_1A2AE4018();
  if (v11)
  {
    v12 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v13 = *(_QWORD *)(v5 + 72);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    while (1)
    {
      v14(v10, v12, v4);
      v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v15(v10, 0, 1, v4);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
      if ((_DWORD)result == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
      sub_1A2A743E4(&qword_1EE67C6E0, MEMORY[0x1E0CB0018]);
      sub_1A2AE3394();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v12 += v13;
      if (!--v11)
        return v15(v10, 1, 1, v4);
    }
  }
  else
  {
    v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    return v15(v10, 1, 1, v4);
  }
  return result;
}

BOOL _s7Sharing9SFAirDropO8ProgressO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v19;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = a1[4];
  v8 = *a2;
  v7 = a2[1];
  v10 = a2[2];
  v9 = a2[3];
  v11 = a2[4];
  if (!(v5 >> 62))
  {
    if (v10 >> 62)
      goto LABEL_35;
    sub_1A297DB90(*a1, v2, v5);
    sub_1A297DB90(v8, v7, v10);
    if (v3 == v8)
    {
      if ((v5 & 1) != 0)
      {
        v13 = 0;
        if ((v10 & 1) == 0)
          return v13;
LABEL_39:
        if (v4 == v9)
          return v6 == v11;
        return v13;
      }
      if ((v10 & 1) == 0)
      {
        v13 = 0;
        if (v2 != v7)
          return v13;
        goto LABEL_39;
      }
    }
    return 0;
  }
  if (v5 >> 62 == 1)
  {
    if (v10 >> 62 == 1)
    {
      sub_1A2993E5C(*a2, a2[1], v10);
      sub_1A2993E5C(v3, v2, v5);
      v19 = sub_1A2AA4370(v3, v8);
      sub_1A297DB90(v3, v2, v5);
      sub_1A297DB90(v8, v7, v10);
      return v19 & 1;
    }
    swift_bridgeObjectRetain();
    goto LABEL_35;
  }
  if (v5 == 0x8000000000000000 && (v4 | v2 | v3 | v6) == 0)
  {
    if (v10 >> 62 == 2 && v10 == 0x8000000000000000 && !(v11 | v9 | v8 | v7))
    {
      sub_1A297DB90(0, 0, 0x8000000000000000);
      sub_1A297DB90(0, 0, 0x8000000000000000);
      return 1;
    }
LABEL_35:
    sub_1A2993E5C(v8, v7, v10);
    sub_1A297DB90(v3, v2, v5);
    sub_1A297DB90(v8, v7, v10);
    return 0;
  }
  if (v10 >> 62 != 2 || v8 != 1 || v7 != 0 || v10 != 0x8000000000000000 || (v11 | v9) != 0)
    goto LABEL_35;
  v13 = 1;
  sub_1A297DB90(1, 0, 0x8000000000000000);
  sub_1A297DB90(1, 0, 0x8000000000000000);
  return v13;
}

unint64_t sub_1A2A73038()
{
  unint64_t result;

  result = qword_1EE67E5B0;
  if (!qword_1EE67E5B0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08940, &_s11AskProgressO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E5B0);
  }
  return result;
}

unint64_t sub_1A2A7307C()
{
  unint64_t result;

  result = qword_1EE67E5B8;
  if (!qword_1EE67E5B8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B088F0, &_s11AskProgressO29AskResponseReceivedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E5B8);
  }
  return result;
}

unint64_t sub_1A2A730C0()
{
  unint64_t result;

  result = qword_1EE67E5C0;
  if (!qword_1EE67E5C0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B088A0, &_s11AskProgressO31WaitingForAskResponseCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E5C0);
  }
  return result;
}

unint64_t sub_1A2A73104()
{
  unint64_t result;

  result = qword_1EE67E5C8;
  if (!qword_1EE67E5C8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08850, &_s11AskProgressO20NotStartedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E5C8);
  }
  return result;
}

unint64_t sub_1A2A73148()
{
  unint64_t result;

  result = qword_1EE67E618;
  if (!qword_1EE67E618)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08800, &_s8ProgressO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E618);
  }
  return result;
}

unint64_t sub_1A2A7318C()
{
  unint64_t result;

  result = qword_1EE67E620;
  if (!qword_1EE67E620)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B087B0, &_s8ProgressO19CompletedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E620);
  }
  return result;
}

unint64_t sub_1A2A731D0()
{
  unint64_t result;

  result = qword_1EE67E628;
  if (!qword_1EE67E628)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08760, &_s8ProgressO22TransferringCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E628);
  }
  return result;
}

unint64_t sub_1A2A73214()
{
  unint64_t result;

  result = qword_1EE67E630;
  if (!qword_1EE67E630)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08710, &_s8ProgressO35TransferringIndeterminateCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E630);
  }
  return result;
}

unint64_t sub_1A2A73258()
{
  unint64_t result;

  result = qword_1EE67E638;
  if (!qword_1EE67E638)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B086C0, &_s8ProgressO20NotStartedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E638);
  }
  return result;
}

uint64_t sub_1A2A7329C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE67B520);
    v10 = sub_1A2A743E4(a2, a3);
    result = MEMORY[0x1A85895EC](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A2A7331C()
{
  unint64_t result;

  result = qword_1EE67E668;
  if (!qword_1EE67E668)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDrop.AskProgress, &type metadata for SFAirDrop.AskProgress);
    atomic_store(result, (unint64_t *)&qword_1EE67E668);
  }
  return result;
}

unint64_t sub_1A2A73364()
{
  unint64_t result;

  result = qword_1EE67E670;
  if (!qword_1EE67E670)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDrop.Progress, &type metadata for SFAirDrop.Progress);
    atomic_store(result, (unint64_t *)&qword_1EE67E670);
  }
  return result;
}

ValueMetadata *type metadata accessor for SFAirDrop.AskProgress()
{
  return &type metadata for SFAirDrop.AskProgress;
}

uint64_t _s8ProgressOwxx(uint64_t a1)
{
  return sub_1A297DB90(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

uint64_t *_s8ProgressOwcp(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  sub_1A2993E5C(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return a1;
}

uint64_t *_s8ProgressOwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  sub_1A2993E5C(*a2, v4, v5);
  v8 = *a1;
  v9 = a1[1];
  v10 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  sub_1A297DB90(v8, v9, v10);
  return a1;
}

uint64_t *_s8ProgressOwta(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __int128 v7;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *a1;
  v6 = a1[1];
  v5 = a1[2];
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v7;
  a1[4] = v3;
  sub_1A297DB90(v4, v6, v5);
  return a1;
}

uint64_t _s8ProgressOwet(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t _s8ProgressOwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 24) = 0;
      *(_QWORD *)(result + 32) = 0;
      *(_QWORD *)(result + 16) = 2 * -a2;
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1A2A73588(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16) >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A2A735A4(uint64_t result)
{
  *(_QWORD *)(result + 16) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1A2A735B4(uint64_t result, uint64_t a2)
{
  if (a2 < 2)
  {
    *(_QWORD *)(result + 16) = *(_QWORD *)(result + 16) & 1 | (a2 << 62);
  }
  else
  {
    *(_QWORD *)result = (a2 - 2);
    *(_OWORD *)(result + 8) = xmmword_1A2B08990;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)(result + 32) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SFAirDrop.Progress()
{
  return &type metadata for SFAirDrop.Progress;
}

ValueMetadata *_s8ProgressO10CodingKeysOMa()
{
  return &_s8ProgressO10CodingKeysON;
}

ValueMetadata *_s8ProgressO20NotStartedCodingKeysOMa()
{
  return &_s8ProgressO20NotStartedCodingKeysON;
}

ValueMetadata *_s8ProgressO35TransferringIndeterminateCodingKeysOMa()
{
  return &_s8ProgressO35TransferringIndeterminateCodingKeysON;
}

uint64_t _s8ProgressO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A2A73678 + 4 * byte_1A2B07F81[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A2A736AC + 4 * byte_1A2B07F7C[v4]))();
}

uint64_t sub_1A2A736AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A736B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2A736BCLL);
  return result;
}

uint64_t sub_1A2A736C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2A736D0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A2A736D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A736DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8ProgressO22TransferringCodingKeysOMa()
{
  return &_s8ProgressO22TransferringCodingKeysON;
}

uint64_t _s8ProgressO19CompletedCodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A2A73738 + 4 * byte_1A2B07F86[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A2A73758 + 4 * byte_1A2B07F8B[v4]))();
}

_BYTE *sub_1A2A73738(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A2A73758(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A2A73760(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A2A73768(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A2A73770(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A2A73778(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s8ProgressO19CompletedCodingKeysOMa()
{
  return &_s8ProgressO19CompletedCodingKeysON;
}

uint64_t _s11AskProgressOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A2A737E0 + 4 * byte_1A2B07F95[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A2A73814 + 4 * byte_1A2B07F90[v4]))();
}

uint64_t sub_1A2A73814(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A7381C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2A73824);
  return result;
}

uint64_t sub_1A2A73830(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2A73838);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A2A7383C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A73844(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11AskProgressO10CodingKeysOMa()
{
  return &_s11AskProgressO10CodingKeysON;
}

ValueMetadata *_s11AskProgressO20NotStartedCodingKeysOMa()
{
  return &_s11AskProgressO20NotStartedCodingKeysON;
}

ValueMetadata *_s11AskProgressO31WaitingForAskResponseCodingKeysOMa()
{
  return &_s11AskProgressO31WaitingForAskResponseCodingKeysON;
}

ValueMetadata *_s11AskProgressO29AskResponseReceivedCodingKeysOMa()
{
  return &_s11AskProgressO29AskResponseReceivedCodingKeysON;
}

unint64_t sub_1A2A73894()
{
  unint64_t result;

  result = qword_1EE67E678;
  if (!qword_1EE67E678)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B083D0, &_s11AskProgressO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E678);
  }
  return result;
}

unint64_t sub_1A2A738DC()
{
  unint64_t result;

  result = qword_1EE67E680;
  if (!qword_1EE67E680)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08488, &_s8ProgressO19CompletedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E680);
  }
  return result;
}

unint64_t sub_1A2A73924()
{
  unint64_t result;

  result = qword_1EE67E688;
  if (!qword_1EE67E688)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08540, &_s8ProgressO22TransferringCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E688);
  }
  return result;
}

unint64_t sub_1A2A7396C()
{
  unint64_t result;

  result = qword_1EE67E690;
  if (!qword_1EE67E690)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08698, &_s8ProgressO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E690);
  }
  return result;
}

unint64_t sub_1A2A739B4()
{
  unint64_t result;

  result = qword_1EE67E698;
  if (!qword_1EE67E698)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B085B8, &_s8ProgressO20NotStartedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E698);
  }
  return result;
}

unint64_t sub_1A2A739FC()
{
  unint64_t result;

  result = qword_1EE67E6A0;
  if (!qword_1EE67E6A0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B085E0, &_s8ProgressO20NotStartedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E6A0);
  }
  return result;
}

unint64_t sub_1A2A73A44()
{
  unint64_t result;

  result = qword_1EE67E6A8;
  if (!qword_1EE67E6A8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08568, &_s8ProgressO35TransferringIndeterminateCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E6A8);
  }
  return result;
}

unint64_t sub_1A2A73A8C()
{
  unint64_t result;

  result = qword_1EE67E6B0;
  if (!qword_1EE67E6B0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08590, &_s8ProgressO35TransferringIndeterminateCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E6B0);
  }
  return result;
}

unint64_t sub_1A2A73AD4()
{
  unint64_t result;

  result = qword_1EE67E6B8;
  if (!qword_1EE67E6B8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B084B0, &_s8ProgressO22TransferringCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E6B8);
  }
  return result;
}

unint64_t sub_1A2A73B1C()
{
  unint64_t result;

  result = qword_1EE67E6C0;
  if (!qword_1EE67E6C0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B084D8, &_s8ProgressO22TransferringCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E6C0);
  }
  return result;
}

unint64_t sub_1A2A73B64()
{
  unint64_t result;

  result = qword_1EE67E6C8;
  if (!qword_1EE67E6C8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B083F8, &_s8ProgressO19CompletedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E6C8);
  }
  return result;
}

unint64_t sub_1A2A73BAC()
{
  unint64_t result;

  result = qword_1EE67E6D0;
  if (!qword_1EE67E6D0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08420, &_s8ProgressO19CompletedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E6D0);
  }
  return result;
}

unint64_t sub_1A2A73BF4()
{
  unint64_t result;

  result = qword_1EE67E6D8;
  if (!qword_1EE67E6D8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08608, &_s8ProgressO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E6D8);
  }
  return result;
}

unint64_t sub_1A2A73C3C()
{
  unint64_t result;

  result = qword_1EE67E6E0;
  if (!qword_1EE67E6E0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08630, &_s8ProgressO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E6E0);
  }
  return result;
}

unint64_t sub_1A2A73C84()
{
  unint64_t result;

  result = qword_1EE67E6E8;
  if (!qword_1EE67E6E8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B082F0, &_s11AskProgressO20NotStartedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E6E8);
  }
  return result;
}

unint64_t sub_1A2A73CCC()
{
  unint64_t result;

  result = qword_1EE67E6F0;
  if (!qword_1EE67E6F0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08318, &_s11AskProgressO20NotStartedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E6F0);
  }
  return result;
}

unint64_t sub_1A2A73D14()
{
  unint64_t result;

  result = qword_1EE67E6F8;
  if (!qword_1EE67E6F8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B082A0, &_s11AskProgressO31WaitingForAskResponseCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E6F8);
  }
  return result;
}

unint64_t sub_1A2A73D5C()
{
  unint64_t result;

  result = qword_1EE67E700;
  if (!qword_1EE67E700)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B082C8, &_s11AskProgressO31WaitingForAskResponseCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E700);
  }
  return result;
}

unint64_t sub_1A2A73DA4()
{
  unint64_t result;

  result = qword_1EE67E708;
  if (!qword_1EE67E708)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08250, &_s11AskProgressO29AskResponseReceivedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E708);
  }
  return result;
}

unint64_t sub_1A2A73DEC()
{
  unint64_t result;

  result = qword_1EE67E710;
  if (!qword_1EE67E710)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08278, &_s11AskProgressO29AskResponseReceivedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E710);
  }
  return result;
}

unint64_t sub_1A2A73E34()
{
  unint64_t result;

  result = qword_1EE67E718;
  if (!qword_1EE67E718)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08340, &_s11AskProgressO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E718);
  }
  return result;
}

unint64_t sub_1A2A73E7C()
{
  unint64_t result;

  result = qword_1EE67E720;
  if (!qword_1EE67E720)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08368, &_s11AskProgressO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E720);
  }
  return result;
}

uint64_t sub_1A2A73EC0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7472617453746F6ELL && a2 == 0xEA00000000006465;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A2B457D0 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A2B47C70)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A2A74018(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7472617453746F6ELL && a2 == 0xEA00000000006465;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001A2B47C90 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726566736E617274 && a2 == 0xEC000000676E6972 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6574656C706D6F63 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A2A741F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x706F4373656C6966 && a2 == 0xEB00000000646569;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7479426C61746F74 && a2 == 0xEA00000000007365 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x706F437365747962 && a2 == 0xEB00000000646569 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A2B47CB0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A2A743E4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1A2AE2F44();
    result = MEMORY[0x1A85895EC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t AsyncCombineLatest2Sequence.Iterator.next()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1A2A7443C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_1A29B5DB8;
  return sub_1A2A74818(*(_QWORD *)(v0 + 16));
}

void combineLatest<A, B>(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD v21[4];

  v13 = *(_QWORD *)(a4 - 8);
  v14 = MEMORY[0x1E0C80A78](a1);
  v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v14);
  v20 = (char *)v21 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v18 + 16))(v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a2, a4);
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(a7, v20, a3);
  v21[0] = a3;
  v21[1] = a4;
  v21[2] = a5;
  v21[3] = a6;
  type metadata accessor for AsyncCombineLatest2Sequence();
}

uint64_t sub_1A2A7456C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2 + *(int *)(a1 + 52), v3, v1);
}

void AsyncCombineLatest2Sequence.makeAsyncIterator()()
{
  uint64_t v0;

  v0 = sub_1A2AE39F4();
  MEMORY[0x1E0C80A78](v0);
  type metadata accessor for CombineLatestStorage();
}

void sub_1A2A74624()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 56))(v1, 1, 1, v0);
  sub_1A2A0B07C();
}

void sub_1A2A74660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  sub_1A2A74728();
}

void sub_1A2A7469C(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for AsyncCombineLatest2Sequence();
}

uint64_t sub_1A2A746F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 52), v2, v1);
}

void sub_1A2A74728()
{
  type metadata accessor for AsyncCombineLatest2Sequence.Iterator.InternalClass();
}

uint64_t sub_1A2A7475C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v0;
  *v1 = result;
  return result;
}

uint64_t sub_1A2A74780(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

void sub_1A2A747B0()
{
  sub_1A2A054C0();
}

uint64_t sub_1A2A747C8()
{
  uint64_t v0;

  swift_release();
  return v0;
}

void sub_1A2A747E0()
{
  sub_1A2A054C0();
}

uint64_t sub_1A2A747F8()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1A2A74818(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t TupleTypeMetadata3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = swift_getAssociatedTypeWitness();
  v2[5] = swift_getAssociatedTypeWitness();
  v2[6] = sub_1A2AE39F4();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v2[7] = TupleTypeMetadata3;
  v4 = sub_1A2AE39F4();
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = *(_QWORD *)(TupleTypeMetadata3 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A2A74944()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v1;
  *v1 = v0;
  v1[1] = sub_1A2A74998;
  return sub_1A2A0567C(*(_QWORD *)(v0 + 80));
}

uint64_t sub_1A2A74998()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A2A749FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(void);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 88) + 48))(v1, 1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 16);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(v1, *(_QWORD *)(v0 + 64));
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(v3, 1, 1, TupleTypeMetadata2);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 112);
    v33 = *(_QWORD *)(v0 + 96);
    v7 = *(_QWORD *)(v0 + 40);
    v8 = *(_QWORD *)(v0 + 32);
    v9 = *(_QWORD *)(v0 + 16);
    v10 = *(int *)(v2 + 48);
    v11 = v6 + v10;
    v12 = *(int *)(v2 + 64);
    v22 = v6 + v12;
    v13 = v1 + v10;
    v30 = v1 + v12;
    v31 = *(_QWORD *)(v0 + 48);
    v35 = *(_QWORD *)(v8 - 8);
    v25 = *(void (**)(void))(v35 + 32);
    ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v6, v1, v8);
    v14 = v7;
    v32 = *(_QWORD *)(v7 - 8);
    v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32);
    v15 = v11;
    v29(v11, v13, v14);
    v34 = *(_QWORD *)(v31 - 8);
    v28 = *(void (**)(uint64_t, uint64_t))(v34 + 32);
    v28(v22, v30);
    v23 = v14;
    v26 = swift_getTupleTypeMetadata2();
    v24 = v9 + *(int *)(v26 + 48);
    v16 = v5 + *(int *)(v2 + 48);
    v27 = v5 + *(int *)(v2 + 64);
    (*(void (**)(void))(v35 + 16))();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v16, v15, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v27, v22, v31);
    v17 = v9;
    ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v9, v5, v8);
    v18 = v33 + *(int *)(v2 + 48);
    v19 = v33 + *(int *)(v2 + 64);
    v25();
    v29(v18, v15, v23);
    ((void (*)(uint64_t, uint64_t, uint64_t))v28)(v19, v22, v31);
    v29(v24, v18, v23);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v17, 0, 1);
    v20 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    v20(v19, v31);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v8);
    v20(v27, v31);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v16, v23);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A2A74CF4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A2A74D50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1A2971EBC;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch();
}

uint64_t sub_1A2A74DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  _QWORD *v6;

  v4[2] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[3] = AssociatedTypeWitness;
  v4[4] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[5] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v4[6] = v6;
  *v6 = v4;
  v6[1] = sub_1A29DB594;
  return sub_1A2AE36D0();
}

void sub_1A2A74E88()
{
  AsyncCombineLatest2Sequence.makeAsyncIterator()();
}

uint64_t sub_1A2A74E9C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

uint64_t sub_1A2A74EB8()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return swift_getAssociatedConformanceWitness();
}

void sub_1A2A74F48()
{
  JUMPOUT(0x1A85895ECLL);
}

uint64_t sub_1A2A74F58()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1A2A74FE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v7 + 80));
  if (v10 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || (v9 & (unint64_t)~v8) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, ((unint64_t)a2 + v9) & v14, v5);
  }
  return v4;
}

uint64_t sub_1A2A750B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_1A2A7510C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1A2A75178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1A2A751E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1A2A75250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1A2A752BC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_23;
  v12 = (v10 & ~v9) + *(_QWORD *)(v6 + 64);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v15 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 < 2)
    {
LABEL_23:
      if (v8)
      {
        if (v5 >= v7)
          return (*(uint64_t (**)(void))(v4 + 48))();
        else
          return (*(uint64_t (**)(uint64_t))(v6 + 48))((v10 + a1) & ~v9);
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_23;
LABEL_14:
  v16 = (v14 - 1) << v13;
  if (v12 > 3)
    v16 = 0;
  if (!(_DWORD)v12)
    return v8 + v16 + 1;
  if (v12 <= 3)
    v17 = (v10 & ~(_DWORD)v9) + *(_DWORD *)(v6 + 64);
  else
    v17 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A2A75398 + 4 * byte_1A2B089A0[v17 - 1]))();
}

void sub_1A2A75414(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0u;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void type metadata accessor for AsyncCombineLatest2Sequence()
{
  JUMPOUT(0x1A8589544);
}

void type metadata accessor for AsyncCombineLatest2Sequence.Iterator()
{
  JUMPOUT(0x1A8589544);
}

uint64_t sub_1A2A7562C()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for AsyncCombineLatest2Sequence.Iterator.InternalClass()
{
  JUMPOUT(0x1A8589544);
}

uint64_t static SFCodableCGImage.== infix(_:_:)(void **a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  char v6;

  v2 = *a1;
  v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      type metadata accessor for CGImage(0);
      sub_1A2A75700();
      v4 = v3;
      v5 = v2;
      v6 = sub_1A2AE316C();

      if ((v6 & 1) != 0)
        return 1;
    }
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

unint64_t sub_1A2A75700()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE67CA50;
  if (!qword_1EE67CA50)
  {
    type metadata accessor for CGImage(255);
    result = MEMORY[0x1A85895EC](&unk_1A2AFA298, v1);
    atomic_store(result, (unint64_t *)&qword_1EE67CA50);
  }
  return result;
}

uint64_t sub_1A2A75748()
{
  sub_1A2AE400C();
  sub_1A2AE34C0();
  return sub_1A2AE4030();
}

uint64_t sub_1A2A757A0()
{
  return sub_1A2AE34C0();
}

uint64_t sub_1A2A757C0()
{
  sub_1A2AE400C();
  sub_1A2AE34C0();
  return sub_1A2AE4030();
}

uint64_t sub_1A2A75814@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A2AE3CD0();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1A2A75864(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "wrappedValue");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_1A2A75888()
{
  return 0x5664657070617277;
}

uint64_t sub_1A2A758A8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A2AE3CD0();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1A2A758FC()
{
  sub_1A2A75C18();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A75924()
{
  sub_1A2A75C18();
  return sub_1A2AE4108();
}

id SFCodableCGImage.wrappedValue.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void SFCodableCGImage.wrappedValue.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*SFCodableCGImage.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t SFCodableCGImage.init(wrappedValue:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t SFCodableCGImage.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  void *TransferCGImageWithData;
  id v13;
  uint64_t v14;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E748);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2A75C18();
  sub_1A2AE40C0();
  if (!v2)
  {
    sub_1A2973680();
    sub_1A2AE3D30();
    v9 = v17;
    if (v17 >> 60 == 15)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      *a2 = 0;
    }
    else
    {
      v18 = a2;
      v10 = v16;
      sub_1A2973524(v16, v17);
      v11 = (void *)sub_1A2AE2F74();
      TransferCGImageWithData = (void *)createTransferCGImageWithData();

      if (TransferCGImageWithData)
      {
        v13 = TransferCGImageWithData;
        sub_1A29B98D8(v10, v9);
        sub_1A29B98D8(v10, v9);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

        *v18 = TransferCGImageWithData;
      }
      else
      {
        sub_1A297AFB8();
        swift_allocError();
        *(_QWORD *)v14 = 0xD000000000000011;
        *(_QWORD *)(v14 + 8) = 0x80000001A2B47CD0;
        *(_QWORD *)(v14 + 16) = 0xD00000000000004ELL;
        *(_QWORD *)(v14 + 24) = 0x80000001A2B47CF0;
        *(_QWORD *)(v14 + 32) = 25;
        *(_OWORD *)(v14 + 40) = 0u;
        *(_OWORD *)(v14 + 56) = 0u;
        *(_QWORD *)(v14 + 72) = 0;
        *(_QWORD *)(v14 + 80) = 0x2000000000000000;
        *(_QWORD *)(v14 + 88) = 0;
        *(_QWORD *)(v14 + 96) = 0;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        sub_1A29B98D8(v10, v9);
        sub_1A29B98D8(v10, v9);
      }
    }
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

unint64_t sub_1A2A75C18()
{
  unint64_t result;

  result = qword_1EE67E750;
  if (!qword_1EE67E750)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08C8C, &type metadata for SFCodableCGImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE67E750);
  }
  return result;
}

void SFCodableCGImage.encode(to:)(_QWORD *a1)
{
  void **v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  __CFData *TransferDataWithCGImage;
  __CFData *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E758);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2A75C18();
  sub_1A2AE40E4();
  if (!v7)
    goto LABEL_4;
  v8 = v7;
  TransferDataWithCGImage = createTransferDataWithCGImage((uint64_t)v8);
  if (TransferDataWithCGImage)
  {
    v10 = TransferDataWithCGImage;
    v11 = sub_1A2AE2F80();
    v13 = v12;

    v15[0] = v11;
    v15[1] = v13;
    sub_1A29735F8();
    sub_1A2AE3E2C();

    sub_1A29736C4(v11, v13);
LABEL_4:
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return;
  }
  sub_1A297AFB8();
  swift_allocError();
  *(_QWORD *)v14 = 0xD000000000000011;
  *(_QWORD *)(v14 + 8) = 0x80000001A2B47D40;
  *(_QWORD *)(v14 + 16) = 0xD00000000000004ELL;
  *(_QWORD *)(v14 + 24) = 0x80000001A2B47CF0;
  *(_QWORD *)(v14 + 32) = 35;
  *(_OWORD *)(v14 + 40) = 0u;
  *(_OWORD *)(v14 + 56) = 0u;
  *(_QWORD *)(v14 + 72) = 0;
  *(_QWORD *)(v14 + 80) = 0x2000000000000000;
  *(_QWORD *)(v14 + 88) = 0;
  *(_QWORD *)(v14 + 96) = 0;
  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);

}

uint64_t sub_1A2A75E38@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return SFCodableCGImage.init(from:)(a1, a2);
}

void sub_1A2A75E4C(_QWORD *a1)
{
  SFCodableCGImage.encode(to:)(a1);
}

uint64_t sub_1A2A75E60(void **a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  char v6;

  v2 = *a1;
  v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      type metadata accessor for CGImage(0);
      sub_1A2A75700();
      v4 = v3;
      v5 = v2;
      v6 = sub_1A2AE316C();

      if ((v6 & 1) != 0)
        return 1;
    }
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

void **initializeBufferWithCopyOfBuffer for SFCodableCGImage(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for SFCodableCGImage(id *a1)
{

}

void **assignWithCopy for SFCodableCGImage(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

void **assignWithTake for SFCodableCGImage(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for SFCodableCGImage()
{
  return &type metadata for SFCodableCGImage;
}

uint64_t storeEnumTagSinglePayload for SFCodableCGImage.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A2A75FCC + 4 * byte_1A2B08AF0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A2A75FEC + 4 * byte_1A2B08AF5[v4]))();
}

_BYTE *sub_1A2A75FCC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A2A75FEC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A2A75FF4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A2A75FFC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A2A76004(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A2A7600C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SFCodableCGImage.CodingKeys()
{
  return &type metadata for SFCodableCGImage.CodingKeys;
}

unint64_t sub_1A2A7602C()
{
  unint64_t result;

  result = qword_1EE67E760;
  if (!qword_1EE67E760)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08C64, &type metadata for SFCodableCGImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE67E760);
  }
  return result;
}

unint64_t sub_1A2A76074()
{
  unint64_t result;

  result = qword_1EE67E768;
  if (!qword_1EE67E768)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08B9C, &type metadata for SFCodableCGImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE67E768);
  }
  return result;
}

unint64_t sub_1A2A760BC()
{
  unint64_t result;

  result = qword_1EE67E770;
  if (!qword_1EE67E770)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08BC4, &type metadata for SFCodableCGImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE67E770);
  }
  return result;
}

ValueMetadata *type metadata accessor for SFAirDropSend()
{
  return &type metadata for SFAirDropSend;
}

uint64_t notify_async_sequence(name:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67AFC0);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *v6 = 1;
  (*(void (**)(_QWORD *, _QWORD))(v7 + 104))(v6, *MEMORY[0x1E0DF07A8]);
  v10 = a1;
  v11 = a2;
  return sub_1A2AE3754();
}

uint64_t sub_1A2A761CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A2AE31D8();
  __swift_allocate_value_buffer(v0, qword_1EE67E778);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE67E778);
  if (qword_1ECEFB8A8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ECEFC700);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1A2A7625C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];

  v0 = sub_1A2AE397C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A2AE3970();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1A2AE3334();
  MEMORY[0x1E0C80A78](v5);
  sub_1A29C0D60();
  sub_1A2AE3328();
  v7[1] = MEMORY[0x1E0DEE9D8];
  sub_1A2A770C0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6763A0);
  sub_1A2A77108();
  sub_1A2AE3AC0();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D8], v0);
  result = sub_1A2AE39A0();
  qword_1EE67E790 = result;
  return result;
}

uint64_t sub_1A2A763EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v4[6];

  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  return sub_1A296C2B0((uint64_t (*)(_QWORD *))sub_1A2A76F0C, (uint64_t)v4, a2, a3);
}

uint64_t sub_1A2A76430(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[6];

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5[2] = a1;
  v5[3] = v2;
  v5[4] = v3;
  return sub_1A296C2B0((uint64_t (*)(_QWORD *))sub_1A2A76F0C, (uint64_t)v5, v2, v3);
}

uint64_t sub_1A2A76470(const char *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint32_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  int v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD v32[3];
  uint64_t v33;
  int out_token;
  uint64_t aBlock[7];

  aBlock[6] = *MEMORY[0x1E0C80C00];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E798);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  out_token = -1;
  if (qword_1EE67AA88 != -1)
    swift_once();
  v12 = qword_1EE67E790;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v32[2] = a2;
  v13((char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v8);
  v14 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v14, v11, v8);
  aBlock[4] = (uint64_t)sub_1A2A76F8C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A29C0BCC;
  aBlock[3] = (uint64_t)&block_descriptor_7;
  v16 = _Block_copy(aBlock);
  swift_release();
  v17 = notify_register_dispatch(a1, &out_token, v12, v16);
  _Block_release(v16);
  if (v17 || out_token == -1)
  {
    if (qword_1EE67AA80 != -1)
      swift_once();
    v23 = sub_1A2AE31D8();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE67E778);
    swift_bridgeObjectRetain_n();
    v24 = sub_1A2AE31C0();
    v25 = sub_1A2AE394C();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      v27 = swift_slowAlloc();
      aBlock[0] = v27;
      *(_DWORD *)v26 = 136315394;
      swift_bridgeObjectRetain();
      v33 = sub_1A296DA00(a3, a4, aBlock);
      sub_1A2AE3A60();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 1024;
      LODWORD(v33) = v17;
      sub_1A2AE3A60();
      _os_log_impl(&dword_1A2830000, v24, v25, "Failed to register notifyd notification {name: %s, status: %u}", (uint8_t *)v26, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1A85896E8](v27, -1, -1);
      MEMORY[0x1A85896E8](v26, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return sub_1A2AE3724();
  }
  else
  {
    if (qword_1EE67AA80 != -1)
      swift_once();
    v18 = sub_1A2AE31D8();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EE67E778);
    swift_bridgeObjectRetain_n();
    v19 = sub_1A2AE31C0();
    v20 = sub_1A2AE3964();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      aBlock[0] = v22;
      *(_DWORD *)v21 = 136315138;
      swift_bridgeObjectRetain();
      v33 = sub_1A296DA00(a3, a4, aBlock);
      sub_1A2AE3A60();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A2830000, v19, v20, "Registered for notifyd notification {name: %s}", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85896E8](v22, -1, -1);
      MEMORY[0x1A85896E8](v21, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v29 = out_token;
    type metadata accessor for State();
    v30 = swift_allocObject();
    swift_defaultActor_initialize();
    *(_DWORD *)(v30 + 112) = v29;
    *(_BYTE *)(v30 + 116) = 0;
    v31 = (_QWORD *)swift_allocObject();
    v31[2] = v30;
    v31[3] = a3;
    v31[4] = a4;
    swift_bridgeObjectRetain();
    return sub_1A2AE3700();
  }
}

uint64_t sub_1A2A76974(int a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _DWORD v7[4];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E7B0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[3] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E798);
  sub_1A2AE3718();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1A2A76A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEFB6D0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEFCFB0);
  v10 = swift_allocObject();
  v11 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(v10 + 16) = xmmword_1A2AFED80;
  *(_QWORD *)(v10 + 56) = v11;
  *(_QWORD *)(v10 + 32) = 0x696D7265546E6FLL;
  *(_QWORD *)(v10 + 40) = 0xE700000000000000;
  sub_1A2AE4000();
  swift_bridgeObjectRelease();
  v12 = sub_1A2AE36E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 1, 1, v12);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = a2;
  v13[5] = a3;
  v13[6] = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A2974504((uint64_t)v9, (uint64_t)&unk_1EE67E7A8, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_1A2A76B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_1A2A76B7C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  *(_DWORD *)(v0 + 48) = *(_DWORD *)(v1 + 112);
  *(_BYTE *)(v0 + 52) = *(_BYTE *)(v1 + 116);
  return swift_task_switch();
}

uint64_t sub_1A2A76BA4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v18;

  if ((*(_BYTE *)(v0 + 52) & 1) == 0)
  {
    if (*(_DWORD *)(v0 + 48) == -1)
    {
      if (qword_1EE67AA80 != -1)
        swift_once();
      v9 = sub_1A2AE31D8();
      __swift_project_value_buffer(v9, (uint64_t)qword_1EE67E778);
      swift_bridgeObjectRetain_n();
      v10 = sub_1A2AE31C0();
      v11 = sub_1A2AE3958();
      v12 = os_log_type_enabled(v10, v11);
      v13 = *(_QWORD *)(v0 + 40);
      if (v12)
      {
        v14 = *(_QWORD *)(v0 + 32);
        v15 = (uint8_t *)swift_slowAlloc();
        v16 = swift_slowAlloc();
        v18 = v16;
        *(_DWORD *)v15 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 16) = sub_1A296DA00(v14, v13, &v18);
        sub_1A2AE3A60();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A2830000, v10, v11, "Unexpected NOTIFY_TOKEN_INVALID for notifyd registartion {name: %s}", v15, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85896E8](v16, -1, -1);
        MEMORY[0x1A85896E8](v15, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

    }
    else
    {
      if (qword_1EE67AA80 != -1)
        swift_once();
      v1 = sub_1A2AE31D8();
      __swift_project_value_buffer(v1, (uint64_t)qword_1EE67E778);
      swift_bridgeObjectRetain_n();
      v2 = sub_1A2AE31C0();
      v3 = sub_1A2AE3964();
      v4 = os_log_type_enabled(v2, v3);
      v5 = *(_QWORD *)(v0 + 40);
      if (v4)
      {
        v6 = *(_QWORD *)(v0 + 32);
        v7 = (uint8_t *)swift_slowAlloc();
        v8 = swift_slowAlloc();
        v18 = v8;
        *(_DWORD *)v7 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 16) = sub_1A296DA00(v6, v5, &v18);
        sub_1A2AE3A60();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A2830000, v2, v3, "Cancelled notifyd registration {name: %s}", v7, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85896E8](v8, -1, -1);
        MEMORY[0x1A85896E8](v7, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      notify_cancel(*(_DWORD *)(v0 + 48));
    }
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A2A76ED0()
{
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for State()
{
  return objc_opt_self();
}

uint64_t sub_1A2A76F0C(const char *a1)
{
  uint64_t v1;

  return sub_1A2A76470(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1A2A76F28()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E798);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1A2A76F8C(int a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E798);
  return sub_1A2A76974(a1);
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_1A2A76FE4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A2A77010(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A2A76A18(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1A2A7701C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A2A77050()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[4];
  v3 = v0[5];
  v4 = v0[6];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1A2971EBC;
  v5[4] = v3;
  v5[5] = v4;
  v5[3] = v2;
  return swift_task_switch();
}

unint64_t sub_1A2A770C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE6763B8;
  if (!qword_1EE6763B8)
  {
    v1 = sub_1A2AE3970();
    result = MEMORY[0x1A85895EC](MEMORY[0x1E0DEF828], v1);
    atomic_store(result, (unint64_t *)&qword_1EE6763B8);
  }
  return result;
}

unint64_t sub_1A2A77108()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE6763A8;
  if (!qword_1EE6763A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE6763A0);
    result = MEMORY[0x1A85895EC](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EE6763A8);
  }
  return result;
}

uint64_t SFAirDrop.Transfers.userInteractionOwner.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A2A77160(v1, a1);
}

uint64_t sub_1A2A77160(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE674730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SFAirDrop.Transfers.receiveTransfers.getter()
{
  type metadata accessor for SFAirDrop.Transfers();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SFAirDrop.Transfers()
{
  uint64_t result;

  result = qword_1EE6750F8;
  if (!qword_1EE6750F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SFAirDrop.Transfers.sendTransfers.getter()
{
  type metadata accessor for SFAirDrop.Transfers();
  return swift_bridgeObjectRetain();
}

uint64_t SFAirDrop.Transfers.init(receiveTransfers:sendTransfers:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t result;

  v6 = type metadata accessor for SFAirDropClient.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a3, 1, 1, v6);
  result = type metadata accessor for SFAirDrop.Transfers();
  *(_QWORD *)(a3 + *(int *)(result + 20)) = a1;
  *(_QWORD *)(a3 + *(int *)(result + 24)) = a2;
  return result;
}

void static SFAirDrop.Transfers.stream<A, B>(receiveTransferSeq:sendTransfersSeq:)()
{
  type metadata accessor for AsyncCombineLatest2Sequence();
}

void sub_1A2A772D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  MEMORY[0x1E0C80A78](a1);
  v14 = (char *)&a9 - v13;
  type metadata accessor for SFAirDrop.Transfers();
  MEMORY[0x1A85895EC](&protocol conformance descriptor for AsyncCombineLatest2Sequence<A, B>, a1);
  v15 = sub_1A2AE3C04();
  v16 = MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  combineLatest<A, B>(_:_:)(*(_QWORD *)(v11 - 136), *(_QWORD *)(v11 - 128), v10, v9, *(_QWORD *)(v11 - 152), *(_QWORD *)(v11 - 144), (uint64_t)v14);
}

uint64_t sub_1A2A77398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1A2AE37D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v3, v0, v4);
  v6 = MEMORY[0x1A85895EC](MEMORY[0x1E0DF0C70], v4);
  SFNoThrowAsyncSequence.init<A>(_:)(v3, v2, v4, v6, *(uint64_t (***)())(v5 - 120));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v4);
}

uint64_t sub_1A2A77424(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_OWORD *)(v2 + 24) = *a2;
  return swift_task_switch();
}

uint64_t sub_1A2A77444()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v7)(void);

  v1 = v0[3];
  v2 = v0[4];
  v3 = v0[2];
  v4 = type metadata accessor for SFAirDropClient.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = type metadata accessor for SFAirDrop.Transfers();
  *(_QWORD *)(v3 + *(int *)(v5 + 20)) = v1;
  *(_QWORD *)(v3 + *(int *)(v5 + 24)) = v2;
  v7 = (uint64_t (*)(void))v0[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v7();
}

uint64_t SFAirDrop.Transfers.lastReceiveTransfer()@<X0>(unint64_t a1@<X8>)
{
  uint64_t v2;

  type metadata accessor for SFAirDrop.Transfers();
  v2 = swift_bridgeObjectRetain();
  sub_1A2A77524(v2, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A2A77524@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  v5 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v38 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v38 - v15;
  v17 = *(_QWORD *)(a1 + 64);
  v43 = a1 + 64;
  v18 = *(_BYTE *)(a1 + 32);
  v19 = 1 << v18;
  v20 = -1;
  if (1 << v18 < 64)
    v20 = ~(-1 << (1 << v18));
  v21 = v20 & v17;
  if (v21)
  {
    v40 = a2;
    v41 = v2;
    v22 = 0;
    v23 = __clz(__rbit64(v21));
    a2 = (v21 - 1) & v21;
    v44 = (unint64_t)(v19 + 63) >> 6;
    while (1)
    {
      v24 = *(_QWORD *)(a1 + 56);
      v39 = v13;
      v25 = *(_QWORD *)(v13 + 72);
      v42 = v14;
      sub_1A2990388(v24 + v25 * v23, v14, type metadata accessor for SFAirDropReceive.Transfer);
      sub_1A297EB48(v42, (uint64_t)v16, type metadata accessor for SFAirDropReceive.Transfer);
      swift_bridgeObjectRetain();
      while (a2)
      {
        while (1)
        {
          v27 = __clz(__rbit64(a2));
          a2 &= a2 - 1;
          v28 = v27 | (v22 << 6);
LABEL_25:
          sub_1A2990388(*(_QWORD *)(a1 + 56) + v28 * v25, (uint64_t)v8, type metadata accessor for SFAirDropReceive.Transfer);
          sub_1A297EB48((uint64_t)v8, (uint64_t)v11, type metadata accessor for SFAirDropReceive.Transfer);
          if ((sub_1A2AE2FEC() & 1) != 0)
            break;
          sub_1A297DA3C((uint64_t)v11, type metadata accessor for SFAirDropReceive.Transfer);
          if (!a2)
            goto LABEL_9;
        }
        sub_1A297DA3C((uint64_t)v16, type metadata accessor for SFAirDropReceive.Transfer);
        sub_1A297EB48((uint64_t)v11, (uint64_t)v16, type metadata accessor for SFAirDropReceive.Transfer);
      }
LABEL_9:
      v29 = v22 + 1;
      if (__OFADD__(v22, 1))
      {
        __break(1u);
LABEL_39:
        if (v26 < 9)
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a2, 1, 1, v5);
        v34 = *(_QWORD *)(a1 + 96);
        if (v34)
        {
          v22 = 4;
          goto LABEL_32;
        }
        v34 = *(_QWORD *)(a1 + 104);
        if (v34)
        {
          v22 = 5;
          goto LABEL_32;
        }
      }
      else
      {
        if (v29 >= v44)
          goto LABEL_28;
        v30 = *(_QWORD *)(v43 + 8 * v29);
        ++v22;
        if (v30)
          goto LABEL_24;
        v22 = v29 + 1;
        if (v29 + 1 >= v44)
          goto LABEL_28;
        v30 = *(_QWORD *)(v43 + 8 * v22);
        if (v30)
          goto LABEL_24;
        v22 = v29 + 2;
        if (v29 + 2 >= v44)
          goto LABEL_28;
        v30 = *(_QWORD *)(v43 + 8 * v22);
        if (v30)
          goto LABEL_24;
        v22 = v29 + 3;
        if (v29 + 3 >= v44)
          goto LABEL_28;
        v30 = *(_QWORD *)(v43 + 8 * v22);
        if (v30)
          goto LABEL_24;
        v31 = v29 + 4;
        if (v31 >= v44)
        {
LABEL_28:
          swift_release();
          v32 = v40;
          sub_1A297EB48((uint64_t)v16, v40, type metadata accessor for SFAirDropReceive.Transfer);
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56))(v32, 0, 1, v5);
        }
        v30 = *(_QWORD *)(v43 + 8 * v31);
        if (v30)
        {
          v22 = v31;
LABEL_24:
          a2 = (v30 - 1) & v30;
          v28 = __clz(__rbit64(v30)) + (v22 << 6);
          goto LABEL_25;
        }
        while (1)
        {
          v22 = v31 + 1;
          if (__OFADD__(v31, 1))
            break;
          if (v22 >= v44)
            goto LABEL_28;
          v30 = *(_QWORD *)(v43 + 8 * v22);
          ++v31;
          if (v30)
            goto LABEL_24;
        }
        __break(1u);
      }
      v35 = 0;
      v36 = 6;
      if (v44 > 6)
        v36 = v44;
      v37 = v36 - 6;
      do
      {
        if (v37 == v35)
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a2, 1, 1, v5);
        v34 = *(_QWORD *)(a1 + 112 + 8 * v35++);
      }
      while (!v34);
      v22 = v35 + 5;
LABEL_32:
      a2 = (v34 - 1) & v34;
      v23 = __clz(__rbit64(v34)) + (v22 << 6);
    }
  }
  v26 = v18 & 0x3F;
  if (v26 > 6)
  {
    v44 = (unint64_t)(v19 + 63) >> 6;
    v34 = *(_QWORD *)(a1 + 72);
    if (v34)
    {
      v40 = a2;
      v41 = v2;
      v22 = 1;
      goto LABEL_32;
    }
    if (v26 >= 8)
    {
      v34 = *(_QWORD *)(a1 + 80);
      v40 = a2;
      v41 = v2;
      if (v34)
      {
        v22 = 2;
      }
      else
      {
        v34 = *(_QWORD *)(a1 + 88);
        if (!v34)
          goto LABEL_39;
        v22 = 3;
      }
      goto LABEL_32;
    }
  }
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a2, 1, 1, v5);
}

uint64_t sub_1A2A77924@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  v5 = type metadata accessor for SFAirDropSend.Transfer(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v38 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v38 - v15;
  v17 = *(_QWORD *)(a1 + 64);
  v43 = a1 + 64;
  v18 = *(_BYTE *)(a1 + 32);
  v19 = 1 << v18;
  v20 = -1;
  if (1 << v18 < 64)
    v20 = ~(-1 << (1 << v18));
  v21 = v20 & v17;
  if (v21)
  {
    v40 = a2;
    v41 = v2;
    v22 = 0;
    v23 = __clz(__rbit64(v21));
    a2 = (v21 - 1) & v21;
    v44 = (unint64_t)(v19 + 63) >> 6;
    while (1)
    {
      v24 = *(_QWORD *)(a1 + 56);
      v39 = v13;
      v25 = *(_QWORD *)(v13 + 72);
      v42 = v14;
      sub_1A2990388(v24 + v25 * v23, v14, type metadata accessor for SFAirDropSend.Transfer);
      sub_1A297EB48(v42, (uint64_t)v16, type metadata accessor for SFAirDropSend.Transfer);
      swift_bridgeObjectRetain();
      while (a2)
      {
        while (1)
        {
          v27 = __clz(__rbit64(a2));
          a2 &= a2 - 1;
          v28 = v27 | (v22 << 6);
LABEL_25:
          sub_1A2990388(*(_QWORD *)(a1 + 56) + v28 * v25, (uint64_t)v8, type metadata accessor for SFAirDropSend.Transfer);
          sub_1A297EB48((uint64_t)v8, (uint64_t)v11, type metadata accessor for SFAirDropSend.Transfer);
          if ((sub_1A2AE2FEC() & 1) != 0)
            break;
          sub_1A297DA3C((uint64_t)v11, type metadata accessor for SFAirDropSend.Transfer);
          if (!a2)
            goto LABEL_9;
        }
        sub_1A297DA3C((uint64_t)v16, type metadata accessor for SFAirDropSend.Transfer);
        sub_1A297EB48((uint64_t)v11, (uint64_t)v16, type metadata accessor for SFAirDropSend.Transfer);
      }
LABEL_9:
      v29 = v22 + 1;
      if (__OFADD__(v22, 1))
      {
        __break(1u);
LABEL_39:
        if (v26 < 9)
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a2, 1, 1, v5);
        v34 = *(_QWORD *)(a1 + 96);
        if (v34)
        {
          v22 = 4;
          goto LABEL_32;
        }
        v34 = *(_QWORD *)(a1 + 104);
        if (v34)
        {
          v22 = 5;
          goto LABEL_32;
        }
      }
      else
      {
        if (v29 >= v44)
          goto LABEL_28;
        v30 = *(_QWORD *)(v43 + 8 * v29);
        ++v22;
        if (v30)
          goto LABEL_24;
        v22 = v29 + 1;
        if (v29 + 1 >= v44)
          goto LABEL_28;
        v30 = *(_QWORD *)(v43 + 8 * v22);
        if (v30)
          goto LABEL_24;
        v22 = v29 + 2;
        if (v29 + 2 >= v44)
          goto LABEL_28;
        v30 = *(_QWORD *)(v43 + 8 * v22);
        if (v30)
          goto LABEL_24;
        v22 = v29 + 3;
        if (v29 + 3 >= v44)
          goto LABEL_28;
        v30 = *(_QWORD *)(v43 + 8 * v22);
        if (v30)
          goto LABEL_24;
        v31 = v29 + 4;
        if (v31 >= v44)
        {
LABEL_28:
          swift_release();
          v32 = v40;
          sub_1A297EB48((uint64_t)v16, v40, type metadata accessor for SFAirDropSend.Transfer);
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56))(v32, 0, 1, v5);
        }
        v30 = *(_QWORD *)(v43 + 8 * v31);
        if (v30)
        {
          v22 = v31;
LABEL_24:
          a2 = (v30 - 1) & v30;
          v28 = __clz(__rbit64(v30)) + (v22 << 6);
          goto LABEL_25;
        }
        while (1)
        {
          v22 = v31 + 1;
          if (__OFADD__(v31, 1))
            break;
          if (v22 >= v44)
            goto LABEL_28;
          v30 = *(_QWORD *)(v43 + 8 * v22);
          ++v31;
          if (v30)
            goto LABEL_24;
        }
        __break(1u);
      }
      v35 = 0;
      v36 = 6;
      if (v44 > 6)
        v36 = v44;
      v37 = v36 - 6;
      do
      {
        if (v37 == v35)
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a2, 1, 1, v5);
        v34 = *(_QWORD *)(a1 + 112 + 8 * v35++);
      }
      while (!v34);
      v22 = v35 + 5;
LABEL_32:
      a2 = (v34 - 1) & v34;
      v23 = __clz(__rbit64(v34)) + (v22 << 6);
    }
  }
  v26 = v18 & 0x3F;
  if (v26 > 6)
  {
    v44 = (unint64_t)(v19 + 63) >> 6;
    v34 = *(_QWORD *)(a1 + 72);
    if (v34)
    {
      v40 = a2;
      v41 = v2;
      v22 = 1;
      goto LABEL_32;
    }
    if (v26 >= 8)
    {
      v34 = *(_QWORD *)(a1 + 80);
      v40 = a2;
      v41 = v2;
      if (v34)
      {
        v22 = 2;
      }
      else
      {
        v34 = *(_QWORD *)(a1 + 88);
        if (!v34)
          goto LABEL_39;
        v22 = 3;
      }
      goto LABEL_32;
    }
  }
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a2, 1, 1, v5);
}

uint64_t SFAirDrop.Transfers.lastSendTransfer()@<X0>(unint64_t a1@<X8>)
{
  uint64_t v2;

  type metadata accessor for SFAirDrop.Transfers();
  v2 = swift_bridgeObjectRetain();
  sub_1A2A77924(v2, a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A2A77D78()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000010;
  if (*v0 != 1)
    v1 = 0x6E617254646E6573;
  if (*v0)
    return v1;
  else
    return 0xD000000000000014;
}

uint64_t sub_1A2A77DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2A79234(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2A77E08()
{
  sub_1A2A78020();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A77E30()
{
  sub_1A2A78020();
  return sub_1A2AE4108();
}

uint64_t SFAirDrop.Transfers.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E7C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2A78020();
  sub_1A2AE40E4();
  LOBYTE(v12) = 0;
  type metadata accessor for SFAirDropClient.Identifier();
  sub_1A296E8A4(&qword_1EE67B718, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDropClient.Identifier, (uint64_t)&protocol conformance descriptor for SFAirDropClient.Identifier);
  sub_1A2AE3DE4();
  if (!v2)
  {
    v9 = type metadata accessor for SFAirDrop.Transfers();
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 20));
    HIBYTE(v11) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E7D0);
    sub_1A2A78064();
    sub_1A2AE3E2C();
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 24));
    HIBYTE(v11) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E7E8);
    sub_1A2A78100();
    sub_1A2AE3E2C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A2A78020()
{
  unint64_t result;

  result = qword_1EE67E7C8;
  if (!qword_1EE67E7C8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08E7C, &_s9TransfersV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E7C8);
  }
  return result;
}

unint64_t sub_1A2A78064()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE67E7D8;
  if (!qword_1EE67E7D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE67E7D0);
    v2[0] = sub_1A296E8A4(&qword_1EE67C938, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    v2[1] = sub_1A296E8A4(&qword_1EE67E7E0, type metadata accessor for SFAirDropReceive.Transfer, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Transfer);
    result = MEMORY[0x1A85895EC](MEMORY[0x1E0DEA0B8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE67E7D8);
  }
  return result;
}

unint64_t sub_1A2A78100()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE67E7F0;
  if (!qword_1EE67E7F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE67E7E8);
    v2[0] = sub_1A296E8A4(&qword_1EE67C938, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    v2[1] = sub_1A296E8A4(&qword_1EE67E7F8, type metadata accessor for SFAirDropSend.Transfer, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Transfer);
    result = MEMORY[0x1A85895EC](MEMORY[0x1E0DEA0B8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE67E7F0);
  }
  return result;
}

uint64_t SFAirDrop.Transfers.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  uint64_t v19;

  v15 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE674730);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E800);
  v7 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SFAirDrop.Transfers();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v17 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1A2A78020();
  sub_1A2AE40C0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v17);
  type metadata accessor for SFAirDropClient.Identifier();
  LOBYTE(v19) = 0;
  sub_1A296E8A4(&qword_1EE67B750, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDropClient.Identifier, (uint64_t)&protocol conformance descriptor for SFAirDropClient.Identifier);
  sub_1A2AE3D30();
  sub_1A2A78490((uint64_t)v6, (uint64_t)v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E7D0);
  v18 = 1;
  sub_1A2A784D8();
  sub_1A2AE3D78();
  *(_QWORD *)&v12[*(int *)(v10 + 20)] = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E7E8);
  v18 = 2;
  sub_1A2A785B4();
  sub_1A2AE3D78();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v16);
  *(_QWORD *)&v12[*(int *)(v10 + 24)] = v19;
  sub_1A2990388((uint64_t)v12, v15, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.Transfers);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v17);
  return sub_1A297DA3C((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.Transfers);
}

uint64_t sub_1A2A78490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE674730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A2A784D8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE67E808;
  if (!qword_1EE67E808)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE67E7D0);
    v2[0] = sub_1A296E8A4(&qword_1EE67C988, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    v2[1] = sub_1A296E8A4(&qword_1EE67E810, type metadata accessor for SFAirDropReceive.Transfer, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Transfer);
    result = MEMORY[0x1A85895EC](MEMORY[0x1E0DEA0D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE67E808);
  }
  return result;
}

uint64_t sub_1A2A78574(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE674730);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A2A785B4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE67E818;
  if (!qword_1EE67E818)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE67E7E8);
    v2[0] = sub_1A296E8A4(&qword_1EE67C988, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    v2[1] = sub_1A296E8A4(&qword_1EE67E820, type metadata accessor for SFAirDropSend.Transfer, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Transfer);
    result = MEMORY[0x1A85895EC](MEMORY[0x1E0DEA0D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE67E818);
  }
  return result;
}

uint64_t sub_1A2A78650@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDrop.Transfers.init(from:)(a1, a2);
}

uint64_t sub_1A2A78664(_QWORD *a1)
{
  return SFAirDrop.Transfers.encode(to:)(a1);
}

uint64_t *_s9TransfersVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for SFAirDropClient.Identifier();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE674730);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v8 + 64));
      }
      else
      {
        v12 = sub_1A2AE3130();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v14 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v14) = *(uint64_t *)((char *)a2 + v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s9TransfersVwxx(uint64_t a1)
{
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v5;

  v2 = type metadata accessor for SFAirDropClient.Identifier();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!EnumCaseMultiPayload)
    {
      v5 = sub_1A2AE3130();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    }
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s9TransfersVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for SFAirDropClient.Identifier();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE674730);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      v10 = sub_1A2AE3130();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v12 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s9TransfersVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  size_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;

  v6 = type metadata accessor for SFAirDropClient.Identifier();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        goto LABEL_17;
      sub_1A297DA3C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropClient.Identifier);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      }
      if (!EnumCaseMultiPayload)
      {
        v15 = sub_1A2AE3130();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      }
      v13 = *(_QWORD *)(v7 + 64);
      goto LABEL_9;
    }
    sub_1A297DA3C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropClient.Identifier);
LABEL_8:
    v13 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE674730) - 8) + 64);
LABEL_9:
    memcpy(a1, a2, v13);
    goto LABEL_17;
  }
  if (v10)
    goto LABEL_8;
  v11 = swift_getEnumCaseMultiPayload();
  if (v11 == 1)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (v11)
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    v12 = sub_1A2AE3130();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_17:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *_s9TransfersVwtk(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for SFAirDropClient.Identifier();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE674730);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      v9 = sub_1A2AE3130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  return a1;
}

char *_s9TransfersVwta(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  size_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = type metadata accessor for SFAirDropClient.Identifier();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_1A297DA3C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropClient.Identifier);
      if (!swift_getEnumCaseMultiPayload())
      {
        v14 = sub_1A2AE3130();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      v11 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    sub_1A297DA3C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropClient.Identifier);
LABEL_7:
    v11 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE674730) - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v11);
    goto LABEL_14;
  }
  if (v10)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    v12 = sub_1A2AE3130();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9TransfersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2A78EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE674730);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t _s9TransfersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2A78F48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE674730);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_1A2A78FC4()
{
  unint64_t v0;

  sub_1A2A7903C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1A2A7903C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE674738)
  {
    type metadata accessor for SFAirDropClient.Identifier();
    v0 = sub_1A2AE39F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE674738);
  }
}

uint64_t _s9TransfersV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A2A790DC + 4 * byte_1A2B08D3D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A2A79110 + 4 * byte_1A2B08D38[v4]))();
}

uint64_t sub_1A2A79110(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A79118(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2A79120);
  return result;
}

uint64_t sub_1A2A7912C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2A79134);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A2A79138(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A79140(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s9TransfersV10CodingKeysOMa()
{
  return &_s9TransfersV10CodingKeysON;
}

unint64_t sub_1A2A79160()
{
  unint64_t result;

  result = qword_1EE67E828;
  if (!qword_1EE67E828)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08E54, &_s9TransfersV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E828);
  }
  return result;
}

unint64_t sub_1A2A791A8()
{
  unint64_t result;

  result = qword_1EE67E830;
  if (!qword_1EE67E830)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08DC4, &_s9TransfersV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E830);
  }
  return result;
}

unint64_t sub_1A2A791F0()
{
  unint64_t result;

  result = qword_1EE67E838;
  if (!qword_1EE67E838)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B08DEC, &_s9TransfersV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67E838);
  }
  return result;
}

uint64_t sub_1A2A79234(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001A2B47DF0 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A2B47E10 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E617254646E6573 && a2 == 0xED00007372656673)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void combineLatest<A, B, C>(_:_:_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a7;
  v30 = a8;
  v28 = a9;
  v27 = a10;
  v15 = *(_QWORD *)(a6 - 8);
  v16 = MEMORY[0x1E0C80A78](a1);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x1E0C80A78](v16);
  v23 = (char *)&v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v27 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v26 + 16))(v25);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v23, a2, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a3, a6);
  sub_1A2A794F4((uint64_t)v25, a4, v28);
}

void sub_1A2A794F4(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for AsyncCombineLatest3Sequence();
}

uint64_t sub_1A2A79568(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v5 + *(int *)(a1 + 68), v4, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v5 + *(int *)(a1 + 72), v3, v1);
}

void AsyncCombineLatest3Sequence.makeAsyncIterator()()
{
  uint64_t v0;

  v0 = sub_1A2AE39F4();
  MEMORY[0x1E0C80A78](v0);
  type metadata accessor for CombineLatestStorage();
}

void sub_1A2A79650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v0 + *(int *)(v1 + 72), v2);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v3, 0, 1, v2);
  sub_1A2A0B07C();
}

void sub_1A2A796A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  sub_1A2A796E0();
}

void sub_1A2A796E0()
{
  type metadata accessor for AsyncCombineLatest3Sequence.Iterator.InternalClass();
}

uint64_t sub_1A2A79718()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v0;
  *v1 = result;
  return result;
}

uint64_t sub_1A2A7973C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t TupleTypeMetadata3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = swift_getAssociatedTypeWitness();
  v2[5] = swift_getAssociatedTypeWitness();
  v2[6] = swift_getAssociatedTypeWitness();
  v2[7] = sub_1A2AE39F4();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v2[8] = TupleTypeMetadata3;
  v4 = sub_1A2AE39F4();
  v2[9] = v4;
  v2[10] = *(_QWORD *)(v4 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = *(_QWORD *)(TupleTypeMetadata3 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A2A79898()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v1;
  *v1 = v0;
  v1[1] = sub_1A2A798EC;
  return sub_1A2A0567C(*(_QWORD *)(v0 + 88));
}

uint64_t sub_1A2A798EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A2A79950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t, uint64_t);
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  void (*v41)(uint64_t, uint64_t, uint64_t);
  void (*v42)(void);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(void);
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 64);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 96) + 48))(v1, 1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 16);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(v1, *(_QWORD *)(v0 + 72));
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata3 - 8) + 56))(v3, 1, 1, TupleTypeMetadata3);
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(_QWORD *)(v0 + 120);
  v51 = *(_QWORD *)(v0 + 128);
  v48 = *(_QWORD *)(v0 + 112);
  v49 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 40);
  v55 = *(_QWORD *)(v0 + 48);
  v57 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 32);
  v53 = *(_QWORD *)(v0 + 16);
  v8 = *(int *)(v2 + 48);
  v9 = v51 + v8;
  v50 = v51 + v8;
  v10 = *(int *)(v2 + 64);
  v11 = v51 + v10;
  v12 = v1 + v8;
  v43 = v51 + v10;
  v44 = v1 + v10;
  v13 = *(_QWORD *)(v7 - 8);
  v46 = *(void (**)(void))(v13 + 32);
  v46();
  v14 = *(_QWORD *)(v6 - 8);
  v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32);
  v47(v9, v12, v6);
  v15 = *(_QWORD *)(v57 - 8);
  (*(void (**)(uint64_t, uint64_t))(v15 + 32))(v11, v44);
  v33 = swift_getTupleTypeMetadata3();
  v45 = v53 + *(int *)(v33 + 48);
  v38 = v13;
  v39 = v5;
  v16 = v5 + *(int *)(v2 + 48);
  v17 = v5 + *(int *)(v2 + 64);
  v42 = *(void (**)(void))(v13 + 16);
  v42();
  v35 = v16;
  v36 = v14;
  v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v41(v16, v50, v6);
  v37 = v15;
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  v34 = v17;
  v40(v17, v43, v57);
  ((void (*)(uint64_t, uint64_t, uint64_t))v46)(v53, v39, v7);
  v18 = v48 + *(int *)(v2 + 48);
  v19 = v48 + *(int *)(v2 + 64);
  v42();
  v41(v18, v50, v6);
  v54 = v19;
  v40(v19, v43, v57);
  v47(v45, v18, v6);
  v20 = v49 + *(int *)(v2 + 48);
  v21 = v49 + *(int *)(v2 + 64);
  v42();
  v52 = v20;
  v41(v20, v50, v6);
  v40(v21, v43, v57);
  v22 = *(_QWORD *)(v55 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 48))(v21, 1);
  if ((_DWORD)result != 1)
  {
    v56 = *(_QWORD *)(v0 + 104);
    v58 = *(_QWORD *)(v0 + 112);
    v24 = *(_QWORD *)(v0 + 56);
    v25 = *(_QWORD *)(v0 + 40);
    v26 = *(_QWORD *)(v0 + 48);
    v27 = *(_QWORD *)(v0 + 32);
    v28 = *(_QWORD *)(v0 + 16);
    v29 = v28 + *(int *)(v33 + 64);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v29, v21, v26);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v28, 0, 1, v33);
    v30 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v30(v52, v25);
    v31 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v31(v56, v27);
    v32 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v32(v54, v24);
    v31(v58, v27);
    v32(v34, v24);
    v30(v35, v25);
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A2A79D30()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AsyncCombineLatest3Sequence.Iterator.next()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1A2A79DAC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_1A29B5DB8;
  return sub_1A2A7973C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1A2A79E00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1A2971EBC;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch();
}

uint64_t sub_1A2A79E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  _QWORD *v6;

  v4[2] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[3] = AssociatedTypeWitness;
  v4[4] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[5] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v4[6] = v6;
  *v6 = v4;
  v6[1] = sub_1A29DB594;
  return sub_1A2AE36D0();
}

void sub_1A2A79F38()
{
  AsyncCombineLatest3Sequence.makeAsyncIterator()();
}

uint64_t sub_1A2A79F4C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

uint64_t sub_1A2A79F68()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return swift_getAssociatedConformanceWitness();
}

void sub_1A2A79FF8()
{
  JUMPOUT(0x1A85895ECLL);
}

uint64_t sub_1A2A7A008()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1A2A7A010()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_1A2A7A0BC(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;

  v4 = a1;
  v5 = a3[3];
  v6 = *(_QWORD *)(a3[2] - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = *(_QWORD *)(a3[4] - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = *(_QWORD *)(v7 + 64) + v11;
  v13 = (*(_BYTE *)(v7 + 80) | *(_BYTE *)(v6 + 80) | v11);
  if (v13 <= 7
    && ((v12 + (v9 & ~v8)) & ~(unint64_t)v11) + *(_QWORD *)(v10 + 64) <= 0x18
    && ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v6 + 80) | v11) & 0x100000) == 0)
  {
    v17 = ~v8;
    v18 = ~(unint64_t)v11;
    v21 = a3[4];
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v19 = ((unint64_t)a2 + v9) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v17, v19, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((((unint64_t)v4 + v9) & v17) + v12) & v18, (v19 + v12) & v18, v21);
  }
  else
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v13 + 16) & ~v13));
    swift_retain();
  }
  return v4;
}

uint64_t sub_1A2A7A1F0(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *(_QWORD *)(a2[2] - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2[3] - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(a2[4] - 8) + 8))((v7
                                                                                       + *(_QWORD *)(v6 + 64)
                                                                                       + *(unsigned __int8 *)(*(_QWORD *)(a2[4] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[4] - 8) + 80));
}

uint64_t sub_1A2A7A270(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v10, v11);
  v12 = *(_QWORD *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 16))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

uint64_t sub_1A2A7A318(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  v12 = *(_QWORD *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 24))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

uint64_t sub_1A2A7A3C0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v10, v11);
  v12 = *(_QWORD *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 32))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

uint64_t sub_1A2A7A468(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  v12 = *(_QWORD *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 40))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

uint64_t sub_1A2A7A510(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  uint64_t v22;

  v4 = *(_QWORD *)(a3[2] - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  v9 = a3[4];
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) > v8)
    v8 = *(_DWORD *)(v10 + 84);
  if (!a2)
    return 0;
  v11 = *(unsigned __int8 *)(v6 + 80);
  v12 = *(_QWORD *)(v4 + 64) + v11;
  v13 = *(_QWORD *)(v6 + 64);
  v14 = *(unsigned __int8 *)(v10 + 80);
  v15 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_25;
  v16 = ((v13 + v14 + (v12 & ~v11)) & ~v14) + *(_QWORD *)(v10 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_25;
      goto LABEL_16;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_25;
      goto LABEL_16;
    }
    if (v19 < 2)
    {
LABEL_25:
      if (v8)
      {
        if (v5 == v8)
          return (*(uint64_t (**)(void))(v4 + 48))();
        v22 = (v12 + a1) & ~v11;
        if (v7 == v8)
          return (*(uint64_t (**)(uint64_t))(v6 + 48))(v22);
        else
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v10 + 48))((v22 + v13 + v14) & ~v14, *(unsigned int *)(v10 + 84), v9);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_25;
LABEL_16:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if ((_DWORD)v16)
  {
    if (v16 <= 3)
      v21 = ((v13 + v14 + (v12 & ~(_DWORD)v11)) & ~(_DWORD)v14) + *(_DWORD *)(v10 + 64);
    else
      v21 = 4;
    __asm { BR              X11 }
  }
  return v8 + v20 + 1;
}

void sub_1A2A7A6CC(_WORD *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  size_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(a4[2] - 8);
  v6 = *(_QWORD *)(a4[3] - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(a4[4] - 8);
  if (*(_DWORD *)(v8 + 84) > v7)
    v7 = *(_DWORD *)(v8 + 84);
  v9 = ((*(_QWORD *)(v6 + 64)
       + *(unsigned __int8 *)(v8 + 80)
       + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
     + *(_QWORD *)(v8 + 64);
  if (a3 > v7)
  {
    if (v9 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0u;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v9 < 4)
    {
      if ((_DWORD)v9)
      {
        v13 = v11 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if ((_DWORD)v9 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v9 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X21 }
}

void type metadata accessor for AsyncCombineLatest3Sequence()
{
  JUMPOUT(0x1A8589544);
}

void type metadata accessor for AsyncCombineLatest3Sequence.Iterator()
{
  JUMPOUT(0x1A8589544);
}

void type metadata accessor for AsyncCombineLatest3Sequence.Iterator.InternalClass()
{
  JUMPOUT(0x1A8589544);
}

uint64_t _SFAirDropTransferObserverAdaptor.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC7Sharing33_SFAirDropTransferObserverAdaptor_delegate;
  swift_beginAccess();
  return MEMORY[0x1A8589784](v1);
}

uint64_t _SFAirDropTransferObserverAdaptor.delegate.setter()
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*_SFAirDropTransferObserverAdaptor.delegate.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC7Sharing33_SFAirDropTransferObserverAdaptor_delegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x1A8589784](v5);
  return sub_1A2A7AAE4;
}

void sub_1A2A7AAE4(void **a1, char a2)
{
  void *v3;

  v3 = *a1;
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

id _SFAirDropTransferObserverAdaptor.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id _SFAirDropTransferObserverAdaptor.init()()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for SFAirDropClient.Identifier();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for SFAirDropClient(0);
  swift_allocObject();
  v5 = v0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC7Sharing33_SFAirDropTransferObserverAdaptor_client] = SFAirDropClient.init(identifier:)((uint64_t)v4);

  v7.receiver = v5;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

id _SFAirDropTransferObserverAdaptor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A2A7AD84@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + OBJC_IVAR____TtC7Sharing33_SFAirDropTransferObserverAdaptor_delegate;
  swift_beginAccess();
  result = MEMORY[0x1A8589784](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1A2A7ADD8()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

uint64_t type metadata accessor for _SFAirDropTransferObserverAdaptor()
{
  return objc_opt_self();
}

uint64_t sub_1A2A7AE84(uint64_t a1, uint64_t a2)
{
  return sub_1A2A7AEEC(a1, a2, &qword_1EE67B7B0, &qword_1EE67B400, &qword_1EE67ECC0, &qword_1EE67B410, &qword_1EE67B7A8, (uint64_t (*)(uint64_t, uint64_t *))sub_1A2AA44F4);
}

uint64_t sub_1A2A7AEB8(uint64_t a1, uint64_t a2)
{
  return sub_1A2A7AEEC(a1, a2, &qword_1EE67B798, &qword_1EE67B408, &qword_1EE67ECD0, &qword_1EE67B418, &qword_1EE67B790, (uint64_t (*)(uint64_t, uint64_t *))sub_1A2AA4508);
}

uint64_t sub_1A2A7AEEC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t *a6, uint64_t *a7, uint64_t (*a8)(uint64_t, uint64_t *))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t **v38;
  int EnumCaseMultiPayload;
  uint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t *v64;
  uint64_t *v65;
  uint64_t *v66;
  char *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t *v70;
  char v71;
  uint64_t *v72;
  uint64_t *v73;
  uint64_t *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t *v79;
  char v80;
  uint64_t *v81;
  char v82;
  uint64_t *v83;
  uint64_t v84;
  char v85;
  char v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v95)(uint64_t, uint64_t *);
  uint64_t *v96;
  uint64_t *v97;
  uint64_t *v98;
  _QWORD *v99;
  uint64_t *v100;
  uint64_t *v101;
  uint64_t *v102;
  uint64_t *v103;
  uint64_t *v104;

  v95 = a8;
  v100 = a3;
  v101 = a7;
  v103 = a6;
  v104 = (uint64_t *)a2;
  v11 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = MEMORY[0x1E0C80A78](v11);
  v96 = (uint64_t *)((char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v97 = (uint64_t *)((char *)&v95 - v14);
  v15 = type metadata accessor for SFAirDrop.DeclineAction();
  v16 = MEMORY[0x1E0C80A78](v15);
  v98 = (uint64_t *)((char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x1E0C80A78](v16);
  v99 = (uint64_t (**)(uint64_t, uint64_t *))((char *)&v95 - v19);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v95 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (uint64_t *)((char *)&v95 - v23);
  v25 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v26 = MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v95 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x1E0C80A78](v26);
  v31 = (unsigned __int8 *)&v95 - v30;
  MEMORY[0x1E0C80A78](v29);
  v33 = (char *)&v95 - v32;
  v102 = a5;
  v34 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v35 = MEMORY[0x1E0C80A78](v34);
  v37 = (char *)&v95 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = (uint64_t **)&v37[*(int *)(v35 + 48)];
  sub_1A297CDE4(a1, (uint64_t)v37, a4);
  sub_1A297CDE4((uint64_t)v104, (uint64_t)v38, a4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v104 = (uint64_t *)v22;
    v101 = v24;
    sub_1A297CDE4((uint64_t)v37, (uint64_t)v33, a4);
    v50 = (uint64_t *)*((_QWORD *)v33 + 1);
    v100 = *(uint64_t **)v33;
    v51 = a4;
    v53 = *((_QWORD *)v33 + 2);
    v52 = (uint64_t *)*((_QWORD *)v33 + 3);
    v54 = *((_QWORD *)v33 + 4);
    v55 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v103) + 80);
    v56 = (uint64_t)&v33[v55];
    if (swift_getEnumCaseMultiPayload())
    {
      sub_1A297DA3C(v56, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    v98 = (uint64_t *)v53;
    v99 = (_QWORD *)v54;
    v102 = v52;
    v103 = v51;
    v72 = *v38;
    v73 = v38[1];
    v74 = v38[3];
    v97 = v38[2];
    v75 = v38[4];
    v76 = v56;
    v77 = v101;
    sub_1A297EB48(v76, (uint64_t)v101, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
    v78 = (uint64_t)v38 + v55;
    v79 = v104;
    sub_1A297EB48(v78, (uint64_t)v104, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
    if (v100 == v72 && v50 == v73)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v82 = sub_1A2AE3EE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v82 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A297DA3C((uint64_t)v79, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
        v92 = (uint64_t)v77;
        goto LABEL_51;
      }
    }
    v83 = v75;
    if (v98 == v97 && v102 == v74)
    {
      swift_bridgeObjectRelease_n();
      a4 = v103;
      v84 = (uint64_t)v99;
    }
    else
    {
      v90 = sub_1A2AE3EE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a4 = v103;
      v84 = (uint64_t)v99;
      if ((v90 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_55:
        sub_1A297DA3C((uint64_t)v79, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
        v93 = (uint64_t)v77;
        goto LABEL_56;
      }
    }
    v91 = v95(v84, v83);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v91 & 1) != 0)
    {
      v71 = _s7Sharing9SFAirDropO13DeclineActionV2eeoiySbAE_AEtFZ_0(v77, v79);
      sub_1A297DA3C((uint64_t)v79, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
      v87 = (uint64_t)v77;
      goto LABEL_47;
    }
    goto LABEL_55;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_1A297CDE4((uint64_t)v37, (uint64_t)v28, a4);
    v101 = *(uint64_t **)v28;
    v57 = a4;
    v58 = *((_QWORD *)v28 + 2);
    v104 = (uint64_t *)*((_QWORD *)v28 + 1);
    v59 = (uint64_t *)*((_QWORD *)v28 + 3);
    v60 = (uint64_t *)*((_QWORD *)v28 + 4);
    v61 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v103) + 80);
    v62 = (uint64_t)&v28[v61];
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v96 = (uint64_t *)v58;
      v100 = v59;
      v102 = v60;
      v103 = v57;
      v64 = *v38;
      v63 = v38[1];
      v65 = v38[2];
      v66 = v38[3];
      v67 = (char *)v38 + v61;
      v97 = v38[4];
      v68 = v99;
      sub_1A297EB48(v62, (uint64_t)v99, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
      v69 = (uint64_t)v67;
      v70 = v98;
      sub_1A297EB48(v69, (uint64_t)v98, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
      if (v101 == v64 && v104 == v63)
      {
        swift_bridgeObjectRelease_n();
LABEL_22:
        v81 = v102;
        if (v96 == v65 && v100 == v66)
        {
          swift_bridgeObjectRelease_n();
          a4 = v103;
        }
        else
        {
          v85 = sub_1A2AE3EE0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a4 = v103;
          if ((v85 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_53:
            sub_1A297DA3C((uint64_t)v70, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
            v93 = (uint64_t)v68;
LABEL_56:
            sub_1A297DA3C(v93, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
            goto LABEL_57;
          }
        }
        v86 = v95((uint64_t)v81, v97);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v86 & 1) != 0)
        {
          v71 = _s7Sharing9SFAirDropO13DeclineActionV2eeoiySbAE_AEtFZ_0(v68, v70);
          sub_1A297DA3C((uint64_t)v70, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
          v87 = (uint64_t)v68;
LABEL_47:
          sub_1A297DA3C(v87, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
          goto LABEL_58;
        }
        goto LABEL_53;
      }
      v80 = sub_1A2AE3EE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v80 & 1) != 0)
        goto LABEL_22;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A297DA3C((uint64_t)v70, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
      v92 = (uint64_t)v68;
LABEL_51:
      sub_1A297DA3C(v92, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
      v71 = 0;
      a4 = v103;
      goto LABEL_58;
    }
    sub_1A297DA3C((uint64_t)&v28[v61], (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  sub_1A297CDE4((uint64_t)v37, (uint64_t)v31, a4);
  v40 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v101) + 48);
  v41 = (uint64_t)&v31[v40];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v42 = *v31;
    v43 = *(unsigned __int8 *)v38;
    v44 = (uint64_t)v38 + v40;
    v45 = (uint64_t)v97;
    v46 = v100;
    sub_1A2990414(v41, (uint64_t)v97, v100);
    v47 = (uint64_t)v96;
    sub_1A2990414(v44, (uint64_t)v96, v46);
    if (v42)
    {
      if (v42 == 1)
      {
        v48 = 0xE700000000000000;
        v49 = 0x65766965636572;
        if (!v43)
        {
LABEL_37:
          v88 = 0xE400000000000000;
          if (v49 != 1684956531)
            goto LABEL_42;
LABEL_40:
          if (v48 == v88)
          {
            swift_bridgeObjectRelease_n();
LABEL_43:
            v71 = _s7Sharing9SFAirDropO17PermissionRequestV18InterventionActionV2eeoiySbAGy_x_G_AItFZ_0();
            sub_1A296F108(v47, v46);
            sub_1A296F108(v45, v46);
            goto LABEL_58;
          }
          goto LABEL_42;
        }
      }
      else
      {
        v48 = 0xE800000000000000;
        v49 = 0x6F666E4965726F6DLL;
        if (!v43)
          goto LABEL_37;
      }
    }
    else
    {
      v48 = 0xE400000000000000;
      v49 = 1684956531;
      if (!v43)
        goto LABEL_37;
    }
    if (v43 == 1)
    {
      v88 = 0xE700000000000000;
      if (v49 == 0x65766965636572)
        goto LABEL_40;
    }
    else
    {
      v88 = 0xE800000000000000;
      if (v49 == 0x6F666E4965726F6DLL)
        goto LABEL_40;
    }
LABEL_42:
    v89 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v89 & 1) != 0)
      goto LABEL_43;
    sub_1A296F108(v47, v46);
    sub_1A296F108(v45, v46);
LABEL_57:
    v71 = 0;
    goto LABEL_58;
  }
  sub_1A296F108((uint64_t)&v31[v40], v100);
LABEL_17:
  v71 = 0;
  a4 = v102;
LABEL_58:
  sub_1A296F108((uint64_t)v37, a4);
  return v71 & 1;
}

uint64_t SFAirDropSend.Transfer.State.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  int EnumCaseMultiPayload;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A2990388(v2, (uint64_t)v6, v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F0);
    swift_bridgeObjectRelease();
    sub_1A297EB48((uint64_t)v6, a1, type metadata accessor for SFAirDropSend.Transfer.Metrics);
    v13 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1, 0, 1, v13);
  }
  else
  {
    if (EnumCaseMultiPayload == 6)
    {
      v9 = &v6[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F8) + 48)];
      sub_1A297EB48((uint64_t)v6, a1, type metadata accessor for SFAirDropSend.Transfer.Metrics);
      v10 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 0, 1, v10);
      v11 = (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropSend.Failure;
      v12 = (uint64_t)v9;
    }
    else
    {
      v15 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 1, 1, v15);
      v11 = type metadata accessor for SFAirDropSend.Transfer.State;
      v12 = (uint64_t)v6;
    }
    return sub_1A297DA3C(v12, v11);
  }
}

uint64_t type metadata accessor for SFAirDropSend.Transfer.State(uint64_t a1)
{
  return sub_1A29903E0(a1, (uint64_t *)&unk_1EE6746D0);
}

void SFAirDropSend.Transfer.State.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  char *v9;
  uint64_t v10;

  v1 = type metadata accessor for SFAirDropSend.Failure();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
  MEMORY[0x1E0C80A78](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA38);
  MEMORY[0x1E0C80A78](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B3B0);
  MEMORY[0x1E0C80A78](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA10);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  MEMORY[0x1E0C80A78](v6);
  sub_1A2990388(v0, (uint64_t)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v9 = (char *)sub_1A2A7BAC0 + 4 * word_1A2B09070[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A2A7BAC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  v2 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA20) + 64);
  *(_QWORD *)(v1 - 152) = 0;
  *(_QWORD *)(v1 - 144) = 0xE000000000000000;
  sub_1A2AE3B20();
  v3 = *(_QWORD *)(v1 - 144);
  *(_QWORD *)(v1 - 152) = *(_QWORD *)(v1 - 152);
  *(_QWORD *)(v1 - 144) = v3;
  sub_1A2AE34F0();
  sub_1A2AE385C();
  sub_1A2AE34F0();
  v4 = *(_QWORD *)(v1 - 152);
  sub_1A297DA3C(v2, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
  return v4;
}

void SFAirDropSend.Transfer.State.shortDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for SFAirDropSend.Failure();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  MEMORY[0x1E0C80A78](v2);
  sub_1A2990388(v0, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)sub_1A2A7C178 + 4 * byte_1A2B09084[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

unint64_t sub_1A2A7C178()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA20);
  sub_1A297DA3C(v0 + *(int *)(v1 + 64), (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
  return 0xD000000000000015;
}

void sub_1A2A7C504()
{
  JUMPOUT(0x1A2A7C4E0);
}

uint64_t SFAirDropSend.Transfer.State.cancelAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v53 = a1;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B400);
  MEMORY[0x1E0C80A78](v48);
  v51 = (uint64_t)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B3B0);
  MEMORY[0x1E0C80A78](v3);
  v52 = (uint64_t)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA08);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA10);
  MEMORY[0x1E0C80A78](v8);
  v50 = (uint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA30);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA38);
  MEMORY[0x1E0C80A78](v13);
  v49 = (uint64_t)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (uint64_t *)((char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A2990388(v1, (uint64_t)v17, v18);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA20) + 64);
      goto LABEL_6;
    case 1u:
      swift_bridgeObjectRelease();
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA18);
      v21 = v50;
      sub_1A2990414((uint64_t)v17 + *(int *)(v20 + 48), v50, &qword_1EE67BA10);
      sub_1A297CDE4(v21 + *(int *)(v8 + 60), (uint64_t)v7, &qword_1EE67BA08);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v22 = type metadata accessor for SFAirDrop.DeclineAction();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v53, 1, 1, v22);
        sub_1A296F108((uint64_t)v7, &qword_1EE67BA08);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA18);
        v38 = v53;
        sub_1A297EB48((uint64_t)&v7[*(int *)(v37 + 80)], v53, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
        v39 = type metadata accessor for SFAirDrop.DeclineAction();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v38, 0, 1, v39);
      }
      v40 = &qword_1EE67BA10;
      goto LABEL_16;
    case 2u:
      swift_bridgeObjectRelease();
      sub_1A297DB90(v17[2], v17[3], v17[4]);
      swift_bridgeObjectRelease();
      v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA08) + 80);
LABEL_6:
      v23 = v53;
      sub_1A297EB48((uint64_t)v17 + v19, v53, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
      v24 = type metadata accessor for SFAirDrop.DeclineAction();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 0, 1, v24);
    case 3u:
      v27 = v17[7];
      v28 = v17[8];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A2973568();
      sub_1A29736C4(v27, v28);
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA10);
      v21 = v52;
      sub_1A2990414((uint64_t)v17 + *(int *)(v29 + 48), v52, &qword_1EE67B3B0);
      v30 = v51;
      sub_1A297CDE4(v21 + *(int *)(v3 + 60), v51, &qword_1EE67B400);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v31 = type metadata accessor for SFAirDrop.DeclineAction();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v53, 1, 1, v31);
        sub_1A296F108(v30, &qword_1EE67B400);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v41 = v30 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B410) + 80);
        v42 = v53;
        sub_1A297EB48(v41, v53, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
        v43 = type metadata accessor for SFAirDrop.DeclineAction();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v42, 0, 1, v43);
      }
      v40 = &qword_1EE67B3B0;
LABEL_16:
      v44 = v21;
      goto LABEL_19;
    case 5u:
      v32 = v17[7];
      v33 = v17[8];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A2973568();
      sub_1A29736C4(v32, v33);
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA00);
      v35 = v49;
      sub_1A2990414((uint64_t)v17 + *(int *)(v34 + 48), v49, &qword_1EE67BA38);
      sub_1A297CDE4(v35 + *(int *)(v13 + 60), (uint64_t)v12, &qword_1EE67BA30);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v36 = type metadata accessor for SFAirDrop.DeclineAction();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v53, 1, 1, v36);
        sub_1A296F108((uint64_t)v12, &qword_1EE67BA30);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA40);
        v46 = v53;
        sub_1A297EB48((uint64_t)&v12[*(int *)(v45 + 80)], v53, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
        v47 = type metadata accessor for SFAirDrop.DeclineAction();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 0, 1, v47);
      }
      v40 = &qword_1EE67BA38;
      v44 = v35;
LABEL_19:
      result = sub_1A296F108(v44, v40);
      break;
    default:
      v26 = type metadata accessor for SFAirDrop.DeclineAction();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v53, 1, 1, v26);
      result = sub_1A297DA3C((uint64_t)v17, type metadata accessor for SFAirDropSend.Transfer.State);
      break;
  }
  return result;
}

uint64_t SFAirDropSend.Transfer.State.totalProgressCount.getter()
{
  return 1000;
}

void SFAirDropSend.Transfer.State.currentProgressCount.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  MEMORY[0x1E0C80A78](v1);
  sub_1A2990388(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)&loc_1A2A7CC34 + dword_1A2A7CEA4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A2A7CC44()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA20);
  sub_1A297DA3C(v0 + *(int *)(v1 + 64), (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
  return 0;
}

uint64_t sub_1A2A7CED0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A2A7CF04 + 4 * byte_1A2B09094[a1]))(0x64657461657263, 0xE700000000000000);
}

unint64_t sub_1A2A7CF04()
{
  return 0xD000000000000014;
}

uint64_t sub_1A2A7CFE8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x73736572676F7270;
  if (*v0 != 1)
    v1 = 0x63416C65636E6163;
  if (*v0)
    return v1;
  else
    return 1936487029;
}

uint64_t sub_1A2A7D044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2A91738(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2A7D068()
{
  sub_1A2A83BE0();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A7D090()
{
  sub_1A2A83BE0();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A7D0B8()
{
  unsigned __int8 *v0;

  return sub_1A2A7CED0(*v0);
}

uint64_t sub_1A2A7D0C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2A91894(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2A7D0E4()
{
  sub_1A2A8397C();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A7D10C()
{
  sub_1A2A8397C();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A7D134()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000017;
  else
    return 0x7363697274656DLL;
}

uint64_t sub_1A2A7D174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2A91CA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2A7D198()
{
  sub_1A2A839C0();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A7D1C0()
{
  sub_1A2A839C0();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A7D1E8()
{
  sub_1A2A83C24();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A7D210()
{
  sub_1A2A83C24();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A7D238()
{
  sub_1A2A83A8C();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A7D260()
{
  sub_1A2A83A8C();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A7D288()
{
  sub_1A2A83A04();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A7D2B0()
{
  sub_1A2A83A04();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A7D2D8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A2A7D30C + 4 * byte_1A2B0909E[*v0]))(0xD000000000000012, 0x80000001A2B47FF0);
}

uint64_t sub_1A2A7D30C()
{
  return 0x73736572676F7270;
}

uint64_t sub_1A2A7D324(uint64_t a1)
{
  return a1 + 1;
}

uint64_t sub_1A2A7D33C()
{
  return 0x63416C65636E6163;
}

uint64_t sub_1A2A7D35C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2A91D8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2A7D380()
{
  sub_1A2A83B14();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A7D3A8()
{
  sub_1A2A83B14();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A7D3D0()
{
  sub_1A2A83B58();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A7D3F8()
{
  sub_1A2A83B58();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A7D420()
{
  sub_1A2A83A48();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A7D448()
{
  sub_1A2A83A48();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A7D470()
{
  _BYTE *v0;

  if (*v0)
    return 0x74736575716572;
  else
    return 1936487029;
}

uint64_t sub_1A2A7D4A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2A91F54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2A7D4C8()
{
  sub_1A2A83B9C();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A7D4F0()
{
  sub_1A2A83B9C();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A7D518()
{
  _BYTE *v0;

  if (*v0)
    return 0x74736575716572;
  else
    return 0x6F437265646E6573;
}

uint64_t sub_1A2A7D560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2A92034(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2A7D584()
{
  sub_1A2A83AD0();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A7D5AC()
{
  sub_1A2A83AD0();
  return sub_1A2AE4108();
}

void SFAirDropSend.Transfer.State.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;

  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA28);
  v39 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v64 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA30);
  v38 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v61 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for SFAirDropSend.Failure();
  MEMORY[0x1E0C80A78](v33);
  v60 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
  v5 = MEMORY[0x1E0C80A78](v69);
  v57 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v59 = (char *)&v28 - v7;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA38);
  v37 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v58 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA38);
  MEMORY[0x1E0C80A78](v32);
  v68 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA40);
  v41 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v51 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA48);
  v36 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v54 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B3B0);
  MEMORY[0x1E0C80A78](v31);
  v67 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA50);
  v40 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v53 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA58);
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v42 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA60);
  v35 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v49 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA10);
  MEMORY[0x1E0C80A78](v30);
  v48 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA68);
  v34 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v46 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for SFAirDrop.DeclineAction();
  v18 = MEMORY[0x1E0C80A78](v29);
  v66 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v45 = (char *)&v28 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA70);
  MEMORY[0x1E0C80A78](v21);
  v22 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA78);
  v70 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v26 = (char *)&v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2A8397C();
  v72 = v26;
  sub_1A2AE40E4();
  sub_1A2990388(v71, (uint64_t)v24, type metadata accessor for SFAirDropSend.Transfer.State);
  v27 = (char *)sub_1A2A7DBD0 + 4 * word_1A2B090A2[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A2A7DBD0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA20);
  v4 = *(_QWORD *)(v1 - 408);
  sub_1A297EB48((uint64_t)v0 + *(int *)(v3 + 64), v4, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
  *(_BYTE *)(v1 - 160) = 1;
  sub_1A2A83BE0();
  v5 = *(_QWORD *)(v1 - 400);
  v7 = *(_QWORD *)(v1 - 184);
  v6 = *(_QWORD *)(v1 - 176);
  sub_1A2AE3DB4();
  *(_QWORD *)(v1 - 160) = v2;
  *(_BYTE *)(v1 - 161) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B520);
  sub_1A2990238(&qword_1EE67B528, &qword_1EE67B530, MEMORY[0x1E0CB0010], MEMORY[0x1E0DEAF10]);
  v8 = *(_QWORD *)(v1 - 392);
  v9 = *(_QWORD *)(v1 - 200);
  sub_1A2AE3E2C();
  if (v9)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 496) + 8))(v5, v8);
    sub_1A297DA3C(v4, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 208) + 8))(v7, v6);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    *(_BYTE *)(v1 - 160) = 1;
    sub_1A2AE3E08();
    *(_BYTE *)(v1 - 160) = 2;
    sub_1A296E8A4(&qword_1EE67B5B0, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDrop.DeclineAction, (uint64_t)&protocol conformance descriptor for SFAirDrop.DeclineAction);
    sub_1A2AE3E2C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 496) + 8))(v5, v8);
    sub_1A297DA3C(v4, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 208) + 8))(v7, v6);
  }
}

uint64_t SFAirDropSend.Transfer.State.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t *v45;
  _QWORD v47[13];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;

  v70 = a2;
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EAF8);
  v47[11] = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77);
  v76 = (char *)v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB00);
  v47[10] = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v65 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB08);
  v47[8] = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v69 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB10);
  v75 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v64 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB18);
  v47[6] = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v68 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB20);
  v47[7] = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v67 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB28);
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v62 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB30);
  v71 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v66 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB38);
  v47[9] = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v63 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB40);
  v47[12] = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v61 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB48);
  v73 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v14 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  v15 = MEMORY[0x1E0C80A78](v72);
  v58 = (char *)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v52 = (char *)v47 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v51 = (char *)v47 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v47[5] = (char *)v47 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)v47 - v24;
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (char *)v47 - v27;
  v29 = MEMORY[0x1E0C80A78](v26);
  v31 = (char *)v47 - v30;
  v32 = MEMORY[0x1E0C80A78](v29);
  v34 = (char *)v47 - v33;
  MEMORY[0x1E0C80A78](v32);
  v36 = (char *)v47 - v35;
  v37 = a1[3];
  v79 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v37);
  sub_1A2A8397C();
  v74 = v14;
  v38 = v80;
  sub_1A2AE40C0();
  v80 = v38;
  if (!v38)
  {
    v47[1] = v31;
    v47[2] = v25;
    v47[3] = v34;
    v47[0] = v28;
    v47[4] = v36;
    v39 = v78;
    v40 = v74;
    v41 = sub_1A2AE3D9C();
    if (*(_QWORD *)(v41 + 16) == 1)
      __asm { BR              X10 }
    v42 = sub_1A2AE3B5C();
    v43 = swift_allocError();
    v45 = v44;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE67AC00);
    *v45 = v72;
    sub_1A2AE3CF4();
    sub_1A2AE3B50();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v42 - 8) + 104))(v45, *MEMORY[0x1E0DEC450], v42);
    v80 = v43;
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v40, v39);
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v79);
}

uint64_t sub_1A2A8020C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDropSend.Transfer.State.init(from:)(a1, a2);
}

void sub_1A2A80220(_QWORD *a1)
{
  SFAirDropSend.Transfer.State.encode(to:)(a1);
}

uint64_t SFAirDropSend.Transfer.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A2990388(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.TransferIdentifier);
}

uint64_t SFAirDropSend.Transfer.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SFAirDropSend.Transfer(0) + 20);
  v4 = sub_1A2AE30C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SFAirDropSend.Transfer.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SFAirDropSend.Transfer(0);
  return sub_1A2990388(v1 + *(int *)(v3 + 24), a1, type metadata accessor for SFAirDropSend.Transfer.State);
}

uint64_t SFAirDropSend.Transfer.displayPriority.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SFAirDropSend.Transfer(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t SFAirDropSend.Transfer.activeInterfaceType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SFAirDropSend.Transfer(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t SFAirDropSend.Transfer.presenter.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SFAirDropSend.Transfer(0);
  return sub_1A2990388(v1 + *(int *)(v3 + 36), a1, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropClient.Identifier);
}

uint64_t SFAirDropSend.Transfer.sendRequest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SFAirDropSend.Transfer(0);
  return sub_1A2990388(v1 + *(int *)(v3 + 40), a1, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropSend.Request);
}

uint64_t SFAirDropSend.Transfer.endpointID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for SFAirDropSend.Transfer(0) + 40);
  v4 = v3 + *(int *)(type metadata accessor for SFAirDropSend.Request() + 28);
  v5 = sub_1A2AE3130();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t SFAirDropSend.Transfer.bundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SFAirDropSend.Transfer(0) + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDropSend.Transfer.receiverName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SFAirDropSend.Transfer(0) + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDropSend.Transfer.init(id:sendRequest:receiverName:startDate:state:displayPriority:bundleIdentifier:activeInterfaceType:presenter:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char *a11, uint64_t a12)
{
  char v18;
  char v19;
  int *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  v18 = *a7;
  v19 = *a11;
  sub_1A297EB48(a1, a9, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.TransferIdentifier);
  v20 = (int *)type metadata accessor for SFAirDropSend.Transfer(0);
  sub_1A297EB48(a2, a9 + v20[10], (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropSend.Request);
  v21 = (_QWORD *)(a9 + v20[12]);
  *v21 = a3;
  v21[1] = a4;
  v22 = a9 + v20[5];
  v23 = sub_1A2AE30C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22, a5, v23);
  sub_1A297EB48(a6, a9 + v20[6], type metadata accessor for SFAirDropSend.Transfer.State);
  *(_BYTE *)(a9 + v20[7]) = v18;
  v24 = (_QWORD *)(a9 + v20[11]);
  *v24 = a8;
  v24[1] = a10;
  *(_BYTE *)(a9 + v20[8]) = v19;
  return sub_1A297EB48(a12, a9 + v20[9], (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropClient.Identifier);
}

uint64_t SFAirDropSend.Transfer.update(state:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  _QWORD *v19;

  v3 = v2;
  sub_1A2990388(v2, a2, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.TransferIdentifier);
  v6 = (int *)type metadata accessor for SFAirDropSend.Transfer(0);
  sub_1A2990388(v3 + v6[10], a2 + v6[10], (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropSend.Request);
  v7 = (uint64_t *)(v3 + v6[12]);
  v9 = *v7;
  v8 = v7[1];
  v10 = v6[5];
  v11 = v3 + v10;
  v12 = a2 + v10;
  v13 = sub_1A2AE30C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, v11, v13);
  sub_1A2990388(a1, a2 + v6[6], type metadata accessor for SFAirDropSend.Transfer.State);
  LOBYTE(v11) = *(_BYTE *)(v3 + v6[7]);
  v14 = (uint64_t *)(v3 + v6[11]);
  v16 = *v14;
  v15 = v14[1];
  v17 = *(_BYTE *)(v3 + v6[8]);
  sub_1A2990388(v3 + v6[9], a2 + v6[9], (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropClient.Identifier);
  v18 = (_QWORD *)(a2 + v6[12]);
  *v18 = v9;
  v18[1] = v8;
  *(_BYTE *)(a2 + v6[7]) = v11;
  v19 = (_QWORD *)(a2 + v6[11]);
  *v19 = v16;
  v19[1] = v15;
  *(_BYTE *)(a2 + v6[8]) = v17;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SFAirDropSend.Transfer.update(displayPriority:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  int *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  _QWORD *v19;

  v3 = v2;
  v5 = *a1;
  sub_1A2990388(v2, a2, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.TransferIdentifier);
  v6 = (int *)type metadata accessor for SFAirDropSend.Transfer(0);
  sub_1A2990388(v3 + v6[10], a2 + v6[10], (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropSend.Request);
  v7 = (uint64_t *)(v3 + v6[12]);
  v9 = *v7;
  v8 = v7[1];
  v10 = v6[5];
  v11 = v3 + v10;
  v12 = a2 + v10;
  v13 = sub_1A2AE30C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, v11, v13);
  sub_1A2990388(v3 + v6[6], a2 + v6[6], type metadata accessor for SFAirDropSend.Transfer.State);
  v14 = (uint64_t *)(v3 + v6[11]);
  v16 = *v14;
  v15 = v14[1];
  v17 = *(_BYTE *)(v3 + v6[8]);
  sub_1A2990388(v3 + v6[9], a2 + v6[9], (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropClient.Identifier);
  v18 = (_QWORD *)(a2 + v6[12]);
  *v18 = v9;
  v18[1] = v8;
  *(_BYTE *)(a2 + v6[7]) = v5;
  v19 = (_QWORD *)(a2 + v6[11]);
  *v19 = v16;
  v19[1] = v15;
  *(_BYTE *)(a2 + v6[8]) = v17;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SFAirDropSend.Transfer.update(activeInterfaceType:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  int *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  v3 = v2;
  v5 = *a1;
  sub_1A2990388(v2, a2, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.TransferIdentifier);
  v6 = (int *)type metadata accessor for SFAirDropSend.Transfer(0);
  sub_1A2990388(v3 + v6[10], a2 + v6[10], (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropSend.Request);
  v7 = (uint64_t *)(v3 + v6[12]);
  v9 = *v7;
  v8 = v7[1];
  v10 = v6[5];
  v11 = v3 + v10;
  v12 = a2 + v10;
  v13 = sub_1A2AE30C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, v11, v13);
  sub_1A2990388(v3 + v6[6], a2 + v6[6], type metadata accessor for SFAirDropSend.Transfer.State);
  LOBYTE(v12) = *(_BYTE *)(v3 + v6[7]);
  v14 = (uint64_t *)(v3 + v6[11]);
  v16 = *v14;
  v15 = v14[1];
  sub_1A2990388(v3 + v6[9], a2 + v6[9], (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropClient.Identifier);
  v17 = (_QWORD *)(a2 + v6[12]);
  *v17 = v9;
  v17[1] = v8;
  *(_BYTE *)(a2 + v6[7]) = v12;
  v18 = (_QWORD *)(a2 + v6[11]);
  *v18 = v16;
  v18[1] = v15;
  *(_BYTE *)(a2 + v6[8]) = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SFAirDropSend.Transfer.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  _s7Sharing9SFAirDropO18TransferIdentifierV11stringValueSSvg_0();
  v0 = sub_1A2A1A8B0(8);
  v2 = v1;
  v4 = v3;
  v6 = v5;
  swift_bridgeObjectRelease();
  v7 = MEMORY[0x1A8586B44](v0, v2, v4, v6);
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  type metadata accessor for SFAirDropSend.Transfer(0);
  SFAirDropSend.Transfer.State.description.getter();
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1A2A80A00(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A2A80A28 + 4 * byte_1A2B090CA[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1A2A80A28()
{
  return 0x7461447472617473;
}

uint64_t sub_1A2A80A44()
{
  return 0x6574617473;
}

uint64_t sub_1A2A80A58()
{
  return 0x5079616C70736964;
}

unint64_t sub_1A2A80A7C()
{
  return 0xD000000000000013;
}

uint64_t sub_1A2A80A9C()
{
  return 0x65746E6573657270;
}

uint64_t sub_1A2A80ABC()
{
  return 0x75716552646E6573;
}

unint64_t sub_1A2A80ADC()
{
  return 0xD000000000000010;
}

uint64_t sub_1A2A80AF8()
{
  return 0x7265766965636572;
}

uint64_t sub_1A2A80B18()
{
  unsigned __int8 *v0;

  return sub_1A2A80A00(*v0);
}

uint64_t sub_1A2A80B20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2A92148(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2A80B44()
{
  sub_1A2A83C7C();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A80B6C()
{
  sub_1A2A83C7C();
  return sub_1A2AE4108();
}

uint64_t SFAirDropSend.Transfer.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB70);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2A83C7C();
  sub_1A2AE40E4();
  v11[15] = 0;
  type metadata accessor for SFAirDrop.TransferIdentifier();
  sub_1A296E8A4(&qword_1EE67C938, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
  sub_1A2AE3E2C();
  if (!v2)
  {
    v9 = type metadata accessor for SFAirDropSend.Transfer(0);
    v11[14] = 1;
    sub_1A2AE30C4();
    sub_1A296E8A4(&qword_1EE67AB88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1A2AE3E2C();
    v11[13] = 2;
    type metadata accessor for SFAirDropSend.Transfer.State(0);
    sub_1A296E8A4(&qword_1EE67EB80, type metadata accessor for SFAirDropSend.Transfer.State, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Transfer.State);
    sub_1A2AE3E2C();
    v11[12] = *(_BYTE *)(v3 + *(int *)(v9 + 28));
    v11[11] = 3;
    sub_1A299049C();
    sub_1A2AE3E2C();
    v11[10] = *(_BYTE *)(v3 + *(int *)(v9 + 32));
    v11[9] = 4;
    sub_1A29904E0();
    sub_1A2AE3DE4();
    v11[8] = 5;
    type metadata accessor for SFAirDropClient.Identifier();
    sub_1A296E8A4(&qword_1EE67B718, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDropClient.Identifier, (uint64_t)&protocol conformance descriptor for SFAirDropClient.Identifier);
    sub_1A2AE3E2C();
    v11[7] = 6;
    type metadata accessor for SFAirDropSend.Request();
    sub_1A296E8A4(&qword_1EE67D7C8, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDropSend.Request, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Request);
    sub_1A2AE3E2C();
    v11[6] = 7;
    sub_1A2AE3DC0();
    v11[5] = 8;
    sub_1A2AE3DC0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SFAirDropSend.Transfer.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;

  v34 = a2;
  v36 = type metadata accessor for SFAirDropSend.Request();
  MEMORY[0x1E0C80A78](v36);
  v35 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for SFAirDropClient.Identifier();
  MEMORY[0x1E0C80A78](v37);
  v38 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  MEMORY[0x1E0C80A78](v39);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_1A2AE30C4();
  v41 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SFAirDrop.TransferIdentifier();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB88);
  v12 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = (int *)type metadata accessor for SFAirDropSend.Transfer(0);
  MEMORY[0x1E0C80A78](v42);
  v44 = a1;
  v45 = (uint64_t)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2A83C7C();
  v43 = v14;
  v16 = v47;
  sub_1A2AE40C0();
  if (v16)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v44);
  v58 = 0;
  sub_1A296E8A4(&qword_1EE67C988, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
  sub_1A2AE3D78();
  v18 = v45;
  sub_1A297EB48((uint64_t)v11, v45, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.TransferIdentifier);
  v57 = 1;
  sub_1A296E8A4(&qword_1EE67AC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v19 = v8;
  v20 = v46;
  sub_1A2AE3D78();
  v21 = v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v18 + v42[5], v19, v20);
  v56 = 2;
  sub_1A296E8A4(&qword_1EE67EB90, type metadata accessor for SFAirDropSend.Transfer.State, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Transfer.State);
  sub_1A2AE3D78();
  sub_1A297EB48((uint64_t)v6, v18 + v21[6], type metadata accessor for SFAirDropSend.Transfer.State);
  v54 = 3;
  sub_1A2990524();
  sub_1A2AE3D78();
  v22 = (uint64_t)v44;
  *(_BYTE *)(v18 + v21[7]) = v55;
  v52 = 4;
  sub_1A2990568();
  sub_1A2AE3D30();
  *(_BYTE *)(v18 + v21[8]) = v53;
  v51 = 5;
  sub_1A296E8A4(&qword_1EE67B750, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDropClient.Identifier, (uint64_t)&protocol conformance descriptor for SFAirDropClient.Identifier);
  v23 = (uint64_t)v38;
  sub_1A2AE3D78();
  sub_1A297EB48(v23, v18 + v21[9], (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropClient.Identifier);
  v50 = 6;
  sub_1A296E8A4(&qword_1EE67DA70, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDropSend.Request, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Request);
  v24 = (uint64_t)v35;
  sub_1A2AE3D78();
  v47 = 0;
  sub_1A297EB48(v24, v18 + v21[10], (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropSend.Request);
  v49 = 7;
  v25 = v40;
  v26 = sub_1A2AE3D00();
  v27 = (uint64_t *)(v18 + v42[11]);
  *v27 = v26;
  v27[1] = v28;
  v48 = 8;
  v29 = sub_1A2AE3D00();
  v31 = v30;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v43, v25);
  v32 = (uint64_t *)(v18 + v42[12]);
  *v32 = v29;
  v32[1] = v31;
  sub_1A2990388(v18, v34, type metadata accessor for SFAirDropSend.Transfer);
  __swift_destroy_boxed_opaque_existential_0Tm(v22);
  return sub_1A297DA3C(v18, type metadata accessor for SFAirDropSend.Transfer);
}

uint64_t sub_1A2A816AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDropSend.Transfer.init(from:)(a1, a2);
}

uint64_t sub_1A2A816C0(_QWORD *a1)
{
  return SFAirDropSend.Transfer.encode(to:)(a1);
}

uint64_t sub_1A2A816D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  _s7Sharing9SFAirDropO18TransferIdentifierV11stringValueSSvg_0();
  v0 = sub_1A2A1A8B0(8);
  v2 = v1;
  v4 = v3;
  v6 = v5;
  swift_bridgeObjectRelease();
  v7 = MEMORY[0x1A8586B44](v0, v2, v4, v6);
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  SFAirDropSend.Transfer.State.description.getter();
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  return v7;
}

void SFAirDropSend.Transfer.State.sameCase(as:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD);
  char *v17;
  _QWORD v18[3];

  v2 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v18[1] = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v6 = MEMORY[0x1E0C80A78](v5);
  v18[2] = (char *)v18 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v9 = MEMORY[0x1E0C80A78](v8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v11 = MEMORY[0x1E0C80A78](v10);
  v12 = MEMORY[0x1E0C80A78](v11);
  v13 = MEMORY[0x1E0C80A78](v12);
  v14 = MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  sub_1A2990388(a1, (uint64_t)v18 - v15, v16);
  v17 = (char *)sub_1A2A81964 + 4 * word_1A2B090D4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A2A81964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA20);
  v4 = v0 + *(int *)(v3 + 64);
  sub_1A2990388(*(_QWORD *)(v2 - 88), v1, type metadata accessor for SFAirDropSend.Transfer.State);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1A297DA3C(v1, type metadata accessor for SFAirDropSend.Transfer.State);
    sub_1A297DA3C(v4, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1A297DA3C(v1 + *(int *)(v3 + 64), (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
    sub_1A297DA3C(v4, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
    return 1;
  }
}

void _s7Sharing13SFAirDropSendO8TransferV5StateO2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;

  v63 = (char *)a2;
  v62 = a1;
  v2 = type metadata accessor for SFAirDropSend.Failure();
  v3 = MEMORY[0x1E0C80A78](v2);
  v49 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v50 = (char *)&v43 - v5;
  v6 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v53 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v48 = (char *)&v43 - v9;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA38);
  v10 = MEMORY[0x1E0C80A78](v43);
  v56 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v57 = (char *)&v43 - v12;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B3B0);
  v13 = MEMORY[0x1E0C80A78](v45);
  v59 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v60 = (char *)&v43 - v15;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA10);
  v16 = MEMORY[0x1E0C80A78](v44);
  v51 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v52 = (char *)&v43 - v18;
  v19 = type metadata accessor for SFAirDrop.DeclineAction();
  v20 = MEMORY[0x1E0C80A78](v19);
  v55 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v54 = (char *)&v43 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v46 = (char *)&v43 - v25;
  MEMORY[0x1E0C80A78](v24);
  v47 = (char *)&v43 - v26;
  v27 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  v28 = MEMORY[0x1E0C80A78](v27);
  v61 = (char *)&v43 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x1E0C80A78](v28);
  v58 = (char *)&v43 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v33 = MEMORY[0x1E0C80A78](v32);
  v34 = MEMORY[0x1E0C80A78](v33);
  v35 = MEMORY[0x1E0C80A78](v34);
  v36 = MEMORY[0x1E0C80A78](v35);
  MEMORY[0x1E0C80A78](v36);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67ECB0);
  v38 = MEMORY[0x1E0C80A78](v37);
  v40 = (char *)&v43 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = (uint64_t)&v40[*(int *)(v38 + 48)];
  sub_1A2990388(v62, (uint64_t)v40, type metadata accessor for SFAirDropSend.Transfer.State);
  sub_1A2990388((uint64_t)v63, v41, type metadata accessor for SFAirDropSend.Transfer.State);
  v63 = v40;
  v42 = (char *)sub_1A2A823C0 + 4 * word_1A2B090E8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A2A823C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  char v13;
  char v14;

  v3 = *(_QWORD *)(v2 - 256);
  sub_1A2990388(v3, v0, type metadata accessor for SFAirDropSend.Transfer.State);
  v4 = *(_QWORD *)v0;
  v5 = *(double *)(v0 + 8);
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA20) + 64);
  v7 = v0 + v6;
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1A297DA3C(v7, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
    swift_bridgeObjectRelease();
    sub_1A296F108(v3, &qword_1EE67ECB0);
LABEL_7:
    v14 = 0;
    return v14 & 1;
  }
  v8 = *(_QWORD *)v1;
  v9 = *(double *)(v1 + 8);
  v10 = v1 + v6;
  v11 = *(_QWORD **)(v2 - 384);
  sub_1A297EB48(v7, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
  v12 = *(_QWORD **)(v2 - 392);
  sub_1A297EB48(v10, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
  v13 = sub_1A2AA4370(v4, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0 || v5 != v9)
  {
    sub_1A297DA3C((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
    sub_1A297DA3C((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
    sub_1A297DA3C(v3, type metadata accessor for SFAirDropSend.Transfer.State);
    goto LABEL_7;
  }
  v14 = _s7Sharing9SFAirDropO13DeclineActionV2eeoiySbAE_AEtFZ_0(v11, v12);
  sub_1A297DA3C((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
  sub_1A297DA3C((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.DeclineAction);
  sub_1A297DA3C(v3, type metadata accessor for SFAirDropSend.Transfer.State);
  return v14 & 1;
}

unint64_t sub_1A2A8397C()
{
  unint64_t result;

  result = qword_1EE67EA80;
  if (!qword_1EE67EA80)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A140, &_s8TransferV5StateO10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EA80);
  }
  return result;
}

unint64_t sub_1A2A839C0()
{
  unint64_t result;

  result = qword_1EE67EA88;
  if (!qword_1EE67EA88)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A0F0, &_s8TransferV5StateO31CompletedSuccessfullyCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EA88);
  }
  return result;
}

unint64_t sub_1A2A83A04()
{
  unint64_t result;

  result = qword_1EE67EA98;
  if (!qword_1EE67EA98)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A0A0, &_s8TransferV5StateO24TransferFailedCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EA98);
  }
  return result;
}

unint64_t sub_1A2A83A48()
{
  unint64_t result;

  result = qword_1EE67EAA8;
  if (!qword_1EE67EAA8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A050, &_s8TransferV5StateO41WaitingForImportContactResponseCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67EAA8);
  }
  return result;
}

unint64_t sub_1A2A83A8C()
{
  unint64_t result;

  result = qword_1EE67EAB8;
  if (!qword_1EE67EAB8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A000, &_s8TransferV5StateO20ExchangingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67EAB8);
  }
  return result;
}

unint64_t sub_1A2A83AD0()
{
  unint64_t result;

  result = qword_1EE67EAC0;
  if (!qword_1EE67EAC0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09FB0, &_s8TransferV5StateO50WaitingForShareContactPermissionResponseCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EAC0);
  }
  return result;
}

unint64_t sub_1A2A83B14()
{
  unint64_t result;

  result = qword_1EE67EAC8;
  if (!qword_1EE67EAC8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09F60, &_s8TransferV5StateO22TransferringCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EAC8);
  }
  return result;
}

unint64_t sub_1A2A83B58()
{
  unint64_t result;

  result = qword_1EE67EAD0;
  if (!qword_1EE67EAD0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09F10, &_s8TransferV5StateO31WaitingForAskResponseCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EAD0);
  }
  return result;
}

unint64_t sub_1A2A83B9C()
{
  unint64_t result;

  result = qword_1EE67EAD8;
  if (!qword_1EE67EAD8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09EC0, &_s8TransferV5StateO44WaitingForSensitiveContentResponseCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EAD8);
  }
  return result;
}

unint64_t sub_1A2A83BE0()
{
  unint64_t result;

  result = qword_1EE67EAE8;
  if (!qword_1EE67EAE8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09E70, &_s8TransferV5StateO30AnalyzingFullContentCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EAE8);
  }
  return result;
}

unint64_t sub_1A2A83C24()
{
  unint64_t result;

  result = qword_1EE67EAF0;
  if (!qword_1EE67EAF0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09E20, &_s8TransferV5StateO17CreatedCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EAF0);
  }
  return result;
}

uint64_t type metadata accessor for SFAirDropSend.Transfer(uint64_t a1)
{
  return sub_1A29903E0(a1, (uint64_t *)&unk_1EE674708);
}

unint64_t sub_1A2A83C7C()
{
  unint64_t result;

  result = qword_1EE67EB78;
  if (!qword_1EE67EB78)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09DD0, &_s8TransferV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EB78);
  }
  return result;
}

char *_s8TransferVwCP_0(char *a1, char *a2, int *a3)
{
  char *v3;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  char *v29;
  unsigned __int8 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int EnumCaseMultiPayload;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  int v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t *v105;
  unint64_t v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  int *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  int v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  int *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  int *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unsigned __int8 v171;
  uint64_t v172;
  char *v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unsigned __int8 v186;
  uint64_t v187;
  char *v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unsigned __int8 v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  unsigned __int8 v215;
  uint64_t v216;
  char *v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  unsigned __int8 v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  unsigned __int8 v245;
  uint64_t v246;
  char *v247;
  char *v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  int v252;
  int v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  char *v259;
  char *v260;
  uint64_t v261;
  int v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  char *v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  char *v275;
  uint64_t v276;
  int v277;
  uint64_t v278;
  uint64_t v279;
  char *v280;
  char *v281;
  int *v282;
  uint64_t v283;
  void (*v284)(char *, char *, uint64_t);
  char *v285;
  char *v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  unsigned __int8 v290;
  uint64_t v291;
  char *v292;
  char *v293;
  uint64_t v294;
  char *v295;
  char *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  char *v301;
  char *v302;
  uint64_t v303;
  void (*v304)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v305;
  char *v306;
  char *v307;
  unint64_t v308;
  uint64_t v309;
  uint64_t v310;
  char *v311;
  char *v312;
  unint64_t v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  char *v317;
  uint64_t v318;
  uint64_t v319;
  char *v320;
  char *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  char *v325;
  char *v326;
  uint64_t v327;
  char *v328;
  char *v329;
  uint64_t v330;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  int *v338;
  char *v339;
  void (*v340)(char *, char *, uint64_t);
  char *v341;

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v40 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v41 = (_QWORD *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = sub_1A2AE3130();
    v340 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v340(a1, v3, v7);
    v8 = v6[5];
    v9 = &a1[v8];
    v10 = &v3[v8];
    v11 = sub_1A2AE30C4();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v13(v9, v10, v11);
    v14 = v6[6];
    v15 = &a1[v14];
    v16 = &v3[v14];
    v17 = type metadata accessor for SFAirDropSend.Transfer.State(0);
    v341 = a1;
    v338 = v6;
    v339 = v3;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v18 = *((_QWORD *)v16 + 1);
        *(_QWORD *)v15 = *(_QWORD *)v16;
        *((_QWORD *)v15 + 1) = v18;
        swift_bridgeObjectRetain();
        v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA20) + 64);
        v20 = &v15[v19];
        v21 = &v16[v19];
        v22 = *(_QWORD *)&v16[v19 + 8];
        *(_QWORD *)v20 = *(_QWORD *)&v16[v19];
        *((_QWORD *)v20 + 1) = v22;
        v23 = *(_QWORD *)&v16[v19 + 16];
        v24 = *(_QWORD *)&v16[v19 + 24];
        v25 = v7;
        v26 = *((_QWORD *)v21 + 4);
        v27 = *((_QWORD *)v21 + 5);
        v28 = v6;
        v29 = v3;
        v30 = v21[48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v23, v24, v26, v27, v30);
        *((_QWORD *)v20 + 2) = v23;
        *((_QWORD *)v20 + 3) = v24;
        *((_QWORD *)v20 + 4) = v26;
        *((_QWORD *)v20 + 5) = v27;
        v7 = v25;
        v20[48] = v30;
        v3 = v29;
        v6 = v28;
        a1 = v341;
        v20[49] = v21[49];
        v31 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v32 = &v20[v31];
        v33 = &v21[v31];
        v34 = &v20[v31];
        v35 = v340;
        v340(v34, &v21[v31], v25);
        v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v37 = &v32[v36];
        v38 = &v33[v36];
        v39 = *((_QWORD *)v38 + 1);
        *(_QWORD *)v37 = *(_QWORD *)v38;
        *((_QWORD *)v37 + 1) = v39;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_66;
      case 1u:
        *(_QWORD *)v15 = *(_QWORD *)v16;
        swift_bridgeObjectRetain();
        v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA18) + 48);
        v43 = &v15[v42];
        v44 = v7;
        v45 = &v16[v42];
        v333 = v44;
        ((void (*)(char *, char *))v340)(&v15[v42], &v16[v42]);
        v46 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA10);
        v43[v46[13]] = v45[v46[13]];
        v13(&v43[v46[14]], &v45[v46[14]], v11);
        v47 = v46[15];
        v48 = &v43[v47];
        v49 = &v45[v47];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA08);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v161 = *((_QWORD *)v49 + 1);
          *(_QWORD *)v48 = *(_QWORD *)v49;
          *((_QWORD *)v48 + 1) = v161;
          v162 = *((_QWORD *)v49 + 3);
          *((_QWORD *)v48 + 2) = *((_QWORD *)v49 + 2);
          *((_QWORD *)v48 + 3) = v162;
          *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v163 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA18) + 80);
          v164 = &v48[v163];
          v165 = &v49[v163];
          v166 = *(_QWORD *)&v49[v163 + 8];
          *(_QWORD *)v164 = *(_QWORD *)&v49[v163];
          *((_QWORD *)v164 + 1) = v166;
          v167 = *(_QWORD *)&v49[v163 + 16];
          v168 = *(_QWORD *)&v49[v163 + 24];
          v169 = *(_QWORD *)&v49[v163 + 32];
          v170 = *(_QWORD *)&v49[v163 + 40];
          v171 = v49[v163 + 48];
          swift_bridgeObjectRetain();
          sub_1A2993E10(v167, v168, v169, v170, v171);
          *((_QWORD *)v164 + 2) = v167;
          *((_QWORD *)v164 + 3) = v168;
          *((_QWORD *)v164 + 4) = v169;
          *((_QWORD *)v164 + 5) = v170;
          v164[48] = v171;
          v164[49] = v165[49];
          v172 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          v173 = &v164[v172];
          v56 = &v165[v172];
          v174 = &v164[v172];
          v7 = v333;
          v35 = v340;
          v340(v174, &v165[v172], v333);
          v57 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
          v58 = &v173[v57];
          goto LABEL_35;
        }
        if (EnumCaseMultiPayload == 1)
        {
          *v48 = *v49;
          v51 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA20) + 48);
          v52 = &v48[v51];
          v53 = &v49[v51];
          v7 = v333;
          v35 = v340;
          v340(&v48[v51], &v49[v51], v333);
          v54 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA28) + 52);
          v55 = &v52[v54];
          v56 = &v53[v54];
          v340(v55, v56, v333);
          v57 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0) + 68);
          v58 = &v55[v57];
LABEL_35:
          v175 = &v56[v57];
          v3 = v339;
          goto LABEL_42;
        }
        v176 = *((_QWORD *)v49 + 1);
        *(_QWORD *)v48 = *(_QWORD *)v49;
        *((_QWORD *)v48 + 1) = v176;
        v177 = *((_QWORD *)v49 + 3);
        *((_QWORD *)v48 + 2) = *((_QWORD *)v49 + 2);
        *((_QWORD *)v48 + 3) = v177;
        *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v178 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA18) + 80);
        v179 = &v48[v178];
        v180 = &v49[v178];
        v181 = *(_QWORD *)&v49[v178 + 8];
        *(_QWORD *)v179 = *(_QWORD *)&v49[v178];
        *((_QWORD *)v179 + 1) = v181;
        v182 = *(_QWORD *)&v49[v178 + 16];
        v183 = *(_QWORD *)&v49[v178 + 24];
        v185 = *(_QWORD *)&v49[v178 + 32];
        v184 = *((_QWORD *)v180 + 5);
        v186 = v180[48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v182, v183, v185, v184, v186);
        *((_QWORD *)v179 + 2) = v182;
        *((_QWORD *)v179 + 3) = v183;
        *((_QWORD *)v179 + 4) = v185;
        *((_QWORD *)v179 + 5) = v184;
        v179[48] = v186;
        v179[49] = v180[49];
        v187 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v188 = &v179[v187];
        v189 = &v180[v187];
        v190 = &v179[v187];
        v7 = v333;
        v35 = v340;
        v340(v190, &v180[v187], v333);
        v191 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v58 = &v188[v191];
        v175 = &v189[v191];
        v3 = v339;
        goto LABEL_42;
      case 2u:
        v59 = *((_QWORD *)v16 + 1);
        *(_QWORD *)v15 = *(_QWORD *)v16;
        *((_QWORD *)v15 + 1) = v59;
        v60 = *((_QWORD *)v16 + 2);
        v61 = *((_QWORD *)v16 + 3);
        v62 = v7;
        v63 = v3;
        v64 = *((_QWORD *)v16 + 4);
        v65 = *((_QWORD *)v16 + 5);
        v66 = *((_QWORD *)v16 + 6);
        swift_bridgeObjectRetain();
        sub_1A2993E5C(v60, v61, v64);
        *((_QWORD *)v15 + 2) = v60;
        *((_QWORD *)v15 + 3) = v61;
        *((_QWORD *)v15 + 4) = v64;
        *((_QWORD *)v15 + 5) = v65;
        v68 = *((_QWORD *)v16 + 7);
        v67 = *((_QWORD *)v16 + 8);
        *((_QWORD *)v15 + 6) = v66;
        *((_QWORD *)v15 + 7) = v68;
        *((_QWORD *)v15 + 8) = v67;
        swift_bridgeObjectRetain();
        v69 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA08) + 80);
        v70 = &v15[v69];
        v71 = &v16[v69];
        v72 = *(_QWORD *)&v16[v69 + 8];
        *(_QWORD *)v70 = *(_QWORD *)&v16[v69];
        *((_QWORD *)v70 + 1) = v72;
        v73 = *(_QWORD *)&v16[v69 + 16];
        v74 = *(_QWORD *)&v16[v69 + 24];
        v75 = *(_QWORD *)&v16[v69 + 32];
        v76 = *((_QWORD *)v71 + 5);
        LOBYTE(v64) = v71[48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v73, v74, v75, v76, v64);
        *((_QWORD *)v70 + 2) = v73;
        *((_QWORD *)v70 + 3) = v74;
        *((_QWORD *)v70 + 4) = v75;
        *((_QWORD *)v70 + 5) = v76;
        v70[48] = v64;
        v7 = v62;
        v70[49] = v71[49];
        v77 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v78 = &v70[v77];
        v79 = &v71[v77];
        v3 = v63;
        v6 = v338;
        v35 = v340;
        a1 = v341;
        v340(v78, v79, v7);
        v80 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v81 = &v78[v80];
        v82 = &v79[v80];
        v83 = *((_QWORD *)v82 + 1);
        *(_QWORD *)v81 = *(_QWORD *)v82;
        *((_QWORD *)v81 + 1) = v83;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_66;
      case 3u:
        v84 = *((_QWORD *)v16 + 1);
        *(_QWORD *)v15 = *(_QWORD *)v16;
        *((_QWORD *)v15 + 1) = v84;
        v85 = *((_QWORD *)v16 + 3);
        *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
        *((_QWORD *)v15 + 3) = v85;
        v334 = v7;
        v86 = *((_QWORD *)v16 + 4);
        v87 = *((_QWORD *)v16 + 5);
        v88 = v16[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A297208C();
        *((_QWORD *)v15 + 4) = v86;
        *((_QWORD *)v15 + 5) = v87;
        v7 = v334;
        v15[48] = v88;
        v89 = *((_QWORD *)v16 + 7);
        v90 = *((_QWORD *)v16 + 8);
        sub_1A2973524(v89, v90);
        *((_QWORD *)v15 + 7) = v89;
        *((_QWORD *)v15 + 8) = v90;
        v91 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA10) + 48);
        v92 = &v15[v91];
        v93 = &v16[v91];
        v340(&v15[v91], &v16[v91], v334);
        v94 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B3B0);
        v92[v94[13]] = v93[v94[13]];
        v13(&v92[v94[14]], &v93[v94[14]], v11);
        v95 = v94[15];
        v96 = &v92[v95];
        v97 = &v93[v95];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B400);
        v98 = swift_getEnumCaseMultiPayload();
        if (v98 == 2)
        {
          v192 = *((_QWORD *)v97 + 1);
          *(_QWORD *)v96 = *(_QWORD *)v97;
          *((_QWORD *)v96 + 1) = v192;
          v193 = *((_QWORD *)v97 + 3);
          *((_QWORD *)v96 + 2) = *((_QWORD *)v97 + 2);
          *((_QWORD *)v96 + 3) = v193;
          *((_QWORD *)v96 + 4) = *((_QWORD *)v97 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v194 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B410) + 80);
          v195 = &v96[v194];
          v196 = &v97[v194];
          v197 = *(_QWORD *)&v97[v194 + 8];
          *(_QWORD *)v195 = *(_QWORD *)&v97[v194];
          *((_QWORD *)v195 + 1) = v197;
          v198 = *(_QWORD *)&v97[v194 + 16];
          v199 = *(_QWORD *)&v97[v194 + 24];
          v200 = *(_QWORD *)&v97[v194 + 32];
          v201 = *(_QWORD *)&v97[v194 + 40];
          v202 = v97[v194 + 48];
          swift_bridgeObjectRetain();
          sub_1A2993E10(v198, v199, v200, v201, v202);
          *((_QWORD *)v195 + 2) = v198;
          *((_QWORD *)v195 + 3) = v199;
          *((_QWORD *)v195 + 4) = v200;
          *((_QWORD *)v195 + 5) = v201;
          v7 = v334;
          v195[48] = v202;
          v195[49] = v196[49];
          v203 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          v103 = &v195[v203];
          v104 = &v196[v203];
          v204 = &v195[v203];
          v35 = v340;
          v340(v204, &v196[v203], v334);
          v105 = &qword_1EE67B788;
          goto LABEL_40;
        }
        if (v98 == 1)
        {
          *v96 = *v97;
          v99 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A8) + 48);
          v100 = &v96[v99];
          v101 = &v97[v99];
          v35 = v340;
          v340(&v96[v99], &v97[v99], v334);
          v102 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B0) + 52);
          v103 = &v100[v102];
          v104 = &v101[v102];
          v340(v103, v104, v334);
          v105 = &qword_1EE67B7A0;
          goto LABEL_40;
        }
        v205 = *((_QWORD *)v97 + 1);
        *(_QWORD *)v96 = *(_QWORD *)v97;
        *((_QWORD *)v96 + 1) = v205;
        v206 = *((_QWORD *)v97 + 3);
        *((_QWORD *)v96 + 2) = *((_QWORD *)v97 + 2);
        *((_QWORD *)v96 + 3) = v206;
        *((_QWORD *)v96 + 4) = *((_QWORD *)v97 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v207 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B410) + 80);
        v208 = &v96[v207];
        v209 = &v97[v207];
        v210 = *(_QWORD *)&v97[v207 + 8];
        *(_QWORD *)v208 = *(_QWORD *)&v97[v207];
        *((_QWORD *)v208 + 1) = v210;
        v211 = *(_QWORD *)&v97[v207 + 16];
        v212 = *(_QWORD *)&v97[v207 + 24];
        v214 = *(_QWORD *)&v97[v207 + 32];
        v213 = *((_QWORD *)v209 + 5);
        v215 = v209[48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v211, v212, v214, v213, v215);
        *((_QWORD *)v208 + 2) = v211;
        *((_QWORD *)v208 + 3) = v212;
        *((_QWORD *)v208 + 4) = v214;
        *((_QWORD *)v208 + 5) = v213;
        v208[48] = v215;
        v208[49] = v209[49];
        v216 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v217 = &v208[v216];
        v218 = &v209[v216];
        v219 = &v208[v216];
        v7 = v334;
        v35 = v340;
        v340(v219, &v209[v216], v334);
        v220 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v58 = &v217[v220];
        v175 = &v218[v220];
        v3 = v339;
        goto LABEL_42;
      case 4u:
        v106 = *((_QWORD *)v16 + 3);
        if (v106 >= 2)
        {
          v138 = *((_QWORD *)v16 + 1);
          *(_QWORD *)v15 = *(_QWORD *)v16;
          *((_QWORD *)v15 + 1) = v138;
          *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
          *((_QWORD *)v15 + 3) = v106;
          v139 = *((_QWORD *)v16 + 4);
          v140 = *((_QWORD *)v16 + 5);
          v141 = v7;
          v142 = v16[48];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1A297208C();
          *((_QWORD *)v15 + 4) = v139;
          *((_QWORD *)v15 + 5) = v140;
          v15[48] = v142;
          v7 = v141;
          v143 = *((_QWORD *)v16 + 7);
          v144 = *((_QWORD *)v16 + 8);
          sub_1A2973524(v143, v144);
          *((_QWORD *)v15 + 7) = v143;
          *((_QWORD *)v15 + 8) = v144;
        }
        else
        {
          v107 = *((_OWORD *)v16 + 3);
          *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
          *((_OWORD *)v15 + 3) = v107;
          *((_QWORD *)v15 + 8) = *((_QWORD *)v16 + 8);
          v108 = *((_OWORD *)v16 + 1);
          *(_OWORD *)v15 = *(_OWORD *)v16;
          *((_OWORD *)v15 + 1) = v108;
        }
        v35 = v340;
        swift_storeEnumTagMultiPayload();
        goto LABEL_66;
      case 5u:
        v109 = *((_QWORD *)v16 + 1);
        *(_QWORD *)v15 = *(_QWORD *)v16;
        *((_QWORD *)v15 + 1) = v109;
        v110 = *((_QWORD *)v16 + 3);
        *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
        *((_QWORD *)v15 + 3) = v110;
        v335 = v7;
        v111 = *((_QWORD *)v16 + 4);
        v112 = *((_QWORD *)v16 + 5);
        v113 = v16[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A297208C();
        *((_QWORD *)v15 + 4) = v111;
        *((_QWORD *)v15 + 5) = v112;
        v7 = v335;
        v15[48] = v113;
        v114 = *((_QWORD *)v16 + 7);
        v115 = *((_QWORD *)v16 + 8);
        sub_1A2973524(v114, v115);
        *((_QWORD *)v15 + 7) = v114;
        *((_QWORD *)v15 + 8) = v115;
        v116 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA00) + 48);
        v117 = &v15[v116];
        v118 = &v16[v116];
        v340(&v15[v116], &v16[v116], v335);
        v119 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA38);
        v117[v119[13]] = v118[v119[13]];
        v13(&v117[v119[14]], &v118[v119[14]], v11);
        v120 = v119[15];
        v121 = &v117[v120];
        v122 = &v118[v120];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA30);
        v123 = swift_getEnumCaseMultiPayload();
        if (v123 == 2)
        {
          v221 = *((_QWORD *)v122 + 1);
          *(_QWORD *)v121 = *(_QWORD *)v122;
          *((_QWORD *)v121 + 1) = v221;
          v222 = *((_QWORD *)v122 + 3);
          *((_QWORD *)v121 + 2) = *((_QWORD *)v122 + 2);
          *((_QWORD *)v121 + 3) = v222;
          *((_QWORD *)v121 + 4) = *((_QWORD *)v122 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v223 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA40) + 80);
          v224 = &v121[v223];
          v225 = &v122[v223];
          v226 = *(_QWORD *)&v122[v223 + 8];
          *(_QWORD *)v224 = *(_QWORD *)&v122[v223];
          *((_QWORD *)v224 + 1) = v226;
          v227 = *(_QWORD *)&v122[v223 + 16];
          v228 = *(_QWORD *)&v122[v223 + 24];
          v229 = *(_QWORD *)&v122[v223 + 32];
          v230 = *(_QWORD *)&v122[v223 + 40];
          v231 = v122[v223 + 48];
          swift_bridgeObjectRetain();
          sub_1A2993E10(v227, v228, v229, v230, v231);
          *((_QWORD *)v224 + 2) = v227;
          *((_QWORD *)v224 + 3) = v228;
          *((_QWORD *)v224 + 4) = v229;
          *((_QWORD *)v224 + 5) = v230;
          v7 = v335;
          v224[48] = v231;
          v224[49] = v225[49];
          v232 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          v103 = &v224[v232];
          v104 = &v225[v232];
          v233 = &v224[v232];
          v35 = v340;
          v340(v233, &v225[v232], v335);
          v105 = &qword_1EE67B788;
          goto LABEL_40;
        }
        if (v123 == 1)
        {
          *v121 = *v122;
          v124 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA48) + 48);
          v125 = &v121[v124];
          v126 = &v122[v124];
          v35 = v340;
          v340(&v121[v124], &v122[v124], v335);
          v127 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA50) + 52);
          v103 = &v125[v127];
          v104 = &v126[v127];
          v340(v103, v104, v335);
          v105 = &qword_1EE67B7A0;
LABEL_40:
          v234 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v105) + 68);
          v58 = &v103[v234];
          v175 = &v104[v234];
          v3 = v339;
          goto LABEL_42;
        }
        v235 = *((_QWORD *)v122 + 1);
        *(_QWORD *)v121 = *(_QWORD *)v122;
        *((_QWORD *)v121 + 1) = v235;
        v236 = *((_QWORD *)v122 + 3);
        *((_QWORD *)v121 + 2) = *((_QWORD *)v122 + 2);
        *((_QWORD *)v121 + 3) = v236;
        *((_QWORD *)v121 + 4) = *((_QWORD *)v122 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v237 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA40) + 80);
        v238 = &v121[v237];
        v239 = &v122[v237];
        v240 = *(_QWORD *)&v122[v237 + 8];
        *(_QWORD *)v238 = *(_QWORD *)&v122[v237];
        *((_QWORD *)v238 + 1) = v240;
        v241 = *(_QWORD *)&v122[v237 + 16];
        v242 = *(_QWORD *)&v122[v237 + 24];
        v244 = *(_QWORD *)&v122[v237 + 32];
        v243 = *((_QWORD *)v239 + 5);
        v245 = v239[48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v241, v242, v244, v243, v245);
        *((_QWORD *)v238 + 2) = v241;
        *((_QWORD *)v238 + 3) = v242;
        *((_QWORD *)v238 + 4) = v244;
        *((_QWORD *)v238 + 5) = v243;
        v238[48] = v245;
        v238[49] = v239[49];
        v246 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v247 = &v238[v246];
        v248 = &v239[v246];
        v249 = &v238[v246];
        v7 = v335;
        v35 = v340;
        v340(v249, &v239[v246], v335);
        v250 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v58 = &v247[v250];
        v175 = &v248[v250];
        v3 = v339;
LABEL_42:
        v251 = *((_QWORD *)v175 + 1);
        *(_QWORD *)v58 = *(_QWORD *)v175;
        *((_QWORD *)v58 + 1) = v251;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
LABEL_66:
        v272 = v6[8];
        a1[v6[7]] = v3[v6[7]];
        a1[v272] = v3[v272];
        v273 = v6[9];
        v274 = &a1[v273];
        v275 = &v3[v273];
        v276 = type metadata accessor for SFAirDropClient.Identifier();
        v277 = swift_getEnumCaseMultiPayload();
        if (v277 == 1)
        {
          v278 = *((_QWORD *)v275 + 1);
          *(_QWORD *)v274 = *(_QWORD *)v275;
          *((_QWORD *)v274 + 1) = v278;
          *((_QWORD *)v274 + 2) = *((_QWORD *)v275 + 2);
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (v277)
        {
          memcpy(v274, v275, *(_QWORD *)(*(_QWORD *)(v276 - 8) + 64));
        }
        else
        {
          v35(v274, v275, v7);
          swift_storeEnumTagMultiPayload();
        }
        v279 = v6[10];
        v280 = &v341[v279];
        v281 = &v3[v279];
        v35(&v341[v279], &v3[v279], v7);
        v282 = (int *)type metadata accessor for SFAirDropSend.Request();
        v283 = v282[5];
        v284 = v35;
        v285 = &v280[v283];
        v286 = &v281[v283];
        v287 = *(_QWORD *)v286;
        v288 = *((_QWORD *)v286 + 1);
        v289 = v7;
        v290 = v286[16];
        sub_1A2993E70(*(_QWORD *)v286, v288, v290);
        *(_QWORD *)v285 = v287;
        *((_QWORD *)v285 + 1) = v288;
        v285[16] = v290;
        *(_QWORD *)&v280[v282[6]] = *(_QWORD *)&v281[v282[6]];
        v291 = v282[7];
        v292 = &v280[v291];
        v293 = &v281[v291];
        swift_bridgeObjectRetain();
        v284(v292, v293, v289);
        v294 = v282[8];
        v295 = &v280[v294];
        v296 = &v281[v294];
        v297 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE674658);
        v298 = *(_QWORD *)(v297 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v298 + 48))(v296, 1, v297))
        {
          v299 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67D068);
          memcpy(v295, v296, *(_QWORD *)(*(_QWORD *)(v299 - 8) + 64));
        }
        else
        {
          v284(v295, v296, v289);
          v300 = *(int *)(v297 + 68);
          v301 = &v295[v300];
          v302 = &v296[v300];
          v303 = *((_QWORD *)v302 + 1);
          *(_QWORD *)v301 = *(_QWORD *)v302;
          *((_QWORD *)v301 + 1) = v303;
          v304 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v298 + 56);
          swift_retain();
          v304(v295, 0, 1, v297);
        }
        *(_QWORD *)&v280[v282[9]] = *(_QWORD *)&v281[v282[9]];
        v305 = v282[10];
        v306 = &v280[v305];
        v307 = &v281[v305];
        v308 = *(_QWORD *)&v281[v305 + 8];
        swift_bridgeObjectRetain();
        if (v308 >> 60 == 15)
        {
          *(_OWORD *)v306 = *(_OWORD *)v307;
        }
        else
        {
          v309 = *(_QWORD *)v307;
          sub_1A2973524(v309, v308);
          *(_QWORD *)v306 = v309;
          *((_QWORD *)v306 + 1) = v308;
        }
        v310 = v282[11];
        v311 = &v280[v310];
        v312 = &v281[v310];
        v313 = *((_QWORD *)v312 + 1);
        if (v313 >> 60 == 15)
        {
          *(_OWORD *)v311 = *(_OWORD *)v312;
        }
        else
        {
          v314 = *(_QWORD *)v312;
          sub_1A2973524(*(_QWORD *)v312, *((_QWORD *)v312 + 1));
          *(_QWORD *)v311 = v314;
          *((_QWORD *)v311 + 1) = v313;
        }
        v315 = v282[12];
        v316 = &v280[v315];
        v317 = &v281[v315];
        v318 = *((_QWORD *)v317 + 1);
        *(_QWORD *)v316 = *(_QWORD *)v317;
        *((_QWORD *)v316 + 1) = v318;
        v319 = v282[13];
        v320 = &v280[v319];
        v321 = &v281[v319];
        v322 = *((_QWORD *)v321 + 1);
        *(_QWORD *)v320 = *(_QWORD *)v321;
        *((_QWORD *)v320 + 1) = v322;
        v323 = v338[11];
        v324 = v338[12];
        v41 = v341;
        v325 = &v341[v323];
        v326 = &v339[v323];
        v327 = v326[1];
        *v325 = *v326;
        v325[1] = v327;
        v328 = &v341[v324];
        v329 = &v339[v324];
        v330 = v329[1];
        *v328 = *v329;
        v328[1] = v330;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 6u:
        v336 = v7;
        v340(v15, v16, v7);
        v128 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
        v13(&v15[v128[5]], &v16[v128[5]], v11);
        v129 = v128[6];
        v130 = &v15[v129];
        v131 = &v16[v129];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&v16[v129], 1, v11))
        {
          v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
          memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
        }
        else
        {
          v13(v130, v131, v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v130, 0, 1, v11);
        }
        v145 = v128[7];
        v146 = &v15[v145];
        v147 = &v16[v145];
        v148 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
        v149 = *(_QWORD *)(v148 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48))((char *)v147, 1, v148))
        {
          v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
          memcpy(v146, v147, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
          v3 = v339;
        }
        else
        {
          v157 = type metadata accessor for SFAirDropSend.Failure();
          v158 = *(_QWORD *)(v157 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))((char *)v147, 1, v157))
          {
            memcpy(v146, v147, *(_QWORD *)(v149 + 64));
          }
          else
          {
            v252 = swift_getEnumCaseMultiPayload();
            if (v252 == 2)
            {
              v256 = v147[1];
              *v146 = *v147;
              v146[1] = v256;
              *((_OWORD *)v146 + 1) = *((_OWORD *)v147 + 1);
              v257 = v147[5];
              v146[4] = v147[4];
              v146[5] = v257;
              v146[6] = v147[6];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            else if (v252)
            {
              memcpy(v146, v147, *(_QWORD *)(v158 + 64));
            }
            else
            {
              v340((char *)v146, (char *)v147, v336);
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))((char *)v146, 0, 1, v157);
          }
          v3 = v339;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))((char *)v146, 0, 1, v148);
        }
        v258 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F8) + 48);
        v259 = &v15[v258];
        v260 = &v16[v258];
        v261 = type metadata accessor for SFAirDropSend.Failure();
        v262 = swift_getEnumCaseMultiPayload();
        v35 = v340;
        if (v262 == 2)
        {
          v264 = v260[1];
          *v259 = *v260;
          v259[1] = v264;
          *((_OWORD *)v259 + 1) = *((_OWORD *)v260 + 1);
          v265 = v260[5];
          v259[4] = v260[4];
          v259[5] = v265;
          v259[6] = v260[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          if (!v262)
          {
            v263 = (char *)v260;
            v7 = v336;
            v340((char *)v259, v263, v336);
            swift_storeEnumTagMultiPayload();
            goto LABEL_59;
          }
          memcpy(v259, v260, *(_QWORD *)(*(_QWORD *)(v261 - 8) + 64));
        }
        v7 = v336;
LABEL_59:
        swift_storeEnumTagMultiPayload();
        goto LABEL_66;
      case 7u:
        v337 = v7;
        v340(v15, v16, v7);
        v133 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
        v13(&v15[v133[5]], &v16[v133[5]], v11);
        v134 = v133[6];
        v135 = &v15[v134];
        v136 = &v16[v134];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&v16[v134], 1, v11))
        {
          v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
          memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
        }
        else
        {
          v13(v135, v136, v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v135, 0, 1, v11);
        }
        v151 = v133[7];
        v152 = &v15[v151];
        v153 = &v16[v151];
        v154 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
        v155 = *(_QWORD *)(v154 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v155 + 48))((char *)v153, 1, v154))
        {
          v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
          memcpy(v152, v153, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
          v3 = v339;
        }
        else
        {
          v159 = type metadata accessor for SFAirDropSend.Failure();
          v160 = *(_QWORD *)(v159 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))((char *)v153, 1, v159))
          {
            memcpy(v152, v153, *(_QWORD *)(v155 + 64));
            v3 = v339;
          }
          else
          {
            v332 = v159;
            v253 = swift_getEnumCaseMultiPayload();
            if (v253 == 2)
            {
              v266 = v153[1];
              *v152 = *v153;
              v152[1] = v266;
              *((_OWORD *)v152 + 1) = *((_OWORD *)v153 + 1);
              v267 = v153[5];
              v152[4] = v153[4];
              v152[5] = v267;
              v152[6] = v153[6];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v255 = v159;
              swift_storeEnumTagMultiPayload();
              v254 = v160;
            }
            else
            {
              v254 = v160;
              if (v253)
              {
                memcpy(v152, v153, *(_QWORD *)(v160 + 64));
                v255 = v332;
              }
              else
              {
                v340((char *)v152, (char *)v153, v337);
                v255 = v332;
                swift_storeEnumTagMultiPayload();
              }
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v254 + 56))((char *)v152, 0, 1, v255);
            v3 = v339;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v155 + 56))((char *)v152, 0, 1, v154);
        }
        v268 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F0) + 48);
        v269 = &v15[v268];
        v270 = &v16[v268];
        v271 = v270[1];
        *v269 = *v270;
        v269[1] = v271;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        v7 = v337;
        goto LABEL_65;
      default:
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
LABEL_65:
        v35 = v340;
        goto LABEL_66;
    }
  }
  return (char *)v41;
}

uint64_t _s8TransferVwxx_0(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  unint64_t v44;
  uint64_t *v45;
  unint64_t v46;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  int v51;
  int v52;

  v4 = sub_1A2AE3130();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + a2[5];
  v7 = sub_1A2AE30C4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v10 = a1 + a2[6];
  type metadata accessor for SFAirDropSend.Transfer.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA20) + 64);
      goto LABEL_19;
    case 1u:
      swift_bridgeObjectRelease();
      v12 = v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA18) + 48);
      v5(v12, v4);
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA10);
      v9(v12 + *(int *)(v13 + 56), v7);
      v10 = v12 + *(int *)(v13 + 60);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA08);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
        goto LABEL_6;
      if (EnumCaseMultiPayload == 1)
      {
        v48 = v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA20) + 48);
        v5(v48, v4);
        v49 = &qword_1EE67BA28;
        goto LABEL_49;
      }
      if (EnumCaseMultiPayload)
        goto LABEL_35;
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = &qword_1EE67BA18;
      goto LABEL_18;
    case 2u:
      swift_bridgeObjectRelease();
      sub_1A297DB90(*(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32));
      swift_bridgeObjectRelease();
      v15 = &qword_1EE67EA08;
      goto LABEL_18;
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A2973568();
      sub_1A29736C4(*(_QWORD *)(v10 + 56), *(_QWORD *)(v10 + 64));
      v16 = v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA10) + 48);
      v5(v16, v4);
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B3B0);
      v9(v16 + *(int *)(v17 + 56), v7);
      v10 = v16 + *(int *)(v17 + 60);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B400);
      v18 = swift_getEnumCaseMultiPayload();
      if (v18 == 2)
        goto LABEL_11;
      if (v18 == 1)
      {
        v48 = v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A8) + 48);
        v5(v48, v4);
        v49 = &qword_1EE67B7B0;
        goto LABEL_49;
      }
      if (v18)
        goto LABEL_35;
LABEL_11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = &qword_1EE67B410;
      goto LABEL_18;
    case 4u:
      if (*(_QWORD *)(v10 + 24) >= 2uLL)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A2973568();
        sub_1A29736C4(*(_QWORD *)(v10 + 56), *(_QWORD *)(v10 + 64));
      }
      goto LABEL_35;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A2973568();
      sub_1A29736C4(*(_QWORD *)(v10 + 56), *(_QWORD *)(v10 + 64));
      v19 = v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA00) + 48);
      v5(v19, v4);
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA38);
      v9(v19 + *(int *)(v20 + 56), v7);
      v10 = v19 + *(int *)(v20 + 60);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA30);
      v21 = swift_getEnumCaseMultiPayload();
      if (v21 == 2)
        goto LABEL_17;
      if (v21 == 1)
      {
        v48 = v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA48) + 48);
        v5(v48, v4);
        v49 = &qword_1EE67BA50;
LABEL_49:
        v50 = __swift_instantiateConcreteTypeFromMangledName(v49);
        v5(v48 + *(int *)(v50 + 52), v4);
        v24 = &qword_1EE67B7A0;
      }
      else
      {
        if (v21)
          goto LABEL_35;
LABEL_17:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 = &qword_1EE67BA40;
LABEL_18:
        v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v15) + 80);
LABEL_19:
        v22 = v10 + v11;
        swift_bridgeObjectRelease();
        sub_1A2994DD4(*(_QWORD *)(v22 + 16), *(_QWORD *)(v22 + 24), *(_QWORD *)(v22 + 32), *(_QWORD *)(v22 + 40), *(_BYTE *)(v22 + 48));
        v23 = type metadata accessor for SFAirDrop.DeclineAction();
        v5(v22 + *(int *)(v23 + 28), v4);
        v24 = &qword_1EE67B788;
      }
      __swift_instantiateConcreteTypeFromMangledName(v24);
      swift_release();
LABEL_35:
      v37 = a1 + a2[9];
      type metadata accessor for SFAirDropClient.Identifier();
      v38 = swift_getEnumCaseMultiPayload();
      if (v38 == 1)
      {
        swift_bridgeObjectRelease();
      }
      else if (!v38)
      {
        v5(v37, v4);
      }
      v39 = a1 + a2[10];
      v5(v39, v4);
      v40 = (int *)type metadata accessor for SFAirDropSend.Request();
      sub_1A2994E20(*(_QWORD *)(v39 + v40[5]), *(_QWORD *)(v39 + v40[5] + 8), *(_BYTE *)(v39 + v40[5] + 16));
      swift_bridgeObjectRelease();
      v5(v39 + v40[7], v4);
      v41 = v39 + v40[8];
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE674658);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v41, 1, v42))
      {
        v5(v41, v4);
        swift_release();
      }
      swift_bridgeObjectRelease();
      v43 = (uint64_t *)(v39 + v40[10]);
      v44 = v43[1];
      if (v44 >> 60 != 15)
        sub_1A29736C4(*v43, v44);
      v45 = (uint64_t *)(v39 + v40[11]);
      v46 = v45[1];
      if (v46 >> 60 != 15)
        sub_1A29736C4(*v45, v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 6u:
      v5(v10, v4);
      v25 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
      v9(v10 + v25[5], v7);
      v26 = v10 + v25[6];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v26, 1, v7))
        v9(v26, v7);
      v27 = v10 + v25[7];
      v28 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v27, 1, v28))
      {
        v29 = type metadata accessor for SFAirDropSend.Failure();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v27, 1, v29))
        {
          v52 = swift_getEnumCaseMultiPayload();
          if (v52 == 2)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else if (!v52)
          {
            v5(v27, v4);
          }
        }
      }
      v30 = v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F8) + 48);
      type metadata accessor for SFAirDropSend.Failure();
      v31 = swift_getEnumCaseMultiPayload();
      if (v31 == 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_34:
        swift_bridgeObjectRelease();
      }
      else if (!v31)
      {
        v5(v30, v4);
      }
      goto LABEL_35;
    case 7u:
      v5(v10, v4);
      v32 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
      v9(v10 + v32[5], v7);
      v33 = v10 + v32[6];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v33, 1, v7))
        v9(v33, v7);
      v34 = v10 + v32[7];
      v35 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v34, 1, v35))
      {
        v36 = type metadata accessor for SFAirDropSend.Failure();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v34, 1, v36))
        {
          v51 = swift_getEnumCaseMultiPayload();
          if (v51 == 2)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else if (!v51)
          {
            v5(v34, v4);
          }
        }
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F0);
      goto LABEL_34;
    default:
      goto LABEL_35;
  }
}

uint64_t _s8TransferVwcp_0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  unsigned __int8 v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  int EnumCaseMultiPayload;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  int *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  int v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  unint64_t v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  int *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  int v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  int *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  int *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unsigned __int8 v174;
  uint64_t v175;
  char *v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unsigned __int8 v190;
  uint64_t v191;
  char *v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unsigned __int8 v206;
  uint64_t v207;
  char *v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  unsigned __int8 v222;
  uint64_t v223;
  char *v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unsigned __int8 v238;
  uint64_t v239;
  char *v240;
  char *v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  unsigned __int8 v254;
  uint64_t v255;
  char *v256;
  char *v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  int v261;
  int v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  _QWORD *v266;
  _QWORD *v267;
  uint64_t v268;
  int v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  _QWORD *v275;
  _QWORD *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  _QWORD *v280;
  _QWORD *v281;
  uint64_t v282;
  int v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  int *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  void (*v293)(uint64_t, uint64_t, uint64_t);
  uint64_t v294;
  uint64_t v295;
  unsigned __int8 v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  char *v301;
  char *v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  char *v307;
  char *v308;
  uint64_t v309;
  void (*v310)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v311;
  uint64_t v312;
  _OWORD *v313;
  unint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t *v318;
  unint64_t v319;
  uint64_t v320;
  uint64_t v321;
  _QWORD *v322;
  _QWORD *v323;
  uint64_t v324;
  uint64_t v325;
  _QWORD *v326;
  _QWORD *v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  _QWORD *v331;
  _QWORD *v332;
  uint64_t v333;
  _QWORD *v334;
  _QWORD *v335;
  uint64_t v336;
  uint64_t v338;
  void (*v339)(uint64_t, uint64_t);
  uint64_t v340;
  uint64_t v341;
  int *v342;

  v6 = sub_1A2AE3130();
  v339 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v340 = v6;
  v339(a1, a2);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1A2AE30C4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  v342 = a3;
  v338 = a2;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v17 = v15[1];
      *v14 = *v15;
      v14[1] = v17;
      swift_bridgeObjectRetain();
      v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA20) + 64);
      v19 = (char *)v14 + v18;
      v20 = (char *)v15 + v18;
      v21 = *(_QWORD *)((char *)v15 + v18 + 8);
      *(_QWORD *)v19 = *(_QWORD *)((char *)v15 + v18);
      *((_QWORD *)v19 + 1) = v21;
      v22 = *(_QWORD *)((char *)v15 + v18 + 16);
      v23 = *(_QWORD *)((char *)v15 + v18 + 24);
      v24 = a1;
      v25 = a2;
      v26 = *((_QWORD *)v20 + 4);
      v27 = *((_QWORD *)v20 + 5);
      v28 = a3;
      v29 = v20[48];
      swift_bridgeObjectRetain();
      sub_1A2993E10(v22, v23, v26, v27, v29);
      *((_QWORD *)v19 + 2) = v22;
      *((_QWORD *)v19 + 3) = v23;
      *((_QWORD *)v19 + 4) = v26;
      *((_QWORD *)v19 + 5) = v27;
      a2 = v25;
      a1 = v24;
      v19[48] = v29;
      a3 = v28;
      v19[49] = v20[49];
      v30 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      v31 = &v19[v30];
      v32 = &v20[v30];
      v33 = &v19[v30];
      v35 = v339;
      v34 = v340;
      ((void (*)(char *, char *, uint64_t))v339)(v33, &v20[v30], v340);
      v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
      v37 = &v31[v36];
      v38 = &v32[v36];
      v39 = *((_QWORD *)v38 + 1);
      *(_QWORD *)v37 = *(_QWORD *)v38;
      *((_QWORD *)v37 + 1) = v39;
      swift_retain();
      swift_storeEnumTagMultiPayload();
      goto LABEL_65;
    case 1u:
      *v14 = *v15;
      swift_bridgeObjectRetain();
      v40 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA18) + 48);
      v41 = (char *)v14 + v40;
      v42 = (char *)v15 + v40;
      ((void (*)(char *, char *, uint64_t))v339)((char *)v14 + v40, (char *)v15 + v40, v340);
      v43 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA10);
      v41[v43[13]] = v42[v43[13]];
      v12((uint64_t)&v41[v43[14]], (uint64_t)&v42[v43[14]], v10);
      v44 = v43[15];
      v45 = &v41[v44];
      v46 = &v42[v44];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA08);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v164 = *((_QWORD *)v46 + 1);
        *(_QWORD *)v45 = *(_QWORD *)v46;
        *((_QWORD *)v45 + 1) = v164;
        v165 = *((_QWORD *)v46 + 3);
        *((_QWORD *)v45 + 2) = *((_QWORD *)v46 + 2);
        *((_QWORD *)v45 + 3) = v165;
        *((_QWORD *)v45 + 4) = *((_QWORD *)v46 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v166 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA18) + 80);
        v167 = &v45[v166];
        v168 = &v46[v166];
        v169 = *(_QWORD *)&v46[v166 + 8];
        *(_QWORD *)v167 = *(_QWORD *)&v46[v166];
        *((_QWORD *)v167 + 1) = v169;
        v170 = *(_QWORD *)&v46[v166 + 16];
        v171 = *(_QWORD *)&v46[v166 + 24];
        v172 = *(_QWORD *)&v46[v166 + 32];
        v173 = *(_QWORD *)&v46[v166 + 40];
        v174 = v46[v166 + 48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v170, v171, v172, v173, v174);
        *((_QWORD *)v167 + 2) = v170;
        *((_QWORD *)v167 + 3) = v171;
        *((_QWORD *)v167 + 4) = v172;
        *((_QWORD *)v167 + 5) = v173;
        v167[48] = v174;
        v167[49] = v168[49];
        v175 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v176 = &v167[v175];
        v177 = &v168[v175];
        v178 = &v167[v175];
        v35 = v339;
        v34 = v340;
        ((void (*)(char *, char *, uint64_t))v339)(v178, &v168[v175], v340);
        v179 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v55 = &v176[v179];
        v56 = &v177[v179];
        goto LABEL_33;
      }
      if (EnumCaseMultiPayload == 1)
      {
        *v45 = *v46;
        v48 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA20) + 48);
        v49 = &v45[v48];
        v50 = &v46[v48];
        v35 = v339;
        v34 = v340;
        ((void (*)(char *, char *, uint64_t))v339)(&v45[v48], &v46[v48], v340);
        v51 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA28) + 52);
        v52 = &v49[v51];
        v53 = &v50[v51];
        ((void (*)(char *, char *, uint64_t))v339)(v52, v53, v340);
        v54 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0) + 68);
        v55 = &v52[v54];
        v56 = &v53[v54];
LABEL_33:
        a3 = v342;
        a2 = v338;
        goto LABEL_41;
      }
      v180 = *((_QWORD *)v46 + 1);
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *((_QWORD *)v45 + 1) = v180;
      v181 = *((_QWORD *)v46 + 3);
      *((_QWORD *)v45 + 2) = *((_QWORD *)v46 + 2);
      *((_QWORD *)v45 + 3) = v181;
      *((_QWORD *)v45 + 4) = *((_QWORD *)v46 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v182 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA18) + 80);
      v183 = &v45[v182];
      v184 = &v46[v182];
      v185 = *(_QWORD *)&v46[v182 + 8];
      *(_QWORD *)v183 = *(_QWORD *)&v46[v182];
      *((_QWORD *)v183 + 1) = v185;
      v186 = *(_QWORD *)&v46[v182 + 16];
      v187 = *(_QWORD *)&v46[v182 + 24];
      v189 = *(_QWORD *)&v46[v182 + 32];
      v188 = *((_QWORD *)v184 + 5);
      v190 = v184[48];
      swift_bridgeObjectRetain();
      sub_1A2993E10(v186, v187, v189, v188, v190);
      *((_QWORD *)v183 + 2) = v186;
      *((_QWORD *)v183 + 3) = v187;
      *((_QWORD *)v183 + 4) = v189;
      *((_QWORD *)v183 + 5) = v188;
      v183[48] = v190;
      v183[49] = v184[49];
      v191 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      v192 = &v183[v191];
      v193 = &v184[v191];
      v194 = &v183[v191];
      v35 = v339;
      v34 = v340;
      ((void (*)(char *, char *, uint64_t))v339)(v194, &v184[v191], v340);
      v195 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
      v55 = &v192[v195];
      v56 = &v193[v195];
      a3 = v342;
      a2 = v338;
      goto LABEL_41;
    case 2u:
      v57 = v15[1];
      *v14 = *v15;
      v14[1] = v57;
      v58 = v15[2];
      v59 = v15[3];
      v60 = a1;
      v61 = a2;
      v62 = v15[4];
      v63 = v15[5];
      v64 = v15[6];
      swift_bridgeObjectRetain();
      sub_1A2993E5C(v58, v59, v62);
      v14[2] = v58;
      v14[3] = v59;
      v14[4] = v62;
      v14[5] = v63;
      v66 = v15[7];
      v65 = v15[8];
      v14[6] = v64;
      v14[7] = v66;
      v14[8] = v65;
      swift_bridgeObjectRetain();
      v67 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA08) + 80);
      v68 = (char *)v14 + v67;
      v69 = (char *)v15 + v67;
      v70 = *(_QWORD *)((char *)v15 + v67 + 8);
      *(_QWORD *)v68 = *(_QWORD *)((char *)v15 + v67);
      *((_QWORD *)v68 + 1) = v70;
      v71 = *(_QWORD *)((char *)v15 + v67 + 16);
      v72 = *(_QWORD *)((char *)v15 + v67 + 24);
      v73 = *(_QWORD *)((char *)v15 + v67 + 32);
      v74 = *((_QWORD *)v69 + 5);
      LOBYTE(v62) = v69[48];
      swift_bridgeObjectRetain();
      sub_1A2993E10(v71, v72, v73, v74, v62);
      *((_QWORD *)v68 + 2) = v71;
      *((_QWORD *)v68 + 3) = v72;
      *((_QWORD *)v68 + 4) = v73;
      *((_QWORD *)v68 + 5) = v74;
      v68[48] = v62;
      a2 = v61;
      a1 = v60;
      v68[49] = v69[49];
      v75 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      v76 = &v68[v75];
      v77 = &v69[v75];
      v34 = v340;
      a3 = v342;
      v35 = v339;
      ((void (*)(char *, char *, uint64_t))v339)(v76, v77, v340);
      v78 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
      v79 = &v76[v78];
      v80 = &v77[v78];
      v81 = *((_QWORD *)v80 + 1);
      *(_QWORD *)v79 = *(_QWORD *)v80;
      *((_QWORD *)v79 + 1) = v81;
      swift_retain();
      swift_storeEnumTagMultiPayload();
      goto LABEL_65;
    case 3u:
      v82 = v15[1];
      *v14 = *v15;
      v14[1] = v82;
      v83 = v15[3];
      v14[2] = v15[2];
      v14[3] = v83;
      v84 = v15[4];
      v85 = v15[5];
      v86 = *((_BYTE *)v15 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A297208C();
      v14[4] = v84;
      v14[5] = v85;
      *((_BYTE *)v14 + 48) = v86;
      v87 = v15[7];
      v88 = v15[8];
      sub_1A2973524(v87, v88);
      v14[7] = v87;
      v14[8] = v88;
      v89 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA10) + 48);
      v90 = (char *)v14 + v89;
      v91 = (char *)v15 + v89;
      ((void (*)(char *, char *, uint64_t))v339)((char *)v14 + v89, (char *)v15 + v89, v340);
      v92 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B3B0);
      v90[v92[13]] = v91[v92[13]];
      v12((uint64_t)&v90[v92[14]], (uint64_t)&v91[v92[14]], v10);
      v93 = v92[15];
      v94 = &v90[v93];
      v95 = &v91[v93];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B400);
      v96 = swift_getEnumCaseMultiPayload();
      if (v96 == 2)
      {
        v196 = *((_QWORD *)v95 + 1);
        *(_QWORD *)v94 = *(_QWORD *)v95;
        *((_QWORD *)v94 + 1) = v196;
        v197 = *((_QWORD *)v95 + 3);
        *((_QWORD *)v94 + 2) = *((_QWORD *)v95 + 2);
        *((_QWORD *)v94 + 3) = v197;
        *((_QWORD *)v94 + 4) = *((_QWORD *)v95 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v198 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B410) + 80);
        v199 = &v94[v198];
        v200 = &v95[v198];
        v201 = *(_QWORD *)&v95[v198 + 8];
        *(_QWORD *)v199 = *(_QWORD *)&v95[v198];
        *((_QWORD *)v199 + 1) = v201;
        v202 = *(_QWORD *)&v95[v198 + 16];
        v203 = *(_QWORD *)&v95[v198 + 24];
        v204 = *(_QWORD *)&v95[v198 + 32];
        v205 = *(_QWORD *)&v95[v198 + 40];
        v206 = v95[v198 + 48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v202, v203, v204, v205, v206);
        *((_QWORD *)v199 + 2) = v202;
        *((_QWORD *)v199 + 3) = v203;
        *((_QWORD *)v199 + 4) = v204;
        *((_QWORD *)v199 + 5) = v205;
        v199[48] = v206;
        v199[49] = v200[49];
        v207 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v208 = &v199[v207];
        v209 = &v200[v207];
        v210 = &v199[v207];
        v35 = v339;
        v34 = v340;
        ((void (*)(char *, char *, uint64_t))v339)(v210, &v200[v207], v340);
        v211 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v55 = &v208[v211];
        v56 = &v209[v211];
        goto LABEL_36;
      }
      if (v96 == 1)
      {
        *v94 = *v95;
        v97 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A8) + 48);
        v98 = &v94[v97];
        v99 = &v95[v97];
        v35 = v339;
        v34 = v340;
        ((void (*)(char *, char *, uint64_t))v339)(&v94[v97], &v95[v97], v340);
        v100 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B0) + 52);
        v101 = &v98[v100];
        v102 = &v99[v100];
        ((void (*)(char *, char *, uint64_t))v339)(v101, v102, v340);
        v103 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0) + 68);
        v55 = &v101[v103];
        v56 = &v102[v103];
LABEL_36:
        a3 = v342;
        a2 = v338;
        goto LABEL_41;
      }
      v212 = *((_QWORD *)v95 + 1);
      *(_QWORD *)v94 = *(_QWORD *)v95;
      *((_QWORD *)v94 + 1) = v212;
      v213 = *((_QWORD *)v95 + 3);
      *((_QWORD *)v94 + 2) = *((_QWORD *)v95 + 2);
      *((_QWORD *)v94 + 3) = v213;
      *((_QWORD *)v94 + 4) = *((_QWORD *)v95 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v214 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B410) + 80);
      v215 = &v94[v214];
      v216 = &v95[v214];
      v217 = *(_QWORD *)&v95[v214 + 8];
      *(_QWORD *)v215 = *(_QWORD *)&v95[v214];
      *((_QWORD *)v215 + 1) = v217;
      v218 = *(_QWORD *)&v95[v214 + 16];
      v219 = *(_QWORD *)&v95[v214 + 24];
      v221 = *(_QWORD *)&v95[v214 + 32];
      v220 = *((_QWORD *)v216 + 5);
      v222 = v216[48];
      swift_bridgeObjectRetain();
      sub_1A2993E10(v218, v219, v221, v220, v222);
      *((_QWORD *)v215 + 2) = v218;
      *((_QWORD *)v215 + 3) = v219;
      *((_QWORD *)v215 + 4) = v221;
      *((_QWORD *)v215 + 5) = v220;
      v215[48] = v222;
      v215[49] = v216[49];
      v223 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      v224 = &v215[v223];
      v225 = &v216[v223];
      v226 = &v215[v223];
      v35 = v339;
      v34 = v340;
      ((void (*)(char *, char *, uint64_t))v339)(v226, &v216[v223], v340);
      v227 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
      v55 = &v224[v227];
      v56 = &v225[v227];
      a3 = v342;
      a2 = v338;
      goto LABEL_41;
    case 4u:
      v104 = v15[3];
      if (v104 >= 2)
      {
        v140 = v15[1];
        *v14 = *v15;
        v14[1] = v140;
        v14[2] = v15[2];
        v14[3] = v104;
        v141 = v15[4];
        v142 = v15[5];
        v143 = a1;
        v144 = a2;
        v145 = *((_BYTE *)v15 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A297208C();
        v14[4] = v141;
        v14[5] = v142;
        *((_BYTE *)v14 + 48) = v145;
        a2 = v144;
        a1 = v143;
        v146 = v15[7];
        v147 = v15[8];
        sub_1A2973524(v146, v147);
        v14[7] = v146;
        v14[8] = v147;
      }
      else
      {
        v105 = *((_OWORD *)v15 + 3);
        *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
        *((_OWORD *)v14 + 3) = v105;
        v14[8] = v15[8];
        v106 = *((_OWORD *)v15 + 1);
        *(_OWORD *)v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v106;
      }
      v35 = v339;
      v34 = v340;
      swift_storeEnumTagMultiPayload();
      goto LABEL_65;
    case 5u:
      v107 = v15[1];
      *v14 = *v15;
      v14[1] = v107;
      v108 = v15[3];
      v14[2] = v15[2];
      v14[3] = v108;
      v109 = v15[4];
      v110 = v15[5];
      v111 = *((_BYTE *)v15 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A297208C();
      v14[4] = v109;
      v14[5] = v110;
      *((_BYTE *)v14 + 48) = v111;
      v112 = v15[7];
      v113 = v15[8];
      sub_1A2973524(v112, v113);
      v14[7] = v112;
      v14[8] = v113;
      v114 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA00) + 48);
      v115 = (char *)v14 + v114;
      v116 = (char *)v15 + v114;
      ((void (*)(char *, char *, uint64_t))v339)((char *)v14 + v114, (char *)v15 + v114, v340);
      v117 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA38);
      v115[v117[13]] = v116[v117[13]];
      v12((uint64_t)&v115[v117[14]], (uint64_t)&v116[v117[14]], v10);
      v118 = v117[15];
      v119 = &v115[v118];
      v120 = &v116[v118];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA30);
      v121 = swift_getEnumCaseMultiPayload();
      if (v121 == 2)
      {
        v228 = *((_QWORD *)v120 + 1);
        *(_QWORD *)v119 = *(_QWORD *)v120;
        *((_QWORD *)v119 + 1) = v228;
        v229 = *((_QWORD *)v120 + 3);
        *((_QWORD *)v119 + 2) = *((_QWORD *)v120 + 2);
        *((_QWORD *)v119 + 3) = v229;
        *((_QWORD *)v119 + 4) = *((_QWORD *)v120 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v230 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA40) + 80);
        v231 = &v119[v230];
        v232 = &v120[v230];
        v233 = *(_QWORD *)&v120[v230 + 8];
        *(_QWORD *)v231 = *(_QWORD *)&v120[v230];
        *((_QWORD *)v231 + 1) = v233;
        v234 = *(_QWORD *)&v120[v230 + 16];
        v235 = *(_QWORD *)&v120[v230 + 24];
        v236 = *(_QWORD *)&v120[v230 + 32];
        v237 = *(_QWORD *)&v120[v230 + 40];
        v238 = v120[v230 + 48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v234, v235, v236, v237, v238);
        *((_QWORD *)v231 + 2) = v234;
        *((_QWORD *)v231 + 3) = v235;
        *((_QWORD *)v231 + 4) = v236;
        *((_QWORD *)v231 + 5) = v237;
        v231[48] = v238;
        v231[49] = v232[49];
        v239 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v240 = &v231[v239];
        v241 = &v232[v239];
        v242 = &v231[v239];
        v35 = v339;
        v34 = v340;
        ((void (*)(char *, char *, uint64_t))v339)(v242, &v232[v239], v340);
        v243 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v55 = &v240[v243];
        v56 = &v241[v243];
        goto LABEL_39;
      }
      if (v121 == 1)
      {
        *v119 = *v120;
        v122 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA48) + 48);
        v123 = &v119[v122];
        v124 = &v120[v122];
        v35 = v339;
        v34 = v340;
        ((void (*)(char *, char *, uint64_t))v339)(&v119[v122], &v120[v122], v340);
        v125 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA50) + 52);
        v126 = &v123[v125];
        v127 = &v124[v125];
        ((void (*)(char *, char *, uint64_t))v339)(v126, v127, v340);
        v128 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0) + 68);
        v55 = &v126[v128];
        v56 = &v127[v128];
LABEL_39:
        a3 = v342;
        a2 = v338;
        goto LABEL_41;
      }
      v244 = *((_QWORD *)v120 + 1);
      *(_QWORD *)v119 = *(_QWORD *)v120;
      *((_QWORD *)v119 + 1) = v244;
      v245 = *((_QWORD *)v120 + 3);
      *((_QWORD *)v119 + 2) = *((_QWORD *)v120 + 2);
      *((_QWORD *)v119 + 3) = v245;
      *((_QWORD *)v119 + 4) = *((_QWORD *)v120 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v246 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA40) + 80);
      v247 = &v119[v246];
      v248 = &v120[v246];
      v249 = *(_QWORD *)&v120[v246 + 8];
      *(_QWORD *)v247 = *(_QWORD *)&v120[v246];
      *((_QWORD *)v247 + 1) = v249;
      v250 = *(_QWORD *)&v120[v246 + 16];
      v251 = *(_QWORD *)&v120[v246 + 24];
      v253 = *(_QWORD *)&v120[v246 + 32];
      v252 = *((_QWORD *)v248 + 5);
      v254 = v248[48];
      swift_bridgeObjectRetain();
      sub_1A2993E10(v250, v251, v253, v252, v254);
      *((_QWORD *)v247 + 2) = v250;
      *((_QWORD *)v247 + 3) = v251;
      *((_QWORD *)v247 + 4) = v253;
      *((_QWORD *)v247 + 5) = v252;
      v247[48] = v254;
      v247[49] = v248[49];
      v255 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      v256 = &v247[v255];
      v257 = &v248[v255];
      v258 = &v247[v255];
      v35 = v339;
      v34 = v340;
      ((void (*)(char *, char *, uint64_t))v339)(v258, &v248[v255], v340);
      v259 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
      v55 = &v256[v259];
      v56 = &v257[v259];
      a3 = v342;
      a2 = v338;
LABEL_41:
      v260 = *((_QWORD *)v56 + 1);
      *(_QWORD *)v55 = *(_QWORD *)v56;
      *((_QWORD *)v55 + 1) = v260;
      swift_retain();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
LABEL_65:
      v278 = a3[8];
      *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
      *(_BYTE *)(a1 + v278) = *(_BYTE *)(a2 + v278);
      v279 = a3[9];
      v280 = (_QWORD *)(a1 + v279);
      v281 = (_QWORD *)(a2 + v279);
      v282 = type metadata accessor for SFAirDropClient.Identifier();
      v283 = swift_getEnumCaseMultiPayload();
      if (v283 == 1)
      {
        v284 = v281[1];
        *v280 = *v281;
        v280[1] = v284;
        v280[2] = v281[2];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else if (v283)
      {
        memcpy(v280, v281, *(_QWORD *)(*(_QWORD *)(v282 - 8) + 64));
      }
      else
      {
        ((void (*)(_QWORD *, _QWORD *, uint64_t))v35)(v280, v281, v34);
        swift_storeEnumTagMultiPayload();
      }
      v285 = a3[10];
      v341 = a1;
      v286 = a1 + v285;
      v287 = a2 + v285;
      ((void (*)(uint64_t, uint64_t, uint64_t))v35)(a1 + v285, a2 + v285, v34);
      v288 = (int *)type metadata accessor for SFAirDropSend.Request();
      v289 = v288[5];
      v290 = v34;
      v291 = v286 + v289;
      v292 = v287 + v289;
      v293 = (void (*)(uint64_t, uint64_t, uint64_t))v35;
      v294 = *(_QWORD *)v292;
      v295 = *(_QWORD *)(v292 + 8);
      v296 = *(_BYTE *)(v292 + 16);
      sub_1A2993E70(*(_QWORD *)v292, v295, v296);
      *(_QWORD *)v291 = v294;
      *(_QWORD *)(v291 + 8) = v295;
      *(_BYTE *)(v291 + 16) = v296;
      *(_QWORD *)(v286 + v288[6]) = *(_QWORD *)(v287 + v288[6]);
      v297 = v288[7];
      v298 = v286 + v297;
      v299 = v287 + v297;
      swift_bridgeObjectRetain();
      v293(v298, v299, v290);
      v300 = v288[8];
      v301 = (char *)(v286 + v300);
      v302 = (char *)(v287 + v300);
      v303 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE674658);
      v304 = *(_QWORD *)(v303 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v304 + 48))(v302, 1, v303))
      {
        v305 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67D068);
        memcpy(v301, v302, *(_QWORD *)(*(_QWORD *)(v305 - 8) + 64));
      }
      else
      {
        v293((uint64_t)v301, (uint64_t)v302, v290);
        v306 = *(int *)(v303 + 68);
        v307 = &v301[v306];
        v308 = &v302[v306];
        v309 = *((_QWORD *)v308 + 1);
        *(_QWORD *)v307 = *(_QWORD *)v308;
        *((_QWORD *)v307 + 1) = v309;
        v310 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v304 + 56);
        swift_retain();
        v310(v301, 0, 1, v303);
      }
      *(_QWORD *)(v286 + v288[9]) = *(_QWORD *)(v287 + v288[9]);
      v311 = v288[10];
      v312 = v286 + v311;
      v313 = (_OWORD *)(v287 + v311);
      v314 = *(_QWORD *)(v287 + v311 + 8);
      swift_bridgeObjectRetain();
      if (v314 >> 60 == 15)
      {
        *(_OWORD *)v312 = *v313;
      }
      else
      {
        v315 = *(_QWORD *)v313;
        sub_1A2973524(v315, v314);
        *(_QWORD *)v312 = v315;
        *(_QWORD *)(v312 + 8) = v314;
      }
      v316 = v288[11];
      v317 = v286 + v316;
      v318 = (uint64_t *)(v287 + v316);
      v319 = v318[1];
      if (v319 >> 60 == 15)
      {
        *(_OWORD *)v317 = *(_OWORD *)v318;
      }
      else
      {
        v320 = *v318;
        sub_1A2973524(*v318, v318[1]);
        *(_QWORD *)v317 = v320;
        *(_QWORD *)(v317 + 8) = v319;
      }
      v321 = v288[12];
      v322 = (_QWORD *)(v286 + v321);
      v323 = (_QWORD *)(v287 + v321);
      v324 = v323[1];
      *v322 = *v323;
      v322[1] = v324;
      v325 = v288[13];
      v326 = (_QWORD *)(v286 + v325);
      v327 = (_QWORD *)(v287 + v325);
      v328 = v327[1];
      *v326 = *v327;
      v326[1] = v328;
      v329 = v342[11];
      v330 = v342[12];
      v331 = (_QWORD *)(v341 + v329);
      v332 = (_QWORD *)(v338 + v329);
      v333 = v332[1];
      *v331 = *v332;
      v331[1] = v333;
      v334 = (_QWORD *)(v341 + v330);
      v335 = (_QWORD *)(v338 + v330);
      v336 = v335[1];
      *v334 = *v335;
      v334[1] = v336;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return v341;
    case 6u:
      v129 = a2;
      ((void (*)(_QWORD *, _QWORD *, uint64_t))v339)(v14, v15, v340);
      v130 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
      v12((uint64_t)v14 + v130[5], (uint64_t)v15 + v130[5], v10);
      v131 = v130[6];
      v132 = (char *)v14 + v131;
      v133 = (char *)v15 + v131;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))((char *)v15 + v131, 1, v10))
      {
        v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
        memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
      }
      else
      {
        v12((uint64_t)v132, (uint64_t)v133, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v132, 0, 1, v10);
      }
      v148 = v130[7];
      v149 = (_QWORD *)((char *)v14 + v148);
      v150 = (_QWORD *)((char *)v15 + v148);
      v151 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
      v152 = *(_QWORD *)(v151 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v152 + 48))(v150, 1, v151))
      {
        v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
        memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
        a3 = v342;
      }
      else
      {
        v160 = type metadata accessor for SFAirDropSend.Failure();
        v161 = *(_QWORD *)(v160 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v161 + 48))(v150, 1, v160))
        {
          memcpy(v149, v150, *(_QWORD *)(v152 + 64));
        }
        else
        {
          v261 = swift_getEnumCaseMultiPayload();
          if (v261 == 2)
          {
            v263 = v150[1];
            *v149 = *v150;
            v149[1] = v263;
            *((_OWORD *)v149 + 1) = *((_OWORD *)v150 + 1);
            v264 = v150[5];
            v149[4] = v150[4];
            v149[5] = v264;
            v149[6] = v150[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (v261)
          {
            memcpy(v149, v150, *(_QWORD *)(v161 + 64));
          }
          else
          {
            ((void (*)(_QWORD *, _QWORD *, uint64_t))v339)(v149, v150, v340);
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v161 + 56))(v149, 0, 1, v160);
        }
        a3 = v342;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v149, 0, 1, v151);
      }
      v265 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F8) + 48);
      v266 = (_QWORD *)((char *)v14 + v265);
      v267 = (_QWORD *)((char *)v15 + v265);
      v268 = type metadata accessor for SFAirDropSend.Failure();
      v269 = swift_getEnumCaseMultiPayload();
      v34 = v340;
      if (v269 == 2)
      {
        v270 = v267[1];
        *v266 = *v267;
        v266[1] = v270;
        *((_OWORD *)v266 + 1) = *((_OWORD *)v267 + 1);
        v271 = v267[5];
        v266[4] = v267[4];
        v266[5] = v271;
        v266[6] = v267[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (!v269)
        {
          ((void (*)(_QWORD *, _QWORD *, uint64_t))v339)(v266, v267, v340);
          v35 = v339;
          swift_storeEnumTagMultiPayload();
          a2 = v129;
          goto LABEL_58;
        }
        memcpy(v266, v267, *(_QWORD *)(*(_QWORD *)(v268 - 8) + 64));
      }
      a2 = v129;
      v35 = v339;
LABEL_58:
      swift_storeEnumTagMultiPayload();
      goto LABEL_65;
    case 7u:
      ((void (*)(_QWORD *, _QWORD *, uint64_t))v339)(v14, v15, v340);
      v135 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
      v12((uint64_t)v14 + v135[5], (uint64_t)v15 + v135[5], v10);
      v136 = v135[6];
      v137 = (char *)v14 + v136;
      v138 = (char *)v15 + v136;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))((char *)v15 + v136, 1, v10))
      {
        v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
        memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
      }
      else
      {
        v12((uint64_t)v137, (uint64_t)v138, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v137, 0, 1, v10);
      }
      v154 = v135[7];
      v155 = (_QWORD *)((char *)v14 + v154);
      v156 = (_QWORD *)((char *)v15 + v154);
      v157 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
      v158 = *(_QWORD *)(v157 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v158 + 48))(v156, 1, v157))
      {
        v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
        memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
        a3 = v342;
      }
      else
      {
        v162 = type metadata accessor for SFAirDropSend.Failure();
        v163 = *(_QWORD *)(v162 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v163 + 48))(v156, 1, v162))
        {
          memcpy(v155, v156, *(_QWORD *)(v158 + 64));
        }
        else
        {
          v262 = swift_getEnumCaseMultiPayload();
          if (v262 == 2)
          {
            v272 = v156[1];
            *v155 = *v156;
            v155[1] = v272;
            *((_OWORD *)v155 + 1) = *((_OWORD *)v156 + 1);
            v273 = v156[5];
            v155[4] = v156[4];
            v155[5] = v273;
            v155[6] = v156[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (v262)
          {
            memcpy(v155, v156, *(_QWORD *)(v163 + 64));
          }
          else
          {
            ((void (*)(_QWORD *, _QWORD *, uint64_t))v339)(v155, v156, v340);
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v163 + 56))(v155, 0, 1, v162);
        }
        a3 = v342;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v155, 0, 1, v157);
      }
      v274 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F0) + 48);
      v275 = (_QWORD *)((char *)v14 + v274);
      v276 = (_QWORD *)((char *)v15 + v274);
      v277 = v276[1];
      *v275 = *v276;
      v275[1] = v277;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      a2 = v338;
      goto LABEL_64;
    default:
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
LABEL_64:
      v35 = v339;
      v34 = v340;
      goto LABEL_65;
  }
}

uint64_t _s8TransferVwca_0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  unsigned __int8 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int EnumCaseMultiPayload;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  void (*v76)(char *, char *, uint64_t);
  int *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  int v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t *v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  void (*v101)(char *, char *, uint64_t);
  int *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  int v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  int *v111;
  int *v112;
  void (*v113)(char *, char *, uint64_t);
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  int *v118;
  int *v119;
  void (*v120)(char *, char *, uint64_t);
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  _QWORD *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unsigned __int8 v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unsigned __int8 v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unsigned __int8 v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unsigned __int8 v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unsigned __int8 v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unsigned __int8 v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  int v217;
  int v218;
  uint64_t v219;
  _QWORD *v220;
  char *v221;
  uint64_t v222;
  int v223;
  uint64_t v224;
  _QWORD *v225;
  char *v226;
  uint64_t v227;
  _QWORD *v228;
  _QWORD *v229;
  uint64_t v230;
  int v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  int *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  void (*v241)(uint64_t, uint64_t, uint64_t);
  unsigned __int8 v242;
  uint64_t v243;
  uint64_t v244;
  unsigned __int8 v245;
  uint64_t v246;
  char *v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t (*v251)(char *, uint64_t, uint64_t);
  int v252;
  int v253;
  uint64_t v254;
  char *v255;
  char *v256;
  uint64_t v257;
  void (*v258)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v259;
  uint64_t v260;
  uint64_t *v261;
  uint64_t *v262;
  unint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  unint64_t v267;
  uint64_t v268;
  uint64_t *v269;
  uint64_t *v270;
  unint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  unint64_t v275;
  uint64_t v276;
  _QWORD *v277;
  _QWORD *v278;
  uint64_t v279;
  _QWORD *v280;
  _QWORD *v281;
  uint64_t v282;
  _QWORD *v283;
  _QWORD *v284;
  uint64_t v285;
  _QWORD *v286;
  _QWORD *v287;
  uint64_t v289;
  char *v290;
  char *v291;
  uint64_t v292;
  void (*v293)(_QWORD *, char *, uint64_t);
  void (*v294)(_QWORD *, char *, uint64_t);
  void (*v295)(uint64_t, uint64_t);
  void (*v296)(uint64_t, uint64_t);
  void (*v297)(uint64_t, uint64_t);
  void (*v298)(uint64_t, uint64_t);
  void (*v299)(uint64_t, uint64_t);
  _QWORD *v300;
  _QWORD *v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  int *v305;
  uint64_t v306;

  v6 = sub_1A2AE3130();
  v302 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v302 + 24);
  v306 = v6;
  v7(a1, a2);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1A2AE30C4();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 24))(v9, v10, v11);
  v304 = a2;
  v305 = a3;
  if (a1 != a2)
  {
    v13 = a3[6];
    v14 = (_QWORD *)(a1 + v13);
    v15 = (char *)(a2 + v13);
    sub_1A297DA3C(a1 + v13, type metadata accessor for SFAirDropSend.Transfer.State);
    v16 = type metadata accessor for SFAirDropSend.Transfer.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *v14 = *(_QWORD *)v15;
        v14[1] = *((_QWORD *)v15 + 1);
        swift_bridgeObjectRetain();
        v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA20) + 64);
        v18 = (char *)v14 + v17;
        v19 = &v15[v17];
        *(_QWORD *)v18 = *(_QWORD *)&v15[v17];
        *((_QWORD *)v18 + 1) = *(_QWORD *)&v15[v17 + 8];
        v20 = *(_QWORD *)&v15[v17 + 16];
        v21 = *(_QWORD *)&v15[v17 + 24];
        v22 = *((_QWORD *)v19 + 4);
        v23 = *((_QWORD *)v19 + 5);
        v24 = v7;
        v25 = v19[48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v20, v21, v22, v23, v25);
        *((_QWORD *)v18 + 2) = v20;
        *((_QWORD *)v18 + 3) = v21;
        *((_QWORD *)v18 + 4) = v22;
        *((_QWORD *)v18 + 5) = v23;
        v18[48] = v25;
        v7 = v24;
        v18[49] = v19[49];
        v26 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v27 = &v18[v26];
        a3 = v305;
        v28 = &v19[v26];
        (*(void (**)(char *, char *, uint64_t))(v302 + 16))(v27, &v19[v26], v306);
        v29 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v30 = &v27[v29];
        v31 = &v28[v29];
        v32 = *((_QWORD *)v31 + 1);
        *(_QWORD *)v30 = *(_QWORD *)v31;
        *((_QWORD *)v30 + 1) = v32;
        swift_retain();
        goto LABEL_61;
      case 1u:
        v295 = v7;
        *v14 = *(_QWORD *)v15;
        swift_bridgeObjectRetain();
        v33 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA18) + 48);
        v34 = (char *)v14 + v33;
        v35 = &v15[v33];
        v36 = *(void (**)(char *, char *, uint64_t))(v302 + 16);
        v36(v34, &v15[v33], v306);
        v37 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA10);
        v34[v37[13]] = v35[v37[13]];
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(&v34[v37[14]], &v35[v37[14]], v11);
        v38 = v37[15];
        v39 = &v34[v38];
        v40 = &v35[v38];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA08);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          *(_QWORD *)v39 = *(_QWORD *)v40;
          *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
          *((_QWORD *)v39 + 2) = *((_QWORD *)v40 + 2);
          *((_QWORD *)v39 + 3) = *((_QWORD *)v40 + 3);
          *((_QWORD *)v39 + 4) = *((_QWORD *)v40 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v149 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA18) + 80);
          v150 = &v39[v149];
          v151 = &v40[v149];
          *(_QWORD *)v150 = *(_QWORD *)&v40[v149];
          *((_QWORD *)v150 + 1) = *(_QWORD *)&v40[v149 + 8];
          v152 = *(_QWORD *)&v40[v149 + 16];
          v153 = *(_QWORD *)&v40[v149 + 24];
          v154 = *(_QWORD *)&v40[v149 + 32];
          v155 = *(_QWORD *)&v40[v149 + 40];
          v156 = v40[v149 + 48];
          swift_bridgeObjectRetain();
          sub_1A2993E10(v152, v153, v154, v155, v156);
          *((_QWORD *)v150 + 2) = v152;
          *((_QWORD *)v150 + 3) = v153;
          *((_QWORD *)v150 + 4) = v154;
          *((_QWORD *)v150 + 5) = v155;
          v150[48] = v156;
          v150[49] = v151[49];
          v157 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          v46 = &v150[v157];
          a3 = v305;
          v47 = &v151[v157];
          v36(v46, &v151[v157], v306);
          v48 = &qword_1EE67B788;
          goto LABEL_33;
        }
        if (EnumCaseMultiPayload == 1)
        {
          *v39 = *v40;
          v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA20) + 48);
          v43 = &v39[v42];
          v44 = &v40[v42];
          v36(&v39[v42], &v40[v42], v306);
          v45 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA28) + 52);
          v46 = &v43[v45];
          v47 = &v44[v45];
          v36(v46, v47, v306);
          v48 = &qword_1EE67B7A0;
LABEL_33:
          v158 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v48) + 68);
          v159 = &v46[v158];
          v160 = &v47[v158];
          v7 = v295;
          goto LABEL_40;
        }
        *(_QWORD *)v39 = *(_QWORD *)v40;
        *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
        *((_QWORD *)v39 + 2) = *((_QWORD *)v40 + 2);
        *((_QWORD *)v39 + 3) = *((_QWORD *)v40 + 3);
        *((_QWORD *)v39 + 4) = *((_QWORD *)v40 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v161 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA18) + 80);
        v162 = &v39[v161];
        v163 = &v40[v161];
        *(_QWORD *)v162 = *(_QWORD *)&v40[v161];
        *((_QWORD *)v162 + 1) = *(_QWORD *)&v40[v161 + 8];
        v164 = *(_QWORD *)&v40[v161 + 16];
        v165 = *(_QWORD *)&v40[v161 + 24];
        v167 = *(_QWORD *)&v40[v161 + 32];
        v166 = *((_QWORD *)v163 + 5);
        v168 = v163[48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v164, v165, v167, v166, v168);
        *((_QWORD *)v162 + 2) = v164;
        *((_QWORD *)v162 + 3) = v165;
        *((_QWORD *)v162 + 4) = v167;
        *((_QWORD *)v162 + 5) = v166;
        v162[48] = v168;
        v162[49] = v163[49];
        v169 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v170 = &v162[v169];
        v171 = &v163[v169];
        v36(&v162[v169], &v163[v169], v306);
        v172 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v159 = &v170[v172];
        v160 = &v171[v172];
        a3 = v305;
        v7 = v295;
        goto LABEL_40;
      case 2u:
        *v14 = *(_QWORD *)v15;
        v14[1] = *((_QWORD *)v15 + 1);
        v49 = *((_QWORD *)v15 + 2);
        v50 = *((_QWORD *)v15 + 3);
        v296 = v7;
        v51 = *((_QWORD *)v15 + 4);
        v52 = *((_QWORD *)v15 + 5);
        v53 = *((_QWORD *)v15 + 6);
        swift_bridgeObjectRetain();
        sub_1A2993E5C(v49, v50, v51);
        v14[2] = v49;
        v14[3] = v50;
        v14[4] = v51;
        v14[5] = v52;
        v14[6] = v53;
        v14[7] = *((_QWORD *)v15 + 7);
        v14[8] = *((_QWORD *)v15 + 8);
        swift_bridgeObjectRetain();
        v54 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA08) + 80);
        v55 = (char *)v14 + v54;
        v56 = &v15[v54];
        *(_QWORD *)v55 = *(_QWORD *)&v15[v54];
        *((_QWORD *)v55 + 1) = *(_QWORD *)&v15[v54 + 8];
        v57 = *(_QWORD *)&v15[v54 + 16];
        v58 = *(_QWORD *)&v15[v54 + 24];
        v59 = *(_QWORD *)&v15[v54 + 32];
        v60 = *((_QWORD *)v56 + 5);
        LOBYTE(v51) = v56[48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v57, v58, v59, v60, v51);
        *((_QWORD *)v55 + 2) = v57;
        *((_QWORD *)v55 + 3) = v58;
        *((_QWORD *)v55 + 4) = v59;
        *((_QWORD *)v55 + 5) = v60;
        v55[48] = v51;
        v55[49] = v56[49];
        v61 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v62 = &v55[v61];
        a3 = v305;
        v7 = v296;
        v63 = &v56[v61];
        (*(void (**)(char *, char *, uint64_t))(v302 + 16))(v62, v63, v306);
        v64 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v65 = &v62[v64];
        v66 = &v63[v64];
        v67 = *((_QWORD *)v66 + 1);
        *(_QWORD *)v65 = *(_QWORD *)v66;
        *((_QWORD *)v65 + 1) = v67;
        swift_retain();
        goto LABEL_61;
      case 3u:
        v297 = v7;
        *v14 = *(_QWORD *)v15;
        v14[1] = *((_QWORD *)v15 + 1);
        v14[2] = *((_QWORD *)v15 + 2);
        v14[3] = *((_QWORD *)v15 + 3);
        v68 = *((_QWORD *)v15 + 4);
        v69 = *((_QWORD *)v15 + 5);
        v70 = v15[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A297208C();
        v14[4] = v68;
        v14[5] = v69;
        *((_BYTE *)v14 + 48) = v70;
        v72 = *((_QWORD *)v15 + 7);
        v71 = *((_QWORD *)v15 + 8);
        sub_1A2973524(v72, v71);
        v14[7] = v72;
        v14[8] = v71;
        v73 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA10) + 48);
        v74 = (char *)v14 + v73;
        v75 = &v15[v73];
        v76 = *(void (**)(char *, char *, uint64_t))(v302 + 16);
        v76(v74, &v15[v73], v306);
        v77 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B3B0);
        v74[v77[13]] = v75[v77[13]];
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(&v74[v77[14]], &v75[v77[14]], v11);
        v78 = v77[15];
        v79 = &v74[v78];
        v80 = &v75[v78];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B400);
        v81 = swift_getEnumCaseMultiPayload();
        if (v81 == 2)
        {
          *(_QWORD *)v79 = *(_QWORD *)v80;
          *((_QWORD *)v79 + 1) = *((_QWORD *)v80 + 1);
          *((_QWORD *)v79 + 2) = *((_QWORD *)v80 + 2);
          *((_QWORD *)v79 + 3) = *((_QWORD *)v80 + 3);
          *((_QWORD *)v79 + 4) = *((_QWORD *)v80 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v173 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B410) + 80);
          v174 = &v79[v173];
          v175 = &v80[v173];
          *(_QWORD *)v174 = *(_QWORD *)&v80[v173];
          *((_QWORD *)v174 + 1) = *(_QWORD *)&v80[v173 + 8];
          v176 = *(_QWORD *)&v80[v173 + 16];
          v177 = *(_QWORD *)&v80[v173 + 24];
          v178 = *(_QWORD *)&v80[v173 + 32];
          v179 = *(_QWORD *)&v80[v173 + 40];
          v180 = v80[v173 + 48];
          swift_bridgeObjectRetain();
          sub_1A2993E10(v176, v177, v178, v179, v180);
          *((_QWORD *)v174 + 2) = v176;
          *((_QWORD *)v174 + 3) = v177;
          *((_QWORD *)v174 + 4) = v178;
          *((_QWORD *)v174 + 5) = v179;
          v174[48] = v180;
          v174[49] = v175[49];
          v181 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          v86 = &v174[v181];
          a3 = v305;
          v87 = &v175[v181];
          v76(v86, &v175[v181], v306);
          v88 = &qword_1EE67B788;
          goto LABEL_38;
        }
        if (v81 == 1)
        {
          *v79 = *v80;
          v82 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A8) + 48);
          v83 = &v79[v82];
          v84 = &v80[v82];
          v76(&v79[v82], &v80[v82], v306);
          v85 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B0) + 52);
          v86 = &v83[v85];
          v87 = &v84[v85];
          v76(v86, v87, v306);
          v88 = &qword_1EE67B7A0;
          goto LABEL_38;
        }
        *(_QWORD *)v79 = *(_QWORD *)v80;
        *((_QWORD *)v79 + 1) = *((_QWORD *)v80 + 1);
        *((_QWORD *)v79 + 2) = *((_QWORD *)v80 + 2);
        *((_QWORD *)v79 + 3) = *((_QWORD *)v80 + 3);
        *((_QWORD *)v79 + 4) = *((_QWORD *)v80 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v182 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B410) + 80);
        v183 = &v79[v182];
        v184 = &v80[v182];
        *(_QWORD *)v183 = *(_QWORD *)&v80[v182];
        *((_QWORD *)v183 + 1) = *(_QWORD *)&v80[v182 + 8];
        v185 = *(_QWORD *)&v80[v182 + 16];
        v186 = *(_QWORD *)&v80[v182 + 24];
        v188 = *(_QWORD *)&v80[v182 + 32];
        v187 = *((_QWORD *)v184 + 5);
        v189 = v184[48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v185, v186, v188, v187, v189);
        *((_QWORD *)v183 + 2) = v185;
        *((_QWORD *)v183 + 3) = v186;
        *((_QWORD *)v183 + 4) = v188;
        *((_QWORD *)v183 + 5) = v187;
        v183[48] = v189;
        v183[49] = v184[49];
        v190 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v191 = &v183[v190];
        v192 = &v184[v190];
        v76(&v183[v190], &v184[v190], v306);
        v193 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v159 = &v191[v193];
        v160 = &v192[v193];
        a2 = v304;
        a3 = v305;
        v7 = v297;
        goto LABEL_40;
      case 4u:
        if (*((_QWORD *)v15 + 3) >= 2uLL)
        {
          *v14 = *(_QWORD *)v15;
          v14[1] = *((_QWORD *)v15 + 1);
          v14[2] = *((_QWORD *)v15 + 2);
          v14[3] = *((_QWORD *)v15 + 3);
          v125 = v14;
          v126 = *((_QWORD *)v15 + 4);
          v127 = *((_QWORD *)v15 + 5);
          v128 = v15[48];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1A297208C();
          v125[4] = v126;
          v125[5] = v127;
          *((_BYTE *)v125 + 48) = v128;
          v129 = *((_QWORD *)v15 + 7);
          v130 = *((_QWORD *)v15 + 8);
          sub_1A2973524(v129, v130);
          v125[7] = v129;
          v125[8] = v130;
        }
        else
        {
          *(_OWORD *)v14 = *(_OWORD *)v15;
          v89 = *((_OWORD *)v15 + 1);
          v90 = *((_OWORD *)v15 + 2);
          v91 = *((_OWORD *)v15 + 3);
          v14[8] = *((_QWORD *)v15 + 8);
          *((_OWORD *)v14 + 2) = v90;
          *((_OWORD *)v14 + 3) = v91;
          *((_OWORD *)v14 + 1) = v89;
        }
        goto LABEL_61;
      case 5u:
        v297 = v7;
        *v14 = *(_QWORD *)v15;
        v14[1] = *((_QWORD *)v15 + 1);
        v14[2] = *((_QWORD *)v15 + 2);
        v14[3] = *((_QWORD *)v15 + 3);
        v92 = v14;
        v93 = *((_QWORD *)v15 + 4);
        v94 = *((_QWORD *)v15 + 5);
        v95 = v15[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A297208C();
        v92[4] = v93;
        v92[5] = v94;
        *((_BYTE *)v92 + 48) = v95;
        v96 = *((_QWORD *)v15 + 7);
        v97 = *((_QWORD *)v15 + 8);
        sub_1A2973524(v96, v97);
        v92[7] = v96;
        v92[8] = v97;
        v98 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA00) + 48);
        v99 = (char *)v92 + v98;
        v100 = &v15[v98];
        v101 = *(void (**)(char *, char *, uint64_t))(v302 + 16);
        v101(v99, &v15[v98], v306);
        v102 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA38);
        v99[v102[13]] = v100[v102[13]];
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(&v99[v102[14]], &v100[v102[14]], v11);
        v103 = v102[15];
        v104 = &v99[v103];
        v105 = &v100[v103];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA30);
        v106 = swift_getEnumCaseMultiPayload();
        if (v106 == 2)
        {
          *(_QWORD *)v104 = *(_QWORD *)v105;
          *((_QWORD *)v104 + 1) = *((_QWORD *)v105 + 1);
          *((_QWORD *)v104 + 2) = *((_QWORD *)v105 + 2);
          *((_QWORD *)v104 + 3) = *((_QWORD *)v105 + 3);
          *((_QWORD *)v104 + 4) = *((_QWORD *)v105 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v194 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA40) + 80);
          v195 = &v104[v194];
          v196 = &v105[v194];
          *(_QWORD *)v195 = *(_QWORD *)&v105[v194];
          *((_QWORD *)v195 + 1) = *(_QWORD *)&v105[v194 + 8];
          v197 = *(_QWORD *)&v105[v194 + 16];
          v198 = *(_QWORD *)&v105[v194 + 24];
          v199 = *(_QWORD *)&v105[v194 + 32];
          v200 = *(_QWORD *)&v105[v194 + 40];
          v201 = v105[v194 + 48];
          swift_bridgeObjectRetain();
          sub_1A2993E10(v197, v198, v199, v200, v201);
          *((_QWORD *)v195 + 2) = v197;
          *((_QWORD *)v195 + 3) = v198;
          *((_QWORD *)v195 + 4) = v199;
          *((_QWORD *)v195 + 5) = v200;
          v195[48] = v201;
          v195[49] = v196[49];
          v202 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          v86 = &v195[v202];
          a3 = v305;
          v87 = &v196[v202];
          v101(v86, &v196[v202], v306);
          v88 = &qword_1EE67B788;
          goto LABEL_38;
        }
        if (v106 == 1)
        {
          *v104 = *v105;
          v107 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA48) + 48);
          v108 = &v104[v107];
          v109 = &v105[v107];
          v101(&v104[v107], &v105[v107], v306);
          v110 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA50) + 52);
          v86 = &v108[v110];
          v87 = &v109[v110];
          v101(v86, v87, v306);
          v88 = &qword_1EE67B7A0;
LABEL_38:
          v203 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v88) + 68);
          v159 = &v86[v203];
          v160 = &v87[v203];
          v7 = v297;
          a2 = v304;
          goto LABEL_40;
        }
        *(_QWORD *)v104 = *(_QWORD *)v105;
        *((_QWORD *)v104 + 1) = *((_QWORD *)v105 + 1);
        *((_QWORD *)v104 + 2) = *((_QWORD *)v105 + 2);
        *((_QWORD *)v104 + 3) = *((_QWORD *)v105 + 3);
        *((_QWORD *)v104 + 4) = *((_QWORD *)v105 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v204 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA40) + 80);
        v205 = &v104[v204];
        v206 = &v105[v204];
        *(_QWORD *)v205 = *(_QWORD *)&v105[v204];
        *((_QWORD *)v205 + 1) = *(_QWORD *)&v105[v204 + 8];
        v207 = *(_QWORD *)&v105[v204 + 16];
        v208 = *(_QWORD *)&v105[v204 + 24];
        v210 = *(_QWORD *)&v105[v204 + 32];
        v209 = *((_QWORD *)v206 + 5);
        v211 = v206[48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v207, v208, v210, v209, v211);
        *((_QWORD *)v205 + 2) = v207;
        *((_QWORD *)v205 + 3) = v208;
        *((_QWORD *)v205 + 4) = v210;
        *((_QWORD *)v205 + 5) = v209;
        v205[48] = v211;
        v205[49] = v206[49];
        v212 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v213 = &v205[v212];
        v214 = &v206[v212];
        v101(&v205[v212], &v206[v212], v306);
        v215 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v159 = &v213[v215];
        v160 = &v214[v215];
        a2 = v304;
        a3 = v305;
        v7 = v297;
LABEL_40:
        v216 = *((_QWORD *)v160 + 1);
        *(_QWORD *)v159 = *(_QWORD *)v160;
        *((_QWORD *)v159 + 1) = v216;
        swift_retain();
        swift_storeEnumTagMultiPayload();
LABEL_61:
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        v111 = a3;
        v293 = *(void (**)(_QWORD *, char *, uint64_t))(v302 + 16);
        v298 = v7;
        v293(v14, v15, v306);
        v112 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
        v113 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
        v113((char *)v14 + v112[5], &v15[v112[5]], v11);
        v114 = v112[6];
        v300 = v14;
        v115 = (char *)v14 + v114;
        v116 = &v15[v114];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&v15[v114], 1, v11))
        {
          v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
          memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
        }
        else
        {
          v113(v115, v116, v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v115, 0, 1, v11);
        }
        v131 = v112[7];
        v132 = v300;
        v133 = (_QWORD *)((char *)v300 + v131);
        v134 = &v15[v131];
        v135 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
        v136 = *(_QWORD *)(v135 - 8);
        a3 = v111;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48))(v134, 1, v135))
        {
          v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
          memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
          v7 = v298;
        }
        else
        {
          v145 = type metadata accessor for SFAirDropSend.Failure();
          v146 = *(_QWORD *)(v145 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v146 + 48))(v134, 1, v145))
          {
            memcpy(v133, v134, *(_QWORD *)(v136 + 64));
          }
          else
          {
            v217 = swift_getEnumCaseMultiPayload();
            if (v217 == 2)
            {
              *v133 = *(_QWORD *)v134;
              v133[1] = *((_QWORD *)v134 + 1);
              v133[2] = *((_QWORD *)v134 + 2);
              v133[3] = *((_QWORD *)v134 + 3);
              v133[4] = *((_QWORD *)v134 + 4);
              v133[5] = *((_QWORD *)v134 + 5);
              v133[6] = *((_QWORD *)v134 + 6);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            else if (v217)
            {
              memcpy(v133, v134, *(_QWORD *)(v146 + 64));
            }
            else
            {
              v293(v133, v134, v306);
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v133, 0, 1, v145);
          }
          v7 = v298;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v133, 0, 1, v135);
          v132 = v300;
        }
        v219 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F8) + 48);
        v220 = (_QWORD *)((char *)v132 + v219);
        v221 = &v15[v219];
        v222 = type metadata accessor for SFAirDropSend.Failure();
        v223 = swift_getEnumCaseMultiPayload();
        if (v223 == 2)
        {
          *v220 = *(_QWORD *)v221;
          v220[1] = *((_QWORD *)v221 + 1);
          v220[2] = *((_QWORD *)v221 + 2);
          v220[3] = *((_QWORD *)v221 + 3);
          v220[4] = *((_QWORD *)v221 + 4);
          v220[5] = *((_QWORD *)v221 + 5);
          v220[6] = *((_QWORD *)v221 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (v223)
        {
          memcpy(v220, v221, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
        }
        else
        {
          v293(v220, v221, v306);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_61;
      case 7u:
        v118 = a3;
        v294 = *(void (**)(_QWORD *, char *, uint64_t))(v302 + 16);
        v299 = v7;
        v294(v14, v15, v306);
        v119 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
        v120 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
        v120((char *)v14 + v119[5], &v15[v119[5]], v11);
        v121 = v119[6];
        v301 = v14;
        v122 = (char *)v14 + v121;
        v123 = &v15[v121];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&v15[v121], 1, v11))
        {
          v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
          memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
        }
        else
        {
          v120(v122, v123, v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v122, 0, 1, v11);
        }
        v138 = v119[7];
        v139 = v301;
        v140 = (_QWORD *)((char *)v301 + v138);
        v141 = &v15[v138];
        v142 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
        v143 = *(_QWORD *)(v142 - 8);
        a3 = v118;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v143 + 48))(v141, 1, v142))
        {
          v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
          memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
          v7 = v299;
        }
        else
        {
          v147 = type metadata accessor for SFAirDropSend.Failure();
          v148 = *(_QWORD *)(v147 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v148 + 48))(v141, 1, v147))
          {
            memcpy(v140, v141, *(_QWORD *)(v143 + 64));
          }
          else
          {
            v218 = swift_getEnumCaseMultiPayload();
            if (v218 == 2)
            {
              *v140 = *(_QWORD *)v141;
              v140[1] = *((_QWORD *)v141 + 1);
              v140[2] = *((_QWORD *)v141 + 2);
              v140[3] = *((_QWORD *)v141 + 3);
              v140[4] = *((_QWORD *)v141 + 4);
              v140[5] = *((_QWORD *)v141 + 5);
              v140[6] = *((_QWORD *)v141 + 6);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            else if (v218)
            {
              memcpy(v140, v141, *(_QWORD *)(v148 + 64));
            }
            else
            {
              v294(v140, v141, v306);
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v140, 0, 1, v147);
          }
          v7 = v299;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v143 + 56))(v140, 0, 1, v142);
          v139 = v301;
        }
        v224 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F0) + 48);
        v225 = (_QWORD *)((char *)v139 + v224);
        v226 = &v15[v224];
        *v225 = *(_QWORD *)v226;
        v225[1] = *((_QWORD *)v226 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_61;
      default:
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        break;
    }
  }
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  if (a1 != a2)
  {
    v227 = a3[9];
    v228 = (_QWORD *)(a1 + v227);
    v229 = (_QWORD *)(a2 + v227);
    sub_1A297DA3C(a1 + v227, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropClient.Identifier);
    v230 = type metadata accessor for SFAirDropClient.Identifier();
    v231 = swift_getEnumCaseMultiPayload();
    if (v231 == 1)
    {
      *v228 = *v229;
      v228[1] = v229[1];
      v228[2] = v229[2];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (v231)
    {
      memcpy(v228, v229, *(_QWORD *)(*(_QWORD *)(v230 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v302 + 16))(v228, v229, v306);
      swift_storeEnumTagMultiPayload();
    }
  }
  v232 = a3[10];
  v303 = a1;
  v233 = a1 + v232;
  v234 = a2 + v232;
  ((void (*)(uint64_t, uint64_t, uint64_t))v7)(a1 + v232, a2 + v232, v306);
  v235 = (int *)type metadata accessor for SFAirDropSend.Request();
  v236 = v235[5];
  v237 = v233 + v236;
  v238 = v234 + v236;
  v239 = *(_QWORD *)v238;
  v240 = *(_QWORD *)(v238 + 8);
  v241 = (void (*)(uint64_t, uint64_t, uint64_t))v7;
  v242 = *(_BYTE *)(v238 + 16);
  sub_1A2993E70(*(_QWORD *)v238, v240, v242);
  v243 = *(_QWORD *)v237;
  v244 = *(_QWORD *)(v237 + 8);
  *(_QWORD *)v237 = v239;
  *(_QWORD *)(v237 + 8) = v240;
  v245 = *(_BYTE *)(v237 + 16);
  *(_BYTE *)(v237 + 16) = v242;
  sub_1A2994E20(v243, v244, v245);
  *(_QWORD *)(v233 + v235[6]) = *(_QWORD *)(v234 + v235[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v241(v233 + v235[7], v234 + v235[7], v306);
  v246 = v235[8];
  v247 = (char *)(v233 + v246);
  v248 = (char *)(v234 + v246);
  v249 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE674658);
  v250 = *(_QWORD *)(v249 - 8);
  v251 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v250 + 48);
  v252 = v251(v247, 1, v249);
  v253 = v251(v248, 1, v249);
  if (v252)
  {
    if (!v253)
    {
      (*(void (**)(char *, char *, uint64_t))(v302 + 16))(v247, v248, v306);
      v254 = *(int *)(v249 + 68);
      v255 = &v247[v254];
      v256 = &v248[v254];
      v257 = *((_QWORD *)v256 + 1);
      *(_QWORD *)v255 = *(_QWORD *)v256;
      *((_QWORD *)v255 + 1) = v257;
      v258 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v250 + 56);
      swift_retain();
      v258(v247, 0, 1, v249);
      goto LABEL_74;
    }
    goto LABEL_73;
  }
  if (v253)
  {
    sub_1A296F108((uint64_t)v247, &qword_1EE674658);
LABEL_73:
    v259 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67D068);
    memcpy(v247, v248, *(_QWORD *)(*(_QWORD *)(v259 - 8) + 64));
    goto LABEL_74;
  }
  v241((uint64_t)v247, (uint64_t)v248, v306);
  v289 = *(int *)(v249 + 68);
  v290 = &v247[v289];
  v291 = &v248[v289];
  v292 = *((_QWORD *)v291 + 1);
  *(_QWORD *)v290 = *(_QWORD *)v291;
  *((_QWORD *)v290 + 1) = v292;
  swift_retain();
  swift_release();
LABEL_74:
  *(_QWORD *)(v233 + v235[9]) = *(_QWORD *)(v234 + v235[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v260 = v235[10];
  v261 = (uint64_t *)(v233 + v260);
  v262 = (uint64_t *)(v234 + v260);
  v263 = *(_QWORD *)(v234 + v260 + 8);
  if (*(_QWORD *)(v233 + v260 + 8) >> 60 == 15)
  {
    if (v263 >> 60 != 15)
    {
      v264 = *v262;
      sub_1A2973524(*v262, v263);
      *v261 = v264;
      v261[1] = v263;
      goto LABEL_81;
    }
    goto LABEL_79;
  }
  if (v263 >> 60 == 15)
  {
    sub_1A299C970((uint64_t)v261);
LABEL_79:
    *(_OWORD *)v261 = *(_OWORD *)v262;
    goto LABEL_81;
  }
  v265 = *v262;
  sub_1A2973524(*v262, v263);
  v266 = *v261;
  v267 = v261[1];
  *v261 = v265;
  v261[1] = v263;
  sub_1A29736C4(v266, v267);
LABEL_81:
  v268 = v235[11];
  v269 = (uint64_t *)(v233 + v268);
  v270 = (uint64_t *)(v234 + v268);
  v271 = *(_QWORD *)(v234 + v268 + 8);
  if (*(_QWORD *)(v233 + v268 + 8) >> 60 != 15)
  {
    if (v271 >> 60 != 15)
    {
      v273 = *v270;
      sub_1A2973524(*v270, v271);
      v274 = *v269;
      v275 = v269[1];
      *v269 = v273;
      v269[1] = v271;
      sub_1A29736C4(v274, v275);
      goto LABEL_88;
    }
    sub_1A299C970((uint64_t)v269);
    goto LABEL_86;
  }
  if (v271 >> 60 == 15)
  {
LABEL_86:
    *(_OWORD *)v269 = *(_OWORD *)v270;
    goto LABEL_88;
  }
  v272 = *v270;
  sub_1A2973524(*v270, v271);
  *v269 = v272;
  v269[1] = v271;
LABEL_88:
  v276 = v235[12];
  v277 = (_QWORD *)(v233 + v276);
  v278 = (_QWORD *)(v234 + v276);
  *v277 = *v278;
  v277[1] = v278[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v279 = v235[13];
  v280 = (_QWORD *)(v233 + v279);
  v281 = (_QWORD *)(v234 + v279);
  *v280 = *v281;
  v280[1] = v281[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v282 = v305[11];
  v283 = (_QWORD *)(v303 + v282);
  v284 = (_QWORD *)(v304 + v282);
  *v283 = *v284;
  v283[1] = v284[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v285 = v305[12];
  v286 = (_QWORD *)(v303 + v285);
  v287 = (_QWORD *)(v304 + v285);
  *v286 = *v287;
  v286[1] = v287[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v303;
}

__n128 _s8TransferVwtk_0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  void (*v24)(void *, const void *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int EnumCaseMultiPayload;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __int128 v44;
  uint64_t v45;
  char *v46;
  char *v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  int *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  int v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  int *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  int v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  int *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  int *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  _OWORD *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _OWORD *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  uint64_t v119;
  char *v120;
  char *v121;
  __int128 v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  __int128 v127;
  uint64_t v128;
  char *v129;
  char *v130;
  __int128 v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  __int128 v136;
  uint64_t v137;
  char *v138;
  char *v139;
  __int128 v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  __int128 v145;
  uint64_t v146;
  char *v147;
  char *v148;
  __int128 v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  __int128 v154;
  uint64_t v155;
  char *v156;
  char *v157;
  __int128 v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  __int128 v163;
  uint64_t v164;
  char *v165;
  char *v166;
  __int128 v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  void *v181;
  const void *v182;
  uint64_t v183;
  int *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  int *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  char *v195;
  void (*v196)(char *, char *, uint64_t);
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  __n128 result;
  _OWORD *v202;
  _OWORD *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  void (*v208)(uint64_t, uint64_t, uint64_t);
  uint64_t v209;

  v6 = sub_1A2AE3130();
  v208 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v208(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1A2AE30C4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (_OWORD *)(a1 + v13);
  v209 = a2;
  v15 = (_OWORD *)(a2 + v13);
  v16 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  v207 = a1;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *v14 = *v15;
      v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA20) + 64);
      v18 = (char *)v14 + v17;
      v19 = (char *)v15 + v17;
      *((_WORD *)v18 + 24) = *(_WORD *)((char *)v15 + v17 + 48);
      v20 = *(_OWORD *)((char *)v15 + v17 + 16);
      *(_OWORD *)v18 = *(_OWORD *)((char *)v15 + v17);
      *((_OWORD *)v18 + 1) = v20;
      *((_OWORD *)v18 + 2) = *(_OWORD *)((char *)v15 + v17 + 32);
      v21 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      v22 = &v18[v21];
      v23 = &v19[v21];
      v24 = (void (*)(void *, const void *, uint64_t))v208;
      v208((uint64_t)&v18[v21], (uint64_t)&v19[v21], v6);
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788);
      *(_OWORD *)&v22[*(int *)(v25 + 68)] = *(_OWORD *)&v23[*(int *)(v25 + 68)];
      goto LABEL_7;
    case 1u:
      *(_QWORD *)v14 = *(_QWORD *)v15;
      v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA18) + 48);
      v27 = (char *)v14 + v26;
      v28 = v6;
      v29 = (char *)v15 + v26;
      v204 = v28;
      ((void (*)(char *, char *))v208)((char *)v14 + v26, (char *)v15 + v26);
      v30 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA10);
      v27[v30[13]] = v29[v30[13]];
      v12((uint64_t)&v27[v30[14]], (uint64_t)&v29[v30[14]], v10);
      v31 = v30[15];
      v32 = &v27[v31];
      v33 = &v29[v31];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA08);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v118 = *((_OWORD *)v33 + 1);
        *(_OWORD *)v32 = *(_OWORD *)v33;
        *((_OWORD *)v32 + 1) = v118;
        *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
        v119 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA18) + 80);
        v120 = &v32[v119];
        v121 = &v33[v119];
        *((_WORD *)v120 + 24) = *(_WORD *)&v33[v119 + 48];
        v122 = *(_OWORD *)&v33[v119 + 16];
        *(_OWORD *)v120 = *(_OWORD *)&v33[v119];
        *((_OWORD *)v120 + 1) = v122;
        *((_OWORD *)v120 + 2) = *(_OWORD *)&v33[v119 + 32];
        v123 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v124 = &v120[v123];
        v125 = &v121[v123];
        v208((uint64_t)&v120[v123], (uint64_t)&v121[v123], v204);
        v126 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v42 = &v124[v126];
        v43 = &v125[v126];
        v24 = (void (*)(void *, const void *, uint64_t))v208;
        goto LABEL_30;
      }
      if (EnumCaseMultiPayload == 1)
      {
        *v32 = *v33;
        v35 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA20) + 48);
        v36 = &v32[v35];
        v37 = &v33[v35];
        v208((uint64_t)&v32[v35], (uint64_t)v37, v204);
        v38 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA28) + 52);
        v39 = &v36[v38];
        v40 = &v37[v38];
        v208((uint64_t)v39, (uint64_t)v40, v204);
        v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0) + 68);
        v42 = &v39[v41];
        v43 = &v40[v41];
        v24 = (void (*)(void *, const void *, uint64_t))v208;
LABEL_30:
        v53 = v209;
        goto LABEL_38;
      }
      v127 = *((_OWORD *)v33 + 1);
      *(_OWORD *)v32 = *(_OWORD *)v33;
      *((_OWORD *)v32 + 1) = v127;
      *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
      v128 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA18) + 80);
      v129 = &v32[v128];
      v130 = &v33[v128];
      *((_WORD *)v129 + 24) = *(_WORD *)&v33[v128 + 48];
      v131 = *(_OWORD *)&v33[v128 + 16];
      *(_OWORD *)v129 = *(_OWORD *)&v33[v128];
      *((_OWORD *)v129 + 1) = v131;
      *((_OWORD *)v129 + 2) = *(_OWORD *)&v33[v128 + 32];
      v132 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      v133 = &v129[v132];
      v134 = &v130[v132];
      v208((uint64_t)&v129[v132], (uint64_t)&v130[v132], v204);
      v135 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
      v42 = &v133[v135];
      v43 = &v134[v135];
      v24 = (void (*)(void *, const void *, uint64_t))v208;
      v53 = v209;
      goto LABEL_38;
    case 2u:
      v44 = v15[1];
      *v14 = *v15;
      v14[1] = v44;
      v14[2] = v15[2];
      *((_QWORD *)v14 + 6) = *((_QWORD *)v15 + 6);
      *(_OWORD *)((char *)v14 + 56) = *(_OWORD *)((char *)v15 + 56);
      v45 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA08) + 80);
      v46 = (char *)v14 + v45;
      v47 = (char *)v15 + v45;
      *((_WORD *)v46 + 24) = *(_WORD *)((char *)v15 + v45 + 48);
      v48 = *(_OWORD *)((char *)v15 + v45 + 16);
      *(_OWORD *)v46 = *(_OWORD *)((char *)v15 + v45);
      *((_OWORD *)v46 + 1) = v48;
      *((_OWORD *)v46 + 2) = *(_OWORD *)((char *)v15 + v45 + 32);
      v49 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      v50 = &v46[v49];
      v51 = &v47[v49];
      v24 = (void (*)(void *, const void *, uint64_t))v208;
      v208((uint64_t)&v46[v49], (uint64_t)&v47[v49], v6);
      v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788);
      *(_OWORD *)&v50[*(int *)(v52 + 68)] = *(_OWORD *)&v51[*(int *)(v52 + 68)];
LABEL_7:
      swift_storeEnumTagMultiPayload();
      v53 = v209;
      goto LABEL_54;
    case 3u:
      v54 = v15[3];
      v14[2] = v15[2];
      v14[3] = v54;
      *((_QWORD *)v14 + 8) = *((_QWORD *)v15 + 8);
      v55 = v15[1];
      *v14 = *v15;
      v14[1] = v55;
      v56 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA10) + 48);
      v57 = (char *)v14 + v56;
      v58 = v6;
      v59 = (char *)v15 + v56;
      v204 = v58;
      ((void (*)(char *, char *))v208)((char *)v14 + v56, (char *)v15 + v56);
      v60 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B3B0);
      v57[v60[13]] = v59[v60[13]];
      v12((uint64_t)&v57[v60[14]], (uint64_t)&v59[v60[14]], v10);
      v61 = v60[15];
      v62 = &v57[v61];
      v63 = &v59[v61];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B400);
      v64 = swift_getEnumCaseMultiPayload();
      if (v64 == 2)
      {
        v136 = *((_OWORD *)v63 + 1);
        *(_OWORD *)v62 = *(_OWORD *)v63;
        *((_OWORD *)v62 + 1) = v136;
        *((_QWORD *)v62 + 4) = *((_QWORD *)v63 + 4);
        v137 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B410) + 80);
        v138 = &v62[v137];
        v139 = &v63[v137];
        *((_WORD *)v138 + 24) = *(_WORD *)&v63[v137 + 48];
        v140 = *(_OWORD *)&v63[v137 + 16];
        *(_OWORD *)v138 = *(_OWORD *)&v63[v137];
        *((_OWORD *)v138 + 1) = v140;
        *((_OWORD *)v138 + 2) = *(_OWORD *)&v63[v137 + 32];
        v141 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v142 = &v138[v141];
        v143 = &v139[v141];
        v208((uint64_t)&v138[v141], (uint64_t)&v139[v141], v204);
        v144 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v42 = &v142[v144];
        v43 = &v143[v144];
        v24 = (void (*)(void *, const void *, uint64_t))v208;
        goto LABEL_33;
      }
      if (v64 == 1)
      {
        *v62 = *v63;
        v65 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A8) + 48);
        v66 = &v62[v65];
        v67 = &v63[v65];
        v208((uint64_t)&v62[v65], (uint64_t)v67, v204);
        v68 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B0) + 52);
        v69 = &v66[v68];
        v70 = &v67[v68];
        v208((uint64_t)v69, (uint64_t)v70, v204);
        v71 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0) + 68);
        v42 = &v69[v71];
        v43 = &v70[v71];
        v24 = (void (*)(void *, const void *, uint64_t))v208;
LABEL_33:
        v53 = v209;
        goto LABEL_38;
      }
      v145 = *((_OWORD *)v63 + 1);
      *(_OWORD *)v62 = *(_OWORD *)v63;
      *((_OWORD *)v62 + 1) = v145;
      *((_QWORD *)v62 + 4) = *((_QWORD *)v63 + 4);
      v146 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B410) + 80);
      v147 = &v62[v146];
      v148 = &v63[v146];
      *((_WORD *)v147 + 24) = *(_WORD *)&v63[v146 + 48];
      v149 = *(_OWORD *)&v63[v146 + 16];
      *(_OWORD *)v147 = *(_OWORD *)&v63[v146];
      *((_OWORD *)v147 + 1) = v149;
      *((_OWORD *)v147 + 2) = *(_OWORD *)&v63[v146 + 32];
      v150 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      v151 = &v147[v150];
      v152 = &v148[v150];
      v208((uint64_t)&v147[v150], (uint64_t)&v148[v150], v204);
      v153 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
      v42 = &v151[v153];
      v43 = &v152[v153];
      v24 = (void (*)(void *, const void *, uint64_t))v208;
      v53 = v209;
      goto LABEL_38;
    case 5u:
      v72 = v15[3];
      v14[2] = v15[2];
      v14[3] = v72;
      *((_QWORD *)v14 + 8) = *((_QWORD *)v15 + 8);
      v73 = v15[1];
      *v14 = *v15;
      v14[1] = v73;
      v74 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA00) + 48);
      v75 = (char *)v14 + v74;
      v76 = v6;
      v77 = (char *)v15 + v74;
      v204 = v76;
      ((void (*)(char *, char *))v208)((char *)v14 + v74, (char *)v15 + v74);
      v78 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA38);
      v75[v78[13]] = v77[v78[13]];
      v12((uint64_t)&v75[v78[14]], (uint64_t)&v77[v78[14]], v10);
      v79 = v78[15];
      v80 = &v75[v79];
      v81 = &v77[v79];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA30);
      v82 = swift_getEnumCaseMultiPayload();
      if (v82 == 2)
      {
        v154 = *((_OWORD *)v81 + 1);
        *(_OWORD *)v80 = *(_OWORD *)v81;
        *((_OWORD *)v80 + 1) = v154;
        *((_QWORD *)v80 + 4) = *((_QWORD *)v81 + 4);
        v155 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA40) + 80);
        v156 = &v80[v155];
        v157 = &v81[v155];
        *((_WORD *)v156 + 24) = *(_WORD *)&v81[v155 + 48];
        v158 = *(_OWORD *)&v81[v155 + 16];
        *(_OWORD *)v156 = *(_OWORD *)&v81[v155];
        *((_OWORD *)v156 + 1) = v158;
        *((_OWORD *)v156 + 2) = *(_OWORD *)&v81[v155 + 32];
        v159 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v160 = &v156[v159];
        v161 = &v157[v159];
        v208((uint64_t)&v156[v159], (uint64_t)&v157[v159], v204);
        v162 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v42 = &v160[v162];
        v43 = &v161[v162];
        v24 = (void (*)(void *, const void *, uint64_t))v208;
        goto LABEL_36;
      }
      if (v82 == 1)
      {
        *v80 = *v81;
        v83 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA48) + 48);
        v84 = &v80[v83];
        v85 = &v81[v83];
        v208((uint64_t)&v80[v83], (uint64_t)v85, v204);
        v86 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA50) + 52);
        v87 = &v84[v86];
        v88 = &v85[v86];
        v208((uint64_t)v87, (uint64_t)v88, v204);
        v89 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0) + 68);
        v42 = &v87[v89];
        v43 = &v88[v89];
        v24 = (void (*)(void *, const void *, uint64_t))v208;
LABEL_36:
        v53 = v209;
        goto LABEL_38;
      }
      v163 = *((_OWORD *)v81 + 1);
      *(_OWORD *)v80 = *(_OWORD *)v81;
      *((_OWORD *)v80 + 1) = v163;
      *((_QWORD *)v80 + 4) = *((_QWORD *)v81 + 4);
      v164 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA40) + 80);
      v165 = &v80[v164];
      v166 = &v81[v164];
      *((_WORD *)v165 + 24) = *(_WORD *)&v81[v164 + 48];
      v167 = *(_OWORD *)&v81[v164 + 16];
      *(_OWORD *)v165 = *(_OWORD *)&v81[v164];
      *((_OWORD *)v165 + 1) = v167;
      *((_OWORD *)v165 + 2) = *(_OWORD *)&v81[v164 + 32];
      v168 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      v169 = &v165[v168];
      v170 = &v166[v168];
      v208((uint64_t)&v165[v168], (uint64_t)&v166[v168], v204);
      v171 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
      v42 = &v169[v171];
      v43 = &v170[v171];
      v24 = (void (*)(void *, const void *, uint64_t))v208;
      v53 = v209;
LABEL_38:
      *(_OWORD *)v42 = *(_OWORD *)v43;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      v6 = v204;
LABEL_54:
      v179 = a3[8];
      *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(v53 + a3[7]);
      *(_BYTE *)(a1 + v179) = *(_BYTE *)(v53 + v179);
      v180 = a3[9];
      v181 = (void *)(a1 + v180);
      v182 = (const void *)(v53 + v180);
      v183 = type metadata accessor for SFAirDropClient.Identifier();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v181, v182, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
      }
      else
      {
        v24(v181, v182, v6);
        swift_storeEnumTagMultiPayload();
      }
      v184 = a3;
      v185 = a3[10];
      v186 = a1 + v185;
      v187 = v53 + v185;
      v24((void *)(a1 + v185), (const void *)(v53 + v185), v6);
      v188 = (int *)type metadata accessor for SFAirDropSend.Request();
      v189 = v188[5];
      v190 = v186 + v189;
      v191 = v187 + v189;
      *(_OWORD *)v190 = *(_OWORD *)v191;
      *(_BYTE *)(v190 + 16) = *(_BYTE *)(v191 + 16);
      *(_QWORD *)(v186 + v188[6]) = *(_QWORD *)(v187 + v188[6]);
      v24((void *)(v186 + v188[7]), (const void *)(v187 + v188[7]), v6);
      v192 = v188[8];
      v193 = (char *)(v186 + v192);
      v194 = v6;
      v195 = (char *)(v187 + v192);
      v196 = (void (*)(char *, char *, uint64_t))v24;
      v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE674658);
      v198 = *(_QWORD *)(v197 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v198 + 48))(v195, 1, v197))
      {
        v199 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67D068);
        memcpy(v193, v195, *(_QWORD *)(*(_QWORD *)(v199 - 8) + 64));
      }
      else
      {
        v196(v193, v195, v194);
        *(_OWORD *)&v193[*(int *)(v197 + 68)] = *(_OWORD *)&v195[*(int *)(v197 + 68)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v198 + 56))(v193, 0, 1, v197);
      }
      *(_QWORD *)(v186 + v188[9]) = *(_QWORD *)(v187 + v188[9]);
      *(_OWORD *)(v186 + v188[10]) = *(_OWORD *)(v187 + v188[10]);
      *(_OWORD *)(v186 + v188[11]) = *(_OWORD *)(v187 + v188[11]);
      *(_OWORD *)(v186 + v188[12]) = *(_OWORD *)(v187 + v188[12]);
      *(_OWORD *)(v186 + v188[13]) = *(_OWORD *)(v187 + v188[13]);
      v200 = v184[12];
      *(_OWORD *)(v207 + v184[11]) = *(_OWORD *)(v209 + v184[11]);
      result = *(__n128 *)(v209 + v200);
      *(__n128 *)(v207 + v200) = result;
      return result;
    case 6u:
      v205 = v6;
      v208((uint64_t)v14, (uint64_t)v15, v6);
      v90 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
      v12((uint64_t)v14 + v90[5], (uint64_t)v15 + v90[5], v10);
      v91 = v90[6];
      v202 = v14;
      v92 = (char *)v14 + v91;
      v93 = (char *)v15 + v91;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))((char *)v15 + v91, 1, v10))
      {
        v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
        memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
      }
      else
      {
        v12((uint64_t)v92, (uint64_t)v93, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v92, 0, 1, v10);
      }
      v100 = v202;
      v101 = v90[7];
      v102 = (char *)v202 + v101;
      v103 = (char *)v15 + v101;
      v104 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
      v105 = *(_QWORD *)(v104 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v103, 1, v104))
      {
        v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
        memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
        v6 = v205;
        v24 = (void (*)(void *, const void *, uint64_t))v208;
        v53 = v209;
      }
      else
      {
        v114 = type metadata accessor for SFAirDropSend.Failure();
        v115 = *(_QWORD *)(v114 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v103, 1, v114))
        {
          memcpy(v102, v103, *(_QWORD *)(v105 + 64));
          v24 = (void (*)(void *, const void *, uint64_t))v208;
        }
        else
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v102, v103, *(_QWORD *)(v115 + 64));
            v24 = (void (*)(void *, const void *, uint64_t))v208;
          }
          else
          {
            v172 = v103;
            v24 = (void (*)(void *, const void *, uint64_t))v208;
            v208((uint64_t)v102, (uint64_t)v172, v205);
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v102, 0, 1, v114);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
        v6 = v205;
        v53 = v209;
        v100 = v202;
      }
      v173 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F8) + 48);
      v174 = (char *)v100 + v173;
      v175 = (char *)v15 + v173;
      v176 = type metadata accessor for SFAirDropSend.Failure();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v174, v175, *(_QWORD *)(*(_QWORD *)(v176 - 8) + 64));
      }
      else
      {
        v24(v174, v175, v6);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_53;
    case 7u:
      v206 = v6;
      v208((uint64_t)v14, (uint64_t)v15, v6);
      v95 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
      v12((uint64_t)v14 + v95[5], (uint64_t)v15 + v95[5], v10);
      v96 = v95[6];
      v203 = v14;
      v97 = (char *)v14 + v96;
      v98 = (char *)v15 + v96;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))((char *)v15 + v96, 1, v10))
      {
        v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
        memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
      }
      else
      {
        v12((uint64_t)v97, (uint64_t)v98, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v97, 0, 1, v10);
      }
      v107 = v203;
      v108 = v95[7];
      v109 = (char *)v203 + v108;
      v110 = (char *)v15 + v108;
      v111 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
      v112 = *(_QWORD *)(v111 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48))(v110, 1, v111))
      {
        v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
        memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
        v6 = v206;
        v24 = (void (*)(void *, const void *, uint64_t))v208;
        v53 = v209;
      }
      else
      {
        v116 = type metadata accessor for SFAirDropSend.Failure();
        v117 = *(_QWORD *)(v116 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v117 + 48))(v110, 1, v116))
        {
          memcpy(v109, v110, *(_QWORD *)(v112 + 64));
          v24 = (void (*)(void *, const void *, uint64_t))v208;
        }
        else
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v109, v110, *(_QWORD *)(v117 + 64));
            v24 = (void (*)(void *, const void *, uint64_t))v208;
          }
          else
          {
            v177 = v110;
            v24 = (void (*)(void *, const void *, uint64_t))v208;
            v208((uint64_t)v109, (uint64_t)v177, v206);
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v117 + 56))(v109, 0, 1, v116);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v109, 0, 1, v111);
        v6 = v206;
        v53 = v209;
        v107 = v203;
      }
      v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F0);
      *(_OWORD *)((char *)v107 + *(int *)(v178 + 48)) = *(_OWORD *)((char *)v15 + *(int *)(v178 + 48));
LABEL_53:
      swift_storeEnumTagMultiPayload();
      goto LABEL_54;
    default:
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      v24 = (void (*)(void *, const void *, uint64_t))v208;
      v53 = v209;
      goto LABEL_54;
  }
}

uint64_t _s8TransferVwta_0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int EnumCaseMultiPayload;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t *v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __int128 v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  int *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  int v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  char *v66;
  char *v67;
  int *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  int v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  int *v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  int *v83;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  __int128 v107;
  uint64_t v108;
  char *v109;
  char *v110;
  __int128 v111;
  uint64_t v112;
  char *v113;
  char *v114;
  __int128 v115;
  uint64_t v116;
  char *v117;
  char *v118;
  __int128 v119;
  uint64_t v120;
  __int128 v121;
  uint64_t v122;
  char *v123;
  char *v124;
  __int128 v125;
  uint64_t v126;
  __int128 v127;
  uint64_t v128;
  char *v129;
  char *v130;
  __int128 v131;
  uint64_t v132;
  __int128 v133;
  uint64_t v134;
  char *v135;
  char *v136;
  __int128 v137;
  uint64_t v138;
  __int128 v139;
  uint64_t v140;
  char *v141;
  char *v142;
  __int128 v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void *v158;
  const void *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  int *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char v168;
  uint64_t v169;
  uint64_t v170;
  unsigned __int8 v171;
  uint64_t v172;
  char *v173;
  void (*v174)(char *, char *, uint64_t);
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t (*v178)(char *, uint64_t, uint64_t);
  int v179;
  int v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t *v189;
  uint64_t *v190;
  unint64_t v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  _QWORD *v195;
  uint64_t *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  _QWORD *v200;
  uint64_t *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  _QWORD *v205;
  uint64_t *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  uint64_t *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  _OWORD *__dst;
  _OWORD *__dsta;
  void (*v220)(char *, char *, uint64_t);
  void (*v221)(char *, char *, uint64_t);
  void (*v222)(_OWORD *, char *, uint64_t);
  uint64_t v223;
  void (*v224)(uint64_t, uint64_t, uint64_t);
  void (*v225)(uint64_t, uint64_t, uint64_t);
  void (*v226)(uint64_t, uint64_t, uint64_t);
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  int *v230;

  v6 = sub_1A2AE3130();
  v229 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v229 + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1A2AE30C4();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40))(v9, v10, v11);
  v223 = v6;
  v230 = a3;
  if (a1 != a2)
  {
    v13 = a3[6];
    v14 = (_OWORD *)(a1 + v13);
    v15 = (_OWORD *)(a2 + v13);
    sub_1A297DA3C(a1 + v13, type metadata accessor for SFAirDropSend.Transfer.State);
    v16 = type metadata accessor for SFAirDropSend.Transfer.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *v14 = *v15;
        v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA20) + 64);
        v18 = (char *)v14 + v17;
        v19 = (char *)v15 + v17;
        *((_WORD *)v18 + 24) = *(_WORD *)((char *)v15 + v17 + 48);
        v20 = *(_OWORD *)((char *)v15 + v17 + 16);
        *(_OWORD *)v18 = *(_OWORD *)((char *)v15 + v17);
        *((_OWORD *)v18 + 1) = v20;
        *((_OWORD *)v18 + 2) = *(_OWORD *)((char *)v15 + v17 + 32);
        v21 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v22 = &v18[v21];
        v6 = v223;
        v23 = &v19[v21];
        (*(void (**)(char *, char *, uint64_t))(v229 + 32))(v22, &v19[v21], v223);
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788);
        *(_OWORD *)&v22[*(int *)(v24 + 68)] = *(_OWORD *)&v23[*(int *)(v24 + 68)];
        goto LABEL_51;
      case 1u:
        v224 = v7;
        *(_QWORD *)v14 = *(_QWORD *)v15;
        v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA18) + 48);
        v26 = (char *)v14 + v25;
        v27 = (char *)v15 + v25;
        v220 = *(void (**)(char *, char *, uint64_t))(v229 + 32);
        v220((char *)v14 + v25, (char *)v15 + v25, v6);
        v28 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA10);
        v26[v28[13]] = v27[v28[13]];
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v26[v28[14]], &v27[v28[14]], v11);
        v29 = v28[15];
        v30 = &v26[v29];
        v31 = &v27[v29];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA08);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v107 = *((_OWORD *)v31 + 1);
          *(_OWORD *)v30 = *(_OWORD *)v31;
          *((_OWORD *)v30 + 1) = v107;
          *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
          v108 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA18) + 80);
          v109 = &v30[v108];
          v110 = &v31[v108];
          *((_WORD *)v109 + 24) = *(_WORD *)&v31[v108 + 48];
          v111 = *(_OWORD *)&v31[v108 + 16];
          *(_OWORD *)v109 = *(_OWORD *)&v31[v108];
          *((_OWORD *)v109 + 1) = v111;
          *((_OWORD *)v109 + 2) = *(_OWORD *)&v31[v108 + 32];
          v112 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          v37 = &v109[v112];
          v6 = v223;
          v38 = &v110[v112];
          v113 = v37;
          v114 = &v110[v112];
        }
        else
        {
          if (EnumCaseMultiPayload == 1)
          {
            *v30 = *v31;
            v33 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA20) + 48);
            v34 = &v30[v33];
            v35 = &v31[v33];
            v220(&v30[v33], v35, v6);
            v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA28) + 52);
            v37 = &v34[v36];
            v38 = &v35[v36];
            v220(v37, v38, v6);
            v39 = &qword_1EE67B7A0;
            goto LABEL_36;
          }
          v115 = *((_OWORD *)v31 + 1);
          *(_OWORD *)v30 = *(_OWORD *)v31;
          *((_OWORD *)v30 + 1) = v115;
          *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
          v116 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA18) + 80);
          v117 = &v30[v116];
          v118 = &v31[v116];
          *((_WORD *)v117 + 24) = *(_WORD *)&v31[v116 + 48];
          v119 = *(_OWORD *)&v31[v116 + 16];
          *(_OWORD *)v117 = *(_OWORD *)&v31[v116];
          *((_OWORD *)v117 + 1) = v119;
          *((_OWORD *)v117 + 2) = *(_OWORD *)&v31[v116 + 32];
          v120 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          v37 = &v117[v120];
          v38 = &v118[v120];
          v113 = &v117[v120];
          v114 = &v118[v120];
          v6 = v223;
        }
        goto LABEL_35;
      case 2u:
        v40 = v15[1];
        *v14 = *v15;
        v14[1] = v40;
        v14[2] = v15[2];
        *((_QWORD *)v14 + 6) = *((_QWORD *)v15 + 6);
        *(_OWORD *)((char *)v14 + 56) = *(_OWORD *)((char *)v15 + 56);
        v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA08) + 80);
        v42 = (char *)v14 + v41;
        v43 = (char *)v15 + v41;
        *((_WORD *)v42 + 24) = *(_WORD *)((char *)v15 + v41 + 48);
        v44 = *(_OWORD *)((char *)v15 + v41 + 16);
        *(_OWORD *)v42 = *(_OWORD *)((char *)v15 + v41);
        *((_OWORD *)v42 + 1) = v44;
        *((_OWORD *)v42 + 2) = *(_OWORD *)((char *)v15 + v41 + 32);
        v45 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v46 = &v42[v45];
        v6 = v223;
        v47 = &v43[v45];
        (*(void (**)(char *, char *, uint64_t))(v229 + 32))(v46, &v43[v45], v223);
        v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788);
        *(_OWORD *)&v46[*(int *)(v48 + 68)] = *(_OWORD *)&v47[*(int *)(v48 + 68)];
        goto LABEL_51;
      case 3u:
        v224 = v7;
        v49 = v15[3];
        v14[2] = v15[2];
        v14[3] = v49;
        *((_QWORD *)v14 + 8) = *((_QWORD *)v15 + 8);
        v50 = v15[1];
        *v14 = *v15;
        v14[1] = v50;
        v51 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA10) + 48);
        v52 = (char *)v14 + v51;
        v53 = (char *)v15 + v51;
        v220 = *(void (**)(char *, char *, uint64_t))(v229 + 32);
        v220((char *)v14 + v51, (char *)v15 + v51, v6);
        v54 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B3B0);
        v52[v54[13]] = v53[v54[13]];
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v52[v54[14]], &v53[v54[14]], v11);
        v55 = v54[15];
        v56 = &v52[v55];
        v57 = &v53[v55];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B400);
        v58 = swift_getEnumCaseMultiPayload();
        if (v58 == 2)
        {
          v121 = *((_OWORD *)v57 + 1);
          *(_OWORD *)v56 = *(_OWORD *)v57;
          *((_OWORD *)v56 + 1) = v121;
          *((_QWORD *)v56 + 4) = *((_QWORD *)v57 + 4);
          v122 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B410) + 80);
          v123 = &v56[v122];
          v124 = &v57[v122];
          *((_WORD *)v123 + 24) = *(_WORD *)&v57[v122 + 48];
          v125 = *(_OWORD *)&v57[v122 + 16];
          *(_OWORD *)v123 = *(_OWORD *)&v57[v122];
          *((_OWORD *)v123 + 1) = v125;
          *((_OWORD *)v123 + 2) = *(_OWORD *)&v57[v122 + 32];
          v126 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          v37 = &v123[v126];
          v6 = v223;
          v38 = &v124[v126];
          v113 = v37;
          v114 = &v124[v126];
        }
        else
        {
          if (v58 == 1)
          {
            *v56 = *v57;
            v59 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A8) + 48);
            v60 = &v56[v59];
            v61 = &v57[v59];
            v220(&v56[v59], v61, v6);
            v62 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B0) + 52);
            v37 = &v60[v62];
            v38 = &v61[v62];
            v220(v37, v38, v6);
            v39 = &qword_1EE67B7A0;
            goto LABEL_36;
          }
          v127 = *((_OWORD *)v57 + 1);
          *(_OWORD *)v56 = *(_OWORD *)v57;
          *((_OWORD *)v56 + 1) = v127;
          *((_QWORD *)v56 + 4) = *((_QWORD *)v57 + 4);
          v128 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B410) + 80);
          v129 = &v56[v128];
          v130 = &v57[v128];
          *((_WORD *)v129 + 24) = *(_WORD *)&v57[v128 + 48];
          v131 = *(_OWORD *)&v57[v128 + 16];
          *(_OWORD *)v129 = *(_OWORD *)&v57[v128];
          *((_OWORD *)v129 + 1) = v131;
          *((_OWORD *)v129 + 2) = *(_OWORD *)&v57[v128 + 32];
          v132 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          v37 = &v129[v132];
          v38 = &v130[v132];
          v113 = &v129[v132];
          v114 = &v130[v132];
          v6 = v223;
        }
        goto LABEL_35;
      case 5u:
        v224 = v7;
        v63 = v15[3];
        v14[2] = v15[2];
        v14[3] = v63;
        *((_QWORD *)v14 + 8) = *((_QWORD *)v15 + 8);
        v64 = v15[1];
        *v14 = *v15;
        v14[1] = v64;
        v65 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA00) + 48);
        v66 = (char *)v14 + v65;
        v67 = (char *)v15 + v65;
        v220 = *(void (**)(char *, char *, uint64_t))(v229 + 32);
        v220((char *)v14 + v65, (char *)v15 + v65, v6);
        v68 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA38);
        v66[v68[13]] = v67[v68[13]];
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v66[v68[14]], &v67[v68[14]], v11);
        v69 = v68[15];
        v70 = &v66[v69];
        v71 = &v67[v69];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA30);
        v72 = swift_getEnumCaseMultiPayload();
        if (v72 == 2)
        {
          v133 = *((_OWORD *)v71 + 1);
          *(_OWORD *)v70 = *(_OWORD *)v71;
          *((_OWORD *)v70 + 1) = v133;
          *((_QWORD *)v70 + 4) = *((_QWORD *)v71 + 4);
          v134 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA40) + 80);
          v135 = &v70[v134];
          v136 = &v71[v134];
          *((_WORD *)v135 + 24) = *(_WORD *)&v71[v134 + 48];
          v137 = *(_OWORD *)&v71[v134 + 16];
          *(_OWORD *)v135 = *(_OWORD *)&v71[v134];
          *((_OWORD *)v135 + 1) = v137;
          *((_OWORD *)v135 + 2) = *(_OWORD *)&v71[v134 + 32];
          v138 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          v37 = &v135[v138];
          v6 = v223;
          v38 = &v136[v138];
          v113 = v37;
          v114 = &v136[v138];
        }
        else
        {
          if (v72 == 1)
          {
            *v70 = *v71;
            v73 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA48) + 48);
            v74 = &v70[v73];
            v75 = &v71[v73];
            v220(&v70[v73], v75, v6);
            v76 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA50) + 52);
            v37 = &v74[v76];
            v38 = &v75[v76];
            v220(v37, v38, v6);
            v39 = &qword_1EE67B7A0;
            goto LABEL_36;
          }
          v139 = *((_OWORD *)v71 + 1);
          *(_OWORD *)v70 = *(_OWORD *)v71;
          *((_OWORD *)v70 + 1) = v139;
          *((_QWORD *)v70 + 4) = *((_QWORD *)v71 + 4);
          v140 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA40) + 80);
          v141 = &v70[v140];
          v142 = &v71[v140];
          *((_WORD *)v141 + 24) = *(_WORD *)&v71[v140 + 48];
          v143 = *(_OWORD *)&v71[v140 + 16];
          *(_OWORD *)v141 = *(_OWORD *)&v71[v140];
          *((_OWORD *)v141 + 1) = v143;
          *((_OWORD *)v141 + 2) = *(_OWORD *)&v71[v140 + 32];
          v144 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          v37 = &v141[v144];
          v38 = &v142[v144];
          v113 = &v141[v144];
          v114 = &v142[v144];
          v6 = v223;
        }
LABEL_35:
        v220(v113, v114, v6);
        v39 = &qword_1EE67B788;
LABEL_36:
        v145 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v39) + 68);
        v146 = &v37[v145];
        v147 = &v38[v145];
        a3 = v230;
        *(_OWORD *)v146 = *(_OWORD *)v147;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        v7 = v224;
        break;
      case 6u:
        v225 = v7;
        v221 = *(void (**)(_OWORD *, char *, uint64_t))(v229 + 32);
        v221(v14, (char *)v15, v6);
        v77 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
        v78 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        v78((char *)v14 + v77[5], (char *)v15 + v77[5], v11);
        v79 = v77[6];
        v80 = (char *)v14 + v79;
        v81 = (char *)v15 + v79;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))((char *)v15 + v79, 1, v11))
        {
          v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
          memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
        }
        else
        {
          v78(v80, v81, v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v80, 0, 1, v11);
        }
        v6 = v223;
        v89 = v77[7];
        v90 = (char *)v14 + v89;
        v91 = (char *)v15 + v89;
        v92 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
        v93 = *(_QWORD *)(v92 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v91, 1, v92))
        {
          v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
          memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
          a3 = v230;
        }
        else
        {
          __dst = v90;
          v101 = type metadata accessor for SFAirDropSend.Failure();
          v102 = *(_QWORD *)(v101 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v91, 1, v101))
          {
            v103 = __dst;
            memcpy(__dst, v91, *(_QWORD *)(v93 + 64));
          }
          else
          {
            v216 = v102;
            v148 = v101;
            if (swift_getEnumCaseMultiPayload())
            {
              v215 = v101;
              v149 = v216;
              v103 = __dst;
              memcpy(__dst, v91, *(_QWORD *)(v216 + 64));
              v150 = v215;
            }
            else
            {
              v103 = __dst;
              v221(__dst, v91, v223);
              swift_storeEnumTagMultiPayload();
              v150 = v148;
              v149 = v216;
            }
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v103, 0, 1, v150);
          }
          a3 = v230;
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v103, 0, 1, v92);
        }
        v7 = v225;
        v151 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F8) + 48);
        v152 = (char *)v14 + v151;
        v153 = (char *)v15 + v151;
        v154 = type metadata accessor for SFAirDropSend.Failure();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v152, v153, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
        }
        else
        {
          v221(v152, v153, v223);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_51;
      case 7u:
        v226 = v7;
        v222 = *(void (**)(_OWORD *, char *, uint64_t))(v229 + 32);
        v222(v14, (char *)v15, v6);
        v83 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
        v84 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        v84((char *)v14 + v83[5], (char *)v15 + v83[5], v11);
        v85 = v83[6];
        v86 = (char *)v14 + v85;
        v87 = (char *)v15 + v85;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))((char *)v15 + v85, 1, v11))
        {
          v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
          memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
        }
        else
        {
          v84(v86, v87, v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v86, 0, 1, v11);
        }
        v6 = v223;
        v95 = v83[7];
        v96 = (char *)v14 + v95;
        v97 = (char *)v15 + v95;
        v98 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
        v99 = *(_QWORD *)(v98 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
        {
          v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
          memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
          a3 = v230;
        }
        else
        {
          __dsta = v96;
          v104 = type metadata accessor for SFAirDropSend.Failure();
          v105 = *(_QWORD *)(v104 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v97, 1, v104))
          {
            v106 = __dsta;
            memcpy(__dsta, v97, *(_QWORD *)(v99 + 64));
          }
          else
          {
            v217 = v105;
            v106 = __dsta;
            if (swift_getEnumCaseMultiPayload())
            {
              memcpy(__dsta, v97, *(_QWORD *)(v217 + 64));
            }
            else
            {
              v222(__dsta, v97, v223);
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v217 + 56))(__dsta, 0, 1, v104);
          }
          a3 = v230;
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v106, 0, 1, v98);
        }
        v7 = v226;
        v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F0);
        *(_OWORD *)((char *)v14 + *(int *)(v155 + 48)) = *(_OWORD *)((char *)v15 + *(int *)(v155 + 48));
LABEL_51:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        break;
    }
  }
  v156 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v156) = *(_BYTE *)(a2 + v156);
  if (a1 != a2)
  {
    v157 = a3[9];
    v158 = (void *)(a1 + v157);
    v159 = (const void *)(a2 + v157);
    sub_1A297DA3C(a1 + v157, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropClient.Identifier);
    v160 = type metadata accessor for SFAirDropClient.Identifier();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v158, v159, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v229 + 32))(v158, v159, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  v161 = a3[10];
  v227 = a1;
  v228 = a2;
  v162 = a1 + v161;
  v163 = a2 + v161;
  v7(a1 + v161, a2 + v161, v6);
  v164 = (int *)type metadata accessor for SFAirDropSend.Request();
  v165 = v164[5];
  v166 = v162 + v165;
  v167 = v163 + v165;
  v168 = *(_BYTE *)(v167 + 16);
  v169 = *(_QWORD *)v166;
  v170 = *(_QWORD *)(v166 + 8);
  *(_OWORD *)v166 = *(_OWORD *)v167;
  v171 = *(_BYTE *)(v166 + 16);
  *(_BYTE *)(v166 + 16) = v168;
  sub_1A2994E20(v169, v170, v171);
  *(_QWORD *)(v162 + v164[6]) = *(_QWORD *)(v163 + v164[6]);
  swift_bridgeObjectRelease();
  v7(v162 + v164[7], v163 + v164[7], v6);
  v172 = v164[8];
  v173 = (char *)(v162 + v172);
  v174 = (void (*)(char *, char *, uint64_t))v7;
  v175 = (char *)(v163 + v172);
  v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE674658);
  v177 = *(_QWORD *)(v176 - 8);
  v178 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v177 + 48);
  v179 = v178(v173, 1, v176);
  v180 = v178(v175, 1, v176);
  if (v179)
  {
    if (!v180)
    {
      (*(void (**)(char *, char *, uint64_t))(v229 + 32))(v173, v175, v223);
      *(_OWORD *)&v173[*(int *)(v176 + 68)] = *(_OWORD *)&v175[*(int *)(v176 + 68)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v177 + 56))(v173, 0, 1, v176);
      goto LABEL_62;
    }
    goto LABEL_61;
  }
  if (v180)
  {
    sub_1A296F108((uint64_t)v173, &qword_1EE674658);
LABEL_61:
    v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67D068);
    memcpy(v173, v175, *(_QWORD *)(*(_QWORD *)(v181 - 8) + 64));
    goto LABEL_62;
  }
  v174(v173, v175, v223);
  *(_OWORD *)&v173[*(int *)(v176 + 68)] = *(_OWORD *)&v175[*(int *)(v176 + 68)];
  swift_release();
LABEL_62:
  *(_QWORD *)(v162 + v164[9]) = *(_QWORD *)(v163 + v164[9]);
  swift_bridgeObjectRelease();
  v182 = v164[10];
  v183 = v162 + v182;
  v184 = v163 + v182;
  v185 = *(_QWORD *)(v162 + v182 + 8);
  if (v185 >> 60 == 15)
  {
LABEL_65:
    *(_OWORD *)v183 = *(_OWORD *)v184;
    goto LABEL_67;
  }
  v186 = *(_QWORD *)(v184 + 8);
  if (v186 >> 60 == 15)
  {
    sub_1A299C970(v183);
    goto LABEL_65;
  }
  v187 = *(_QWORD *)v183;
  *(_QWORD *)v183 = *(_QWORD *)v184;
  *(_QWORD *)(v183 + 8) = v186;
  sub_1A29736C4(v187, v185);
LABEL_67:
  v188 = v164[11];
  v189 = (uint64_t *)(v162 + v188);
  v190 = (uint64_t *)(v163 + v188);
  v191 = *(_QWORD *)(v162 + v188 + 8);
  if (v191 >> 60 != 15)
  {
    v192 = v190[1];
    if (v192 >> 60 != 15)
    {
      v193 = *v189;
      *v189 = *v190;
      v189[1] = v192;
      sub_1A29736C4(v193, v191);
      goto LABEL_72;
    }
    sub_1A299C970((uint64_t)v189);
  }
  *(_OWORD *)v189 = *(_OWORD *)v190;
LABEL_72:
  v194 = v164[12];
  v195 = (_QWORD *)(v162 + v194);
  v196 = (uint64_t *)(v163 + v194);
  v198 = *v196;
  v197 = v196[1];
  *v195 = v198;
  v195[1] = v197;
  swift_bridgeObjectRelease();
  v199 = v164[13];
  v200 = (_QWORD *)(v162 + v199);
  v201 = (uint64_t *)(v163 + v199);
  v203 = *v201;
  v202 = v201[1];
  *v200 = v203;
  v200[1] = v202;
  swift_bridgeObjectRelease();
  v204 = v230[11];
  v205 = (_QWORD *)(v227 + v204);
  v206 = (uint64_t *)(v228 + v204);
  v208 = *v206;
  v207 = v206[1];
  *v205 = v208;
  v205[1] = v207;
  swift_bridgeObjectRelease();
  v209 = v230[12];
  v210 = (_QWORD *)(v227 + v209);
  v211 = (uint64_t *)(v228 + v209);
  v213 = *v211;
  v212 = v211[1];
  *v210 = v213;
  v210[1] = v212;
  swift_bridgeObjectRelease();
  return v227;
}

uint64_t _s8TransferVwet_0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2A8AA28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v18;
  int v19;

  v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1A2AE30C4();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_11:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_11;
  }
  v15 = type metadata accessor for SFAirDropClient.Identifier();
  v12 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v15;
    v13 = a3[9];
    goto LABEL_11;
  }
  v16 = type metadata accessor for SFAirDropSend.Request();
  v12 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v16;
    v13 = a3[10];
    goto LABEL_11;
  }
  v18 = *(_QWORD *)(a1 + a3[11] + 8);
  if (v18 >= 0xFFFFFFFF)
    LODWORD(v18) = -1;
  v19 = v18 - 1;
  if (v19 < 0)
    v19 = -1;
  return (v19 + 1);
}

uint64_t _s8TransferVwst_0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2A8AB58(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  v8 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = sub_1A2AE30C4();
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_11:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  v16 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = a4[6];
    goto LABEL_11;
  }
  v17 = type metadata accessor for SFAirDropClient.Identifier();
  v14 = *(_QWORD *)(v17 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v17;
    v15 = a4[9];
    goto LABEL_11;
  }
  result = type metadata accessor for SFAirDropSend.Request();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[10];
    goto LABEL_11;
  }
  *(_QWORD *)(a1 + a4[11] + 8) = a2;
  return result;
}

uint64_t sub_1A2A8AC6C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  result = sub_1A2AE3130();
  if (v1 <= 0x3F)
  {
    result = sub_1A2AE30C4();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for SFAirDropSend.Transfer.State(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for SFAirDropClient.Identifier();
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for SFAirDropSend.Request();
          if (v5 <= 0x3F)
          {
            swift_initStructMetadata();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

_QWORD *_s8TransferV5StateOwCP_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int EnumCaseMultiPayload;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  int *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  int v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  int *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  int v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  int *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(char *, char *, uint64_t);
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  int *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(char *, char *, uint64_t);
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unsigned __int8 v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unsigned __int8 v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unsigned __int8 v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  unsigned __int8 v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unsigned __int8 v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  unsigned __int8 v250;
  uint64_t v251;
  char *v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  int v256;
  int v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  _QWORD *v261;
  _QWORD *v262;
  uint64_t v263;
  int v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  _QWORD *v270;
  _QWORD *v271;
  uint64_t v272;
  void (*v273)(char *, char *, uint64_t);
  void (*v274)(char *, char *, uint64_t);
  void (*v275)(char *, char *, uint64_t);
  void (*v276)(char *, char *, uint64_t);
  void (*v277)(char *, char *, uint64_t);
  void (*v278)(char *, char *, uint64_t);
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  void (*v285)(_QWORD *, _QWORD *, uint64_t);
  void (*v286)(_QWORD *, _QWORD *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v25 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        swift_bridgeObjectRetain();
        v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA20) + 64);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = *(_QWORD *)((char *)a2 + v8 + 8);
        *(_QWORD *)v9 = *(_QWORD *)((char *)a2 + v8);
        *((_QWORD *)v9 + 1) = v11;
        v12 = *(_QWORD *)((char *)a2 + v8 + 16);
        v13 = *((_QWORD *)v10 + 3);
        v14 = *((_QWORD *)v10 + 4);
        v15 = *((_QWORD *)v10 + 5);
        v16 = v10[48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v12, v13, v14, v15, v16);
        *((_QWORD *)v9 + 2) = v12;
        *((_QWORD *)v9 + 3) = v13;
        *((_QWORD *)v9 + 4) = v14;
        *((_QWORD *)v9 + 5) = v15;
        v9[48] = v16;
        v9[49] = v10[49];
        v17 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v18 = &v9[v17];
        v19 = &v10[v17];
        v20 = sub_1A2AE3130();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
        v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v22 = &v18[v21];
        v23 = &v19[v21];
        v24 = *((_QWORD *)v23 + 1);
        *(_QWORD *)v22 = *(_QWORD *)v23;
        *((_QWORD *)v22 + 1) = v24;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA18) + 48);
        v28 = (char *)a1 + v27;
        v29 = (char *)a2 + v27;
        v30 = sub_1A2AE3130();
        v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
        v31(v28, v29, v30);
        v32 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA10);
        v28[v32[13]] = v29[v32[13]];
        v33 = v32[14];
        v34 = &v28[v33];
        v35 = &v29[v33];
        v36 = sub_1A2AE30C4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
        v37 = v32[15];
        v38 = &v28[v37];
        v39 = &v29[v37];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA08);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v171 = *((_QWORD *)v39 + 1);
          *(_QWORD *)v38 = *(_QWORD *)v39;
          *((_QWORD *)v38 + 1) = v171;
          v172 = *((_QWORD *)v39 + 3);
          *((_QWORD *)v38 + 2) = *((_QWORD *)v39 + 2);
          *((_QWORD *)v38 + 3) = v172;
          *((_QWORD *)v38 + 4) = *((_QWORD *)v39 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v173 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA18) + 80);
          v174 = &v38[v173];
          v175 = &v39[v173];
          v176 = *(_QWORD *)&v39[v173 + 8];
          *(_QWORD *)v174 = *(_QWORD *)&v39[v173];
          *((_QWORD *)v174 + 1) = v176;
          v177 = *(_QWORD *)&v39[v173 + 16];
          v178 = *(_QWORD *)&v39[v173 + 24];
          v273 = v31;
          v279 = v30;
          v179 = *((_QWORD *)v175 + 4);
          v180 = *((_QWORD *)v175 + 5);
          v181 = v175[48];
          swift_bridgeObjectRetain();
          sub_1A2993E10(v177, v178, v179, v180, v181);
          *((_QWORD *)v174 + 2) = v177;
          *((_QWORD *)v174 + 3) = v178;
          *((_QWORD *)v174 + 4) = v179;
          *((_QWORD *)v174 + 5) = v180;
          v174[48] = v181;
          v174[49] = v175[49];
          v182 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          v45 = &v174[v182];
          v46 = &v175[v182];
          v273(&v174[v182], &v175[v182], v279);
          v47 = &qword_1EE67B788;
          goto LABEL_38;
        }
        if (EnumCaseMultiPayload == 1)
        {
          *v38 = *v39;
          v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA20) + 48);
          v42 = &v38[v41];
          v43 = &v39[v41];
          v31(&v38[v41], v43, v30);
          v44 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA28) + 52);
          v45 = &v42[v44];
          v46 = &v43[v44];
          v31(v45, v46, v30);
          v47 = &qword_1EE67B7A0;
          goto LABEL_38;
        }
        v274 = v31;
        v280 = v30;
        v183 = *((_QWORD *)v39 + 1);
        *(_QWORD *)v38 = *(_QWORD *)v39;
        *((_QWORD *)v38 + 1) = v183;
        v184 = *((_QWORD *)v39 + 3);
        *((_QWORD *)v38 + 2) = *((_QWORD *)v39 + 2);
        *((_QWORD *)v38 + 3) = v184;
        *((_QWORD *)v38 + 4) = *((_QWORD *)v39 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v185 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA18) + 80);
        v186 = &v38[v185];
        v187 = &v39[v185];
        v188 = *(_QWORD *)&v39[v185 + 8];
        *(_QWORD *)v186 = *(_QWORD *)&v39[v185];
        *((_QWORD *)v186 + 1) = v188;
        v189 = *(_QWORD *)&v39[v185 + 16];
        v190 = *((_QWORD *)v187 + 3);
        v191 = *((_QWORD *)v187 + 4);
        v192 = *((_QWORD *)v187 + 5);
        v193 = v187[48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v189, v190, v191, v192, v193);
        *((_QWORD *)v186 + 2) = v189;
        *((_QWORD *)v186 + 3) = v190;
        *((_QWORD *)v186 + 4) = v191;
        *((_QWORD *)v186 + 5) = v192;
        v186[48] = v193;
        v186[49] = v187[49];
        v194 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v195 = &v186[v194];
        v196 = &v187[v194];
        v274(&v186[v194], &v187[v194], v280);
        v197 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v198 = &v195[v197];
        v199 = &v196[v197];
        goto LABEL_42;
      case 2u:
        v48 = a2[1];
        *a1 = *a2;
        a1[1] = v48;
        v49 = a2[2];
        v50 = a2[3];
        v51 = a2[4];
        v52 = a2[5];
        v53 = a2[6];
        swift_bridgeObjectRetain();
        sub_1A2993E5C(v49, v50, v51);
        a1[2] = v49;
        a1[3] = v50;
        a1[4] = v51;
        a1[5] = v52;
        v55 = a2[7];
        v54 = a2[8];
        a1[6] = v53;
        a1[7] = v55;
        a1[8] = v54;
        swift_bridgeObjectRetain();
        v56 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA08) + 80);
        v57 = (char *)a1 + v56;
        v58 = (char *)a2 + v56;
        v59 = *(_QWORD *)((char *)a2 + v56 + 8);
        *(_QWORD *)v57 = *(_QWORD *)((char *)a2 + v56);
        *((_QWORD *)v57 + 1) = v59;
        v60 = *(_QWORD *)((char *)a2 + v56 + 16);
        v61 = *((_QWORD *)v58 + 3);
        v62 = *((_QWORD *)v58 + 4);
        v63 = *((_QWORD *)v58 + 5);
        LOBYTE(v52) = v58[48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v60, v61, v62, v63, v52);
        *((_QWORD *)v57 + 2) = v60;
        *((_QWORD *)v57 + 3) = v61;
        *((_QWORD *)v57 + 4) = v62;
        *((_QWORD *)v57 + 5) = v63;
        v57[48] = v52;
        v57[49] = v58[49];
        v64 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v65 = &v57[v64];
        v66 = &v58[v64];
        v67 = sub_1A2AE3130();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
        v68 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v69 = &v65[v68];
        v70 = &v66[v68];
        v71 = *((_QWORD *)v70 + 1);
        *(_QWORD *)v69 = *(_QWORD *)v70;
        *((_QWORD *)v69 + 1) = v71;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 3u:
        v72 = a2[1];
        *a1 = *a2;
        a1[1] = v72;
        v73 = a2[3];
        a1[2] = a2[2];
        a1[3] = v73;
        v74 = a2[4];
        v75 = a2[5];
        v76 = *((_BYTE *)a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A297208C();
        a1[4] = v74;
        a1[5] = v75;
        *((_BYTE *)a1 + 48) = v76;
        v77 = a2[7];
        v78 = a2[8];
        sub_1A2973524(v77, v78);
        a1[7] = v77;
        a1[8] = v78;
        v79 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA10) + 48);
        v80 = (char *)a1 + v79;
        v81 = (char *)a2 + v79;
        v82 = sub_1A2AE3130();
        v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16);
        v83(v80, v81, v82);
        v84 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B3B0);
        v80[v84[13]] = v81[v84[13]];
        v85 = v84[14];
        v86 = &v80[v85];
        v87 = &v81[v85];
        v88 = sub_1A2AE30C4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v86, v87, v88);
        v89 = v84[15];
        v90 = &v80[v89];
        v91 = &v81[v89];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B400);
        v92 = swift_getEnumCaseMultiPayload();
        if (v92 == 2)
        {
          v200 = *((_QWORD *)v91 + 1);
          *(_QWORD *)v90 = *(_QWORD *)v91;
          *((_QWORD *)v90 + 1) = v200;
          v201 = *((_QWORD *)v91 + 3);
          *((_QWORD *)v90 + 2) = *((_QWORD *)v91 + 2);
          *((_QWORD *)v90 + 3) = v201;
          *((_QWORD *)v90 + 4) = *((_QWORD *)v91 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v202 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B410) + 80);
          v203 = &v90[v202];
          v204 = &v91[v202];
          v205 = *(_QWORD *)&v91[v202 + 8];
          *(_QWORD *)v203 = *(_QWORD *)&v91[v202];
          *((_QWORD *)v203 + 1) = v205;
          v206 = *(_QWORD *)&v91[v202 + 16];
          v207 = *(_QWORD *)&v91[v202 + 24];
          v275 = v83;
          v281 = v82;
          v208 = *((_QWORD *)v204 + 4);
          v209 = *((_QWORD *)v204 + 5);
          v210 = v204[48];
          swift_bridgeObjectRetain();
          sub_1A2993E10(v206, v207, v208, v209, v210);
          *((_QWORD *)v203 + 2) = v206;
          *((_QWORD *)v203 + 3) = v207;
          *((_QWORD *)v203 + 4) = v208;
          *((_QWORD *)v203 + 5) = v209;
          v203[48] = v210;
          v203[49] = v204[49];
          v211 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          v45 = &v203[v211];
          v46 = &v204[v211];
          v275(&v203[v211], &v204[v211], v281);
          v47 = &qword_1EE67B788;
          goto LABEL_38;
        }
        if (v92 == 1)
        {
          *v90 = *v91;
          v93 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A8) + 48);
          v94 = &v90[v93];
          v95 = &v91[v93];
          v83(&v90[v93], v95, v82);
          v96 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B0) + 52);
          v45 = &v94[v96];
          v46 = &v95[v96];
          v83(v45, v46, v82);
          v47 = &qword_1EE67B7A0;
          goto LABEL_38;
        }
        v276 = v83;
        v282 = v82;
        v213 = *((_QWORD *)v91 + 1);
        *(_QWORD *)v90 = *(_QWORD *)v91;
        *((_QWORD *)v90 + 1) = v213;
        v214 = *((_QWORD *)v91 + 3);
        *((_QWORD *)v90 + 2) = *((_QWORD *)v91 + 2);
        *((_QWORD *)v90 + 3) = v214;
        *((_QWORD *)v90 + 4) = *((_QWORD *)v91 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v215 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B410) + 80);
        v216 = &v90[v215];
        v217 = &v91[v215];
        v218 = *(_QWORD *)&v91[v215 + 8];
        *(_QWORD *)v216 = *(_QWORD *)&v91[v215];
        *((_QWORD *)v216 + 1) = v218;
        v219 = *(_QWORD *)&v91[v215 + 16];
        v220 = *((_QWORD *)v217 + 3);
        v221 = *((_QWORD *)v217 + 4);
        v222 = *((_QWORD *)v217 + 5);
        v223 = v217[48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v219, v220, v221, v222, v223);
        *((_QWORD *)v216 + 2) = v219;
        *((_QWORD *)v216 + 3) = v220;
        *((_QWORD *)v216 + 4) = v221;
        *((_QWORD *)v216 + 5) = v222;
        v216[48] = v223;
        v216[49] = v217[49];
        v224 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v225 = &v216[v224];
        v226 = &v217[v224];
        v276(&v216[v224], &v217[v224], v282);
        v227 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v198 = &v225[v227];
        v199 = &v226[v227];
        goto LABEL_42;
      case 4u:
        v97 = a2[3];
        if (v97 >= 2)
        {
          v149 = a2[1];
          *a1 = *a2;
          a1[1] = v149;
          a1[2] = a2[2];
          a1[3] = v97;
          v150 = a2[4];
          v151 = a2[5];
          v152 = *((_BYTE *)a2 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1A297208C();
          a1[4] = v150;
          a1[5] = v151;
          *((_BYTE *)a1 + 48) = v152;
          v154 = a2[7];
          v153 = a2[8];
          sub_1A2973524(v154, v153);
          a1[7] = v154;
          a1[8] = v153;
        }
        else
        {
          v98 = *((_OWORD *)a2 + 3);
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          *((_OWORD *)a1 + 3) = v98;
          a1[8] = a2[8];
          v99 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_OWORD *)a1 + 1) = v99;
        }
        goto LABEL_24;
      case 5u:
        v100 = a2[1];
        *a1 = *a2;
        a1[1] = v100;
        v101 = a2[3];
        a1[2] = a2[2];
        a1[3] = v101;
        v102 = a2[4];
        v103 = a2[5];
        v104 = *((_BYTE *)a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A297208C();
        a1[4] = v102;
        a1[5] = v103;
        *((_BYTE *)a1 + 48) = v104;
        v105 = a2[7];
        v106 = a2[8];
        sub_1A2973524(v105, v106);
        a1[7] = v105;
        a1[8] = v106;
        v107 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA00) + 48);
        v108 = (char *)a1 + v107;
        v109 = (char *)a2 + v107;
        v110 = sub_1A2AE3130();
        v111 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16);
        v111(v108, v109, v110);
        v112 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA38);
        v108[v112[13]] = v109[v112[13]];
        v113 = v112[14];
        v114 = &v108[v113];
        v115 = &v109[v113];
        v116 = sub_1A2AE30C4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 16))(v114, v115, v116);
        v117 = v112[15];
        v118 = &v108[v117];
        v119 = &v109[v117];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA30);
        v120 = swift_getEnumCaseMultiPayload();
        if (v120 == 2)
        {
          v228 = *((_QWORD *)v119 + 1);
          *(_QWORD *)v118 = *(_QWORD *)v119;
          *((_QWORD *)v118 + 1) = v228;
          v229 = *((_QWORD *)v119 + 3);
          *((_QWORD *)v118 + 2) = *((_QWORD *)v119 + 2);
          *((_QWORD *)v118 + 3) = v229;
          *((_QWORD *)v118 + 4) = *((_QWORD *)v119 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v230 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA40) + 80);
          v231 = &v118[v230];
          v232 = &v119[v230];
          v233 = *(_QWORD *)&v119[v230 + 8];
          *(_QWORD *)v231 = *(_QWORD *)&v119[v230];
          *((_QWORD *)v231 + 1) = v233;
          v234 = *(_QWORD *)&v119[v230 + 16];
          v235 = *(_QWORD *)&v119[v230 + 24];
          v277 = v111;
          v283 = v110;
          v236 = *((_QWORD *)v232 + 4);
          v237 = *((_QWORD *)v232 + 5);
          v238 = v232[48];
          swift_bridgeObjectRetain();
          sub_1A2993E10(v234, v235, v236, v237, v238);
          *((_QWORD *)v231 + 2) = v234;
          *((_QWORD *)v231 + 3) = v235;
          *((_QWORD *)v231 + 4) = v236;
          *((_QWORD *)v231 + 5) = v237;
          v231[48] = v238;
          v231[49] = v232[49];
          v239 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          v45 = &v231[v239];
          v46 = &v232[v239];
          v277(&v231[v239], &v232[v239], v283);
          v47 = &qword_1EE67B788;
          goto LABEL_38;
        }
        if (v120 == 1)
        {
          *v118 = *v119;
          v121 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA48) + 48);
          v122 = &v118[v121];
          v123 = &v119[v121];
          v111(&v118[v121], v123, v110);
          v124 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA50) + 52);
          v45 = &v122[v124];
          v46 = &v123[v124];
          v111(v45, v46, v110);
          v47 = &qword_1EE67B7A0;
LABEL_38:
          v212 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v47) + 68);
          v198 = &v45[v212];
          v199 = &v46[v212];
          goto LABEL_42;
        }
        v278 = v111;
        v284 = v110;
        v240 = *((_QWORD *)v119 + 1);
        *(_QWORD *)v118 = *(_QWORD *)v119;
        *((_QWORD *)v118 + 1) = v240;
        v241 = *((_QWORD *)v119 + 3);
        *((_QWORD *)v118 + 2) = *((_QWORD *)v119 + 2);
        *((_QWORD *)v118 + 3) = v241;
        *((_QWORD *)v118 + 4) = *((_QWORD *)v119 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v242 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA40) + 80);
        v243 = &v118[v242];
        v244 = &v119[v242];
        v245 = *(_QWORD *)&v119[v242 + 8];
        *(_QWORD *)v243 = *(_QWORD *)&v119[v242];
        *((_QWORD *)v243 + 1) = v245;
        v246 = *(_QWORD *)&v119[v242 + 16];
        v247 = *((_QWORD *)v244 + 3);
        v248 = *((_QWORD *)v244 + 4);
        v249 = *((_QWORD *)v244 + 5);
        v250 = v244[48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v246, v247, v248, v249, v250);
        *((_QWORD *)v243 + 2) = v246;
        *((_QWORD *)v243 + 3) = v247;
        *((_QWORD *)v243 + 4) = v248;
        *((_QWORD *)v243 + 5) = v249;
        v243[48] = v250;
        v243[49] = v244[49];
        v251 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v252 = &v243[v251];
        v253 = &v244[v251];
        v278(&v243[v251], &v244[v251], v284);
        v254 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v198 = &v252[v254];
        v199 = &v253[v254];
LABEL_42:
        v255 = *((_QWORD *)v199 + 1);
        *(_QWORD *)v198 = *(_QWORD *)v199;
        *((_QWORD *)v198 + 1) = v255;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        v125 = sub_1A2AE3130();
        v285 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v125 - 8) + 16);
        v285(a1, a2, v125);
        v126 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
        v127 = v126[5];
        v128 = (char *)a1 + v127;
        v129 = (char *)a2 + v127;
        v130 = sub_1A2AE30C4();
        v131 = *(_QWORD *)(v130 - 8);
        v132 = *(void (**)(char *, char *, uint64_t))(v131 + 16);
        v132(v128, v129, v130);
        v133 = v126[6];
        v134 = (char *)a1 + v133;
        v135 = (char *)a2 + v133;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v131 + 48))((char *)a2 + v133, 1, v130))
        {
          v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
          memcpy(v134, v135, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
        }
        else
        {
          v132(v134, v135, v130);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v134, 0, 1, v130);
        }
        v155 = v126[7];
        v156 = (_QWORD *)((char *)a1 + v155);
        v157 = (_QWORD *)((char *)a2 + v155);
        v158 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
        v159 = *(_QWORD *)(v158 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v159 + 48))(v157, 1, v158))
        {
          v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
          memcpy(v156, v157, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
        }
        else
        {
          v167 = type metadata accessor for SFAirDropSend.Failure();
          v168 = *(_QWORD *)(v167 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v168 + 48))(v157, 1, v167))
          {
            memcpy(v156, v157, *(_QWORD *)(v159 + 64));
          }
          else
          {
            v256 = swift_getEnumCaseMultiPayload();
            if (v256 == 2)
            {
              v258 = v157[1];
              *v156 = *v157;
              v156[1] = v258;
              *((_OWORD *)v156 + 1) = *((_OWORD *)v157 + 1);
              v259 = v157[5];
              v156[4] = v157[4];
              v156[5] = v259;
              v156[6] = v157[6];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            else if (v256)
            {
              memcpy(v156, v157, *(_QWORD *)(v168 + 64));
            }
            else
            {
              v285(v156, v157, v125);
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v168 + 56))(v156, 0, 1, v167);
          }
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v159 + 56))(v156, 0, 1, v158);
        }
        v260 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F8) + 48);
        v261 = (_QWORD *)((char *)a1 + v260);
        v262 = (_QWORD *)((char *)a2 + v260);
        v263 = type metadata accessor for SFAirDropSend.Failure();
        v264 = swift_getEnumCaseMultiPayload();
        if (v264 == 2)
        {
          v265 = v262[1];
          *v261 = *v262;
          v261[1] = v265;
          *((_OWORD *)v261 + 1) = *((_OWORD *)v262 + 1);
          v266 = v262[5];
          v261[4] = v262[4];
          v261[5] = v266;
          v261[6] = v262[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (v264)
        {
          memcpy(v261, v262, *(_QWORD *)(*(_QWORD *)(v263 - 8) + 64));
        }
        else
        {
          v285(v261, v262, v125);
          swift_storeEnumTagMultiPayload();
        }
LABEL_24:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 7u:
        v137 = sub_1A2AE3130();
        v286 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v137 - 8) + 16);
        v286(a1, a2, v137);
        v138 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
        v139 = v138[5];
        v140 = (char *)a1 + v139;
        v141 = (char *)a2 + v139;
        v142 = sub_1A2AE30C4();
        v143 = *(_QWORD *)(v142 - 8);
        v144 = *(void (**)(char *, char *, uint64_t))(v143 + 16);
        v144(v140, v141, v142);
        v145 = v138[6];
        v146 = (char *)a1 + v145;
        v147 = (char *)a2 + v145;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v143 + 48))((char *)a2 + v145, 1, v142))
        {
          v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
          memcpy(v146, v147, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
        }
        else
        {
          v144(v146, v147, v142);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v143 + 56))(v146, 0, 1, v142);
        }
        v161 = v138[7];
        v162 = (_QWORD *)((char *)a1 + v161);
        v163 = (_QWORD *)((char *)a2 + v161);
        v164 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
        v165 = *(_QWORD *)(v164 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v165 + 48))(v163, 1, v164))
        {
          v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
          memcpy(v162, v163, *(_QWORD *)(*(_QWORD *)(v166 - 8) + 64));
        }
        else
        {
          v169 = type metadata accessor for SFAirDropSend.Failure();
          v170 = *(_QWORD *)(v169 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v170 + 48))(v163, 1, v169))
          {
            memcpy(v162, v163, *(_QWORD *)(v165 + 64));
          }
          else
          {
            v257 = swift_getEnumCaseMultiPayload();
            if (v257 == 2)
            {
              v267 = v163[1];
              *v162 = *v163;
              v162[1] = v267;
              *((_OWORD *)v162 + 1) = *((_OWORD *)v163 + 1);
              v268 = v163[5];
              v162[4] = v163[4];
              v162[5] = v268;
              v162[6] = v163[6];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            else if (v257)
            {
              memcpy(v162, v163, *(_QWORD *)(v170 + 64));
            }
            else
            {
              v286(v162, v163, v137);
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v170 + 56))(v162, 0, 1, v169);
          }
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v165 + 56))(v162, 0, 1, v164);
        }
        v269 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F0) + 48);
        v270 = (_QWORD *)((char *)a1 + v269);
        v271 = (_QWORD *)((char *)a2 + v269);
        v272 = v271[1];
        *v270 = *v271;
        v270[1] = v272;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t _s8TransferV5StateOwxx_0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  int v51;
  int EnumCaseMultiPayload;
  void (*v53)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      v3 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA20) + 64);
      goto LABEL_8;
    case 1:
      swift_bridgeObjectRelease();
      v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA18) + 48);
      v5 = sub_1A2AE3130();
      v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
      v6(v4, v5);
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA10);
      v8 = v4 + *(int *)(v7 + 56);
      v9 = sub_1A2AE30C4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      v10 = v4 + *(int *)(v7 + 60);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA08);
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result == 2)
        goto LABEL_6;
      if ((_DWORD)result == 1)
      {
        v48 = v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA20) + 48);
        v6(v48, v5);
        v49 = &qword_1EE67BA28;
        goto LABEL_38;
      }
      if ((_DWORD)result)
        return result;
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = &qword_1EE67BA18;
      goto LABEL_19;
    case 2:
      swift_bridgeObjectRelease();
      sub_1A297DB90(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
      swift_bridgeObjectRelease();
      v3 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA08) + 80);
LABEL_8:
      v12 = a1 + v3;
      swift_bridgeObjectRelease();
      sub_1A2994DD4(*(_QWORD *)(v12 + 16), *(_QWORD *)(v12 + 24), *(_QWORD *)(v12 + 32), *(_QWORD *)(v12 + 40), *(_BYTE *)(v12 + 48));
      v13 = v12 + *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      v14 = sub_1A2AE3130();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788);
      return swift_release();
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A2973568();
      sub_1A29736C4(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
      v15 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA10) + 48);
      v5 = sub_1A2AE3130();
      v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
      v6(v15, v5);
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B3B0);
      v17 = v15 + *(int *)(v16 + 56);
      v18 = sub_1A2AE30C4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
      v10 = v15 + *(int *)(v16 + 60);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B400);
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result == 2)
        goto LABEL_12;
      if ((_DWORD)result == 1)
      {
        v48 = v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A8) + 48);
        v6(v48, v5);
        v49 = &qword_1EE67B7B0;
        goto LABEL_38;
      }
      if ((_DWORD)result)
        return result;
LABEL_12:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = &qword_1EE67B410;
      goto LABEL_19;
    case 4:
      if (*(_QWORD *)(a1 + 24) >= 2uLL)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A2973568();
        return sub_1A29736C4(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
      }
      return result;
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A2973568();
      sub_1A29736C4(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
      v19 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA00) + 48);
      v5 = sub_1A2AE3130();
      v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
      v6(v19, v5);
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA38);
      v21 = v19 + *(int *)(v20 + 56);
      v22 = sub_1A2AE30C4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
      v10 = v19 + *(int *)(v20 + 60);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA30);
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result == 2)
        goto LABEL_18;
      if ((_DWORD)result == 1)
      {
        v48 = v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA48) + 48);
        v6(v48, v5);
        v49 = &qword_1EE67BA50;
LABEL_38:
        v50 = __swift_instantiateConcreteTypeFromMangledName(v49);
        v6(v48 + *(int *)(v50 + 52), v5);
        v25 = &qword_1EE67B7A0;
      }
      else
      {
        if ((_DWORD)result)
          return result;
LABEL_18:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v11 = &qword_1EE67BA40;
LABEL_19:
        v23 = v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v11) + 80);
        swift_bridgeObjectRelease();
        sub_1A2994DD4(*(_QWORD *)(v23 + 16), *(_QWORD *)(v23 + 24), *(_QWORD *)(v23 + 32), *(_QWORD *)(v23 + 40), *(_BYTE *)(v23 + 48));
        v24 = type metadata accessor for SFAirDrop.DeclineAction();
        v6(v23 + *(int *)(v24 + 28), v5);
        v25 = &qword_1EE67B788;
      }
      __swift_instantiateConcreteTypeFromMangledName(v25);
      return swift_release();
    case 6:
      v26 = sub_1A2AE3130();
      v53 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8);
      v53(a1, v26);
      v27 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
      v28 = a1 + v27[5];
      v29 = sub_1A2AE30C4();
      v30 = *(_QWORD *)(v29 - 8);
      v31 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      v31(v28, v29);
      v32 = a1 + v27[6];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v32, 1, v29))
        v31(v32, v29);
      v33 = a1 + v27[7];
      v34 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v33, 1, v34))
      {
        v35 = type metadata accessor for SFAirDropSend.Failure();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v33, 1, v35))
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else if (!EnumCaseMultiPayload)
          {
            v53(v33, v26);
          }
        }
      }
      v36 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F8) + 48);
      type metadata accessor for SFAirDropSend.Failure();
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result == 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      else if (!(_DWORD)result)
      {
        return ((uint64_t (*)(uint64_t, uint64_t))v53)(v36, v26);
      }
      return result;
    case 7:
      v37 = sub_1A2AE3130();
      v38 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8);
      v38(a1, v37);
      v39 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
      v40 = a1 + v39[5];
      v41 = sub_1A2AE30C4();
      v42 = *(_QWORD *)(v41 - 8);
      v43 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
      v43(v40, v41);
      v44 = a1 + v39[6];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v44, 1, v41))
        v43(v44, v41);
      v45 = a1 + v39[7];
      v46 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v45, 1, v46))
      {
        v47 = type metadata accessor for SFAirDropSend.Failure();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v45, 1, v47))
        {
          v51 = swift_getEnumCaseMultiPayload();
          if (v51 == 2)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else if (!v51)
          {
            v38(v45, v37);
          }
        }
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F0);
      return swift_bridgeObjectRelease();
    default:
      return result;
  }
}

_QWORD *_s8TransferV5StateOwcp_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int EnumCaseMultiPayload;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  void (*v80)(char *, char *, uint64_t);
  int *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  int v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  int *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  int v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  int *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(char *, char *, uint64_t);
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  int *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(char *, char *, uint64_t);
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unsigned __int8 v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unsigned __int8 v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unsigned __int8 v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unsigned __int8 v220;
  uint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unsigned __int8 v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  unsigned __int8 v247;
  uint64_t v248;
  char *v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  int v253;
  int v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  _QWORD *v258;
  _QWORD *v259;
  uint64_t v260;
  int v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  _QWORD *v267;
  _QWORD *v268;
  uint64_t v269;
  void (*v271)(char *, char *, uint64_t);
  void (*v272)(char *, char *, uint64_t);
  void (*v273)(char *, char *, uint64_t);
  void (*v274)(char *, char *, uint64_t);
  void (*v275)(char *, char *, uint64_t);
  void (*v276)(char *, char *, uint64_t);
  void (*v277)(_QWORD *, _QWORD *, uint64_t);
  void (*v278)(_QWORD *, _QWORD *, uint64_t);

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA20) + 64);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = *(_QWORD *)((char *)a2 + v7 + 8);
      *(_QWORD *)v8 = *(_QWORD *)((char *)a2 + v7);
      *((_QWORD *)v8 + 1) = v10;
      v11 = *(_QWORD *)((char *)a2 + v7 + 16);
      v12 = *((_QWORD *)v9 + 3);
      v13 = *((_QWORD *)v9 + 4);
      v14 = *((_QWORD *)v9 + 5);
      v15 = v9[48];
      swift_bridgeObjectRetain();
      sub_1A2993E10(v11, v12, v13, v14, v15);
      *((_QWORD *)v8 + 2) = v11;
      *((_QWORD *)v8 + 3) = v12;
      *((_QWORD *)v8 + 4) = v13;
      *((_QWORD *)v8 + 5) = v14;
      v8[48] = v15;
      v8[49] = v9[49];
      v16 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      v17 = &v8[v16];
      v18 = &v9[v16];
      v19 = sub_1A2AE3130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
      v21 = &v17[v20];
      v22 = &v18[v20];
      v23 = *((_QWORD *)v22 + 1);
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = v23;
      swift_retain();
      goto LABEL_59;
    case 1u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA18) + 48);
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      v27 = sub_1A2AE3130();
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      v28(v25, v26, v27);
      v29 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA10);
      v25[v29[13]] = v26[v29[13]];
      v30 = v29[14];
      v31 = &v25[v30];
      v32 = &v26[v30];
      v33 = sub_1A2AE30C4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
      v34 = v29[15];
      v35 = &v25[v34];
      v36 = &v26[v34];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA08);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v168 = *((_QWORD *)v36 + 1);
        *(_QWORD *)v35 = *(_QWORD *)v36;
        *((_QWORD *)v35 + 1) = v168;
        v169 = *((_QWORD *)v36 + 3);
        *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
        *((_QWORD *)v35 + 3) = v169;
        *((_QWORD *)v35 + 4) = *((_QWORD *)v36 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v170 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA18) + 80);
        v171 = &v35[v170];
        v172 = &v36[v170];
        v173 = *(_QWORD *)&v36[v170 + 8];
        *(_QWORD *)v171 = *(_QWORD *)&v36[v170];
        *((_QWORD *)v171 + 1) = v173;
        v174 = *(_QWORD *)&v36[v170 + 16];
        v175 = *(_QWORD *)&v36[v170 + 24];
        v271 = v28;
        v176 = *((_QWORD *)v172 + 4);
        v177 = *((_QWORD *)v172 + 5);
        v178 = v172[48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v174, v175, v176, v177, v178);
        *((_QWORD *)v171 + 2) = v174;
        *((_QWORD *)v171 + 3) = v175;
        *((_QWORD *)v171 + 4) = v176;
        *((_QWORD *)v171 + 5) = v177;
        v171[48] = v178;
        v171[49] = v172[49];
        v179 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v42 = &v171[v179];
        v43 = &v172[v179];
        v271(&v171[v179], &v172[v179], v27);
        v44 = &qword_1EE67B788;
        goto LABEL_34;
      }
      if (EnumCaseMultiPayload == 1)
      {
        *v35 = *v36;
        v38 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA20) + 48);
        v39 = &v35[v38];
        v40 = &v36[v38];
        v28(&v35[v38], v40, v27);
        v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA28) + 52);
        v42 = &v39[v41];
        v43 = &v40[v41];
        v28(v42, v43, v27);
        v44 = &qword_1EE67B7A0;
        goto LABEL_34;
      }
      v272 = v28;
      v180 = *((_QWORD *)v36 + 1);
      *(_QWORD *)v35 = *(_QWORD *)v36;
      *((_QWORD *)v35 + 1) = v180;
      v181 = *((_QWORD *)v36 + 3);
      *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
      *((_QWORD *)v35 + 3) = v181;
      *((_QWORD *)v35 + 4) = *((_QWORD *)v36 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v182 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA18) + 80);
      v183 = &v35[v182];
      v184 = &v36[v182];
      v185 = *(_QWORD *)&v36[v182 + 8];
      *(_QWORD *)v183 = *(_QWORD *)&v36[v182];
      *((_QWORD *)v183 + 1) = v185;
      v186 = *(_QWORD *)&v36[v182 + 16];
      v187 = *((_QWORD *)v184 + 3);
      v188 = *((_QWORD *)v184 + 4);
      v189 = *((_QWORD *)v184 + 5);
      v190 = v184[48];
      swift_bridgeObjectRetain();
      sub_1A2993E10(v186, v187, v188, v189, v190);
      *((_QWORD *)v183 + 2) = v186;
      *((_QWORD *)v183 + 3) = v187;
      *((_QWORD *)v183 + 4) = v188;
      *((_QWORD *)v183 + 5) = v189;
      v183[48] = v190;
      v183[49] = v184[49];
      v191 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      v192 = &v183[v191];
      v193 = &v184[v191];
      v272(&v183[v191], &v184[v191], v27);
      v194 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
      v195 = &v192[v194];
      v196 = &v193[v194];
      goto LABEL_38;
    case 2u:
      v45 = a2[1];
      *a1 = *a2;
      a1[1] = v45;
      v46 = a2[2];
      v47 = a2[3];
      v48 = a2[4];
      v49 = a2[5];
      v50 = a2[6];
      swift_bridgeObjectRetain();
      sub_1A2993E5C(v46, v47, v48);
      a1[2] = v46;
      a1[3] = v47;
      a1[4] = v48;
      a1[5] = v49;
      v52 = a2[7];
      v51 = a2[8];
      a1[6] = v50;
      a1[7] = v52;
      a1[8] = v51;
      swift_bridgeObjectRetain();
      v53 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA08) + 80);
      v54 = (char *)a1 + v53;
      v55 = (char *)a2 + v53;
      v56 = *(_QWORD *)((char *)a2 + v53 + 8);
      *(_QWORD *)v54 = *(_QWORD *)((char *)a2 + v53);
      *((_QWORD *)v54 + 1) = v56;
      v57 = *(_QWORD *)((char *)a2 + v53 + 16);
      v58 = *((_QWORD *)v55 + 3);
      v59 = *((_QWORD *)v55 + 4);
      v60 = *((_QWORD *)v55 + 5);
      LOBYTE(v49) = v55[48];
      swift_bridgeObjectRetain();
      sub_1A2993E10(v57, v58, v59, v60, v49);
      *((_QWORD *)v54 + 2) = v57;
      *((_QWORD *)v54 + 3) = v58;
      *((_QWORD *)v54 + 4) = v59;
      *((_QWORD *)v54 + 5) = v60;
      v54[48] = v49;
      v54[49] = v55[49];
      v61 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      v62 = &v54[v61];
      v63 = &v55[v61];
      v64 = sub_1A2AE3130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
      v65 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
      v66 = &v62[v65];
      v67 = &v63[v65];
      v68 = *((_QWORD *)v67 + 1);
      *(_QWORD *)v66 = *(_QWORD *)v67;
      *((_QWORD *)v66 + 1) = v68;
      swift_retain();
      goto LABEL_59;
    case 3u:
      v69 = a2[1];
      *a1 = *a2;
      a1[1] = v69;
      v70 = a2[3];
      a1[2] = a2[2];
      a1[3] = v70;
      v71 = a2[4];
      v72 = a2[5];
      v73 = *((_BYTE *)a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A297208C();
      a1[4] = v71;
      a1[5] = v72;
      *((_BYTE *)a1 + 48) = v73;
      v74 = a2[7];
      v75 = a2[8];
      sub_1A2973524(v74, v75);
      a1[7] = v74;
      a1[8] = v75;
      v76 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA10) + 48);
      v77 = (char *)a1 + v76;
      v78 = (char *)a2 + v76;
      v79 = sub_1A2AE3130();
      v80 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16);
      v80(v77, v78, v79);
      v81 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B3B0);
      v77[v81[13]] = v78[v81[13]];
      v82 = v81[14];
      v83 = &v77[v82];
      v84 = &v78[v82];
      v85 = sub_1A2AE30C4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v83, v84, v85);
      v86 = v81[15];
      v87 = &v77[v86];
      v88 = &v78[v86];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B400);
      v89 = swift_getEnumCaseMultiPayload();
      if (v89 == 2)
      {
        v197 = *((_QWORD *)v88 + 1);
        *(_QWORD *)v87 = *(_QWORD *)v88;
        *((_QWORD *)v87 + 1) = v197;
        v198 = *((_QWORD *)v88 + 3);
        *((_QWORD *)v87 + 2) = *((_QWORD *)v88 + 2);
        *((_QWORD *)v87 + 3) = v198;
        *((_QWORD *)v87 + 4) = *((_QWORD *)v88 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v199 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B410) + 80);
        v200 = &v87[v199];
        v201 = &v88[v199];
        v202 = *(_QWORD *)&v88[v199 + 8];
        *(_QWORD *)v200 = *(_QWORD *)&v88[v199];
        *((_QWORD *)v200 + 1) = v202;
        v203 = *(_QWORD *)&v88[v199 + 16];
        v204 = *(_QWORD *)&v88[v199 + 24];
        v273 = v80;
        v205 = *((_QWORD *)v201 + 4);
        v206 = *((_QWORD *)v201 + 5);
        v207 = v201[48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v203, v204, v205, v206, v207);
        *((_QWORD *)v200 + 2) = v203;
        *((_QWORD *)v200 + 3) = v204;
        *((_QWORD *)v200 + 4) = v205;
        *((_QWORD *)v200 + 5) = v206;
        v200[48] = v207;
        v200[49] = v201[49];
        v208 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v42 = &v200[v208];
        v43 = &v201[v208];
        v273(&v200[v208], &v201[v208], v79);
        v44 = &qword_1EE67B788;
        goto LABEL_34;
      }
      if (v89 == 1)
      {
        *v87 = *v88;
        v90 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A8) + 48);
        v91 = &v87[v90];
        v92 = &v88[v90];
        v80(&v87[v90], v92, v79);
        v93 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B0) + 52);
        v42 = &v91[v93];
        v43 = &v92[v93];
        v80(v42, v43, v79);
        v44 = &qword_1EE67B7A0;
        goto LABEL_34;
      }
      v274 = v80;
      v210 = *((_QWORD *)v88 + 1);
      *(_QWORD *)v87 = *(_QWORD *)v88;
      *((_QWORD *)v87 + 1) = v210;
      v211 = *((_QWORD *)v88 + 3);
      *((_QWORD *)v87 + 2) = *((_QWORD *)v88 + 2);
      *((_QWORD *)v87 + 3) = v211;
      *((_QWORD *)v87 + 4) = *((_QWORD *)v88 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v212 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B410) + 80);
      v213 = &v87[v212];
      v214 = &v88[v212];
      v215 = *(_QWORD *)&v88[v212 + 8];
      *(_QWORD *)v213 = *(_QWORD *)&v88[v212];
      *((_QWORD *)v213 + 1) = v215;
      v216 = *(_QWORD *)&v88[v212 + 16];
      v217 = *((_QWORD *)v214 + 3);
      v218 = *((_QWORD *)v214 + 4);
      v219 = *((_QWORD *)v214 + 5);
      v220 = v214[48];
      swift_bridgeObjectRetain();
      sub_1A2993E10(v216, v217, v218, v219, v220);
      *((_QWORD *)v213 + 2) = v216;
      *((_QWORD *)v213 + 3) = v217;
      *((_QWORD *)v213 + 4) = v218;
      *((_QWORD *)v213 + 5) = v219;
      v213[48] = v220;
      v213[49] = v214[49];
      v221 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      v222 = &v213[v221];
      v223 = &v214[v221];
      v274(&v213[v221], &v214[v221], v79);
      v224 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
      v195 = &v222[v224];
      v196 = &v223[v224];
      goto LABEL_38;
    case 4u:
      v94 = a2[3];
      if (v94 >= 2)
      {
        v146 = a2[1];
        *a1 = *a2;
        a1[1] = v146;
        a1[2] = a2[2];
        a1[3] = v94;
        v147 = a2[4];
        v148 = a2[5];
        v149 = *((_BYTE *)a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A297208C();
        a1[4] = v147;
        a1[5] = v148;
        *((_BYTE *)a1 + 48) = v149;
        v151 = a2[7];
        v150 = a2[8];
        sub_1A2973524(v151, v150);
        a1[7] = v151;
        a1[8] = v150;
      }
      else
      {
        v95 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v95;
        a1[8] = a2[8];
        v96 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v96;
      }
      goto LABEL_59;
    case 5u:
      v97 = a2[1];
      *a1 = *a2;
      a1[1] = v97;
      v98 = a2[3];
      a1[2] = a2[2];
      a1[3] = v98;
      v99 = a2[4];
      v100 = a2[5];
      v101 = *((_BYTE *)a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A297208C();
      a1[4] = v99;
      a1[5] = v100;
      *((_BYTE *)a1 + 48) = v101;
      v102 = a2[7];
      v103 = a2[8];
      sub_1A2973524(v102, v103);
      a1[7] = v102;
      a1[8] = v103;
      v104 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA00) + 48);
      v105 = (char *)a1 + v104;
      v106 = (char *)a2 + v104;
      v107 = sub_1A2AE3130();
      v108 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16);
      v108(v105, v106, v107);
      v109 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA38);
      v105[v109[13]] = v106[v109[13]];
      v110 = v109[14];
      v111 = &v105[v110];
      v112 = &v106[v110];
      v113 = sub_1A2AE30C4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 16))(v111, v112, v113);
      v114 = v109[15];
      v115 = &v105[v114];
      v116 = &v106[v114];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA30);
      v117 = swift_getEnumCaseMultiPayload();
      if (v117 == 2)
      {
        v225 = *((_QWORD *)v116 + 1);
        *(_QWORD *)v115 = *(_QWORD *)v116;
        *((_QWORD *)v115 + 1) = v225;
        v226 = *((_QWORD *)v116 + 3);
        *((_QWORD *)v115 + 2) = *((_QWORD *)v116 + 2);
        *((_QWORD *)v115 + 3) = v226;
        *((_QWORD *)v115 + 4) = *((_QWORD *)v116 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v227 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA40) + 80);
        v228 = &v115[v227];
        v229 = &v116[v227];
        v230 = *(_QWORD *)&v116[v227 + 8];
        *(_QWORD *)v228 = *(_QWORD *)&v116[v227];
        *((_QWORD *)v228 + 1) = v230;
        v231 = *(_QWORD *)&v116[v227 + 16];
        v232 = *(_QWORD *)&v116[v227 + 24];
        v275 = v108;
        v233 = *((_QWORD *)v229 + 4);
        v234 = *((_QWORD *)v229 + 5);
        v235 = v229[48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v231, v232, v233, v234, v235);
        *((_QWORD *)v228 + 2) = v231;
        *((_QWORD *)v228 + 3) = v232;
        *((_QWORD *)v228 + 4) = v233;
        *((_QWORD *)v228 + 5) = v234;
        v228[48] = v235;
        v228[49] = v229[49];
        v236 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v42 = &v228[v236];
        v43 = &v229[v236];
        v275(&v228[v236], &v229[v236], v107);
        v44 = &qword_1EE67B788;
        goto LABEL_34;
      }
      if (v117 == 1)
      {
        *v115 = *v116;
        v118 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA48) + 48);
        v119 = &v115[v118];
        v120 = &v116[v118];
        v108(&v115[v118], v120, v107);
        v121 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA50) + 52);
        v42 = &v119[v121];
        v43 = &v120[v121];
        v108(v42, v43, v107);
        v44 = &qword_1EE67B7A0;
LABEL_34:
        v209 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v44) + 68);
        v195 = &v42[v209];
        v196 = &v43[v209];
        goto LABEL_38;
      }
      v276 = v108;
      v237 = *((_QWORD *)v116 + 1);
      *(_QWORD *)v115 = *(_QWORD *)v116;
      *((_QWORD *)v115 + 1) = v237;
      v238 = *((_QWORD *)v116 + 3);
      *((_QWORD *)v115 + 2) = *((_QWORD *)v116 + 2);
      *((_QWORD *)v115 + 3) = v238;
      *((_QWORD *)v115 + 4) = *((_QWORD *)v116 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v239 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA40) + 80);
      v240 = &v115[v239];
      v241 = &v116[v239];
      v242 = *(_QWORD *)&v116[v239 + 8];
      *(_QWORD *)v240 = *(_QWORD *)&v116[v239];
      *((_QWORD *)v240 + 1) = v242;
      v243 = *(_QWORD *)&v116[v239 + 16];
      v244 = *((_QWORD *)v241 + 3);
      v245 = *((_QWORD *)v241 + 4);
      v246 = *((_QWORD *)v241 + 5);
      v247 = v241[48];
      swift_bridgeObjectRetain();
      sub_1A2993E10(v243, v244, v245, v246, v247);
      *((_QWORD *)v240 + 2) = v243;
      *((_QWORD *)v240 + 3) = v244;
      *((_QWORD *)v240 + 4) = v245;
      *((_QWORD *)v240 + 5) = v246;
      v240[48] = v247;
      v240[49] = v241[49];
      v248 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      v249 = &v240[v248];
      v250 = &v241[v248];
      v276(&v240[v248], &v241[v248], v107);
      v251 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
      v195 = &v249[v251];
      v196 = &v250[v251];
LABEL_38:
      v252 = *((_QWORD *)v196 + 1);
      *(_QWORD *)v195 = *(_QWORD *)v196;
      *((_QWORD *)v195 + 1) = v252;
      swift_retain();
      swift_storeEnumTagMultiPayload();
LABEL_59:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 6u:
      v122 = sub_1A2AE3130();
      v277 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v122 - 8) + 16);
      v277(a1, a2, v122);
      v123 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
      v124 = v123[5];
      v125 = (char *)a1 + v124;
      v126 = (char *)a2 + v124;
      v127 = sub_1A2AE30C4();
      v128 = *(_QWORD *)(v127 - 8);
      v129 = *(void (**)(char *, char *, uint64_t))(v128 + 16);
      v129(v125, v126, v127);
      v130 = v123[6];
      v131 = (char *)a1 + v130;
      v132 = (char *)a2 + v130;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48))((char *)a2 + v130, 1, v127))
      {
        v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
        memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
      }
      else
      {
        v129(v131, v132, v127);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v131, 0, 1, v127);
      }
      v152 = v123[7];
      v153 = (_QWORD *)((char *)a1 + v152);
      v154 = (_QWORD *)((char *)a2 + v152);
      v155 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
      v156 = *(_QWORD *)(v155 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v156 + 48))(v154, 1, v155))
      {
        v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
        memcpy(v153, v154, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
      }
      else
      {
        v164 = type metadata accessor for SFAirDropSend.Failure();
        v165 = *(_QWORD *)(v164 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v165 + 48))(v154, 1, v164))
        {
          memcpy(v153, v154, *(_QWORD *)(v156 + 64));
        }
        else
        {
          v253 = swift_getEnumCaseMultiPayload();
          if (v253 == 2)
          {
            v255 = v154[1];
            *v153 = *v154;
            v153[1] = v255;
            *((_OWORD *)v153 + 1) = *((_OWORD *)v154 + 1);
            v256 = v154[5];
            v153[4] = v154[4];
            v153[5] = v256;
            v153[6] = v154[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (v253)
          {
            memcpy(v153, v154, *(_QWORD *)(v165 + 64));
          }
          else
          {
            v277(v153, v154, v122);
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v165 + 56))(v153, 0, 1, v164);
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v156 + 56))(v153, 0, 1, v155);
      }
      v257 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F8) + 48);
      v258 = (_QWORD *)((char *)a1 + v257);
      v259 = (_QWORD *)((char *)a2 + v257);
      v260 = type metadata accessor for SFAirDropSend.Failure();
      v261 = swift_getEnumCaseMultiPayload();
      if (v261 == 2)
      {
        v262 = v259[1];
        *v258 = *v259;
        v258[1] = v262;
        *((_OWORD *)v258 + 1) = *((_OWORD *)v259 + 1);
        v263 = v259[5];
        v258[4] = v259[4];
        v258[5] = v263;
        v258[6] = v259[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else if (v261)
      {
        memcpy(v258, v259, *(_QWORD *)(*(_QWORD *)(v260 - 8) + 64));
      }
      else
      {
        v277(v258, v259, v122);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_59;
    case 7u:
      v134 = sub_1A2AE3130();
      v278 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v134 - 8) + 16);
      v278(a1, a2, v134);
      v135 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
      v136 = v135[5];
      v137 = (char *)a1 + v136;
      v138 = (char *)a2 + v136;
      v139 = sub_1A2AE30C4();
      v140 = *(_QWORD *)(v139 - 8);
      v141 = *(void (**)(char *, char *, uint64_t))(v140 + 16);
      v141(v137, v138, v139);
      v142 = v135[6];
      v143 = (char *)a1 + v142;
      v144 = (char *)a2 + v142;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48))((char *)a2 + v142, 1, v139))
      {
        v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
        memcpy(v143, v144, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
      }
      else
      {
        v141(v143, v144, v139);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v143, 0, 1, v139);
      }
      v158 = v135[7];
      v159 = (_QWORD *)((char *)a1 + v158);
      v160 = (_QWORD *)((char *)a2 + v158);
      v161 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
      v162 = *(_QWORD *)(v161 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v162 + 48))(v160, 1, v161))
      {
        v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
        memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
      }
      else
      {
        v166 = type metadata accessor for SFAirDropSend.Failure();
        v167 = *(_QWORD *)(v166 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v167 + 48))(v160, 1, v166))
        {
          memcpy(v159, v160, *(_QWORD *)(v162 + 64));
        }
        else
        {
          v254 = swift_getEnumCaseMultiPayload();
          if (v254 == 2)
          {
            v264 = v160[1];
            *v159 = *v160;
            v159[1] = v264;
            *((_OWORD *)v159 + 1) = *((_OWORD *)v160 + 1);
            v265 = v160[5];
            v159[4] = v160[4];
            v159[5] = v265;
            v159[6] = v160[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (v254)
          {
            memcpy(v159, v160, *(_QWORD *)(v167 + 64));
          }
          else
          {
            v278(v159, v160, v134);
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v167 + 56))(v159, 0, 1, v166);
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v162 + 56))(v159, 0, 1, v161);
      }
      v266 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F0) + 48);
      v267 = (_QWORD *)((char *)a1 + v266);
      v268 = (_QWORD *)((char *)a2 + v266);
      v269 = v268[1];
      *v267 = *v268;
      v267[1] = v269;
      swift_bridgeObjectRetain();
      goto LABEL_59;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
}

_QWORD *_s8TransferV5StateOwca_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int EnumCaseMultiPayload;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  int *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  int v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  void (*v98)(char *, char *, uint64_t);
  int *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  int v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  int *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(char *, char *, uint64_t);
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  int *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(char *, char *, uint64_t);
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unsigned __int8 v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unsigned __int8 v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unsigned __int8 v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unsigned __int8 v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  unsigned __int8 v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unsigned __int8 v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  int v224;
  int v225;
  uint64_t v226;
  _QWORD *v227;
  _QWORD *v228;
  uint64_t v229;
  int v230;
  uint64_t v231;
  _QWORD *v232;
  _QWORD *v233;
  void (*v235)(char *, char *, uint64_t);
  void (*v236)(char *, char *, uint64_t);
  void (*v237)(char *, char *, uint64_t);
  void (*v238)(char *, char *, uint64_t);
  void (*v239)(char *, char *, uint64_t);
  void (*v240)(char *, char *, uint64_t);
  void (*v241)(_QWORD *, _QWORD *, uint64_t);
  void (*v242)(_QWORD *, _QWORD *, uint64_t);

  if (a1 != a2)
  {
    sub_1A297DA3C((uint64_t)a1, type metadata accessor for SFAirDropSend.Transfer.State);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA20) + 64);
        v7 = (char *)a1 + v6;
        v8 = (char *)a2 + v6;
        *(_QWORD *)v7 = *(_QWORD *)((char *)a2 + v6);
        *((_QWORD *)v7 + 1) = *(_QWORD *)((char *)a2 + v6 + 8);
        v9 = *(_QWORD *)((char *)a2 + v6 + 16);
        v10 = *((_QWORD *)v8 + 3);
        v11 = *((_QWORD *)v8 + 4);
        v12 = *((_QWORD *)v8 + 5);
        v13 = v8[48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v9, v10, v11, v12, v13);
        *((_QWORD *)v7 + 2) = v9;
        *((_QWORD *)v7 + 3) = v10;
        *((_QWORD *)v7 + 4) = v11;
        *((_QWORD *)v7 + 5) = v12;
        v7[48] = v13;
        v7[49] = v8[49];
        v14 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v15 = &v7[v14];
        v16 = &v8[v14];
        v17 = sub_1A2AE3130();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
        v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v19 = &v15[v18];
        v20 = &v16[v18];
        v21 = *((_QWORD *)v20 + 1);
        *(_QWORD *)v19 = *(_QWORD *)v20;
        *((_QWORD *)v19 + 1) = v21;
        swift_retain();
        goto LABEL_60;
      case 1u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA18) + 48);
        v23 = (char *)a1 + v22;
        v24 = (char *)a2 + v22;
        v25 = sub_1A2AE3130();
        v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
        v26(v23, v24, v25);
        v27 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA10);
        v23[v27[13]] = v24[v27[13]];
        v28 = v27[14];
        v29 = &v23[v28];
        v30 = &v24[v28];
        v31 = sub_1A2AE30C4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
        v32 = v27[15];
        v33 = &v23[v32];
        v34 = &v24[v32];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA08);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          *(_QWORD *)v33 = *(_QWORD *)v34;
          *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
          *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
          *((_QWORD *)v33 + 3) = *((_QWORD *)v34 + 3);
          *((_QWORD *)v33 + 4) = *((_QWORD *)v34 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v157 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA18) + 80);
          v158 = &v33[v157];
          v159 = &v34[v157];
          *(_QWORD *)v158 = *(_QWORD *)&v34[v157];
          *((_QWORD *)v158 + 1) = *(_QWORD *)&v34[v157 + 8];
          v160 = *(_QWORD *)&v34[v157 + 16];
          v161 = *(_QWORD *)&v34[v157 + 24];
          v235 = v26;
          v162 = *((_QWORD *)v159 + 4);
          v163 = *((_QWORD *)v159 + 5);
          v164 = v159[48];
          swift_bridgeObjectRetain();
          sub_1A2993E10(v160, v161, v162, v163, v164);
          *((_QWORD *)v158 + 2) = v160;
          *((_QWORD *)v158 + 3) = v161;
          *((_QWORD *)v158 + 4) = v162;
          *((_QWORD *)v158 + 5) = v163;
          v158[48] = v164;
          v158[49] = v159[49];
          v165 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          v40 = &v158[v165];
          v41 = &v159[v165];
          v235(&v158[v165], &v159[v165], v25);
          v42 = &qword_1EE67B788;
          goto LABEL_35;
        }
        if (EnumCaseMultiPayload == 1)
        {
          *v33 = *v34;
          v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA20) + 48);
          v37 = &v33[v36];
          v38 = &v34[v36];
          v26(&v33[v36], v38, v25);
          v39 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA28) + 52);
          v40 = &v37[v39];
          v41 = &v38[v39];
          v26(v40, v41, v25);
          v42 = &qword_1EE67B7A0;
          goto LABEL_35;
        }
        v236 = v26;
        *(_QWORD *)v33 = *(_QWORD *)v34;
        *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
        *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
        *((_QWORD *)v33 + 3) = *((_QWORD *)v34 + 3);
        *((_QWORD *)v33 + 4) = *((_QWORD *)v34 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v166 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA18) + 80);
        v167 = &v33[v166];
        v168 = &v34[v166];
        *(_QWORD *)v167 = *(_QWORD *)&v34[v166];
        *((_QWORD *)v167 + 1) = *(_QWORD *)&v34[v166 + 8];
        v169 = *(_QWORD *)&v34[v166 + 16];
        v170 = *((_QWORD *)v168 + 3);
        v171 = *((_QWORD *)v168 + 4);
        v172 = *((_QWORD *)v168 + 5);
        v173 = v168[48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v169, v170, v171, v172, v173);
        *((_QWORD *)v167 + 2) = v169;
        *((_QWORD *)v167 + 3) = v170;
        *((_QWORD *)v167 + 4) = v171;
        *((_QWORD *)v167 + 5) = v172;
        v167[48] = v173;
        v167[49] = v168[49];
        v174 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v175 = &v167[v174];
        v176 = &v168[v174];
        v236(&v167[v174], &v168[v174], v25);
        v177 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v178 = &v175[v177];
        v179 = &v176[v177];
        goto LABEL_39;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        v43 = a2[2];
        v44 = a2[3];
        v45 = a2[4];
        v46 = a2[5];
        v47 = a2[6];
        swift_bridgeObjectRetain();
        sub_1A2993E5C(v43, v44, v45);
        a1[2] = v43;
        a1[3] = v44;
        a1[4] = v45;
        a1[5] = v46;
        a1[6] = v47;
        a1[7] = a2[7];
        a1[8] = a2[8];
        swift_bridgeObjectRetain();
        v48 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA08) + 80);
        v49 = (char *)a1 + v48;
        v50 = (char *)a2 + v48;
        *(_QWORD *)v49 = *(_QWORD *)((char *)a2 + v48);
        *((_QWORD *)v49 + 1) = *(_QWORD *)((char *)a2 + v48 + 8);
        v51 = *(_QWORD *)((char *)a2 + v48 + 16);
        v52 = *((_QWORD *)v50 + 3);
        v53 = *((_QWORD *)v50 + 4);
        v54 = *((_QWORD *)v50 + 5);
        LOBYTE(v46) = v50[48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v51, v52, v53, v54, v46);
        *((_QWORD *)v49 + 2) = v51;
        *((_QWORD *)v49 + 3) = v52;
        *((_QWORD *)v49 + 4) = v53;
        *((_QWORD *)v49 + 5) = v54;
        v49[48] = v46;
        v49[49] = v50[49];
        v55 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v56 = &v49[v55];
        v57 = &v50[v55];
        v58 = sub_1A2AE3130();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
        v59 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v60 = &v56[v59];
        v61 = &v57[v59];
        v62 = *((_QWORD *)v61 + 1);
        *(_QWORD *)v60 = *(_QWORD *)v61;
        *((_QWORD *)v60 + 1) = v62;
        swift_retain();
        goto LABEL_60;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        v63 = a2[4];
        v64 = a2[5];
        v65 = *((_BYTE *)a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A297208C();
        a1[4] = v63;
        a1[5] = v64;
        *((_BYTE *)a1 + 48) = v65;
        v66 = a2[7];
        v67 = a2[8];
        sub_1A2973524(v66, v67);
        a1[7] = v66;
        a1[8] = v67;
        v68 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA10) + 48);
        v69 = (char *)a1 + v68;
        v70 = (char *)a2 + v68;
        v71 = sub_1A2AE3130();
        v72 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16);
        v72(v69, v70, v71);
        v73 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B3B0);
        v69[v73[13]] = v70[v73[13]];
        v74 = v73[14];
        v75 = &v69[v74];
        v76 = &v70[v74];
        v77 = sub_1A2AE30C4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v75, v76, v77);
        v78 = v73[15];
        v79 = &v69[v78];
        v80 = &v70[v78];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B400);
        v81 = swift_getEnumCaseMultiPayload();
        if (v81 == 2)
        {
          *(_QWORD *)v79 = *(_QWORD *)v80;
          *((_QWORD *)v79 + 1) = *((_QWORD *)v80 + 1);
          *((_QWORD *)v79 + 2) = *((_QWORD *)v80 + 2);
          *((_QWORD *)v79 + 3) = *((_QWORD *)v80 + 3);
          *((_QWORD *)v79 + 4) = *((_QWORD *)v80 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v180 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B410) + 80);
          v181 = &v79[v180];
          v182 = &v80[v180];
          *(_QWORD *)v181 = *(_QWORD *)&v80[v180];
          *((_QWORD *)v181 + 1) = *(_QWORD *)&v80[v180 + 8];
          v183 = *(_QWORD *)&v80[v180 + 16];
          v184 = *(_QWORD *)&v80[v180 + 24];
          v237 = v72;
          v185 = *((_QWORD *)v182 + 4);
          v186 = *((_QWORD *)v182 + 5);
          v187 = v182[48];
          swift_bridgeObjectRetain();
          sub_1A2993E10(v183, v184, v185, v186, v187);
          *((_QWORD *)v181 + 2) = v183;
          *((_QWORD *)v181 + 3) = v184;
          *((_QWORD *)v181 + 4) = v185;
          *((_QWORD *)v181 + 5) = v186;
          v181[48] = v187;
          v181[49] = v182[49];
          v188 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          v40 = &v181[v188];
          v41 = &v182[v188];
          v237(&v181[v188], &v182[v188], v71);
          v42 = &qword_1EE67B788;
          goto LABEL_35;
        }
        if (v81 == 1)
        {
          *v79 = *v80;
          v82 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A8) + 48);
          v83 = &v79[v82];
          v84 = &v80[v82];
          v72(&v79[v82], v84, v71);
          v85 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B0) + 52);
          v40 = &v83[v85];
          v41 = &v84[v85];
          v72(v40, v41, v71);
          v42 = &qword_1EE67B7A0;
          goto LABEL_35;
        }
        v238 = v72;
        *(_QWORD *)v79 = *(_QWORD *)v80;
        *((_QWORD *)v79 + 1) = *((_QWORD *)v80 + 1);
        *((_QWORD *)v79 + 2) = *((_QWORD *)v80 + 2);
        *((_QWORD *)v79 + 3) = *((_QWORD *)v80 + 3);
        *((_QWORD *)v79 + 4) = *((_QWORD *)v80 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v190 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B410) + 80);
        v191 = &v79[v190];
        v192 = &v80[v190];
        *(_QWORD *)v191 = *(_QWORD *)&v80[v190];
        *((_QWORD *)v191 + 1) = *(_QWORD *)&v80[v190 + 8];
        v193 = *(_QWORD *)&v80[v190 + 16];
        v194 = *((_QWORD *)v192 + 3);
        v195 = *((_QWORD *)v192 + 4);
        v196 = *((_QWORD *)v192 + 5);
        v197 = v192[48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v193, v194, v195, v196, v197);
        *((_QWORD *)v191 + 2) = v193;
        *((_QWORD *)v191 + 3) = v194;
        *((_QWORD *)v191 + 4) = v195;
        *((_QWORD *)v191 + 5) = v196;
        v191[48] = v197;
        v191[49] = v192[49];
        v198 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v199 = &v191[v198];
        v200 = &v192[v198];
        v238(&v191[v198], &v192[v198], v71);
        v201 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v178 = &v199[v201];
        v179 = &v200[v201];
        goto LABEL_39;
      case 4u:
        if (a2[3] >= 2uLL)
        {
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          a1[3] = a2[3];
          v136 = a2[4];
          v137 = a2[5];
          v138 = *((_BYTE *)a2 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1A297208C();
          a1[4] = v136;
          a1[5] = v137;
          *((_BYTE *)a1 + 48) = v138;
          v140 = a2[7];
          v139 = a2[8];
          sub_1A2973524(v140, v139);
          a1[7] = v140;
          a1[8] = v139;
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v86 = *((_OWORD *)a2 + 1);
          v87 = *((_OWORD *)a2 + 2);
          v88 = *((_OWORD *)a2 + 3);
          a1[8] = a2[8];
          *((_OWORD *)a1 + 2) = v87;
          *((_OWORD *)a1 + 3) = v88;
          *((_OWORD *)a1 + 1) = v86;
        }
        goto LABEL_60;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        v89 = a2[4];
        v90 = a2[5];
        v91 = *((_BYTE *)a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A297208C();
        a1[4] = v89;
        a1[5] = v90;
        *((_BYTE *)a1 + 48) = v91;
        v92 = a2[7];
        v93 = a2[8];
        sub_1A2973524(v92, v93);
        a1[7] = v92;
        a1[8] = v93;
        v94 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA00) + 48);
        v95 = (char *)a1 + v94;
        v96 = (char *)a2 + v94;
        v97 = sub_1A2AE3130();
        v98 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 16);
        v98(v95, v96, v97);
        v99 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA38);
        v95[v99[13]] = v96[v99[13]];
        v100 = v99[14];
        v101 = &v95[v100];
        v102 = &v96[v100];
        v103 = sub_1A2AE30C4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v101, v102, v103);
        v104 = v99[15];
        v105 = &v95[v104];
        v106 = &v96[v104];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA30);
        v107 = swift_getEnumCaseMultiPayload();
        if (v107 == 2)
        {
          *(_QWORD *)v105 = *(_QWORD *)v106;
          *((_QWORD *)v105 + 1) = *((_QWORD *)v106 + 1);
          *((_QWORD *)v105 + 2) = *((_QWORD *)v106 + 2);
          *((_QWORD *)v105 + 3) = *((_QWORD *)v106 + 3);
          *((_QWORD *)v105 + 4) = *((_QWORD *)v106 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v202 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA40) + 80);
          v203 = &v105[v202];
          v204 = &v106[v202];
          *(_QWORD *)v203 = *(_QWORD *)&v106[v202];
          *((_QWORD *)v203 + 1) = *(_QWORD *)&v106[v202 + 8];
          v205 = *(_QWORD *)&v106[v202 + 16];
          v206 = *(_QWORD *)&v106[v202 + 24];
          v239 = v98;
          v207 = *((_QWORD *)v204 + 4);
          v208 = *((_QWORD *)v204 + 5);
          v209 = v204[48];
          swift_bridgeObjectRetain();
          sub_1A2993E10(v205, v206, v207, v208, v209);
          *((_QWORD *)v203 + 2) = v205;
          *((_QWORD *)v203 + 3) = v206;
          *((_QWORD *)v203 + 4) = v207;
          *((_QWORD *)v203 + 5) = v208;
          v203[48] = v209;
          v203[49] = v204[49];
          v210 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          v40 = &v203[v210];
          v41 = &v204[v210];
          v239(&v203[v210], &v204[v210], v97);
          v42 = &qword_1EE67B788;
          goto LABEL_35;
        }
        if (v107 == 1)
        {
          *v105 = *v106;
          v108 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA48) + 48);
          v109 = &v105[v108];
          v110 = &v106[v108];
          v98(&v105[v108], v110, v97);
          v111 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA50) + 52);
          v40 = &v109[v111];
          v41 = &v110[v111];
          v98(v40, v41, v97);
          v42 = &qword_1EE67B7A0;
LABEL_35:
          v189 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v42) + 68);
          v178 = &v40[v189];
          v179 = &v41[v189];
          goto LABEL_39;
        }
        v240 = v98;
        *(_QWORD *)v105 = *(_QWORD *)v106;
        *((_QWORD *)v105 + 1) = *((_QWORD *)v106 + 1);
        *((_QWORD *)v105 + 2) = *((_QWORD *)v106 + 2);
        *((_QWORD *)v105 + 3) = *((_QWORD *)v106 + 3);
        *((_QWORD *)v105 + 4) = *((_QWORD *)v106 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v211 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA40) + 80);
        v212 = &v105[v211];
        v213 = &v106[v211];
        *(_QWORD *)v212 = *(_QWORD *)&v106[v211];
        *((_QWORD *)v212 + 1) = *(_QWORD *)&v106[v211 + 8];
        v214 = *(_QWORD *)&v106[v211 + 16];
        v215 = *((_QWORD *)v213 + 3);
        v216 = *((_QWORD *)v213 + 4);
        v217 = *((_QWORD *)v213 + 5);
        v218 = v213[48];
        swift_bridgeObjectRetain();
        sub_1A2993E10(v214, v215, v216, v217, v218);
        *((_QWORD *)v212 + 2) = v214;
        *((_QWORD *)v212 + 3) = v215;
        *((_QWORD *)v212 + 4) = v216;
        *((_QWORD *)v212 + 5) = v217;
        v212[48] = v218;
        v212[49] = v213[49];
        v219 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v220 = &v212[v219];
        v221 = &v213[v219];
        v240(&v212[v219], &v213[v219], v97);
        v222 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v178 = &v220[v222];
        v179 = &v221[v222];
LABEL_39:
        v223 = *((_QWORD *)v179 + 1);
        *(_QWORD *)v178 = *(_QWORD *)v179;
        *((_QWORD *)v178 + 1) = v223;
        swift_retain();
        swift_storeEnumTagMultiPayload();
LABEL_60:
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        v112 = sub_1A2AE3130();
        v241 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v112 - 8) + 16);
        v241(a1, a2, v112);
        v113 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
        v114 = v113[5];
        v115 = (char *)a1 + v114;
        v116 = (char *)a2 + v114;
        v117 = sub_1A2AE30C4();
        v118 = *(_QWORD *)(v117 - 8);
        v119 = *(void (**)(char *, char *, uint64_t))(v118 + 16);
        v119(v115, v116, v117);
        v120 = v113[6];
        v121 = (char *)a1 + v120;
        v122 = (char *)a2 + v120;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))((char *)a2 + v120, 1, v117))
        {
          v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
          memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
        }
        else
        {
          v119(v121, v122, v117);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v121, 0, 1, v117);
        }
        v141 = v113[7];
        v142 = (_QWORD *)((char *)a1 + v141);
        v143 = (_QWORD *)((char *)a2 + v141);
        v144 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
        v145 = *(_QWORD *)(v144 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v145 + 48))(v143, 1, v144))
        {
          v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
          memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
        }
        else
        {
          v153 = type metadata accessor for SFAirDropSend.Failure();
          v154 = *(_QWORD *)(v153 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v154 + 48))(v143, 1, v153))
          {
            memcpy(v142, v143, *(_QWORD *)(v145 + 64));
          }
          else
          {
            v224 = swift_getEnumCaseMultiPayload();
            if (v224 == 2)
            {
              *v142 = *v143;
              v142[1] = v143[1];
              v142[2] = v143[2];
              v142[3] = v143[3];
              v142[4] = v143[4];
              v142[5] = v143[5];
              v142[6] = v143[6];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            else if (v224)
            {
              memcpy(v142, v143, *(_QWORD *)(v154 + 64));
            }
            else
            {
              v241(v142, v143, v112);
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v154 + 56))(v142, 0, 1, v153);
          }
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v142, 0, 1, v144);
        }
        v226 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F8) + 48);
        v227 = (_QWORD *)((char *)a1 + v226);
        v228 = (_QWORD *)((char *)a2 + v226);
        v229 = type metadata accessor for SFAirDropSend.Failure();
        v230 = swift_getEnumCaseMultiPayload();
        if (v230 == 2)
        {
          *v227 = *v228;
          v227[1] = v228[1];
          v227[2] = v228[2];
          v227[3] = v228[3];
          v227[4] = v228[4];
          v227[5] = v228[5];
          v227[6] = v228[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (v230)
        {
          memcpy(v227, v228, *(_QWORD *)(*(_QWORD *)(v229 - 8) + 64));
        }
        else
        {
          v241(v227, v228, v112);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_60;
      case 7u:
        v124 = sub_1A2AE3130();
        v242 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v124 - 8) + 16);
        v242(a1, a2, v124);
        v125 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
        v126 = v125[5];
        v127 = (char *)a1 + v126;
        v128 = (char *)a2 + v126;
        v129 = sub_1A2AE30C4();
        v130 = *(_QWORD *)(v129 - 8);
        v131 = *(void (**)(char *, char *, uint64_t))(v130 + 16);
        v131(v127, v128, v129);
        v132 = v125[6];
        v133 = (char *)a1 + v132;
        v134 = (char *)a2 + v132;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48))((char *)a2 + v132, 1, v129))
        {
          v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
          memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
        }
        else
        {
          v131(v133, v134, v129);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v133, 0, 1, v129);
        }
        v147 = v125[7];
        v148 = (_QWORD *)((char *)a1 + v147);
        v149 = (_QWORD *)((char *)a2 + v147);
        v150 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
        v151 = *(_QWORD *)(v150 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v151 + 48))(v149, 1, v150))
        {
          v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
          memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
        }
        else
        {
          v155 = type metadata accessor for SFAirDropSend.Failure();
          v156 = *(_QWORD *)(v155 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v156 + 48))(v149, 1, v155))
          {
            memcpy(v148, v149, *(_QWORD *)(v151 + 64));
          }
          else
          {
            v225 = swift_getEnumCaseMultiPayload();
            if (v225 == 2)
            {
              *v148 = *v149;
              v148[1] = v149[1];
              v148[2] = v149[2];
              v148[3] = v149[3];
              v148[4] = v149[4];
              v148[5] = v149[5];
              v148[6] = v149[6];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            else if (v225)
            {
              memcpy(v148, v149, *(_QWORD *)(v156 + 64));
            }
            else
            {
              v242(v148, v149, v124);
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v156 + 56))(v148, 0, 1, v155);
          }
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v151 + 56))(v148, 0, 1, v150);
        }
        v231 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F0) + 48);
        v232 = (_QWORD *)((char *)a1 + v231);
        v233 = (_QWORD *)((char *)a2 + v231);
        *v232 = *v233;
        v232[1] = v233[1];
        swift_bridgeObjectRetain();
        goto LABEL_60;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

_OWORD *_s8TransferV5StateOwtk_0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  int *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  int *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  int *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, char *, uint64_t);
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  int *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, char *, uint64_t);
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  char *v117;
  char *v118;
  __int128 v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  __int128 v124;
  uint64_t v125;
  char *v126;
  char *v127;
  __int128 v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  __int128 v133;
  uint64_t v134;
  char *v135;
  char *v136;
  __int128 v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  void (*v164)(char *, char *, uint64_t);
  void (*v165)(char *, char *, uint64_t);

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *a1 = *a2;
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA20) + 64);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      *((_WORD *)v7 + 24) = *(_WORD *)((char *)a2 + v6 + 48);
      v9 = *(_OWORD *)((char *)a2 + v6 + 16);
      *(_OWORD *)v7 = *(_OWORD *)((char *)a2 + v6);
      *((_OWORD *)v7 + 1) = v9;
      *((_OWORD *)v7 + 2) = *(_OWORD *)((char *)a2 + v6 + 32);
      v10 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      v11 = &v7[v10];
      v12 = &v8[v10];
      v13 = sub_1A2AE3130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788);
      *(_OWORD *)&v11[*(int *)(v14 + 68)] = *(_OWORD *)&v12[*(int *)(v14 + 68)];
      goto LABEL_43;
    case 1u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA18) + 48);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_1A2AE3130();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
      v19(v16, v17, v18);
      v20 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA10);
      v16[v20[13]] = v17[v20[13]];
      v21 = v20[14];
      v22 = &v16[v21];
      v23 = &v17[v21];
      v24 = sub_1A2AE30C4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
      v25 = v20[15];
      v26 = &v16[v25];
      v27 = &v17[v25];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA08);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v26 = *v27;
        v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA20) + 48);
        v29 = &v26[v28];
        v30 = &v27[v28];
        v19(&v26[v28], v30, v18);
        v31 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA28) + 52);
        v32 = &v29[v31];
        v33 = &v30[v31];
        v19(v32, v33, v18);
        v34 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0) + 68);
        v35 = &v32[v34];
        v36 = &v33[v34];
      }
      else
      {
        v115 = *((_OWORD *)v27 + 1);
        *(_OWORD *)v26 = *(_OWORD *)v27;
        *((_OWORD *)v26 + 1) = v115;
        *((_QWORD *)v26 + 4) = *((_QWORD *)v27 + 4);
        v116 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA18) + 80);
        v117 = &v26[v116];
        v118 = &v27[v116];
        *((_WORD *)v117 + 24) = *(_WORD *)&v27[v116 + 48];
        v119 = *(_OWORD *)&v27[v116 + 16];
        *(_OWORD *)v117 = *(_OWORD *)&v27[v116];
        *((_OWORD *)v117 + 1) = v119;
        *((_OWORD *)v117 + 2) = *(_OWORD *)&v27[v116 + 32];
        v120 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v121 = &v117[v120];
        v122 = &v118[v120];
        v19(v121, &v118[v120], v18);
        v123 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v35 = &v121[v123];
        v36 = &v122[v123];
      }
      goto LABEL_18;
    case 2u:
      v37 = a2[1];
      *a1 = *a2;
      a1[1] = v37;
      a1[2] = a2[2];
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
      v38 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA08) + 80);
      v39 = (char *)a1 + v38;
      v40 = (char *)a2 + v38;
      *((_WORD *)v39 + 24) = *(_WORD *)((char *)a2 + v38 + 48);
      v41 = *(_OWORD *)((char *)a2 + v38 + 16);
      *(_OWORD *)v39 = *(_OWORD *)((char *)a2 + v38);
      *((_OWORD *)v39 + 1) = v41;
      *((_OWORD *)v39 + 2) = *(_OWORD *)((char *)a2 + v38 + 32);
      v42 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      v43 = &v39[v42];
      v44 = &v40[v42];
      v45 = sub_1A2AE3130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788);
      *(_OWORD *)&v43[*(int *)(v46 + 68)] = *(_OWORD *)&v44[*(int *)(v46 + 68)];
      goto LABEL_43;
    case 3u:
      v47 = a2[3];
      a1[2] = a2[2];
      a1[3] = v47;
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      v48 = a2[1];
      *a1 = *a2;
      a1[1] = v48;
      v49 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA10) + 48);
      v50 = (char *)a1 + v49;
      v51 = (char *)a2 + v49;
      v52 = sub_1A2AE3130();
      v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32);
      v53(v50, v51, v52);
      v54 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B3B0);
      v50[v54[13]] = v51[v54[13]];
      v55 = v54[14];
      v56 = &v50[v55];
      v57 = &v51[v55];
      v58 = sub_1A2AE30C4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
      v59 = v54[15];
      v60 = &v50[v59];
      v61 = &v51[v59];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B400);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v60 = *v61;
        v62 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A8) + 48);
        v63 = &v60[v62];
        v64 = &v61[v62];
        v53(&v60[v62], v64, v52);
        v65 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B0) + 52);
        v66 = &v63[v65];
        v67 = &v64[v65];
        v53(v66, v67, v52);
        v68 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0) + 68);
        v35 = &v66[v68];
        v36 = &v67[v68];
      }
      else
      {
        v124 = *((_OWORD *)v61 + 1);
        *(_OWORD *)v60 = *(_OWORD *)v61;
        *((_OWORD *)v60 + 1) = v124;
        *((_QWORD *)v60 + 4) = *((_QWORD *)v61 + 4);
        v125 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B410) + 80);
        v126 = &v60[v125];
        v127 = &v61[v125];
        *((_WORD *)v126 + 24) = *(_WORD *)&v61[v125 + 48];
        v128 = *(_OWORD *)&v61[v125 + 16];
        *(_OWORD *)v126 = *(_OWORD *)&v61[v125];
        *((_OWORD *)v126 + 1) = v128;
        *((_OWORD *)v126 + 2) = *(_OWORD *)&v61[v125 + 32];
        v129 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v130 = &v126[v129];
        v131 = &v127[v129];
        v53(v130, &v127[v129], v52);
        v132 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v35 = &v130[v132];
        v36 = &v131[v132];
      }
      goto LABEL_18;
    case 5u:
      v69 = a2[3];
      a1[2] = a2[2];
      a1[3] = v69;
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      v70 = a2[1];
      *a1 = *a2;
      a1[1] = v70;
      v71 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA00) + 48);
      v72 = (char *)a1 + v71;
      v73 = (char *)a2 + v71;
      v74 = sub_1A2AE3130();
      v75 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32);
      v75(v72, v73, v74);
      v76 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA38);
      v72[v76[13]] = v73[v76[13]];
      v77 = v76[14];
      v78 = &v72[v77];
      v79 = &v73[v77];
      v80 = sub_1A2AE30C4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v78, v79, v80);
      v81 = v76[15];
      v82 = &v72[v81];
      v83 = &v73[v81];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA30);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v82 = *v83;
        v84 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA48) + 48);
        v85 = &v82[v84];
        v86 = &v83[v84];
        v75(&v82[v84], v86, v74);
        v87 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA50) + 52);
        v88 = &v85[v87];
        v89 = &v86[v87];
        v75(v88, v89, v74);
        v90 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0) + 68);
        v35 = &v88[v90];
        v36 = &v89[v90];
      }
      else
      {
        v133 = *((_OWORD *)v83 + 1);
        *(_OWORD *)v82 = *(_OWORD *)v83;
        *((_OWORD *)v82 + 1) = v133;
        *((_QWORD *)v82 + 4) = *((_QWORD *)v83 + 4);
        v134 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA40) + 80);
        v135 = &v82[v134];
        v136 = &v83[v134];
        *((_WORD *)v135 + 24) = *(_WORD *)&v83[v134 + 48];
        v137 = *(_OWORD *)&v83[v134 + 16];
        *(_OWORD *)v135 = *(_OWORD *)&v83[v134];
        *((_OWORD *)v135 + 1) = v137;
        *((_OWORD *)v135 + 2) = *(_OWORD *)&v83[v134 + 32];
        v138 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v139 = &v135[v138];
        v140 = &v136[v138];
        v75(v139, &v136[v138], v74);
        v141 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
        v35 = &v139[v141];
        v36 = &v140[v141];
      }
LABEL_18:
      *(_OWORD *)v35 = *(_OWORD *)v36;
      swift_storeEnumTagMultiPayload();
      goto LABEL_43;
    case 6u:
      v91 = sub_1A2AE3130();
      v164 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32);
      v164((char *)a1, (char *)a2, v91);
      v92 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
      v93 = v92[5];
      v94 = (char *)a1 + v93;
      v95 = (char *)a2 + v93;
      v96 = sub_1A2AE30C4();
      v97 = *(_QWORD *)(v96 - 8);
      v98 = *(void (**)(char *, char *, uint64_t))(v97 + 32);
      v98(v94, v95, v96);
      v99 = v92[6];
      v100 = (char *)a1 + v99;
      v101 = (char *)a2 + v99;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48))((char *)a2 + v99, 1, v96))
      {
        v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
        memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
      }
      else
      {
        v98(v100, v101, v96);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v100, 0, 1, v96);
      }
      v142 = v92[7];
      v143 = (char *)a1 + v142;
      v144 = (char *)a2 + v142;
      v145 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
      v146 = *(_QWORD *)(v145 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v146 + 48))(v144, 1, v145))
      {
        v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
        memcpy(v143, v144, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
      }
      else
      {
        v154 = type metadata accessor for SFAirDropSend.Failure();
        v155 = *(_QWORD *)(v154 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v155 + 48))(v144, 1, v154))
        {
          memcpy(v143, v144, *(_QWORD *)(v146 + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v143, v144, *(_QWORD *)(v155 + 64));
          }
          else
          {
            v164(v143, v144, v91);
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v155 + 56))(v143, 0, 1, v154);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v143, 0, 1, v145);
      }
      v158 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F8) + 48);
      v159 = (char *)a1 + v158;
      v160 = (char *)a2 + v158;
      v161 = type metadata accessor for SFAirDropSend.Failure();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
      }
      else
      {
        v164(v159, v160, v91);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_43;
    case 7u:
      v103 = sub_1A2AE3130();
      v165 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32);
      v165((char *)a1, (char *)a2, v103);
      v104 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
      v105 = v104[5];
      v106 = (char *)a1 + v105;
      v107 = (char *)a2 + v105;
      v108 = sub_1A2AE30C4();
      v109 = *(_QWORD *)(v108 - 8);
      v110 = *(void (**)(char *, char *, uint64_t))(v109 + 32);
      v110(v106, v107, v108);
      v111 = v104[6];
      v112 = (char *)a1 + v111;
      v113 = (char *)a2 + v111;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))((char *)a2 + v111, 1, v108))
      {
        v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
        memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
      }
      else
      {
        v110(v112, v113, v108);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v112, 0, 1, v108);
      }
      v148 = v104[7];
      v149 = (char *)a1 + v148;
      v150 = (char *)a2 + v148;
      v151 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
      v152 = *(_QWORD *)(v151 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48))(v150, 1, v151))
      {
        v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
        memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
      }
      else
      {
        v156 = type metadata accessor for SFAirDropSend.Failure();
        v157 = *(_QWORD *)(v156 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48))(v150, 1, v156))
        {
          memcpy(v149, v150, *(_QWORD *)(v152 + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v149, v150, *(_QWORD *)(v157 + 64));
          }
          else
          {
            v165(v149, v150, v103);
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v157 + 56))(v149, 0, 1, v156);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v149, 0, 1, v151);
      }
      v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F0);
      *(_OWORD *)((char *)a1 + *(int *)(v162 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v162 + 48));
LABEL_43:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *_s8TransferV5StateOwta_0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  int *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  int *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  int *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, char *, uint64_t);
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  int *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, char *, uint64_t);
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  char *v117;
  char *v118;
  __int128 v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  __int128 v124;
  uint64_t v125;
  char *v126;
  char *v127;
  __int128 v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  __int128 v133;
  uint64_t v134;
  char *v135;
  char *v136;
  __int128 v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  void (*v164)(char *, char *, uint64_t);
  void (*v165)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_1A297DA3C((uint64_t)a1, type metadata accessor for SFAirDropSend.Transfer.State);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA20) + 64);
        v7 = (char *)a1 + v6;
        v8 = (char *)a2 + v6;
        *((_WORD *)v7 + 24) = *(_WORD *)((char *)a2 + v6 + 48);
        v9 = *(_OWORD *)((char *)a2 + v6 + 16);
        *(_OWORD *)v7 = *(_OWORD *)((char *)a2 + v6);
        *((_OWORD *)v7 + 1) = v9;
        *((_OWORD *)v7 + 2) = *(_OWORD *)((char *)a2 + v6 + 32);
        v10 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v11 = &v7[v10];
        v12 = &v8[v10];
        v13 = sub_1A2AE3130();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788);
        *(_OWORD *)&v11[*(int *)(v14 + 68)] = *(_OWORD *)&v12[*(int *)(v14 + 68)];
        goto LABEL_44;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA18) + 48);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = sub_1A2AE3130();
        v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
        v19(v16, v17, v18);
        v20 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA10);
        v16[v20[13]] = v17[v20[13]];
        v21 = v20[14];
        v22 = &v16[v21];
        v23 = &v17[v21];
        v24 = sub_1A2AE30C4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
        v25 = v20[15];
        v26 = &v16[v25];
        v27 = &v17[v25];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA08);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *v26 = *v27;
          v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA20) + 48);
          v29 = &v26[v28];
          v30 = &v27[v28];
          v19(&v26[v28], v30, v18);
          v31 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA28) + 52);
          v32 = &v29[v31];
          v33 = &v30[v31];
          v19(v32, v33, v18);
          v34 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0) + 68);
          v35 = &v32[v34];
          v36 = &v33[v34];
        }
        else
        {
          v115 = *((_OWORD *)v27 + 1);
          *(_OWORD *)v26 = *(_OWORD *)v27;
          *((_OWORD *)v26 + 1) = v115;
          *((_QWORD *)v26 + 4) = *((_QWORD *)v27 + 4);
          v116 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA18) + 80);
          v117 = &v26[v116];
          v118 = &v27[v116];
          *((_WORD *)v117 + 24) = *(_WORD *)&v27[v116 + 48];
          v119 = *(_OWORD *)&v27[v116 + 16];
          *(_OWORD *)v117 = *(_OWORD *)&v27[v116];
          *((_OWORD *)v117 + 1) = v119;
          *((_OWORD *)v117 + 2) = *(_OWORD *)&v27[v116 + 32];
          v120 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          v121 = &v117[v120];
          v122 = &v118[v120];
          v19(v121, &v118[v120], v18);
          v123 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
          v35 = &v121[v123];
          v36 = &v122[v123];
        }
        goto LABEL_19;
      case 2u:
        v37 = a2[1];
        *a1 = *a2;
        a1[1] = v37;
        a1[2] = a2[2];
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
        v38 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA08) + 80);
        v39 = (char *)a1 + v38;
        v40 = (char *)a2 + v38;
        *((_WORD *)v39 + 24) = *(_WORD *)((char *)a2 + v38 + 48);
        v41 = *(_OWORD *)((char *)a2 + v38 + 16);
        *(_OWORD *)v39 = *(_OWORD *)((char *)a2 + v38);
        *((_OWORD *)v39 + 1) = v41;
        *((_OWORD *)v39 + 2) = *(_OWORD *)((char *)a2 + v38 + 32);
        v42 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v43 = &v39[v42];
        v44 = &v40[v42];
        v45 = sub_1A2AE3130();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788);
        *(_OWORD *)&v43[*(int *)(v46 + 68)] = *(_OWORD *)&v44[*(int *)(v46 + 68)];
        goto LABEL_44;
      case 3u:
        v47 = a2[3];
        a1[2] = a2[2];
        a1[3] = v47;
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        v48 = a2[1];
        *a1 = *a2;
        a1[1] = v48;
        v49 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA10) + 48);
        v50 = (char *)a1 + v49;
        v51 = (char *)a2 + v49;
        v52 = sub_1A2AE3130();
        v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32);
        v53(v50, v51, v52);
        v54 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B3B0);
        v50[v54[13]] = v51[v54[13]];
        v55 = v54[14];
        v56 = &v50[v55];
        v57 = &v51[v55];
        v58 = sub_1A2AE30C4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
        v59 = v54[15];
        v60 = &v50[v59];
        v61 = &v51[v59];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B400);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *v60 = *v61;
          v62 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A8) + 48);
          v63 = &v60[v62];
          v64 = &v61[v62];
          v53(&v60[v62], v64, v52);
          v65 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B0) + 52);
          v66 = &v63[v65];
          v67 = &v64[v65];
          v53(v66, v67, v52);
          v68 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0) + 68);
          v35 = &v66[v68];
          v36 = &v67[v68];
        }
        else
        {
          v124 = *((_OWORD *)v61 + 1);
          *(_OWORD *)v60 = *(_OWORD *)v61;
          *((_OWORD *)v60 + 1) = v124;
          *((_QWORD *)v60 + 4) = *((_QWORD *)v61 + 4);
          v125 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B410) + 80);
          v126 = &v60[v125];
          v127 = &v61[v125];
          *((_WORD *)v126 + 24) = *(_WORD *)&v61[v125 + 48];
          v128 = *(_OWORD *)&v61[v125 + 16];
          *(_OWORD *)v126 = *(_OWORD *)&v61[v125];
          *((_OWORD *)v126 + 1) = v128;
          *((_OWORD *)v126 + 2) = *(_OWORD *)&v61[v125 + 32];
          v129 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          v130 = &v126[v129];
          v131 = &v127[v129];
          v53(v130, &v127[v129], v52);
          v132 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
          v35 = &v130[v132];
          v36 = &v131[v132];
        }
        goto LABEL_19;
      case 5u:
        v69 = a2[3];
        a1[2] = a2[2];
        a1[3] = v69;
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        v70 = a2[1];
        *a1 = *a2;
        a1[1] = v70;
        v71 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EA00) + 48);
        v72 = (char *)a1 + v71;
        v73 = (char *)a2 + v71;
        v74 = sub_1A2AE3130();
        v75 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32);
        v75(v72, v73, v74);
        v76 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA38);
        v72[v76[13]] = v73[v76[13]];
        v77 = v76[14];
        v78 = &v72[v77];
        v79 = &v73[v77];
        v80 = sub_1A2AE30C4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v78, v79, v80);
        v81 = v76[15];
        v82 = &v72[v81];
        v83 = &v73[v81];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA30);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *v82 = *v83;
          v84 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA48) + 48);
          v85 = &v82[v84];
          v86 = &v83[v84];
          v75(&v82[v84], v86, v74);
          v87 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA50) + 52);
          v88 = &v85[v87];
          v89 = &v86[v87];
          v75(v88, v89, v74);
          v90 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7A0) + 68);
          v35 = &v88[v90];
          v36 = &v89[v90];
        }
        else
        {
          v133 = *((_OWORD *)v83 + 1);
          *(_OWORD *)v82 = *(_OWORD *)v83;
          *((_OWORD *)v82 + 1) = v133;
          *((_QWORD *)v82 + 4) = *((_QWORD *)v83 + 4);
          v134 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BA40) + 80);
          v135 = &v82[v134];
          v136 = &v83[v134];
          *((_WORD *)v135 + 24) = *(_WORD *)&v83[v134 + 48];
          v137 = *(_OWORD *)&v83[v134 + 16];
          *(_OWORD *)v135 = *(_OWORD *)&v83[v134];
          *((_OWORD *)v135 + 1) = v137;
          *((_OWORD *)v135 + 2) = *(_OWORD *)&v83[v134 + 32];
          v138 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          v139 = &v135[v138];
          v140 = &v136[v138];
          v75(v139, &v136[v138], v74);
          v141 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B788) + 68);
          v35 = &v139[v141];
          v36 = &v140[v141];
        }
LABEL_19:
        *(_OWORD *)v35 = *(_OWORD *)v36;
        swift_storeEnumTagMultiPayload();
        goto LABEL_44;
      case 6u:
        v91 = sub_1A2AE3130();
        v164 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32);
        v164((char *)a1, (char *)a2, v91);
        v92 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
        v93 = v92[5];
        v94 = (char *)a1 + v93;
        v95 = (char *)a2 + v93;
        v96 = sub_1A2AE30C4();
        v97 = *(_QWORD *)(v96 - 8);
        v98 = *(void (**)(char *, char *, uint64_t))(v97 + 32);
        v98(v94, v95, v96);
        v99 = v92[6];
        v100 = (char *)a1 + v99;
        v101 = (char *)a2 + v99;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48))((char *)a2 + v99, 1, v96))
        {
          v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
          memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
        }
        else
        {
          v98(v100, v101, v96);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v100, 0, 1, v96);
        }
        v142 = v92[7];
        v143 = (char *)a1 + v142;
        v144 = (char *)a2 + v142;
        v145 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
        v146 = *(_QWORD *)(v145 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v146 + 48))(v144, 1, v145))
        {
          v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
          memcpy(v143, v144, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
        }
        else
        {
          v154 = type metadata accessor for SFAirDropSend.Failure();
          v155 = *(_QWORD *)(v154 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v155 + 48))(v144, 1, v154))
          {
            memcpy(v143, v144, *(_QWORD *)(v146 + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload())
            {
              memcpy(v143, v144, *(_QWORD *)(v155 + 64));
            }
            else
            {
              v164(v143, v144, v91);
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v155 + 56))(v143, 0, 1, v154);
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v143, 0, 1, v145);
        }
        v158 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F8) + 48);
        v159 = (char *)a1 + v158;
        v160 = (char *)a2 + v158;
        v161 = type metadata accessor for SFAirDropSend.Failure();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
        }
        else
        {
          v164(v159, v160, v91);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_44;
      case 7u:
        v103 = sub_1A2AE3130();
        v165 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32);
        v165((char *)a1, (char *)a2, v103);
        v104 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
        v105 = v104[5];
        v106 = (char *)a1 + v105;
        v107 = (char *)a2 + v105;
        v108 = sub_1A2AE30C4();
        v109 = *(_QWORD *)(v108 - 8);
        v110 = *(void (**)(char *, char *, uint64_t))(v109 + 32);
        v110(v106, v107, v108);
        v111 = v104[6];
        v112 = (char *)a1 + v111;
        v113 = (char *)a2 + v111;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))((char *)a2 + v111, 1, v108))
        {
          v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
          memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
        }
        else
        {
          v110(v112, v113, v108);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v112, 0, 1, v108);
        }
        v148 = v104[7];
        v149 = (char *)a1 + v148;
        v150 = (char *)a2 + v148;
        v151 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
        v152 = *(_QWORD *)(v151 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48))(v150, 1, v151))
        {
          v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
          memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
        }
        else
        {
          v156 = type metadata accessor for SFAirDropSend.Failure();
          v157 = *(_QWORD *)(v156 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48))(v150, 1, v156))
          {
            memcpy(v149, v150, *(_QWORD *)(v152 + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload())
            {
              memcpy(v149, v150, *(_QWORD *)(v157 + 64));
            }
            else
            {
              v165(v149, v150, v103);
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v157 + 56))(v149, 0, 1, v156);
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v149, 0, 1, v151);
        }
        v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67E9F0);
        *(_OWORD *)((char *)a1 + *(int *)(v162 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v162 + 48));
LABEL_44:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1A2A90580()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  void *v26;
  char *v27;
  char *v28;
  uint64_t *v29;

  v0 = type metadata accessor for SFAirDrop.DeclineAction();
  v1 = v0;
  if (v2 <= 0x3F)
  {
    v3 = *(_QWORD *)(v0 - 8) + 64;
    swift_getTupleTypeLayout3();
    v22 = &v21;
    v1 = sub_1A2A90774();
    if (v4 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v23 = &v20;
      v15 = &unk_1A2B093E8;
      v16 = &unk_1A2B09400;
      v17 = &unk_1A2B093C8;
      v18 = v3;
      swift_getTupleTypeLayout();
      v24 = &v19;
      v1 = sub_1A29AF5D0();
      if (v5 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        v25 = &v14;
        v26 = &unk_1A2B09430;
        v1 = sub_1A2A90838();
        if (v6 <= 0x3F)
        {
          swift_getTupleTypeLayout2();
          v27 = &v13;
          v1 = type metadata accessor for SFAirDropSend.Transfer.Metrics(319);
          if (v7 <= 0x3F)
          {
            v8 = type metadata accessor for SFAirDropSend.Failure();
            if (v9 > 0x3F)
            {
              return v8;
            }
            else
            {
              swift_getTupleTypeLayout2();
              v28 = &v12;
              swift_getTupleTypeLayout2();
              v29 = &v11;
              swift_initEnumMetadataMultiPayload();
              return 0;
            }
          }
        }
      }
    }
  }
  return v1;
}

uint64_t sub_1A2A90774()
{
  uint64_t result;

  result = qword_1EE6750D8;
  if (!qword_1EE6750D8)
  {
    sub_1A2A456C0();
    sub_1A2A6FD48();
    sub_1A2A907F4();
    type metadata accessor for SFAirDrop.PermissionRequest();
  }
  return result;
}

unint64_t sub_1A2A907F4()
{
  unint64_t result;

  result = qword_1EE674940;
  if (!qword_1EE674940)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFInterventionResponse, &type metadata for SFInterventionResponse);
    atomic_store(result, (unint64_t *)&qword_1EE674940);
  }
  return result;
}

uint64_t sub_1A2A90838()
{
  uint64_t result;

  result = qword_1EE6750E8;
  if (!qword_1EE6750E8)
    type metadata accessor for SFAirDrop.PermissionRequest();
  return result;
}

uint64_t _s8TransferV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1A2A908F8 + 4 * byte_1A2B091B9[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1A2A9092C + 4 * byte_1A2B091B4[v4]))();
}

uint64_t sub_1A2A9092C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A90934(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2A9093CLL);
  return result;
}

uint64_t sub_1A2A90948(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2A90950);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1A2A90954(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A9095C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8TransferV10CodingKeysOMa_0()
{
  return &_s8TransferV10CodingKeysON_0;
}

uint64_t _s8TransferV5StateO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1A2A909C4 + 4 * byte_1A2B091C3[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1A2A909F8 + 4 * byte_1A2B091BE[v4]))();
}

uint64_t sub_1A2A909F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A90A00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2A90A08);
  return result;
}

uint64_t sub_1A2A90A14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2A90A1CLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1A2A90A20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A90A28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8TransferV5StateO10CodingKeysOMa_0()
{
  return &_s8TransferV5StateO10CodingKeysON_0;
}

ValueMetadata *_s8TransferV5StateO17CreatedCodingKeysOMa_0()
{
  return &_s8TransferV5StateO17CreatedCodingKeysON_0;
}

uint64_t _s8TransferV5StateO30AnalyzingFullContentCodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A2A90AA0 + 4 * byte_1A2B091CD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A2A90AD4 + 4 * byte_1A2B091C8[v4]))();
}

uint64_t sub_1A2A90AD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A90ADC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2A90AE4);
  return result;
}

uint64_t sub_1A2A90AF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2A90AF8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A2A90AFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A90B04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8TransferV5StateO30AnalyzingFullContentCodingKeysOMa_0()
{
  return &_s8TransferV5StateO30AnalyzingFullContentCodingKeysON_0;
}

ValueMetadata *_s8TransferV5StateO44WaitingForSensitiveContentResponseCodingKeysOMa_0()
{
  return &_s8TransferV5StateO44WaitingForSensitiveContentResponseCodingKeysON_0;
}

ValueMetadata *_s8TransferV5StateO31WaitingForAskResponseCodingKeysOMa_0()
{
  return &_s8TransferV5StateO31WaitingForAskResponseCodingKeysON_0;
}

uint64_t _s8TransferV5StateO22TransferringCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A2A90B90 + 4 * byte_1A2B091D7[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A2A90BC4 + 4 * byte_1A2B091D2[v4]))();
}

uint64_t sub_1A2A90BC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A90BCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2A90BD4);
  return result;
}

uint64_t sub_1A2A90BE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2A90BE8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A2A90BEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A90BF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8TransferV5StateO22TransferringCodingKeysOMa_0()
{
  return &_s8TransferV5StateO22TransferringCodingKeysON_0;
}

ValueMetadata *_s8TransferV5StateO50WaitingForShareContactPermissionResponseCodingKeysOMa_0()
{
  return &_s8TransferV5StateO50WaitingForShareContactPermissionResponseCodingKeysON_0;
}

uint64_t _s8TransferV5StateO20ExchangingCodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A2A90C60 + 4 * byte_1A2B091DC[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A2A90C80 + 4 * byte_1A2B091E1[v4]))();
}

_BYTE *sub_1A2A90C60(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A2A90C80(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A2A90C88(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A2A90C90(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A2A90C98(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A2A90CA0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s8TransferV5StateO20ExchangingCodingKeysOMa()
{
  return &_s8TransferV5StateO20ExchangingCodingKeysON;
}

ValueMetadata *_s8TransferV5StateO41WaitingForImportContactResponseCodingKeysOMa()
{
  return &_s8TransferV5StateO41WaitingForImportContactResponseCodingKeysON;
}

ValueMetadata *_s8TransferV5StateO24TransferFailedCodingKeysOMa_0()
{
  return &_s8TransferV5StateO24TransferFailedCodingKeysON_0;
}

uint64_t _s8TransferV5StateO44WaitingForSensitiveContentResponseCodingKeysOwst_0_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A2A90D28 + 4 * byte_1A2B091EB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A2A90D5C + 4 * byte_1A2B091E6[v4]))();
}

uint64_t sub_1A2A90D5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A90D64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2A90D6CLL);
  return result;
}

uint64_t sub_1A2A90D78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2A90D80);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A2A90D84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A90D8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8TransferV5StateO31CompletedSuccessfullyCodingKeysOMa_0()
{
  return &_s8TransferV5StateO31CompletedSuccessfullyCodingKeysON_0;
}

unint64_t sub_1A2A90DAC()
{
  unint64_t result;

  result = qword_1EE67EBA0;
  if (!qword_1EE67EBA0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09690, &_s8TransferV5StateO31CompletedSuccessfullyCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EBA0);
  }
  return result;
}

unint64_t sub_1A2A90DF4()
{
  unint64_t result;

  result = qword_1EE67EBA8;
  if (!qword_1EE67EBA8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09748, &_s8TransferV5StateO24TransferFailedCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EBA8);
  }
  return result;
}

unint64_t sub_1A2A90E3C()
{
  unint64_t result;

  result = qword_1EE67EBB0;
  if (!qword_1EE67EBB0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09800, &_s8TransferV5StateO41WaitingForImportContactResponseCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67EBB0);
  }
  return result;
}

unint64_t sub_1A2A90E84()
{
  unint64_t result;

  result = qword_1EE67EBB8;
  if (!qword_1EE67EBB8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B098B8, &_s8TransferV5StateO20ExchangingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67EBB8);
  }
  return result;
}

unint64_t sub_1A2A90ECC()
{
  unint64_t result;

  result = qword_1EE67EBC0;
  if (!qword_1EE67EBC0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09970, &_s8TransferV5StateO50WaitingForShareContactPermissionResponseCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EBC0);
  }
  return result;
}

unint64_t sub_1A2A90F14()
{
  unint64_t result;

  result = qword_1EE67EBC8;
  if (!qword_1EE67EBC8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09A28, &_s8TransferV5StateO22TransferringCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EBC8);
  }
  return result;
}

unint64_t sub_1A2A90F5C()
{
  unint64_t result;

  result = qword_1EE67EBD0;
  if (!qword_1EE67EBD0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09B30, &_s8TransferV5StateO44WaitingForSensitiveContentResponseCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EBD0);
  }
  return result;
}

unint64_t sub_1A2A90FA4()
{
  unint64_t result;

  result = qword_1EE67EBD8;
  if (!qword_1EE67EBD8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09BE8, &_s8TransferV5StateO30AnalyzingFullContentCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EBD8);
  }
  return result;
}

unint64_t sub_1A2A90FEC()
{
  unint64_t result;

  result = qword_1EE67EBE0;
  if (!qword_1EE67EBE0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09CF0, &_s8TransferV5StateO10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EBE0);
  }
  return result;
}

unint64_t sub_1A2A91034()
{
  unint64_t result;

  result = qword_1EE67EBE8;
  if (!qword_1EE67EBE8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09DA8, &_s8TransferV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EBE8);
  }
  return result;
}

unint64_t sub_1A2A9107C()
{
  unint64_t result;

  result = qword_1EE67EBF0;
  if (!qword_1EE67EBF0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09D18, &_s8TransferV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EBF0);
  }
  return result;
}

unint64_t sub_1A2A910C4()
{
  unint64_t result;

  result = qword_1EE67EBF8;
  if (!qword_1EE67EBF8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09D40, &_s8TransferV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EBF8);
  }
  return result;
}

unint64_t sub_1A2A9110C()
{
  unint64_t result;

  result = qword_1EE67EC00;
  if (!qword_1EE67EC00)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09C10, &_s8TransferV5StateO17CreatedCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EC00);
  }
  return result;
}

unint64_t sub_1A2A91154()
{
  unint64_t result;

  result = qword_1EE67EC08;
  if (!qword_1EE67EC08)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09C38, &_s8TransferV5StateO17CreatedCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EC08);
  }
  return result;
}

unint64_t sub_1A2A9119C()
{
  unint64_t result;

  result = qword_1EE67EC10;
  if (!qword_1EE67EC10)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09B58, &_s8TransferV5StateO30AnalyzingFullContentCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EC10);
  }
  return result;
}

unint64_t sub_1A2A911E4()
{
  unint64_t result;

  result = qword_1EE67EC18;
  if (!qword_1EE67EC18)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09B80, &_s8TransferV5StateO30AnalyzingFullContentCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EC18);
  }
  return result;
}

unint64_t sub_1A2A9122C()
{
  unint64_t result;

  result = qword_1EE67EC20;
  if (!qword_1EE67EC20)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09AA0, &_s8TransferV5StateO44WaitingForSensitiveContentResponseCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EC20);
  }
  return result;
}

unint64_t sub_1A2A91274()
{
  unint64_t result;

  result = qword_1EE67EC28;
  if (!qword_1EE67EC28)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09AC8, &_s8TransferV5StateO44WaitingForSensitiveContentResponseCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EC28);
  }
  return result;
}

unint64_t sub_1A2A912BC()
{
  unint64_t result;

  result = qword_1EE67EC30;
  if (!qword_1EE67EC30)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09A50, &_s8TransferV5StateO31WaitingForAskResponseCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EC30);
  }
  return result;
}

unint64_t sub_1A2A91304()
{
  unint64_t result;

  result = qword_1EE67EC38;
  if (!qword_1EE67EC38)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09A78, &_s8TransferV5StateO31WaitingForAskResponseCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EC38);
  }
  return result;
}

unint64_t sub_1A2A9134C()
{
  unint64_t result;

  result = qword_1EE67EC40;
  if (!qword_1EE67EC40)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09998, &_s8TransferV5StateO22TransferringCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EC40);
  }
  return result;
}

unint64_t sub_1A2A91394()
{
  unint64_t result;

  result = qword_1EE67EC48;
  if (!qword_1EE67EC48)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B099C0, &_s8TransferV5StateO22TransferringCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EC48);
  }
  return result;
}

unint64_t sub_1A2A913DC()
{
  unint64_t result;

  result = qword_1EE67EC50;
  if (!qword_1EE67EC50)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B098E0, &_s8TransferV5StateO50WaitingForShareContactPermissionResponseCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EC50);
  }
  return result;
}

unint64_t sub_1A2A91424()
{
  unint64_t result;

  result = qword_1EE67EC58;
  if (!qword_1EE67EC58)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09908, &_s8TransferV5StateO50WaitingForShareContactPermissionResponseCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EC58);
  }
  return result;
}

unint64_t sub_1A2A9146C()
{
  unint64_t result;

  result = qword_1EE67EC60;
  if (!qword_1EE67EC60)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09828, &_s8TransferV5StateO20ExchangingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67EC60);
  }
  return result;
}

unint64_t sub_1A2A914B4()
{
  unint64_t result;

  result = qword_1EE67EC68;
  if (!qword_1EE67EC68)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09850, &_s8TransferV5StateO20ExchangingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67EC68);
  }
  return result;
}

unint64_t sub_1A2A914FC()
{
  unint64_t result;

  result = qword_1EE67EC70;
  if (!qword_1EE67EC70)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09770, &_s8TransferV5StateO41WaitingForImportContactResponseCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67EC70);
  }
  return result;
}

unint64_t sub_1A2A91544()
{
  unint64_t result;

  result = qword_1EE67EC78;
  if (!qword_1EE67EC78)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09798, &_s8TransferV5StateO41WaitingForImportContactResponseCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67EC78);
  }
  return result;
}

unint64_t sub_1A2A9158C()
{
  unint64_t result;

  result = qword_1EE67EC80;
  if (!qword_1EE67EC80)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B096B8, &_s8TransferV5StateO24TransferFailedCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EC80);
  }
  return result;
}

unint64_t sub_1A2A915D4()
{
  unint64_t result;

  result = qword_1EE67EC88;
  if (!qword_1EE67EC88)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B096E0, &_s8TransferV5StateO24TransferFailedCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EC88);
  }
  return result;
}

unint64_t sub_1A2A9161C()
{
  unint64_t result;

  result = qword_1EE67EC90;
  if (!qword_1EE67EC90)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09600, &_s8TransferV5StateO31CompletedSuccessfullyCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EC90);
  }
  return result;
}

unint64_t sub_1A2A91664()
{
  unint64_t result;

  result = qword_1EE67EC98;
  if (!qword_1EE67EC98)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09628, &_s8TransferV5StateO31CompletedSuccessfullyCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67EC98);
  }
  return result;
}

unint64_t sub_1A2A916AC()
{
  unint64_t result;

  result = qword_1EE67ECA0;
  if (!qword_1EE67ECA0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09C60, &_s8TransferV5StateO10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67ECA0);
  }
  return result;
}

unint64_t sub_1A2A916F4()
{
  unint64_t result;

  result = qword_1EE67ECA8;
  if (!qword_1EE67ECA8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B09C88, &_s8TransferV5StateO10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67ECA8);
  }
  return result;
}

uint64_t sub_1A2A91738(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1936487029 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73736572676F7270 && a2 == 0xE800000000000000 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x63416C65636E6163 && a2 == 0xEC0000006E6F6974)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A2A91894(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64657461657263 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A2B45850 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001A2B45870 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A2B457D0 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726566736E617274 && a2 == 0xEC000000676E6972 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000028 && a2 == 0x80000001A2B457F0 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x69676E6168637865 && a2 == 0xEA0000000000676ELL || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001A2B47FD0 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x726566736E617274 && a2 == 0xEE0064656C696146 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A2B459F0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_1A2A91CA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7363697274656DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A2B45A30)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A2A91D8C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001A2B47FF0 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73736572676F7270 && a2 == 0xE800000000000000 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A2B45A70 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x63416C65636E6163 && a2 == 0xEC0000006E6F6974)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A2A91F54(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1936487029 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74736575716572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A2A92034(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F437265646E6573 && a2 == 0xED0000746361746ELL;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74736575716572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A2A92148(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461447472617473 && a2 == 0xE900000000000065 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5079616C70736964 && a2 == 0xEF797469726F6972 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A2B45AB0 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65746E6573657270 && a2 == 0xE900000000000072 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x75716552646E6573 && a2 == 0xEB00000000747365 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A2B48010 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7265766965636572 && a2 == 0xEC000000656D614ELL)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_1A2A92528()
{
  _BYTE *v0;

  if (*v0)
    return 0x6572756C696166;
  else
    return 0x73736563637573;
}

uint64_t sub_1A2A9255C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2A96B60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2A92580()
{
  sub_1A2A9478C();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A925A8()
{
  sub_1A2A9478C();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A925D0()
{
  sub_1A2A947D0();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A925F8()
{
  sub_1A2A947D0();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A92620()
{
  sub_1A2A94814();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A92648()
{
  sub_1A2A94814();
  return sub_1A2AE4108();
}

uint64_t SFAirDropSend.Transfer.Metrics.TransferResult.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67ECD8);
  v25 = *(_QWORD *)(v2 - 8);
  v26 = v2;
  MEMORY[0x1E0C80A78](v2);
  v24 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SFAirDropSend.Failure();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v23 = (uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67ECE0);
  v21 = *(_QWORD *)(v7 - 8);
  v22 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67ECE8);
  v28 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2A9478C();
  sub_1A2AE40E4();
  sub_1A2990388(v27, (uint64_t)v12, type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) == 1)
  {
    v29 = 0;
    sub_1A2A94814();
    sub_1A2AE3DB4();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v22);
  }
  else
  {
    v17 = v23;
    sub_1A297EB48((uint64_t)v12, v23, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropSend.Failure);
    v30 = 1;
    sub_1A2A947D0();
    v18 = v24;
    sub_1A2AE3DB4();
    sub_1A296E8A4(&qword_1EE67EAA0, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    v19 = v26;
    sub_1A2AE3E2C();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v19);
    sub_1A297DA3C(v17, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropSend.Failure);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v15, v13);
}

uint64_t SFAirDropSend.Transfer.Metrics.TransferResult.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  char v44;

  v42 = a1;
  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67ED08);
  v4 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  v37 = v4;
  MEMORY[0x1E0C80A78](v3);
  v39 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67ED10);
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  MEMORY[0x1E0C80A78](v6);
  v38 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67ED18);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v33 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2A9478C();
  v18 = v41;
  sub_1A2AE40C0();
  if (!v18)
  {
    v33 = v12;
    v19 = v38;
    v20 = v39;
    v41 = v9;
    v21 = v40;
    v22 = sub_1A2AE3D9C();
    if (*(_QWORD *)(v22 + 16) == 1)
    {
      if ((*(_BYTE *)(v22 + 32) & 1) != 0)
      {
        v38 = (char *)v22;
        v44 = 1;
        sub_1A2A947D0();
        sub_1A2AE3CE8();
        v27 = type metadata accessor for SFAirDropSend.Failure();
        sub_1A296E8A4(&qword_1EE67EB58, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
        v28 = v15;
        v29 = v27;
        v35 = (uint64_t)v28;
        v30 = v36;
        sub_1A2AE3D78();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v30);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
        v31 = v35;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v35, 0, 1, v29);
        sub_1A297EB48(v31, (uint64_t)v17, type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult);
      }
      else
      {
        v43 = 0;
        sub_1A2A94814();
        sub_1A2AE3CE8();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v35);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
        v32 = type metadata accessor for SFAirDropSend.Failure();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v17, 1, 1, v32);
      }
      sub_1A297EB48((uint64_t)v17, v21, type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult);
    }
    else
    {
      v23 = sub_1A2AE3B5C();
      swift_allocError();
      v25 = v24;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE67AC00);
      *v25 = v33;
      sub_1A2AE3CF4();
      sub_1A2AE3B50();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x1E0DEC450], v23);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v42);
}

uint64_t sub_1A2A92DBC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDropSend.Transfer.Metrics.TransferResult.init(from:)(a1, a2);
}

uint64_t sub_1A2A92DD0(_QWORD *a1)
{
  return SFAirDropSend.Transfer.Metrics.TransferResult.encode(to:)(a1);
}

uint64_t SFAirDropSend.Transfer.Metrics.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A2990388(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.TransferIdentifier);
}

uint64_t SFAirDropSend.Transfer.Metrics.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SFAirDropSend.Transfer.Metrics(0) + 20);
  v4 = sub_1A2AE30C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SFAirDropSend.Transfer.Metrics.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
  return sub_1A297CDE4(v1 + *(int *)(v3 + 24), a1, &qword_1EE67B7B8);
}

uint64_t SFAirDropSend.Transfer.Metrics.endDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
  return sub_1A2A9486C(a1, v1 + *(int *)(v3 + 24), &qword_1EE67B7B8);
}

uint64_t (*SFAirDropSend.Transfer.Metrics.endDate.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
  return nullsub_1;
}

uint64_t SFAirDropSend.Transfer.Metrics.result.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
  return sub_1A297CDE4(v1 + *(int *)(v3 + 28), a1, &qword_1EE67EB98);
}

uint64_t SFAirDropSend.Transfer.Metrics.result.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
  return sub_1A2A9486C(a1, v1 + *(int *)(v3 + 28), &qword_1EE67EB98);
}

uint64_t (*SFAirDropSend.Transfer.Metrics.result.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
  return nullsub_1;
}

uint64_t SFAirDropSend.Transfer.Metrics.init(id:startDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);

  v6 = (int *)type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
  v7 = a3 + v6[6];
  v8 = sub_1A2AE30C4();
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  v10 = a3 + v6[7];
  v11 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v13(v10, 1, 1, v11);
  sub_1A297EB48(a1, a3, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.TransferIdentifier);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(a3 + v6[5], a2, v8);
  sub_1A296F108(v10, &qword_1EE67EB98);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v13)(v10, 1, 1, v11);
}

uint64_t SFAirDropSend.Transfer.Metrics.description.getter()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  void (*v45)(char *, unint64_t, uint64_t);
  uint64_t v46;
  int64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  _QWORD *v57;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _QWORD *v73;
  uint64_t v74;
  unint64_t v75;

  v1 = sub_1A2AE2FA4();
  v70 = *(_QWORD *)(v1 - 8);
  v71 = v1;
  MEMORY[0x1E0C80A78](v1);
  v69 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1A2AE2FBC();
  v67 = *(_QWORD *)(v3 - 8);
  v68 = v3;
  MEMORY[0x1E0C80A78](v3);
  v66 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67ED20);
  v5 = MEMORY[0x1E0C80A78](v64);
  v63 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v60 = (char *)&v59 - v7;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67CA98);
  v8 = MEMORY[0x1E0C80A78](v61);
  v62 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v65 = (uint64_t)&v59 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A2AE30C4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v72 = (char *)&v59 - v19;
  v20 = v0;
  _s7Sharing9SFAirDropO18TransferIdentifierV11stringValueSSvg_0();
  v21 = sub_1A2A1A8B0(8);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  swift_bridgeObjectRelease();
  v28 = MEMORY[0x1A8586B44](v21, v23, v25, v27);
  v30 = v29;
  swift_bridgeObjectRelease();
  v31 = sub_1A296CFB4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v33 = v31[2];
  v32 = v31[3];
  if (v33 >= v32 >> 1)
    v31 = sub_1A296CFB4((_QWORD *)(v32 > 1), v33 + 1, 1, v31);
  v31[2] = v33 + 1;
  v34 = &v31[2 * v33];
  v34[4] = v28;
  v34[5] = v30;
  v35 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
  sub_1A297CDE4(v20 + *(int *)(v35 + 24), (uint64_t)v13, &qword_1EE67B7B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
  {
    v43 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v44 = v72;
    v43(v72, v13, v14);
    v45 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    v45(v18, v20 + *(int *)(v35 + 20), v14);
    sub_1A296E8A4(&qword_1EE67ED28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    v46 = (uint64_t)v44;
    v47 = v14;
    if ((sub_1A2AE33B8() & 1) != 0)
    {
      v49 = v64;
      v50 = *(int *)(v64 + 48);
      v71 = v15;
      v51 = v60;
      v52 = &v60[v50];
      v43(v60, v18, v14);
      v45(v52, v46, v14);
      v53 = v63;
      v54 = &v63[*(int *)(v49 + 48)];
      v45(v63, (unint64_t)v51, v14);
      v45(v54, (unint64_t)v52, v14);
      v55 = (uint64_t)v62;
      v43(v62, v53, v14);
      v45 = *(void (**)(char *, unint64_t, uint64_t))(v71 + 8);
      ((void (*)(char *, uint64_t))v45)(v54, v14);
      v56 = &v53[*(int *)(v49 + 48)];
      v43(v53, v51, v14);
      v43(v56, v52, v14);
      v43((char *)(v55 + *(int *)(v61 + 36)), v56, v14);
      ((void (*)(char *, uint64_t))v45)(v53, v14);
      v15 = v65;
      sub_1A2A948B0(v55, v65);
      v74 = 0x203A656D6974;
      v75 = 0xE600000000000000;
      sub_1A2A18CEC();
      sub_1A2AE3934();
      sub_1A2AE34F0();
      swift_bridgeObjectRelease();
      v46 = v74;
      v20 = v75;
      v35 = v31[2];
      v48 = v31[3];
      v47 = v35 + 1;
      v43 = (void (*)(char *, char *, uint64_t))v72;
      if (v35 < v48 >> 1)
      {
LABEL_9:
        v31[2] = v47;
        v57 = &v31[2 * v35];
        v57[4] = v46;
        v57[5] = v20;
        sub_1A296F108(v15, &qword_1EE67CA98);
        ((void (*)(void (*)(char *, char *, uint64_t), uint64_t))v45)(v43, v14);
        goto LABEL_10;
      }
    }
    else
    {
      __break(1u);
    }
    v31 = sub_1A296CFB4((_QWORD *)(v48 > 1), v47, 1, v31);
    goto LABEL_9;
  }
  sub_1A296F108((uint64_t)v13, &qword_1EE67B7B8);
  v74 = 0;
  v75 = 0xE000000000000000;
  sub_1A2AE3B20();
  swift_bridgeObjectRelease();
  v74 = 0x203A656D6974;
  v75 = 0xE600000000000000;
  v36 = v66;
  sub_1A2AE2FB0();
  v37 = v69;
  sub_1A2AE2F98();
  sub_1A2AE30A0();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v37, v71);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v36, v68);
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  v38 = v74;
  v39 = v75;
  v41 = v31[2];
  v40 = v31[3];
  if (v41 >= v40 >> 1)
    v31 = sub_1A296CFB4((_QWORD *)(v40 > 1), v41 + 1, 1, v31);
  v31[2] = v41 + 1;
  v42 = &v31[2 * v41];
  v42[4] = v38;
  v42[5] = v39;
LABEL_10:
  v74 = 123;
  v75 = 0xE100000000000000;
  v73 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6764B8);
  sub_1A297AFFC();
  sub_1A2AE33AC();
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  return v74;
}

uint64_t sub_1A2A93720()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A2A93744 + 4 * byte_1A2B0A190[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_1A2A93744()
{
  return 0x7461447472617473;
}

uint64_t sub_1A2A93760()
{
  return 0x65746144646E65;
}

uint64_t sub_1A2A93778()
{
  return 0x746C75736572;
}

uint64_t sub_1A2A9378C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2A96C50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2A937B0()
{
  sub_1A2A948F8();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A937D8()
{
  sub_1A2A948F8();
  return sub_1A2AE4108();
}

uint64_t SFAirDropSend.Transfer.Metrics.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67ED30);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2A948F8();
  sub_1A2AE40E4();
  v12 = 0;
  type metadata accessor for SFAirDrop.TransferIdentifier();
  sub_1A296E8A4(&qword_1EE67C938, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
  sub_1A2AE3E2C();
  if (!v1)
  {
    type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
    v11 = 1;
    sub_1A2AE30C4();
    sub_1A296E8A4(&qword_1EE67AB88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1A2AE3E2C();
    v10 = 2;
    sub_1A2AE3DE4();
    v9 = 3;
    type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
    sub_1A296E8A4(&qword_1EE67ED40, type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Transfer.Metrics.TransferResult);
    sub_1A2AE3DE4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SFAirDropSend.Transfer.Metrics.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char v51;
  char v52;
  char v53;
  char v54;

  v38 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
  MEMORY[0x1E0C80A78](v3);
  v39 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
  MEMORY[0x1E0C80A78](v5);
  v40 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A2AE30C4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v42 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for SFAirDrop.TransferIdentifier();
  MEMORY[0x1E0C80A78](v43);
  v44 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67ED48);
  v41 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(void (**)(void))(v8 + 56);
  v48 = &v16[*(int *)(v14 + 24)];
  v17();
  v18 = (uint64_t)&v16[*(int *)(v13 + 28)];
  v19 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v49 = v18;
  v20(v18, 1, 1, v19);
  v21 = a1[3];
  v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_1A2A948F8();
  v46 = v12;
  v22 = (uint64_t)v50;
  sub_1A2AE40C0();
  if (v22)
  {
    v25 = (uint64_t)v48;
    v26 = v49;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    sub_1A296F108(v25, &qword_1EE67B7B8);
    return sub_1A296F108(v26, &qword_1EE67EB98);
  }
  else
  {
    v35 = v19;
    v36 = v8;
    v23 = v42;
    v50 = v16;
    v37 = v7;
    v54 = 0;
    sub_1A296E8A4(&qword_1EE67C988, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    v24 = v44;
    sub_1A2AE3D78();
    v27 = (uint64_t)v24;
    v28 = (uint64_t)v50;
    sub_1A297EB48(v27, (uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDrop.TransferIdentifier);
    v53 = 1;
    sub_1A296E8A4(&qword_1EE67AC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v29 = v37;
    sub_1A2AE3D78();
    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v28 + *(int *)(v13 + 20), v23, v29);
    v52 = 2;
    v30 = (uint64_t)v40;
    v31 = v46;
    sub_1A2AE3D30();
    sub_1A2A9486C(v30, (uint64_t)v48, &qword_1EE67B7B8);
    v51 = 3;
    sub_1A296E8A4(&qword_1EE67ED50, type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Transfer.Metrics.TransferResult);
    v32 = (uint64_t)v39;
    sub_1A2AE3D30();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v31, v45);
    sub_1A2A9486C(v32, v49, &qword_1EE67EB98);
    v33 = (uint64_t)v50;
    sub_1A2990388((uint64_t)v50, v38, type metadata accessor for SFAirDropSend.Transfer.Metrics);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    return sub_1A297DA3C(v33, type metadata accessor for SFAirDropSend.Transfer.Metrics);
  }
}

uint64_t sub_1A2A93F38@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDropSend.Transfer.Metrics.init(from:)(a1, a2);
}

uint64_t sub_1A2A93F4C(_QWORD *a1)
{
  return SFAirDropSend.Transfer.Metrics.encode(to:)(a1);
}

uint64_t _s7Sharing13SFAirDropSendO8TransferV7MetricsV0E6ResultO2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  char v17;
  char v18;
  uint64_t v20;

  v4 = type metadata accessor for SFAirDropSend.Failure();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EDB0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_1A2990388(a1, (uint64_t)v14, type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult);
  sub_1A2990388(a2, v15, type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) != 1)
  {
    sub_1A2990388((uint64_t)v14, (uint64_t)v10, type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult);
    if (v16(v15, 1, v4) != 1)
    {
      sub_1A297EB48(v15, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropSend.Failure);
      _s7Sharing13SFAirDropSendO7FailureO2eeoiySbAE_AEtFZ_0((uint64_t)v10, (uint64_t)v7);
      v17 = v18;
      sub_1A297DA3C((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropSend.Failure);
      sub_1A297DA3C((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropSend.Failure);
      sub_1A297DA3C((uint64_t)v14, type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult);
      return v17 & 1;
    }
    sub_1A297DA3C((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropSend.Failure);
    goto LABEL_6;
  }
  if (v16(v15, 1, v4) != 1)
  {
LABEL_6:
    sub_1A296F108((uint64_t)v14, &qword_1EE67EDB0);
    v17 = 0;
    return v17 & 1;
  }
  sub_1A297DA3C((uint64_t)v14, type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult);
  v17 = 1;
  return v17 & 1;
}

BOOL _s7Sharing13SFAirDropSendO8TransferV7MetricsV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char *v36;
  char v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v59 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
  v56 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v52 = (uint64_t)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EDB8);
  MEMORY[0x1E0C80A78](v55);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
  v8 = MEMORY[0x1E0C80A78](v7);
  v53 = (uint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v57 = (uint64_t)&v48 - v11;
  MEMORY[0x1E0C80A78](v10);
  v58 = (uint64_t)&v48 - v12;
  v13 = sub_1A2AE30C4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v54 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EDC0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)&v48 - v24;
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v48 - v26;
  if ((_s7Sharing9SFAirDropO17PermissionRequestV18InterventionActionV2eeoiySbAGy_x_G_AItFZ_0() & 1) == 0)
    return 0;
  v51 = v14;
  v28 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
  if ((sub_1A2AE3088() & 1) == 0)
    return 0;
  v50 = v6;
  v29 = *(int *)(v28 + 24);
  v48 = a1;
  sub_1A297CDE4(a1 + v29, (uint64_t)v27, &qword_1EE67B7B8);
  v30 = *(int *)(v28 + 24);
  v49 = a2;
  sub_1A297CDE4(a2 + v30, (uint64_t)v25, &qword_1EE67B7B8);
  v31 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_1A297CDE4((uint64_t)v27, (uint64_t)v18, &qword_1EE67B7B8);
  sub_1A297CDE4((uint64_t)v25, v31, &qword_1EE67B7B8);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  if (v32((uint64_t)v18, 1, v13) != 1)
  {
    sub_1A297CDE4((uint64_t)v18, (uint64_t)v22, &qword_1EE67B7B8);
    if (v32(v31, 1, v13) != 1)
    {
      v33 = v28;
      v35 = v51;
      v36 = v54;
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v54, v31, v13);
      sub_1A296E8A4(&qword_1EE67EDC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
      v37 = sub_1A2AE33DC();
      v38 = *(void (**)(char *, uint64_t))(v35 + 8);
      v38(v36, v13);
      sub_1A296F108((uint64_t)v25, &qword_1EE67B7B8);
      sub_1A296F108((uint64_t)v27, &qword_1EE67B7B8);
      v38(v22, v13);
      sub_1A296F108((uint64_t)v18, &qword_1EE67B7B8);
      if ((v37 & 1) == 0)
        return 0;
      goto LABEL_10;
    }
    sub_1A296F108((uint64_t)v25, &qword_1EE67B7B8);
    sub_1A296F108((uint64_t)v27, &qword_1EE67B7B8);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v22, v13);
LABEL_8:
    v34 = &qword_1EE67EDC0;
LABEL_16:
    sub_1A296F108((uint64_t)v18, v34);
    return 0;
  }
  v33 = v28;
  sub_1A296F108((uint64_t)v25, &qword_1EE67B7B8);
  sub_1A296F108((uint64_t)v27, &qword_1EE67B7B8);
  if (v32(v31, 1, v13) != 1)
    goto LABEL_8;
  sub_1A296F108((uint64_t)v18, &qword_1EE67B7B8);
LABEL_10:
  v39 = v58;
  sub_1A297CDE4(v48 + *(int *)(v33 + 28), v58, &qword_1EE67EB98);
  v40 = v57;
  sub_1A297CDE4(v49 + *(int *)(v33 + 28), v57, &qword_1EE67EB98);
  v18 = v50;
  v41 = (uint64_t)&v50[*(int *)(v55 + 48)];
  sub_1A297CDE4(v39, (uint64_t)v50, &qword_1EE67EB98);
  sub_1A297CDE4(v40, v41, &qword_1EE67EB98);
  v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  v43 = v59;
  if (v42((uint64_t)v18, 1, v59) == 1)
  {
    sub_1A296F108(v40, &qword_1EE67EB98);
    sub_1A296F108(v39, &qword_1EE67EB98);
    if (v42(v41, 1, v43) == 1)
    {
      sub_1A296F108((uint64_t)v18, &qword_1EE67EB98);
      return 1;
    }
    goto LABEL_15;
  }
  v44 = v53;
  sub_1A297CDE4((uint64_t)v18, v53, &qword_1EE67EB98);
  if (v42(v41, 1, v43) == 1)
  {
    sub_1A296F108(v40, &qword_1EE67EB98);
    sub_1A296F108(v39, &qword_1EE67EB98);
    sub_1A297DA3C(v44, type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult);
LABEL_15:
    v34 = &qword_1EE67EDB8;
    goto LABEL_16;
  }
  v46 = v52;
  sub_1A297EB48(v41, v52, type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult);
  v47 = _s7Sharing13SFAirDropSendO8TransferV7MetricsV0E6ResultO2eeoiySbAI_AItFZ_0(v44, v46);
  sub_1A297DA3C(v46, type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult);
  sub_1A296F108(v40, &qword_1EE67EB98);
  sub_1A296F108(v39, &qword_1EE67EB98);
  sub_1A297DA3C(v44, type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult);
  sub_1A296F108((uint64_t)v18, &qword_1EE67EB98);
  return (v47 & 1) != 0;
}

uint64_t type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(uint64_t a1)
{
  return sub_1A29903E0(a1, (uint64_t *)&unk_1EE6746E0);
}

unint64_t sub_1A2A9478C()
{
  unint64_t result;

  result = qword_1EE67ECF0;
  if (!qword_1EE67ECF0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A6FC, &_s7MetricsV14TransferResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67ECF0);
  }
  return result;
}

unint64_t sub_1A2A947D0()
{
  unint64_t result;

  result = qword_1EE67ECF8;
  if (!qword_1EE67ECF8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A6AC, &_s7MetricsV14TransferResultO17FailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67ECF8);
  }
  return result;
}

unint64_t sub_1A2A94814()
{
  unint64_t result;

  result = qword_1EE67ED00;
  if (!qword_1EE67ED00)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A65C, &_s7MetricsV14TransferResultO17SuccessCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67ED00);
  }
  return result;
}

uint64_t type metadata accessor for SFAirDropSend.Transfer.Metrics(uint64_t a1)
{
  return sub_1A29903E0(a1, (uint64_t *)&unk_1EE6746F8);
}

uint64_t sub_1A2A9486C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A2A948B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67CA98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A2A948F8()
{
  unint64_t result;

  result = qword_1EE67ED38;
  if (!qword_1EE67ED38)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A60C, &_s7MetricsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67ED38);
  }
  return result;
}

_QWORD *_s7MetricsVwCP_0(_QWORD *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int EnumCaseMultiPayload;
  uint64_t v29;
  uint64_t v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A2AE3130();
    v8 = *(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = (char *)a1 + v9;
    v11 = &a2[v9];
    v12 = sub_1A2AE30C4();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v14(v10, v11, v12);
    v15 = a3[6];
    v16 = (char *)a1 + v15;
    v17 = &a2[v15];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(&a2[v15], 1, v12))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v14(v16, v17, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
    }
    v20 = a3[7];
    v21 = (_QWORD *)((char *)a1 + v20);
    v22 = &a2[v20];
    v23 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = type metadata accessor for SFAirDropSend.Failure();
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v22, 1, v26))
      {
        memcpy(v21, v22, *(_QWORD *)(v24 + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v29 = *((_QWORD *)v22 + 1);
          *v21 = *(_QWORD *)v22;
          v21[1] = v29;
          *((_OWORD *)v21 + 1) = *((_OWORD *)v22 + 1);
          v30 = *((_QWORD *)v22 + 5);
          v21[4] = *((_QWORD *)v22 + 4);
          v21[5] = v30;
          v21[6] = *((_QWORD *)v22 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(v21, v22, *(_QWORD *)(v27 + 64));
        }
        else
        {
          v8(v21, v22, v7);
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v21, 0, 1, v26);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
  }
  return a1;
}

uint64_t _s7MetricsVwxx_0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);

  v4 = sub_1A2AE3130();
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v14(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1A2AE30C4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v9 = a1 + a2[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6))
    v8(v9, v6);
  v10 = a1 + a2[7];
  v11 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11);
  if (!(_DWORD)result)
  {
    v13 = type metadata accessor for SFAirDropSend.Failure();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v10, 1, v13);
    if (!(_DWORD)result)
    {
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result == 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      else if (!(_DWORD)result)
      {
        return ((uint64_t (*)(uint64_t, uint64_t))v14)(v10, v4);
      }
    }
  }
  return result;
}

_QWORD *_s7MetricsVwcp_0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void *, const void *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_1A2AE3130();
  v7 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1A2AE30C4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 16);
  v13(v9, v10, v11);
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))((uint64_t)a2 + v14, 1, v11))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v13(v15, v16, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
  }
  v18 = a3[7];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = type metadata accessor for SFAirDropSend.Failure();
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v25 + 48))(v20, 1, v24))
    {
      memcpy(v19, v20, *(_QWORD *)(v22 + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v27 = v20[1];
        *v19 = *v20;
        v19[1] = v27;
        *((_OWORD *)v19 + 1) = *((_OWORD *)v20 + 1);
        v28 = v20[5];
        v19[4] = v20[4];
        v19[5] = v28;
        v19[6] = v20[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v19, v20, *(_QWORD *)(v25 + 64));
      }
      else
      {
        v7(v19, v20, v6);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v19, 0, 1, v24);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

uint64_t _s7MetricsVwca_0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  size_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD *, uint64_t, uint64_t);
  int v34;
  int v35;
  int v36;
  int EnumCaseMultiPayload;
  int v38;
  uint64_t v40;
  uint64_t v41;

  v6 = sub_1A2AE3130();
  v40 = *(_QWORD *)(v6 - 8);
  v41 = v6;
  (*(void (**)(uint64_t, uint64_t))(v40 + 24))(a1, a2);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1A2AE30C4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  v17 = v16(a1 + v13, 1, v10);
  v18 = v16((uint64_t)v15, 1, v10);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v14, v15, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v12((uint64_t)v14, (uint64_t)v15, v10);
LABEL_7:
  v20 = a3[7];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  v23 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      v28 = type metadata accessor for SFAirDropSend.Failure();
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v29 + 48))(v22, 1, v28))
      {
        memcpy(v21, v22, *(_QWORD *)(v24 + 64));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          *v21 = *v22;
          v21[1] = v22[1];
          v21[2] = v22[2];
          v21[3] = v22[3];
          v21[4] = v22[4];
          v21[5] = v22[5];
          v21[6] = v22[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(v21, v22, *(_QWORD *)(v29 + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v40 + 16))(v21, v22, v41);
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v21, 0, 1, v28);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      return a1;
    }
    goto LABEL_13;
  }
  if (v27)
  {
    sub_1A297DA3C((uint64_t)v21, type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult);
LABEL_13:
    v30 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98) - 8) + 64);
LABEL_14:
    memcpy(v21, v22, v30);
    return a1;
  }
  v31 = type metadata accessor for SFAirDropSend.Failure();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v32 + 48);
  v34 = v33(v21, 1, v31);
  v35 = v33(v22, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      if (a1 == a2)
        return a1;
      sub_1A297DA3C((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropSend.Failure);
      v38 = swift_getEnumCaseMultiPayload();
      if (v38 == 2)
      {
        *v21 = *v22;
        v21[1] = v22[1];
        v21[2] = v22[2];
        v21[3] = v22[3];
        v21[4] = v22[4];
        v21[5] = v22[5];
        v21[6] = v22[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      if (!v38)
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v40 + 16))(v21, v22, v41);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v30 = *(_QWORD *)(v32 + 64);
      goto LABEL_14;
    }
    sub_1A297DA3C((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropSend.Failure);
    goto LABEL_26;
  }
  if (v35)
  {
LABEL_26:
    v30 = *(_QWORD *)(v24 + 64);
    goto LABEL_14;
  }
  v36 = swift_getEnumCaseMultiPayload();
  if (v36 == 2)
  {
    *v21 = *v22;
    v21[1] = v22[1];
    v21[2] = v22[2];
    v21[3] = v22[3];
    v21[4] = v22[4];
    v21[5] = v22[5];
    v21[6] = v22[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (v36)
  {
    memcpy(v21, v22, *(_QWORD *)(v32 + 64));
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v40 + 16))(v21, v22, v41);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v21, 0, 1, v31);
  return a1;
}

char *_s7MetricsVwtk_0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void *, const void *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_1A2AE3130();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_1A2AE30C4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
  v13(v9, v10, v11);
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v13(v15, v16, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
  }
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = type metadata accessor for SFAirDropSend.Failure();
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 1, v24))
    {
      memcpy(v19, v20, *(_QWORD *)(v22 + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v19, v20, *(_QWORD *)(v25 + 64));
      }
      else
      {
        v7(v19, v20, v6);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v19, 0, 1, v24);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

uint64_t _s7MetricsVwta_0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  size_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(void *, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v37;
  uint64_t v38;

  v6 = sub_1A2AE3130();
  v37 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  (*(void (**)(uint64_t, uint64_t))(v37 + 40))(a1, a2);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1A2AE30C4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  v17 = v16(a1 + v13, 1, v10);
  v18 = v16((uint64_t)v15, 1, v10);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v14, v15, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v12((uint64_t)v14, (uint64_t)v15, v10);
LABEL_7:
  v20 = a3[7];
  v21 = (void *)(a1 + v20);
  v22 = (void *)(a2 + v20);
  v23 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      v28 = type metadata accessor for SFAirDropSend.Failure();
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v29 + 48))(v22, 1, v28))
      {
        memcpy(v21, v22, *(_QWORD *)(v24 + 64));
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v21, v22, *(_QWORD *)(v29 + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v37 + 32))(v21, v22, v38);
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v21, 0, 1, v28);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      return a1;
    }
    goto LABEL_13;
  }
  if (v27)
  {
    sub_1A297DA3C((uint64_t)v21, type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult);
LABEL_13:
    v30 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98) - 8) + 64);
LABEL_14:
    memcpy(v21, v22, v30);
    return a1;
  }
  v31 = type metadata accessor for SFAirDropSend.Failure();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v32 + 48);
  v34 = v33(v21, 1, v31);
  v35 = v33(v22, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      if (a1 == a2)
        return a1;
      sub_1A297DA3C((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropSend.Failure);
      if (!swift_getEnumCaseMultiPayload())
      {
        (*(void (**)(void *, void *, uint64_t))(v37 + 32))(v21, v22, v38);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v30 = *(_QWORD *)(v32 + 64);
      goto LABEL_14;
    }
    sub_1A297DA3C((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropSend.Failure);
    goto LABEL_24;
  }
  if (v35)
  {
LABEL_24:
    v30 = *(_QWORD *)(v24 + 64);
    goto LABEL_14;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v21, v22, *(_QWORD *)(v32 + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v37 + 32))(v21, v22, v38);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v21, 0, 1, v31);
  return a1;
}

uint64_t _s7MetricsVwet_0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2A95A34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = sub_1A2AE30C4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
        v12 = *(_QWORD *)(v8 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t _s7MetricsVwst_0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2A95B04(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_1A2AE30C4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EB98);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1A2A95BD0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1A2AE3130();
  if (v0 <= 0x3F)
  {
    sub_1A2AE30C4();
    if (v1 <= 0x3F)
    {
      sub_1A29A1E18(319, &qword_1EE6745C0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      if (v2 <= 0x3F)
      {
        sub_1A29A1E18(319, &qword_1EE6746F0, (void (*)(uint64_t))type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *_s7MetricsV14TransferResultOwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for SFAirDropSend.Failure();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        v13 = a2[5];
        a1[4] = a2[4];
        a1[5] = v13;
        a1[6] = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v8 + 64));
      }
      else
      {
        v11 = sub_1A2AE3130();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t _s7MetricsV14TransferResultOwxx_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = type metadata accessor for SFAirDropSend.Failure();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result == 2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else if (!(_DWORD)result)
    {
      v4 = sub_1A2AE3130();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    }
  }
  return result;
}

_QWORD *_s7MetricsV14TransferResultOwcp_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for SFAirDropSend.Failure();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      v11 = a2[5];
      a1[4] = a2[4];
      a1[5] = v11;
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      v9 = sub_1A2AE3130();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

_QWORD *_s7MetricsV14TransferResultOwca_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  size_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;

  v6 = type metadata accessor for SFAirDropSend.Failure();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        return a1;
      sub_1A297DA3C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropSend.Failure);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      if (!EnumCaseMultiPayload)
      {
        v15 = sub_1A2AE3130();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v13 = *(_QWORD *)(v7 + 64);
      goto LABEL_9;
    }
    sub_1A297DA3C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropSend.Failure);
LABEL_8:
    v13 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_9:
    memcpy(a1, a2, v13);
    return a1;
  }
  if (v10)
    goto LABEL_8;
  v11 = swift_getEnumCaseMultiPayload();
  if (v11 == 2)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (v11)
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    v12 = sub_1A2AE3130();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *_s7MetricsV14TransferResultOwtk_0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for SFAirDropSend.Failure();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      v8 = sub_1A2AE3130();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *_s7MetricsV14TransferResultOwta_0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  size_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = type metadata accessor for SFAirDropSend.Failure();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        return a1;
      sub_1A297DA3C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropSend.Failure);
      if (!swift_getEnumCaseMultiPayload())
      {
        v14 = sub_1A2AE3130();
        (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v11 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    sub_1A297DA3C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropSend.Failure);
LABEL_7:
    v11 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v11);
    return a1;
  }
  if (v10)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    v12 = sub_1A2AE3130();
    (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t _s7MetricsV14TransferResultOwet_0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2A96490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for SFAirDropSend.Failure();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t _s7MetricsV14TransferResultOwst_0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2A964E8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for SFAirDropSend.Failure();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1A2A96538(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SFAirDropSend.Failure();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1A2A96570(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SFAirDropSend.Failure();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_1A2A965B0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SFAirDropSend.Failure();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t _s7MetricsV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A2A96650 + 4 * byte_1A2B0A199[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A2A96684 + 4 * byte_1A2B0A194[v4]))();
}

uint64_t sub_1A2A96684(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A9668C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2A96694);
  return result;
}

uint64_t sub_1A2A966A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2A966A8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A2A966AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A966B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7MetricsV10CodingKeysOMa()
{
  return &_s7MetricsV10CodingKeysON;
}

uint64_t _s7MetricsV14TransferResultO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A2A9671C + 4 * byte_1A2B0A1A3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A2A96750 + 4 * byte_1A2B0A19E[v4]))();
}

uint64_t sub_1A2A96750(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A96758(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2A96760);
  return result;
}

uint64_t sub_1A2A9676C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2A96774);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A2A96778(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A96780(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7MetricsV14TransferResultO10CodingKeysOMa()
{
  return &_s7MetricsV14TransferResultO10CodingKeysON;
}

ValueMetadata *_s7MetricsV14TransferResultO17SuccessCodingKeysOMa()
{
  return &_s7MetricsV14TransferResultO17SuccessCodingKeysON;
}

uint64_t _s7MetricsV14TransferResultO17FailureCodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A2A967EC + 4 * byte_1A2B0A1A8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A2A9680C + 4 * byte_1A2B0A1AD[v4]))();
}

_BYTE *sub_1A2A967EC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A2A9680C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A2A96814(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A2A9681C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A2A96824(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A2A9682C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s7MetricsV14TransferResultO17FailureCodingKeysOMa()
{
  return &_s7MetricsV14TransferResultO17FailureCodingKeysON;
}

unint64_t sub_1A2A9684C()
{
  unint64_t result;

  result = qword_1EE67ED58;
  if (!qword_1EE67ED58)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A424, &_s7MetricsV14TransferResultO17FailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67ED58);
  }
  return result;
}

unint64_t sub_1A2A96894()
{
  unint64_t result;

  result = qword_1EE67ED60;
  if (!qword_1EE67ED60)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A52C, &_s7MetricsV14TransferResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67ED60);
  }
  return result;
}

unint64_t sub_1A2A968DC()
{
  unint64_t result;

  result = qword_1EE67ED68;
  if (!qword_1EE67ED68)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A5E4, &_s7MetricsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67ED68);
  }
  return result;
}

unint64_t sub_1A2A96924()
{
  unint64_t result;

  result = qword_1EE67ED70;
  if (!qword_1EE67ED70)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A554, &_s7MetricsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67ED70);
  }
  return result;
}

unint64_t sub_1A2A9696C()
{
  unint64_t result;

  result = qword_1EE67ED78;
  if (!qword_1EE67ED78)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A57C, &_s7MetricsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67ED78);
  }
  return result;
}

unint64_t sub_1A2A969B4()
{
  unint64_t result;

  result = qword_1EE67ED80;
  if (!qword_1EE67ED80)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A44C, &_s7MetricsV14TransferResultO17SuccessCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67ED80);
  }
  return result;
}

unint64_t sub_1A2A969FC()
{
  unint64_t result;

  result = qword_1EE67ED88;
  if (!qword_1EE67ED88)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A474, &_s7MetricsV14TransferResultO17SuccessCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67ED88);
  }
  return result;
}

unint64_t sub_1A2A96A44()
{
  unint64_t result;

  result = qword_1EE67ED90;
  if (!qword_1EE67ED90)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A394, &_s7MetricsV14TransferResultO17FailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67ED90);
  }
  return result;
}

unint64_t sub_1A2A96A8C()
{
  unint64_t result;

  result = qword_1EE67ED98;
  if (!qword_1EE67ED98)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A3BC, &_s7MetricsV14TransferResultO17FailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67ED98);
  }
  return result;
}

unint64_t sub_1A2A96AD4()
{
  unint64_t result;

  result = qword_1EE67EDA0;
  if (!qword_1EE67EDA0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A49C, &_s7MetricsV14TransferResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67EDA0);
  }
  return result;
}

unint64_t sub_1A2A96B1C()
{
  unint64_t result;

  result = qword_1EE67EDA8;
  if (!qword_1EE67EDA8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A4C4, &_s7MetricsV14TransferResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67EDA8);
  }
  return result;
}

uint64_t sub_1A2A96B60(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A2A96C50(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461447472617473 && a2 == 0xE900000000000065 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65746144646E65 && a2 == 0xE700000000000000 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746C75736572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t SFAirDrop.TransferIdentifier.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1A2AE3130();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t SFAirDrop.TransferIdentifier.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1A2AE3130();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SFAirDrop.TransferIdentifier.init(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v18 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v16 - v5;
  v7 = sub_1A2AE3130();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A2AE30DC();
  v16 = 0x6F72662044495555;
  v17 = 0xEA0000000000206DLL;
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  v12 = v16;
  v11 = v17;
  sub_1A2A97080((uint64_t)v6, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
  {
    sub_1A2A970C8((uint64_t)v4);
    sub_1A297AFB8();
    swift_allocError();
    *(_QWORD *)v13 = v12;
    *(_QWORD *)(v13 + 8) = v11;
    *(_QWORD *)(v13 + 16) = 0xD00000000000005ALL;
    *(_QWORD *)(v13 + 24) = 0x80000001A2B48030;
    *(_QWORD *)(v13 + 32) = 23;
    *(_OWORD *)(v13 + 40) = 0u;
    *(_OWORD *)(v13 + 56) = 0u;
    *(_QWORD *)(v13 + 72) = 0;
    *(_QWORD *)(v13 + 80) = 0x2000000000000000;
    *(_QWORD *)(v13 + 88) = 0;
    *(_QWORD *)(v13 + 96) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    sub_1A2A970C8((uint64_t)v6);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v15 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v15(v10, v4, v7);
    sub_1A2A970C8((uint64_t)v6);
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v15)(v18, v10, v7);
  }
}

uint64_t sub_1A2A97080(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A2A970C8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SFAirDrop.TransferIdentifier.shortIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  _s7Sharing9SFAirDropO18TransferIdentifierV11stringValueSSvg_0();
  v0 = sub_1A2A1A8B0(8);
  v2 = v1;
  v4 = v3;
  v6 = v5;
  swift_bridgeObjectRelease();
  v7 = MEMORY[0x1A8586B44](v0, v2, v4, v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t SFAirDrop.TransferIdentifier.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  _s7Sharing9SFAirDropO18TransferIdentifierV11stringValueSSvg_0();
  v0 = sub_1A2A1A8B0(8);
  v2 = v1;
  v4 = v3;
  v6 = v5;
  swift_bridgeObjectRelease();
  v7 = MEMORY[0x1A8586B44](v0, v2, v4, v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t SFAirDrop.TransferIdentifier.hash(into:)()
{
  sub_1A2AE3130();
  sub_1A296E8A4(&qword_1EE6766E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  return sub_1A2AE3394();
}

uint64_t sub_1A2A97270()
{
  return 25705;
}

uint64_t sub_1A2A9727C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A2AE3EE0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A2A972F8()
{
  sub_1A2A97964();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A97320()
{
  sub_1A2A97964();
  return sub_1A2AE4108();
}

uint64_t SFAirDrop.TransferIdentifier.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EDD0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2A97964();
  sub_1A2AE40E4();
  sub_1A2AE3130();
  sub_1A296E8A4(&qword_1EE6766D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  sub_1A2AE3E2C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t SFAirDrop.TransferIdentifier.hashValue.getter()
{
  sub_1A2AE400C();
  sub_1A2AE3130();
  sub_1A296E8A4(&qword_1EE6766E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1A2AE3394();
  return sub_1A2AE4030();
}

uint64_t SFAirDrop.TransferIdentifier.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;

  v15 = a2;
  v17 = sub_1A2AE3130();
  v14 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v16 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EDE0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SFAirDrop.TransferIdentifier();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2A97964();
  sub_1A2AE40C0();
  if (!v2)
  {
    sub_1A296E8A4(&qword_1EE676788, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    sub_1A2AE3D78();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v16, v17);
    sub_1A2A287F0((uint64_t)v11, v15);
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

uint64_t sub_1A2A97688()
{
  sub_1A2AE400C();
  sub_1A2AE3130();
  sub_1A296E8A4(&qword_1EE6766E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1A2AE3394();
  return sub_1A2AE4030();
}

uint64_t sub_1A2A976F4()
{
  sub_1A2AE3130();
  sub_1A296E8A4(&qword_1EE6766E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  return sub_1A2AE3394();
}

uint64_t sub_1A2A9774C()
{
  sub_1A2AE400C();
  sub_1A2AE3130();
  sub_1A296E8A4(&qword_1EE6766E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1A2AE3394();
  return sub_1A2AE4030();
}

uint64_t sub_1A2A977B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDrop.TransferIdentifier.init(from:)(a1, a2);
}

uint64_t sub_1A2A977C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EDD0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2A97964();
  sub_1A2AE40E4();
  sub_1A2AE3130();
  sub_1A296E8A4(&qword_1EE6766D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  sub_1A2AE3E2C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1A2A978D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  _s7Sharing9SFAirDropO18TransferIdentifierV11stringValueSSvg_0();
  v0 = sub_1A2A1A8B0(8);
  v2 = v1;
  v4 = v3;
  v6 = v5;
  swift_bridgeObjectRelease();
  v7 = MEMORY[0x1A8586B44](v0, v2, v4, v6);
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t sub_1A2A97964()
{
  unint64_t result;

  result = qword_1EE67EDD8;
  if (!qword_1EE67EDD8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A958, &_s18TransferIdentifierV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67EDD8);
  }
  return result;
}

uint64_t type metadata accessor for SFAirDrop.TransferIdentifier()
{
  uint64_t result;

  result = qword_1EE6745A8;
  if (!qword_1EE6745A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A2A979E4()
{
  return sub_1A296E8A4(&qword_1EE6750F0, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
}

uint64_t _s18TransferIdentifierVwCP(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A2AE3130();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t _s18TransferIdentifierVwxx(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A2AE3130();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t _s18TransferIdentifierVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s18TransferIdentifierVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s18TransferIdentifierVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s18TransferIdentifierVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t _s18TransferIdentifierVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2A97B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A2AE3130();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t _s18TransferIdentifierVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2A97BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A2AE3130();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1A2A97C24()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A2AE3130();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s18TransferIdentifierV10CodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A2A97CCC + 4 * byte_1A2B0A750[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A2A97CEC + 4 * byte_1A2B0A755[v4]))();
}

_BYTE *sub_1A2A97CCC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A2A97CEC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A2A97CF4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A2A97CFC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A2A97D04(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A2A97D0C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s18TransferIdentifierV10CodingKeysOMa()
{
  return &_s18TransferIdentifierV10CodingKeysON;
}

unint64_t sub_1A2A97D2C()
{
  unint64_t result;

  result = qword_1EE67EDE8;
  if (!qword_1EE67EDE8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A930, &_s18TransferIdentifierV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67EDE8);
  }
  return result;
}

unint64_t sub_1A2A97D74()
{
  unint64_t result;

  result = qword_1EE67EDF0;
  if (!qword_1EE67EDF0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A8A0, &_s18TransferIdentifierV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67EDF0);
  }
  return result;
}

unint64_t sub_1A2A97DBC()
{
  unint64_t result;

  result = qword_1EE67EDF8;
  if (!qword_1EE67EDF8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0A8C8, &_s18TransferIdentifierV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67EDF8);
  }
  return result;
}

uint64_t static SFInterventionWorkflow.SprinboardSettings.userInfoKey.getter()
{
  return 0x6C666B726F576673;
}

Sharing::SFInterventionWorkflow::SprinboardSettings_optional __swiftcall SFInterventionWorkflow.SprinboardSettings.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (Sharing::SFInterventionWorkflow::SprinboardSettings_optional)rawValue;
}

uint64_t SFInterventionWorkflow.SprinboardSettings.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

_QWORD *sub_1A2A97E40@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

uint64_t SFInterventionWorkflow.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x657669656365722ELL;
  if (*v0 != 1)
    v1 = 0x666E4965726F6D2ELL;
  if (*v0)
    return v1;
  else
    return 0x646E65732ELL;
}

Sharing::SFInterventionWorkflow_optional __swiftcall SFInterventionWorkflow.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  Sharing::SFInterventionWorkflow_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A2AE3CD0();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static SFInterventionWorkflow.allCases.getter()
{
  return &unk_1E48232A0;
}

uint64_t SFInterventionWorkflow.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65766965636572;
  if (*v0 != 1)
    v1 = 0x6F666E4965726F6DLL;
  if (*v0)
    return v1;
  else
    return 1684956531;
}

uint64_t sub_1A2A97F74(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A2A5D36C(*a1, *a2);
}

uint64_t sub_1A2A97F80()
{
  sub_1A2AE400C();
  sub_1A2AE34C0();
  swift_bridgeObjectRelease();
  return sub_1A2AE4030();
}

uint64_t sub_1A2A98018()
{
  sub_1A2AE34C0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A2A9808C()
{
  sub_1A2AE400C();
  sub_1A2AE34C0();
  swift_bridgeObjectRelease();
  return sub_1A2AE4030();
}

Sharing::SFInterventionWorkflow_optional sub_1A2A98120(Swift::String *a1)
{
  return SFInterventionWorkflow.init(rawValue:)(*a1);
}

void sub_1A2A9812C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x65766965636572;
  if (v2 != 1)
  {
    v5 = 0x6F666E4965726F6DLL;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1684956531;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1A2A98184()
{
  sub_1A2A992D0();
  return sub_1A2AE35F8();
}

uint64_t sub_1A2A981E0()
{
  sub_1A2A992D0();
  return sub_1A2AE35E0();
}

void sub_1A2A9822C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4823330;
}

uint64_t sub_1A2A9823C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x657669656365722ELL;
  if (*v0 != 1)
    v1 = 0x666E4965726F6D2ELL;
  if (*v0)
    return v1;
  else
    return 0x646E65732ELL;
}

uint64_t SFInterventionResponse.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x7463656A65722ELL;
  else
    return 0x7470656363612ELL;
}

BOOL static SFInterventionResponse.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SFInterventionResponse.hash(into:)()
{
  return sub_1A2AE4018();
}

uint64_t sub_1A2A9830C()
{
  sub_1A2A986A8();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A98334()
{
  sub_1A2A986A8();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A9835C()
{
  _BYTE *v0;

  if (*v0)
    return 0x7463656A6572;
  else
    return 0x747065636361;
}

uint64_t sub_1A2A98388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2A991F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2A983AC()
{
  sub_1A2A98620();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A983D4()
{
  sub_1A2A98620();
  return sub_1A2AE4108();
}

uint64_t sub_1A2A983FC()
{
  sub_1A2A98664();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2A98424()
{
  sub_1A2A98664();
  return sub_1A2AE4108();
}

uint64_t SFInterventionResponse.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EE00);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EE08);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EE10);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2A98620();
  sub_1A2AE40E4();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_1A2A98664();
    sub_1A2AE3DB4();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_1A2A986A8();
    sub_1A2AE3DB4();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

unint64_t sub_1A2A98620()
{
  unint64_t result;

  result = qword_1EE67EE18;
  if (!qword_1EE67EE18)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0AF9C, &type metadata for SFInterventionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE67EE18);
  }
  return result;
}

unint64_t sub_1A2A98664()
{
  unint64_t result;

  result = qword_1EE67EE20;
  if (!qword_1EE67EE20)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0AF4C, &type metadata for SFInterventionResponse.RejectCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE67EE20);
  }
  return result;
}

unint64_t sub_1A2A986A8()
{
  unint64_t result;

  result = qword_1EE67EE28;
  if (!qword_1EE67EE28)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0AEFC, &type metadata for SFInterventionResponse.AcceptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE67EE28);
  }
  return result;
}

uint64_t SFInterventionResponse.hashValue.getter()
{
  sub_1A2AE400C();
  sub_1A2AE4018();
  return sub_1A2AE4030();
}

uint64_t SFInterventionResponse.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EE30);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EE38);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EE40);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2A98620();
  v11 = v33;
  sub_1A2AE40C0();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_1A2AE3D9C();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_1A2AE3B5C();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE67AC00);
    *v21 = &type metadata for SFInterventionResponse;
    sub_1A2AE3CF4();
    sub_1A2AE3B50();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0Tm(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_1A2A98664();
    sub_1A2AE3CE8();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_1A2A986A8();
    v22 = v6;
    sub_1A2AE3CE8();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_0Tm(v24);
}

uint64_t sub_1A2A98A88@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return SFInterventionResponse.init(from:)(a1, a2);
}

uint64_t sub_1A2A98A9C(_QWORD *a1)
{
  return SFInterventionResponse.encode(to:)(a1);
}

uint64_t sub_1A2A98AB0()
{
  _BYTE *v0;

  if (*v0)
    return 0x7463656A65722ELL;
  else
    return 0x7470656363612ELL;
}

uint64_t static SFAirDropInvocations.UserSafetyIntervention.supportsSecureCoding.getter()
{
  return 1;
}

id SFAirDropInvocations.UserSafetyIntervention.__allocating_init(name:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  objc_super v8;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR___SFXPCInvocation_name];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for SFXPCInvocation();
  return objc_msgSendSuper2(&v8, sel_init);
}

id SFAirDropInvocations.UserSafetyIntervention.init(name:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_super v5;

  v3 = &v2[OBJC_IVAR___SFXPCInvocation_name];
  *(_QWORD *)v3 = a1;
  *((_QWORD *)v3 + 1) = a2;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for SFXPCInvocation();
  return objc_msgSendSuper2(&v5, sel_init);
}

id SFAirDropInvocations.UserSafetyIntervention.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SFAirDropInvocations.UserSafetyIntervention.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id SFAirDropInvocations.UserSafetyIntervention.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_1A2A00984(a1);

  return v4;
}

id SFAirDropInvocations.UserSafetyIntervention.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_1A2A00984(a1);

  return v2;
}

id SFAirDropInvocations.UserSafetyIntervention.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1A2A98D0C()
{
  unint64_t result;

  result = qword_1EE67EE48;
  if (!qword_1EE67EE48)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFInterventionWorkflow.SprinboardSettings, &type metadata for SFInterventionWorkflow.SprinboardSettings);
    atomic_store(result, (unint64_t *)&qword_1EE67EE48);
  }
  return result;
}

unint64_t sub_1A2A98D54()
{
  unint64_t result;

  result = qword_1EE67EE50;
  if (!qword_1EE67EE50)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFInterventionWorkflow, &type metadata for SFInterventionWorkflow);
    atomic_store(result, (unint64_t *)&qword_1EE67EE50);
  }
  return result;
}

unint64_t sub_1A2A98D9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE67EE58;
  if (!qword_1EE67EE58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE67EE60);
    result = MEMORY[0x1A85895EC](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE67EE58);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SFInterventionWorkflow(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A2A98E48 + 4 * byte_1A2B0A9B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A2A98E7C + 4 * byte_1A2B0A9B0[v4]))();
}

uint64_t sub_1A2A98E7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A98E84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2A98E8CLL);
  return result;
}

uint64_t sub_1A2A98E98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2A98EA0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A2A98EA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A98EAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SFInterventionWorkflow()
{
  return &type metadata for SFInterventionWorkflow;
}

ValueMetadata *type metadata accessor for SFInterventionWorkflow.SprinboardSettings()
{
  return &type metadata for SFInterventionWorkflow.SprinboardSettings;
}

ValueMetadata *type metadata accessor for SFInterventionResponse()
{
  return &type metadata for SFInterventionResponse;
}

uint64_t type metadata accessor for SFAirDropInvocations.UserSafetyIntervention()
{
  return objc_opt_self();
}

uint64_t _s7Sharing22SFInterventionResponseOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A2A98F58 + 4 * byte_1A2B0A9BF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A2A98F8C + 4 * byte_1A2B0A9BA[v4]))();
}

uint64_t sub_1A2A98F8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A98F94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2A98F9CLL);
  return result;
}

uint64_t sub_1A2A98FA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2A98FB0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A2A98FB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2A98FBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SFInterventionResponse.CodingKeys()
{
  return &type metadata for SFInterventionResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for SFInterventionResponse.AcceptCodingKeys()
{
  return &type metadata for SFInterventionResponse.AcceptCodingKeys;
}

ValueMetadata *type metadata accessor for SFInterventionResponse.RejectCodingKeys()
{
  return &type metadata for SFInterventionResponse.RejectCodingKeys;
}

unint64_t sub_1A2A98FFC()
{
  unint64_t result;

  result = qword_1EE67EE68;
  if (!qword_1EE67EE68)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0AED4, &type metadata for SFInterventionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE67EE68);
  }
  return result;
}

unint64_t sub_1A2A99044()
{
  unint64_t result;

  result = qword_1EE67EE70;
  if (!qword_1EE67EE70)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0ADF4, &type metadata for SFInterventionResponse.AcceptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE67EE70);
  }
  return result;
}

unint64_t sub_1A2A9908C()
{
  unint64_t result;

  result = qword_1EE67EE78;
  if (!qword_1EE67EE78)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0AE1C, &type metadata for SFInterventionResponse.AcceptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE67EE78);
  }
  return result;
}

unint64_t sub_1A2A990D4()
{
  unint64_t result;

  result = qword_1EE67EE80;
  if (!qword_1EE67EE80)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0ADA4, &type metadata for SFInterventionResponse.RejectCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE67EE80);
  }
  return result;
}

unint64_t sub_1A2A9911C()
{
  unint64_t result;

  result = qword_1EE67EE88;
  if (!qword_1EE67EE88)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0ADCC, &type metadata for SFInterventionResponse.RejectCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE67EE88);
  }
  return result;
}

unint64_t sub_1A2A99164()
{
  unint64_t result;

  result = qword_1EE67EE90;
  if (!qword_1EE67EE90)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0AE44, &type metadata for SFInterventionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE67EE90);
  }
  return result;
}

unint64_t sub_1A2A991AC()
{
  unint64_t result;

  result = qword_1EE67EE98;
  if (!qword_1EE67EE98)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0AE6C, &type metadata for SFInterventionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE67EE98);
  }
  return result;
}

uint64_t sub_1A2A991F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x747065636361 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7463656A6572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1A2A992D0()
{
  unint64_t result;

  result = qword_1EE67EEA0;
  if (!qword_1EE67EEA0)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFInterventionWorkflow, &type metadata for SFInterventionWorkflow);
    atomic_store(result, (unint64_t *)&qword_1EE67EEA0);
  }
  return result;
}

uint64_t sub_1A2A99314()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  v1 = *(void **)(v0 + 56);
  if (!v1)
  {
    v8 = 0u;
    v9 = 0u;
LABEL_8:
    v5 = 0;
    goto LABEL_9;
  }
  v2 = v1;
  v3 = (void *)sub_1A2AE340C();
  v4 = objc_msgSend(v2, sel_objectForKey_, v3);

  if (v4)
  {
    sub_1A2AE3A90();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_1A296E450((uint64_t)v7, (uint64_t)&v8);
  if (!*((_QWORD *)&v9 + 1))
    goto LABEL_8;
  v5 = 1;
LABEL_9:
  sub_1A296F108((uint64_t)&v8, &qword_1ECEFB8A0);
  return v5;
}

id sub_1A2A993EC()
{
  uint64_t v0;
  id result;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;

  if ((*(_BYTE *)(v0 + 81) & 1) != 0)
    return 0;
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(unsigned __int8 *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = *(unsigned __int8 *)(v0 + 32);
  result = (id)objc_opt_self();
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (((v5 | v3) & 1) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v4)
    return objc_msgSend(result, sel_featureEnabledForDomain_feature_, v2, v4);
LABEL_9:
  __break(1u);
  return result;
}

id sub_1A2A99468()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v8;
  int v9;
  void *v10;
  void *v11;
  id v12;
  char v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  _OWORD v27[2];
  _OWORD v28[2];

  v1 = v0;
  sub_1A2AE3244();
  v2 = v28[0];
  if (LOBYTE(v28[0]) != 2)
    return (id)(v2 & 1);
  v3 = *(void **)(v0 + 56);
  if (!v3)
  {
LABEL_8:
    if ((*(_BYTE *)(v0 + 81) & 1) != 0)
      return (id)*(unsigned __int8 *)(v0 + 82);
    v8 = *(_QWORD *)(v0 + 64);
    v9 = *(unsigned __int8 *)(v1 + 80);
    v4 = *(id *)(v1 + 16);
    v1 = *(unsigned __int8 *)(v1 + 32);
    v10 = (void *)objc_opt_self();
    if (v8)
    {
      if (((v1 | v9) & 1) == 0)
      {
        if (v4)
          return objc_msgSend(v10, sel_featureEnabledForDomain_feature_, v8, v4);
        goto LABEL_29;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    swift_once();
LABEL_21:
    v22 = sub_1A2AE31D8();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EE67AA08);
    swift_retain_n();
    v15 = sub_1A2AE31C0();
    v16 = sub_1A2AE394C();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      *(_DWORD *)v17 = 136315138;
      *(_QWORD *)&v27[0] = v18;
      v23 = sub_1A2AE3B38();
      sub_1A296DA00(v23, v24, (uint64_t *)v27);
      sub_1A2AE3A60();
      swift_release_n();
      swift_bridgeObjectRelease();
      v21 = "Failed to cast value or get string from stored UserDefault. Returning default value {key: %s}";
      goto LABEL_23;
    }
LABEL_24:
    swift_release_n();
    goto LABEL_25;
  }
  v4 = v3;
  v5 = (void *)sub_1A2AE340C();
  v6 = objc_msgSend(v4, sel_objectForKey_, v5);

  if (!v6)
  {

    goto LABEL_8;
  }
  sub_1A2AE3A90();
  swift_unknownObjectRelease();
  sub_1A296E4A4(v27, v28);
  sub_1A296E4B4((uint64_t)v28, (uint64_t)v27);
  if ((swift_dynamicCast() & 1) != 0)
  {

    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
    v2 = v26;
    return (id)(v2 & 1);
  }
  v11 = (void *)sub_1A2AE340C();
  v12 = objc_msgSend(v4, sel_stringForKey_, v11);

  if (!v12)
  {
    if (qword_1EE67AA00 == -1)
      goto LABEL_21;
    goto LABEL_30;
  }
  sub_1A2AE343C();

  v13 = _sSb7SharingE18userDefaultsStringSbSgSS_tcfC_0();
  if (v13 == 2)
  {
    if (qword_1EE67AA00 != -1)
      swift_once();
    v14 = sub_1A2AE31D8();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EE67AA08);
    swift_retain_n();
    v15 = sub_1A2AE31C0();
    v16 = sub_1A2AE394C();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      *(_DWORD *)v17 = 136315138;
      *(_QWORD *)&v27[0] = v18;
      v19 = sub_1A2AE3B38();
      sub_1A296DA00(v19, v20, (uint64_t *)v27);
      sub_1A2AE3A60();
      swift_release_n();
      swift_bridgeObjectRelease();
      v21 = "Failed to create value from stored UserDefault. Returning default value {key: %s}";
LABEL_23:
      _os_log_impl(&dword_1A2830000, v15, v16, v21, v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85896E8](v18, -1, -1);
      MEMORY[0x1A85896E8](v17, -1, -1);
LABEL_25:

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
      return (id)*(unsigned __int8 *)(v1 + 82);
    }
    goto LABEL_24;
  }
  v25 = v13;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);

  return (id)(v25 & 1);
}

uint64_t sub_1A2A998C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  _OWORD v18[2];
  _OWORD v19[2];

  v1 = v0;
  sub_1A2AE3244();
  if (!*((_QWORD *)&v19[0] + 1))
  {
    v3 = *(void **)(v0 + 56);
    if (v3)
    {
      v4 = v3;
      v5 = (void *)sub_1A2AE340C();
      v6 = objc_msgSend(v4, sel_objectForKey_, v5);

      if (v6)
      {
        sub_1A2AE3A90();
        swift_unknownObjectRelease();
        sub_1A296E4A4(v18, v19);
        sub_1A296E4B4((uint64_t)v19, (uint64_t)v18);
        if ((swift_dynamicCast() & 1) != 0)
        {

          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v19);
          return v17;
        }
        v7 = (void *)sub_1A2AE340C();
        v8 = objc_msgSend(v4, sel_stringForKey_, v7);

        if (v8)
        {
          v2 = sub_1A2AE343C();

          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v19);
          return v2;
        }
        if (qword_1EE67AA00 != -1)
          swift_once();
        v9 = sub_1A2AE31D8();
        __swift_project_value_buffer(v9, (uint64_t)qword_1EE67AA08);
        swift_retain_n();
        v10 = sub_1A2AE31C0();
        v11 = sub_1A2AE394C();
        if (os_log_type_enabled(v10, v11))
        {
          v12 = (uint8_t *)swift_slowAlloc();
          v13 = swift_slowAlloc();
          *(_DWORD *)v12 = 136315138;
          *(_QWORD *)&v18[0] = v13;
          v14 = sub_1A2AE3B38();
          sub_1A296DA00(v14, v15, (uint64_t *)v18);
          sub_1A2AE3A60();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A2830000, v10, v11, "Failed to cast value or get string from stored UserDefault. Returning default value {key: %s}", v12, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1A85896E8](v13, -1, -1);
          MEMORY[0x1A85896E8](v12, -1, -1);
        }
        else
        {
          swift_release_n();
        }

        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v19);
      }
      else
      {

      }
    }
    v2 = *(_QWORD *)(v1 + 88);
    swift_bridgeObjectRetain();
    return v2;
  }
  return *(_QWORD *)&v19[0];
}

void sub_1A2A99BB8(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  _OWORD v20[2];
  _OWORD v21[2];

  v2 = v1;
  sub_1A2AE3244();
  v4 = v21[0];
  if (LOBYTE(v21[0]) != 7)
    goto LABEL_16;
  v5 = *(void **)(v1 + 56);
  if (!v5)
    goto LABEL_15;
  v6 = v5;
  v7 = (void *)sub_1A2AE340C();
  v8 = objc_msgSend(v6, sel_objectForKey_, v7);

  if (!v8)
  {

LABEL_15:
    v4 = *(_BYTE *)(v2 + 82);
    goto LABEL_16;
  }
  sub_1A2AE3A90();
  swift_unknownObjectRelease();
  sub_1A296E4A4(v20, v21);
  sub_1A296E4B4((uint64_t)v21, (uint64_t)v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EFF0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v9 = (void *)sub_1A2AE340C();
    v10 = objc_msgSend(v6, sel_stringForKey_, v9);

    if (v10)
    {
      sub_1A2AE343C();

      SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType.init(rawValue:)((char *)v20);
      v11 = v20[0];
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v21);

      *a1 = v11;
      return;
    }
    if (qword_1EE67AA00 != -1)
      swift_once();
    v12 = sub_1A2AE31D8();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EE67AA08);
    swift_retain_n();
    v13 = sub_1A2AE31C0();
    v14 = sub_1A2AE394C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      *(_DWORD *)v15 = 136315138;
      *(_QWORD *)&v20[0] = v16;
      v17 = sub_1A2AE3B38();
      sub_1A296DA00(v17, v18, (uint64_t *)v20);
      sub_1A2AE3A60();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A2830000, v13, v14, "Failed to cast value or get string from stored UserDefault. Returning default value {key: %s}", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85896E8](v16, -1, -1);
      MEMORY[0x1A85896E8](v15, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v21);
    goto LABEL_15;
  }

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v21);
  v4 = v19;
LABEL_16:
  *a1 = v4;
}

void sub_1A2A99EC0(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  char v9;
  void *v10;
  id v11;
  char v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  _OWORD v26[2];
  _OWORD v27[2];

  v2 = v1;
  sub_1A2AE3244();
  v4 = v27[0];
  if (LOBYTE(v27[0]) != 2)
    goto LABEL_6;
  v5 = *(void **)(v1 + 56);
  if (!v5)
  {
LABEL_21:
    v9 = *(_BYTE *)(v2 + 82);
    goto LABEL_22;
  }
  v6 = v5;
  v7 = (void *)sub_1A2AE340C();
  v8 = objc_msgSend(v6, sel_objectForKey_, v7);

  if (!v8)
  {

    goto LABEL_21;
  }
  sub_1A2AE3A90();
  swift_unknownObjectRelease();
  sub_1A296E4A4(v26, v27);
  sub_1A296E4B4((uint64_t)v27, (uint64_t)v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EFE8);
  if ((swift_dynamicCast() & 1) != 0)
  {

    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
    v4 = v25;
LABEL_6:
    v9 = v4 & 1;
LABEL_22:
    *a1 = v9;
    return;
  }
  v10 = (void *)sub_1A2AE340C();
  v11 = objc_msgSend(v6, sel_stringForKey_, v10);

  if (!v11)
  {
    if (qword_1EE67AA00 != -1)
      swift_once();
    v21 = sub_1A2AE31D8();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EE67AA08);
    swift_retain_n();
    v14 = sub_1A2AE31C0();
    v15 = sub_1A2AE394C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      *(_DWORD *)v16 = 136315138;
      *(_QWORD *)&v26[0] = v17;
      v22 = sub_1A2AE3B38();
      sub_1A296DA00(v22, v23, (uint64_t *)v26);
      sub_1A2AE3A60();
      swift_release_n();
      swift_bridgeObjectRelease();
      v20 = "Failed to cast value or get string from stored UserDefault. Returning default value {key: %s}";
      goto LABEL_18;
    }
LABEL_19:
    swift_release_n();
    goto LABEL_20;
  }
  sub_1A2AE343C();

  v12 = _sSb7SharingE18userDefaultsStringSbSgSS_tcfC_0();
  if (v12 == 2)
  {
    if (qword_1EE67AA00 != -1)
      swift_once();
    v13 = sub_1A2AE31D8();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EE67AA08);
    swift_retain_n();
    v14 = sub_1A2AE31C0();
    v15 = sub_1A2AE394C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      *(_DWORD *)v16 = 136315138;
      *(_QWORD *)&v26[0] = v17;
      v18 = sub_1A2AE3B38();
      sub_1A296DA00(v18, v19, (uint64_t *)v26);
      sub_1A2AE3A60();
      swift_release_n();
      swift_bridgeObjectRelease();
      v20 = "Failed to create value from stored UserDefault. Returning default value {key: %s}";
LABEL_18:
      _os_log_impl(&dword_1A2830000, v14, v15, v20, v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85896E8](v17, -1, -1);
      MEMORY[0x1A85896E8](v16, -1, -1);
LABEL_20:

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  v24 = v12 & 1;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);

  *a1 = v24;
}

uint64_t sub_1A2A9A2DC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unsigned int v25;
  _OWORD v26[2];
  _OWORD v27[2];

  v1 = v0;
  sub_1A2AE3244();
  if (BYTE4(v27[0]) != 1)
    return LODWORD(v27[0]);
  v2 = *(void **)(v0 + 56);
  if (!v2)
    return *(unsigned int *)(v1 + 84);
  v3 = v2;
  v4 = (void *)sub_1A2AE340C();
  v5 = objc_msgSend(v3, sel_objectForKey_, v4);

  if (!v5)
  {

    return *(unsigned int *)(v1 + 84);
  }
  sub_1A2AE3A90();
  swift_unknownObjectRelease();
  sub_1A296E4A4(v26, v27);
  sub_1A296E4B4((uint64_t)v27, (uint64_t)v26);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v7 = (void *)sub_1A2AE340C();
    v8 = objc_msgSend(v3, sel_stringForKey_, v7);

    if (v8)
    {
      v9 = sub_1A2AE343C();
      v11 = v10;

      v12 = sub_1A296EB50(v9, v11);
      if ((v12 & 0x100000000) == 0)
      {
        v6 = v12;
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);

        return v6;
      }
      if (qword_1EE67AA00 != -1)
        swift_once();
      v21 = sub_1A2AE31D8();
      __swift_project_value_buffer(v21, (uint64_t)qword_1EE67AA08);
      swift_retain_n();
      v14 = sub_1A2AE31C0();
      v15 = sub_1A2AE394C();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        v17 = swift_slowAlloc();
        *(_DWORD *)v16 = 136315138;
        *(_QWORD *)&v26[0] = v17;
        v22 = sub_1A2AE3B38();
        sub_1A296DA00(v22, v23, (uint64_t *)v26);
        sub_1A2AE3A60();
        swift_release_n();
        swift_bridgeObjectRelease();
        v20 = "Failed to create value from stored UserDefault. Returning default value {key: %s}";
        goto LABEL_19;
      }
    }
    else
    {
      if (qword_1EE67AA00 != -1)
        swift_once();
      v13 = sub_1A2AE31D8();
      __swift_project_value_buffer(v13, (uint64_t)qword_1EE67AA08);
      swift_retain_n();
      v14 = sub_1A2AE31C0();
      v15 = sub_1A2AE394C();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        v17 = swift_slowAlloc();
        *(_DWORD *)v16 = 136315138;
        *(_QWORD *)&v26[0] = v17;
        v18 = sub_1A2AE3B38();
        sub_1A296DA00(v18, v19, (uint64_t *)v26);
        sub_1A2AE3A60();
        swift_release_n();
        swift_bridgeObjectRelease();
        v20 = "Failed to cast value or get string from stored UserDefault. Returning default value {key: %s}";
LABEL_19:
        _os_log_impl(&dword_1A2830000, v14, v15, v20, v16, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85896E8](v17, -1, -1);
        MEMORY[0x1A85896E8](v16, -1, -1);
LABEL_21:

        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
        return *(unsigned int *)(v1 + 84);
      }
    }
    swift_release_n();
    goto LABEL_21;
  }

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
  return v25;
}

uint64_t sub_1A2A9A6E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unsigned __int8 v17;
  _OWORD v18[2];
  _OWORD v19[2];

  v1 = v0;
  sub_1A2AE3244();
  v2 = LOBYTE(v19[0]);
  if (LOBYTE(v19[0]) == 3)
  {
    v3 = *(void **)(v1 + 56);
    if (v3)
    {
      v4 = v3;
      v5 = (void *)sub_1A2AE340C();
      v6 = objc_msgSend(v4, sel_objectForKey_, v5);

      if (v6)
      {
        sub_1A2AE3A90();
        swift_unknownObjectRelease();
        sub_1A296E4A4(v18, v19);
        sub_1A296E4B4((uint64_t)v19, (uint64_t)v18);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EFE0);
        if ((swift_dynamicCast() & 1) != 0)
        {

          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v19);
          return v17;
        }
        v7 = (void *)sub_1A2AE340C();
        v8 = objc_msgSend(v4, sel_stringForKey_, v7);

        if (v8)
        {
          sub_1A2AE343C();

          v2 = _sSb7SharingE18userDefaultsStringSbSgSS_tcfC_0();
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v19);

          return v2;
        }
        if (qword_1EE67AA00 != -1)
          swift_once();
        v9 = sub_1A2AE31D8();
        __swift_project_value_buffer(v9, (uint64_t)qword_1EE67AA08);
        swift_retain_n();
        v10 = sub_1A2AE31C0();
        v11 = sub_1A2AE394C();
        if (os_log_type_enabled(v10, v11))
        {
          v12 = (uint8_t *)swift_slowAlloc();
          v13 = swift_slowAlloc();
          *(_DWORD *)v12 = 136315138;
          *(_QWORD *)&v18[0] = v13;
          v14 = sub_1A2AE3B38();
          sub_1A296DA00(v14, v15, (uint64_t *)v18);
          sub_1A2AE3A60();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A2830000, v10, v11, "Failed to cast value or get string from stored UserDefault. Returning default value {key: %s}", v12, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1A85896E8](v13, -1, -1);
          MEMORY[0x1A85896E8](v12, -1, -1);
        }
        else
        {
          swift_release_n();
        }

        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v19);
      }
      else
      {

      }
    }
    return *(unsigned __int8 *)(v1 + 82);
  }
  return v2;
}

uint64_t sub_1A2A9A9D8(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char *v6;
  uint64_t v7;

  v7 = sub_1A2AE3130();
  MEMORY[0x1E0C80A78](v7);
  v3 = sub_1A2AE30C4();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for SFUserDefaultsRepresentation();
  result = MEMORY[0x1E0C80A78](v4);
  if (*(_QWORD *)(v1 + 56))
  {
    sub_1A2A9BFC0(a1);
    v6 = (char *)&loc_1A2A9AAE8 + 4 * byte_1A2B0AFF0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void sub_1A2A9AD80(char a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;

  v2 = *(void **)(v1 + 56);
  if (v2)
  {
    if (a1 == 2)
    {
      v5 = v2;
      v3 = (id)sub_1A2AE340C();
      objc_msgSend(v5, sel_removeObjectForKey_, v3);
    }
    else
    {
      v4 = a1 & 1;
      v3 = v2;
      v5 = (id)sub_1A2AE340C();
      objc_msgSend(v3, sel_setBool_forKey_, v4);
    }

  }
}

uint64_t sub_1A2A9AE44@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unsigned __int8 v6;
  uint64_t v7;

  v4 = v1[5];
  v3 = v1[6];
  swift_bridgeObjectRetain();
  sub_1A2A998C8();
  sub_1A2AE3BF8();
  swift_bridgeObjectRelease();
  sub_1A2AE3244();
  swift_bridgeObjectRelease();
  v5 = sub_1A2A99314();
  v6 = sub_1A2A993EC();
  v7 = v1[16];
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_BYTE *)(a1 + 32) = 1;
  *(_BYTE *)(a1 + 33) = v5 & 1;
  *(_BYTE *)(a1 + 34) = v6 & 1;
  *(_WORD *)(a1 + 35) = 0;
  *(_QWORD *)(a1 + 40) = v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A2A9AF38@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  BOOL v7;
  char v8;
  unsigned __int8 v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  unint64_t v14;

  v4 = v1[5];
  v3 = v1[6];
  v13 = 0;
  v14 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1A2A99BB8(&v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EFF0);
  sub_1A2AE3BF8();
  v5 = v13;
  v6 = v14;
  sub_1A2AE3244();
  v7 = v13 != 7;
  v8 = sub_1A2A99314();
  v9 = sub_1A2A993EC();
  v10 = v1[14];
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 33) = v8 & 1;
  *(_BYTE *)(a1 + 34) = v9 & 1;
  *(_WORD *)(a1 + 35) = 0;
  *(_QWORD *)(a1 + 40) = v10;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A2A9B024@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unsigned __int8 v6;
  uint64_t v7;
  __int128 v9;

  v4 = v1[5];
  v3 = v1[6];
  BYTE8(v9) = 0;
  swift_bridgeObjectRetain();
  *(_QWORD *)&v9 = (unint64_t)sub_1A2A99468() & 1;
  sub_1A2AE3BF8();
  sub_1A2AE3244();
  v5 = sub_1A2A99314();
  v6 = sub_1A2A993EC();
  v7 = v1[14];
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)((char *)&v9 + 1);
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_BYTE *)(a1 + 32) = BYTE1(v9) != 2;
  *(_BYTE *)(a1 + 33) = v5 & 1;
  *(_BYTE *)(a1 + 34) = v6 & 1;
  *(_WORD *)(a1 + 35) = 256;
  *(_QWORD *)(a1 + 40) = v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A2A9B110@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  BOOL v7;
  char v8;
  unsigned __int8 v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  unint64_t v14;

  v4 = v1[5];
  v3 = v1[6];
  v13 = 0;
  v14 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1A2A99EC0(&v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EFE8);
  sub_1A2AE3BF8();
  v5 = v13;
  v6 = v14;
  sub_1A2AE3244();
  v7 = v13 != 2;
  v8 = sub_1A2A99314();
  v9 = sub_1A2A993EC();
  v10 = v1[14];
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 33) = v8 & 1;
  *(_BYTE *)(a1 + 34) = v9 & 1;
  *(_WORD *)(a1 + 35) = 0;
  *(_QWORD *)(a1 + 40) = v10;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A2A9B204@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v9;

  v4 = v1[5];
  v3 = v1[6];
  swift_bridgeObjectRetain();
  v9 = sub_1A2A9A2DC();
  sub_1A2AE3BF8();
  sub_1A2AE3244();
  v5 = sub_1A2A99314();
  v6 = sub_1A2A993EC();
  v7 = v1[14];
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = HIDWORD(v9);
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_BYTE *)(a1 + 32) = 1;
  *(_BYTE *)(a1 + 33) = v5 & 1;
  *(_BYTE *)(a1 + 34) = v6 & 1;
  *(_WORD *)(a1 + 35) = 0;
  *(_QWORD *)(a1 + 40) = v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A2A9B2E8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unsigned __int8 v6;
  uint64_t v7;
  __int128 v9;

  v4 = v1[5];
  v3 = v1[6];
  BYTE8(v9) = 0;
  swift_bridgeObjectRetain();
  *(_QWORD *)&v9 = sub_1A2A9A6E0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EFE0);
  sub_1A2AE3BF8();
  sub_1A2AE3244();
  v5 = sub_1A2A99314();
  v6 = sub_1A2A993EC();
  v7 = v1[14];
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)((char *)&v9 + 1);
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_BYTE *)(a1 + 32) = BYTE1(v9) != 3;
  *(_BYTE *)(a1 + 33) = v5 & 1;
  *(_BYTE *)(a1 + 34) = v6 & 1;
  *(_WORD *)(a1 + 35) = 0;
  *(_QWORD *)(a1 + 40) = v7;
  return swift_bridgeObjectRetain();
}

void sub_1A2A9B3D4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  void *v8;
  id v9;
  void *v10;
  void *v11;

  swift_bridgeObjectRetain();
  sub_1A2AE3B20();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  v8 = *(void **)(a3 + 56);
  if (v8)
  {
    swift_bridgeObjectRetain();
    v9 = v8;
    v10 = (void *)sub_1A2AE340C();
    v11 = (void *)sub_1A2AE340C();
    objc_msgSend(v9, sel_setObject_forKey_, v10, v11, 0, 0xE000000000000000);
    swift_bridgeObjectRelease();

  }
  a4[3] = MEMORY[0x1E0DEA968];
  *a4 = a1;
  a4[1] = a2;
}

uint64_t sub_1A2A9B534@<X0>(uint64_t a1@<X8>)
{
  char v2;
  uint64_t result;
  _QWORD v4[2];

  swift_bridgeObjectRetain();
  SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType.init(rawValue:)((char *)v4);
  v2 = v4[0];
  v4[0] = 0;
  v4[1] = 0xE000000000000000;
  sub_1A2AE3B20();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  sub_1A2A9A9D8(v2);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EFF0);
  *(_QWORD *)(a1 + 24) = result;
  *(_BYTE *)a1 = v2;
  return result;
}

void sub_1A2A9B664(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  char v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;

  swift_bridgeObjectRetain();
  v4 = _sSb7SharingE18userDefaultsStringSbSgSS_tcfC_0();
  sub_1A2AE3B20();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  if (v4 == 2)
  {
    sub_1A297AFB8();
    swift_allocError();
    *(_QWORD *)v5 = 0;
    *(_QWORD *)(v5 + 8) = 0xE000000000000000;
    *(_QWORD *)(v5 + 16) = 0xD00000000000004CLL;
    *(_QWORD *)(v5 + 24) = 0x80000001A2B44880;
    *(_QWORD *)(v5 + 32) = 235;
    *(_OWORD *)(v5 + 40) = 0u;
    *(_OWORD *)(v5 + 56) = 0u;
    *(_QWORD *)(v5 + 72) = 0;
    *(_QWORD *)(v5 + 80) = 0x2000000000000000;
    *(_QWORD *)(v5 + 88) = 0;
    *(_QWORD *)(v5 + 96) = 0;
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
    v6 = *(void **)(a1 + 56);
    if (v6)
    {
      v7 = v6;
      v8 = (void *)sub_1A2AE340C();
      objc_msgSend(v7, sel_setBool_forKey_, v4 & 1, v8);

    }
    *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEAFA0];
    *(_BYTE *)a2 = v4 & 1;
  }
}

uint64_t sub_1A2A9B844@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  char v4;
  uint64_t v5;
  uint64_t result;
  void *v7;
  id v8;
  void *v9;

  swift_bridgeObjectRetain();
  v4 = _sSb7SharingE18userDefaultsStringSbSgSS_tcfC_0();
  sub_1A2AE3B20();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  if (v4 == 2)
  {
    sub_1A297AFB8();
    swift_allocError();
    *(_QWORD *)v5 = 0;
    *(_QWORD *)(v5 + 8) = 0xE000000000000000;
    *(_QWORD *)(v5 + 16) = 0xD00000000000004CLL;
    *(_QWORD *)(v5 + 24) = 0x80000001A2B44880;
    *(_QWORD *)(v5 + 32) = 235;
    *(_OWORD *)(v5 + 40) = 0u;
    *(_OWORD *)(v5 + 56) = 0u;
    *(_QWORD *)(v5 + 72) = 0;
    *(_QWORD *)(v5 + 80) = 0x2000000000000000;
    *(_QWORD *)(v5 + 88) = 0;
    *(_QWORD *)(v5 + 96) = 0;
    return swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = *(void **)(a1 + 56);
    if (v7)
    {
      v8 = v7;
      v9 = (void *)sub_1A2AE340C();
      objc_msgSend(v8, sel_setBool_forKey_, v4 & 1, v9);

    }
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EFE8);
    *(_QWORD *)(a2 + 24) = result;
    *(_BYTE *)a2 = v4 & 1;
  }
  return result;
}

void sub_1A2A9BA30(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;

  swift_bridgeObjectRetain();
  v8 = sub_1A296EB50(a1, a2);
  sub_1A2AE3B20();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  if ((v8 & 0x100000000) != 0)
  {
    sub_1A297AFB8();
    swift_allocError();
    *(_QWORD *)v13 = 0;
    *(_QWORD *)(v13 + 8) = 0xE000000000000000;
    *(_QWORD *)(v13 + 16) = 0xD00000000000004CLL;
    *(_QWORD *)(v13 + 24) = 0x80000001A2B44880;
    *(_QWORD *)(v13 + 32) = 235;
    *(_OWORD *)(v13 + 40) = 0u;
    *(_OWORD *)(v13 + 56) = 0u;
    *(_QWORD *)(v13 + 72) = 0;
    *(_QWORD *)(v13 + 80) = 0x2000000000000000;
    *(_QWORD *)(v13 + 88) = 0;
    *(_QWORD *)(v13 + 96) = 0;
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
    v9 = *(void **)(a3 + 56);
    if (v9)
    {
      v10 = v9;
      v11 = (void *)sub_1A2AE4090();
      v12 = (void *)sub_1A2AE340C();
      objc_msgSend(v10, sel_setObject_forKey_, v11, v12);

    }
    *(_QWORD *)(a4 + 24) = MEMORY[0x1E0DEE0F8];
    *(_DWORD *)a4 = v8;
  }
}

uint64_t sub_1A2A9BC08@<X0>(uint64_t a1@<X8>)
{
  char v2;
  uint64_t result;

  swift_bridgeObjectRetain();
  v2 = _sSb7SharingE18userDefaultsStringSbSgSS_tcfC_0();
  sub_1A2AE3B20();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  sub_1A2A9AD80(v2);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EFE0);
  *(_QWORD *)(a1 + 24) = result;
  *(_BYTE *)a1 = v2;
  return result;
}

uint64_t sub_1A2A9BD38(uint64_t a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  _OWORD v8[2];
  __int128 v9;
  __int128 v10;

  v1 = *(void **)(a1 + 56);
  if (v1)
  {
    v2 = v1;
    v3 = (void *)sub_1A2AE340C();
    v4 = objc_msgSend(v2, sel_objectForKey_, v3);

    if (v4)
    {
      sub_1A2AE3A90();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v8, 0, sizeof(v8));
    }
    sub_1A296E450((uint64_t)v8, (uint64_t)&v9);
    if (*((_QWORD *)&v10 + 1))
    {
      sub_1A296F108((uint64_t)&v9, &qword_1ECEFB8A0);
      v5 = v2;
      v6 = (void *)sub_1A2AE340C();
      objc_msgSend(v5, sel_removeObjectForKey_, v6);

      return 1;
    }
  }
  else
  {
    v9 = 0u;
    v10 = 0u;
  }
  sub_1A296F108((uint64_t)&v9, &qword_1ECEFB8A0);
  return 0;
}

uint64_t sub_1A2A9BE58(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  _QWORD v7[9];

  v7[2] = a1[16];
  v7[3] = sub_1A2AA2328;
  v2 = a1[5];
  v3 = a1[6];
  v7[4] = a1;
  v7[5] = sub_1A2AA2294;
  v7[0] = v2;
  v7[1] = v3;
  v7[6] = a1;
  v7[7] = sub_1A2AA2340;
  v4 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 24) + 16);
  v7[8] = a1;
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_unfair_lock_lock(v4);
  sub_1A29686D4(v5, v1, (uint64_t)v7);
  os_unfair_lock_unlock(v4);
  swift_release_n();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A2A9BF18(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  _QWORD v10[9];

  v5 = a1[6];
  v6 = a1[14];
  v10[0] = a1[5];
  v10[1] = v5;
  v10[2] = v6;
  v10[3] = a2;
  v10[4] = a1;
  v10[5] = a3;
  v10[6] = a1;
  v10[7] = a4;
  v7 = (os_unfair_lock_s *)(*(_QWORD *)(v4 + 24) + 16);
  v10[8] = a1;
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_unfair_lock_lock(v7);
  sub_1A29686D4(v8, v4, (uint64_t)v10);
  os_unfair_lock_unlock(v7);
  swift_release_n();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1A2A9BFC0(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1A2A9C000@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = 0x636972656E6567;
  v1[1] = a1;
  type metadata accessor for SFUserDefaultsRepresentation();
  return swift_storeEnumTagMultiPayload();
}

void sub_1A2A9C08C()
{
  type metadata accessor for SFUserDefaultsRepresentation();
  JUMPOUT(0x1A2A9C080);
}

uint64_t sub_1A2A9C0A4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_1A2AE3EE0();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1A2AE3EE0() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A2A9C168(uint64_t a1)
{
  int64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    sub_1A29BE308(0, v2, 0);
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_1A2A9C32C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  void (*v5)(uint64_t *__return_ptr, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v38 = MEMORY[0x1E0DEE9D8];
    sub_1A29BE3E0(0, v1, 0);
    v2 = v38;
    v4 = a1 + 96;
    do
    {
      v5 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v4 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      v6 = swift_retain();
      v5(&v28, v6);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = v28;
      v8 = v29;
      v10 = v30;
      v9 = v31;
      v11 = v32;
      v12 = v33;
      v13 = v34;
      v14 = v35;
      v16 = *(_QWORD *)(v2 + 16);
      v15 = *(_QWORD *)(v2 + 24);
      v17 = v36;
      v18 = v37;
      v38 = v2;
      if (v16 >= v15 >> 1)
      {
        v20 = v28;
        v26 = v31;
        v27 = v29;
        v24 = v33;
        v25 = v32;
        v22 = v35;
        v23 = v34;
        sub_1A29BE3E0(v15 > 1, v16 + 1, 1);
        v14 = v22;
        v13 = v23;
        v12 = v24;
        v11 = v25;
        v9 = v26;
        v8 = v27;
        v7 = v20;
        v2 = v38;
      }
      *(_QWORD *)(v2 + 16) = v16 + 1;
      v19 = v2 + 48 * v16;
      *(_QWORD *)(v19 + 32) = v7;
      *(_QWORD *)(v19 + 40) = v8;
      *(_QWORD *)(v19 + 48) = v10;
      *(_QWORD *)(v19 + 56) = v9;
      *(_BYTE *)(v19 + 64) = v11;
      *(_BYTE *)(v19 + 65) = v12;
      *(_BYTE *)(v19 + 66) = v13;
      *(_BYTE *)(v19 + 67) = v14;
      *(_BYTE *)(v19 + 68) = v17;
      *(_QWORD *)(v19 + 72) = v18;
      v4 += 72;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1A2A9C4C4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1A29BE308(0, v1, 0);
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1)
        sub_1A29BE308(v7 > 1, v8 + 1, 1);
      v4 += 6;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1A2A9C598(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1A29BE308(0, v1, 0);
    v2 = v12;
    v4 = a1 + 72;
    do
    {
      v5 = SFUserDefaultDescription.description.getter();
      v7 = v6;
      v9 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      if (v9 >= v8 >> 1)
        sub_1A29BE308(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = v12 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v5;
      *(_QWORD *)(v10 + 40) = v7;
      v4 += 48;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t static NSUserDefaults.airdrop.getter()
{
  uint64_t v1;

  if (qword_1EE676418 != -1)
    swift_once();
  sub_1A2AE4120();
  return v1;
}

uint64_t SFAirDropUserDefaults.systemLevelProgressEnabled.getter()
{
  return sub_1A2A9C988();
}

uint64_t static SFAirDropUserDefaults.shared.getter()
{
  uint64_t v1;

  if (qword_1EE676418 != -1)
    swift_once();
  sub_1A2AE4120();
  return v1;
}

uint64_t SFAirDropUserDefaults.privateContactDiscoveryEnabled.getter()
{
  return sub_1A2A9C988();
}

uint64_t SFAirDropUserDefaults.walkAwayEnabled.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.walkAwayEnabled.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__walkAwayEnabled);
}

unint64_t AirDropFeatureFlag.wrappedValue.getter()
{
  return (unint64_t)sub_1A2A99468() & 1;
}

void AirDropFeatureFlag.wrappedValue.setter(char a1)
{
  uint64_t v1;
  void *v2;
  id v4;
  id v5;

  v2 = *(void **)(*(_QWORD *)(v1 + 16) + 56);
  if (v2)
  {
    v4 = v2;
    v5 = (id)sub_1A2AE340C();
    objc_msgSend(v4, sel_setBool_forKey_, a1 & 1, v5);

  }
}

uint64_t (*SFAirDropUserDefaults.walkAwayEnabled.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__walkAwayEnabled);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$walkAwayEnabled.getter()
{
  return swift_retain();
}

uint64_t AirDropFeatureFlag.projectedValue.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.moveToAppEnabled.getter()
{
  return sub_1A2A9C988();
}

uint64_t sub_1A2A9C988()
{
  unsigned __int8 v0;
  void *v1;
  uint64_t inited;
  id v3;
  uint64_t v4;
  unsigned __int8 v5;

  swift_retain();
  v0 = sub_1A2A99468();
  swift_release();
  if ((v0 & 1) != 0)
  {
    if (SFDeviceClassCodeGet() == 3)
    {
      if (qword_1EE676280 != -1)
        swift_once();
      v1 = (void *)qword_1EE676278;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE676108);
      inited = swift_initStackObject();
      *(_QWORD *)(inited + 16) = "FlyingScotsman";
      *(_QWORD *)(inited + 24) = 14;
      *(_BYTE *)(inited + 32) = 2;
      *(_QWORD *)(inited + 56) = v1;
      *(_QWORD *)(inited + 64) = "SpringBoard";
      *(_QWORD *)(inited + 72) = 11;
      *(_WORD *)(inited + 80) = 2;
      *(_BYTE *)(inited + 82) = 0;
      *(_QWORD *)(inited + 96) = 0;
      *(_QWORD *)(inited + 104) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE676058);
      swift_allocObject();
      v3 = v1;
      *(_QWORD *)(inited + 88) = sub_1A2AE3274();
      *(_QWORD *)(inited + 112) = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)(inited + 40) = sub_1A2AE34A8();
      *(_QWORD *)(inited + 48) = v4;
      v5 = sub_1A2A99468();
      swift_release();

      swift_bridgeObjectRelease();
    }
    else
    {
      v5 = 1;
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t SFAirDropUserDefaults.askToAirDropEnabled.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.askToAirDropEnabled.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__askToAirDropEnabled);
}

uint64_t (*SFAirDropUserDefaults.askToAirDropEnabled.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__askToAirDropEnabled);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$askToAirDropEnabled.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.objcAskToAirDropEnabled.getter()
{
  return sub_1A2A9E2B0();
}

uint64_t SFAirDropUserDefaults.contactShareAfterAirDropEnabled.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.contactShareAfterAirDropEnabled.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__contactShareAfterAirDropEnabled);
}

uint64_t (*SFAirDropUserDefaults.contactShareAfterAirDropEnabled.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__contactShareAfterAirDropEnabled);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$contactShareAfterAirDropEnabled.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.boopToActionEnabled.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.boopToActionEnabled.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__boopToActionEnabled);
}

uint64_t (*SFAirDropUserDefaults.boopToActionEnabled.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__boopToActionEnabled);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$boopToActionEnabled.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.boopToAirDropEnabled.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.boopToAirDropEnabled.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__boopToAirDropEnabled);
}

uint64_t (*SFAirDropUserDefaults.boopToAirDropEnabled.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__boopToAirDropEnabled);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$boopToAirDropEnabled.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.boopToCollaborateEnabled.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.boopToCollaborateEnabled.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__boopToCollaborateEnabled);
}

uint64_t (*SFAirDropUserDefaults.boopToCollaborateEnabled.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__boopToCollaborateEnabled);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$boopToCollaborateEnabled.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.shockwaveEffectEnabled.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.shockwaveEffectEnabled.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__shockwaveEffectEnabled);
}

uint64_t (*SFAirDropUserDefaults.shockwaveEffectEnabled.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__shockwaveEffectEnabled);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$shockwaveEffectEnabled.getter()
{
  return swift_retain();
}

_QWORD *AirDropUserDefault.__allocating_init(wrappedValue:_:kill:)(uint64_t a1, unint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v12;

  v6 = v5;
  swift_allocObject();
  v12 = sub_1A2AA113C(a1, a2, a3, a4, a5);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v6 + 80) - 8) + 8))(a1);
  return v12;
}

uint64_t SFAirDropUserDefaults.shockwaveEffectVariant.getter()
{
  uint64_t v0;

  swift_retain();
  v0 = sub_1A2A998C8();
  swift_release();
  return v0;
}

uint64_t sub_1A2A9CEF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  swift_retain();
  v2 = sub_1A2A998C8();
  v4 = v3;
  result = swift_release();
  *a1 = v2;
  a1[1] = v4;
  return result;
}

void SFAirDropUserDefaults.shockwaveEffectVariant.setter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(void **)(*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR___SFAirDropUserDefaults__shockwaveEffectVariant) + 16) + 56);
  if (v1)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v4 = v1;
    v2 = (void *)sub_1A2AE340C();
    v3 = (void *)sub_1A2AE340C();
    objc_msgSend(v4, sel_setObject_forKey_, v2, v3);
    swift_release();
    swift_bridgeObjectRelease_n();

  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t AirDropUserDefault.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  return SFUserDefault.value.getter(a1);
}

void sub_1A2A9D044(char a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;

  v2 = *(void **)(*(_QWORD *)(v1 + 16) + 56);
  if (v2)
  {
    if (a1 == 2)
    {
      v5 = v2;
      v3 = (id)sub_1A2AE340C();
      objc_msgSend(v5, sel_removeObjectForKey_, v3);
    }
    else
    {
      v4 = a1 & 1;
      v3 = v2;
      v5 = (id)sub_1A2AE340C();
      objc_msgSend(v3, sel_setBool_forKey_, v4);
    }

  }
}

uint64_t AirDropUserDefault.wrappedValue.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  sub_1A2AA1318(a1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
}

uint64_t (*SFAirDropUserDefaults.shockwaveEffectVariant.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__shockwaveEffectVariant);
  swift_retain();
  *a1 = sub_1A2A998C8();
  a1[1] = v3;
  return sub_1A2A9D190;
}

uint64_t sub_1A2A9D190(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;

  v2 = *(_QWORD *)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    v3 = *(void **)(*(_QWORD *)(v2 + 16) + 56);
    if (v3)
    {
      swift_bridgeObjectRetain_n();
      v4 = v3;
      v5 = (void *)sub_1A2AE340C();
      v6 = (void *)sub_1A2AE340C();
      objc_msgSend(v4, sel_setObject_forKey_, v5, v6);

      swift_bridgeObjectRelease_n();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *(void **)(*(_QWORD *)(v2 + 16) + 56);
    if (v7)
    {
      swift_bridgeObjectRetain();
      v8 = v7;
      v9 = (void *)sub_1A2AE340C();
      v10 = (void *)sub_1A2AE340C();
      objc_msgSend(v8, sel_setObject_forKey_, v9, v10);

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

uint64_t SFAirDropUserDefaults.$shockwaveEffectVariant.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.boopInteractionTypeOverride.getter@<X0>(_BYTE *a1@<X8>)
{
  swift_retain();
  sub_1A2A99BB8(a1);
  return swift_release();
}

uint64_t sub_1A2A9D338@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_retain();
  sub_1A2A99BB8(&v3);
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1A2A9D398(char *a1)
{
  char v1;

  v1 = *a1;
  swift_retain();
  sub_1A2A9A9D8(v1);
  return swift_release();
}

uint64_t SFAirDropUserDefaults.boopInteractionTypeOverride.setter(char *a1)
{
  char v1;

  v1 = *a1;
  swift_retain();
  sub_1A2A9A9D8(v1);
  return swift_release();
}

uint64_t (*SFAirDropUserDefaults.boopInteractionTypeOverride.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v2;

  *a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__boopInteractionTypeOverride);
  v2 = a1 + 1;
  swift_retain();
  sub_1A2A99BB8(v2);
  return sub_1A2A9D474;
}

uint64_t sub_1A2A9D474(uint64_t a1)
{
  sub_1A2A9A9D8(*(_BYTE *)(a1 + 8));
  return swift_release();
}

uint64_t SFAirDropUserDefaults.$boopInteractionTypeOverride.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.shockwaveHapticsPlayerStartsEarly.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.shockwaveHapticsPlayerStartsEarly.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__shockwaveHapticsPlayerStartsEarly);
}

uint64_t (*SFAirDropUserDefaults.shockwaveHapticsPlayerStartsEarly.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__shockwaveHapticsPlayerStartsEarly);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$shockwaveHapticsPlayerStartsEarly.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.nearFieldControllerEnabled.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.nearFieldControllerEnabled.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__nearFieldControllerEnabled);
}

uint64_t (*SFAirDropUserDefaults.nearFieldControllerEnabled.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__nearFieldControllerEnabled);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$nearFieldControllerEnabled.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.finalALPN.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.finalALPN.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__finalALPN);
}

uint64_t (*SFAirDropUserDefaults.finalALPN.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__finalALPN);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$finalALPN.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.helloFeatureFlagsEnabled.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.helloFeatureFlagsEnabled.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__helloFeatureFlagsEnabled);
}

uint64_t (*SFAirDropUserDefaults.helloFeatureFlagsEnabled.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__helloFeatureFlagsEnabled);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$helloFeatureFlagsEnabled.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.browseAllInterfaces.getter@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9D714(a1);
}

void SFAirDropUserDefaults.browseAllInterfaces.setter(unsigned __int8 *a1)
{
  sub_1A2A9D7C0(a1, &OBJC_IVAR___SFAirDropUserDefaults__browseAllInterfaces);
}

uint64_t (*SFAirDropUserDefaults.browseAllInterfaces.modify(_QWORD *a1))()
{
  uint64_t v1;
  _BYTE *v2;

  *a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__browseAllInterfaces);
  v2 = a1 + 1;
  swift_retain();
  sub_1A2A99EC0(v2);
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$browseAllInterfaces.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.registerAllInterfaces.getter@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9D714(a1);
}

uint64_t sub_1A2A9D714@<X0>(_BYTE *a1@<X8>)
{
  swift_retain();
  sub_1A2A99EC0(a1);
  return swift_release();
}

uint64_t sub_1A2A9D758@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_retain();
  sub_1A2A99EC0(&v3);
  result = swift_release();
  *a1 = v3;
  return result;
}

void SFAirDropUserDefaults.registerAllInterfaces.setter(unsigned __int8 *a1)
{
  sub_1A2A9D7C0(a1, &OBJC_IVAR___SFAirDropUserDefaults__registerAllInterfaces);
}

void sub_1A2A9D7C0(unsigned __int8 *a1, _QWORD *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;

  v3 = *(void **)(*(_QWORD *)(*(_QWORD *)(v2 + *a2) + 16) + 56);
  if (v3)
  {
    v4 = *a1;
    swift_retain();
    v5 = v3;
    v6 = (id)sub_1A2AE340C();
    objc_msgSend(v5, sel_setBool_forKey_, v4, v6);
    swift_release();

  }
}

uint64_t (*SFAirDropUserDefaults.registerAllInterfaces.modify(_QWORD *a1))()
{
  uint64_t v1;
  _BYTE *v2;

  *a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__registerAllInterfaces);
  v2 = a1 + 1;
  swift_retain();
  sub_1A2A99EC0(v2);
  return sub_1A2A9C928;
}

uint64_t sub_1A2A9D8B4(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;

  v2 = *a1;
  v1 = (unsigned __int8 *)(a1 + 1);
  v3 = *(void **)(*(_QWORD *)(v2 + 16) + 56);
  if (v3)
  {
    v4 = *v1;
    v5 = v3;
    v6 = (void *)sub_1A2AE340C();
    objc_msgSend(v5, sel_setBool_forKey_, v4, v6);

  }
  return swift_release();
}

uint64_t SFAirDropUserDefaults.$registerAllInterfaces.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.enabledDemoMode.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.enabledDemoMode.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__enabledDemoMode);
}

uint64_t (*SFAirDropUserDefaults.enabledDemoMode.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__enabledDemoMode);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$enabledDemoMode.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.disableAirDrop.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.disableAirDrop.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__disableAirDrop);
}

uint64_t (*SFAirDropUserDefaults.disableAirDrop.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__disableAirDrop);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$disableAirDrop.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.disableTLS.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.disableTLS.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__disableTLS);
}

uint64_t (*SFAirDropUserDefaults.disableTLS.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__disableTLS);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$disableTLS.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.disableAirDropBLEAdvertising.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.disableAirDropBLEAdvertising.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__disableAirDropBLEAdvertising);
}

uint64_t (*SFAirDropUserDefaults.disableAirDropBLEAdvertising.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__disableAirDropBLEAdvertising);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$disableAirDropBLEAdvertising.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.disableAutoAccept.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.disableAutoAccept.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__disableAutoAccept);
}

uint64_t (*SFAirDropUserDefaults.disableAutoAccept.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__disableAutoAccept);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$disableAutoAccept.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.disableExtractMediaFromBundles.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.disableExtractMediaFromBundles.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__disableExtractMediaFromBundles);
}

uint64_t (*SFAirDropUserDefaults.disableExtractMediaFromBundles.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__disableExtractMediaFromBundles);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$disableExtractMediaFromBundles.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.disableTransformingPhotosAssetBundlesToFolders.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.disableTransformingPhotosAssetBundlesToFolders.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__disableTransformingPhotosAssetBundlesToFolders);
}

uint64_t (*SFAirDropUserDefaults.disableTransformingPhotosAssetBundlesToFolders.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__disableTransformingPhotosAssetBundlesToFolders);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$disableTransformingPhotosAssetBundlesToFolders.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.alwaysExchangeContacts.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.alwaysExchangeContacts.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__alwaysExchangeContacts);
}

uint64_t (*SFAirDropUserDefaults.alwaysExchangeContacts.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__alwaysExchangeContacts);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$alwaysExchangeContacts.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.a2aRangingAssumeClose.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.a2aRangingAssumeClose.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__a2aRangingAssumeClose);
}

uint64_t (*SFAirDropUserDefaults.a2aRangingAssumeClose.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__a2aRangingAssumeClose);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$a2aRangingAssumeClose.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.a2aRangingAssumeFar.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.a2aRangingAssumeFar.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__a2aRangingAssumeFar);
}

uint64_t (*SFAirDropUserDefaults.a2aRangingAssumeFar.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__a2aRangingAssumeFar);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$a2aRangingAssumeFar.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.quicIdleTimeout.getter()
{
  uint64_t v0;

  swift_retain();
  v0 = sub_1A2A9A2DC();
  swift_release();
  return v0;
}

uint64_t sub_1A2A9DE38@<X0>(_DWORD *a1@<X8>)
{
  int v2;
  uint64_t result;

  swift_retain();
  v2 = sub_1A2A9A2DC();
  result = swift_release();
  *a1 = v2;
  return result;
}

void SFAirDropUserDefaults.quicIdleTimeout.setter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(void **)(*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR___SFAirDropUserDefaults__quicIdleTimeout) + 16) + 56);
  if (v1)
  {
    swift_retain();
    v4 = v1;
    v2 = (void *)sub_1A2AE4090();
    v3 = (void *)sub_1A2AE340C();
    objc_msgSend(v4, sel_setObject_forKey_, v2, v3);
    swift_release();

  }
}

uint64_t (*SFAirDropUserDefaults.quicIdleTimeout.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__quicIdleTimeout);
  swift_retain();
  *(_DWORD *)(a1 + 8) = sub_1A2A9A2DC();
  return sub_1A2A9DF80;
}

uint64_t sub_1A2A9DF80(uint64_t a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;

  v1 = *(void **)(*(_QWORD *)(*(_QWORD *)a1 + 16) + 56);
  if (v1)
  {
    v2 = v1;
    v3 = (void *)sub_1A2AE4090();
    v4 = (void *)sub_1A2AE340C();
    objc_msgSend(v2, sel_setObject_forKey_, v3, v4);

  }
  return swift_release();
}

uint64_t SFAirDropUserDefaults.$quicIdleTimeout.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.verboseWalkAway.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.verboseWalkAway.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__verboseWalkAway);
}

uint64_t (*SFAirDropUserDefaults.verboseWalkAway.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__verboseWalkAway);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$verboseWalkAway.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.nearFieldSharingEnabled.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.nearFieldSharingEnabled.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__nearFieldSharingEnabled);
}

uint64_t (*SFAirDropUserDefaults.nearFieldSharingEnabled.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__nearFieldSharingEnabled);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$nearFieldSharingEnabled.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.objcNearFieldSharingEnabled.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.objcNearFieldSharingEnabled.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__nearFieldSharingEnabled);
}

uint64_t (*SFAirDropUserDefaults.objcNearFieldSharingEnabled.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  unsigned __int8 v4;

  v3 = OBJC_IVAR___SFAirDropUserDefaults__nearFieldSharingEnabled;
  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v3;
  swift_retain();
  v4 = sub_1A2A99468();
  swift_release();
  *(_BYTE *)(a1 + 16) = v4 & 1;
  return sub_1A2A9E1C8;
}

uint64_t SFAirDropUserDefaults.cellularUsageEnabled.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.cellularUsageEnabled.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__cellularUsageEnabled);
}

uint64_t (*SFAirDropUserDefaults.cellularUsageEnabled.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__cellularUsageEnabled);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$cellularUsageEnabled.getter()
{
  return swift_retain();
}

uint64_t sub_1A2A9E250(void *a1)
{
  id v1;
  unsigned __int8 v2;

  v1 = a1;
  swift_retain();
  v2 = sub_1A2A99468();

  swift_release();
  return v2 & 1;
}

uint64_t SFAirDropUserDefaults.objcCellularUsageEnabled.getter()
{
  return sub_1A2A9E2B0();
}

uint64_t sub_1A2A9E2B0()
{
  unsigned __int8 v0;

  swift_retain();
  v0 = sub_1A2A99468();
  swift_release();
  return v0 & 1;
}

void SFAirDropUserDefaults.objcCellularUsageEnabled.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__cellularUsageEnabled);
}

void sub_1A2A9E33C(char a1, _QWORD *a2)
{
  uint64_t v2;
  void *v3;
  id v5;
  id v6;

  v3 = *(void **)(*(_QWORD *)(*(_QWORD *)(v2 + *a2) + 16) + 56);
  if (v3)
  {
    swift_retain();
    v5 = v3;
    v6 = (id)sub_1A2AE340C();
    objc_msgSend(v5, sel_setBool_forKey_, a1 & 1, v6);
    swift_release();

  }
}

uint64_t sub_1A2A9E3E8@<X0>(_BYTE *a1@<X8>)
{
  unsigned __int8 v2;
  uint64_t result;

  swift_retain();
  v2 = sub_1A2A99468();
  result = swift_release();
  *a1 = v2 & 1;
  return result;
}

uint64_t (*SFAirDropUserDefaults.objcCellularUsageEnabled.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  unsigned __int8 v4;

  v3 = OBJC_IVAR___SFAirDropUserDefaults__cellularUsageEnabled;
  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v3;
  swift_retain();
  v4 = sub_1A2A99468();
  swift_release();
  *(_BYTE *)(a1 + 16) = v4 & 1;
  return sub_1A2A9E1C8;
}

uint64_t sub_1A2A9E4A0(uint64_t result)
{
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;

  v1 = *(void **)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)result + *(_QWORD *)(result + 8)) + 16) + 56);
  if (v1)
  {
    v2 = *(unsigned __int8 *)(result + 16);
    swift_retain();
    v3 = v1;
    v4 = (void *)sub_1A2AE340C();
    objc_msgSend(v3, sel_setBool_forKey_, v2, v4);

    return swift_release();
  }
  return result;
}

void sub_1A2A9E540()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v1 = (void *)sub_1A2AE340C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  qword_1EE676278 = (uint64_t)v2;
}

uint64_t SFAirDropUserDefaults.sensitivePreviewOverride.getter()
{
  return sub_1A2A9E630();
}

void SFAirDropUserDefaults.sensitivePreviewOverride.setter(char a1)
{
  sub_1A2A9E6CC(a1, &OBJC_IVAR___SFAirDropUserDefaults__sensitivePreviewOverride);
}

uint64_t (*SFAirDropUserDefaults.sensitivePreviewOverride.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__sensitivePreviewOverride);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A9A6E0();
  return sub_1A2A9E60C;
}

uint64_t SFAirDropUserDefaults.$sensitivePreviewOverride.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.sensitiveContentOverride.getter()
{
  return sub_1A2A9E630();
}

uint64_t sub_1A2A9E630()
{
  uint64_t v0;

  swift_retain();
  v0 = sub_1A2A9A6E0();
  swift_release();
  return v0;
}

uint64_t sub_1A2A9E670@<X0>(_BYTE *a1@<X8>)
{
  char v2;
  uint64_t result;

  swift_retain();
  v2 = sub_1A2A9A6E0();
  result = swift_release();
  *a1 = v2;
  return result;
}

void SFAirDropUserDefaults.sensitiveContentOverride.setter(char a1)
{
  sub_1A2A9E6CC(a1, &OBJC_IVAR___SFAirDropUserDefaults__sensitiveContentOverride);
}

void sub_1A2A9E6CC(char a1, _QWORD *a2)
{
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)(*(_QWORD *)(*(_QWORD *)(v2 + *a2) + 16) + 56);
  if (v3)
  {
    if (a1 == 2)
    {
      swift_retain();
      v6 = v3;
      v4 = (id)sub_1A2AE340C();
      objc_msgSend(v6, sel_removeObjectForKey_, v4);
    }
    else
    {
      v5 = a1 & 1;
      swift_retain();
      v4 = v3;
      v6 = (id)sub_1A2AE340C();
      objc_msgSend(v4, sel_setBool_forKey_, v5);
    }
    swift_release();

  }
}

uint64_t (*SFAirDropUserDefaults.sensitiveContentOverride.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__sensitiveContentOverride);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A9A6E0();
  return sub_1A2A9E60C;
}

uint64_t sub_1A2A9E808(uint64_t a1)
{
  sub_1A2A9D044(*(_BYTE *)(a1 + 8));
  return swift_release();
}

uint64_t SFAirDropUserDefaults.$sensitiveContentOverride.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.showTransferIdentifierUI.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.showTransferIdentifierUI.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__showTransferIdentifierUI);
}

uint64_t (*SFAirDropUserDefaults.showTransferIdentifierUI.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__showTransferIdentifierUI);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$showTransferIdentifierUI.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.alwaysAutoAccept.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.alwaysAutoAccept.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__alwaysAutoAccept);
}

uint64_t (*SFAirDropUserDefaults.alwaysAutoAccept.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__alwaysAutoAccept);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$alwaysAutoAccept.getter()
{
  return swift_retain();
}

uint64_t SFAirDropUserDefaults.overrideReceivedFilesPathiOS.getter()
{
  return sub_1A2A9E2B0();
}

void SFAirDropUserDefaults.overrideReceivedFilesPathiOS.setter(char a1)
{
  sub_1A2A9E33C(a1, &OBJC_IVAR___SFAirDropUserDefaults__overrideReceivedFilesPathiOS);
}

uint64_t (*SFAirDropUserDefaults.overrideReceivedFilesPathiOS.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SFAirDropUserDefaults__overrideReceivedFilesPathiOS);
  swift_retain();
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2A9C928;
}

uint64_t SFAirDropUserDefaults.$overrideReceivedFilesPathiOS.getter()
{
  return swift_retain();
}

uint64_t sub_1A2A9E9AC()
{
  uint64_t result;

  objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropUserDefaults()), sel_init);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE6763F8);
  swift_allocObject();
  result = sub_1A2AE4114();
  qword_1EE676420 = result;
  return result;
}

id SFAirDropUserDefaults.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SFAirDropUserDefaults.init()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  objc_class *ObjectType;
  objc_super v66;
  uint64_t v67;
  uint64_t v68;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v2 = OBJC_IVAR___SFAirDropUserDefaults__airDropPrivateContactDiscoveryEnabled;
  type metadata accessor for AirDropFeatureFlag();
  v3 = swift_allocObject();
  v4 = v1;
  AirDropFeatureFlag.init(_:kill:)((unint64_t)"AirDropPrivateContactDiscovery", 30, 2, (uint64_t)&unk_1E4823158);
  *(_QWORD *)&v1[v2] = v3;
  v5 = OBJC_IVAR___SFAirDropUserDefaults__walkAwayEnabled;
  v6 = swift_allocObject();
  AirDropFeatureFlag.init(_:kill:)((unint64_t)"AirDropWalkAway", 15, 2, (uint64_t)&unk_1E4822DE8);
  *(_QWORD *)&v4[v5] = v6;
  v7 = OBJC_IVAR___SFAirDropUserDefaults__airDropSystemLevelProgressEnabled;
  v8 = swift_allocObject();
  AirDropFeatureFlag.init(_:kill:)((unint64_t)"AirDropSystemLevelProgress", 26, 2, (uint64_t)&unk_1E4822FA0);
  *(_QWORD *)&v4[v7] = v8;
  v9 = OBJC_IVAR___SFAirDropUserDefaults__airDropMoveToAppEnabled;
  v10 = swift_allocObject();
  AirDropFeatureFlag.init(_:kill:)((unint64_t)"AirDropMoveToApp", 16, 2, (uint64_t)&unk_1E4823018);
  *(_QWORD *)&v4[v9] = v10;
  v11 = OBJC_IVAR___SFAirDropUserDefaults__askToAirDropEnabled;
  v12 = swift_allocObject();
  AirDropFeatureFlag.init(_:kill:)((unint64_t)"AskToAirDrop", 12, 2, (uint64_t)&unk_1E4823040);
  *(_QWORD *)&v4[v11] = v12;
  v13 = OBJC_IVAR___SFAirDropUserDefaults__contactShareAfterAirDropEnabled;
  v14 = swift_allocObject();
  AirDropFeatureFlag.init(_:kill:)((unint64_t)"AirDropContactShare", 19, 2, (uint64_t)&unk_1E4823068);
  *(_QWORD *)&v4[v13] = v14;
  v15 = OBJC_IVAR___SFAirDropUserDefaults__boopToActionEnabled;
  v16 = swift_allocObject();
  AirDropFeatureFlag.init(_:kill:)((unint64_t)"BoopToAction", 12, 2, (uint64_t)&unk_1E4823090);
  *(_QWORD *)&v4[v15] = v16;
  v17 = OBJC_IVAR___SFAirDropUserDefaults__boopToAirDropEnabled;
  v18 = swift_allocObject();
  AirDropFeatureFlag.init(_:kill:)((unint64_t)"BoopToAirDrop", 13, 2, (uint64_t)&unk_1E48230B8);
  *(_QWORD *)&v4[v17] = v18;
  v19 = OBJC_IVAR___SFAirDropUserDefaults__boopToCollaborateEnabled;
  v20 = swift_allocObject();
  AirDropFeatureFlag.init(_:kill:)((unint64_t)"BoopToCollaborate", 17, 2, (uint64_t)&unk_1E48230E0);
  *(_QWORD *)&v4[v19] = v20;
  v21 = OBJC_IVAR___SFAirDropUserDefaults__shockwaveEffectEnabled;
  v22 = swift_allocObject();
  AirDropFeatureFlag.init(_:kill:)((unint64_t)"BoopShockwave", 13, 2, (uint64_t)&unk_1E4823108);
  *(_QWORD *)&v4[v21] = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE676258);
  v23 = swift_allocObject();
  if (qword_1EE676280 != -1)
    swift_once();
  v24 = (void *)qword_1EE676278;
  v25 = sub_1A2A9C168((uint64_t)&unk_1E4823130);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE676100);
  v26 = swift_allocObject();
  v27 = OBJC_IVAR___SFAirDropUserDefaults__shockwaveEffectVariant;
  *(_QWORD *)(v26 + 16) = "BoopShockwaveVariant";
  *(_QWORD *)(v26 + 24) = 20;
  *(_BYTE *)(v26 + 32) = 2;
  *(_QWORD *)(v26 + 64) = 0;
  *(_QWORD *)(v26 + 72) = 0;
  *(_QWORD *)(v26 + 56) = v24;
  *(_WORD *)(v26 + 80) = 256;
  *(_QWORD *)(v26 + 88) = 0xD000000000000016;
  *(_QWORD *)(v26 + 96) = 0x80000001A2B48190;
  *(_QWORD *)(v26 + 112) = 0xD00000000000001ELL;
  *(_QWORD *)(v26 + 120) = 0x80000001A2B481D0;
  v67 = 0;
  v68 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE676048);
  swift_allocObject();
  v28 = v24;
  *(_QWORD *)(v26 + 104) = sub_1A2AE3274();
  *(_QWORD *)(v26 + 128) = v25;
  *(_QWORD *)(v26 + 40) = sub_1A2AE34A8();
  *(_QWORD *)(v26 + 48) = v29;

  *(_QWORD *)(v23 + 16) = v26;
  v30 = qword_1EE676430;
  swift_retain();
  if (v30 != -1)
    swift_once();
  sub_1A2AE4120();
  sub_1A2A9BE58((_QWORD *)v26);
  swift_release();
  swift_release();
  *(_QWORD *)&v4[v27] = v23;
  v31 = OBJC_IVAR___SFAirDropUserDefaults__boopInteractionTypeOverride;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE676248);
  swift_allocObject();
  *(_QWORD *)&v4[v31] = sub_1A2A9FC70(6, (unint64_t)"BoopInteractionTypeOverride", 27, 2, (uint64_t)&unk_1E4822E10);
  v32 = OBJC_IVAR___SFAirDropUserDefaults__shockwaveHapticsPlayerStartsEarly;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE676260);
  swift_allocObject();
  *(_QWORD *)&v4[v32] = sub_1A2A9FE14(1, (unint64_t)"ShockwaveHapticsPlayerStartsEarly", 33, 2, (uint64_t)&unk_1E4822E38);
  v33 = OBJC_IVAR___SFAirDropUserDefaults__nearFieldControllerEnabled;
  v34 = swift_allocObject();
  AirDropFeatureFlag.init(_:kill:)((unint64_t)"NearFieldController", 19, 2, (uint64_t)&unk_1E4822E60);
  *(_QWORD *)&v4[v33] = v34;
  v35 = OBJC_IVAR___SFAirDropUserDefaults__finalALPN;
  v36 = swift_allocObject();
  AirDropFeatureFlag.init(_:kill:)((unint64_t)"AirDropFinalALPN", 16, 2, (uint64_t)&unk_1E4822E88);
  *(_QWORD *)&v4[v35] = v36;
  v37 = OBJC_IVAR___SFAirDropUserDefaults__helloFeatureFlagsEnabled;
  v38 = swift_allocObject();
  AirDropFeatureFlag.init(_:kill:)((unint64_t)"AirDropFeatureFlags", 19, 2, (uint64_t)&unk_1E4822EB0);
  *(_QWORD *)&v4[v37] = v38;
  SFIsRunningUnitTests();
  SFIsRunningUnitTests();
  SFIsRunningUnitTests();
  SFIsRunningUnitTests();
  if (SFIsRunningUnitTests())
  {
    SFIsRunningUnitTests();
  }
  else
  {
    if (SFDeviceIsVirtualMachine())
    {
      v39 = 1;
      goto LABEL_11;
    }
    IsAppleInternalBuild();
  }
  v39 = 0;
LABEL_11:
  v40 = OBJC_IVAR___SFAirDropUserDefaults__browseAllInterfaces;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE676250);
  swift_allocObject();
  *(_QWORD *)&v4[v40] = sub_1A2A9FFB8(v39, (unint64_t)"BrowseAllInterfaces", 19, 2, MEMORY[0x1E0DEE9D8]);
  SFIsRunningUnitTests();
  SFIsRunningUnitTests();
  SFIsRunningUnitTests();
  SFIsRunningUnitTests();
  if ((SFIsRunningUnitTests() & 1) != 0)
  {
    SFIsRunningUnitTests();
  }
  else
  {
    if (SFDeviceIsVirtualMachine())
    {
      v41 = 1;
      goto LABEL_17;
    }
    IsAppleInternalBuild();
  }
  v41 = 0;
LABEL_17:
  v42 = OBJC_IVAR___SFAirDropUserDefaults__registerAllInterfaces;
  swift_allocObject();
  v43 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v4[v42] = sub_1A2A9FFB8(v41, (unint64_t)"RegisterAllInterfaces", 21, 2, MEMORY[0x1E0DEE9D8]);
  v44 = OBJC_IVAR___SFAirDropUserDefaults__enabledDemoMode;
  swift_allocObject();
  *(_QWORD *)&v4[v44] = sub_1A2A9FE14(0, (unint64_t)"EnableDemoMode", 14, 2, v43);
  v45 = OBJC_IVAR___SFAirDropUserDefaults__disableAirDrop;
  swift_allocObject();
  *(_QWORD *)&v4[v45] = sub_1A2A9FE14(0, (unint64_t)"DisableAirDrop", 14, 2, v43);
  v46 = OBJC_IVAR___SFAirDropUserDefaults__disableTLS;
  swift_allocObject();
  *(_QWORD *)&v4[v46] = sub_1A2A9FE14(0, (unint64_t)"DisableTLS", 10, 2, v43);
  v47 = OBJC_IVAR___SFAirDropUserDefaults__disableAirDropBLEAdvertising;
  swift_allocObject();
  *(_QWORD *)&v4[v47] = sub_1A2A9FE14(0, (unint64_t)"DisableAirDropAdvertising", 25, 2, v43);
  v48 = OBJC_IVAR___SFAirDropUserDefaults__disableAutoAccept;
  swift_allocObject();
  *(_QWORD *)&v4[v48] = sub_1A2A9FE14(0, (unint64_t)"DisableAutoAccept", 17, 2, v43);
  v49 = OBJC_IVAR___SFAirDropUserDefaults__disableExtractMediaFromBundles;
  swift_allocObject();
  *(_QWORD *)&v4[v49] = sub_1A2A9FE14(0, (unint64_t)"DisableExtractMediaFromBundles", 30, 2, v43);
  v50 = OBJC_IVAR___SFAirDropUserDefaults__disableTransformingPhotosAssetBundlesToFolders;
  swift_allocObject();
  *(_QWORD *)&v4[v50] = sub_1A2A9FE14(0, (unint64_t)"DisableTransformingPhotosAssetBundlesToFolders", 46, 2, v43);
  v51 = OBJC_IVAR___SFAirDropUserDefaults__alwaysExchangeContacts;
  swift_allocObject();
  *(_QWORD *)&v4[v51] = sub_1A2A9FE14(0, (unint64_t)"AirDropAlwaysExchangeContacts", 29, 2, (uint64_t)&unk_1E4822ED8);
  v52 = OBJC_IVAR___SFAirDropUserDefaults__a2aRangingAssumeClose;
  swift_allocObject();
  *(_QWORD *)&v4[v52] = sub_1A2A9FE14(0, (unint64_t)"A2ARangingAssumeClose", 21, 2, v43);
  v53 = OBJC_IVAR___SFAirDropUserDefaults__a2aRangingAssumeFar;
  swift_allocObject();
  *(_QWORD *)&v4[v53] = sub_1A2A9FE14(0, (unint64_t)"A2ARangingAssumeFar", 19, 2, v43);
  v54 = OBJC_IVAR___SFAirDropUserDefaults__quicIdleTimeout;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE676270);
  swift_allocObject();
  *(_QWORD *)&v4[v54] = sub_1A2AA015C(300000, (unint64_t)"QUICIdleTimeout", 15, 2, (uint64_t)&unk_1E4822F00);
  v55 = OBJC_IVAR___SFAirDropUserDefaults__verboseWalkAway;
  swift_allocObject();
  *(_QWORD *)&v4[v55] = sub_1A2A9FE14(0, (unint64_t)"VerboseWalkAway", 15, 2, v43);
  v56 = OBJC_IVAR___SFAirDropUserDefaults__nearFieldSharingEnabled;
  swift_allocObject();
  *(_QWORD *)&v4[v56] = sub_1A2A9FE14(1, (unint64_t)"NearFieldSharingEnabled", 23, 2, v43);
  v57 = 0;
  if ((SFIsGreenTeaDevice() & 1) == 0)
    v57 = SFDeviceClassCodeGet() == 1 || SFDeviceClassCodeGet() == 3;
  v58 = OBJC_IVAR___SFAirDropUserDefaults__cellularUsageEnabled;
  swift_allocObject();
  *(_QWORD *)&v4[v58] = sub_1A2A9FE14(v57, (unint64_t)"CellularUsageEnabled", 20, 2, MEMORY[0x1E0DEE9D8]);
  v59 = OBJC_IVAR___SFAirDropUserDefaults__sensitivePreviewOverride;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE676268);
  swift_allocObject();
  *(_QWORD *)&v4[v59] = sub_1A2AA0300(2, (unint64_t)"AirDropSensitivePreviewOverride", 31, 2, (uint64_t)&unk_1E4822F28);
  v60 = OBJC_IVAR___SFAirDropUserDefaults__sensitiveContentOverride;
  swift_allocObject();
  *(_QWORD *)&v4[v60] = sub_1A2AA0300(2, (unint64_t)"AirDropSensitiveContentOverride", 31, 2, (uint64_t)&unk_1E4822F50);
  v61 = OBJC_IVAR___SFAirDropUserDefaults__showTransferIdentifierUI;
  swift_allocObject();
  *(_QWORD *)&v4[v61] = sub_1A2A9FE14(0, (unint64_t)"AirDropShowTransferIdentifierUI", 31, 2, (uint64_t)&unk_1E4822F78);
  v62 = OBJC_IVAR___SFAirDropUserDefaults__alwaysAutoAccept;
  swift_allocObject();
  *(_QWORD *)&v4[v62] = sub_1A2A9FE14(0, (unint64_t)"AlwaysAutoAccept", 16, 2, (uint64_t)&unk_1E4822FC8);
  v63 = OBJC_IVAR___SFAirDropUserDefaults__overrideReceivedFilesPathiOS;
  swift_allocObject();
  *(_QWORD *)&v4[v63] = sub_1A2A9FE14(0, (unint64_t)"OverrideReceivedFilesPathiOS", 28, 2, (uint64_t)&unk_1E4822FF0);

  v66.receiver = v4;
  v66.super_class = ObjectType;
  return objc_msgSendSuper2(&v66, sel_init);
}

id SFAirDropUserDefaults.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t SFAirDropUserDefaults.registeredDefaults.getter()
{
  os_unfair_lock_s *v0;
  uint64_t v1;
  uint64_t v3;

  if (qword_1EE676430 != -1)
    swift_once();
  sub_1A2AE4120();
  v0 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + 24) + 16);
  os_unfair_lock_lock(v0);
  sub_1A29687D4(v3, &v3);
  os_unfair_lock_unlock(v0);
  v1 = v3;
  swift_release();
  return v1;
}

void SFAirDropUserDefaults.userDefaultDescriptions.getter()
{
  sub_1A2AA13A4();
}

uint64_t sub_1A2A9F930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v7 = a3[2];
  if (!v7)
    goto LABEL_9;
  result = a3[4];
  if (result == a1 && a3[5] == a2)
    goto LABEL_7;
  result = sub_1A2AE3EE0();
  if ((result & 1) != 0)
    goto LABEL_7;
  if (v7 == 1)
    goto LABEL_9;
  result = a3[6];
  if (result == a1 && a3[7] == a2 || (result = sub_1A2AE3EE0(), (result & 1) != 0))
  {
LABEL_7:
    *(_OWORD *)(a4 + 16) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)a4 = 0u;
    return result;
  }
  if (v7 == 2)
  {
LABEL_9:
    swift_bridgeObjectRetain();
    result = sub_1A2AE3BF8();
    *(_QWORD *)a4 = a1;
    *(_QWORD *)(a4 + 8) = a2;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)(a4 + 24) = 0xE000000000000000;
    v11 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(a4 + 32) = 16777472;
    *(_QWORD *)(a4 + 40) = v11;
  }
  else
  {
    v12 = a3 + 9;
    v13 = 2;
    while (1)
    {
      v14 = v13 + 1;
      if (__OFADD__(v13, 1))
        break;
      result = *(v12 - 1);
      if (result == a1 && *v12 == a2)
        goto LABEL_7;
      result = sub_1A2AE3EE0();
      if ((result & 1) != 0)
        goto LABEL_7;
      v12 += 2;
      ++v13;
      if (v14 == v7)
        goto LABEL_9;
    }
    __break(1u);
  }
  return result;
}

Sharing::SFAirDropUserDefaults::Process_optional __swiftcall SFAirDropUserDefaults.Process.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  Sharing::SFAirDropUserDefaults::Process_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A2AE3CD0();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SFAirDropUserDefaults.Process.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A2A9FB50 + 4 * byte_1A2B0B007[*v0]))(0x64676E6972616873, 0xE800000000000000);
}

unint64_t sub_1A2A9FB50()
{
  return 0xD000000000000012;
}

uint64_t sub_1A2A9FB6C()
{
  return 0x706F7244726941;
}

uint64_t sub_1A2A9FB84()
{
  return 0x55706F7244726941;
}

uint64_t sub_1A2A9FBA0()
{
  return 0x7265646E6946;
}

uint64_t sub_1A2A9FBB4()
{
  return 0x6F42676E69727053;
}

uint64_t sub_1A2A9FBD4()
{
  return 0x436C6F72746E6F43;
}

uint64_t sub_1A2A9FBF8()
{
  return 0x73746361746E6F63;
}

void sub_1A2A9FC18(char *a1)
{
  sub_1A2A5D474(*a1);
}

void sub_1A2A9FC24()
{
  char *v0;

  sub_1A2AC3AF0(0, *v0);
}

void sub_1A2A9FC30(uint64_t a1)
{
  char *v1;

  sub_1A2AC38F4(a1, *v1);
}

void sub_1A2A9FC38(uint64_t a1)
{
  char *v1;

  sub_1A2AC3AF0(a1, *v1);
}

Sharing::SFAirDropUserDefaults::Process_optional sub_1A2A9FC40(Swift::String *a1)
{
  return SFAirDropUserDefaults.Process.init(rawValue:)(*a1);
}

uint64_t sub_1A2A9FC4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = SFAirDropUserDefaults.Process.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A2A9FC70(char a1, unint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v18;

  v6 = v5;
  if (qword_1EE676280 != -1)
    swift_once();
  v12 = (void *)qword_1EE676278;
  v13 = sub_1A2A9C168(a5);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6760F8);
  swift_allocObject();
  v14 = v12;
  LOBYTE(v18) = 7;
  v15 = (_QWORD *)sub_1A2AA0AD8(v12, a2, a3, a4, 0, 0, 256, a1, 0xD00000000000001ELL, 0x80000001A2B481D0, v18, v13, &qword_1EE676040);

  *(_QWORD *)(v6 + 16) = v15;
  v16 = qword_1EE676430;
  swift_retain();
  if (v16 != -1)
    swift_once();
  sub_1A2AE4120();
  sub_1A2A9BF18(v15, (uint64_t)sub_1A2AA230C, (uint64_t)sub_1A2AA2294, (uint64_t)sub_1A2AA2324);
  swift_release();
  swift_release();
  return v6;
}

uint64_t sub_1A2A9FE14(char a1, unint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v18;

  v6 = v5;
  if (qword_1EE676280 != -1)
    swift_once();
  v12 = (void *)qword_1EE676278;
  v13 = sub_1A2A9C168(a5);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE676108);
  swift_allocObject();
  v14 = v12;
  LOBYTE(v18) = 2;
  v15 = (_QWORD *)sub_1A2AA0AD8(v12, a2, a3, a4, 0, 0, 256, a1 & 1, 0xD00000000000001ELL, 0x80000001A2B481D0, v18, v13, &qword_1EE676058);

  *(_QWORD *)(v6 + 16) = v15;
  v16 = qword_1EE676430;
  swift_retain();
  if (v16 != -1)
    swift_once();
  sub_1A2AE4120();
  sub_1A2A9BF18(v15, (uint64_t)sub_1A2AA2278, (uint64_t)sub_1A2AA2294, (uint64_t)sub_1A2AA2290);
  swift_release();
  swift_release();
  return v6;
}

uint64_t sub_1A2A9FFB8(char a1, unint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v18;

  v6 = v5;
  if (qword_1EE676280 != -1)
    swift_once();
  v12 = (void *)qword_1EE676278;
  v13 = sub_1A2A9C168(a5);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6760F0);
  swift_allocObject();
  v14 = v12;
  LOBYTE(v18) = 2;
  v15 = (_QWORD *)sub_1A2AA0AD8(v12, a2, a3, a4, 0, 0, 256, a1 & 1, 0xD00000000000001ELL, 0x80000001A2B481D0, v18, v13, &qword_1EE676038);

  *(_QWORD *)(v6 + 16) = v15;
  v16 = qword_1EE676430;
  swift_retain();
  if (v16 != -1)
    swift_once();
  sub_1A2AE4120();
  sub_1A2A9BF18(v15, (uint64_t)sub_1A2AA22F0, (uint64_t)sub_1A2AA2294, (uint64_t)sub_1A2AA2308);
  swift_release();
  swift_release();
  return v6;
}

uint64_t sub_1A2AA015C(int a1, unint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = v5;
  if (qword_1EE676280 != -1)
    swift_once();
  v12 = (void *)qword_1EE676278;
  v13 = sub_1A2A9C168(a5);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE676118);
  swift_allocObject();
  v14 = v12;
  v15 = (_QWORD *)sub_1A2AA0C8C(v12, a2, a3, a4, 0, 0, 256, a1, 0xD00000000000001ELL, 0x80000001A2B481D0, 0x100000000, v13);

  *(_QWORD *)(v6 + 16) = v15;
  v16 = qword_1EE676430;
  swift_retain();
  if (v16 != -1)
    swift_once();
  sub_1A2AE4120();
  sub_1A2A9BF18(v15, (uint64_t)sub_1A2AA22D4, (uint64_t)sub_1A2AA2294, (uint64_t)sub_1A2AA22EC);
  swift_release();
  swift_release();
  return v6;
}

uint64_t sub_1A2AA0300(char a1, unint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v18;

  v6 = v5;
  if (qword_1EE676280 != -1)
    swift_once();
  v12 = (void *)qword_1EE676278;
  v13 = sub_1A2A9C168(a5);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE676110);
  swift_allocObject();
  v14 = v12;
  LOBYTE(v18) = 3;
  v15 = (_QWORD *)sub_1A2AA0AD8(v12, a2, a3, a4, 0, 0, 256, a1, 0xD00000000000001ELL, 0x80000001A2B481D0, v18, v13, &qword_1EE676050);

  *(_QWORD *)(v6 + 16) = v15;
  v16 = qword_1EE676430;
  swift_retain();
  if (v16 != -1)
    swift_once();
  sub_1A2AE4120();
  sub_1A2A9BF18(v15, (uint64_t)sub_1A2AA22B8, (uint64_t)sub_1A2AA2294, (uint64_t)sub_1A2AA22D0);
  swift_release();
  swift_release();
  return v6;
}

_QWORD *AirDropUserDefault.init(wrappedValue:_:kill:)(uint64_t a1, unint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v7;
  _QWORD *v8;

  v7 = *v5;
  v8 = sub_1A2AA113C(a1, a2, a3, a4, a5);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 80) - 8) + 8))(a1);
  return v8;
}

void (*AirDropUserDefault.wrappedValue.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v7 = malloc(v6);
  v3[4] = v7;
  SFUserDefault.value.getter((uint64_t)v7);
  return sub_1A2AA0570;
}

void sub_1A2AA0570(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    sub_1A2AA1318((uint64_t)v3);
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
  }
  else
  {
    sub_1A2AA1318(*(_QWORD *)(*(_QWORD *)a1 + 32));
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v7(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t AirDropFeatureFlag.__allocating_init(_:kill:)(unint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  AirDropFeatureFlag.init(_:kill:)(a1, a2, a3, a4);
  return v8;
}

uint64_t AirDropFeatureFlag.init(_:kill:)(unint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v10;
  uint64_t v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;

  v5 = v4;
  if (qword_1EE676280 != -1)
    swift_once();
  v10 = (void *)qword_1EE676278;
  v11 = sub_1A2A9C168(a4);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE676108);
  swift_allocObject();
  v12 = v10;
  LOBYTE(v16) = 2;
  v13 = (_QWORD *)sub_1A2AA0AD8(v10, a1, a2, a3, (uint64_t)"Sharing", 7, 2, 0, 0xD00000000000001ELL, 0x80000001A2B481D0, v16, v11, &qword_1EE676058);

  *(_QWORD *)(v5 + 16) = v13;
  v14 = qword_1EE676430;
  swift_retain();
  if (v14 != -1)
    swift_once();
  sub_1A2AE4120();
  sub_1A2A9BF18(v13, (uint64_t)sub_1A2AA2278, (uint64_t)sub_1A2AA2294, (uint64_t)sub_1A2AA2290);
  swift_release();
  swift_release();
  return v5;
}

void sub_1A2AA080C(unsigned __int8 *a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  id v4;
  id v5;

  v2 = *(void **)(*(_QWORD *)(*(_QWORD *)a2 + 16) + 56);
  if (v2)
  {
    v3 = *a1;
    v4 = v2;
    v5 = (id)sub_1A2AE340C();
    objc_msgSend(v4, sel_setBool_forKey_, v3, v5);

  }
}

void (*AirDropFeatureFlag.wrappedValue.modify(uint64_t a1))(_QWORD *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(a1 + 8) = sub_1A2A99468() & 1;
  return sub_1A2AA08D4;
}

void sub_1A2AA08D4(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v2 = *a1;
  v1 = (unsigned __int8 *)(a1 + 1);
  v3 = *(void **)(v2 + 56);
  if (v3)
  {
    v4 = *v1;
    v6 = v3;
    v5 = (void *)sub_1A2AE340C();
    objc_msgSend(v6, sel_setBool_forKey_, v4, v5);

  }
}

uint64_t AirDropFeatureFlag.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t sub_1A2AA097C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1A296D740(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[6 * v9 + 4];
  if (a1 + 32 < v10 + 48 * v8 && v10 < a1 + 32 + 48 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A2AE3C88();
  __break(1u);
  return result;
}

uint64_t sub_1A2AA0AD8(void *a1, unint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, __int16 a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t *a13)
{
  uint64_t v13;
  uint64_t v14;
  id v18;
  uint64_t result;
  uint64_t v20;

  v14 = v13;
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  *(_BYTE *)(v14 + 32) = a4;
  *(_QWORD *)(v14 + 56) = a1;
  *(_QWORD *)(v14 + 64) = a5;
  *(_QWORD *)(v14 + 72) = a6;
  *(_BYTE *)(v14 + 80) = a7;
  *(_BYTE *)(v14 + 81) = HIBYTE(a7) & 1;
  *(_BYTE *)(v14 + 82) = a8;
  *(_QWORD *)(v14 + 96) = a9;
  *(_QWORD *)(v14 + 104) = a10;
  __swift_instantiateConcreteTypeFromMangledName(a13);
  swift_allocObject();
  v18 = a1;
  result = sub_1A2AE3274();
  *(_QWORD *)(v14 + 88) = result;
  *(_QWORD *)(v14 + 112) = a12;
  if ((a4 & 1) == 0)
  {
    if (a2)
    {
LABEL_9:
      *(_QWORD *)(v14 + 40) = sub_1A2AE34A8();
      *(_QWORD *)(v14 + 48) = v20;
      return v14;
    }
    __break(1u);
    goto LABEL_11;
  }
  if (HIDWORD(a2))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (a2 >> 11 != 27)
  {
    if (WORD1(a2) > 0x10u)
    {
LABEL_12:
      __break(1u);
      goto LABEL_9;
    }
    if ((a2 & 0xFFFFFF80) != 0 || a2 <= 0xFF)
      goto LABEL_9;
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A2AA0C8C(void *a1, unint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, __int16 a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  id v17;
  uint64_t result;
  uint64_t v19;

  v13 = v12;
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  *(_BYTE *)(v13 + 32) = a4;
  *(_QWORD *)(v13 + 56) = a1;
  *(_QWORD *)(v13 + 64) = a5;
  *(_QWORD *)(v13 + 72) = a6;
  *(_BYTE *)(v13 + 80) = a7;
  *(_BYTE *)(v13 + 81) = HIBYTE(a7) & 1;
  *(_DWORD *)(v13 + 84) = a8;
  *(_QWORD *)(v13 + 96) = a9;
  *(_QWORD *)(v13 + 104) = a10;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE676060);
  swift_allocObject();
  v17 = a1;
  result = sub_1A2AE3274();
  *(_QWORD *)(v13 + 88) = result;
  *(_QWORD *)(v13 + 112) = a12;
  if ((a4 & 1) == 0)
  {
    if (a2)
    {
LABEL_9:
      *(_QWORD *)(v13 + 40) = sub_1A2AE34A8();
      *(_QWORD *)(v13 + 48) = v19;
      return v13;
    }
    __break(1u);
    goto LABEL_11;
  }
  if (HIDWORD(a2))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (a2 >> 11 != 27)
  {
    if (WORD1(a2) > 0x10u)
    {
LABEL_12:
      __break(1u);
      goto LABEL_9;
    }
    if ((a2 & 0xFFFFFF80) != 0 || a2 <= 0xFF)
      goto LABEL_9;
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A2AA0E4C(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t, uint64_t, _BYTE *))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64x2_t v23;
  int16x8_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  _BYTE v39[40];

  v31 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v30 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v6)
    goto LABEL_7;
LABEL_4:
  v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v13 = *v12;
    v14 = v12[1];
    sub_1A296E4B4(*(_QWORD *)(a1 + 56) + 32 * i, (uint64_t)v39);
    v38[0] = v13;
    v38[1] = v14;
    swift_bridgeObjectRetain();
    a2(&v32, v13, v14, v39);
    result = sub_1A296F108((uint64_t)v38, &qword_1EE67EFD8);
    v15 = v33;
    if (v33)
    {
      v25 = v32;
      v26 = v35;
      v27 = v34;
      v28 = v36;
      v29 = v37;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1A296D740(0, v30[2] + 1, 1, v30);
        v30 = (_QWORD *)result;
      }
      v20 = v30[2];
      v19 = v30[3];
      v21 = v20 + 1;
      if (v20 >= v19 >> 1)
      {
        result = (uint64_t)sub_1A296D740((_QWORD *)(v19 > 1), v20 + 1, 1, v30);
        v21 = v20 + 1;
        v30 = (_QWORD *)result;
      }
      v30[2] = v21;
      v22 = &v30[6 * v20];
      v22[4] = v25;
      v22[5] = v15;
      v22[6] = v27;
      v22[7] = v26;
      *((_BYTE *)v22 + 64) = v28 & 1;
      v23 = (uint64x2_t)vdupq_n_s64(v28);
      v24 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v23, (uint64x2_t)xmmword_1A2B0B1A0), (int32x4_t)vshlq_u64(v23, (uint64x2_t)xmmword_1A2B0B190));
      *(int8x8_t *)v24.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v24), (int8x8_t)0x1000100010001);
      *(_DWORD *)((char *)v22 + 65) = vmovn_s16(v24).u32[0];
      v22[9] = v29;
      if (v6)
        goto LABEL_4;
    }
    else if (v6)
    {
      goto LABEL_4;
    }
LABEL_7:
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v16 >= v7)
      goto LABEL_29;
    v17 = *(_QWORD *)(v31 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v7)
        goto LABEL_29;
      v17 = *(_QWORD *)(v31 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v7)
          goto LABEL_29;
        v17 = *(_QWORD *)(v31 + 8 * v9);
        if (!v17)
        {
          v9 = v16 + 3;
          if (v16 + 3 >= v7)
            goto LABEL_29;
          v17 = *(_QWORD *)(v31 + 8 * v9);
          if (!v17)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v17 - 1) & v17;
  }
  v18 = v16 + 4;
  if (v18 >= v7)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v30;
  }
  v17 = *(_QWORD *)(v31 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v7)
      goto LABEL_29;
    v17 = *(_QWORD *)(v31 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

_QWORD *sub_1A2AA113C(uint64_t a1, unint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v6 = v5;
  HIDWORD(v23) = a4;
  v24 = a1;
  v10 = *v5;
  v11 = *(_QWORD *)(v10 + 80);
  v12 = sub_1A2AE39F4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v23 - v15;
  if (qword_1EE676280 != -1)
    swift_once();
  v17 = (void *)qword_1EE676278;
  type metadata accessor for SFUserDefault(0, v11, *(_QWORD *)(v10 + 88), v14);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v16, 1, 1, v11);
  v18 = sub_1A2A9C168(a5);
  swift_bridgeObjectRelease();
  v19 = v17;
  v20 = sub_1A296E2DC(v17, a2, a3, SHIDWORD(v23), 0, 0, 256, v24, 0xD00000000000001ELL, 0x80000001A2B481D0, (uint64_t)v16, v18);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  v6[2] = v20;
  v21 = qword_1EE676430;
  swift_retain();
  if (v21 != -1)
    swift_once();
  sub_1A2AE4120();
  sub_1A2968670();
  swift_release();
  swift_release();
  return v6;
}

uint64_t sub_1A2AA1318(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  MEMORY[0x1E0C80A78](a1);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v3 + 16))(v2);
  return SFUserDefault.value.setter((uint64_t)v2);
}

uint64_t type metadata accessor for AirDropFeatureFlag()
{
  return objc_opt_self();
}

void sub_1A2AA13A4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11[2];

  if (qword_1EE676280 != -1)
    swift_once();
  v1 = qword_1EE676278;
  v11[0] = 0;
  v11[1] = 0xE000000000000000;
  v2 = (id)qword_1EE676278;
  sub_1A2AE3B20();
  swift_bridgeObjectRelease();
  if (v1)
  {
    if (qword_1EE676430 != -1)
      swift_once();
    sub_1A2AE4120();
    v3 = (os_unfair_lock_s *)(*(_QWORD *)(v11[0] + 24) + 16);
    os_unfair_lock_lock(v3);
    sub_1A29687D4(v11[0], v11);
    os_unfair_lock_unlock(v3);
    if (v0)
    {
      __break(1u);
    }
    else
    {
      v4 = v11[0];
      swift_release();
      v5 = sub_1A2A9C32C(v4);
      swift_bridgeObjectRelease();
      sub_1A2A9C4C4(v5);
      v6 = objc_msgSend(v2, sel_dictionaryRepresentation);
      v7 = sub_1A2AE337C();

      MEMORY[0x1E0C80A78](v8);
      v9 = sub_1A2AA0E4C(v7, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, _BYTE *))sub_1A2AA22B0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11[0] = v5;
      sub_1A2AA097C(v9);

    }
  }
  else
  {
    sub_1A297AFB8();
    swift_allocError();
    *(_QWORD *)v10 = 0xD000000000000037;
    *(_QWORD *)(v10 + 8) = 0x80000001A2B48B80;
    *(_QWORD *)(v10 + 16) = 0xD000000000000053;
    *(_QWORD *)(v10 + 24) = 0x80000001A2B48BC0;
    *(_QWORD *)(v10 + 32) = 293;
    *(_OWORD *)(v10 + 40) = 0u;
    *(_OWORD *)(v10 + 56) = 0u;
    *(_QWORD *)(v10 + 72) = 0;
    *(_QWORD *)(v10 + 80) = 0x2000000000000000;
    *(_QWORD *)(v10 + 88) = 0;
    *(_QWORD *)(v10 + 96) = 0;
    swift_willThrow();
  }
}

unint64_t _s7Sharing21SFAirDropUserDefaultsC11descriptionSSvg_0()
{
  uint64_t v0;

  sub_1A2AA13A4();
  sub_1A2A9C598(v0);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6764B8);
  sub_1A297AFFC();
  sub_1A2AE33AC();
  swift_bridgeObjectRelease();
  sub_1A2AE3B20();
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  return 0xD00000000000001CLL;
}

unint64_t sub_1A2AA1790()
{
  unint64_t result;

  result = qword_1EE67EFD0;
  if (!qword_1EE67EFD0)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDropUserDefaults.Process, &type metadata for SFAirDropUserDefaults.Process);
    atomic_store(result, (unint64_t *)&qword_1EE67EFD0);
  }
  return result;
}

uint64_t sub_1A2AA17D4@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA17F0(char *a1)
{
  SFAirDropUserDefaults.walkAwayEnabled.setter(*a1);
}

uint64_t sub_1A2AA1814@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA1830(char *a1)
{
  SFAirDropUserDefaults.askToAirDropEnabled.setter(*a1);
}

uint64_t sub_1A2AA1854@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA1870(char *a1)
{
  SFAirDropUserDefaults.contactShareAfterAirDropEnabled.setter(*a1);
}

uint64_t sub_1A2AA1894@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA18B0(char *a1)
{
  SFAirDropUserDefaults.boopToActionEnabled.setter(*a1);
}

uint64_t sub_1A2AA18D4@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA18F0(char *a1)
{
  SFAirDropUserDefaults.boopToAirDropEnabled.setter(*a1);
}

uint64_t sub_1A2AA1914@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA1930(char *a1)
{
  SFAirDropUserDefaults.boopToCollaborateEnabled.setter(*a1);
}

uint64_t sub_1A2AA1954@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA1970(char *a1)
{
  SFAirDropUserDefaults.shockwaveEffectEnabled.setter(*a1);
}

void sub_1A2AA1998()
{
  swift_bridgeObjectRetain();
  SFAirDropUserDefaults.shockwaveEffectVariant.setter();
}

uint64_t sub_1A2AA19DC@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA19F8(char *a1)
{
  SFAirDropUserDefaults.shockwaveHapticsPlayerStartsEarly.setter(*a1);
}

uint64_t sub_1A2AA1A1C@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA1A38(char *a1)
{
  SFAirDropUserDefaults.nearFieldControllerEnabled.setter(*a1);
}

uint64_t sub_1A2AA1A5C@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA1A78(char *a1)
{
  SFAirDropUserDefaults.finalALPN.setter(*a1);
}

uint64_t sub_1A2AA1A9C@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA1AB8(char *a1)
{
  SFAirDropUserDefaults.helloFeatureFlagsEnabled.setter(*a1);
}

uint64_t sub_1A2AA1ADC@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9D758(a1);
}

uint64_t sub_1A2AA1AF8(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_26Tm(a1, a2, a3, a4, (uint64_t (*)(char *))SFAirDropUserDefaults.browseAllInterfaces.setter);
}

uint64_t sub_1A2AA1B04@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9D758(a1);
}

uint64_t sub_1A2AA1B20(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_26Tm(a1, a2, a3, a4, (uint64_t (*)(char *))SFAirDropUserDefaults.registerAllInterfaces.setter);
}

uint64_t keypath_set_26Tm(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  char v6;

  v6 = *a1;
  return a5(&v6);
}

uint64_t sub_1A2AA1B60@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA1B7C(char *a1)
{
  SFAirDropUserDefaults.enabledDemoMode.setter(*a1);
}

uint64_t sub_1A2AA1BA0@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA1BBC(char *a1)
{
  SFAirDropUserDefaults.disableAirDrop.setter(*a1);
}

uint64_t sub_1A2AA1BE0@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA1BFC(char *a1)
{
  SFAirDropUserDefaults.disableTLS.setter(*a1);
}

uint64_t sub_1A2AA1C20@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA1C3C(char *a1)
{
  SFAirDropUserDefaults.disableAirDropBLEAdvertising.setter(*a1);
}

uint64_t sub_1A2AA1C60@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA1C7C(char *a1)
{
  SFAirDropUserDefaults.disableAutoAccept.setter(*a1);
}

uint64_t sub_1A2AA1CA0@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA1CBC(char *a1)
{
  SFAirDropUserDefaults.disableExtractMediaFromBundles.setter(*a1);
}

uint64_t sub_1A2AA1CE0@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA1CFC(char *a1)
{
  SFAirDropUserDefaults.disableTransformingPhotosAssetBundlesToFolders.setter(*a1);
}

uint64_t sub_1A2AA1D20@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA1D3C(char *a1)
{
  SFAirDropUserDefaults.alwaysExchangeContacts.setter(*a1);
}

uint64_t sub_1A2AA1D60@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA1D7C(char *a1)
{
  SFAirDropUserDefaults.a2aRangingAssumeClose.setter(*a1);
}

uint64_t sub_1A2AA1DA0@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA1DBC(char *a1)
{
  SFAirDropUserDefaults.a2aRangingAssumeFar.setter(*a1);
}

void sub_1A2AA1DE4()
{
  SFAirDropUserDefaults.quicIdleTimeout.setter();
}

uint64_t sub_1A2AA1E08@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA1E24(char *a1)
{
  SFAirDropUserDefaults.verboseWalkAway.setter(*a1);
}

uint64_t sub_1A2AA1E48@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA1E64(char *a1)
{
  SFAirDropUserDefaults.nearFieldSharingEnabled.setter(*a1);
}

uint64_t sub_1A2AA1E88@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA1EA4(char *a1)
{
  SFAirDropUserDefaults.objcNearFieldSharingEnabled.setter(*a1);
}

uint64_t sub_1A2AA1EC8@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA1EE4(char *a1)
{
  SFAirDropUserDefaults.cellularUsageEnabled.setter(*a1);
}

uint64_t sub_1A2AA1F08@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA1F24(char *a1)
{
  SFAirDropUserDefaults.objcCellularUsageEnabled.setter(*a1);
}

uint64_t sub_1A2AA1F48@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E670(a1);
}

void sub_1A2AA1F64(char *a1)
{
  SFAirDropUserDefaults.sensitivePreviewOverride.setter(*a1);
}

uint64_t sub_1A2AA1F88@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E670(a1);
}

void sub_1A2AA1FA4(char *a1)
{
  SFAirDropUserDefaults.sensitiveContentOverride.setter(*a1);
}

uint64_t sub_1A2AA1FC8@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA1FE4(char *a1)
{
  SFAirDropUserDefaults.showTransferIdentifierUI.setter(*a1);
}

uint64_t sub_1A2AA2008@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA2024(char *a1)
{
  SFAirDropUserDefaults.alwaysAutoAccept.setter(*a1);
}

uint64_t sub_1A2AA2048@<X0>(_BYTE *a1@<X8>)
{
  return sub_1A2A9E3E8(a1);
}

void sub_1A2AA2064(char *a1)
{
  SFAirDropUserDefaults.overrideReceivedFilesPathiOS.setter(*a1);
}

uint64_t sub_1A2AA2088@<X0>(uint64_t a1@<X8>)
{
  return AirDropUserDefault.wrappedValue.getter(a1);
}

uint64_t sub_1A2AA20A8(uint64_t a1)
{
  return sub_1A2AA1318(a1);
}

uint64_t sub_1A2AA20C8()
{
  return 16;
}

__n128 sub_1A2AA20D4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

id sub_1A2AA20E0@<X0>(_BYTE *a1@<X8>)
{
  id result;

  result = sub_1A2A99468();
  *a1 = result & 1;
  return result;
}

uint64_t type metadata accessor for SFAirDropUserDefaults()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for SFAirDropUserDefaults.Process(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1A2AA2180 + 4 * byte_1A2B0B014[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1A2AA21B4 + 4 * byte_1A2B0B00F[v4]))();
}

uint64_t sub_1A2AA21B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2AA21BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2AA21C4);
  return result;
}

uint64_t sub_1A2AA21D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2AA21D8);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1A2AA21DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2AA21E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SFAirDropUserDefaults.Process()
{
  return &type metadata for SFAirDropUserDefaults.Process;
}

uint64_t sub_1A2AA2200()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AirDropUserDefault(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AirDropUserDefault);
}

uint64_t method lookup function for AirDropUserDefault()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AirDropUserDefault.__allocating_init(wrappedValue:_:kill:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for AirDropFeatureFlag()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AirDropFeatureFlag.__allocating_init(_:kill:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void sub_1A2AA2278(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1A2A9B664(v1, a1);
}

uint64_t sub_1A2AA2294()
{
  uint64_t v0;

  return sub_1A2A9BD38(v0) & 1;
}

uint64_t sub_1A2AA22B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1A2A9F930(a1, a2, *(_QWORD **)(v3 + 16), a3);
}

uint64_t sub_1A2AA22B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1A2A9BC08(a1);
}

void sub_1A2AA22D4(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_1A2A9BA30(a1, a2, v3, a3);
}

uint64_t sub_1A2AA22F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A2A9B844(v1, a1);
}

uint64_t sub_1A2AA230C@<X0>(uint64_t a1@<X8>)
{
  return sub_1A2A9B534(a1);
}

void sub_1A2AA2328(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  sub_1A2A9B3D4(a1, a2, v3, a3);
}

ValueMetadata *type metadata accessor for SFAirDropReceive.UserInteractionHandler()
{
  return &type metadata for SFAirDropReceive.UserInteractionHandler;
}

uint64_t sub_1A2AA2360@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_1A2AA23B4@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  int v4;
  int *v5;
  int v6;
  int v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (int *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t SFClientIdentity.init(addingUntrustedProcessName:to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;

  v8 = type metadata accessor for SFClientIdentity();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A2AA25B8(a3, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1A2AA2640(a3);
    v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE675F48);
    v25 = *(_DWORD *)&v10[v11[12]];
    v12 = &v10[v11[16]];
    v13 = *(_QWORD *)v12;
    v23 = *((_QWORD *)v12 + 1);
    v24 = v13;
    swift_bridgeObjectRelease();
    v14 = v11[24];
    v15 = *(_DWORD *)&v10[v14];
    v16 = v11[12];
    v17 = (_QWORD *)(a4 + v11[16]);
    v18 = (_QWORD *)(a4 + v11[20]);
    v19 = sub_1A2AE3130();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a4, v10, v19);
    *(_DWORD *)(a4 + v16) = v25;
    v20 = v23;
    *v17 = v24;
    v17[1] = v20;
    *v18 = a1;
    v18[1] = a2;
    *(_DWORD *)(a4 + v14) = v15;
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1A2AA25FC(a3, a4);
    return sub_1A2AA2640((uint64_t)v10);
  }
}

uint64_t type metadata accessor for SFClientIdentity()
{
  uint64_t result;

  result = qword_1EE675E50;
  if (!qword_1EE675E50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A2AA25B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SFClientIdentity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A2AA25FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SFClientIdentity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A2AA2640(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SFClientIdentity();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SFClientIdentity.init(xpcConnection:accessLevel:)@<X0>(void *a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *a2;
  v6 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE675F48);
  v7 = v6[12];
  v8 = (uint64_t *)(a3 + v6[16]);
  v9 = (_QWORD *)(a3 + v6[20]);
  v10 = v6[24];
  sub_1A2AE3124();
  *(_DWORD *)(a3 + v7) = objc_msgSend(a1, sel_processIdentifier);
  v11 = sub_1A2A15DE8();
  v13 = v12;

  *v8 = v11;
  v8[1] = v13;
  *v9 = 0;
  v9[1] = 0;
  *(_DWORD *)(a3 + v10) = v5;
  type metadata accessor for SFClientIdentity();
  return swift_storeEnumTagMultiPayload();
}

uint64_t SFClientIdentity.connectionID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for SFClientIdentity();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A2AA25B8(v2, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675F48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = sub_1A2AE3130();
    v8 = *(_QWORD *)(v7 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v6, v7);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  else
  {
    sub_1A2AA2640((uint64_t)v6);
    v10 = sub_1A2AE3130();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
}

unint64_t SFClientIdentity.bundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  unint64_t v9;
  unint64_t v10;

  v1 = v0;
  v2 = 0xD000000000000010;
  v3 = type metadata accessor for SFClientIdentity();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A2AA25B8(v1, (uint64_t)v5);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v2 = *(_QWORD *)&v5[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE675F48) + 64)];
      swift_bridgeObjectRelease();
      v7 = sub_1A2AE3130();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
    }
  }
  else
  {
    v9 = 0;
    v10 = 0xE000000000000000;
    sub_1A2AE3B20();
    swift_bridgeObjectRelease();
    v9 = 0xD000000000000018;
    v10 = 0x80000001A2B48C80;
    sub_1A2AE34F0();
    swift_bridgeObjectRelease();
    return v9;
  }
  return v2;
}

uint64_t SFClientIdentity.untrustedProcessName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v11;

  v1 = type metadata accessor for SFClientIdentity();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A2AA25B8(v0, (uint64_t)v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1A2AA2640((uint64_t)v3);
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload != 1)
  {
LABEL_5:
    v8 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
    v9 = objc_msgSend(v8, sel_processName);

    v6 = sub_1A2AE343C();
    return v6;
  }
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675F48);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)&v3[*(int *)(v5 + 80)];
  v7 = sub_1A2AE3130();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v3, v7);
  return v6;
}

id SFClientIdentity.pid.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int EnumCaseMultiPayload;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v9;

  v1 = type metadata accessor for SFClientIdentity();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A2AA25B8(v0, (uint64_t)v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1A2AA2640((uint64_t)v3);
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload != 1)
  {
LABEL_5:
    v7 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
    v5 = objc_msgSend(v7, sel_processIdentifier);

    return v5;
  }
  v5 = (id)*(unsigned int *)&v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE675F48) + 48)];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = sub_1A2AE3130();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v3, v6);
  return v5;
}

uint64_t SFClientIdentity.shortDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _DWORD v7[4];
  uint64_t v8;
  unint64_t v9;

  v1 = type metadata accessor for SFClientIdentity();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = 0;
  v9 = 0xE000000000000000;
  SFClientIdentity.bundleIdentifier.getter();
  v5 = v4;
  sub_1A2AA25B8(v0, (uint64_t)v3);
  if (!v5)
    SFClientIdentity.untrustedProcessName.getter();
  sub_1A2AA2640((uint64_t)v3);
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  v7[3] = SFClientIdentity.pid.getter();
  sub_1A2AE3E5C();
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t SFClientIdentity.accessLevel.getter@<X0>(int *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for SFClientIdentity();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A2AA25B8(v2, (uint64_t)v6);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result)
  {
    if ((_DWORD)result == 1)
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675F48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *a1 = *(_DWORD *)&v6[*(int *)(v8 + 96)];
      v9 = sub_1A2AE3130();
      return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v6, v9);
    }
    if (qword_1EE67AAA0 != -1)
      result = swift_once();
    v10 = dword_1EE67F014;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    if (qword_1EE67AA98 != -1)
      result = swift_once();
    v10 = dword_1EE67F010;
  }
  *a1 = v10;
  return result;
}

unint64_t SFClientIdentity.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD v16[4];
  unint64_t v17;
  unint64_t v18;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SFClientIdentity();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v16 - v8;
  v17 = 0;
  v18 = 0xE000000000000000;
  sub_1A2AE3B20();
  swift_bridgeObjectRelease();
  v17 = 0xD000000000000012;
  v18 = 0x80000001A2B48CA0;
  SFClientIdentity.bundleIdentifier.getter();
  v11 = v10;
  sub_1A2AA25B8(v0, (uint64_t)v9);
  if (!v11)
    SFClientIdentity.untrustedProcessName.getter();
  sub_1A2AA2640((uint64_t)v9);
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  v16[3] = SFClientIdentity.pid.getter();
  sub_1A2AE3E5C();
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  sub_1A2AA25B8(v0, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1A2AA2640((uint64_t)v7);
    v14 = sub_1A2AE3130();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v3, 1, 1, v14);
    goto LABEL_7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675F48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = sub_1A2AE3130();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v3, v7, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v3, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v3, 1, v12) == 1)
  {
LABEL_7:
    sub_1A296F108((uint64_t)v3, &qword_1EE6745C8);
    goto LABEL_8;
  }
  _s7Sharing9SFAirDropO18TransferIdentifierV11stringValueSSvg_0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v3, v12);
LABEL_8:
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  return v17;
}

uint64_t sub_1A2AA314C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A2AE31D8();
  __swift_allocate_value_buffer(v0, qword_1EE67EFF8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE67EFF8);
  if (qword_1ECEFB8A8[0] != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ECEFC700);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t SFClientAccessLevel.rawValue.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t SFClientAccessLevel.init(rawValue:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static SFClientAccessLevel.allowRestrictedBoop.getter(_DWORD *a1@<X8>)
{
  *a1 = 1;
}

void static SFClientAccessLevel.none.getter(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_1A2AA3200()
{
  dword_1EE67F010 = 1;
}

_QWORD *static SFClientAccessLevel.all.getter@<X0>(_DWORD *a1@<X8>)
{
  return sub_1A2AA3294(&qword_1EE67AA98, &dword_1EE67F010, a1);
}

uint64_t sub_1A2AA3230()
{
  uint64_t result;

  if (qword_1EE67AA98 != -1)
    result = swift_once();
  dword_1EE67F014 = dword_1EE67F010;
  return result;
}

_QWORD *static SFClientAccessLevel.xctest.getter@<X0>(_DWORD *a1@<X8>)
{
  return sub_1A2AA3294(&qword_1EE67AAA0, &dword_1EE67F014, a1);
}

_QWORD *sub_1A2AA3294@<X0>(_QWORD *result@<X0>, _DWORD *a2@<X1>, _DWORD *a3@<X8>)
{
  if (*result != -1)
    result = (_QWORD *)swift_once();
  *a3 = *a2;
  return result;
}

_DWORD *SFClientAccessLevel.verifyHasAccess(to:)(_DWORD *result)
{
  _DWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  if ((*result & ~*v1) != 0)
  {
    if (qword_1EE67AA90 != -1)
      swift_once();
    v2 = sub_1A2AE31D8();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EE67EFF8);
    v3 = sub_1A2AE31C0();
    v4 = sub_1A2AE394C();
    v5 = os_log_type_enabled(v3, v4);
    v6 = MEMORY[0x1E0DEE9D8];
    if (v5)
    {
      v7 = swift_slowAlloc();
      v11 = swift_slowAlloc();
      v12 = v11;
      *(_DWORD *)v7 = 136315650;
      v14 = 91;
      v15 = 0xE100000000000000;
      v16 = v6;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6764B8);
      sub_1A297AFFC();
      sub_1A2AE33AC();
      sub_1A2AE34F0();
      swift_bridgeObjectRelease();
      sub_1A2AE34F0();
      v14 = sub_1A296DA00(91, 0xE100000000000000, &v12);
      sub_1A2AE3A60();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2080;
      v14 = 91;
      v15 = 0xE100000000000000;
      v16 = MEMORY[0x1E0DEE9D8];
      sub_1A2AE33AC();
      sub_1A2AE34F0();
      v6 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRelease();
      sub_1A2AE34F0();
      v14 = sub_1A296DA00(v14, v15, &v12);
      sub_1A2AE3A60();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 22) = 2080;
      v14 = 91;
      v15 = 0xE100000000000000;
      v16 = v6;
      sub_1A2AE33AC();
      sub_1A2AE34F0();
      swift_bridgeObjectRelease();
      sub_1A2AE34F0();
      v14 = sub_1A296DA00(v14, v15, &v12);
      sub_1A2AE3A60();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A2830000, v3, v4, "Operation denied {description: %s, requestedAccessLevel: %s, currentAccessLevel: %s}", (uint8_t *)v7, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1A85896E8](v11, -1, -1);
      MEMORY[0x1A85896E8](v7, -1, -1);
    }

    v14 = 0;
    v15 = 0xE000000000000000;
    sub_1A2AE3B20();
    sub_1A2AE34F0();
    v12 = 91;
    v13 = 0xE100000000000000;
    v16 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6764B8);
    sub_1A297AFFC();
    sub_1A2AE33AC();
    sub_1A2AE34F0();
    swift_bridgeObjectRelease();
    sub_1A2AE34F0();
    sub_1A2AE34F0();
    swift_bridgeObjectRelease();
    sub_1A2AE34F0();
    v12 = 91;
    v13 = 0xE100000000000000;
    v16 = v6;
    sub_1A2AE33AC();
    sub_1A2AE34F0();
    swift_bridgeObjectRelease();
    sub_1A2AE34F0();
    sub_1A2AE34F0();
    swift_bridgeObjectRelease();
    sub_1A2AE34F0();
    v12 = 91;
    v13 = 0xE100000000000000;
    v16 = v6;
    sub_1A2AE33AC();
    sub_1A2AE34F0();
    swift_bridgeObjectRelease();
    sub_1A2AE34F0();
    sub_1A2AE34F0();
    swift_bridgeObjectRelease();
    sub_1A2AE34F0();
    v8 = v14;
    v9 = v15;
    sub_1A297AFB8();
    swift_allocError();
    *(_QWORD *)v10 = v8;
    *(_QWORD *)(v10 + 8) = v9;
    *(_QWORD *)(v10 + 16) = 0xD000000000000052;
    *(_QWORD *)(v10 + 24) = 0x80000001A2B48D20;
    *(_QWORD *)(v10 + 32) = 132;
    *(_OWORD *)(v10 + 40) = 0u;
    *(_OWORD *)(v10 + 56) = 0u;
    *(_OWORD *)(v10 + 72) = 0u;
    *(_OWORD *)(v10 + 88) = 0u;
    return (_DWORD *)swift_willThrow();
  }
  return result;
}

uint64_t SFClientAccessLevel.description.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6764B8);
  sub_1A297AFFC();
  sub_1A2AE33AC();
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  return 91;
}

uint64_t sub_1A2AA38A4@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_1A2AA23B4(a1, a2);
}

uint64_t SFClientAccessLevel.init(xpcConnection:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  void *v4;
  id v5;
  uint64_t *v6;
  uint64_t v7;
  int v8;
  int *v9;
  int v10;
  int v11;
  uint64_t result;
  _OWORD v13[2];
  _BYTE v14[24];
  uint64_t v15;

  v4 = (void *)sub_1A2AE340C();
  v5 = objc_msgSend(a1, sel_valueForEntitlement_, v4);

  if (v5)
  {
    sub_1A2AE3A90();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v13, 0, sizeof(v13));
  }
  sub_1A296E450((uint64_t)v13, (uint64_t)v14);
  v6 = (uint64_t *)(MEMORY[0x1E0DEE9D8] + 16);
  if (v15)
    v6 = (uint64_t *)&unk_1E4822BE0;
  v7 = *v6;
  if (v7)
  {
    v8 = 0;
    v9 = (int *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v15)
      v9 = (int *)&unk_1E4822BF0;
    do
    {
      v11 = *v9++;
      v10 = v11;
      if ((v11 & ~v8) == 0)
        v10 = 0;
      v8 |= v10;
      --v7;
    }
    while (v7);
  }
  else
  {
    v8 = 0;
  }

  swift_bridgeObjectRelease();
  result = sub_1A296F108((uint64_t)v14, &qword_1ECEFB8A0);
  *a2 = v8;
  return result;
}

uint64_t sub_1A2AA39EC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6764B8);
  sub_1A297AFFC();
  sub_1A2AE33AC();
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  return 91;
}

unint64_t sub_1A2AA3A7C()
{
  unint64_t result;

  result = qword_1EE67F018;
  if (!qword_1EE67F018)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFClientAccessLevel, &type metadata for SFClientAccessLevel);
    atomic_store(result, (unint64_t *)&qword_1EE67F018);
  }
  return result;
}

unint64_t sub_1A2AA3AC4()
{
  unint64_t result;

  result = qword_1EE67F020;
  if (!qword_1EE67F020)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFClientAccessLevel, &type metadata for SFClientAccessLevel);
    atomic_store(result, (unint64_t *)&qword_1EE67F020);
  }
  return result;
}

unint64_t sub_1A2AA3B0C()
{
  unint64_t result;

  result = qword_1EE675CB0;
  if (!qword_1EE675CB0)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFClientAccessLevel, &type metadata for SFClientAccessLevel);
    atomic_store(result, (unint64_t *)&qword_1EE675CB0);
  }
  return result;
}

unint64_t sub_1A2AA3B54()
{
  unint64_t result;

  result = qword_1EE675CB8;
  if (!qword_1EE675CB8)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFClientAccessLevel, &type metadata for SFClientAccessLevel);
    atomic_store(result, (unint64_t *)&qword_1EE675CB8);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SFClientIdentity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = sub_1A2AE3130();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE675F48);
      *(_DWORD *)((char *)a1 + v11[12]) = *(_DWORD *)((char *)a2 + v11[12]);
      v12 = v11[16];
      v13 = (uint64_t *)((char *)a1 + v12);
      v14 = (uint64_t *)((char *)a2 + v12);
      v16 = *v14;
      v15 = v14[1];
      *v13 = v16;
      v13[1] = v15;
      v17 = v11[20];
      v18 = (uint64_t *)((char *)a1 + v17);
      v19 = (uint64_t *)((char *)a2 + v17);
      v20 = v19[1];
      *v18 = *v19;
      v18[1] = v20;
      *(_DWORD *)((char *)a1 + v11[24]) = *(_DWORD *)((char *)a2 + v11[24]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for SFClientIdentity(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result)
  {
    if ((_DWORD)result != 1)
      return result;
    v3 = sub_1A2AE3130();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675F48);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SFClientIdentity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = sub_1A2AE3130();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE675F48);
    *(_DWORD *)((char *)a1 + v9[12]) = *(_DWORD *)((char *)a2 + v9[12]);
    v10 = v9[16];
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (_QWORD *)((char *)a2 + v10);
    v14 = *v12;
    v13 = v12[1];
    *v11 = v14;
    v11[1] = v13;
    v15 = v9[20];
    v16 = (_QWORD *)((char *)a1 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    *(_DWORD *)((char *)a1 + v9[24]) = *(_DWORD *)((char *)a2 + v9[24]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithCopy for SFClientIdentity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  if (a1 != a2)
  {
    sub_1A2AA2640((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_1A2AE3130();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE675F48);
      *(_DWORD *)((char *)a1 + v8[12]) = *(_DWORD *)((char *)a2 + v8[12]);
      v9 = v8[16];
      v10 = (_QWORD *)((char *)a1 + v9);
      v11 = (_QWORD *)((char *)a2 + v9);
      *v10 = *v11;
      v10[1] = v11[1];
      v12 = v8[20];
      v13 = (_QWORD *)((char *)a1 + v12);
      v14 = (_QWORD *)((char *)a2 + v12);
      *v13 = *v14;
      v13[1] = v14[1];
      *(_DWORD *)((char *)a1 + v8[24]) = *(_DWORD *)((char *)a2 + v8[24]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

char *initializeWithTake for SFClientIdentity(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1A2AE3130();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE675F48);
    *(_DWORD *)&a1[v7[12]] = *(_DWORD *)&a2[v7[12]];
    *(_OWORD *)&a1[v7[16]] = *(_OWORD *)&a2[v7[16]];
    *(_OWORD *)&a1[v7[20]] = *(_OWORD *)&a2[v7[20]];
    *(_DWORD *)&a1[v7[24]] = *(_DWORD *)&a2[v7[24]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for SFClientIdentity(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;

  if (a1 != a2)
  {
    sub_1A2AA2640((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1A2AE3130();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE675F48);
      *(_DWORD *)&a1[v7[12]] = *(_DWORD *)&a2[v7[12]];
      *(_OWORD *)&a1[v7[16]] = *(_OWORD *)&a2[v7[16]];
      *(_OWORD *)&a1[v7[20]] = *(_OWORD *)&a2[v7[20]];
      *(_DWORD *)&a1[v7[24]] = *(_DWORD *)&a2[v7[24]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1A2AA412C()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  void *v3;
  char *v4;

  v3 = &unk_1A2B0B3D8;
  result = sub_1A2AE3130();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout();
    v4 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SFClientAccessLevel()
{
  return &type metadata for SFClientAccessLevel;
}

uint64_t sub_1A2AA41E4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67CFD0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1A2AE31B4();
  __swift_allocate_value_buffer(v3, qword_1EE6ADD18);
  __swift_project_value_buffer(v3, (uint64_t)qword_1EE6ADD18);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  return sub_1A2AE3190();
}

uint64_t sub_1A2AA42AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a2 + 56);
    for (i = (uint64_t *)(a1 + 56); ; i += 4)
    {
      v5 = *(i - 1);
      v6 = *i;
      v7 = *(v3 - 1);
      v8 = *v3;
      v9 = *(i - 3) == *(v3 - 3) && *(i - 2) == *(v3 - 2);
      if (!v9 && (sub_1A2AE3EE0() & 1) == 0)
        break;
      v10 = v5 == v7 && v6 == v8;
      if (!v10 && (sub_1A2AE3EE0() & 1) == 0)
        break;
      v3 += 4;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1A2AA4370(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  BOOL v20;
  uint64_t v22;
  uint64_t v23;

  v4 = sub_1A2AE2F44();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v22 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v17 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v22 = *(_QWORD *)(v8 + 72);
      v23 = v8;
      v13 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      v14 = v11 - 1;
      do
      {
        v15 = a1;
        v13(v10, a1 + v12, v4);
        v16 = a2;
        v13(v7, a2 + v12, v4);
        sub_1A296E8A4(&qword_1EE67CA58, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
        v17 = sub_1A2AE33DC();
        v18 = *(void (**)(char *, uint64_t))(v23 + 8);
        v18(v7, v4);
        v18(v10, v4);
        v20 = v14-- != 0;
        if ((v17 & 1) == 0)
          break;
        v12 += v22;
        a2 = v16;
        a1 = v15;
      }
      while (v20);
    }
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_1A2AA44F4(uint64_t a1, uint64_t a2)
{
  return sub_1A2AA4A64(a1, a2, &qword_1EE67F108, (uint64_t (*)(char *, char *))sub_1A2AA4BA0);
}

uint64_t sub_1A2AA4508(uint64_t a1, uint64_t a2)
{
  return sub_1A2AA4A64(a1, a2, &qword_1EE67F048, (uint64_t (*)(char *, char *))sub_1A2AA525C);
}

uint64_t sub_1A2AA451C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  char *v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v3 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v54 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (uint64_t *)((char *)&v54 - v14);
  MEMORY[0x1E0C80A78](v13);
  v18 = (uint64_t *)((char *)&v54 - v17);
  v63 = a1;
  v64 = a2;
  v19 = *(_QWORD *)(a1 + 16);
  if (v19 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v19 || v63 == v64)
    return 1;
  v20 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v57 = *(_QWORD *)(v16 + 72);
  v58 = v3;
  v59 = v12;
  v60 = v9;
  v61 = (uint64_t *)((char *)&v54 - v17);
  v62 = v15;
  while (1)
  {
    sub_1A297CDE4(v63 + v20, (uint64_t)v18, v3);
    sub_1A297CDE4(v64 + v20, (uint64_t)v15, v3);
    if (*v18 == *v15 && v18[1] == v15[1])
    {
      sub_1A297CDE4((uint64_t)v18, (uint64_t)v12, v3);
      sub_1A297CDE4((uint64_t)v15, (uint64_t)v9, v3);
    }
    else
    {
      v29 = sub_1A2AE3EE0();
      sub_1A297CDE4((uint64_t)v18, (uint64_t)v12, v3);
      sub_1A297CDE4((uint64_t)v15, (uint64_t)v9, v3);
      if ((v29 & 1) == 0)
        goto LABEL_34;
    }
    v31 = *((_QWORD *)v12 + 2);
    v30 = *((_QWORD *)v12 + 3);
    v33 = *((_QWORD *)v12 + 4);
    v32 = *((_QWORD *)v12 + 5);
    v34 = v12[48];
    v36 = v9[2];
    v35 = v9[3];
    v37 = v9;
    v38 = v9[4];
    v39 = v37[5];
    v40 = *((unsigned __int8 *)v37 + 48);
    v65 = v19;
    if (!v34)
    {
      if (v40)
        goto LABEL_32;
      goto LABEL_19;
    }
    if (v34 == 1)
    {
      if (v40 != 1)
        goto LABEL_32;
LABEL_19:
      if (v31 == v36 && v30 == v35)
        goto LABEL_5;
      v41 = v33;
      v42 = v32;
      v43 = v30;
      v56 = v39;
      v44 = v35;
      v45 = sub_1A2AE3EE0();
      v46 = v56;
      goto LABEL_29;
    }
    if (v40 != 2)
    {
LABEL_32:
      v47 = v30;
      v52 = v33;
      v49 = v32;
      goto LABEL_33;
    }
    if (v31 != v36 || v30 != v35)
    {
      v47 = v30;
      v56 = v39;
      v48 = v35;
      v49 = v32;
      v50 = sub_1A2AE3EE0();
      v30 = v47;
      v32 = v49;
      v35 = v48;
      v39 = v56;
      if ((v50 & 1) == 0)
        break;
    }
    if (v33 == v38 && v32 == v39)
    {
LABEL_5:
      v21 = v36;
      v22 = v30;
      v23 = v39;
      v24 = v33;
      v25 = v36;
      v26 = v35;
      v27 = v32;
      sub_1A2993E10(v21, v35, v38, v39, v34);
      sub_1A2993E10(v31, v22, v24, v27, v34);
      sub_1A2994DD4(v31, v22, v24, v27, v34);
      sub_1A2994DD4(v25, v26, v38, v23, v34);
      v9 = v60;
      v3 = v58;
      sub_1A296F108((uint64_t)v60, v58);
      v12 = v59;
      sub_1A296F108((uint64_t)v59, v3);
      v15 = v62;
      sub_1A296F108((uint64_t)v62, v3);
      v18 = v61;
      sub_1A296F108((uint64_t)v61, v3);
      goto LABEL_6;
    }
    v41 = v33;
    v42 = v32;
    v43 = v30;
    v56 = v38;
    v46 = v39;
    v44 = v35;
    v45 = sub_1A2AE3EE0();
    v38 = v56;
LABEL_29:
    v55 = v45;
    sub_1A2993E10(v36, v44, v38, v46, v34);
    sub_1A2993E10(v31, v43, v41, v42, v34);
    sub_1A2994DD4(v31, v43, v41, v42, v34);
    sub_1A2994DD4(v36, v44, v38, v46, v34);
    v9 = v60;
    v3 = v58;
    sub_1A296F108((uint64_t)v60, v58);
    v12 = v59;
    sub_1A296F108((uint64_t)v59, v3);
    v15 = v62;
    sub_1A296F108((uint64_t)v62, v3);
    v18 = v61;
    sub_1A296F108((uint64_t)v61, v3);
    if ((v55 & 1) == 0)
      return 0;
LABEL_6:
    v20 += v57;
    v19 = v65 - 1;
    if (v65 == 1)
      return 1;
  }
  v52 = v33;
  LOBYTE(v40) = 2;
  LOBYTE(v34) = 2;
LABEL_33:
  v54 = v35;
  v53 = v39;
  sub_1A2993E10(v36, v35, v38, v39, v40);
  sub_1A2993E10(v31, v47, v52, v49, v34);
  sub_1A2994DD4(v31, v47, v52, v49, v34);
  sub_1A2994DD4(v36, v54, v38, v53, v40);
  v18 = v61;
  v15 = v62;
  v12 = v59;
  v9 = v60;
  v3 = v58;
LABEL_34:
  sub_1A296F108((uint64_t)v9, v3);
  sub_1A296F108((uint64_t)v12, v3);
  sub_1A296F108((uint64_t)v15, v3);
  sub_1A296F108((uint64_t)v18, v3);
  return 0;
}

uint64_t sub_1A2AA4A3C(uint64_t a1, uint64_t a2)
{
  return sub_1A2AA4A64(a1, a2, &qword_1EE67F130, (uint64_t (*)(char *, char *))sub_1A2AA5918);
}

uint64_t sub_1A2AA4A50(uint64_t a1, uint64_t a2)
{
  return sub_1A2AA4A64(a1, a2, &qword_1EE67F0E0, (uint64_t (*)(char *, char *))sub_1A2AA5FD4);
}

uint64_t sub_1A2AA4A64(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(char *, char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  BOOL v21;
  uint64_t v23;

  v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v23 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15 == *(_QWORD *)(a2 + 16))
  {
    if (!v15 || a1 == a2)
    {
      v19 = 1;
    }
    else
    {
      v16 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v17 = *(_QWORD *)(v12 + 72);
      v18 = v15 - 1;
      do
      {
        sub_1A297CDE4(a1 + v16, (uint64_t)v14, a3);
        sub_1A297CDE4(a2 + v16, (uint64_t)v11, a3);
        v19 = a4(v14, v11);
        sub_1A296F108((uint64_t)v11, a3);
        sub_1A296F108((uint64_t)v14, a3);
        v21 = v18-- != 0;
        if ((v19 & 1) == 0)
          break;
        v16 += v17;
      }
      while (v21);
    }
  }
  else
  {
    v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_1A2AA4BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  _BYTE *v45;
  void (*v46)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  char v57;
  void (*v58)(_BYTE *, uint64_t);
  _QWORD *v59;
  _BYTE *v60;
  uint64_t v61;
  char *v62;
  uint64_t *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(_BYTE *, char *, uint64_t);
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  _BYTE *v71;
  char v72;
  unsigned __int8 v73;
  __int128 v74;
  unsigned __int8 v75;
  __int128 v76;
  char v77;
  void (*v78)(uint64_t, uint64_t);
  void (*v79)(_BYTE *, uint64_t);
  void (*v80)(uint64_t, uint64_t);
  _BYTE v82[12];
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  _BYTE *v88;
  _BYTE *v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  unsigned __int8 v95;
  __int128 v96;
  __int128 v97;
  unsigned __int8 v98;

  *((_QWORD *)&v90 + 1) = a2;
  v3 = sub_1A2AE3130();
  v91 = *(_QWORD *)(v3 - 8);
  v92 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v88 = &v82[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x1E0C80A78](v4);
  v89 = &v82[-v7];
  v8 = MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)&v90 = &v82[-v9];
  MEMORY[0x1E0C80A78](v8);
  v11 = &v82[-v10];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F110);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = &v82[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = &v82[-v17];
  MEMORY[0x1E0C80A78](v16);
  v20 = &v82[-v19];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F108);
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = &v82[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v22);
  v26 = &v82[-v25];
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F118);
  v28 = MEMORY[0x1E0C80A78](v27);
  v30 = &v82[*(int *)(v28 + 48) - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31 = a1;
  v32 = &v82[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A297CDE4(v31, (uint64_t)v32, &qword_1EE67F108);
  sub_1A297CDE4(*((uint64_t *)&v90 + 1), (uint64_t)v30, &qword_1EE67F108);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v89 = v15;
    *((_QWORD *)&v90 + 1) = v18;
    v59 = v20;
    v60 = (_BYTE *)v90;
    sub_1A297CDE4((uint64_t)v32, (uint64_t)v26, &qword_1EE67F108);
    v61 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F128) + 48);
    v62 = &v26[v61];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, uint64_t))(v91 + 8))(&v26[v61], v92);
      sub_1A296F108((uint64_t)v26, &qword_1EE67F110);
      goto LABEL_9;
    }
    v87 = v32;
    v64 = &v30[v61];
    sub_1A2990414((uint64_t)v30, (uint64_t)v59, &qword_1EE67F110);
    v66 = v91;
    v65 = v92;
    v67 = *(void (**)(_BYTE *, char *, uint64_t))(v91 + 32);
    v68 = v11;
    v67(v11, v62, v92);
    v69 = v60;
    v67(v60, v64, v65);
    if (*(_QWORD *)v26 == *v59 && *((_QWORD *)v26 + 1) == v59[1])
    {
      v70 = *((_QWORD *)&v90 + 1);
      sub_1A297CDE4((uint64_t)v26, *((uint64_t *)&v90 + 1), &qword_1EE67F110);
      v71 = v89;
      sub_1A297CDE4((uint64_t)v59, (uint64_t)v89, &qword_1EE67F110);
    }
    else
    {
      v72 = sub_1A2AE3EE0();
      v70 = *((_QWORD *)&v90 + 1);
      sub_1A297CDE4((uint64_t)v26, *((uint64_t *)&v90 + 1), &qword_1EE67F110);
      v71 = v89;
      sub_1A297CDE4((uint64_t)v59, (uint64_t)v89, &qword_1EE67F110);
      if ((v72 & 1) == 0)
      {
        sub_1A296F108((uint64_t)v71, &qword_1EE67F110);
        sub_1A296F108(v70, &qword_1EE67F110);
        sub_1A296F108((uint64_t)v26, &qword_1EE67F110);
        v32 = v87;
        goto LABEL_20;
      }
    }
    v73 = *(_BYTE *)(v70 + 48);
    v74 = *(_OWORD *)(v70 + 32);
    v96 = *(_OWORD *)(v70 + 16);
    v97 = v74;
    v98 = v73;
    v75 = v71[48];
    v76 = *((_OWORD *)v71 + 2);
    v93 = *((_OWORD *)v71 + 1);
    v94 = v76;
    v95 = v75;
    v77 = _s7Sharing9SFAirDropO19ButtonConfigurationO2eeoiySbAE_AEtFZ_0((uint64_t)&v96, (uint64_t)&v93);
    sub_1A296F108((uint64_t)v71, &qword_1EE67F110);
    sub_1A296F108(v70, &qword_1EE67F110);
    sub_1A296F108((uint64_t)v26, &qword_1EE67F110);
    v32 = v87;
    if ((v77 & 1) != 0)
    {
      v57 = _s7Sharing9SFAirDropO17PermissionRequestV18InterventionActionV2eeoiySbAGy_x_G_AItFZ_0();
      v78 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
      v78((uint64_t)v69, v65);
      v78((uint64_t)v68, v65);
      sub_1A296F108((uint64_t)v59, &qword_1EE67F110);
LABEL_21:
      v63 = &qword_1EE67F108;
      goto LABEL_22;
    }
LABEL_20:
    v80 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
    v80((uint64_t)v69, v65);
    v80((uint64_t)v68, v65);
    sub_1A296F108((uint64_t)v59, &qword_1EE67F110);
    v57 = 0;
    goto LABEL_21;
  }
  sub_1A297CDE4((uint64_t)v32, (uint64_t)v24, &qword_1EE67F108);
  v33 = *((_QWORD *)v24 + 1);
  v34 = *((_QWORD *)v24 + 2);
  *(_QWORD *)&v90 = *(_QWORD *)v24;
  *((_QWORD *)&v90 + 1) = v33;
  v35 = *((_QWORD *)v24 + 3);
  v36 = v24[32];
  v37 = *((_QWORD *)v24 + 5);
  v38 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F120) + 48);
  v39 = &v24[v38];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v87 = v32;
    v40 = *(_QWORD *)v30;
    v41 = *((_QWORD *)v30 + 1);
    v85 = v37;
    v86 = v40;
    v42 = *((_QWORD *)v30 + 2);
    v43 = *((_QWORD *)v30 + 3);
    v44 = v30[32];
    v84 = *((_QWORD *)v30 + 5);
    v45 = &v30[v38];
    v46 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v91 + 32);
    v47 = v39;
    v48 = v92;
    v46(v89, v47, v92);
    v46(v88, v45, v48);
    v96 = v90;
    v49 = v34;
    *(_QWORD *)&v97 = v34;
    *((_QWORD *)&v97 + 1) = v35;
    v50 = v44;
    v51 = v41;
    v52 = v86;
    v98 = v36;
    *(_QWORD *)&v93 = v86;
    *((_QWORD *)&v93 + 1) = v51;
    *(_QWORD *)&v94 = v42;
    *((_QWORD *)&v94 + 1) = v43;
    v95 = v50;
    if ((_s7Sharing9SFAirDropO19ButtonConfigurationO2eeoiySbAE_AEtFZ_0((uint64_t)&v96, (uint64_t)&v93) & 1) != 0)
    {
      v83 = sub_1A2AA451C(v85, v84, &qword_1EE67F110);
      sub_1A2994DD4(v52, v51, v42, v43, v50);
      swift_bridgeObjectRelease();
      sub_1A2994DD4(v90, *((uint64_t *)&v90 + 1), v49, v35, v36);
      swift_bridgeObjectRelease();
      v53 = v91;
      v54 = v92;
      v56 = v88;
      v55 = v89;
      if ((v83 & 1) != 0)
      {
        v57 = _s7Sharing9SFAirDropO17PermissionRequestV18InterventionActionV2eeoiySbAGy_x_G_AItFZ_0();
        v58 = *(void (**)(_BYTE *, uint64_t))(v53 + 8);
        v58(v56, v54);
        v58(v55, v54);
LABEL_18:
        v63 = &qword_1EE67F108;
        v32 = v87;
        goto LABEL_22;
      }
    }
    else
    {
      sub_1A2994DD4(v52, v51, v42, v43, v50);
      swift_bridgeObjectRelease();
      sub_1A2994DD4(v90, *((uint64_t *)&v90 + 1), v49, v35, v36);
      swift_bridgeObjectRelease();
      v53 = v91;
      v54 = v92;
      v56 = v88;
      v55 = v89;
    }
    v79 = *(void (**)(_BYTE *, uint64_t))(v53 + 8);
    v79(v56, v54);
    v79(v55, v54);
    v57 = 0;
    goto LABEL_18;
  }
  (*(void (**)(_BYTE *, uint64_t))(v91 + 8))(&v24[v38], v92);
  sub_1A2994DD4(v90, *((uint64_t *)&v90 + 1), v34, v35, v36);
  swift_bridgeObjectRelease();
LABEL_9:
  v57 = 0;
  v63 = &qword_1EE67F118;
LABEL_22:
  sub_1A296F108((uint64_t)v32, v63);
  return v57 & 1;
}

uint64_t sub_1A2AA525C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  _BYTE *v45;
  void (*v46)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  char v57;
  void (*v58)(_BYTE *, uint64_t);
  _QWORD *v59;
  _BYTE *v60;
  uint64_t v61;
  char *v62;
  uint64_t *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(_BYTE *, char *, uint64_t);
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  _BYTE *v71;
  char v72;
  unsigned __int8 v73;
  __int128 v74;
  unsigned __int8 v75;
  __int128 v76;
  char v77;
  void (*v78)(uint64_t, uint64_t);
  void (*v79)(_BYTE *, uint64_t);
  void (*v80)(uint64_t, uint64_t);
  _BYTE v82[12];
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  _BYTE *v88;
  _BYTE *v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  unsigned __int8 v95;
  __int128 v96;
  __int128 v97;
  unsigned __int8 v98;

  *((_QWORD *)&v90 + 1) = a2;
  v3 = sub_1A2AE3130();
  v91 = *(_QWORD *)(v3 - 8);
  v92 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v88 = &v82[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x1E0C80A78](v4);
  v89 = &v82[-v7];
  v8 = MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)&v90 = &v82[-v9];
  MEMORY[0x1E0C80A78](v8);
  v11 = &v82[-v10];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F050);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = &v82[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = &v82[-v17];
  MEMORY[0x1E0C80A78](v16);
  v20 = &v82[-v19];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F048);
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = &v82[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v22);
  v26 = &v82[-v25];
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F158);
  v28 = MEMORY[0x1E0C80A78](v27);
  v30 = &v82[*(int *)(v28 + 48) - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31 = a1;
  v32 = &v82[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A297CDE4(v31, (uint64_t)v32, &qword_1EE67F048);
  sub_1A297CDE4(*((uint64_t *)&v90 + 1), (uint64_t)v30, &qword_1EE67F048);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v89 = v15;
    *((_QWORD *)&v90 + 1) = v18;
    v59 = v20;
    v60 = (_BYTE *)v90;
    sub_1A297CDE4((uint64_t)v32, (uint64_t)v26, &qword_1EE67F048);
    v61 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F060) + 48);
    v62 = &v26[v61];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, uint64_t))(v91 + 8))(&v26[v61], v92);
      sub_1A296F108((uint64_t)v26, &qword_1EE67F050);
      goto LABEL_9;
    }
    v87 = v32;
    v64 = &v30[v61];
    sub_1A2990414((uint64_t)v30, (uint64_t)v59, &qword_1EE67F050);
    v66 = v91;
    v65 = v92;
    v67 = *(void (**)(_BYTE *, char *, uint64_t))(v91 + 32);
    v68 = v11;
    v67(v11, v62, v92);
    v69 = v60;
    v67(v60, v64, v65);
    if (*(_QWORD *)v26 == *v59 && *((_QWORD *)v26 + 1) == v59[1])
    {
      v70 = *((_QWORD *)&v90 + 1);
      sub_1A297CDE4((uint64_t)v26, *((uint64_t *)&v90 + 1), &qword_1EE67F050);
      v71 = v89;
      sub_1A297CDE4((uint64_t)v59, (uint64_t)v89, &qword_1EE67F050);
    }
    else
    {
      v72 = sub_1A2AE3EE0();
      v70 = *((_QWORD *)&v90 + 1);
      sub_1A297CDE4((uint64_t)v26, *((uint64_t *)&v90 + 1), &qword_1EE67F050);
      v71 = v89;
      sub_1A297CDE4((uint64_t)v59, (uint64_t)v89, &qword_1EE67F050);
      if ((v72 & 1) == 0)
      {
        sub_1A296F108((uint64_t)v71, &qword_1EE67F050);
        sub_1A296F108(v70, &qword_1EE67F050);
        sub_1A296F108((uint64_t)v26, &qword_1EE67F050);
        v32 = v87;
        goto LABEL_20;
      }
    }
    v73 = *(_BYTE *)(v70 + 48);
    v74 = *(_OWORD *)(v70 + 32);
    v96 = *(_OWORD *)(v70 + 16);
    v97 = v74;
    v98 = v73;
    v75 = v71[48];
    v76 = *((_OWORD *)v71 + 2);
    v93 = *((_OWORD *)v71 + 1);
    v94 = v76;
    v95 = v75;
    v77 = _s7Sharing9SFAirDropO19ButtonConfigurationO2eeoiySbAE_AEtFZ_0((uint64_t)&v96, (uint64_t)&v93);
    sub_1A296F108((uint64_t)v71, &qword_1EE67F050);
    sub_1A296F108(v70, &qword_1EE67F050);
    sub_1A296F108((uint64_t)v26, &qword_1EE67F050);
    v32 = v87;
    if ((v77 & 1) != 0)
    {
      v57 = _s7Sharing9SFAirDropO17PermissionRequestV18InterventionActionV2eeoiySbAGy_x_G_AItFZ_0();
      v78 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
      v78((uint64_t)v69, v65);
      v78((uint64_t)v68, v65);
      sub_1A296F108((uint64_t)v59, &qword_1EE67F050);
LABEL_21:
      v63 = &qword_1EE67F048;
      goto LABEL_22;
    }
LABEL_20:
    v80 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
    v80((uint64_t)v69, v65);
    v80((uint64_t)v68, v65);
    sub_1A296F108((uint64_t)v59, &qword_1EE67F050);
    v57 = 0;
    goto LABEL_21;
  }
  sub_1A297CDE4((uint64_t)v32, (uint64_t)v24, &qword_1EE67F048);
  v33 = *((_QWORD *)v24 + 1);
  v34 = *((_QWORD *)v24 + 2);
  *(_QWORD *)&v90 = *(_QWORD *)v24;
  *((_QWORD *)&v90 + 1) = v33;
  v35 = *((_QWORD *)v24 + 3);
  v36 = v24[32];
  v37 = *((_QWORD *)v24 + 5);
  v38 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F160) + 48);
  v39 = &v24[v38];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v87 = v32;
    v40 = *(_QWORD *)v30;
    v41 = *((_QWORD *)v30 + 1);
    v85 = v37;
    v86 = v40;
    v42 = *((_QWORD *)v30 + 2);
    v43 = *((_QWORD *)v30 + 3);
    v44 = v30[32];
    v84 = *((_QWORD *)v30 + 5);
    v45 = &v30[v38];
    v46 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v91 + 32);
    v47 = v39;
    v48 = v92;
    v46(v89, v47, v92);
    v46(v88, v45, v48);
    v96 = v90;
    v49 = v34;
    *(_QWORD *)&v97 = v34;
    *((_QWORD *)&v97 + 1) = v35;
    v50 = v44;
    v51 = v41;
    v52 = v86;
    v98 = v36;
    *(_QWORD *)&v93 = v86;
    *((_QWORD *)&v93 + 1) = v51;
    *(_QWORD *)&v94 = v42;
    *((_QWORD *)&v94 + 1) = v43;
    v95 = v50;
    if ((_s7Sharing9SFAirDropO19ButtonConfigurationO2eeoiySbAE_AEtFZ_0((uint64_t)&v96, (uint64_t)&v93) & 1) != 0)
    {
      v83 = sub_1A2AA451C(v85, v84, &qword_1EE67F050);
      sub_1A2994DD4(v52, v51, v42, v43, v50);
      swift_bridgeObjectRelease();
      sub_1A2994DD4(v90, *((uint64_t *)&v90 + 1), v49, v35, v36);
      swift_bridgeObjectRelease();
      v53 = v91;
      v54 = v92;
      v56 = v88;
      v55 = v89;
      if ((v83 & 1) != 0)
      {
        v57 = _s7Sharing9SFAirDropO17PermissionRequestV18InterventionActionV2eeoiySbAGy_x_G_AItFZ_0();
        v58 = *(void (**)(_BYTE *, uint64_t))(v53 + 8);
        v58(v56, v54);
        v58(v55, v54);
LABEL_18:
        v63 = &qword_1EE67F048;
        v32 = v87;
        goto LABEL_22;
      }
    }
    else
    {
      sub_1A2994DD4(v52, v51, v42, v43, v50);
      swift_bridgeObjectRelease();
      sub_1A2994DD4(v90, *((uint64_t *)&v90 + 1), v49, v35, v36);
      swift_bridgeObjectRelease();
      v53 = v91;
      v54 = v92;
      v56 = v88;
      v55 = v89;
    }
    v79 = *(void (**)(_BYTE *, uint64_t))(v53 + 8);
    v79(v56, v54);
    v79(v55, v54);
    v57 = 0;
    goto LABEL_18;
  }
  (*(void (**)(_BYTE *, uint64_t))(v91 + 8))(&v24[v38], v92);
  sub_1A2994DD4(v90, *((uint64_t *)&v90 + 1), v34, v35, v36);
  swift_bridgeObjectRelease();
LABEL_9:
  v57 = 0;
  v63 = &qword_1EE67F158;
LABEL_22:
  sub_1A296F108((uint64_t)v32, v63);
  return v57 & 1;
}

uint64_t sub_1A2AA5918(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  _BYTE *v45;
  void (*v46)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  char v57;
  void (*v58)(_BYTE *, uint64_t);
  _QWORD *v59;
  _BYTE *v60;
  uint64_t v61;
  char *v62;
  uint64_t *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(_BYTE *, char *, uint64_t);
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  _BYTE *v71;
  char v72;
  unsigned __int8 v73;
  __int128 v74;
  unsigned __int8 v75;
  __int128 v76;
  char v77;
  void (*v78)(uint64_t, uint64_t);
  void (*v79)(_BYTE *, uint64_t);
  void (*v80)(uint64_t, uint64_t);
  _BYTE v82[12];
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  _BYTE *v88;
  _BYTE *v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  unsigned __int8 v95;
  __int128 v96;
  __int128 v97;
  unsigned __int8 v98;

  *((_QWORD *)&v90 + 1) = a2;
  v3 = sub_1A2AE3130();
  v91 = *(_QWORD *)(v3 - 8);
  v92 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v88 = &v82[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x1E0C80A78](v4);
  v89 = &v82[-v7];
  v8 = MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)&v90 = &v82[-v9];
  MEMORY[0x1E0C80A78](v8);
  v11 = &v82[-v10];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F138);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = &v82[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = &v82[-v17];
  MEMORY[0x1E0C80A78](v16);
  v20 = &v82[-v19];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F130);
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = &v82[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v22);
  v26 = &v82[-v25];
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F140);
  v28 = MEMORY[0x1E0C80A78](v27);
  v30 = &v82[*(int *)(v28 + 48) - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31 = a1;
  v32 = &v82[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A297CDE4(v31, (uint64_t)v32, &qword_1EE67F130);
  sub_1A297CDE4(*((uint64_t *)&v90 + 1), (uint64_t)v30, &qword_1EE67F130);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v89 = v15;
    *((_QWORD *)&v90 + 1) = v18;
    v59 = v20;
    v60 = (_BYTE *)v90;
    sub_1A297CDE4((uint64_t)v32, (uint64_t)v26, &qword_1EE67F130);
    v61 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F150) + 48);
    v62 = &v26[v61];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, uint64_t))(v91 + 8))(&v26[v61], v92);
      sub_1A296F108((uint64_t)v26, &qword_1EE67F138);
      goto LABEL_9;
    }
    v87 = v32;
    v64 = &v30[v61];
    sub_1A2990414((uint64_t)v30, (uint64_t)v59, &qword_1EE67F138);
    v66 = v91;
    v65 = v92;
    v67 = *(void (**)(_BYTE *, char *, uint64_t))(v91 + 32);
    v68 = v11;
    v67(v11, v62, v92);
    v69 = v60;
    v67(v60, v64, v65);
    if (*(_QWORD *)v26 == *v59 && *((_QWORD *)v26 + 1) == v59[1])
    {
      v70 = *((_QWORD *)&v90 + 1);
      sub_1A297CDE4((uint64_t)v26, *((uint64_t *)&v90 + 1), &qword_1EE67F138);
      v71 = v89;
      sub_1A297CDE4((uint64_t)v59, (uint64_t)v89, &qword_1EE67F138);
    }
    else
    {
      v72 = sub_1A2AE3EE0();
      v70 = *((_QWORD *)&v90 + 1);
      sub_1A297CDE4((uint64_t)v26, *((uint64_t *)&v90 + 1), &qword_1EE67F138);
      v71 = v89;
      sub_1A297CDE4((uint64_t)v59, (uint64_t)v89, &qword_1EE67F138);
      if ((v72 & 1) == 0)
      {
        sub_1A296F108((uint64_t)v71, &qword_1EE67F138);
        sub_1A296F108(v70, &qword_1EE67F138);
        sub_1A296F108((uint64_t)v26, &qword_1EE67F138);
        v32 = v87;
        goto LABEL_20;
      }
    }
    v73 = *(_BYTE *)(v70 + 48);
    v74 = *(_OWORD *)(v70 + 32);
    v96 = *(_OWORD *)(v70 + 16);
    v97 = v74;
    v98 = v73;
    v75 = v71[48];
    v76 = *((_OWORD *)v71 + 2);
    v93 = *((_OWORD *)v71 + 1);
    v94 = v76;
    v95 = v75;
    v77 = _s7Sharing9SFAirDropO19ButtonConfigurationO2eeoiySbAE_AEtFZ_0((uint64_t)&v96, (uint64_t)&v93);
    sub_1A296F108((uint64_t)v71, &qword_1EE67F138);
    sub_1A296F108(v70, &qword_1EE67F138);
    sub_1A296F108((uint64_t)v26, &qword_1EE67F138);
    v32 = v87;
    if ((v77 & 1) != 0)
    {
      v57 = _s7Sharing9SFAirDropO17PermissionRequestV18InterventionActionV2eeoiySbAGy_x_G_AItFZ_0();
      v78 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
      v78((uint64_t)v69, v65);
      v78((uint64_t)v68, v65);
      sub_1A296F108((uint64_t)v59, &qword_1EE67F138);
LABEL_21:
      v63 = &qword_1EE67F130;
      goto LABEL_22;
    }
LABEL_20:
    v80 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
    v80((uint64_t)v69, v65);
    v80((uint64_t)v68, v65);
    sub_1A296F108((uint64_t)v59, &qword_1EE67F138);
    v57 = 0;
    goto LABEL_21;
  }
  sub_1A297CDE4((uint64_t)v32, (uint64_t)v24, &qword_1EE67F130);
  v33 = *((_QWORD *)v24 + 1);
  v34 = *((_QWORD *)v24 + 2);
  *(_QWORD *)&v90 = *(_QWORD *)v24;
  *((_QWORD *)&v90 + 1) = v33;
  v35 = *((_QWORD *)v24 + 3);
  v36 = v24[32];
  v37 = *((_QWORD *)v24 + 5);
  v38 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F148) + 48);
  v39 = &v24[v38];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v87 = v32;
    v40 = *(_QWORD *)v30;
    v41 = *((_QWORD *)v30 + 1);
    v85 = v37;
    v86 = v40;
    v42 = *((_QWORD *)v30 + 2);
    v43 = *((_QWORD *)v30 + 3);
    v44 = v30[32];
    v84 = *((_QWORD *)v30 + 5);
    v45 = &v30[v38];
    v46 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v91 + 32);
    v47 = v39;
    v48 = v92;
    v46(v89, v47, v92);
    v46(v88, v45, v48);
    v96 = v90;
    v49 = v34;
    *(_QWORD *)&v97 = v34;
    *((_QWORD *)&v97 + 1) = v35;
    v50 = v44;
    v51 = v41;
    v52 = v86;
    v98 = v36;
    *(_QWORD *)&v93 = v86;
    *((_QWORD *)&v93 + 1) = v51;
    *(_QWORD *)&v94 = v42;
    *((_QWORD *)&v94 + 1) = v43;
    v95 = v50;
    if ((_s7Sharing9SFAirDropO19ButtonConfigurationO2eeoiySbAE_AEtFZ_0((uint64_t)&v96, (uint64_t)&v93) & 1) != 0)
    {
      v83 = sub_1A2AA451C(v85, v84, &qword_1EE67F138);
      sub_1A2994DD4(v52, v51, v42, v43, v50);
      swift_bridgeObjectRelease();
      sub_1A2994DD4(v90, *((uint64_t *)&v90 + 1), v49, v35, v36);
      swift_bridgeObjectRelease();
      v53 = v91;
      v54 = v92;
      v56 = v88;
      v55 = v89;
      if ((v83 & 1) != 0)
      {
        v57 = _s7Sharing9SFAirDropO17PermissionRequestV18InterventionActionV2eeoiySbAGy_x_G_AItFZ_0();
        v58 = *(void (**)(_BYTE *, uint64_t))(v53 + 8);
        v58(v56, v54);
        v58(v55, v54);
LABEL_18:
        v63 = &qword_1EE67F130;
        v32 = v87;
        goto LABEL_22;
      }
    }
    else
    {
      sub_1A2994DD4(v52, v51, v42, v43, v50);
      swift_bridgeObjectRelease();
      sub_1A2994DD4(v90, *((uint64_t *)&v90 + 1), v49, v35, v36);
      swift_bridgeObjectRelease();
      v53 = v91;
      v54 = v92;
      v56 = v88;
      v55 = v89;
    }
    v79 = *(void (**)(_BYTE *, uint64_t))(v53 + 8);
    v79(v56, v54);
    v79(v55, v54);
    v57 = 0;
    goto LABEL_18;
  }
  (*(void (**)(_BYTE *, uint64_t))(v91 + 8))(&v24[v38], v92);
  sub_1A2994DD4(v90, *((uint64_t *)&v90 + 1), v34, v35, v36);
  swift_bridgeObjectRelease();
LABEL_9:
  v57 = 0;
  v63 = &qword_1EE67F140;
LABEL_22:
  sub_1A296F108((uint64_t)v32, v63);
  return v57 & 1;
}

uint64_t sub_1A2AA5FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  _BYTE *v45;
  void (*v46)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  char v57;
  void (*v58)(_BYTE *, uint64_t);
  _QWORD *v59;
  _BYTE *v60;
  uint64_t v61;
  char *v62;
  uint64_t *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(_BYTE *, char *, uint64_t);
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  _BYTE *v71;
  char v72;
  unsigned __int8 v73;
  __int128 v74;
  unsigned __int8 v75;
  __int128 v76;
  char v77;
  void (*v78)(uint64_t, uint64_t);
  void (*v79)(_BYTE *, uint64_t);
  void (*v80)(uint64_t, uint64_t);
  _BYTE v82[12];
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  _BYTE *v88;
  _BYTE *v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  unsigned __int8 v95;
  __int128 v96;
  __int128 v97;
  unsigned __int8 v98;

  *((_QWORD *)&v90 + 1) = a2;
  v3 = sub_1A2AE3130();
  v91 = *(_QWORD *)(v3 - 8);
  v92 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v88 = &v82[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x1E0C80A78](v4);
  v89 = &v82[-v7];
  v8 = MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)&v90 = &v82[-v9];
  MEMORY[0x1E0C80A78](v8);
  v11 = &v82[-v10];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F0E8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = &v82[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = &v82[-v17];
  MEMORY[0x1E0C80A78](v16);
  v20 = &v82[-v19];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F0E0);
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = &v82[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v22);
  v26 = &v82[-v25];
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F0F0);
  v28 = MEMORY[0x1E0C80A78](v27);
  v30 = &v82[*(int *)(v28 + 48) - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31 = a1;
  v32 = &v82[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A297CDE4(v31, (uint64_t)v32, &qword_1EE67F0E0);
  sub_1A297CDE4(*((uint64_t *)&v90 + 1), (uint64_t)v30, &qword_1EE67F0E0);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v89 = v15;
    *((_QWORD *)&v90 + 1) = v18;
    v59 = v20;
    v60 = (_BYTE *)v90;
    sub_1A297CDE4((uint64_t)v32, (uint64_t)v26, &qword_1EE67F0E0);
    v61 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F100) + 48);
    v62 = &v26[v61];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, uint64_t))(v91 + 8))(&v26[v61], v92);
      sub_1A296F108((uint64_t)v26, &qword_1EE67F0E8);
      goto LABEL_9;
    }
    v87 = v32;
    v64 = &v30[v61];
    sub_1A2990414((uint64_t)v30, (uint64_t)v59, &qword_1EE67F0E8);
    v66 = v91;
    v65 = v92;
    v67 = *(void (**)(_BYTE *, char *, uint64_t))(v91 + 32);
    v68 = v11;
    v67(v11, v62, v92);
    v69 = v60;
    v67(v60, v64, v65);
    if (*(_QWORD *)v26 == *v59 && *((_QWORD *)v26 + 1) == v59[1])
    {
      v70 = *((_QWORD *)&v90 + 1);
      sub_1A297CDE4((uint64_t)v26, *((uint64_t *)&v90 + 1), &qword_1EE67F0E8);
      v71 = v89;
      sub_1A297CDE4((uint64_t)v59, (uint64_t)v89, &qword_1EE67F0E8);
    }
    else
    {
      v72 = sub_1A2AE3EE0();
      v70 = *((_QWORD *)&v90 + 1);
      sub_1A297CDE4((uint64_t)v26, *((uint64_t *)&v90 + 1), &qword_1EE67F0E8);
      v71 = v89;
      sub_1A297CDE4((uint64_t)v59, (uint64_t)v89, &qword_1EE67F0E8);
      if ((v72 & 1) == 0)
      {
        sub_1A296F108((uint64_t)v71, &qword_1EE67F0E8);
        sub_1A296F108(v70, &qword_1EE67F0E8);
        sub_1A296F108((uint64_t)v26, &qword_1EE67F0E8);
        v32 = v87;
        goto LABEL_20;
      }
    }
    v73 = *(_BYTE *)(v70 + 48);
    v74 = *(_OWORD *)(v70 + 32);
    v96 = *(_OWORD *)(v70 + 16);
    v97 = v74;
    v98 = v73;
    v75 = v71[48];
    v76 = *((_OWORD *)v71 + 2);
    v93 = *((_OWORD *)v71 + 1);
    v94 = v76;
    v95 = v75;
    v77 = _s7Sharing9SFAirDropO19ButtonConfigurationO2eeoiySbAE_AEtFZ_0((uint64_t)&v96, (uint64_t)&v93);
    sub_1A296F108((uint64_t)v71, &qword_1EE67F0E8);
    sub_1A296F108(v70, &qword_1EE67F0E8);
    sub_1A296F108((uint64_t)v26, &qword_1EE67F0E8);
    v32 = v87;
    if ((v77 & 1) != 0)
    {
      v57 = _s7Sharing9SFAirDropO17PermissionRequestV18InterventionActionV2eeoiySbAGy_x_G_AItFZ_0();
      v78 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
      v78((uint64_t)v69, v65);
      v78((uint64_t)v68, v65);
      sub_1A296F108((uint64_t)v59, &qword_1EE67F0E8);
LABEL_21:
      v63 = &qword_1EE67F0E0;
      goto LABEL_22;
    }
LABEL_20:
    v80 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
    v80((uint64_t)v69, v65);
    v80((uint64_t)v68, v65);
    sub_1A296F108((uint64_t)v59, &qword_1EE67F0E8);
    v57 = 0;
    goto LABEL_21;
  }
  sub_1A297CDE4((uint64_t)v32, (uint64_t)v24, &qword_1EE67F0E0);
  v33 = *((_QWORD *)v24 + 1);
  v34 = *((_QWORD *)v24 + 2);
  *(_QWORD *)&v90 = *(_QWORD *)v24;
  *((_QWORD *)&v90 + 1) = v33;
  v35 = *((_QWORD *)v24 + 3);
  v36 = v24[32];
  v37 = *((_QWORD *)v24 + 5);
  v38 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F0F8) + 48);
  v39 = &v24[v38];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v87 = v32;
    v40 = *(_QWORD *)v30;
    v41 = *((_QWORD *)v30 + 1);
    v85 = v37;
    v86 = v40;
    v42 = *((_QWORD *)v30 + 2);
    v43 = *((_QWORD *)v30 + 3);
    v44 = v30[32];
    v84 = *((_QWORD *)v30 + 5);
    v45 = &v30[v38];
    v46 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v91 + 32);
    v47 = v39;
    v48 = v92;
    v46(v89, v47, v92);
    v46(v88, v45, v48);
    v96 = v90;
    v49 = v34;
    *(_QWORD *)&v97 = v34;
    *((_QWORD *)&v97 + 1) = v35;
    v50 = v44;
    v51 = v41;
    v52 = v86;
    v98 = v36;
    *(_QWORD *)&v93 = v86;
    *((_QWORD *)&v93 + 1) = v51;
    *(_QWORD *)&v94 = v42;
    *((_QWORD *)&v94 + 1) = v43;
    v95 = v50;
    if ((_s7Sharing9SFAirDropO19ButtonConfigurationO2eeoiySbAE_AEtFZ_0((uint64_t)&v96, (uint64_t)&v93) & 1) != 0)
    {
      v83 = sub_1A2AA451C(v85, v84, &qword_1EE67F0E8);
      sub_1A2994DD4(v52, v51, v42, v43, v50);
      swift_bridgeObjectRelease();
      sub_1A2994DD4(v90, *((uint64_t *)&v90 + 1), v49, v35, v36);
      swift_bridgeObjectRelease();
      v53 = v91;
      v54 = v92;
      v56 = v88;
      v55 = v89;
      if ((v83 & 1) != 0)
      {
        v57 = _s7Sharing9SFAirDropO17PermissionRequestV18InterventionActionV2eeoiySbAGy_x_G_AItFZ_0();
        v58 = *(void (**)(_BYTE *, uint64_t))(v53 + 8);
        v58(v56, v54);
        v58(v55, v54);
LABEL_18:
        v63 = &qword_1EE67F0E0;
        v32 = v87;
        goto LABEL_22;
      }
    }
    else
    {
      sub_1A2994DD4(v52, v51, v42, v43, v50);
      swift_bridgeObjectRelease();
      sub_1A2994DD4(v90, *((uint64_t *)&v90 + 1), v49, v35, v36);
      swift_bridgeObjectRelease();
      v53 = v91;
      v54 = v92;
      v56 = v88;
      v55 = v89;
    }
    v79 = *(void (**)(_BYTE *, uint64_t))(v53 + 8);
    v79(v56, v54);
    v79(v55, v54);
    v57 = 0;
    goto LABEL_18;
  }
  (*(void (**)(_BYTE *, uint64_t))(v91 + 8))(&v24[v38], v92);
  sub_1A2994DD4(v90, *((uint64_t *)&v90 + 1), v34, v35, v36);
  swift_bridgeObjectRelease();
LABEL_9:
  v57 = 0;
  v63 = &qword_1EE67F0F0;
LABEL_22:
  sub_1A296F108((uint64_t)v32, v63);
  return v57 & 1;
}

uint64_t SFItemDestinationAlertViewModel.Action.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFItemDestinationAlertViewModel.Action.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t SFItemDestinationAlertViewModel.Action.description.getter()
{
  sub_1A2AE3B20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  swift_bridgeObjectRetain();
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  return 0xD00000000000002ALL;
}

uint64_t sub_1A2AA67C0()
{
  _BYTE *v0;

  if (*v0)
    return 0x656C746974;
  else
    return 25705;
}

uint64_t sub_1A2AA67EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2AA88D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2AA6810()
{
  sub_1A2AA7C54();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AA6838()
{
  sub_1A2AA7C54();
  return sub_1A2AE4108();
}

uint64_t SFItemDestinationAlertViewModel.Action.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F028);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v9[1] = *(_QWORD *)(v1 + 24);
  v9[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2AA7C54();
  sub_1A2AE40E4();
  v12 = 0;
  sub_1A2AE3DF0();
  if (!v2)
  {
    v11 = 1;
    sub_1A2AE3DF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t SFItemDestinationAlertViewModel.Action.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F038);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2AA7C54();
  sub_1A2AE40C0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  v20 = 0;
  v9 = sub_1A2AE3D3C();
  v11 = v10;
  v19 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_1A2AE3D3C();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v16;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A2AA6B34@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SFItemDestinationAlertViewModel.Action.init(from:)(a1, a2);
}

uint64_t sub_1A2AA6B48(_QWORD *a1)
{
  return SFItemDestinationAlertViewModel.Action.encode(to:)(a1);
}

uint64_t SFItemDestinationAlertViewModel.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFItemDestinationAlertViewModel.message.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFItemDestinationAlertViewModel.actions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SFItemDestinationAlertViewModel.cancelAction.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[5];
  v3 = v1[6];
  v4 = v1[7];
  v5 = v1[8];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1A2AA7C98(v2, v3);
}

uint64_t SFItemDestinationAlertViewModel.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  sub_1A2AE3B20();
  sub_1A2AE34F0();
  swift_bridgeObjectRetain();
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  swift_bridgeObjectRetain();
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  v3 = swift_bridgeObjectRetain();
  MEMORY[0x1A8586CD0](v3, &type metadata for SFItemDestinationAlertViewModel.Action);
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  sub_1A2AA7C98(v1, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F040);
  sub_1A2AE3484();
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  return 0;
}

void __swiftcall SFItemDestinationAlertViewModel.init(title:message:actions:cancelAction:)(Sharing::SFItemDestinationAlertViewModel *__return_ptr retstr, Swift::String title, Swift::String message, Swift::OpaquePointer actions, Sharing::SFItemDestinationAlertViewModel::Action_optional cancelAction)
{
  Swift::String v5;

  v5 = *(Swift::String *)(cancelAction.value.id._countAndFlagsBits + 16);
  retstr->cancelAction.value.id = *(Swift::String *)cancelAction.value.id._countAndFlagsBits;
  retstr->title = title;
  retstr->message = message;
  retstr->actions = actions;
  retstr->cancelAction.value.title = v5;
}

uint64_t SFItemDestinationAlertViewModel.init(permissionRequest:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t result;
  uint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;

  v65 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F048);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F050);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B408);
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for SFAirDrop.DeclineAction();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B3C0);
  sub_1A297CDE4(a1 + *(int *)(v16 + 60), (uint64_t)v12, &qword_1EE67B408);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1A296F108((uint64_t)v12, &qword_1EE67B408);
    type metadata accessor for SFAirDropReceive.Failure();
    sub_1A296E8A4(&qword_1EE67F058, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return sub_1A296F108(a1, &qword_1EE67B3C0);
  }
  v59 = *v12;
  v17 = v12[1];
  v63 = v12[2];
  v64 = v17;
  v18 = v12[3];
  v19 = v12[4];
  v61 = a1;
  v62 = v18;
  v20 = (uint64_t)v12 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B418) + 80);
  v21 = v19;
  v60 = v15;
  sub_1A2A5CD34(v20, (uint64_t)v15);
  v22 = *(_QWORD *)(v19 + 16);
  if (v22)
  {
    v23 = *(unsigned __int8 *)(v4 + 80);
    v58 = v21;
    v24 = v21 + ((v23 + 32) & ~v23);
    v25 = *(_QWORD *)(v4 + 72);
    v71 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v66 = v25;
    v67 = v3;
    while (1)
    {
      sub_1A297CDE4(v24, (uint64_t)v6, &qword_1EE67F048);
      if (swift_getEnumCaseMultiPayload() != 1)
        break;
      sub_1A296F108((uint64_t)v6, &qword_1EE67F048);
LABEL_5:
      v24 += v25;
      if (!--v22)
      {
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
    }
    v26 = &v6[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F060) + 48)];
    sub_1A2990414((uint64_t)v6, (uint64_t)v9, &qword_1EE67F050);
    v27 = sub_1A2AE3130();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
    v28 = *((_QWORD *)v9 + 2);
    v29 = *((_QWORD *)v9 + 3);
    v30 = *((_QWORD *)v9 + 4);
    v31 = *((_QWORD *)v9 + 5);
    v32 = v9[48];
    v33 = v29;
    v34 = v28;
    v68 = v31;
    v69 = v30;
    if (v32)
    {
      if (v32 == 1)
      {
        v28 = 0;
        v33 = 0xE000000000000000;
        goto LABEL_12;
      }
      v33 = v31;
      v28 = v30;
    }
    swift_bridgeObjectRetain();
LABEL_12:
    swift_bridgeObjectRelease();
    v35 = HIBYTE(v33) & 0xF;
    if ((v33 & 0x2000000000000000) == 0)
      v35 = v28 & 0xFFFFFFFFFFFFLL;
    if (!v35)
      goto LABEL_25;
    v36 = *((_QWORD *)v9 + 1);
    v70 = *(_QWORD *)v9;
    if (v32)
    {
      if (v32 == 1)
      {
        v37 = 0;
        v29 = 0xE000000000000000;
LABEL_20:
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v71 = sub_1A296D864(0, v71[2] + 1, 1, v71);
        v39 = v71[2];
        v38 = v71[3];
        if (v39 >= v38 >> 1)
          v71 = sub_1A296D864((_QWORD *)(v38 > 1), v39 + 1, 1, v71);
        v40 = v71;
        v71[2] = v39 + 1;
        v41 = &v40[4 * v39];
        v41[4] = v70;
        v41[5] = v36;
        v41[6] = v37;
        v41[7] = v29;
LABEL_25:
        sub_1A296F108((uint64_t)v9, &qword_1EE67F050);
        v25 = v66;
        goto LABEL_5;
      }
      v29 = v68;
      v34 = v69;
    }
    swift_bridgeObjectRetain();
    v37 = v34;
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
  v71 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_29:
  v43 = (uint64_t *)v60;
  v45 = *((_QWORD *)v60 + 2);
  v44 = *((_QWORD *)v60 + 3);
  v46 = *((_QWORD *)v60 + 4);
  v47 = *((_QWORD *)v60 + 5);
  v48 = v60[48];
  v49 = v44;
  v50 = v45;
  if (v60[48])
  {
    if (v48 == 1)
    {
      v50 = 0;
      v49 = 0xE000000000000000;
      goto LABEL_34;
    }
    v49 = *((_QWORD *)v60 + 5);
    v50 = *((_QWORD *)v60 + 4);
  }
  swift_bridgeObjectRetain();
LABEL_34:
  swift_bridgeObjectRelease();
  v51 = HIBYTE(v49) & 0xF;
  if ((v49 & 0x2000000000000000) == 0)
    v51 = v50 & 0xFFFFFFFFFFFFLL;
  if (v51)
  {
    v53 = *v43;
    v52 = v43[1];
    if (v48)
    {
      if (v48 == 1)
      {
        v45 = 0;
        v44 = 0xE000000000000000;
LABEL_43:
        swift_bridgeObjectRetain();
        goto LABEL_44;
      }
      v44 = v47;
      v45 = v46;
    }
    swift_bridgeObjectRetain();
    goto LABEL_43;
  }
  v53 = 0;
  v52 = 0;
  v45 = 0;
  v44 = 0;
LABEL_44:
  v54 = v65;
  v55 = v59;
  sub_1A296F108(v61, &qword_1EE67B3C0);
  result = sub_1A2A69254((uint64_t)v43);
  v56 = v64;
  *v54 = v55;
  v54[1] = v56;
  v57 = v62;
  v54[2] = v63;
  v54[3] = v57;
  v54[4] = v71;
  v54[5] = v53;
  v54[6] = v52;
  v54[7] = v45;
  v54[8] = v44;
  return result;
}

uint64_t sub_1A2AA72C8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A2AA72F4 + 4 * byte_1A2B0B440[*v0]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_1A2AA72F4()
{
  return 0x6567617373656DLL;
}

uint64_t sub_1A2AA730C()
{
  return 0x736E6F69746361;
}

uint64_t sub_1A2AA7324()
{
  return 0x63416C65636E6163;
}

uint64_t sub_1A2AA7344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2AA89A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2AA7368()
{
  sub_1A2AA7E70();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AA7390()
{
  sub_1A2AA7E70();
  return sub_1A2AE4108();
}

uint64_t SFItemDestinationAlertViewModel.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F068);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v21 = v1[3];
  v22 = v7;
  v8 = v1[4];
  v19 = v1[5];
  v20 = v8;
  v9 = v1[6];
  v17 = v1[7];
  v18 = v9;
  v16 = v1[8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2AA7E70();
  sub_1A2AE40E4();
  LOBYTE(v24) = 0;
  v10 = v23;
  sub_1A2AE3DF0();
  if (!v10)
  {
    v11 = v19;
    v12 = v20;
    v14 = v17;
    v13 = v18;
    LOBYTE(v24) = 1;
    sub_1A2AE3DF0();
    v24 = v12;
    v28 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F078);
    sub_1A2AA7EF8(&qword_1EE67F080, (uint64_t (*)(void))sub_1A2AA7EB4, MEMORY[0x1E0DEAF10]);
    sub_1A2AE3E2C();
    v24 = v11;
    v25 = v13;
    v26 = v14;
    v27 = v16;
    v28 = 3;
    sub_1A2AA7EB4();
    sub_1A2AE3DE4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SFItemDestinationAlertViewModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F090);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2AA7E70();
  sub_1A2AE40C0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  LOBYTE(v32) = 0;
  v9 = sub_1A2AE3D3C();
  v11 = v10;
  v30 = v9;
  LOBYTE(v32) = 1;
  swift_bridgeObjectRetain();
  v12 = sub_1A2AE3D3C();
  v31 = v13;
  v29 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F078);
  v36 = 2;
  sub_1A2AA7EF8(&qword_1EE67F098, (uint64_t (*)(void))sub_1A2AA7F60, MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1A2AE3D78();
  v14 = v32;
  v36 = 3;
  sub_1A2AA7F60();
  v28 = v14;
  swift_bridgeObjectRetain();
  sub_1A2AE3D30();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v32;
  v16 = v33;
  v24 = v34;
  v26 = v35;
  v27 = v33;
  swift_bridgeObjectRetain();
  v17 = v31;
  swift_bridgeObjectRetain();
  v18 = v28;
  swift_bridgeObjectRetain();
  v25 = v15;
  v19 = v16;
  v20 = v24;
  sub_1A2AA7C98(v15, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v30;
  a2[1] = v11;
  a2[2] = v29;
  a2[3] = v17;
  a2[4] = v18;
  a2[5] = v15;
  v21 = v26;
  v22 = v27;
  a2[6] = v27;
  a2[7] = v20;
  a2[8] = v21;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1A2AA7FA4(v25, v22);
}

uint64_t sub_1A2AA7930@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SFItemDestinationAlertViewModel.init(from:)(a1, a2);
}

uint64_t sub_1A2AA7944(_QWORD *a1)
{
  return SFItemDestinationAlertViewModel.encode(to:)(a1);
}

unint64_t static SFItemDestinationAlertSettings.viewModel.getter()
{
  return 0xD000000000000024;
}

Sharing::SFItemDestinationAlertSettings_optional __swiftcall SFItemDestinationAlertSettings.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (Sharing::SFItemDestinationAlertSettings_optional)rawValue;
}

uint64_t SFItemDestinationAlertSettings.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t static SFAirDropInvocations.ItemDestinationAlert.supportsSecureCoding.getter()
{
  return 1;
}

id SFAirDropInvocations.ItemDestinationAlert.__allocating_init(name:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  objc_super v8;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR___SFXPCInvocation_name];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for SFXPCInvocation();
  return objc_msgSendSuper2(&v8, sel_init);
}

id SFAirDropInvocations.ItemDestinationAlert.init(name:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_super v5;

  v3 = &v2[OBJC_IVAR___SFXPCInvocation_name];
  *(_QWORD *)v3 = a1;
  *((_QWORD *)v3 + 1) = a2;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for SFXPCInvocation();
  return objc_msgSendSuper2(&v5, sel_init);
}

id SFAirDropInvocations.ItemDestinationAlert.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SFAirDropInvocations.ItemDestinationAlert.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id SFAirDropInvocations.ItemDestinationAlert.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_1A2A00984(a1);

  return v4;
}

id SFAirDropInvocations.ItemDestinationAlert.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_1A2A00984(a1);

  return v2;
}

id SFAirDropInvocations.ItemDestinationAlert.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s7Sharing31SFItemDestinationAlertViewModelV6ActionV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1A2AE3EE0(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_1A2AE3EE0();
  }
  return result;
}

unint64_t sub_1A2AA7C54()
{
  unint64_t result;

  result = qword_1EE67F030;
  if (!qword_1EE67F030)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0B8D4, &type metadata for SFItemDestinationAlertViewModel.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE67F030);
  }
  return result;
}

uint64_t sub_1A2AA7C98(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

BOOL _s7Sharing31SFItemDestinationAlertViewModelV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _BOOL8 result;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v6 = a1[5];
  v5 = a1[6];
  v7 = a2[2];
  v8 = a2[3];
  v10 = a2[4];
  v9 = a2[5];
  v11 = a2[6];
  v15 = a2[7];
  v16 = a1[7];
  v17 = a2[8];
  v18 = a1[8];
  if (*a1 == *a2 && a1[1] == a2[1] || (v12 = sub_1A2AE3EE0(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v3 == v8 || (v14 = sub_1A2AE3EE0(), result = 0, (v14 & 1) != 0))
    {
      if ((sub_1A2AA42AC(v4, v10) & 1) != 0)
      {
        if (v5)
        {
          if (v11)
            return (v6 == v9 && v5 == v11 || (sub_1A2AE3EE0() & 1) != 0)
                && (v16 == v15 && v18 == v17 || (sub_1A2AE3EE0() & 1) != 0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else if (!v11)
        {
          return 1;
        }
        sub_1A2AA7C98(v9, v11);
        sub_1A2AA7FA4(v6, v5);
        sub_1A2AA7FA4(v9, v11);
      }
      return 0;
    }
  }
  return result;
}

unint64_t sub_1A2AA7E70()
{
  unint64_t result;

  result = qword_1EE67F070;
  if (!qword_1EE67F070)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0B884, &type metadata for SFItemDestinationAlertViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE67F070);
  }
  return result;
}

unint64_t sub_1A2AA7EB4()
{
  unint64_t result;

  result = qword_1EE67F088;
  if (!qword_1EE67F088)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFItemDestinationAlertViewModel.Action, &type metadata for SFItemDestinationAlertViewModel.Action);
    atomic_store(result, (unint64_t *)&qword_1EE67F088);
  }
  return result;
}

uint64_t sub_1A2AA7EF8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE67F078);
    v8 = a2();
    result = MEMORY[0x1A85895EC](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A2AA7F60()
{
  unint64_t result;

  result = qword_1EE67F0A0;
  if (!qword_1EE67F0A0)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFItemDestinationAlertViewModel.Action, &type metadata for SFItemDestinationAlertViewModel.Action);
    atomic_store(result, (unint64_t *)&qword_1EE67F0A0);
  }
  return result;
}

uint64_t sub_1A2AA7FA4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A2AA7FD8()
{
  unint64_t result;

  result = qword_1EE67F0A8;
  if (!qword_1EE67F0A8)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFItemDestinationAlertSettings, &type metadata for SFItemDestinationAlertSettings);
    atomic_store(result, (unint64_t *)&qword_1EE67F0A8);
  }
  return result;
}

uint64_t sub_1A2AA801C()
{
  return sub_1A2AA8064(&qword_1EE67B6E0, (uint64_t)&protocol conformance descriptor for SFAirDrop.PermissionRequest<A>);
}

uint64_t sub_1A2AA8040()
{
  return sub_1A2AA8064(&qword_1EE67B568, (uint64_t)&protocol conformance descriptor for SFAirDrop.PermissionRequest<A>);
}

uint64_t sub_1A2AA8064(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE67B3C0);
    result = MEMORY[0x1A85895EC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for SFItemDestinationAlertViewModel(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 48);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for SFItemDestinationAlertViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  v6 = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    a1[5] = a2[5];
    a1[6] = v6;
    v7 = a2[7];
    v8 = a2[8];
    a1[7] = v7;
    a1[8] = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 7) = v9;
  }
  return a1;
}

_QWORD *assignWithCopy for SFItemDestinationAlertViewModel(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a1 + 5;
  v5 = a2 + 5;
  v6 = a2[6];
  if (a1[6])
  {
    if (v6)
    {
      a1[5] = a2[5];
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[7] = a2[7];
      a1[8] = a2[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A2AA82C8((uint64_t)(a1 + 5));
      v7 = *(_OWORD *)(a2 + 7);
      *v4 = *v5;
      *(_OWORD *)(a1 + 7) = v7;
    }
  }
  else if (v6)
  {
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 7);
    *v4 = *v5;
    *(_OWORD *)(a1 + 7) = v8;
  }
  return a1;
}

uint64_t sub_1A2AA82C8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SFItemDestinationAlertViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 48))
    goto LABEL_5;
  v6 = *(_QWORD *)(a2 + 48);
  if (!v6)
  {
    sub_1A2AA82C8(a1 + 40);
LABEL_5:
    v8 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v8;
    return a1;
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SFItemDestinationAlertViewModel()
{
  return &type metadata for SFItemDestinationAlertViewModel;
}

uint64_t destroy for SFItemDestinationAlertViewModel.Action()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SFItemDestinationAlertViewModel.Action(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SFItemDestinationAlertViewModel.Action(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for SFItemDestinationAlertViewModel.Action(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SFItemDestinationAlertViewModel.Action(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SFItemDestinationAlertViewModel.Action(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SFItemDestinationAlertViewModel.Action()
{
  return &type metadata for SFItemDestinationAlertViewModel.Action;
}

ValueMetadata *type metadata accessor for SFItemDestinationAlertSettings()
{
  return &type metadata for SFItemDestinationAlertSettings;
}

uint64_t type metadata accessor for SFAirDropInvocations.ItemDestinationAlert()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for SFItemDestinationAlertViewModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A2AA85D8 + 4 * byte_1A2B0B449[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A2AA860C + 4 * byte_1A2B0B444[v4]))();
}

uint64_t sub_1A2AA860C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2AA8614(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2AA861CLL);
  return result;
}

uint64_t sub_1A2AA8628(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2AA8630);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A2AA8634(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2AA863C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SFItemDestinationAlertViewModel.CodingKeys()
{
  return &type metadata for SFItemDestinationAlertViewModel.CodingKeys;
}

uint64_t _s7Sharing30SFItemDestinationAlertSettingsOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A2AA86A4 + 4 * byte_1A2B0B453[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A2AA86D8 + 4 * byte_1A2B0B44E[v4]))();
}

uint64_t sub_1A2AA86D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2AA86E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2AA86E8);
  return result;
}

uint64_t sub_1A2AA86F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2AA86FCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A2AA8700(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2AA8708(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SFItemDestinationAlertViewModel.Action.CodingKeys()
{
  return &type metadata for SFItemDestinationAlertViewModel.Action.CodingKeys;
}

unint64_t sub_1A2AA8728()
{
  unint64_t result;

  result = qword_1EE67F0B0;
  if (!qword_1EE67F0B0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0B7A4, &type metadata for SFItemDestinationAlertViewModel.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE67F0B0);
  }
  return result;
}

unint64_t sub_1A2AA8770()
{
  unint64_t result;

  result = qword_1EE67F0B8;
  if (!qword_1EE67F0B8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0B85C, &type metadata for SFItemDestinationAlertViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE67F0B8);
  }
  return result;
}

unint64_t sub_1A2AA87B8()
{
  unint64_t result;

  result = qword_1EE67F0C0;
  if (!qword_1EE67F0C0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0B7CC, &type metadata for SFItemDestinationAlertViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE67F0C0);
  }
  return result;
}

unint64_t sub_1A2AA8800()
{
  unint64_t result;

  result = qword_1EE67F0C8;
  if (!qword_1EE67F0C8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0B7F4, &type metadata for SFItemDestinationAlertViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE67F0C8);
  }
  return result;
}

unint64_t sub_1A2AA8848()
{
  unint64_t result;

  result = qword_1EE67F0D0;
  if (!qword_1EE67F0D0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0B714, &type metadata for SFItemDestinationAlertViewModel.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE67F0D0);
  }
  return result;
}

unint64_t sub_1A2AA8890()
{
  unint64_t result;

  result = qword_1EE67F0D8;
  if (!qword_1EE67F0D8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0B73C, &type metadata for SFItemDestinationAlertViewModel.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE67F0D8);
  }
  return result;
}

uint64_t sub_1A2AA88D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A2AA89A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736E6F69746361 && a2 == 0xE700000000000000 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x63416C65636E6163 && a2 == 0xEC0000006E6F6974)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void SFAirDropReceive.Failure.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  __int128 v15;
  id v17[2];
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v4 = type metadata accessor for SFAirDropReceive.Failure();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A2AE36B8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = a1;
  v11 = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE6767B0);
  if (swift_dynamicCast())
  {

    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
LABEL_5:

    return;
  }

  v17[0] = a1;
  v12 = a1;
  if (swift_dynamicCast())
  {

    sub_1A2AABD30((uint64_t)v6, a2);
    goto LABEL_5;
  }

  CodableError.init(_:)(a1, v17);
  v13 = v17[1];
  v14 = v20;
  *(id *)a2 = v17[0];
  *(_QWORD *)(a2 + 8) = v13;
  v15 = v19;
  *(_OWORD *)(a2 + 16) = v18;
  *(_OWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 48) = v14;
  swift_storeEnumTagMultiPayload();
}

void SFAirDropReceive.Failure.errorDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for SFAirDropReceive.Failure();
  MEMORY[0x1E0C80A78](v1);
  sub_1A2AABD74(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1A2AA8DA8 + 4 * byte_1A2B0B930[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A2AA8DA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
  *(_QWORD *)(v1 - 48) = 0;
  *(_QWORD *)(v1 - 40) = 0xE000000000000000;
  sub_1A2AE3B20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 - 48) = 0xD000000000000010;
  *(_QWORD *)(v1 - 40) = 0x80000001A2B48EC0;
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  v3 = *(_QWORD *)(v1 - 48);
  v4 = sub_1A2AE2F44();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  return v3;
}

void SFAirDropReceive.Failure.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_1A2AE2F44();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for SFAirDropReceive.Failure();
  MEMORY[0x1E0C80A78](v2);
  sub_1A2AABD74(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_1A2AA90A0 + 4 * byte_1A2B0B93F[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A2AA90A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v0 + *(int *)(v4 + 48), v1);
  sub_1A2AE4018();
  sub_1A2AE34C0();
  swift_bridgeObjectRelease();
  sub_1A296E8A4(&qword_1EE67C6E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  sub_1A2AE3394();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
}

uint64_t sub_1A2AA9210(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A2AA9244 + 4 * byte_1A2B0B94E[a1]))(0x64656E696C636564, 0xE800000000000000);
}

uint64_t sub_1A2AA9244()
{
  return 0x696D7369446B7361;
}

uint64_t sub_1A2AA9264()
{
  return 0x61437265646E6573;
}

unint64_t sub_1A2AA9288()
{
  return 0xD000000000000011;
}

uint64_t sub_1A2AA92E8()
{
  return 0x72456D6165727473;
}

uint64_t sub_1A2AA9308()
{
  return 0x6148746F4E6B7361;
}

unint64_t sub_1A2AA932C()
{
  return 0xD000000000000012;
}

uint64_t sub_1A2AA9344()
{
  return 0x6575716552646162;
}

uint64_t sub_1A2AA9360()
{
  return 0x726F707075736E75;
}

uint64_t sub_1A2AA9384()
{
  return 0x70416F5465766F6DLL;
}

void sub_1A2AA93A8()
{
  JUMPOUT(0x1A2AA93BCLL);
}

uint64_t sub_1A2AA93C8()
{
  return 0x7463657078656E75;
}

uint64_t sub_1A2AA93E4()
{
  sub_1A2AAC170();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AA940C()
{
  sub_1A2AAC170();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AA9434()
{
  sub_1A2AABF94();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AA945C()
{
  sub_1A2AABF94();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AA9484()
{
  sub_1A2AABF0C();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AA94AC()
{
  sub_1A2AABF0C();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AA94D4()
{
  unsigned __int8 *v0;

  return sub_1A2AA9210(*v0);
}

uint64_t sub_1A2AA94DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2AAD5B0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A2AA9500(_BYTE *a1@<X8>)
{
  *a1 = 15;
}

uint64_t sub_1A2AA950C()
{
  sub_1A2AABDB8();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AA9534()
{
  sub_1A2AABDB8();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AA955C()
{
  sub_1A2AAC1B4();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AA9584()
{
  sub_1A2AAC1B4();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AA95AC()
{
  sub_1A2AABF50();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AA95D4()
{
  sub_1A2AABF50();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AA95FC()
{
  sub_1A2AABE40();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AA9624()
{
  sub_1A2AABE40();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AA964C()
{
  sub_1A2AAC060();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AA9674()
{
  sub_1A2AAC060();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AA969C()
{
  sub_1A2AAC01C();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AA96C4()
{
  sub_1A2AAC01C();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AA96EC()
{
  sub_1A2AAC0A4();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AA9714()
{
  sub_1A2AAC0A4();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AA973C()
{
  sub_1A2AABE84();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AA9764()
{
  sub_1A2AABE84();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AA978C()
{
  sub_1A2AAC0E8();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AA97B4()
{
  sub_1A2AAC0E8();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AA97DC()
{
  sub_1A2AAC12C();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AA9804()
{
  sub_1A2AAC12C();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AA982C()
{
  sub_1A2AABFD8();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AA9854()
{
  sub_1A2AABFD8();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AA987C()
{
  sub_1A2AABDFC();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AA98A4()
{
  sub_1A2AABDFC();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AA98CC()
{
  _BYTE *v0;

  if (*v0)
    return 7107189;
  else
    return 6911093;
}

uint64_t sub_1A2AA98F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2AADC54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2AA9914()
{
  sub_1A2AABEC8();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AA993C()
{
  sub_1A2AABEC8();
  return sub_1A2AE4108();
}

void SFAirDropReceive.Failure.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  _QWORD v26[4];
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F168);
  v66 = *(_QWORD *)(v2 - 8);
  v67 = v2;
  MEMORY[0x1E0C80A78](v2);
  v64 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F170);
  v59 = *(_QWORD *)(v4 - 8);
  v60 = v4;
  MEMORY[0x1E0C80A78](v4);
  v58 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F178);
  v56 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v55 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F180);
  v26[1] = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v62 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_1A2AE2F44();
  v63 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v61 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F188);
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v52 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F190);
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v49 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F198);
  v47 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v46 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F1A0);
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v43 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F1A8);
  v41 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v40 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F1B0);
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v37 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F1B8);
  v35 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v34 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F1C0);
  v32 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v31 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F1C8);
  v29 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v28 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F1D0);
  v26[3] = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v26[2] = (char *)v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F1D8);
  MEMORY[0x1E0C80A78](v19);
  v20 = type metadata accessor for SFAirDropReceive.Failure();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F1E0);
  v69 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v24 = (char *)v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2AABDB8();
  v71 = v24;
  sub_1A2AE40E4();
  sub_1A2AABD74(v70, (uint64_t)v22);
  v25 = (char *)sub_1A2AA9F2C + 4 * word_1A2B0B95E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A2AA9F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0);
  v3 = *(_QWORD *)(v1 - 224);
  v4 = *(_QWORD *)(v1 - 240);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v3 + 32))(v4, v0 + *(int *)(v2 + 48), *(_QWORD *)(v1 - 184));
  *(_BYTE *)(v1 - 144) = 11;
  sub_1A2AABEC8();
  v5 = *(_QWORD *)(v1 - 232);
  v6 = *(_QWORD *)(v1 - 72);
  v7 = *(_QWORD *)(v1 - 152);
  sub_1A2AE3DB4();
  *(_BYTE *)(v1 - 144) = 0;
  v8 = *(_QWORD *)(v1 - 208);
  v9 = *(_QWORD *)(v1 - 168);
  sub_1A2AE3DF0();
  swift_bridgeObjectRelease();
  if (v9)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 536) + 8))(v5, v8);
    (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v4, *(_QWORD *)(v1 - 184));
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 176) + 8))(v7, v6);
  }
  else
  {
    *(_BYTE *)(v1 - 144) = 1;
    sub_1A296E8A4(&qword_1EE67B530, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    v11 = *(_QWORD *)(v1 - 184);
    sub_1A2AE3E2C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 536) + 8))(v5, v8);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v11);
    return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 - 176) + 8))(*(_QWORD *)(v1 - 152), *(_QWORD *)(v1 - 72));
  }
}

uint64_t SFAirDropReceive.Failure.hashValue.getter()
{
  sub_1A2AE400C();
  SFAirDropReceive.Failure.hash(into:)();
  return sub_1A2AE4030();
}

uint64_t SFAirDropReceive.Failure.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;

  v79 = a2;
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F268);
  v66 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v77 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F270);
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v78 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F278);
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v83 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F280);
  v65 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v82 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F288);
  v58 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v76 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F290);
  v56 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v75 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F298);
  v54 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v74 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F2A0);
  v52 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v81 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F2A8);
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v73 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F2B0);
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v72 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F2B8);
  v46 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v71 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F2C0);
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v70 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F2C8);
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v80 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F2D0);
  v40 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v69 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F2D8);
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v68 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F2E0);
  v18 = *(_QWORD *)(v84 - 8);
  MEMORY[0x1E0C80A78](v84);
  v20 = (char *)v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for SFAirDropReceive.Failure();
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)v36 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v22);
  v27 = (char *)v36 - v26;
  MEMORY[0x1E0C80A78](v25);
  v28 = a1[3];
  v85 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v28);
  sub_1A2AABDB8();
  v29 = v86;
  sub_1A2AE40C0();
  if (!v29)
  {
    v36[0] = v24;
    v36[1] = v27;
    v36[2] = 0;
    v37 = v21;
    v86 = v18;
    v30 = sub_1A2AE3D9C();
    if (*(_QWORD *)(v30 + 16) == 1)
      __asm { BR              X10 }
    v31 = sub_1A2AE3B5C();
    swift_allocError();
    v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE67AC00);
    *v33 = v37;
    v34 = v84;
    sub_1A2AE3CF4();
    sub_1A2AE3B50();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v33, *MEMORY[0x1E0DEC450], v31);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v20, v34);
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v85);
}

void sub_1A2AAB4F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  *(_BYTE *)(v2 - 144) = 14;
  sub_1A2AABDFC();
  v3 = *(_QWORD *)(v2 - 216);
  v4 = v0;
  v5 = v1;
  v6 = *(_QWORD *)(v2 - 544);
  sub_1A2AE3CE8();
  if (!v6)
  {
    sub_1A2A3131C();
    v7 = *(_QWORD *)(v2 - 320);
    sub_1A2AE3D78();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 304) + 8))(v3, v7);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 72) + 8))(v5, v4);
    v8 = *(_QWORD *)(v2 - 136);
    v9 = *(_QWORD *)(v2 - 96);
    v10 = *(_QWORD *)(v2 - 560);
    *(_QWORD *)v10 = *(_QWORD *)(v2 - 144);
    *(_QWORD *)(v10 + 8) = v8;
    v11 = *(_OWORD *)(v2 - 112);
    *(_OWORD *)(v10 + 16) = *(_OWORD *)(v2 - 128);
    *(_OWORD *)(v10 + 32) = v11;
    *(_QWORD *)(v10 + 48) = v9;
    JUMPOUT(0x1A2AAB78CLL);
  }
  swift_bridgeObjectRelease();
  JUMPOUT(0x1A2AAB5A8);
}

uint64_t sub_1A2AAB7A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDropReceive.Failure.init(from:)(a1, a2);
}

void sub_1A2AAB7B4(_QWORD *a1)
{
  SFAirDropReceive.Failure.encode(to:)(a1);
}

uint64_t sub_1A2AAB7C8()
{
  sub_1A2AE400C();
  SFAirDropReceive.Failure.hash(into:)();
  return sub_1A2AE4030();
}

uint64_t sub_1A2AAB808()
{
  sub_1A2AE400C();
  SFAirDropReceive.Failure.hash(into:)();
  return sub_1A2AE4030();
}

void _s7Sharing16SFAirDropReceiveO7FailureO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  char *v11;
  _BYTE v12[16];
  uint64_t v13;

  v13 = sub_1A2AE2F44();
  v4 = MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for SFAirDropReceive.Failure();
  v6 = MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F408);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = &v12[*(int *)(v8 + 48) - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A2AABD74(a1, (uint64_t)&v12[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  sub_1A2AABD74(a2, (uint64_t)v10);
  v11 = (char *)sub_1A2AAB998 + 4 * byte_1A2B0B99A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A2AAB998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v13;
  char *v14;
  void (*v15)(uint64_t, char *, uint64_t);
  char *v16;
  uint64_t v17;
  char v19;
  void (*v20)(uint64_t, uint64_t);
  void (*v21)(uint64_t, uint64_t);

  sub_1A2AABD74(v0, (uint64_t)v5);
  v8 = *v5;
  v7 = v5[1];
  v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
  v10 = (char *)v5 + v9;
  if (!swift_getEnumCaseMultiPayload())
  {
    v13 = v4[1];
    *(_QWORD *)(v6 - 216) = *v4;
    v14 = (char *)v4 + v9;
    v15 = *(void (**)(uint64_t, char *, uint64_t))(v1 + 32);
    v16 = v10;
    v17 = *(_QWORD *)(v6 - 208);
    v15(v2, v16, v17);
    v15(v3, v14, v17);
    if (v8 == *(_QWORD *)(v6 - 216) && v7 == v13)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v19 = sub_1A2AE3EE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
      {
        v20 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
        v20(v3, v17);
        v20(v2, v17);
        sub_1A2AAC628(v0);
        goto LABEL_3;
      }
    }
    v11 = MEMORY[0x1A85865BC](v2, v3);
    v21 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
    v21(v3, v17);
    v21(v2, v17);
    sub_1A2AAC628(v0);
    return v11 & 1;
  }
  (*(void (**)(char *, _QWORD))(v1 + 8))(v10, *(_QWORD *)(v6 - 208));
  swift_bridgeObjectRelease();
  sub_1A2AADD24(v0);
LABEL_3:
  v11 = 0;
  return v11 & 1;
}

uint64_t type metadata accessor for SFAirDropReceive.Failure()
{
  uint64_t result;

  result = qword_1EE6747A8;
  if (!qword_1EE6747A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A2AABD30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SFAirDropReceive.Failure();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A2AABD74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SFAirDropReceive.Failure();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A2AABDB8()
{
  unint64_t result;

  result = qword_1EE67F1E8;
  if (!qword_1EE67F1E8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C860, &_s7FailureO10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67F1E8);
  }
  return result;
}

unint64_t sub_1A2AABDFC()
{
  unint64_t result;

  result = qword_1EE67F1F0;
  if (!qword_1EE67F1F0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C810, &_s7FailureO20UnexpectedCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67F1F0);
  }
  return result;
}

unint64_t sub_1A2AABE40()
{
  unint64_t result;

  result = qword_1EE67F1F8;
  if (!qword_1EE67F1F8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C7C0, &_s7FailureO29InsufficientStorageCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67F1F8);
  }
  return result;
}

unint64_t sub_1A2AABE84()
{
  unint64_t result;

  result = qword_1EE67F200;
  if (!qword_1EE67F200)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C770, &_s7FailureO25MoveToAppFailedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F200);
  }
  return result;
}

unint64_t sub_1A2AABEC8()
{
  unint64_t result;

  result = qword_1EE67F208;
  if (!qword_1EE67F208)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C720, &_s7FailureO25UnsupportedTypeCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F208);
  }
  return result;
}

unint64_t sub_1A2AABF0C()
{
  unint64_t result;

  result = qword_1EE67F210;
  if (!qword_1EE67F210)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C6D0, &_s7FailureO20BadRequestCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67F210);
  }
  return result;
}

unint64_t sub_1A2AABF50()
{
  unint64_t result;

  result = qword_1EE67F218;
  if (!qword_1EE67F218)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C680, &_s7FailureO28IncompleteTransferCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F218);
  }
  return result;
}

unint64_t sub_1A2AABF94()
{
  unint64_t result;

  result = qword_1EE67F220;
  if (!qword_1EE67F220)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C630, &_s7FailureO23AskNotHandledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F220);
  }
  return result;
}

unint64_t sub_1A2AABFD8()
{
  unint64_t result;

  result = qword_1EE67F228;
  if (!qword_1EE67F228)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C5E0, &_s7FailureO21StreamErrorCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67F228);
  }
  return result;
}

unint64_t sub_1A2AAC01C()
{
  unint64_t result;

  result = qword_1EE67F230;
  if (!qword_1EE67F230)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C590, &_s7FailureO27MissingOwnContactCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67F230);
  }
  return result;
}

unint64_t sub_1A2AAC060()
{
  unint64_t result;

  result = qword_1EE67F238;
  if (!qword_1EE67F238)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C540, &_s7FailureO34MissingDownloadDirectoryCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67F238);
  }
  return result;
}

unint64_t sub_1A2AAC0A4()
{
  unint64_t result;

  result = qword_1EE67F240;
  if (!qword_1EE67F240)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C4F0, &_s7FailureO20MixedTypesCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F240);
  }
  return result;
}

unint64_t sub_1A2AAC0E8()
{
  unint64_t result;

  result = qword_1EE67F248;
  if (!qword_1EE67F248)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C4A0, &_s7FailureO27ReceiverCancelledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F248);
  }
  return result;
}

unint64_t sub_1A2AAC12C()
{
  unint64_t result;

  result = qword_1EE67F250;
  if (!qword_1EE67F250)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C450, &_s7FailureO25SenderCancelledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F250);
  }
  return result;
}

unint64_t sub_1A2AAC170()
{
  unint64_t result;

  result = qword_1EE67F258;
  if (!qword_1EE67F258)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C400, &_s7FailureO22AskDismissedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F258);
  }
  return result;
}

unint64_t sub_1A2AAC1B4()
{
  unint64_t result;

  result = qword_1EE67F260;
  if (!qword_1EE67F260)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C3B0, &_s7FailureO18DeclinedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F260);
  }
  return result;
}

uint64_t sub_1A2AAC1F8()
{
  return sub_1A296E8A4(&qword_1EE67F2E8, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
}

uint64_t sub_1A2AAC224()
{
  return sub_1A296E8A4(&qword_1EE67F058, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
}

_QWORD *_s7FailureOwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      v15 = a2[5];
      a1[4] = a2[4];
      a1[5] = v15;
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_1A2AE2F44();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t _s7FailureOwxx(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
    v4 = sub_1A2AE2F44();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  return result;
}

_QWORD *_s7FailureOwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v12 = a2[1];
    *a1 = *a2;
    a1[1] = v12;
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    v13 = a2[5];
    a1[4] = a2[4];
    a1[5] = v13;
    a1[6] = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1A2AE2F44();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *_s7FailureOwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1A2AAC628((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1A2AE2F44();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1A2AAC628(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SFAirDropReceive.Failure();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *_s7FailureOwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1A2AE2F44();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *_s7FailureOwta(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1A2AAC628((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1A2AE2F44();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1A2AAC7C4()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  result = sub_1A2AE2F44();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[4] = v2;
    v2[5] = &unk_1A2B0BB30;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t _s7FailureO10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF2)
    goto LABEL_17;
  if (a2 + 14 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 14) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 14;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 14;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 14;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v8 = v6 - 15;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s7FailureO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1A2AAC920 + 4 * byte_1A2B0B9AE[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1A2AAC954 + 4 * byte_1A2B0B9A9[v4]))();
}

uint64_t sub_1A2AAC954(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2AAC95C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2AAC964);
  return result;
}

uint64_t sub_1A2AAC970(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2AAC978);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1A2AAC97C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2AAC984(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7FailureO10CodingKeysOMa_0()
{
  return &_s7FailureO10CodingKeysON_0;
}

ValueMetadata *_s7FailureO18DeclinedCodingKeysOMa()
{
  return &_s7FailureO18DeclinedCodingKeysON;
}

ValueMetadata *_s7FailureO22AskDismissedCodingKeysOMa()
{
  return &_s7FailureO22AskDismissedCodingKeysON;
}

ValueMetadata *_s7FailureO25SenderCancelledCodingKeysOMa()
{
  return &_s7FailureO25SenderCancelledCodingKeysON;
}

ValueMetadata *_s7FailureO27ReceiverCancelledCodingKeysOMa()
{
  return &_s7FailureO27ReceiverCancelledCodingKeysON;
}

ValueMetadata *_s7FailureO20MixedTypesCodingKeysOMa()
{
  return &_s7FailureO20MixedTypesCodingKeysON;
}

ValueMetadata *_s7FailureO34MissingDownloadDirectoryCodingKeysOMa_0()
{
  return &_s7FailureO34MissingDownloadDirectoryCodingKeysON_0;
}

ValueMetadata *_s7FailureO27MissingOwnContactCodingKeysOMa_0()
{
  return &_s7FailureO27MissingOwnContactCodingKeysON_0;
}

ValueMetadata *_s7FailureO21StreamErrorCodingKeysOMa_0()
{
  return &_s7FailureO21StreamErrorCodingKeysON_0;
}

ValueMetadata *_s7FailureO23AskNotHandledCodingKeysOMa()
{
  return &_s7FailureO23AskNotHandledCodingKeysON;
}

ValueMetadata *_s7FailureO28IncompleteTransferCodingKeysOMa()
{
  return &_s7FailureO28IncompleteTransferCodingKeysON;
}

ValueMetadata *_s7FailureO20BadRequestCodingKeysOMa_0()
{
  return &_s7FailureO20BadRequestCodingKeysON_0;
}

uint64_t _s7FailureO25UnsupportedTypeCodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A2AACA9C + 4 * byte_1A2B0B9B8[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A2AACAD0 + 4 * byte_1A2B0B9B3[v4]))();
}

uint64_t sub_1A2AACAD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2AACAD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2AACAE0);
  return result;
}

uint64_t sub_1A2AACAEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2AACAF4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A2AACAF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2AACB00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7FailureO25UnsupportedTypeCodingKeysOMa()
{
  return &_s7FailureO25UnsupportedTypeCodingKeysON;
}

ValueMetadata *_s7FailureO25MoveToAppFailedCodingKeysOMa()
{
  return &_s7FailureO25MoveToAppFailedCodingKeysON;
}

ValueMetadata *_s7FailureO29InsufficientStorageCodingKeysOMa_0()
{
  return &_s7FailureO29InsufficientStorageCodingKeysON_0;
}

uint64_t _s7FailureO20UnexpectedCodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A2AACB7C + 4 * byte_1A2B0B9BD[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A2AACB9C + 4 * byte_1A2B0B9C2[v4]))();
}

_BYTE *sub_1A2AACB7C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A2AACB9C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A2AACBA4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A2AACBAC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A2AACBB4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A2AACBBC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s7FailureO20UnexpectedCodingKeysOMa_0()
{
  return &_s7FailureO20UnexpectedCodingKeysON_0;
}

unint64_t sub_1A2AACBDC()
{
  unint64_t result;

  result = qword_1EE67F2F0;
  if (!qword_1EE67F2F0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0BE08, &_s7FailureO20UnexpectedCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67F2F0);
  }
  return result;
}

unint64_t sub_1A2AACC24()
{
  unint64_t result;

  result = qword_1EE67F2F8;
  if (!qword_1EE67F2F8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0BF60, &_s7FailureO25UnsupportedTypeCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F2F8);
  }
  return result;
}

unint64_t sub_1A2AACC6C()
{
  unint64_t result;

  result = qword_1EE67F300;
  if (!qword_1EE67F300)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C388, &_s7FailureO10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67F300);
  }
  return result;
}

unint64_t sub_1A2AACCB4()
{
  unint64_t result;

  result = qword_1EE67F308;
  if (!qword_1EE67F308)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C2A8, &_s7FailureO18DeclinedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F308);
  }
  return result;
}

unint64_t sub_1A2AACCFC()
{
  unint64_t result;

  result = qword_1EE67F310;
  if (!qword_1EE67F310)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C2D0, &_s7FailureO18DeclinedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F310);
  }
  return result;
}

unint64_t sub_1A2AACD44()
{
  unint64_t result;

  result = qword_1EE67F318;
  if (!qword_1EE67F318)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C258, &_s7FailureO22AskDismissedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F318);
  }
  return result;
}

unint64_t sub_1A2AACD8C()
{
  unint64_t result;

  result = qword_1EE67F320;
  if (!qword_1EE67F320)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C280, &_s7FailureO22AskDismissedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F320);
  }
  return result;
}

unint64_t sub_1A2AACDD4()
{
  unint64_t result;

  result = qword_1EE67F328;
  if (!qword_1EE67F328)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C208, &_s7FailureO25SenderCancelledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F328);
  }
  return result;
}

unint64_t sub_1A2AACE1C()
{
  unint64_t result;

  result = qword_1EE67F330;
  if (!qword_1EE67F330)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C230, &_s7FailureO25SenderCancelledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F330);
  }
  return result;
}

unint64_t sub_1A2AACE64()
{
  unint64_t result;

  result = qword_1EE67F338;
  if (!qword_1EE67F338)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C1B8, &_s7FailureO27ReceiverCancelledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F338);
  }
  return result;
}

unint64_t sub_1A2AACEAC()
{
  unint64_t result;

  result = qword_1EE67F340;
  if (!qword_1EE67F340)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C1E0, &_s7FailureO27ReceiverCancelledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F340);
  }
  return result;
}

unint64_t sub_1A2AACEF4()
{
  unint64_t result;

  result = qword_1EE67F348;
  if (!qword_1EE67F348)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C168, &_s7FailureO20MixedTypesCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F348);
  }
  return result;
}

unint64_t sub_1A2AACF3C()
{
  unint64_t result;

  result = qword_1EE67F350;
  if (!qword_1EE67F350)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C190, &_s7FailureO20MixedTypesCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F350);
  }
  return result;
}

unint64_t sub_1A2AACF84()
{
  unint64_t result;

  result = qword_1EE67F358;
  if (!qword_1EE67F358)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C118, &_s7FailureO34MissingDownloadDirectoryCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67F358);
  }
  return result;
}

unint64_t sub_1A2AACFCC()
{
  unint64_t result;

  result = qword_1EE67F360;
  if (!qword_1EE67F360)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C140, &_s7FailureO34MissingDownloadDirectoryCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67F360);
  }
  return result;
}

unint64_t sub_1A2AAD014()
{
  unint64_t result;

  result = qword_1EE67F368;
  if (!qword_1EE67F368)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C0C8, &_s7FailureO27MissingOwnContactCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67F368);
  }
  return result;
}

unint64_t sub_1A2AAD05C()
{
  unint64_t result;

  result = qword_1EE67F370;
  if (!qword_1EE67F370)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C0F0, &_s7FailureO27MissingOwnContactCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67F370);
  }
  return result;
}

unint64_t sub_1A2AAD0A4()
{
  unint64_t result;

  result = qword_1EE67F378;
  if (!qword_1EE67F378)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C078, &_s7FailureO21StreamErrorCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67F378);
  }
  return result;
}

unint64_t sub_1A2AAD0EC()
{
  unint64_t result;

  result = qword_1EE67F380;
  if (!qword_1EE67F380)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C0A0, &_s7FailureO21StreamErrorCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67F380);
  }
  return result;
}

unint64_t sub_1A2AAD134()
{
  unint64_t result;

  result = qword_1EE67F388;
  if (!qword_1EE67F388)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C028, &_s7FailureO23AskNotHandledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F388);
  }
  return result;
}

unint64_t sub_1A2AAD17C()
{
  unint64_t result;

  result = qword_1EE67F390;
  if (!qword_1EE67F390)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C050, &_s7FailureO23AskNotHandledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F390);
  }
  return result;
}

unint64_t sub_1A2AAD1C4()
{
  unint64_t result;

  result = qword_1EE67F398;
  if (!qword_1EE67F398)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0BFD8, &_s7FailureO28IncompleteTransferCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F398);
  }
  return result;
}

unint64_t sub_1A2AAD20C()
{
  unint64_t result;

  result = qword_1EE67F3A0;
  if (!qword_1EE67F3A0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C000, &_s7FailureO28IncompleteTransferCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F3A0);
  }
  return result;
}

unint64_t sub_1A2AAD254()
{
  unint64_t result;

  result = qword_1EE67F3A8;
  if (!qword_1EE67F3A8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0BF88, &_s7FailureO20BadRequestCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67F3A8);
  }
  return result;
}

unint64_t sub_1A2AAD29C()
{
  unint64_t result;

  result = qword_1EE67F3B0;
  if (!qword_1EE67F3B0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0BFB0, &_s7FailureO20BadRequestCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67F3B0);
  }
  return result;
}

unint64_t sub_1A2AAD2E4()
{
  unint64_t result;

  result = qword_1EE67F3B8;
  if (!qword_1EE67F3B8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0BED0, &_s7FailureO25UnsupportedTypeCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F3B8);
  }
  return result;
}

unint64_t sub_1A2AAD32C()
{
  unint64_t result;

  result = qword_1EE67F3C0;
  if (!qword_1EE67F3C0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0BEF8, &_s7FailureO25UnsupportedTypeCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F3C0);
  }
  return result;
}

unint64_t sub_1A2AAD374()
{
  unint64_t result;

  result = qword_1EE67F3C8;
  if (!qword_1EE67F3C8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0BE80, &_s7FailureO25MoveToAppFailedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F3C8);
  }
  return result;
}

unint64_t sub_1A2AAD3BC()
{
  unint64_t result;

  result = qword_1EE67F3D0;
  if (!qword_1EE67F3D0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0BEA8, &_s7FailureO25MoveToAppFailedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F3D0);
  }
  return result;
}

unint64_t sub_1A2AAD404()
{
  unint64_t result;

  result = qword_1EE67F3D8;
  if (!qword_1EE67F3D8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0BE30, &_s7FailureO29InsufficientStorageCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67F3D8);
  }
  return result;
}

unint64_t sub_1A2AAD44C()
{
  unint64_t result;

  result = qword_1EE67F3E0;
  if (!qword_1EE67F3E0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0BE58, &_s7FailureO29InsufficientStorageCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67F3E0);
  }
  return result;
}

unint64_t sub_1A2AAD494()
{
  unint64_t result;

  result = qword_1EE67F3E8;
  if (!qword_1EE67F3E8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0BD78, &_s7FailureO20UnexpectedCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67F3E8);
  }
  return result;
}

unint64_t sub_1A2AAD4DC()
{
  unint64_t result;

  result = qword_1EE67F3F0;
  if (!qword_1EE67F3F0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0BDA0, &_s7FailureO20UnexpectedCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67F3F0);
  }
  return result;
}

unint64_t sub_1A2AAD524()
{
  unint64_t result;

  result = qword_1EE67F3F8;
  if (!qword_1EE67F3F8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C2F8, &_s7FailureO10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67F3F8);
  }
  return result;
}

unint64_t sub_1A2AAD56C()
{
  unint64_t result;

  result = qword_1EE67F400;
  if (!qword_1EE67F400)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0C320, &_s7FailureO10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67F400);
  }
  return result;
}

uint64_t sub_1A2AAD5B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64656E696C636564 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696D7369446B7361 && a2 == 0xEC00000064657373 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61437265646E6573 && a2 == 0xEF64656C6C65636ELL || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A2B48F00 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x707954646578696DLL && a2 == 0xEA00000000007365 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A2B46F00 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A2B46EE0 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x72456D6165727473 && a2 == 0xEB00000000726F72 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6148746F4E6B7361 && a2 == 0xED000064656C646ELL || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A2B48EE0 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6575716552646162 && a2 == 0xEA00000000007473 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x726F707075736E75 && a2 == 0xEF65707954646574 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x70416F5465766F6DLL && a2 == 0xEF64656C69614670 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A2B46EA0 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x7463657078656E75 && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 14;
    else
      return 15;
  }
}

uint64_t sub_1A2AADC54(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 6911093 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A2AADD24(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F408);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SFXPCProgressTask.initialValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

void SFXPCProgressTask.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v13[9];
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  ValueMetadata *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v13[2] = a6;
  v16 = a5;
  v13[6] = a2;
  v10 = type metadata accessor for SFProgressTask(0, a2, a3, a4);
  v13[5] = *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64);
  MEMORY[0x1E0C80A78](v10);
  v13[7] = (char *)v13 - v11;
  v12 = sub_1A2A563BC();
  v15 = v12;
  v14 = sub_1A2A4562C();
  v17 = &type metadata for VoidParameters;
  v18 = a3;
  v19 = v12;
  v20 = v14;
  v21 = a6;
  v22 = a7;
  type metadata accessor for SFXPCBlock();
}

void sub_1A2AADE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)(v15 - 184) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v15 - 176) = a1;
  MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v15 - 208) = (char *)&a9 - v16;
  *(_QWORD *)(v15 - 240) = v11;
  SFProgressTask.initialValue.getter(v13, v17, v11);
  v18 = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFProgressTask<A, B>, v13);
  v19 = v14;
  *(_QWORD *)(v15 - 264) = v14;
  v20 = v14;
  v21 = *(_QWORD *)(v15 - 168);
  *(_QWORD *)(v15 - 248) = v10;
  AsyncSequence<>.xpc.getter(v13, v18, v20, v21, (_QWORD *)(v15 - 160));
  *(_QWORD *)(v15 - 136) = *(_QWORD *)(v15 - 224);
  *(_QWORD *)(v15 - 128) = v12;
  *(_QWORD *)(v15 - 120) = v19;
  *(_QWORD *)(v15 - 112) = v21;
  *(_QWORD *)(v15 - 104) = *(_QWORD *)(v15 - 256);
  *(_QWORD *)(v15 - 96) = v9;
  type metadata accessor for SFXPCProgressTask();
}

uint64_t sub_1A2AADED8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  *(_OWORD *)(v3 + *(int *)(a1 + 68)) = *(_OWORD *)(v9 - 160);
  v11 = *(_QWORD *)(v9 - 216);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v11, v6, v5);
  v12 = (*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v13 = (char *)swift_allocObject();
  *((_QWORD *)v13 + 2) = v8;
  *((_QWORD *)v13 + 3) = v4;
  v14 = *(_QWORD *)(v9 - 168);
  *((_QWORD *)v13 + 4) = *(_QWORD *)(v9 - 264);
  *((_QWORD *)v13 + 5) = v14;
  *((_QWORD *)v13 + 6) = v2;
  *((_QWORD *)v13 + 7) = v1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(&v13[v12], v11, v5);
  v15 = *(_QWORD *)(v9 - 208);
  SFXPCBlock.init(_:)((uint64_t)&unk_1EE67F418, (uint64_t)v13, (uint64_t)&type metadata for VoidParameters, v4, *(_QWORD *)(v9 - 192), *(_QWORD *)(v9 - 200), v2, v1, v15);
  (*(void (**)(_QWORD, uint64_t))(v7 + 8))(*(_QWORD *)(v9 - 248), v5);
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v9 - 184) + 32))(*(_QWORD *)(v9 - 240) + *(int *)(a1 + 72), v15, *(_QWORD *)(v9 - 176));
}

void type metadata accessor for SFXPCProgressTask()
{
  JUMPOUT(0x1A8589544);
}

uint64_t sub_1A2AADFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v9;
  v11 = type metadata accessor for SFProgressTask(0, a4, a5, v10);
  *v9 = v5;
  v9[1] = sub_1A2971EBC;
  return SFProgressTask.finalValue.getter(a1, v11);
}

uint64_t sub_1A2AAE064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = type metadata accessor for SFProgressTask(0, v5, v6, a4);
  v8 = v4
     + ((*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80));
  swift_bridgeObjectRelease();
  v9 = v8 + *(int *)(v7 + 36);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  v10 = sub_1A2AE3850();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v12 = type metadata accessor for SFProgressContinuation(0, v5, v6, v11);
  v13 = v9 + *(int *)(v12 + 36);
  v14 = sub_1A2AE3820();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v9 + *(int *)(v12 + 44), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A2AAE1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v8 = *(_QWORD *)(v4 + 16);
  v9 = *(_QWORD *)(v4 + 24);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SFProgressTask(0, v8, v9, a4) - 8) + 80);
  v11 = v4 + ((v10 + 64) & ~v10);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v12;
  *v12 = v5;
  v12[1] = sub_1A2971EBC;
  return sub_1A2AADFDC(a1, a2, v11, v8, v9);
}

void SFXPCProgressTask.finalValue.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v7;

  *(_QWORD *)(v2 + 64) = swift_task_alloc();
  v4 = *(_QWORD *)(a2 + 24);
  v5 = sub_1A2A563BC();
  v6 = sub_1A2A4562C();
  v7 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(v2 + 16) = &type metadata for VoidParameters;
  *(_QWORD *)(v2 + 24) = v4;
  *(_QWORD *)(v2 + 32) = v5;
  *(_QWORD *)(v2 + 40) = v6;
  *(_OWORD *)(v2 + 48) = v7;
  type metadata accessor for SFXPCBlock();
}

uint64_t sub_1A2AAE31C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  *v3 = v2;
  v3[1] = sub_1A297D4A8;
  return SFXPCBlock.dynamicallyCall(withArguments:)(v1, MEMORY[0x1E0DEE9D8], a1);
}

uint64_t SFXPCProgressTask.makeAsyncIterator()(uint64_t *a1)
{
  type metadata accessor for SFXPCAsyncSequence(0, a1[2], a1[4], a1[5]);
  return SFXPCAsyncSequence.makeAsyncIterator()();
}

uint64_t sub_1A2AAE3A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x566C616974696E69 && a2 == 0xEC00000065756C61;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65636E6575716573 && a2 == 0xE800000000000000 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C61566C616E6966 && a2 == 0xEF6B636F6C426575)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A2AAE530(char a1)
{
  if (!a1)
    return 0x566C616974696E69;
  if (a1 == 1)
    return 0x65636E6575716573;
  return 0x6C61566C616E6966;
}

BOOL sub_1A2AAE59C(char *a1, char *a2)
{
  return sub_1A2A6485C(*a1, *a2);
}

uint64_t sub_1A2AAE5B8()
{
  return sub_1A2A64B1C();
}

uint64_t sub_1A2AAE5CC()
{
  return sub_1A2A6486C();
}

uint64_t sub_1A2AAE5E0()
{
  sub_1A2AE400C();
  sub_1A2A6486C();
  return sub_1A2AE4030();
}

uint64_t sub_1A2AAE62C()
{
  char *v0;

  return sub_1A2AAE530(*v0);
}

uint64_t sub_1A2AAE640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2AAE3A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2AAE674@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A2A69434();
  *a1 = result;
  return result;
}

uint64_t sub_1A2AAE6A8(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B0CA80, a1);
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AAE6DC(uint64_t a1)
{
  MEMORY[0x1A85895EC](&unk_1A2B0CA80, a1);
  return sub_1A2AE4108();
}

void SFXPCProgressTask.encode(to:)()
{
  type metadata accessor for SFXPCProgressTask.CodingKeys();
}

uint64_t sub_1A2AAE76C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  MEMORY[0x1A85895EC](&unk_1A2B0CA80, a1);
  v5 = sub_1A2AE3E50();
  *(_QWORD *)(v4 - 168) = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - v6;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_1A2AE40E4();
  *(_BYTE *)(v4 - 128) = 0;
  v8 = *(_QWORD *)(v4 - 160);
  v9 = *(_QWORD *)(v4 - 152);
  *(_QWORD *)(v4 - 136) = v5;
  v10 = v8;
  v11 = *(_QWORD *)(v4 - 144);
  sub_1A2AE3E2C();
  if (!v11)
  {
    *(_OWORD *)(v4 - 128) = *(_OWORD *)(v9 + *(int *)(v2 + 68));
    *(_BYTE *)(v4 - 65) = 1;
    v13 = type metadata accessor for SFXPCAsyncSequence(0, v10, *(_QWORD *)(v4 - 176), v3);
    MEMORY[0x1A85895EC](&protocol conformance descriptor for SFXPCAsyncSequence<A>, v13);
    sub_1A2AE3E2C();
    *(_BYTE *)(v4 - 65) = 2;
    v14 = sub_1A2A563BC();
    v15 = sub_1A2A4562C();
    v16 = *(_QWORD *)(v4 - 200);
    *(_QWORD *)(v4 - 128) = &type metadata for VoidParameters;
    *(_QWORD *)(v4 - 120) = v16;
    *(_QWORD *)(v4 - 112) = v14;
    *(_QWORD *)(v4 - 104) = v15;
    v17 = *(_QWORD *)(v4 - 192);
    *(_QWORD *)(v4 - 96) = *(_QWORD *)(v4 - 184);
    *(_QWORD *)(v4 - 88) = v17;
    type metadata accessor for SFXPCBlock();
  }
  return (*(uint64_t (**)(char *, _QWORD))(*(_QWORD *)(v4 - 168) + 8))(v7, *(_QWORD *)(v4 - 136));
}

void type metadata accessor for SFXPCProgressTask.CodingKeys()
{
  JUMPOUT(0x1A8589544);
}

void SFXPCProgressTask.init(from:)()
{
  sub_1A2A563BC();
  sub_1A2A4562C();
  type metadata accessor for SFXPCBlock();
}

void sub_1A2AAE9E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v15 - 240) = a1;
  *(_QWORD *)(v15 - 256) = *(_QWORD *)(a1 - 8);
  v16 = MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v15 - 232) = (char *)&a9 - v17;
  *(_QWORD *)(v15 - 224) = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v16);
  *(_QWORD *)(v15 - 176) = (char *)&a9 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v15 - 144) = v11;
  *(_QWORD *)(v15 - 136) = v14;
  *(_QWORD *)(v15 - 128) = v10;
  *(_QWORD *)(v15 - 120) = v13;
  *(_QWORD *)(v15 - 112) = v12;
  *(_QWORD *)(v15 - 104) = v9;
  type metadata accessor for SFXPCProgressTask.CodingKeys();
}

void sub_1A2AAEA64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 - 160) = MEMORY[0x1A85895EC](&unk_1A2B0CA80, a1);
  v8 = sub_1A2AE3DA8();
  *(_QWORD *)(v7 - 192) = v8;
  *(_QWORD *)(v7 - 216) = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  *(_QWORD *)(v7 - 184) = v3;
  *(_QWORD *)(v7 - 144) = v3;
  *(_QWORD *)(v7 - 136) = v6;
  *(_QWORD *)(v7 - 208) = v5;
  *(_QWORD *)(v7 - 200) = v2;
  *(_QWORD *)(v7 - 128) = v2;
  *(_QWORD *)(v7 - 120) = v5;
  *(_QWORD *)(v7 - 112) = v4;
  *(_QWORD *)(v7 - 104) = v1;
  type metadata accessor for SFXPCProgressTask();
}

uint64_t sub_1A2AAEADC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v23 - v6;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  *(_QWORD *)(v3 - 168) = v2;
  v8 = *(_QWORD *)(v3 - 152);
  sub_1A2AE40C0();
  v9 = v1;
  if (v8)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v1);
  *(_QWORD *)(v3 - 160) = v5;
  *(_QWORD *)(v3 - 152) = v7;
  v11 = *(_QWORD *)(v3 - 216);
  v10 = *(_QWORD *)(v3 - 208);
  v12 = (uint64_t)v9;
  *(_BYTE *)(v3 - 144) = 0;
  v13 = *(_QWORD *)(v3 - 184);
  v14 = *(_QWORD *)(v3 - 200);
  v15 = *(_QWORD *)(v3 - 192);
  sub_1A2AE3D78();
  (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v3 - 224) + 32))(*(_QWORD *)(v3 - 152), *(_QWORD *)(v3 - 176), v13);
  v16 = type metadata accessor for SFXPCAsyncSequence(0, v13, v14, v10);
  *(_BYTE *)(v3 - 65) = 1;
  MEMORY[0x1A85895EC](&protocol conformance descriptor for SFXPCAsyncSequence<A>, v16);
  sub_1A2AE3D78();
  *(_QWORD *)(v3 - 176) = a1;
  v17 = *(int *)(a1 + 68);
  v18 = *(_QWORD *)(v3 - 152);
  *(_OWORD *)(v18 + v17) = *(_OWORD *)(v3 - 144);
  *(_BYTE *)(v3 - 144) = 2;
  v19 = *(_QWORD *)(v3 - 240);
  MEMORY[0x1A85895EC](&protocol conformance descriptor for SFXPCBlock<A, B>, v19);
  sub_1A2AE3D78();
  (*(void (**)(_QWORD, uint64_t))(v11 + 8))(*(_QWORD *)(v3 - 168), v15);
  v20 = *(_QWORD *)(v3 - 176);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 256) + 32))(v18 + *(int *)(v20 + 72), *(_QWORD *)(v3 - 232), v19);
  v21 = *(_QWORD *)(v3 - 160);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v21 + 16))(*(_QWORD *)(v3 - 248), v18, v20);
  __swift_destroy_boxed_opaque_existential_0Tm(v12);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v18, v20);
}

void sub_1A2AAED64()
{
  SFXPCProgressTask.init(from:)();
}

void sub_1A2AAED88()
{
  SFXPCProgressTask.encode(to:)();
}

uint64_t sub_1A2AAED9C(uint64_t *a1)
{
  uint64_t v1;

  SFXPCProgressTask.makeAsyncIterator()(a1);
  return (*(uint64_t (**)(uint64_t, uint64_t *))(*(a1 - 1) + 8))(v1, a1);
}

void SFProgressTask<>.xpc.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v12, v5, a1);
  SFXPCProgressTask.init(_:)((uint64_t)v12, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2, a3, a4, a5);
}

void sub_1A2AAEE78()
{
  JUMPOUT(0x1A85895ECLL);
}

uint64_t sub_1A2AAEE88()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    sub_1A2A563BC();
    sub_1A2A4562C();
    type metadata accessor for SFXPCBlock();
  }
  return result;
}

uint64_t *sub_1A2AAEF50(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_1A2AE3130();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10 & 0xF8 | 7;
  v12 = *(_QWORD *)(v9 + 64) + 7;
  v13 = v10 | *(_DWORD *)(v6 + 80);
  if ((v13 & 0x1000F8) != 0
    || (v12 & 0xFFFFFFFFFFFFFFF8) + ((v11 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v11) + 16 > 0x18)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + (((v13 & 0xF8 | 7u) + 16) & ~(unint64_t)(v13 & 0xF8 | 7u)));
  }
  else
  {
    v16 = v8;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v17 = (_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    v18 = (_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = ((unint64_t)v17 + v11 + 16) & ~v11;
    v21 = ((unint64_t)v18 + v11 + 16) & ~v11;
    v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    swift_retain();
    v22(v20, v21, v16);
    v23 = (_QWORD *)((v12 + v21) & 0xFFFFFFFFFFFFFFF8);
    v24 = v23[1];
    v25 = (_QWORD *)((v12 + v20) & 0xFFFFFFFFFFFFFFF8);
    *v25 = *v23;
    v25[1] = v24;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1A2AAF0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  v5 = sub_1A2AE3130();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80) & 0xF8 | 7;
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))((v4 + v7 + 16) & ~v7, v5);
  return swift_release();
}

uint64_t sub_1A2AAF130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void (*v18)(unint64_t, unint64_t, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  v10 = sub_1A2AE3130();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80) & 0xF8;
  v13 = v12 + 23;
  v14 = (unint64_t)v7 + v12 + 23;
  v15 = ~v12 & 0xFFFFFFFFFFFFFFF8;
  v16 = v14 & v15;
  v17 = ((unint64_t)v8 + v13) & v15;
  v18 = *(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16);
  swift_retain();
  v18(v16, v17, v10);
  v19 = *(_QWORD *)(v11 + 64) + 7;
  v20 = (_QWORD *)((v19 + v16) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)((v19 + v17) & 0xFFFFFFFFFFFFFFF8);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_retain();
  return a1;
}

uint64_t sub_1A2AAF210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  v10 = sub_1A2AE3130();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80) & 0xF8;
  v13 = v12 + 23;
  v14 = (unint64_t)v7 + v12 + 23;
  v15 = ~v12 & 0xFFFFFFFFFFFFFFF8;
  v16 = v14 & v15;
  v17 = ((unint64_t)v8 + v13) & v15;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 24))(v14 & v15, v17, v10);
  v18 = *(_QWORD *)(v11 + 64) + 7;
  v19 = (_QWORD *)((v18 + v16) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)((v18 + v17) & 0xFFFFFFFFFFFFFFF8);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1A2AAF2F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = sub_1A2AE3130();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80) & 0xF8;
  v12 = v11 + 23;
  v13 = (unint64_t)v7 + v11 + 23;
  v14 = ~v11 & 0xFFFFFFFFFFFFFFF8;
  v15 = v13 & v14;
  v16 = ((unint64_t)v8 + v12) & v14;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))(v13 & v14, v16, v9);
  *(_OWORD *)((*(_QWORD *)(v10 + 64) + 7 + v15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v10 + 64) + 7 + v16) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A2AAF3C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_release();
  v9 = sub_1A2AE3130();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80) & 0xF8;
  v12 = v11 + 23;
  v13 = (unint64_t)v7 + v11 + 23;
  v14 = ~v11 & 0xFFFFFFFFFFFFFFF8;
  v15 = v13 & v14;
  v16 = ((unint64_t)v8 + v12) & v14;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 40))(v13 & v14, v16, v9);
  *(_OWORD *)((*(_QWORD *)(v10 + 64) + 7 + v15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v10 + 64)
                                                                                       + 7
                                                                                       + v16) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1A2AAF498(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t *v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = sub_1A2AE3130();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (v7 <= v11)
    v12 = v11;
  else
    v12 = v7;
  if (!a2)
    return 0;
  v13 = *(_QWORD *)(v6 + 64);
  v14 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  if (v12 < a2)
  {
    if (((((*(_QWORD *)(v9 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)
         + ((v14 + ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v14)
         + 16) & 0xFFFFFFF8) != 0)
      v15 = 2;
    else
      v15 = a2 - v12 + 1;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 >= 2)
      v17 = v16;
    else
      v17 = 0;
    __asm { BR              X17 }
  }
  if (v7 >= v11)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
  v19 = (uint64_t *)((a1 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
  if ((v12 & 0x80000000) != 0)
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(((unint64_t)v19 + v14 + 16) & ~v14, v10, v8);
  v20 = *v19;
  if ((unint64_t)*v19 >= 0xFFFFFFFF)
    LODWORD(v20) = -1;
  return (v20 + 1);
}

void sub_1A2AAF640(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  size_t v12;
  unsigned int v13;
  int v14;
  int v15;
  unsigned int v16;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_1A2AE3130() - 8);
  if (*(_DWORD *)(v9 + 84) <= 0x7FFFFFFFu)
    v10 = 0x7FFFFFFF;
  else
    v10 = *(_DWORD *)(v9 + 84);
  if (v8 <= v10)
    v11 = v10;
  else
    v11 = v8;
  v12 = (((*(_DWORD *)(v9 + 80) & 0xF8 | 7) + ((*(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~(*(_DWORD *)(v9 + 80) & 0xF8 | 7))
      + ((*(_QWORD *)(v9 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v11 >= a3)
  {
    v15 = 0u;
    if (a2 <= v11)
      goto LABEL_20;
  }
  else
  {
    if ((_DWORD)v12)
      v13 = 2;
    else
      v13 = a3 - v11 + 1;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v15 = v14;
    else
      v15 = 0;
    if (a2 <= v11)
LABEL_20:
      __asm { BR              X16 }
  }
  if ((_DWORD)v12)
  {
    v16 = ~v11 + a2;
    bzero(a1, v12);
    *a1 = v16;
  }
  __asm { BR              X10 }
}

void sub_1A2AAF780()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x1A2AAF838);
}

void sub_1A2AAF788()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = 0;
  if (v0)
    JUMPOUT(0x1A2AAF790);
  JUMPOUT(0x1A2AAF838);
}

void sub_1A2AAF7E0()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x1A2AAF838);
}

void sub_1A2AAF7E8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x1A2AAF838);
}

uint64_t sub_1A2AAF7F0()
{
  unsigned int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_WORD *)(v4 + v7) = 0;
  if (!(_DWORD)v3)
    JUMPOUT(0x1A2AAF838);
  if (v6 < v1)
  {
    if ((v2 & 0x80000000) == 0)
    {
      if ((v3 & 0x80000000) == 0)
        JUMPOUT(0x1A2AAF834);
      JUMPOUT(0x1A2AAF82CLL);
    }
    JUMPOUT(0x1A2AAF7FCLL);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v4, v3, v6, v5);
}

uint64_t sub_1A2AAF864(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A2AAF8B0 + 4 * byte_1A2B0C8C4[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A2AAF8E4 + 4 * byte_1A2B0C8BF[v4]))();
}

uint64_t sub_1A2AAF8E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2AAF8EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2AAF8F4);
  return result;
}

uint64_t sub_1A2AAF900(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2AAF908);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A2AAF90C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2AAF914(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1A2AAF920()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2AAF930()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2AAF940()
{
  JUMPOUT(0x1A85895ECLL);
}

void combineLatest<A, B, C, D>(_:_:_:_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, uint64_t a12)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;

  v33 = a8;
  v34 = a3;
  v32 = a2;
  v39 = a9;
  v38 = a10;
  v36 = a4;
  v37 = a11;
  v35 = a12;
  v15 = *(_QWORD *)(a8 - 8);
  v16 = MEMORY[0x1E0C80A78](a1);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x1E0C80A78](v16);
  v23 = (char *)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x1E0C80A78](v21);
  v28 = (char *)&v32 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v32 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v31 + 16))(v30);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v28, v32, a6);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v23, v34, a7);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v36, v33);
  sub_1A2AAFB0C((uint64_t)v30, a5, v39);
}

void sub_1A2AAFB0C(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for AsyncCombineLatest4Sequence();
}

uint64_t sub_1A2AAFB90(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(v7 + a1[21], v6, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v7 + a1[22], v5, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v7 + a1[23], v4, v1);
}

void AsyncCombineLatest4Sequence.Iterator.next()(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t TupleTypeMetadata2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[22] = a1;
  v9 = a2[6];
  v8 = a2[2];
  v2[23] = swift_getAssociatedTypeWitness();
  v6 = a2[3];
  v7 = a2[7];
  v2[24] = swift_getAssociatedTypeWitness();
  v2[25] = swift_getTupleTypeMetadata2();
  v2[26] = swift_getAssociatedTypeWitness();
  v2[27] = swift_getAssociatedTypeWitness();
  v2[28] = swift_getTupleTypeMetadata2();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v2[29] = TupleTypeMetadata2;
  v5 = sub_1A2AE39F4();
  v2[30] = v5;
  v2[31] = *(_QWORD *)(v5 - 8);
  v2[32] = swift_task_alloc();
  v2[33] = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  v2[36] = swift_task_alloc();
  v2[37] = swift_task_alloc();
  v2[38] = swift_task_alloc();
  v2[39] = swift_task_alloc();
  v2[2] = v8;
  v2[3] = v6;
  v2[4] = v9;
  v2[5] = v7;
  type metadata accessor for AsyncCombineLatest2Sequence();
}

void sub_1A2AAFDF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0[6] = v2;
  v0[7] = v4;
  v0[8] = v1;
  v0[9] = v3;
  type metadata accessor for AsyncCombineLatest2Sequence();
}

void sub_1A2AAFE10(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = MEMORY[0x1A85895EC](&protocol conformance descriptor for AsyncCombineLatest2Sequence<A, B>, v1);
  v5 = MEMORY[0x1A85895EC](&protocol conformance descriptor for AsyncCombineLatest2Sequence<A, B>, a1);
  v2[10] = v1;
  v2[11] = a1;
  v2[12] = v4;
  v2[13] = v5;
  type metadata accessor for AsyncCombineLatest2Sequence.Iterator();
}

uint64_t sub_1A2AAFE50()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  v1[1] = sub_1A2AAFE8C;
  return AsyncCombineLatest2Sequence.Iterator.next()(v0);
}

uint64_t sub_1A2AAFE8C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 320) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A2AAFEF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  void (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t, uint64_t);
  void (*v32)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  int *v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  void (*v49)(uint64_t, uint64_t, uint64_t);
  void (*v50)(uint64_t, uint64_t, uint64_t);
  void (*v51)(void);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(void);
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 232);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 264) + 48))(v1, 1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 176);
    v69 = *(_OWORD *)(v0 + 208);
    v71 = *(_OWORD *)(v0 + 184);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(v1, *(_QWORD *)(v0 + 240));
    *(_OWORD *)(v0 + 112) = v71;
    *(_OWORD *)(v0 + 128) = v69;
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata - 8) + 56))(v3, 1, 1, TupleTypeMetadata);
  }
  else
  {
    v72 = *(_QWORD *)(v0 + 304);
    v53 = *(_QWORD *)(v0 + 296);
    v58 = *(_QWORD *)(v0 + 280);
    v59 = *(_QWORD *)(v0 + 288);
    v61 = *(_QWORD *)(v0 + 272);
    v45 = *(_QWORD *)(v0 + 216);
    v65 = *(_QWORD *)(v0 + 208);
    v5 = *(_QWORD *)(v0 + 192);
    v67 = *(_QWORD *)(v0 + 200);
    v56 = *(_QWORD *)(v0 + 176);
    v6 = *(int *)(v67 + 48);
    v7 = v72 + v6;
    v70 = v72 + v6;
    v8 = *(int *)(v2 + 48);
    v9 = v72 + v8;
    v47 = v2;
    v10 = *(_QWORD *)(v0 + 224);
    v66 = v10;
    v11 = v72 + v8 + *(int *)(v10 + 48);
    v46 = v11;
    v68 = v72 + v8;
    v12 = v1 + v8;
    v13 = v1 + v6;
    v62 = *(_QWORD **)(*(_QWORD *)(v0 + 184) - 8);
    v60 = (void (*)(void))v62[4];
    v14 = *(_QWORD *)(v0 + 184);
    v60();
    v64 = *(_QWORD **)(v5 - 8);
    v55 = (void (*)(uint64_t, uint64_t, uint64_t))v64[4];
    v55(v7, v13, v5);
    v15 = v12 + *(int *)(v10 + 48);
    v57 = *(_QWORD **)(v65 - 8);
    v38 = (void (*)(uint64_t, uint64_t))v57[4];
    v38(v9, v12);
    v63 = *(_QWORD **)(v45 - 8);
    v41 = (void (*)(uint64_t, uint64_t, uint64_t))v63[4];
    v41(v11, v15, v45);
    *(_QWORD *)(v0 + 144) = v14;
    *(_QWORD *)(v0 + 152) = v5;
    *(_QWORD *)(v0 + 160) = v65;
    *(_QWORD *)(v0 + 168) = v45;
    v16 = (int *)swift_getTupleTypeMetadata();
    v34 = v56 + v16[12];
    v36 = v56 + v16[16];
    v39 = v56 + v16[20];
    v40 = v16;
    v17 = v53 + *(int *)(v47 + 48);
    v18 = v53 + *(int *)(v67 + 48);
    v44 = v18;
    v51 = (void (*)(void))v62[2];
    v19 = v14;
    v51();
    v50 = (void (*)(uint64_t, uint64_t, uint64_t))v64[2];
    v50(v18, v70, v5);
    v20 = v17 + *(int *)(v66 + 48);
    v42 = v20;
    v43 = v17;
    v49 = (void (*)(uint64_t, uint64_t, uint64_t))v57[2];
    v49(v17, v68, v65);
    v48 = (void (*)(uint64_t, uint64_t, uint64_t))v63[2];
    v48(v20, v11, v45);
    ((void (*)(uint64_t, uint64_t, uint64_t))v60)(v56, v53, v14);
    v21 = v59 + *(int *)(v47 + 48);
    v22 = v59 + *(int *)(v67 + 48);
    v51();
    v50(v22, v70, v5);
    v54 = v21;
    v23 = v21 + *(int *)(v66 + 48);
    v37 = v23;
    v49(v21, v68, v65);
    v48(v23, v46, v45);
    v55(v34, v22, v5);
    v24 = v58 + *(int *)(v47 + 48);
    v25 = v58 + *(int *)(v67 + 48);
    v35 = v25;
    v51();
    v50(v25, v70, v5);
    v52 = v24 + *(int *)(v66 + 48);
    v49(v24, v68, v65);
    v48(v52, v46, v45);
    ((void (*)(uint64_t, uint64_t, uint64_t))v38)(v36, v24, v65);
    v26 = v61 + *(int *)(v47 + 48);
    v27 = v61 + *(int *)(v67 + 48);
    v60();
    v55(v27, v70, v5);
    v28 = v26 + *(int *)(v66 + 48);
    ((void (*)(uint64_t, uint64_t, uint64_t))v38)(v26, v68, v65);
    v41(v28, v46, v45);
    v41(v39, v28, v45);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*((_QWORD *)v40 - 1) + 56))(v56, 0, 1);
    v29 = (void (*)(uint64_t, uint64_t))v57[1];
    v29(v26, v65);
    v30 = (void (*)(uint64_t, uint64_t))v64[1];
    v30(v27, v5);
    v31 = (void (*)(uint64_t, uint64_t))v62[1];
    v31(v61, v19);
    v32 = (void (*)(uint64_t, uint64_t))v63[1];
    v32(v52, v45);
    v30(v35, v5);
    v31(v58, v19);
    v32(v37, v45);
    v29(v54, v65);
    v31(v59, v19);
    v32(v42, v45);
    v29(v43, v65);
    v30(v44, v5);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A2AB04A0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1A2AB0518(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1A2971EBC;
  AsyncCombineLatest4Sequence.Iterator.next()(a1, a2);
}

uint64_t sub_1A2AB0578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  _QWORD *v6;

  v4[2] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[3] = AssociatedTypeWitness;
  v4[4] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[5] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v4[6] = v6;
  *v6 = v4;
  v6[1] = sub_1A29DB594;
  return sub_1A2AE36D0();
}

void AsyncCombineLatest4Sequence.makeAsyncIterator()()
{
  type metadata accessor for AsyncCombineLatest2Sequence();
}

void sub_1A2AB06A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v0[4];
  v3 = v0[5];
  *(_QWORD *)(v1 - 168) = v3;
  *(_QWORD *)(v1 - 160) = v2;
  v4 = v0[8];
  v5 = v0[9];
  *(_QWORD *)(v1 - 184) = v5;
  *(_QWORD *)(v1 - 176) = v4;
  *(_QWORD *)(v1 - 112) = v2;
  *(_QWORD *)(v1 - 104) = v3;
  *(_QWORD *)(v1 - 96) = v4;
  *(_QWORD *)(v1 - 88) = v5;
  type metadata accessor for AsyncCombineLatest2Sequence();
}

void sub_1A2AB06C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = MEMORY[0x1A85895EC](&protocol conformance descriptor for AsyncCombineLatest2Sequence<A, B>, v1);
  *(_QWORD *)(v2 - 192) = v4;
  v5 = MEMORY[0x1A85895EC](&protocol conformance descriptor for AsyncCombineLatest2Sequence<A, B>, a1);
  *(_QWORD *)(v2 - 200) = v5;
  *(_QWORD *)(v2 - 112) = v1;
  *(_QWORD *)(v2 - 104) = a1;
  *(_QWORD *)(v2 - 96) = v4;
  *(_QWORD *)(v2 - 88) = v5;
  type metadata accessor for AsyncCombineLatest2Sequence();
}

void sub_1A2AB070C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v11 - 208) = *(_QWORD *)(a1 - 8);
  v12 = MEMORY[0x1E0C80A78](a1);
  v13 = MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  combineLatest<A, B>(_:_:)(v10, v10 + *(int *)(v9 + 84), *(_QWORD *)(v11 - 128), *(_QWORD *)(v11 - 136), *(_QWORD *)(v11 - 144), *(_QWORD *)(v11 - 152), (uint64_t)&a9 - v14);
}

void sub_1A2AB07A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  combineLatest<A, B>(_:_:)(v1 + *(int *)(v0 + 88), v1 + *(int *)(v0 + 92), *(_QWORD *)(v3 - 160), *(_QWORD *)(v3 - 168), *(_QWORD *)(v3 - 176), *(_QWORD *)(v3 - 184), v2);
}

void sub_1A2AB07C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  combineLatest<A, B>(_:_:)(v4, v3, v1, v2, *(_QWORD *)(v5 - 192), *(_QWORD *)(v5 - 200), v0);
}

void sub_1A2AB07E0()
{
  AsyncCombineLatest2Sequence.makeAsyncIterator()();
}

uint64_t sub_1A2AB07EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 208) + 8))(v1, v6);
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v4, v3);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v7, v2);
  **(_QWORD **)(v8 - 120) = *(_QWORD *)(v8 - 112);
  return result;
}

uint64_t sub_1A2AB0848()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return swift_getAssociatedConformanceWitness();
}

void sub_1A2AB08D8()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2AB08E8()
{
  AsyncCombineLatest4Sequence.makeAsyncIterator()();
}

uint64_t sub_1A2AB08FC()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

uint64_t sub_1A2AB0918()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1A2AB0920()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t *sub_1A2AB09EC(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t *v33;

  v4 = *(_QWORD *)(a3[2] - 8);
  v5 = *(_QWORD *)(a3[3] - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v4 + 64) + v6;
  v8 = *(_QWORD *)(a3[4] - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(v5 + 64) + v9;
  v11 = *(_QWORD *)(a3[5] - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_QWORD *)(v8 + 64) + v12;
  v14 = *(_DWORD *)(v4 + 80);
  v15 = (*(_BYTE *)(v5 + 80) | v14 | *(_BYTE *)(v8 + 80) | v12);
  if (v15 <= 7
    && ((v13 + ((v10 + (v7 & ~v6)) & ~v9)) & ~(unint64_t)v12) + *(_QWORD *)(v11 + 64) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | v14 | *(_DWORD *)(v8 + 80) | v12) & 0x100000) == 0)
  {
    v20 = ~v6;
    v21 = ~v9;
    v30 = a3[4];
    v31 = ~(unint64_t)v12;
    v32 = a3[5];
    v29 = a3[3];
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    v33 = a1;
    v23 = ((unint64_t)a1 + v7) & v20;
    v24 = ((unint64_t)a2 + v7) & v20;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(v23, v24, v29);
    v25 = v23 + v10;
    v19 = v33;
    v26 = v25 & v21;
    v27 = (v24 + v10) & v21;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v25 & v21, v27, v30);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))((v26 + v13) & v31, (v27 + v13) & v31, v32);
  }
  else
  {
    v18 = *a2;
    *a1 = *a2;
    v19 = (uint64_t *)(v18 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  return v19;
}

uint64_t sub_1A2AB0B78(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v4 = *(_QWORD *)(a2[2] - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2[3] - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(a2[4] - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  (*(void (**)(unint64_t))(v9 + 8))(v10);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(a2[5] - 8) + 8))((v10
                                                                                       + *(_QWORD *)(v9 + 64)
                                                                                       + *(unsigned __int8 *)(*(_QWORD *)(a2[5] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[5] - 8) + 80));
}

uint64_t sub_1A2AB0C20(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v16, v17);
  v18 = *(_QWORD *)(a3[5] - 8);
  (*(void (**)(unint64_t, unint64_t))(v18 + 16))((*(_QWORD *)(v13 + 64) + *(unsigned __int8 *)(v18 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), (*(_QWORD *)(v13 + 64) + *(unsigned __int8 *)(v18 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  return a1;
}

uint64_t sub_1A2AB0CFC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v16, v17);
  v18 = *(_QWORD *)(a3[5] - 8);
  (*(void (**)(unint64_t, unint64_t))(v18 + 24))((*(_QWORD *)(v13 + 64) + *(unsigned __int8 *)(v18 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), (*(_QWORD *)(v13 + 64) + *(unsigned __int8 *)(v18 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  return a1;
}

uint64_t sub_1A2AB0DD8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v16, v17);
  v18 = *(_QWORD *)(a3[5] - 8);
  (*(void (**)(unint64_t, unint64_t))(v18 + 32))((*(_QWORD *)(v13 + 64) + *(unsigned __int8 *)(v18 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), (*(_QWORD *)(v13 + 64) + *(unsigned __int8 *)(v18 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  return a1;
}

uint64_t sub_1A2AB0EB4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v16, v17);
  v18 = *(_QWORD *)(a3[5] - 8);
  (*(void (**)(unint64_t, unint64_t))(v18 + 40))((*(_QWORD *)(v13 + 64) + *(unsigned __int8 *)(v18 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), (*(_QWORD *)(v13 + 64) + *(unsigned __int8 *)(v18 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  return a1;
}

uint64_t sub_1A2AB0F90(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  char v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;

  v6 = a3[2];
  v5 = a3[3];
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  v12 = a3[4];
  v13 = a3[5];
  v14 = *(_QWORD *)(v12 - 8);
  v15 = *(unsigned int *)(v14 + 84);
  if (v15 > v11)
    v11 = *(_DWORD *)(v14 + 84);
  v16 = *(_QWORD *)(v13 - 8);
  v17 = *(unsigned int *)(v16 + 84);
  if (v17 > v11)
    v11 = *(_DWORD *)(v16 + 84);
  if (!a2)
    return 0;
  v18 = *(unsigned __int8 *)(v9 + 80);
  v19 = *(_QWORD *)(v7 + 64) + v18;
  v20 = *(_QWORD *)(v9 + 64);
  v21 = *(unsigned __int8 *)(v14 + 80);
  v22 = *(_QWORD *)(v14 + 64);
  v23 = *(unsigned __int8 *)(v16 + 80);
  v24 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_27;
  v25 = ((v22 + v23 + ((v20 + v21 + (v19 & ~v18)) & ~v21)) & ~v23) + *(_QWORD *)(v16 + 64);
  v26 = 8 * v25;
  if (v25 <= 3)
  {
    v28 = ((v24 + ~(-1 << v26)) >> v26) + 1;
    if (HIWORD(v28))
    {
      v27 = *(_DWORD *)(a1 + v25);
      if (!v27)
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v28 > 0xFF)
    {
      v27 = *(unsigned __int16 *)(a1 + v25);
      if (!*(_WORD *)(a1 + v25))
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v28 < 2)
    {
LABEL_27:
      if (v11)
      {
        if (v8 == v11)
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v7 + 48))(a1, *(unsigned int *)(v7 + 84), v6);
        v31 = (v19 + a1) & ~v18;
        if (v10 == v11)
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v9 + 48))(v31, *(unsigned int *)(v9 + 84), v5);
        v32 = (v31 + v20 + v21) & ~v21;
        if ((_DWORD)v15 == v11)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v32, v15, v12);
        else
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))((v32 + v22 + v23) & ~v23, v17, v13);
      }
      return 0;
    }
  }
  v27 = *(unsigned __int8 *)(a1 + v25);
  if (!*(_BYTE *)(a1 + v25))
    goto LABEL_27;
LABEL_18:
  v29 = (v27 - 1) << v26;
  if (v25 > 3)
    v29 = 0;
  if ((_DWORD)v25)
  {
    if (v25 <= 3)
      v30 = ((v22 + v23 + ((v20 + v21 + (v19 & ~(_DWORD)v18)) & ~(_DWORD)v21)) & ~(_DWORD)v23) + *(_DWORD *)(v16 + 64);
    else
      v30 = 4;
    __asm { BR              X11 }
  }
  return v11 + v29 + 1;
}

void sub_1A2AB11A8(_WORD *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  size_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v5 = *(_QWORD *)(a4[2] - 8);
  v6 = *(_QWORD *)(a4[3] - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(a4[4] - 8);
  if (*(_DWORD *)(v8 + 84) <= v7)
    v9 = v7;
  else
    v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(a4[5] - 8);
  if (*(_DWORD *)(v10 + 84) > v9)
    v9 = *(_DWORD *)(v10 + 84);
  v11 = ((*(_QWORD *)(v8 + 64)
        + *(unsigned __int8 *)(v10 + 80)
        + ((*(_QWORD *)(v6 + 64)
          + *(unsigned __int8 *)(v8 + 80)
          + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
      + *(_QWORD *)(v10 + 64);
  if (a3 > v9)
  {
    if (v11 <= 3)
    {
      v14 = ((a3 - v9 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else
      {
        v12 = v14 > 1;
        if (v14 >= 0x100)
          v12 = 2;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v9 < a2)
  {
    v13 = ~v9 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v15 = v13 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v11 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X27 }
}

void type metadata accessor for AsyncCombineLatest4Sequence()
{
  JUMPOUT(0x1A8589544);
}

void type metadata accessor for AsyncCombineLatest4Sequence.Iterator()
{
  JUMPOUT(0x1A8589544);
}

id _SFXPCError.__allocating_init(_:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_1A2AB6180(a1);

  return v4;
}

void sub_1A2AB14B4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  id v8;

  if (a2 >> 60 == 15)
    v7 = 0;
  else
    v7 = sub_1A2AE2F74();
  v8 = (id)v7;
  (*(void (**)(uint64_t))(a6 + 16))(a6);

}

uint64_t sub_1A2AB1528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A2AE31D8();
  __swift_allocate_value_buffer(v0, qword_1EE676710);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE676710);
  if (qword_1ECEFB8A8[0] != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ECEFC700);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t SFXPCListener.connections.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t SFXPCListener.containerRegistry.getter()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t SFXPCListener.containerRegistry.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + qword_1EE67F650);
  swift_beginAccess();
  *v3 = a1;
  return swift_release();
}

uint64_t (*SFXPCListener.containerRegistry.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A2AB16DC@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + qword_1EE67F658);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1A2A1BF10;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1A29DF9C8(v4);
}

uint64_t sub_1A2AB1770(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1A2A1BF10;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + qword_1EE67F658);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1A29DF9C8(v3);
  return sub_1A297CC78(v8);
}

uint64_t SFXPCListener.didAddConnectionHandler.getter()
{
  return sub_1A2A4123C(&qword_1EE67F658, (void (*)(_QWORD, _QWORD))sub_1A29DF9C8);
}

uint64_t SFXPCListener.didAddConnectionHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_1A2A41394(a1, a2, &qword_1EE67F658, (uint64_t (*)(uint64_t, uint64_t))sub_1A297CC78);
}

uint64_t (*SFXPCListener.didAddConnectionHandler.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A2AB1894@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + qword_1EE67F660);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1A2A1B724;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1A29DF9C8(v4);
}

uint64_t sub_1A2AB1928(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1A2A1B724;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + qword_1EE67F660);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1A29DF9C8(v3);
  return sub_1A297CC78(v8);
}

uint64_t SFXPCListener.didRemoveConnectionHandler.getter()
{
  return sub_1A2A4123C(&qword_1EE67F660, (void (*)(_QWORD, _QWORD))sub_1A29DF9C8);
}

uint64_t SFXPCListener.didRemoveConnectionHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_1A2A41394(a1, a2, &qword_1EE67F660, (uint64_t (*)(uint64_t, uint64_t))sub_1A297CC78);
}

uint64_t (*SFXPCListener.didRemoveConnectionHandler.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A2AB1A4C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(*a1 + qword_1EE67F668);
  swift_beginAccess();
  v4 = *v3;
  if (*v3)
    v5 = v3[1];
  else
    v5 = 0;
  *a2 = v4;
  a2[1] = v5;
  return sub_1A29DF9C8(v4);
}

uint64_t sub_1A2AB1AA8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  v2 = *a1;
  if (*a1)
    v3 = a1[1];
  else
    v3 = 0;
  v4 = (uint64_t *)(*a2 + qword_1EE67F668);
  swift_beginAccess();
  v5 = *v4;
  *v4 = v2;
  v4[1] = v3;
  sub_1A29DF9C8(v2);
  return sub_1A297CC78(v5);
}

uint64_t SFXPCListener.contextProvider.getter()
{
  return sub_1A2A4123C(&qword_1EE67F668, (void (*)(_QWORD, _QWORD))sub_1A2A465A0);
}

uint64_t SFXPCListener.contextProvider.setter(uint64_t a1, uint64_t a2)
{
  return sub_1A2A41394(a1, a2, &qword_1EE67F668, (uint64_t (*)(uint64_t, uint64_t))sub_1A2A465A4);
}

uint64_t (*SFXPCListener.contextProvider.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id static SFXPCListener.service(queue:)(void *a1)
{
  return sub_1A2AB1BEC(a1, (SEL *)&selRef_serviceListener);
}

id SFXPCListener.__allocating_init(takingOver:queue:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return SFXPCListener.init(takingOver:queue:)(a1, a2);
}

id static SFXPCListener.anonymous(queue:)(void *a1)
{
  return sub_1A2AB1BEC(a1, (SEL *)&selRef_anonymousListener);
}

id sub_1A2AB1BEC(void *a1, SEL *a2)
{
  objc_class *v2;
  id v4;
  id v5;
  id v6;

  v4 = objc_msgSend((id)objc_opt_self(), *a2);
  v5 = a1;
  v6 = objc_allocWithZone(v2);
  return SFXPCListener.init(takingOver:queue:)(v4, v5);
}

id SFXPCListener.init(takingOver:queue:)(void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  objc_class *ObjectType;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  objc_super v18;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v7 = *MEMORY[0x1E0DEEDD8] & *v3;
  *(_QWORD *)((char *)v3 + qword_1EE67F650) = 0;
  v8 = (_QWORD *)((char *)v3 + qword_1EE67F658);
  *v8 = 0;
  v8[1] = 0;
  v9 = (_QWORD *)((char *)v3 + qword_1EE67F660);
  *v9 = 0;
  v9[1] = 0;
  v10 = (_QWORD *)((char *)v3 + qword_1EE67F668);
  *v10 = 0;
  v10[1] = 0;
  v11 = v3;
  objc_msgSend(a1, sel_sf_setQueue_, a2);
  *(_QWORD *)((char *)v11 + qword_1EE67F670) = a1;
  type metadata accessor for SFXPCListener.ClientConnection(0, *(_QWORD *)(v7 + 80), v12, v13);
  v14 = a1;
  *(_QWORD *)((char *)v11 + qword_1EE67F648) = sub_1A2AE3640();
  *(_QWORD *)((char *)v11 + qword_1EE67F678) = a2;
  v15 = a2;

  v18.receiver = v11;
  v18.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v18, sel_init);
  objc_msgSend(v14, sel_setDelegate_, v16);

  return v16;
}

id SFXPCListener.__allocating_init(machServiceName:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  id v5;
  void *v6;
  id v7;
  id v8;

  v5 = objc_allocWithZone(MEMORY[0x1E0CB3B58]);
  v6 = (void *)sub_1A2AE340C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithMachServiceName_, v6);

  v8 = objc_allocWithZone(v3);
  return SFXPCListener.init(takingOver:queue:)(v7, a3);
}

Swift::Void __swiftcall SFXPCListener.resume()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + qword_1EE67F670), sel_activate);
}

Swift::Void __swiftcall SFXPCListener.suspend()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + qword_1EE67F670), sel_suspend);
}

Swift::Void __swiftcall SFXPCListener.invalidate()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + qword_1EE67F670), sel_invalidate);
}

id SFXPCListener.endpoint.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + qword_1EE67F670), sel_endpoint);
}

Swift::Bool __swiftcall SFXPCListener.listener(_:shouldAcceptNewConnection:)(NSXPCListener _, NSXPCConnection shouldAcceptNewConnection)
{
  return sub_1A2AB6898(shouldAcceptNewConnection.super.isa);
}

id SFXPCListener.ClientConnection.__allocating_init(connection:clientIdentity:containerRegistry:contextProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return SFXPCListener.ClientConnection.init(connection:clientIdentity:containerRegistry:contextProvider:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1A2AB1F08(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  void **v5;
  uint64_t v6;
  void (**v7)(uint64_t);
  uint64_t result;
  void (*v9)(uint64_t);
  uint64_t v10;
  char v11;
  void *v12;

  ObjectType = swift_getObjectType();
  v5 = (void **)(a1 + qword_1EE67F648);
  swift_beginAccess();
  v12 = *v5;
  v6 = sub_1A2AE3670();
  MEMORY[0x1A85895EC](MEMORY[0x1E0DEAF50], v6);
  MEMORY[0x1A85895EC](MEMORY[0x1E0DEFD00], ObjectType);
  sub_1A2AE3910();
  if (v11 != 1)
  {
    swift_beginAccess();
    sub_1A2AE3664();
    swift_endAccess();

  }
  v7 = (void (**)(uint64_t))(a1 + qword_1EE67F660);
  result = swift_beginAccess();
  v9 = *v7;
  if (*v7)
  {
    v10 = a2 + qword_1EE6ADCB8;
    swift_retain();
    v9(v10);
    return sub_1A297CC78((uint64_t)v9);
  }
  return result;
}

uint64_t sub_1A2AB2060(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  char v9;

  v6 = a3;
  v7 = a4;
  v8 = a1;
  v9 = sub_1A2AB6898(v7);

  return v9 & 1;
}

void SFXPCListener.init()()
{
  sub_1A2AB6E38();
}

void sub_1A2AB20D8()
{
  sub_1A2AB6E38();
}

uint64_t sub_1A2AB20F8(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_release();
  sub_1A297CC78(*(_QWORD *)(a1 + qword_1EE67F658));
  sub_1A297CC78(*(_QWORD *)(a1 + qword_1EE67F660));
  return sub_1A297CC78(*(_QWORD *)(a1 + qword_1EE67F668));
}

uint64_t SFXPCListener.ClientConnection.clientIdentity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A2AA25B8(v1 + qword_1EE6ADCB8, a1);
}

id SFXPCListener.ClientConnection.init(connection:clientIdentity:containerRegistry:contextProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  objc_class *ObjectType;
  char *v12;
  id v13;
  objc_super v15;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v5[qword_1EE6ADCC8] = a1;
  sub_1A2AA25B8(a2, (uint64_t)&v5[qword_1EE6ADCB8]);
  v12 = &v5[qword_1EE6ADCD0];
  *(_QWORD *)v12 = a4;
  *((_QWORD *)v12 + 1) = a5;
  *(_QWORD *)&v5[qword_1EE6ADCD8] = a3;
  v15.receiver = v5;
  v15.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v15, sel_init);
  sub_1A2AA2640(a2);
  return v13;
}

Swift::Void __swiftcall SFXPCListener.ClientConnection.activate()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(*(_QWORD *)(v0 + qword_1EE6ADCC8) + 16), sel_activate);
}

uint64_t SFXPCListener.ClientConnection.invoke(_:parametersData:parametersAsyncSequenceContainer:parametersBlocksContainer:sync:completion:)(char *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, int a6, void (*a7)(_QWORD, unint64_t, _QWORD, _QWORD, id), uint64_t a8)
{
  _QWORD *v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  _BOOL4 v38;
  uint64_t v39;
  void (*v40)(_QWORD);
  uint64_t v41;
  void (*v42)(_QWORD);
  uint64_t v43;
  void (*v44)(_QWORD, unint64_t, _QWORD, _QWORD, id);
  uint64_t v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  void (*v50)(_QWORD);
  void (*v51)(_QWORD);
  uint64_t v52;
  unint64_t v53;
  id v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  void (*v59)(_QWORD, unint64_t, _QWORD, _QWORD, id);
  uint64_t v60;
  uint64_t v61;
  objc_class *v62;
  id v63;
  char *v64;
  char *v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  unint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  id v78;
  id v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  objc_class *v89;
  id v90;
  id v91;
  id v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  char *v109;
  uint64_t *v110;
  char *v111;
  uint64_t v112;
  id v113;
  id v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  NSObject *v122;
  os_log_type_t v123;
  uint64_t v125;
  uint64_t v126;
  id v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  char *v131;
  id v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  char *v148;
  id v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(_QWORD, unint64_t, _QWORD, _QWORD, id);
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(_QWORD);
  char *v157;
  char *v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161[3];
  uint64_t v162;
  void (*v163)(_QWORD);
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  objc_super v167;

  v139 = a5;
  v144 = a4;
  v143 = a3;
  v142 = a2;
  v155 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v8) + 0x50);
  v13 = *(_QWORD *)(v155 - 8);
  v14 = MEMORY[0x1E0C80A78](a1);
  v141 = (char *)&v134 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = v15;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v134 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEFB6D0);
  MEMORY[0x1E0C80A78](v18);
  v150 = (uint64_t)&v134 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_1A2AE3130();
  v20 = *(_QWORD *)(v153 - 8);
  v21 = MEMORY[0x1E0C80A78](v153);
  v148 = (char *)&v134 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = v22;
  MEMORY[0x1E0C80A78](v21);
  v157 = (char *)&v134 - v23;
  v154 = type metadata accessor for SFClientIdentity();
  v136 = *(_QWORD *)(v154 - 8);
  v24 = MEMORY[0x1E0C80A78](v154);
  v26 = (char *)&v134 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v24);
  v140 = (uint64_t)&v134 - v28;
  v137 = v29;
  MEMORY[0x1E0C80A78](v27);
  v31 = (char *)&v134 - v30;
  v159 = v8;
  sub_1A2AA25B8((uint64_t)v8 + qword_1EE6ADCB8, (uint64_t)&v134 - v30);
  v149 = a1;
  v32 = *(_QWORD *)&a1[OBJC_IVAR___SFXPCInvocation_name + 8];
  v158 = v31;
  if (!v32)
  {
    v43 = a8;
    v44 = a7;
    if (qword_1EE676730 != -1)
      swift_once();
    v45 = sub_1A2AE31D8();
    __swift_project_value_buffer(v45, (uint64_t)qword_1EE676710);
    sub_1A2AA25B8((uint64_t)v31, (uint64_t)v26);
    v46 = v149;
    v47 = sub_1A2AE31C0();
    v48 = sub_1A2AE3958();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = swift_slowAlloc();
      v50 = (void (*)(_QWORD))swift_slowAlloc();
      v151 = v43;
      v51 = v50;
      v163 = v50;
      *(_DWORD *)v49 = 136315394;
      v52 = SFClientIdentity.shortDescription.getter();
      v152 = v44;
      v161[0] = sub_1A296DA00(v52, v53, (uint64_t *)&v163);
      sub_1A2AE3A60();
      swift_bridgeObjectRelease();
      sub_1A2AA2640((uint64_t)v26);
      *(_WORD *)(v49 + 12) = 2082;
      v54 = v46;
      v55 = objc_msgSend(v54, sel_description);
      v56 = sub_1A2AE343C();
      v58 = v57;

      v59 = v152;
      v161[0] = sub_1A296DA00(v56, v58, (uint64_t *)&v163);
      sub_1A2AE3A60();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A2830000, v47, v48, "invocable has no name -- Daemon {client: %s, invocable: %{public}s}", (uint8_t *)v49, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85896E8](v51, -1, -1);
      MEMORY[0x1A85896E8](v49, -1, -1);

    }
    else
    {
      sub_1A2AA2640((uint64_t)v26);

      v59 = a7;
    }
    sub_1A297AFB8();
    v86 = (void *)swift_allocError();
    v88 = v87;
    *(_OWORD *)v87 = xmmword_1A2B0CBE0;
    *(_QWORD *)(v87 + 16) = 0xD00000000000004FLL;
    *(_QWORD *)(v87 + 24) = 0x80000001A2B48F20;
    *(_QWORD *)(v87 + 32) = 260;
    *(_OWORD *)(v87 + 40) = 0u;
    *(_OWORD *)(v87 + 56) = 0u;
    *(_QWORD *)(v87 + 72) = 0;
    *(_QWORD *)(v87 + 80) = 0x2000000000000000;
    v89 = (objc_class *)type metadata accessor for _SFXPCError();
    *(_QWORD *)(v88 + 88) = 0;
    *(_QWORD *)(v88 + 96) = 0;
    v90 = objc_allocWithZone(v89);
    v91 = sub_1A2AB6180(v86);

    v59(0, 0xF000000000000000, 0, 0, v91);
    return sub_1A2AA2640((uint64_t)v158);
  }
  v146 = a6;
  v152 = a7;
  v151 = a8;
  v163 = *(void (**)(_QWORD))&a1[OBJC_IVAR___SFXPCInvocation_name];
  v164 = v32;
  swift_bridgeObjectRetain();
  sub_1A2AE34F0();
  SFClientIdentity.shortDescription.getter();
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  v33 = v164;
  v156 = v163;
  if (qword_1EE676730 != -1)
    swift_once();
  v34 = sub_1A2AE31D8();
  v35 = __swift_project_value_buffer(v34, (uint64_t)qword_1EE676710);
  swift_bridgeObjectRetain_n();
  v145 = v35;
  v36 = sub_1A2AE31C0();
  v37 = sub_1A2AE3964();
  v38 = os_log_type_enabled(v36, v37);
  v134 = v13;
  v135 = v17;
  if (v38)
  {
    v39 = swift_slowAlloc();
    v40 = (void (*)(_QWORD))swift_slowAlloc();
    v163 = v40;
    *(_DWORD *)v39 = 136446466;
    swift_bridgeObjectRetain();
    v41 = (uint64_t)v156;
    v161[0] = sub_1A296DA00((uint64_t)v156, v33, (uint64_t *)&v163);
    sub_1A2AE3A60();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v39 + 12) = 1024;
    LODWORD(v161[0]) = v146 & 1;
    sub_1A2AE3A60();
    _os_log_impl(&dword_1A2830000, v36, v37, "Invocation [%{public}s] START -- Daemon {sync: %{BOOL}d}", (uint8_t *)v39, 0x12u);
    swift_arrayDestroy();
    v42 = v40;
    v31 = v158;
    MEMORY[0x1A85896E8](v42, -1, -1);
    MEMORY[0x1A85896E8](v39, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    v41 = (uint64_t)v156;
  }
  v60 = v153;
  v61 = *(_QWORD *)((char *)v159 + qword_1EE6ADCD8);
  v62 = (objc_class *)type metadata accessor for _SFXPCAsyncSequenceContainer(0);
  v63 = objc_allocWithZone(v62);
  swift_retain();
  swift_bridgeObjectRetain();
  v64 = (char *)v63;
  v65 = v157;
  sub_1A2AE3124();
  v66 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v66(&v64[OBJC_IVAR____SFXPCAsyncSequenceContainer_uuid], v65, v60);
  v67 = (uint64_t *)&v64[OBJC_IVAR____SFXPCAsyncSequenceContainer_name];
  *v67 = v41;
  v67[1] = v33;
  swift_bridgeObjectRetain();
  *(_QWORD *)&v64[OBJC_IVAR____SFXPCAsyncSequenceContainer_sequences] = sub_1A297876C(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)&v64[OBJC_IVAR____SFXPCAsyncSequenceContainer_containerRegistry] = v61;
  swift_retain();

  if (v61)
  {
    v68 = sub_1A2AE36E8();
    v69 = v65;
    v70 = v150;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v150, 1, 1, v68);
    v71 = v148;
    v66(v148, v69, v60);
    v72 = (*(unsigned __int8 *)(v20 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v73 = (v147 + v72 + 7) & 0xFFFFFFFFFFFFFFF8;
    v74 = (char *)swift_allocObject();
    v153 = (uint64_t)v62;
    v75 = (uint64_t)v74;
    *((_QWORD *)v74 + 2) = 0;
    *((_QWORD *)v74 + 3) = 0;
    *((_QWORD *)v74 + 4) = v61;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v74[v72], v71, v60);
    v76 = (_QWORD *)(v75 + v73);
    v41 = (uint64_t)v156;
    *v76 = v156;
    v76[1] = v33;
    swift_retain_n();
    swift_bridgeObjectRetain();
    v77 = v70;
    v31 = v158;
    sub_1A2974504(v77, (uint64_t)&unk_1EE67B188, v75);
    swift_bridgeObjectRelease();
    swift_release();
    v62 = (objc_class *)v153;
    swift_release();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v157, v60);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v65, v60);
    swift_bridgeObjectRelease();
  }
  v167.receiver = v64;
  v167.super_class = v62;
  v78 = objc_msgSendSuper2(&v167, sel_init, v134);
  swift_release();
  v79 = objc_allocWithZone((Class)type metadata accessor for _SFXPCBlockContainer());
  swift_bridgeObjectRetain();
  swift_retain();
  v80 = (char *)sub_1A297B80C(v41, v33, v61);
  swift_release();
  v81 = *(_QWORD *)((char *)v159 + qword_1EE6ADCD0);
  if (v81)
    v82 = *(_QWORD *)((char *)v159 + qword_1EE6ADCD0 + 8);
  else
    v82 = 0;
  v161[0] = *(_QWORD *)((char *)v159 + qword_1EE6ADCD0);
  v161[1] = v82;
  sub_1A29DF9C8(v81);
  v83 = v155;
  swift_getFunctionTypeMetadata1();
  v84 = sub_1A2AE39F4();
  Optional.tryUnwrap(_:file:line:)(0xD000000000000010, 0x80000001A2B48F70, 0xD00000000000004FLL, 0x80000001A2B48F20, 269, v84, (uint64_t)&v163);
  sub_1A297CC78(v81);
  v85 = (_QWORD *)v164;
  v163(v31);
  v159 = v85;
  if ((v146 & 1) == 0)
  {
    v94 = sub_1A2AE36E8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v150, 1, 1, v94);
    v95 = v134;
    (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v141, v135, v83);
    sub_1A2AA25B8((uint64_t)v31, v140);
    v96 = (*(unsigned __int8 *)(v95 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
    v97 = (v138 + *(unsigned __int8 *)(v136 + 80) + v96) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80);
    v154 = (v137 + v97 + 7) & 0xFFFFFFFFFFFFFFF8;
    v98 = (v154 + 15) & 0xFFFFFFFFFFFFFFF8;
    v99 = v83;
    v100 = (v98 + 15) & 0xFFFFFFFFFFFFFFF8;
    v101 = (v100 + 15) & 0xFFFFFFFFFFFFFFF8;
    v157 = v80;
    v102 = (v101 + 15) & 0xFFFFFFFFFFFFFFF8;
    v153 = (uint64_t)v78;
    v103 = (char *)swift_allocObject();
    *((_QWORD *)v103 + 2) = 0;
    *((_QWORD *)v103 + 3) = 0;
    v104 = v99;
    *((_QWORD *)v103 + 4) = v99;
    v105 = v149;
    v106 = v142;
    *((_QWORD *)v103 + 5) = v149;
    *((_QWORD *)v103 + 6) = v106;
    *((_QWORD *)v103 + 7) = v143;
    (*(void (**)(char *, char *, uint64_t))(v134 + 32))(&v103[v96], v141, v104);
    sub_1A2AA25FC(v140, (uint64_t)&v103[v97]);
    *(_QWORD *)&v103[v154] = v144;
    *(_QWORD *)&v103[v98] = v139;
    v107 = (void *)v153;
    *(_QWORD *)&v103[v100] = v153;
    v108 = (uint64_t)v156;
    v109 = v157;
    *(_QWORD *)&v103[v101] = v157;
    v110 = (uint64_t *)&v103[v102];
    *v110 = v108;
    v110[1] = v33;
    v111 = &v103[(v102 + 23) & 0xFFFFFFFFFFFFFFF8];
    v112 = v151;
    *(_QWORD *)v111 = v152;
    *((_QWORD *)v111 + 1) = v112;
    v113 = v105;
    v114 = v107;
    v115 = v109;
    sub_1A2973524(v142, v143);
    swift_unknownObjectRetain();
    swift_retain();
    swift_unknownObjectRetain();
    sub_1A2974504(v150, (uint64_t)&unk_1EE67F690, (uint64_t)v103);

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v134 + 8))(v135, v155);
    return sub_1A2AA2640((uint64_t)v158);
  }
  v162 = type metadata accessor for SFXPCInvocation();
  v161[0] = (uint64_t)v149;
  v93 = v149;
  sub_1A2974E50((uint64_t)v161, 0, 0, 0xD00000000000004FLL, 0x80000001A2B48F20, 272, (uint64_t)&v163);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v161);
  v116 = v165;
  v117 = v166;
  __swift_project_boxed_opaque_existential_1(&v163, v165);
  v162 = v83;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v161);
  (*(void (**)(uint64_t *, char *, uint64_t))(v134 + 16))(boxed_opaque_existential_0, v135, v83);
  v119 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t *, char *, uint64_t, uint64_t, id, char *, uint64_t, uint64_t))(v117 + 8))(v142, v143, v161, v31, v144, v139, v78, v80, v116, v117);
  v121 = v120;
  v157 = v80;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v161);
  sub_1A2973524(v119, v121);
  swift_bridgeObjectRetain();
  sub_1A2973524(v119, v121);
  v122 = sub_1A2AE31C0();
  v123 = sub_1A2AE3964();
  if (os_log_type_enabled(v122, v123))
  {
    v125 = swift_slowAlloc();
    v154 = swift_slowAlloc();
    v161[0] = v154;
    *(_DWORD *)v125 = 136446466;
    swift_bridgeObjectRetain();
    v160 = sub_1A296DA00((uint64_t)v156, v33, v161);
    sub_1A2AE3A60();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v125 + 12) = 2080;
    sub_1A2973524(v119, v121);
    v126 = sub_1A2AE2F5C();
    v127 = v78;
    v129 = v128;
    sub_1A29736C4(v119, v121);
    v160 = sub_1A296DA00(v126, v129, v161);
    v31 = v158;
    sub_1A2AE3A60();
    v78 = v127;
    swift_bridgeObjectRelease();
    sub_1A29736C4(v119, v121);
    sub_1A29736C4(v119, v121);
    _os_log_impl(&dword_1A2830000, v122, v123, "Invocation [%{public}s] END -- Daemon {responseData: %s, sync: true}", (uint8_t *)v125, 0x16u);
    v130 = v154;
    swift_arrayDestroy();
    v83 = v155;
    MEMORY[0x1A85896E8](v130, -1, -1);
    MEMORY[0x1A85896E8](v125, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1A29736C4(v119, v121);
    sub_1A29736C4(v119, v121);
  }

  v131 = v157;
  sub_1A2973524(v119, v121);
  v132 = v78;
  v133 = v131;
  v152(v119, v121, v78, v131, 0);

  swift_release();
  sub_1A29736C4(v119, v121);
  sub_1A29736C4(v119, v121);

  (*(void (**)(char *, uint64_t))(v134 + 8))(v135, v83);
  sub_1A2AA2640((uint64_t)v31);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v163);
}

uint64_t sub_1A2AB3540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  *(_QWORD *)(v8 + 288) = v14;
  *(_OWORD *)(v8 + 256) = v12;
  *(_OWORD *)(v8 + 272) = v13;
  *(_OWORD *)(v8 + 224) = v10;
  *(_OWORD *)(v8 + 240) = v11;
  *(_QWORD *)(v8 + 208) = a7;
  *(_QWORD *)(v8 + 216) = a8;
  *(_QWORD *)(v8 + 192) = a5;
  *(_QWORD *)(v8 + 200) = a6;
  *(_QWORD *)(v8 + 184) = a4;
  return swift_task_switch();
}

void sub_1A2AB357C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_0;
  _QWORD *v8;
  uint64_t v9;

  v1 = (void *)v0[23];
  v2 = type metadata accessor for SFXPCInvocation();
  v0[7] = v1;
  v0[10] = v2;
  v3 = v1;
  sub_1A2974FBC((uint64_t)(v0 + 7), 0, 0, 0xD00000000000004FLL, 0x80000001A2B48F20, 285, (uint64_t)(v0 + 2));
  v4 = v0[36];
  v5 = v0[26];
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 7));
  v6 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  v0[14] = v4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v0 + 11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(boxed_opaque_existential_0, v5, v4);
  v9 = **(int **)(v6 + 8) + *(_QWORD *)(v6 + 8);
  v8 = (_QWORD *)swift_task_alloc();
  v0[37] = v8;
  *v8 = v0;
  v8[1] = sub_1A2AB3924;
  __asm { BR              X8 }
}

uint64_t sub_1A2AB3924(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[38] = a1;
  v4[39] = a2;
  v4[40] = v2;
  swift_task_dealloc();
  if (!v2)
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v4 + 11));
  return swift_task_switch();
}

uint64_t sub_1A2AB399C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, unint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  if (qword_1EE676730 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 312);
  v3 = sub_1A2AE31D8();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EE676710);
  swift_bridgeObjectRetain();
  sub_1A2973524(v1, v2);
  swift_bridgeObjectRetain();
  sub_1A2973524(v1, v2);
  v4 = sub_1A2AE31C0();
  v5 = sub_1A2AE3964();
  v6 = os_log_type_enabled(v4, v5);
  v8 = *(_QWORD *)(v0 + 304);
  v7 = *(_QWORD *)(v0 + 312);
  v9 = *(_QWORD *)(v0 + 264);
  if (v6)
  {
    v10 = *(_QWORD *)(v0 + 256);
    v11 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v22 = v21;
    *(_DWORD *)v11 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 168) = sub_1A296DA00(v10, v9, &v22);
    sub_1A2AE3A60();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2080;
    sub_1A2973524(v8, v7);
    v12 = sub_1A2AE2F5C();
    v14 = v13;
    sub_1A29736C4(v8, v7);
    *(_QWORD *)(v0 + 176) = sub_1A296DA00(v12, v14, &v22);
    sub_1A2AE3A60();
    swift_bridgeObjectRelease();
    sub_1A29736C4(v8, v7);
    sub_1A29736C4(v8, v7);
    _os_log_impl(&dword_1A2830000, v4, v5, "Invocation [%{public}s] END -- Daemon {responseData: %s, sync: false}", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85896E8](v21, -1, -1);
    MEMORY[0x1A85896E8](v11, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1A29736C4(v8, v7);
    sub_1A29736C4(v8, v7);
  }

  v16 = *(_QWORD *)(v0 + 304);
  v15 = *(_QWORD *)(v0 + 312);
  v17 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, _QWORD))(v0 + 272);
  v19 = *(_QWORD *)(v0 + 240);
  v18 = *(_QWORD *)(v0 + 248);
  sub_1A2973524(v16, v15);
  v17(v16, v15, v19, v18, 0);
  sub_1A29736C4(v16, v15);
  sub_1A29736C4(v16, v15);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A2AB3C5C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(_QWORD, unint64_t, _QWORD, _QWORD, id);
  id v15;
  id v16;
  id v17;
  uint64_t v19;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 88);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  v1 = *(void **)(v0 + 320);
  if (qword_1EE676730 != -1)
    swift_once();
  v2 = sub_1A2AE31D8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EE676710);
  swift_bridgeObjectRetain();
  v3 = v1;
  swift_bridgeObjectRetain();
  v4 = v1;
  v5 = sub_1A2AE31C0();
  v6 = sub_1A2AE3964();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 264);
  if (v7)
  {
    v9 = *(_QWORD *)(v0 + 256);
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v19 = v11;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 160) = sub_1A296DA00(v9, v8, &v19);
    sub_1A2AE3A60();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2082;
    swift_getErrorValue();
    v12 = sub_1A2AE3F94();
    *(_QWORD *)(v0 + 152) = sub_1A296DA00(v12, v13, &v19);
    sub_1A2AE3A60();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A2830000, v5, v6, "Invocation [%{public}s] FAIL -- Daemon post-async-invocation {error: %{public}s, sync: false}", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85896E8](v11, -1, -1);
    MEMORY[0x1A85896E8](v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  v14 = *(void (**)(_QWORD, unint64_t, _QWORD, _QWORD, id))(v0 + 272);
  v15 = objc_allocWithZone((Class)type metadata accessor for _SFXPCError());
  v16 = v1;
  v17 = sub_1A2AB6180(v1);

  v14(0, 0xF000000000000000, 0, 0, v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1A2AB3F08(void *a1, int a2, void *a3, void *a4, uint64_t a5, uint64_t a6, int a7, void *aBlock)
{
  void *v14;
  char *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;

  v14 = _Block_copy(aBlock);
  v15 = a3;
  v16 = a4;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v21 = a1;
  v17 = sub_1A2AE2F80();
  v19 = v18;

  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v14;
  SFXPCListener.ClientConnection.invoke(_:parametersData:parametersAsyncSequenceContainer:parametersBlocksContainer:sync:completion:)(v15, v17, v19, a5, a6, a7, (void (*)(_QWORD, unint64_t, _QWORD, _QWORD, id))sub_1A297CB10, v20);
  swift_release();
  sub_1A29736C4(v17, v19);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

}

void SFXPCListener.ClientConnection.init()()
{
  sub_1A2AB71F4();
}

void sub_1A2AB4030()
{
  sub_1A2AB71F4();
}

uint64_t sub_1A2AB4050(uint64_t a1)
{
  sub_1A2AA2640(a1 + qword_1EE6ADCB8);
  swift_release();
  sub_1A297CC78(*(_QWORD *)(a1 + qword_1EE6ADCD0));
  return swift_release();
}

uint64_t sub_1A2AB40AC()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = sub_1A2AB40D0();
  qword_1ECEFD598 = result;
  unk_1ECEFD5A0 = v1;
  qword_1ECEFD5A8 = v2;
  unk_1ECEFD5B0 = v3;
  return result;
}

uint64_t sub_1A2AB40D0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t result;

  v0 = (void *)objc_opt_self();
  objc_msgSend(v0, sel_interfaceWithProtocol_, &unk_1EE6DC228);
  objc_msgSend(v0, sel_interfaceWithProtocol_, &unk_1EE6D2100);
  objc_msgSend(v0, sel_interfaceWithProtocol_, &unk_1EE6D2068);
  objc_msgSend(v0, sel_interfaceWithProtocol_, &unk_1EE6D1FD8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEFCFB0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1A2B02520;
  v2 = sub_1A2A24358(0, &qword_1ECEFCFD0);
  *(_QWORD *)(v1 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEFCFD8);
  *(_QWORD *)(v1 + 32) = v2;
  v3 = type metadata accessor for SFXPCInvocation();
  *(_QWORD *)(v1 + 88) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEFCFC0);
  *(_QWORD *)(v1 + 64) = v3;
  v4 = objc_allocWithZone(MEMORY[0x1E0C99E60]);
  v5 = (void *)sub_1A2AE3610();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_initWithArray_, v5);

  result = sub_1A2AE3874();
  __break(1u);
  return result;
}

uint64_t _AnySFXPCSyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlockContainer:responseAsyncSequenceContainer:responseXPCBlockContainer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t result;
  void (*v40)(char *, char *, uint64_t);
  void (*v41)(_BYTE *, _QWORD);
  uint64_t v42;
  void (*v43)(_BYTE *, _QWORD);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  id v52;
  void (*v53)(_BYTE *, _QWORD);
  char *v54;
  uint64_t v55;
  id v56;
  void (*v57)(_BYTE *, _QWORD);
  uint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(char *, char *, uint64_t);
  char *v62;
  id v63;
  uint64_t v64;
  uint64_t AssociatedTypeWitness;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(char *, uint64_t, uint64_t);
  uint64_t v86;
  _BYTE v87[32];
  __int128 v88;
  __int128 v89;
  char *v90;

  v63 = a8;
  v70 = a7;
  v73 = a4;
  v76 = a3;
  v79 = a1;
  v80 = a2;
  v13 = *(_QWORD *)(a11 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v64 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v74 = (char *)&v60 - v14;
  v72 = a11;
  v77 = swift_getAssociatedTypeWitness();
  v71 = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77);
  v78 = (uint64_t)&v60 - v15;
  v83 = v13;
  v84 = a9;
  v82 = swift_getAssociatedTypeWitness();
  v75 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v90 = (char *)&v60 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEFC720);
  v18 = MEMORY[0x1E0C80A78](v17);
  v69 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v68 = (char *)&v60 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v60 - v23;
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v60 - v25;
  v27 = sub_1A2AE3C40();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = MEMORY[0x1E0C80A78](v27);
  v62 = (char *)&v60 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x1E0C80A78](v29);
  v67 = (char *)&v60 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v35 = (char *)&v60 - v34;
  MEMORY[0x1E0C80A78](v33);
  v37 = (char *)&v60 - v36;
  sub_1A2AE2E00();
  swift_allocObject();
  v38 = sub_1A2AE2DF4();
  v66 = "rProtocol>\"24@\"_SFXPCError\"32";
  sub_1A2AE3C34();
  v85 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  result = v85(v26, 1, v27);
  if ((_DWORD)result == 1)
  {
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v40 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  v40(v37, v26, v27);
  if (a5)
  {
    *((_QWORD *)&v89 + 1) = swift_getObjectType();
    *(_QWORD *)&v88 = a5;
  }
  else
  {
    v88 = 0u;
    v89 = 0u;
  }
  swift_unknownObjectRetain();
  v86 = v38;
  v41 = (void (*)(_BYTE *, _QWORD))sub_1A2AE2DE8();
  sub_1A29B3438((uint64_t)&v88, (uint64_t)v37);
  v41(v87, 0);
  sub_1A2AE3C34();
  result = v85(v24, 1, v27);
  if ((_DWORD)result == 1)
    goto LABEL_17;
  v40(v35, v24, v27);
  v42 = v84;
  v61 = v40;
  v60 = "amework/XPC/SFXPCBlock.swift";
  if (a6)
  {
    *((_QWORD *)&v89 + 1) = swift_getObjectType();
    *(_QWORD *)&v88 = a6;
  }
  else
  {
    v88 = 0u;
    v89 = 0u;
  }
  swift_unknownObjectRetain();
  v43 = (void (*)(_BYTE *, _QWORD))sub_1A2AE2DE8();
  sub_1A29B3438((uint64_t)&v88, (uint64_t)v35);
  v43(v87, 0);
  v44 = v82;
  swift_getAssociatedConformanceWitness();
  v45 = v81;
  sub_1A2AE2DDC();
  if (v45)
  {
    swift_release();
    return (uint64_t)v43;
  }
  v47 = v77;
  v46 = v78;
  tryCast<A>(_:as:description:file:line:)(v76, v77, 0, 0, 0xD00000000000004FLL, 0x80000001A2B48F20, 440, v77, v78);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 24))(v90, v46, v73, v42);
  sub_1A2AE2E30();
  swift_allocObject();
  v81 = sub_1A2AE2E24();
  v48 = v68;
  sub_1A2AE3C34();
  v49 = v85;
  result = v85(v48, 1, v27);
  if ((_DWORD)result == 1)
    goto LABEL_18;
  v50 = (uint64_t)v67;
  v51 = v61;
  v61(v67, v48, v27);
  *((_QWORD *)&v89 + 1) = type metadata accessor for _SFXPCAsyncSequenceContainer(0);
  *(_QWORD *)&v88 = v70;
  v52 = v70;
  v53 = (void (*)(_BYTE *, _QWORD))sub_1A2AE2E18();
  sub_1A29B3438((uint64_t)&v88, v50);
  v53(v87, 0);
  v54 = v69;
  sub_1A2AE3C34();
  result = v49(v54, 1, v27);
  if ((_DWORD)result != 1)
  {
    v55 = (uint64_t)v62;
    v51(v62, v54, v27);
    *((_QWORD *)&v89 + 1) = type metadata accessor for _SFXPCBlockContainer();
    *(_QWORD *)&v88 = v63;
    v56 = v63;
    v57 = (void (*)(_BYTE *, _QWORD))sub_1A2AE2E18();
    sub_1A29B3438((uint64_t)&v88, v55);
    v57(v87, 0);
    v58 = AssociatedTypeWitness;
    swift_getAssociatedConformanceWitness();
    v59 = v74;
    v43 = (void (*)(_BYTE *, _QWORD))sub_1A2AE2E0C();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v59, v58);
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v78, v47);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v90, v44);
    return (uint64_t)v43;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v9[27] = v16;
  v9[28] = v8;
  v9[25] = a8;
  v9[26] = v15;
  v9[23] = a6;
  v9[24] = a7;
  v9[21] = a4;
  v9[22] = a5;
  v9[19] = a2;
  v9[20] = a3;
  v9[18] = a1;
  v9[29] = *(_QWORD *)(v16 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[30] = AssociatedTypeWitness;
  v9[31] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[32] = swift_task_alloc();
  v11 = swift_getAssociatedTypeWitness();
  v9[33] = v11;
  v9[34] = *(_QWORD *)(v11 - 8);
  v9[35] = swift_task_alloc();
  v12 = swift_getAssociatedTypeWitness();
  v9[36] = v12;
  v9[37] = *(_QWORD *)(v12 - 8);
  v9[38] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEFC720);
  v9[39] = swift_task_alloc();
  v9[40] = swift_task_alloc();
  v9[41] = swift_task_alloc();
  v9[42] = swift_task_alloc();
  v13 = sub_1A2AE3C40();
  v9[43] = v13;
  v9[44] = *(_QWORD *)(v13 - 8);
  v9[45] = swift_task_alloc();
  v9[46] = swift_task_alloc();
  v9[47] = swift_task_alloc();
  v9[48] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A2AB4DFC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *, _QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t *, _QWORD);
  _QWORD *v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  __int128 v22;
  __int128 v23;

  v2 = v0[43];
  v1 = v0[44];
  v3 = v0[42];
  sub_1A2AE2E00();
  swift_allocObject();
  v0[49] = sub_1A2AE2DF4();
  sub_1A2AE3C34();
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  v0[50] = (uint64_t)v4;
  result = v4(v3, 1, v2);
  if ((_DWORD)result == 1)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  v6 = v0[48];
  v7 = v0[43];
  v8 = v0[42];
  v9 = v0[22];
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[44] + 32);
  v0[51] = (uint64_t)v10;
  v10(v6, v8, v7);
  v11 = v0[22];
  if (v9)
  {
    *((_QWORD *)&v23 + 1) = swift_getObjectType();
    *(_QWORD *)&v22 = v11;
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  v12 = v0[48];
  v13 = v0[43];
  v14 = v0[41];
  swift_unknownObjectRetain();
  v15 = (void (*)(uint64_t *, _QWORD))sub_1A2AE2DE8();
  sub_1A29B3438((uint64_t)&v22, v12);
  v15(v0 + 2, 0);
  sub_1A2AE3C34();
  result = v4(v14, 1, v13);
  if ((_DWORD)result == 1)
    goto LABEL_11;
  v16 = v0[23];
  v10(v0[47], v0[41], v0[43]);
  v17 = v0[23];
  if (v16)
  {
    *((_QWORD *)&v23 + 1) = swift_getObjectType();
    *(_QWORD *)&v22 = v17;
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  v18 = v0[47];
  swift_unknownObjectRetain();
  v19 = (void (*)(uint64_t *, _QWORD))sub_1A2AE2DE8();
  sub_1A29B3438((uint64_t)&v22, v18);
  v19(v0 + 6, 0);
  swift_getAssociatedConformanceWitness();
  sub_1A2AE2DDC();
  tryCast<A>(_:as:description:file:line:)(v0[20], v0[33], 0, 0, 0xD00000000000004FLL, 0x80000001A2B48F20, 475, v0[33], v0[35]);
  v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v0[27] + 24)
                                                                                     + *(_QWORD *)(v0[27] + 24));
  v20 = (_QWORD *)swift_task_alloc();
  v0[52] = (uint64_t)v20;
  *v20 = v0;
  v20[1] = sub_1A2AB5188;
  return v21(v0[32], v0[38], v0[35], v0[21], v0[26], v0[27]);
}

uint64_t sub_1A2AB5188()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 424) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A2AB51EC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void (*v11)(uint64_t, _QWORD);
  uint64_t v12;
  void *v13;
  id v14;
  void (*v15)(uint64_t, _QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 400);
  v2 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 320);
  sub_1A2AE2E30();
  swift_allocObject();
  sub_1A2AE2E24();
  sub_1A2AE3C34();
  result = v1(v3, 1, v2);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 400);
  v6 = *(_QWORD *)(v0 + 368);
  v7 = *(_QWORD *)(v0 + 344);
  v8 = *(_QWORD *)(v0 + 312);
  v9 = *(void **)(v0 + 192);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 408))(v6, *(_QWORD *)(v0 + 320), v7);
  v40 = type metadata accessor for _SFXPCAsyncSequenceContainer(0);
  v39[0] = v9;
  v10 = v9;
  v11 = (void (*)(uint64_t, _QWORD))sub_1A2AE2E18();
  sub_1A29B3438((uint64_t)v39, v6);
  v11(v0 + 80, 0);
  sub_1A2AE3C34();
  result = v5(v8, 1, v7);
  if ((_DWORD)result == 1)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v36 = *(_QWORD *)(v0 + 424);
  v12 = *(_QWORD *)(v0 + 360);
  v13 = *(void **)(v0 + 200);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0 + 408))(v12, *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 344));
  v40 = type metadata accessor for _SFXPCBlockContainer();
  v39[0] = v13;
  v14 = v13;
  v15 = (void (*)(uint64_t, _QWORD))sub_1A2AE2E18();
  sub_1A29B3438((uint64_t)v39, v12);
  v15(v0 + 112, 0);
  swift_getAssociatedConformanceWitness();
  v16 = sub_1A2AE2E0C();
  if (v36)
  {
    v18 = *(_QWORD *)(v0 + 296);
    v35 = *(_QWORD *)(v0 + 304);
    v20 = *(_QWORD *)(v0 + 280);
    v19 = *(_QWORD *)(v0 + 288);
    v22 = *(_QWORD *)(v0 + 264);
    v21 = *(_QWORD *)(v0 + 272);
    v23 = *(_QWORD *)(v0 + 248);
    v24 = *(_QWORD *)(v0 + 256);
    v25 = *(_QWORD *)(v0 + 240);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v25);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v35, v19);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 296);
    v34 = *(_QWORD *)(v0 + 304);
    v27 = *(_QWORD *)(v0 + 280);
    v28 = *(_QWORD *)(v0 + 288);
    v30 = *(_QWORD *)(v0 + 264);
    v29 = *(_QWORD *)(v0 + 272);
    v31 = *(_QWORD *)(v0 + 248);
    v32 = *(_QWORD *)(v0 + 256);
    v33 = *(_QWORD *)(v0 + 240);
    v37 = v16;
    v38 = v17;
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v33);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v30);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v34, v28);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v37, v38);
  }
}

uint64_t sub_1A2AB55E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 296);
  v1 = *(_QWORD *)(v0 + 304);
  v4 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 288);
  v5 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 272);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _SFXPCError.domain.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____SFXPCError_domain);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _SFXPCError.errorCode.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____SFXPCError_errorCode);
}

uint64_t _SFXPCError.internalLocalizedDescription.getter()
{
  return sub_1A2AB5744(&OBJC_IVAR____SFXPCError_internalLocalizedDescription);
}

uint64_t _SFXPCError.internalDebugDescription.getter()
{
  return sub_1A2AB5744(&OBJC_IVAR____SFXPCError_internalDebugDescription);
}

uint64_t _SFXPCError.file.getter()
{
  return sub_1A2AB5744(&OBJC_IVAR____SFXPCError_file);
}

uint64_t sub_1A2AB5744(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *a1);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t _SFXPCError.line.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____SFXPCError_line);
}

uint64_t _SFXPCError.process.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____SFXPCError_process);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static _SFXPCError.supportsSecureCoding.getter()
{
  return 1;
}

id _SFXPCError.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return _SFXPCError.init(coder:)(a1);
}

id _SFXPCError.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  char v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  objc_super v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[24];
  uint64_t v44;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F6D8);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1A2AFED80;
  v6 = sub_1A2A24358(0, &qword_1ECEFCFD0);
  *(_QWORD *)(v5 + 32) = v6;
  v7 = v2;
  sub_1A2AE39AC();
  swift_bridgeObjectRelease();
  if (!v44)
  {

LABEL_13:
    sub_1A29B84DC((uint64_t)v43);
    goto LABEL_14;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

LABEL_14:
    swift_deallocPartialClassInstance();
    return 0;
  }
  v9 = v41;
  v8 = v42;
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1A2AFED80;
  v11 = sub_1A2A24358(0, (unint64_t *)&qword_1EE67F6E0);
  *(_QWORD *)(v10 + 32) = v11;
  sub_1A2AE39AC();
  swift_bridgeObjectRelease();
  if (!v44)
    goto LABEL_12;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:

    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v39 = v41;
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1A2AFED80;
  *(_QWORD *)(v12 + 32) = v6;
  sub_1A2AE39AC();
  swift_bridgeObjectRelease();
  if (!v44)
  {
LABEL_12:

    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_16;
  v37 = v42;
  v38 = v41;
  v13 = &v7[OBJC_IVAR____SFXPCError_domain];
  *(_QWORD *)v13 = v9;
  *((_QWORD *)v13 + 1) = v8;
  *(_QWORD *)&v7[OBJC_IVAR____SFXPCError_errorCode] = v39;
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1A2AFED80;
  *(_QWORD *)(v14 + 32) = v6;
  sub_1A2AE39AC();
  swift_bridgeObjectRelease();
  if (v44)
  {
    v15 = swift_dynamicCast();
    v16 = v41;
    v17 = v42;
    if (!v15)
    {
      v16 = 0;
      v17 = 0;
    }
  }
  else
  {
    sub_1A29B84DC((uint64_t)v43);
    v16 = 0;
    v17 = 0;
  }
  v20 = &v7[OBJC_IVAR____SFXPCError_internalLocalizedDescription];
  *(_QWORD *)v20 = v16;
  *((_QWORD *)v20 + 1) = v17;
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1A2AFED80;
  *(_QWORD *)(v21 + 32) = v6;
  sub_1A2AE39AC();
  swift_bridgeObjectRelease();
  if (v44)
  {
    v22 = swift_dynamicCast();
    v23 = v41;
    v24 = v42;
    if (!v22)
    {
      v23 = 0;
      v24 = 0;
    }
  }
  else
  {
    sub_1A29B84DC((uint64_t)v43);
    v23 = 0;
    v24 = 0;
  }
  v25 = &v7[OBJC_IVAR____SFXPCError_internalDebugDescription];
  *(_QWORD *)v25 = v23;
  *((_QWORD *)v25 + 1) = v24;
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1A2AFED80;
  *(_QWORD *)(v26 + 32) = v6;
  sub_1A2AE39AC();
  swift_bridgeObjectRelease();
  if (v44)
  {
    v27 = swift_dynamicCast();
    v28 = v41;
    v29 = v42;
    if (!v27)
    {
      v28 = 0;
      v29 = 0;
    }
  }
  else
  {
    sub_1A29B84DC((uint64_t)v43);
    v28 = 0;
    v29 = 0;
  }
  v30 = &v7[OBJC_IVAR____SFXPCError_file];
  *(_QWORD *)v30 = v28;
  *((_QWORD *)v30 + 1) = v29;
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1A2AFED80;
  *(_QWORD *)(v31 + 32) = v11;
  sub_1A2AE39AC();
  swift_bridgeObjectRelease();
  if (v44)
  {
    v32 = swift_dynamicCast();
    v33 = v41;
    if (!v32)
      v33 = 0;
    v34 = v32 ^ 1;
  }
  else
  {
    sub_1A29B84DC((uint64_t)v43);
    v33 = 0;
    v34 = 1;
  }
  v35 = &v7[OBJC_IVAR____SFXPCError_line];
  *(_QWORD *)v35 = v33;
  v35[8] = v34;
  v36 = &v7[OBJC_IVAR____SFXPCError_process];
  *(_QWORD *)v36 = v38;
  *((_QWORD *)v36 + 1) = v37;

  v40.receiver = v7;
  v40.super_class = ObjectType;
  v18 = objc_msgSendSuper2(&v40, sel_init);

  return v18;
}

Swift::Void __swiftcall _SFXPCError.encode(with:)(NSCoder with)
{
  uint64_t v1;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;

  v3 = (void *)sub_1A2AE340C();
  v4 = (void *)sub_1A2AE340C();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v3, v4);

  v5 = *(_QWORD *)(v1 + OBJC_IVAR____SFXPCError_errorCode);
  v6 = (void *)sub_1A2AE340C();
  -[objc_class encodeInteger:forKey:](with.super.isa, sel_encodeInteger_forKey_, v5, v6);

  if (*(_QWORD *)(v1 + OBJC_IVAR____SFXPCError_internalLocalizedDescription + 8))
  {
    v7 = (void *)sub_1A2AE340C();
    v8 = (void *)sub_1A2AE340C();
    -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v7, v8);

  }
  if (*(_QWORD *)(v1 + OBJC_IVAR____SFXPCError_internalDebugDescription + 8))
  {
    v9 = (void *)sub_1A2AE340C();
    v10 = (void *)sub_1A2AE340C();
    -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v9, v10);

  }
  if (*(_QWORD *)(v1 + OBJC_IVAR____SFXPCError_file + 8))
  {
    v11 = (void *)sub_1A2AE340C();
    v12 = (void *)sub_1A2AE340C();
    -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v11, v12);

  }
  if ((*(_BYTE *)(v1 + OBJC_IVAR____SFXPCError_line + 8) & 1) == 0)
  {
    v13 = *(_QWORD *)(v1 + OBJC_IVAR____SFXPCError_line);
    v14 = (void *)sub_1A2AE340C();
    -[objc_class encodeInteger:forKey:](with.super.isa, sel_encodeInteger_forKey_, v13, v14);

  }
  v15 = (void *)sub_1A2AE340C();
  v16 = (id)sub_1A2AE340C();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v15, v16);

}

id _SFXPCError.init(_:)(void *a1)
{
  id v2;

  v2 = sub_1A2AB6180(a1);

  return v2;
}

id _SFXPCError.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void _SFXPCError.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1A2AB615C(uint64_t (*a1)(void))
{
  return a1() & 1;
}

id sub_1A2AB6180(void *a1)
{
  void *v1;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  char *v10;
  char *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  id v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  char *v44;
  char *v45;
  char *v46;
  objc_class *ObjectType;
  id v49;
  uint64_t v50;
  objc_super v51;
  __int128 v52;
  _BYTE v53[24];
  uint64_t v54;
  uint64_t v55;

  ObjectType = (objc_class *)swift_getObjectType();
  v3 = v1;
  v4 = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE6767B0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v5 = *((_QWORD *)&v52 + 1);
    v6 = *(_QWORD *)v53;
    v7 = v54;
    v8 = v55;
    v9 = *(_OWORD *)&v53[8];
    v10 = &v3[OBJC_IVAR____SFXPCError_domain];
    *(_QWORD *)v10 = v52;
    *((_QWORD *)v10 + 1) = v5;
    *(_QWORD *)&v3[OBJC_IVAR____SFXPCError_errorCode] = v6;
    *(_OWORD *)&v3[OBJC_IVAR____SFXPCError_internalLocalizedDescription] = v9;
    v11 = &v3[OBJC_IVAR____SFXPCError_internalDebugDescription];
    *(_QWORD *)&v3[OBJC_IVAR____SFXPCError_internalDebugDescription] = v7;
    goto LABEL_23;
  }
  v12 = (void *)sub_1A2AE2E9C();
  v13 = objc_msgSend(v12, sel_domain);
  v14 = sub_1A2AE343C();
  v16 = v15;

  v17 = (uint64_t *)&v3[OBJC_IVAR____SFXPCError_domain];
  *v17 = v14;
  v17[1] = v16;
  v18 = objc_msgSend(v12, sel_code);
  *(_QWORD *)&v3[OBJC_IVAR____SFXPCError_errorCode] = v18;
  swift_getErrorValue();
  v19 = sub_1A2AE3F94();
  v20 = (uint64_t *)&v3[OBJC_IVAR____SFXPCError_internalLocalizedDescription];
  *v20 = v19;
  v20[1] = v21;
  v22 = objc_msgSend(v12, sel_userInfo);
  v23 = sub_1A2AE337C();

  v24 = sub_1A2AE343C();
  if (*(_QWORD *)(v23 + 16) && (v26 = sub_1A297B374(v24, v25), (v27 & 1) != 0))
  {
    sub_1A296E4B4(*(_QWORD *)(v23 + 56) + 32 * v26, (uint64_t)&v52);
  }
  else
  {
    v52 = 0u;
    *(_OWORD *)v53 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)&v53[8])
  {
    sub_1A29B84DC((uint64_t)&v52);
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    v29 = objc_msgSend(v12, sel_userInfo);
    v30 = sub_1A2AE337C();

    if (*(_QWORD *)(v30 + 16) && (v31 = sub_1A297B374(0xD000000000000015, 0x80000001A2B46BB0), (v32 & 1) != 0))
    {
      sub_1A296E4B4(*(_QWORD *)(v30 + 56) + 32 * v31, (uint64_t)&v52);
    }
    else
    {
      v52 = 0u;
      *(_OWORD *)v53 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*(_QWORD *)&v53[8])
    {
      sub_1A2A24358(0, (unint64_t *)&unk_1EE67F7C0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        *(_QWORD *)&v52 = 0;
        *((_QWORD *)&v52 + 1) = 0xE000000000000000;
        sub_1A2AE3B20();
        sub_1A2AE34F0();
        v49 = objc_msgSend(a1, sel_name);
        type metadata accessor for NSExceptionName(0);
        sub_1A2AE3BF8();

        sub_1A2AE34F0();
        v33 = objc_msgSend(a1, sel_reason);
        if (v33)
        {
          v34 = v33;
          sub_1A2AE343C();

        }
        sub_1A2AE34F0();

        swift_bridgeObjectRelease();
        v8 = *((_QWORD *)&v52 + 1);
        v28 = (void *)v52;
        goto LABEL_22;
      }
    }
    else
    {
      sub_1A29B84DC((uint64_t)&v52);
    }
    *(_QWORD *)&v52 = a1;
    v35 = a1;
    v36 = sub_1A2AE346C();
    v8 = v37;

    v11 = &v3[OBJC_IVAR____SFXPCError_internalDebugDescription];
    *(_QWORD *)&v3[OBJC_IVAR____SFXPCError_internalDebugDescription] = v36;
    goto LABEL_23;
  }

  v28 = a1;
  v8 = v50;
LABEL_22:
  v11 = &v3[OBJC_IVAR____SFXPCError_internalDebugDescription];
  *(_QWORD *)&v3[OBJC_IVAR____SFXPCError_internalDebugDescription] = v28;
LABEL_23:
  *((_QWORD *)v11 + 1) = v8;
  v38 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v39 = objc_msgSend(v38, sel_processName);

  v40 = sub_1A2AE343C();
  v42 = v41;

  v43 = a1;
  if ((swift_dynamicCast() & 1) != 0)
    __asm { BR              X10 }
  v44 = &v3[OBJC_IVAR____SFXPCError_file];
  *(_QWORD *)v44 = 0;
  *((_QWORD *)v44 + 1) = 0;
  v45 = &v3[OBJC_IVAR____SFXPCError_line];
  *(_QWORD *)v45 = 0;
  v45[8] = 1;
  v46 = &v3[OBJC_IVAR____SFXPCError_process];
  *(_QWORD *)&v3[OBJC_IVAR____SFXPCError_process] = v40;
  *((_QWORD *)v46 + 1) = v42;

  v51.receiver = v3;
  v51.super_class = ObjectType;
  return objc_msgSendSuper2(&v51, sel_init);
}

void sub_1A2AB67A0()
{
  JUMPOUT(0x1A2AB6688);
}

void sub_1A2AB67B0()
{
  JUMPOUT(0x1A2AB6688);
}

#error "1A2AB6820: call analysis failed (funcsize=43)"

uint64_t type metadata accessor for SFXPCListener.ClientConnection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SFXPCListener.ClientConnection);
}

uint64_t sub_1A2AB6898(void *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t *v14;
  uint64_t v15;
  int v16;
  int *v17;
  int v18;
  int v19;
  int *v20;
  uint64_t v21;
  uint64_t *v22;
  char *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  objc_class *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t *v47;
  id v48;
  uint64_t v49;
  void *v50;
  char *v51;
  id v52;
  char *v53;
  char *v54;
  void (*v55)(char *);
  char *v56;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t aBlock;
  uint64_t v62;
  uint64_t (*v63)(uint64_t);
  void *v64;
  uint64_t (*v65)();
  uint64_t v66;
  _OWORD v67[2];

  v2 = v1;
  v4 = *v2;
  v5 = *MEMORY[0x1E0DEEDD8];
  v6 = type metadata accessor for SFClientIdentity();
  v7 = MEMORY[0x1E0C80A78](v6);
  v59 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v58 - v9;
  v11 = a1;
  v12 = (void *)sub_1A2AE340C();
  v13 = objc_msgSend(v11, sel_valueForEntitlement_, v12);

  if (v13)
  {
    sub_1A2AE3A90();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v67, 0, sizeof(v67));
  }
  v58 = v5 & v4;
  sub_1A296E450((uint64_t)v67, (uint64_t)&aBlock);
  v14 = (uint64_t *)&unk_1E4822280;
  if (!v64)
    v14 = (uint64_t *)(MEMORY[0x1E0DEE9D8] + 16);
  v15 = *v14;
  if (v15)
  {
    v16 = 0;
    if (v64)
      v17 = (int *)&unk_1E4822290;
    else
      v17 = (int *)(MEMORY[0x1E0DEE9D8] + 32);
    do
    {
      v19 = *v17++;
      v18 = v19;
      if ((v19 & ~v16) == 0)
        v18 = 0;
      v16 |= v18;
      --v15;
    }
    while (v15);
  }
  else
  {
    v16 = 0;
  }

  swift_bridgeObjectRelease();
  sub_1A29B84DC((uint64_t)&aBlock);
  v20 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE675F48);
  v21 = v20[12];
  v22 = (uint64_t *)&v10[v20[16]];
  v23 = &v10[v20[20]];
  v24 = v20[24];
  v25 = v11;
  sub_1A2AE3124();
  *(_DWORD *)&v10[v21] = objc_msgSend(v25, sel_processIdentifier);
  v26 = sub_1A2A15DE8();
  v28 = v27;

  *v22 = v26;
  v22[1] = v28;
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  *(_DWORD *)&v10[v24] = v16;
  swift_storeEnumTagMultiPayload();
  v29 = *(void **)((char *)v2 + qword_1EE67F678);
  type metadata accessor for SFXPCConnection();
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v25;
  *(_QWORD *)(v30 + 24) = 0;
  v31 = v25;
  v32 = v29;
  objc_msgSend(v31, sel_sf_setQueue_, v32);
  if (qword_1ECEFCFA8 != -1)
    swift_once();
  objc_msgSend(v31, sel_setRemoteObjectInterface_, qword_1ECEFD598);

  v35 = (objc_class *)type metadata accessor for SFXPCListener.ClientConnection(0, *(_QWORD *)(v58 + 80), v33, v34);
  v36 = v59;
  sub_1A2AA25B8((uint64_t)v10, v59);
  v37 = (uint64_t *)((char *)v2 + qword_1EE67F650);
  swift_beginAccess();
  v38 = *v37;
  v39 = (uint64_t *)((char *)v2 + qword_1EE67F668);
  swift_beginAccess();
  v41 = *v39;
  v40 = v39[1];
  swift_retain();
  swift_retain();
  sub_1A29DF9C8(v41);
  v42 = objc_allocWithZone(v35);
  v43 = SFXPCListener.ClientConnection.init(connection:clientIdentity:containerRegistry:contextProvider:)(v30, v36, v38, v41, v40);
  objc_msgSend(v31, sel_setExportedInterface_, qword_1ECEFD598);
  objc_msgSend(v31, sel_setExportedObject_, v43);
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = v2;
  *(_QWORD *)(v44 + 24) = v43;
  v65 = sub_1A2AB75F0;
  v66 = v44;
  v45 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v62 = 1107296256;
  v63 = sub_1A29FD800;
  v64 = &block_descriptor_8;
  v46 = _Block_copy(&aBlock);
  v47 = v2;
  v48 = v43;
  swift_release();
  objc_msgSend(v31, sel_setInvalidationHandler_, v46);
  _Block_release(v46);
  v49 = swift_allocObject();
  *(_QWORD *)(v49 + 16) = v47;
  *(_QWORD *)(v49 + 24) = v48;
  v65 = sub_1A2AB75D8;
  v66 = v49;
  aBlock = v45;
  v62 = 1107296256;
  v63 = sub_1A29FD800;
  v64 = &block_descriptor_47;
  v50 = _Block_copy(&aBlock);
  v51 = v47;
  v52 = v48;
  swift_release();
  objc_msgSend(v31, sel_setInterruptionHandler_, v50);
  _Block_release(v50);
  v60 = v52;
  swift_beginAccess();
  sub_1A2AE3670();
  v53 = (char *)v52;
  sub_1A2AE3658();
  swift_endAccess();
  objc_msgSend(*(id *)(v30 + 16), sel_activate);
  v54 = &v51[qword_1EE67F658];
  swift_beginAccess();
  v55 = *(void (**)(char *))v54;
  if (*(_QWORD *)v54)
  {
    swift_endAccess();
    v56 = &v53[qword_1EE6ADCB8];
    swift_retain();
    v55(v56);
    sub_1A297CC78((uint64_t)v55);
    swift_release();

    sub_1A2AA2640((uint64_t)v10);
  }
  else
  {
    sub_1A2AA2640((uint64_t)v10);
    swift_endAccess();

    swift_release();
  }
  return 1;
}

void sub_1A2AB6E38()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for _SFXPCError()
{
  return objc_opt_self();
}

uint64_t sub_1A2AB6E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  unint64_t v10;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(type metadata accessor for SFClientIdentity() - 8);
  v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  swift_unknownObjectRelease();

  sub_1A29736C4(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
    goto LABEL_4;
  if (EnumCaseMultiPayload == 1)
  {
    v9 = sub_1A2AE3130();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v6, v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675F48);
    swift_bridgeObjectRelease();
LABEL_4:
    swift_bridgeObjectRelease();
  }
  v10 = (((((v7 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A2AB700C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;

  v26 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v26 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(type metadata accessor for SFClientIdentity() - 8);
  v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v11 + 23) & 0xFFFFFFFFFFFFF8;
  v25 = *(_OWORD *)(v0 + 40);
  v23 = v0 + v3;
  v24 = *(_QWORD *)(v0 + 56);
  v13 = *(_QWORD *)(v0 + v7);
  v14 = *(_QWORD *)(v0 + v8);
  v15 = *(_QWORD *)(v0 + v9);
  v16 = *(_QWORD *)(v0 + v10);
  v17 = v0 + v6;
  v19 = *(_QWORD *)(v0 + v11);
  v18 = *(_QWORD *)(v0 + v11 + 8);
  v20 = swift_task_alloc();
  v21 = *(_OWORD *)(v0 + v12);
  *(_QWORD *)(v1 + 16) = v20;
  *(_QWORD *)v20 = v1;
  *(_QWORD *)(v20 + 8) = sub_1A2971EBC;
  *(_QWORD *)(v20 + 288) = v26;
  *(_OWORD *)(v20 + 272) = v21;
  *(_QWORD *)(v20 + 256) = v19;
  *(_QWORD *)(v20 + 264) = v18;
  *(_QWORD *)(v20 + 240) = v15;
  *(_QWORD *)(v20 + 248) = v16;
  *(_QWORD *)(v20 + 224) = v13;
  *(_QWORD *)(v20 + 232) = v14;
  *(_QWORD *)(v20 + 208) = v23;
  *(_QWORD *)(v20 + 216) = v17;
  *(_QWORD *)(v20 + 200) = v24;
  *(_OWORD *)(v20 + 184) = v25;
  return swift_task_switch();
}

uint64_t sub_1A2AB7158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A2AE3130();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A2AB71F4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1A2AB7228()
{
  return 8;
}

_QWORD *sub_1A2AB7234(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1A2AB7248()
{
  return 8;
}

uint64_t sub_1A2AB725C()
{
  return 8;
}

uint64_t dispatch thunk of _SFXPCSyncInvocableProtocol.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of _SFXPCAsyncInvocableProtocol.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 24)
                                                                                     + *(_QWORD *)(a6 + 24));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_1A2971EBC;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1A2AB7320()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for SFXPCListener(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SFXPCListener);
}

uint64_t method lookup function for SFXPCListener()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SFXPCListener.__allocating_init(takingOver:queue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1A2AB73AC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SFClientIdentity();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SFXPCListener.ClientConnection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SFXPCListener.ClientConnection.__allocating_init(connection:clientIdentity:containerRegistry:contextProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of _AnySFXPCSyncInvocableProtocol.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlockContainer:responseAsyncSequenceContainer:responseXPCBlockContainer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a10 + 8))(a1, a2);
}

uint64_t dispatch thunk of _AnySFXPCAsyncInvocableProtocol.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v18;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a10 + 8) + *(_QWORD *)(a10 + 8));
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v10 + 16) = v18;
  *v18 = v10;
  v18[1] = sub_1A29B9ED0;
  return v20(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t method lookup function for _SFXPCError()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of _SFXPCError.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of _SFXPCError.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1A2AB754C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A2AB7570()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A2AB7594()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_1A2AB75D8()
{
  uint64_t v0;

  return sub_1A2AB1F08(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void SFAirDropClient.Identifier.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for SFAirDropClient.Identifier();
  MEMORY[0x1E0C80A78](v1);
  sub_1A2AB97E4(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1A2AB76C0 + 4 * byte_1A2B0CD40[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A2AB76C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
  return 0x69577265646E6966;
}

uint64_t sub_1A2AB7818(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A2AB7858 + 4 * byte_1A2B0CD4D[a1]))(0x755379636167656CLL, 0xED000074726F7070);
}

uint64_t sub_1A2AB7858()
{
  return 6909027;
}

uint64_t sub_1A2AB7868()
{
  return 0x6E6F6D656164;
}

uint64_t sub_1A2AB787C()
{
  return 0x6568536572616873;
}

uint64_t sub_1A2AB7898()
{
  return 1886351202;
}

uint64_t sub_1A2AB78A8()
{
  return 0x7265646E6966;
}

uint64_t sub_1A2AB78BC()
{
  return 0x74656C6C6177;
}

uint64_t sub_1A2AB78D0()
{
  return 0x4E706F7244726961;
}

uint64_t sub_1A2AB78F4()
{
  return 0x69577265646E6966;
}

uint64_t sub_1A2AB7914()
{
  return 0x55706F7264726961;
}

unint64_t sub_1A2AB7930()
{
  return 0xD000000000000010;
}

uint64_t sub_1A2AB794C()
{
  return 0x636972656E6567;
}

uint64_t sub_1A2AB7964()
{
  return 0x79636167656CLL;
}

uint64_t sub_1A2AB7978()
{
  sub_1A2AB9974();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AB79A0()
{
  sub_1A2AB9974();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AB79C8()
{
  sub_1A2AB9930();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AB79F0()
{
  sub_1A2AB9930();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AB7A18()
{
  sub_1A2AB99FC();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AB7A40()
{
  sub_1A2AB99FC();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AB7A68()
{
  sub_1A2AB9AC8();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AB7A90()
{
  sub_1A2AB9AC8();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AB7AB8()
{
  unsigned __int8 *v0;

  return sub_1A2AB7818(*v0);
}

uint64_t sub_1A2AB7AC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2ABA924(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A2AB7AE4(_BYTE *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_1A2AB7AF0()
{
  sub_1A2AB9864();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AB7B18()
{
  sub_1A2AB9864();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AB7B40()
{
  sub_1A2AB9A84();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AB7B68()
{
  sub_1A2AB9A84();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AB7B90()
{
  _BYTE *v0;

  if (*v0)
    return 0x797469726F697270;
  else
    return 1701667182;
}

uint64_t sub_1A2AB7BC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2ABAE90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2AB7BE8()
{
  sub_1A2AB98EC();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AB7C10()
{
  sub_1A2AB98EC();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AB7C38()
{
  sub_1A2AB98A8();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AB7C60()
{
  sub_1A2AB98A8();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AB7C88()
{
  sub_1A2AB9B0C();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AB7CB0()
{
  sub_1A2AB9B0C();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AB7CD8()
{
  sub_1A2AB9A40();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AB7D00()
{
  sub_1A2AB9A40();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AB7D28()
{
  sub_1A2AB99B8();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AB7D50()
{
  sub_1A2AB99B8();
  return sub_1A2AE4108();
}

uint64_t SFAirDropClient.Identifier.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char v78;
  char v79;
  char v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char v85;
  char v86;
  char v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F7D0);
  v67 = *(_QWORD *)(v2 - 8);
  v68 = v2;
  MEMORY[0x1E0C80A78](v2);
  v66 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F7D8);
  v70 = *(_QWORD *)(v4 - 8);
  v71 = v4;
  MEMORY[0x1E0C80A78](v4);
  v69 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F7E0);
  v64 = *(_QWORD *)(v6 - 8);
  v65 = v6;
  MEMORY[0x1E0C80A78](v6);
  v63 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F7E8);
  v61 = *(_QWORD *)(v8 - 8);
  v62 = v8;
  MEMORY[0x1E0C80A78](v8);
  v60 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F7F0);
  v58 = *(_QWORD *)(v10 - 8);
  v59 = v10;
  MEMORY[0x1E0C80A78](v10);
  v57 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F7F8);
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v54 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F800);
  v52 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v51 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F808);
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v48 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F810);
  v46 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v45 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F818);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for SFAirDropClient.Identifier();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F820);
  v73 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v24 = (char *)&v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2AB9864();
  v74 = v24;
  sub_1A2AE40E4();
  sub_1A2AB97E4(v72, (uint64_t)v22);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v87 = 11;
      sub_1A2AB98EC();
      v25 = v69;
      v27 = v74;
      v26 = v75;
      sub_1A2AE3DB4();
      v86 = 0;
      v28 = v71;
      v29 = v76;
      sub_1A2AE3DF0();
      swift_bridgeObjectRelease();
      if (!v29)
      {
        v85 = 1;
        sub_1A2AE3E14();
      }
      (*(void (**)(char *, uint64_t))(v70 + 8))(v25, v28);
      return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v27, v26);
    case 2u:
      v77 = 0;
      sub_1A2AB9B0C();
      v33 = v74;
      v32 = v75;
      sub_1A2AE3DB4();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      goto LABEL_17;
    case 3u:
      v78 = 1;
      sub_1A2AB9AC8();
      v36 = v45;
      v37 = v74;
      v38 = v75;
      sub_1A2AE3DB4();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v36, v47);
      return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v37, v38);
    case 4u:
      v79 = 2;
      sub_1A2AB9A84();
      v39 = v48;
      v33 = v74;
      v32 = v75;
      sub_1A2AE3DB4();
      v40 = *(void (**)(char *, uint64_t))(v49 + 8);
      v41 = v39;
      v42 = &v89;
      goto LABEL_12;
    case 5u:
      v80 = 3;
      sub_1A2AB9A40();
      v43 = v51;
      v33 = v74;
      v32 = v75;
      sub_1A2AE3DB4();
      v40 = *(void (**)(char *, uint64_t))(v52 + 8);
      v41 = v43;
      v42 = &v90;
      goto LABEL_12;
    case 6u:
      v81 = 4;
      sub_1A2AB99FC();
      v44 = v54;
      v33 = v74;
      v32 = v75;
      sub_1A2AE3DB4();
      v40 = *(void (**)(char *, uint64_t))(v55 + 8);
      v41 = v44;
      v42 = &v91;
LABEL_12:
      v34 = *(v42 - 32);
      goto LABEL_16;
    case 8u:
      v82 = 6;
      sub_1A2AB99B8();
      v31 = v57;
      v33 = v74;
      v32 = v75;
      sub_1A2AE3DB4();
      v35 = v58;
      v34 = v59;
      goto LABEL_15;
    case 0xAu:
      v83 = 9;
      sub_1A2AB9974();
      v31 = v60;
      v33 = v74;
      v32 = v75;
      sub_1A2AE3DB4();
      v35 = v61;
      v34 = v62;
      goto LABEL_15;
    case 0xBu:
      v84 = 10;
      sub_1A2AB9930();
      v31 = v63;
      v33 = v74;
      v32 = v75;
      sub_1A2AE3DB4();
      v35 = v64;
      v34 = v65;
      goto LABEL_15;
    case 0xCu:
      v88 = 12;
      sub_1A2AB98A8();
      v31 = v66;
      v33 = v74;
      v32 = v75;
      sub_1A2AE3DB4();
      v35 = v67;
      v34 = v68;
LABEL_15:
      v40 = *(void (**)(char *, uint64_t))(v35 + 8);
      v41 = v31;
LABEL_16:
      v40(v41, v34);
LABEL_17:
      result = (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v33, v32);
      break;
    default:
      result = sub_1A2AE3ED4();
      __break(1u);
      break;
  }
  return result;
}

uint64_t SFAirDropClient.Identifier.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  _QWORD v33[4];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  _QWORD *v64;
  uint64_t v65;

  v60 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F880);
  v49 = *(_QWORD *)(v3 - 8);
  v50 = v3;
  MEMORY[0x1E0C80A78](v3);
  v58 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F888);
  v33[2] = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v59 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F890);
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  MEMORY[0x1E0C80A78](v6);
  v57 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F898);
  v45 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v63 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F8A0);
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v56 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F8A8);
  v41 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v55 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F8B0);
  v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v54 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F8B8);
  v37 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v53 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F8C0);
  v35 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v52 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F8C8);
  v33[3] = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v61 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F8D0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for SFAirDropClient.Identifier();
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v33 - v23;
  v25 = a1[3];
  v64 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_1A2AB9864();
  v62 = v18;
  v26 = v65;
  sub_1A2AE40C0();
  if (!v26)
  {
    v33[0] = v22;
    v33[1] = v24;
    v65 = v16;
    v27 = v62;
    v28 = sub_1A2AE3D9C();
    if (*(_QWORD *)(v28 + 16) == 1)
      __asm { BR              X10 }
    v29 = sub_1A2AE3B5C();
    swift_allocError();
    v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE67AC00);
    *v31 = v19;
    sub_1A2AE3CF4();
    sub_1A2AE3B50();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v31, *MEMORY[0x1E0DEC450], v29);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v27, v15);
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v64);
}

void sub_1A2AB8A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 92) = 0;
  sub_1A2AB9B0C();
  sub_1A2AE3CE8();
  if (!v2)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 360) + 8))(v1, *(_QWORD *)(v4 - 352));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 104) + 8))(v0, v3);
    v5 = *(_QWORD *)(v4 - 376);
    swift_storeEnumTagMultiPayload();
    sub_1A2AB9B50(v5, *(_QWORD *)(v4 - 144));
    JUMPOUT(0x1A2AB8A70);
  }
  JUMPOUT(0x1A2AB8A50);
}

uint64_t sub_1A2AB90CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDropClient.Identifier.init(from:)(a1, a2);
}

uint64_t sub_1A2AB90E0(_QWORD *a1)
{
  return SFAirDropClient.Identifier.encode(to:)(a1);
}

BOOL sub_1A2AB90F8(uint64_t a1, uint64_t a2)
{
  return (_s7Sharing15SFAirDropClientC10IdentifierO1loiySbAE_AEtFZ_0(a2, a1) & 1) == 0;
}

BOOL sub_1A2AB9120(uint64_t a1, uint64_t a2)
{
  return (_s7Sharing15SFAirDropClientC10IdentifierO1loiySbAE_AEtFZ_0(a1, a2) & 1) == 0;
}

uint64_t sub_1A2AB913C(uint64_t a1, uint64_t a2)
{
  return _s7Sharing15SFAirDropClientC10IdentifierO1loiySbAE_AEtFZ_0(a2, a1);
}

uint64_t SFAirDropClient.Identifier.shouldHandleUpdate(presenter:)()
{
  return 1;
}

void _s7Sharing15SFAirDropClientC10IdentifierO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v4 = type metadata accessor for SFAirDropClient.Identifier();
  v5 = MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F9A0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v11 + *(int *)(v7 + 48) - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A2AB97E4(a1, (uint64_t)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A2AB97E4(a2, (uint64_t)v9);
  v10 = (char *)sub_1A2AB9250 + 4 * byte_1A2B0CD80[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A2AB9250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1A2AB97E4(v0, v1);
  if (!swift_getEnumCaseMultiPayload())
  {
    sub_1A2AE3F04();
    __break(1u);
    JUMPOUT(0x1A2AB9338);
  }
  v2 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1A2ABAF70(v0);
  return 0;
}

uint64_t _s7Sharing15SFAirDropClientC10IdentifierO1loiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  char *v22;
  uint64_t v24;

  v4 = type metadata accessor for SFAirDropClient.Identifier();
  v5 = MEMORY[0x1E0C80A78](v4);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)((char *)&v24 - v9);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F9A0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = &v14[*(int *)(v12 + 48)];
  sub_1A2AB97E4(a1, (uint64_t)v14);
  sub_1A2AB97E4(a2, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
LABEL_10:
    sub_1A2AB97E4(a1, (uint64_t)v8);
    v22 = (char *)&loc_1A2AB960C + 4 * byte_1A2B0CD8D[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_1A2AB97E4((uint64_t)v14, (uint64_t)v10);
  v17 = *v10;
  v16 = v10[1];
  v18 = v10[2];
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v19 = *((_QWORD *)v15 + 2);
  if (v18 == v19)
  {
    if (v17 == *(_QWORD *)v15 && v16 == *((_QWORD *)v15 + 1))
      v21 = 0;
    else
      v21 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = v18 < v19;
  }
  sub_1A2AB9828((uint64_t)v14);
  return v21 & 1;
}

uint64_t type metadata accessor for SFAirDropClient.Identifier()
{
  uint64_t result;

  result = qword_1EE674720;
  if (!qword_1EE674720)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A2AB97E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SFAirDropClient.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A2AB9828(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SFAirDropClient.Identifier();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A2AB9864()
{
  unint64_t result;

  result = qword_1EE67F828;
  if (!qword_1EE67F828)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D784, &_s10IdentifierO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F828);
  }
  return result;
}

unint64_t sub_1A2AB98A8()
{
  unint64_t result;

  result = qword_1EE67F830;
  if (!qword_1EE67F830)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D734, &_s10IdentifierO16LegacyCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F830);
  }
  return result;
}

unint64_t sub_1A2AB98EC()
{
  unint64_t result;

  result = qword_1EE67F838;
  if (!qword_1EE67F838)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D6E4, &_s10IdentifierO17GenericCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F838);
  }
  return result;
}

unint64_t sub_1A2AB9930()
{
  unint64_t result;

  result = qword_1EE67F840;
  if (!qword_1EE67F840)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D694, &_s10IdentifierO26AirdropUIManagerCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F840);
  }
  return result;
}

unint64_t sub_1A2AB9974()
{
  unint64_t result;

  result = qword_1EE67F848;
  if (!qword_1EE67F848)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D644, &_s10IdentifierO19AirdropUICodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F848);
  }
  return result;
}

unint64_t sub_1A2AB99B8()
{
  unint64_t result;

  result = qword_1EE67F850;
  if (!qword_1EE67F850)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D5F4, &_s10IdentifierO16WalletCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F850);
  }
  return result;
}

unint64_t sub_1A2AB99FC()
{
  unint64_t result;

  result = qword_1EE67F858;
  if (!qword_1EE67F858)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D5A4, &_s10IdentifierO14BoopCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F858);
  }
  return result;
}

unint64_t sub_1A2AB9A40()
{
  unint64_t result;

  result = qword_1EE67F860;
  if (!qword_1EE67F860)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D554, &_s10IdentifierO20ShareSheetCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F860);
  }
  return result;
}

unint64_t sub_1A2AB9A84()
{
  unint64_t result;

  result = qword_1EE67F868;
  if (!qword_1EE67F868)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D504, &_s10IdentifierO16DaemonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F868);
  }
  return result;
}

unint64_t sub_1A2AB9AC8()
{
  unint64_t result;

  result = qword_1EE67F870;
  if (!qword_1EE67F870)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D4B4, &_s10IdentifierO13CliCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F870);
  }
  return result;
}

unint64_t sub_1A2AB9B0C()
{
  unint64_t result;

  result = qword_1EE67F878;
  if (!qword_1EE67F878)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D464, &_s10IdentifierO23LegacySupportCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F878);
  }
  return result;
}

uint64_t sub_1A2AB9B50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SFAirDropClient.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A2AB9B98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE67F8D8;
  if (!qword_1EE67F8D8)
  {
    v1 = type metadata accessor for SFAirDropClient.Identifier();
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDropClient.Identifier, v1);
    atomic_store(result, (unint64_t *)&qword_1EE67F8D8);
  }
  return result;
}

uint64_t *_s10IdentifierOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = sub_1A2AE3130();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t _s10IdentifierOwxx(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
    return swift_bridgeObjectRelease();
  if (!(_DWORD)result)
  {
    v3 = sub_1A2AE3130();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

_QWORD *_s10IdentifierOwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1A2AE3130();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *_s10IdentifierOwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1A2AB9828((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_1A2AE3130();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *_s10IdentifierOwta(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1A2AB9828((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1A2AE3130();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1A2AB9F40()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A2AE3130();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t _s10IdentifierO10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s10IdentifierO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1A2ABA088 + 4 * byte_1A2B0CDAC[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1A2ABA0BC + 4 * byte_1A2B0CDA7[v4]))();
}

uint64_t sub_1A2ABA0BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2ABA0C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2ABA0CCLL);
  return result;
}

uint64_t sub_1A2ABA0D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2ABA0E0);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1A2ABA0E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2ABA0EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10IdentifierO10CodingKeysOMa()
{
  return &_s10IdentifierO10CodingKeysON;
}

ValueMetadata *_s10IdentifierO23LegacySupportCodingKeysOMa()
{
  return &_s10IdentifierO23LegacySupportCodingKeysON;
}

ValueMetadata *_s10IdentifierO13CliCodingKeysOMa()
{
  return &_s10IdentifierO13CliCodingKeysON;
}

ValueMetadata *_s10IdentifierO16DaemonCodingKeysOMa()
{
  return &_s10IdentifierO16DaemonCodingKeysON;
}

ValueMetadata *_s10IdentifierO20ShareSheetCodingKeysOMa()
{
  return &_s10IdentifierO20ShareSheetCodingKeysON;
}

ValueMetadata *_s10IdentifierO14BoopCodingKeysOMa()
{
  return &_s10IdentifierO14BoopCodingKeysON;
}

ValueMetadata *_s10IdentifierO16WalletCodingKeysOMa()
{
  return &_s10IdentifierO16WalletCodingKeysON;
}

ValueMetadata *_s10IdentifierO19AirdropUICodingKeysOMa()
{
  return &_s10IdentifierO19AirdropUICodingKeysON;
}

ValueMetadata *_s10IdentifierO26AirdropUIManagerCodingKeysOMa()
{
  return &_s10IdentifierO26AirdropUIManagerCodingKeysON;
}

uint64_t _s10IdentifierO17GenericCodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A2ABA1D4 + 4 * byte_1A2B0CDB6[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A2ABA208 + 4 * byte_1A2B0CDB1[v4]))();
}

uint64_t sub_1A2ABA208(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2ABA210(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2ABA218);
  return result;
}

uint64_t sub_1A2ABA224(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2ABA22CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A2ABA230(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2ABA238(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10IdentifierO17GenericCodingKeysOMa()
{
  return &_s10IdentifierO17GenericCodingKeysON;
}

ValueMetadata *_s10IdentifierO16LegacyCodingKeysOMa()
{
  return &_s10IdentifierO16LegacyCodingKeysON;
}

unint64_t sub_1A2ABA268()
{
  unint64_t result;

  result = qword_1EE67F8E0;
  if (!qword_1EE67F8E0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D104, &_s10IdentifierO17GenericCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F8E0);
  }
  return result;
}

unint64_t sub_1A2ABA2B0()
{
  unint64_t result;

  result = qword_1EE67F8E8;
  if (!qword_1EE67F8E8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D43C, &_s10IdentifierO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F8E8);
  }
  return result;
}

unint64_t sub_1A2ABA2F8()
{
  unint64_t result;

  result = qword_1EE67F8F0;
  if (!qword_1EE67F8F0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D35C, &_s10IdentifierO23LegacySupportCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F8F0);
  }
  return result;
}

unint64_t sub_1A2ABA340()
{
  unint64_t result;

  result = qword_1EE67F8F8;
  if (!qword_1EE67F8F8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D384, &_s10IdentifierO23LegacySupportCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F8F8);
  }
  return result;
}

unint64_t sub_1A2ABA388()
{
  unint64_t result;

  result = qword_1EE67F900;
  if (!qword_1EE67F900)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D30C, &_s10IdentifierO13CliCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F900);
  }
  return result;
}

unint64_t sub_1A2ABA3D0()
{
  unint64_t result;

  result = qword_1EE67F908;
  if (!qword_1EE67F908)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D334, &_s10IdentifierO13CliCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F908);
  }
  return result;
}

unint64_t sub_1A2ABA418()
{
  unint64_t result;

  result = qword_1EE67F910;
  if (!qword_1EE67F910)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D2BC, &_s10IdentifierO16DaemonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F910);
  }
  return result;
}

unint64_t sub_1A2ABA460()
{
  unint64_t result;

  result = qword_1EE67F918;
  if (!qword_1EE67F918)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D2E4, &_s10IdentifierO16DaemonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F918);
  }
  return result;
}

unint64_t sub_1A2ABA4A8()
{
  unint64_t result;

  result = qword_1EE67F920;
  if (!qword_1EE67F920)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D26C, &_s10IdentifierO20ShareSheetCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F920);
  }
  return result;
}

unint64_t sub_1A2ABA4F0()
{
  unint64_t result;

  result = qword_1EE67F928;
  if (!qword_1EE67F928)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D294, &_s10IdentifierO20ShareSheetCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F928);
  }
  return result;
}

unint64_t sub_1A2ABA538()
{
  unint64_t result;

  result = qword_1EE67F930;
  if (!qword_1EE67F930)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D21C, &_s10IdentifierO14BoopCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F930);
  }
  return result;
}

unint64_t sub_1A2ABA580()
{
  unint64_t result;

  result = qword_1EE67F938;
  if (!qword_1EE67F938)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D244, &_s10IdentifierO14BoopCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F938);
  }
  return result;
}

unint64_t sub_1A2ABA5C8()
{
  unint64_t result;

  result = qword_1EE67F940;
  if (!qword_1EE67F940)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D1CC, &_s10IdentifierO16WalletCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F940);
  }
  return result;
}

unint64_t sub_1A2ABA610()
{
  unint64_t result;

  result = qword_1EE67F948;
  if (!qword_1EE67F948)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D1F4, &_s10IdentifierO16WalletCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F948);
  }
  return result;
}

unint64_t sub_1A2ABA658()
{
  unint64_t result;

  result = qword_1EE67F950;
  if (!qword_1EE67F950)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D17C, &_s10IdentifierO19AirdropUICodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F950);
  }
  return result;
}

unint64_t sub_1A2ABA6A0()
{
  unint64_t result;

  result = qword_1EE67F958;
  if (!qword_1EE67F958)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D1A4, &_s10IdentifierO19AirdropUICodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F958);
  }
  return result;
}

unint64_t sub_1A2ABA6E8()
{
  unint64_t result;

  result = qword_1EE67F960;
  if (!qword_1EE67F960)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D12C, &_s10IdentifierO26AirdropUIManagerCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F960);
  }
  return result;
}

unint64_t sub_1A2ABA730()
{
  unint64_t result;

  result = qword_1EE67F968;
  if (!qword_1EE67F968)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D154, &_s10IdentifierO26AirdropUIManagerCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F968);
  }
  return result;
}

unint64_t sub_1A2ABA778()
{
  unint64_t result;

  result = qword_1EE67F970;
  if (!qword_1EE67F970)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D074, &_s10IdentifierO17GenericCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F970);
  }
  return result;
}

unint64_t sub_1A2ABA7C0()
{
  unint64_t result;

  result = qword_1EE67F978;
  if (!qword_1EE67F978)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D09C, &_s10IdentifierO17GenericCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F978);
  }
  return result;
}

unint64_t sub_1A2ABA808()
{
  unint64_t result;

  result = qword_1EE67F980;
  if (!qword_1EE67F980)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D024, &_s10IdentifierO16LegacyCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F980);
  }
  return result;
}

unint64_t sub_1A2ABA850()
{
  unint64_t result;

  result = qword_1EE67F988;
  if (!qword_1EE67F988)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D04C, &_s10IdentifierO16LegacyCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F988);
  }
  return result;
}

unint64_t sub_1A2ABA898()
{
  unint64_t result;

  result = qword_1EE67F990;
  if (!qword_1EE67F990)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D3AC, &_s10IdentifierO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F990);
  }
  return result;
}

unint64_t sub_1A2ABA8E0()
{
  unint64_t result;

  result = qword_1EE67F998;
  if (!qword_1EE67F998)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0D3D4, &_s10IdentifierO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67F998);
  }
  return result;
}

uint64_t sub_1A2ABA924(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x755379636167656CLL && a2 == 0xED000074726F7070;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6909027 && a2 == 0xE300000000000000 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F6D656164 && a2 == 0xE600000000000000 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6568536572616873 && a2 == 0xEA00000000007465 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1886351202 && a2 == 0xE400000000000000 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7265646E6966 && a2 == 0xE600000000000000 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74656C6C6177 && a2 == 0xE600000000000000 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x4E706F7244726961 && a2 == 0xED0000656369746FLL || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x69577265646E6966 && a2 == 0xEC000000776F646ELL || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x55706F7264726961 && a2 == 0xE900000000000049 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A2B490F0 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x636972656E6567 && a2 == 0xE700000000000000 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x79636167656CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

uint64_t sub_1A2ABAE90(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A2ABAF70(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F9A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Slice.initializeAll<A>(fromContentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return sub_1A2ABB498(a1, a2, a3, a4, a5, AssociatedTypeWitness, a6, a7);
}

uint64_t UnsafeMutableBufferPointer.initialize(fromContentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;

  if (a2 < 1)
    return 0;
  v4 = a2;
  if (a4 >= a2)
  {
    sub_1A2AE3A00();
    sub_1A2AE3A00();
    sub_1A2AE39B8();
    return v4;
  }
  __break(1u);
  return result;
}

uint64_t UnsafeMutableBufferPointer.initialize(fromContentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v7 = sub_1A2AE3A3C();
  MEMORY[0x1A85895EC](MEMORY[0x1E0DEB9F0], v7);
  v8 = sub_1A2AE3FF4();
  MEMORY[0x1A85895EC](MEMORY[0x1E0DEDE48], v8);
  result = sub_1A2AE38D4();
  if (result < 1)
    return 0;
  v10 = result;
  if (result <= a6)
  {
    sub_1A2AE3A00();
    sub_1A2AE3FE8();
    sub_1A2AE3A00();
    sub_1A2AE3FD0();
    sub_1A2AE39B8();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t Slice.initialize<A>(fromContentsOf:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v4 = sub_1A2AE3A30();
  v6 = UnsafeMutableBufferPointer.initialize(fromContentsOf:)(a1, a2, v4, v5);
  v7 = sub_1A2AE3A3C();
  MEMORY[0x1A85895EC](MEMORY[0x1E0DEB9F0], v7);
  sub_1A2AE3FF4();
  sub_1A2AE3FD0();
  result = v9 + v6;
  if (__OFADD__(v9, v6))
    __break(1u);
  return result;
}

uint64_t Slice.initialize<A>(fromContentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v8 = sub_1A2AE3A30();
  v10 = UnsafeMutableBufferPointer.initialize(fromContentsOf:)(a1, a2, a3, a4, v8, v9);
  v11 = sub_1A2AE3A3C();
  MEMORY[0x1A85895EC](MEMORY[0x1E0DEB9F0], v11);
  sub_1A2AE3FF4();
  sub_1A2AE3FD0();
  result = v13 + v10;
  if (__OFADD__(v13, v10))
    __break(1u);
  return result;
}

uint64_t sub_1A2ABB3EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  if (!result)
    return 0;
  v4 = a2;
  if (!a2)
    return v4;
  if (a4 >= a2)
  {
    if (a3)
      sub_1A2AE39DC();
    return v4;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A2ABB43C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  if (!a3)
    return 0;
  v6 = a2 - result;
  if (a2 == result)
    return v6;
  if (v6 <= a6)
  {
    if (a5)
      sub_1A2AE39DC();
    return v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A2ABB498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t result;

  v13 = sub_1A2AE3A30();
  v15 = _sSr7SharingE13initializeAll14fromContentsOfyqd___t7ElementQyd__RszSlRd__lF_0(a1, v13, v14, a6, a7, a8);
  v16 = __OFADD__(a2, v15);
  result = a2 + v15;
  if (v16)
    __break(1u);
  return result;
}

uint64_t Slice.initializeAll<A>(fromContentsOf:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1A2AE3A30();
  return UnsafeMutableBufferPointer.initialize(fromContentsOf:)(a1, a2, v4, v5);
}

uint64_t Slice.initializeAll<A>(fromContentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  v8 = sub_1A2AE3A30();
  return UnsafeMutableBufferPointer.initialize(fromContentsOf:)(a1, a2, a3, a4, v8, v9);
}

uint64_t Slice.moveInitializeAll<A>(fromContentsOf:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1A2AE3A30();
  return sub_1A2ABB3EC(a1, a2, v4, v5);
}

uint64_t Slice.moveInitializeAll<A>(fromContentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  v8 = sub_1A2AE3A30();
  return sub_1A2ABB43C(a1, a2, a3, a4, v8, v9);
}

uint64_t sub_1A2ABB6AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A2AE31D8();
  __swift_allocate_value_buffer(v0, qword_1EE67F9A8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE67F9A8);
  if (qword_1EE676030 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE676010);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t static SFAirDropReceive.PeerPayment.receiverMetadata(for:)()
{
  return 0;
}

uint64_t static SFAirDropReceive.PeerPayment.validateTransaction(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD v18[4];
  uint64_t v19;

  v2 = sub_1A2AE2F44();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE67AAB0 != -1)
    swift_once();
  v6 = sub_1A2AE31D8();
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1EE67F9A8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v8 = sub_1A2AE31C0();
  v9 = sub_1A2AE3964();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v18[1] = v7;
    v11 = (uint8_t *)v10;
    v12 = swift_slowAlloc();
    v19 = v12;
    *(_DWORD *)v11 = 136315138;
    v18[2] = a1;
    sub_1A2ABBAC0();
    v13 = sub_1A2AE3E5C();
    v18[3] = sub_1A296DA00(v13, v14, &v19);
    sub_1A2AE3A60();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    _os_log_impl(&dword_1A2830000, v8, v9, "PeerPayment: validating transaction for transactionURL: %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85896E8](v12, -1, -1);
    MEMORY[0x1A85896E8](v11, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }

  v15 = sub_1A2AE2F50();
  sub_1A29736C4(v15, v16);
  return 1;
}

unint64_t sub_1A2ABBAC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE67BC50;
  if (!qword_1EE67BC50)
  {
    v1 = sub_1A2AE2F44();
    result = MEMORY[0x1A85895EC](MEMORY[0x1E0CB0048], v1);
    atomic_store(result, (unint64_t *)&qword_1EE67BC50);
  }
  return result;
}

ValueMetadata *type metadata accessor for SFAirDropReceive.PeerPayment()
{
  return &type metadata for SFAirDropReceive.PeerPayment;
}

unint64_t static SFMoveToAppShareSheetSettings.encodedFiles.getter()
{
  return 0xD000000000000011;
}

Sharing::SFMoveToAppShareSheetSettings_optional __swiftcall SFMoveToAppShareSheetSettings.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (Sharing::SFMoveToAppShareSheetSettings_optional)rawValue;
}

uint64_t SFMoveToAppShareSheetSettings.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t static SFAirDropInvocations.MoveToAppShareSheet.supportsSecureCoding.getter()
{
  return 1;
}

id SFAirDropInvocations.MoveToAppShareSheet.__allocating_init(name:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  objc_super v8;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR___SFXPCInvocation_name];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for SFXPCInvocation();
  return objc_msgSendSuper2(&v8, sel_init);
}

id SFAirDropInvocations.MoveToAppShareSheet.init(name:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_super v5;

  v3 = &v2[OBJC_IVAR___SFXPCInvocation_name];
  *(_QWORD *)v3 = a1;
  *((_QWORD *)v3 + 1) = a2;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for SFXPCInvocation();
  return objc_msgSendSuper2(&v5, sel_init);
}

id SFAirDropInvocations.MoveToAppShareSheet.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SFAirDropInvocations.MoveToAppShareSheet.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id SFAirDropInvocations.MoveToAppShareSheet.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_1A2A00984(a1);

  return v4;
}

id SFAirDropInvocations.MoveToAppShareSheet.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_1A2A00984(a1);

  return v2;
}

id SFAirDropInvocations.MoveToAppShareSheet.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1A2ABBD80()
{
  unint64_t result;

  result = qword_1EE67F9C0;
  if (!qword_1EE67F9C0)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFMoveToAppShareSheetSettings, &type metadata for SFMoveToAppShareSheetSettings);
    atomic_store(result, (unint64_t *)&qword_1EE67F9C0);
  }
  return result;
}

uint64_t sub_1A2ABBDC4()
{
  return MEMORY[0x1E0DEAFC0];
}

uint64_t sub_1A2ABBDD0()
{
  return MEMORY[0x1E0DEAFA8];
}

uint64_t storeEnumTagSinglePayload for SFMoveToAppShareSheetSettings(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A2ABBE28 + 4 * byte_1A2B0D7E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A2ABBE5C + 4 * asc_1A2B0D7E0[v4]))();
}

uint64_t sub_1A2ABBE5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2ABBE64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2ABBE6CLL);
  return result;
}

uint64_t sub_1A2ABBE78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2ABBE80);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A2ABBE84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2ABBE8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SFMoveToAppShareSheetSettings()
{
  return &type metadata for SFMoveToAppShareSheetSettings;
}

uint64_t type metadata accessor for SFAirDropInvocations.MoveToAppShareSheet()
{
  return objc_opt_self();
}

uint64_t sub_1A2ABBEC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A2AE31D8();
  __swift_allocate_value_buffer(v0, qword_1EE67F9C8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE67F9C8);
  if (qword_1EE67AA40 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE67CA68);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1A2ABBFF4(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  sub_1A2AE343C();
  swift_retain();
  v4 = a2;
  v3();
  swift_release();
  swift_bridgeObjectRelease();

}

void sub_1A2ABC0D8(id a1)
{
  uint64_t v1;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  char v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  void *v39;
  id v40;
  NSObject *v41;
  id v42;
  __int128 v43;
  __int128 v44;
  uint64_t aBlock[7];

  aBlock[6] = *MEMORY[0x1E0C80C00];
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC7Sharing29SFCommunalDeviceRepairManager_isAttemptingRepair) & 1) != 0)
  {
    if (qword_1EE67AAB8 != -1)
      swift_once();
    v3 = sub_1A2AE31D8();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EE67F9C8);
    v41 = a1;
    v4 = sub_1A2AE31C0();
    v5 = sub_1A2AE3964();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = swift_slowAlloc();
      aBlock[0] = v7;
      *(_DWORD *)v6 = 136315138;
      v8 = -[NSObject bleDevice](v41, sel_bleDevice);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67F9F8);
      v9 = sub_1A2AE3484();
      *(_QWORD *)&v43 = sub_1A296DA00(v9, v10, aBlock);
      sub_1A2AE3A60();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A2830000, v4, v5, "Ignoring proximity Repair with another %s", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85896E8](v7, -1, -1);
      v11 = v6;
      goto LABEL_34;
    }

LABEL_14:
    return;
  }
  v12 = v1;
  if ((objc_msgSend(a1, sel_problemFlags) & 0x10000) != 0)
  {
    if (qword_1EE67AAB8 != -1)
      swift_once();
    v15 = sub_1A2AE31D8();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EE67F9C8);
    v41 = sub_1A2AE31C0();
    v16 = sub_1A2AE3964();
    if (os_log_type_enabled(v41, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_1A2830000, v41, v16, "Ignoring proximity repair for WiFi 802.1x (needs user)", v17, 2u);
      MEMORY[0x1A85896E8](v17, -1, -1);
    }
    goto LABEL_14;
  }
  v13 = objc_msgSend(a1, sel_model);
  if (v13)
  {
    v14 = v13;
    sub_1A2AE343C();

  }
  if ((objc_msgSend(a1, sel_problemFlags) & 0x10) != 0)
  {
    v18 = sub_1A2AE3544();
    swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
    {
      LODWORD(v43) = 0;
      v19 = WiFiCopyCurrentNetworkInfoEx();
      if (v19)
      {
        v20 = (void *)v19;
        aBlock[0] = 0;
        sub_1A2AE3370();

      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (!SFDeviceRepairSessionProblemCanFixSilently((int)objc_msgSend(a1, sel_problemFlags)))
  {
    if (qword_1EE67AAB8 != -1)
      swift_once();
    v32 = sub_1A2AE31D8();
    __swift_project_value_buffer(v32, (uint64_t)qword_1EE67F9C8);
    v4 = sub_1A2AE31C0();
    v33 = sub_1A2AE3964();
    if (!os_log_type_enabled(v4, v33))
      goto LABEL_35;
    v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v34 = 0;
    _os_log_impl(&dword_1A2830000, v4, v33, "Ignoring device that has problems that are not silently fixable", v34, 2u);
    v11 = v34;
LABEL_34:
    MEMORY[0x1A85896E8](v11, -1, -1);
LABEL_35:

    return;
  }
  v21 = OBJC_IVAR____TtC7Sharing29SFCommunalDeviceRepairManager_repairSession;
  v22 = *(void **)(v12 + OBJC_IVAR____TtC7Sharing29SFCommunalDeviceRepairManager_repairSession);
  if (v22)
    objc_msgSend(v22, sel_invalidate);
  v23 = objc_msgSend(objc_allocWithZone((Class)SFDeviceRepairSession), sel_init);
  objc_msgSend(v23, sel_setPeerDevice_, a1);
  v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = (uint64_t)sub_1A2ABD2B8;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A2ABD0DC;
  aBlock[3] = (uint64_t)&block_descriptor_9;
  v25 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v23, sel_setProgressHandler_, v25);
  _Block_release(v25);
  v26 = objc_msgSend(a1, sel_bleDevice);
  if (v26)
  {
    v27 = v26;
    v28 = objc_msgSend(v26, sel_foundTicks);

    if (v28)
    {
      if (mach_absolute_time() < (unint64_t)v28)
      {
        __break(1u);
        goto LABEL_47;
      }
      objc_msgSend(v23, sel_setTriggerMs_, UpTicksToMicroseconds());
    }
  }
  v29 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v30 = (void *)sub_1A2AE340C();
  v31 = objc_msgSend(v29, sel_objectForKey_, v30);

  if (v31)
  {
    sub_1A2AE3A90();
    swift_unknownObjectRelease();
  }
  else
  {
    v43 = 0u;
    v44 = 0u;
  }
  sub_1A296E450((uint64_t)&v43, (uint64_t)aBlock);
  sub_1A29B8550((uint64_t)aBlock, (uint64_t)&v43);
  if (!*((_QWORD *)&v44 + 1))
  {
    sub_1A29B84DC((uint64_t)&v43);
    goto LABEL_46;
  }
  sub_1A2ABD2D8();
  if ((swift_dynamicCast() & 1) != 0)
  {
    v28 = v42;
    if (!objc_msgSend(v42, sel_BOOLValue))
    {
LABEL_44:

      goto LABEL_46;
    }
    if (qword_1EE67AAB8 == -1)
    {
LABEL_41:
      v35 = sub_1A2AE31D8();
      __swift_project_value_buffer(v35, (uint64_t)qword_1EE67F9C8);
      v36 = sub_1A2AE31C0();
      v37 = sub_1A2AE3964();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v38 = 0;
        _os_log_impl(&dword_1A2830000, v36, v37, "Disabling silent auth due to server bag value", v38, 2u);
        MEMORY[0x1A85896E8](v38, -1, -1);
      }

      objc_msgSend(v23, sel_setDisableSilentAuth_, 1);
      goto LABEL_44;
    }
LABEL_47:
    swift_once();
    goto LABEL_41;
  }
LABEL_46:
  v39 = *(void **)(v12 + v21);
  *(_QWORD *)(v12 + v21) = v23;
  v40 = v23;

  objc_msgSend(v40, sel_activate);
  sub_1A29B84DC((uint64_t)aBlock);
}

void sub_1A2ABC994(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v5 = a3 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1A8589784](v5);
  if (v6)
  {
    v7 = (void *)v6;
    sub_1A2ABCA00(a1, a2);

  }
}

void sub_1A2ABCA00(int a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(void *, uint64_t, uint64_t);
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  char *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  unint64_t v42;
  char v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50[5];
  _QWORD v51[4];
  uint64_t v52;
  __int128 v53;
  __int128 v54;

  v3 = v2;
  if (qword_1EE67AAB8 != -1)
    swift_once();
  v6 = sub_1A2AE31D8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EE67F9C8);
  swift_bridgeObjectRetain_n();
  v7 = sub_1A2AE31C0();
  v8 = sub_1A2AE3964();
  if (!os_log_type_enabled(v7, v8))
  {

    swift_bridgeObjectRelease_n();
    if (a1 != 20)
      goto LABEL_5;
LABEL_14:
    v26 = sub_1A2AE31C0();
    v27 = sub_1A2AE3964();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1A2830000, v26, v27, "Repair finalized", v28, 2u);
      MEMORY[0x1A85896E8](v28, -1, -1);
    }

    return;
  }
  v9 = swift_slowAlloc();
  v10 = swift_slowAlloc();
  v50[0] = v10;
  *(_DWORD *)v9 = 136315394;
  LODWORD(v53) = a1;
  type metadata accessor for SFDeviceSetupProgressEvent(0);
  v11 = sub_1A2AE3484();
  *(_QWORD *)&v53 = sub_1A296DA00(v11, v12, v50);
  sub_1A2AE3A60();
  swift_bridgeObjectRelease();
  *(_WORD *)(v9 + 12) = 2080;
  *(_QWORD *)&v53 = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FA08);
  v13 = sub_1A2AE3484();
  *(_QWORD *)&v53 = sub_1A296DA00(v13, v14, v50);
  sub_1A2AE3A60();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1A2830000, v7, v8, "Repair silent progress: %s %s", (uint8_t *)v9, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x1A85896E8](v10, -1, -1);
  MEMORY[0x1A85896E8](v9, -1, -1);

  if (a1 == 20)
    goto LABEL_14;
LABEL_5:
  if (a1 != 96)
  {
    if (a1 != 30)
      return;
    v15 = OBJC_IVAR____TtC7Sharing29SFCommunalDeviceRepairManager_repairSession;
    v16 = *(void **)&v3[OBJC_IVAR____TtC7Sharing29SFCommunalDeviceRepairManager_repairSession];
    if (!v16)
      goto LABEL_30;
    v17 = objc_msgSend(v16, sel_peerDevice);
    if (v17)
    {
      v18 = v17;
      v19 = *(void **)&v3[v15];
      if (v19)
      {
        v20 = objc_msgSend(v19, sel_idsIdentifier);
        if (v20)
        {
          v21 = v20;
          v22 = sub_1A2AE343C();
          v24 = v23;

          v25 = *(void (**)(void *, uint64_t, uint64_t))&v3[OBJC_IVAR____TtC7Sharing29SFCommunalDeviceRepairManager_updateIDSCacheHandler];
          if (v25)
          {
            swift_retain();
            v25(v18, v22, v24);

            sub_1A297CC78((uint64_t)v25);
            swift_bridgeObjectRelease();
            goto LABEL_28;
          }
          swift_bridgeObjectRelease();
        }
      }

    }
LABEL_28:
    v40 = *(void **)&v3[v15];
    if (v40)
    {
      objc_msgSend(v40, sel_invalidate);
      v41 = *(void **)&v3[v15];
LABEL_31:
      *(_QWORD *)&v3[v15] = 0;

      if (a2)
      {
        v51[0] = 28517;
        v51[1] = 0xE200000000000000;
        sub_1A2AE3AFC();
        if (*(_QWORD *)(a2 + 16) && (v42 = sub_1A297B3D8((uint64_t)v50), (v43 & 1) != 0))
        {
          sub_1A296E4B4(*(_QWORD *)(a2 + 56) + 32 * v42, (uint64_t)&v53);
        }
        else
        {
          v53 = 0u;
          v54 = 0u;
        }
        sub_1A297C2D8((uint64_t)v50);
      }
      else
      {
        v53 = 0u;
        v54 = 0u;
      }
      sub_1A29B8550((uint64_t)&v53, (uint64_t)v50);
      v44 = sub_1A2AE31C0();
      v45 = sub_1A2AE394C();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = (uint8_t *)swift_slowAlloc();
        v47 = swift_slowAlloc();
        v52 = v47;
        *(_DWORD *)v46 = 136315138;
        sub_1A29B8550((uint64_t)v50, (uint64_t)v51);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEFB8A0);
        v48 = sub_1A2AE3484();
        v51[0] = sub_1A296DA00(v48, v49, &v52);
        sub_1A2AE3A60();
        swift_bridgeObjectRelease();
        sub_1A29B84DC((uint64_t)v50);
        _os_log_impl(&dword_1A2830000, v44, v45, "Repair silent done: %s", v46, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85896E8](v47, -1, -1);
        MEMORY[0x1A85896E8](v46, -1, -1);

      }
      else
      {

        sub_1A29B84DC((uint64_t)v50);
      }
      sub_1A29B84DC((uint64_t)&v53);
      return;
    }
LABEL_30:
    v41 = 0;
    goto LABEL_31;
  }
  v29 = v3;
  v30 = sub_1A2AE31C0();
  v31 = sub_1A2AE3964();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc();
    v33 = swift_slowAlloc();
    v50[0] = v33;
    *(_DWORD *)v32 = 136315138;
    v34 = *(id *)&v29[OBJC_IVAR____TtC7Sharing29SFCommunalDeviceRepairManager_repairSession];
    if (v34)
      v34 = objc_msgSend(v34, sel_peerDevice);
    *(_QWORD *)&v53 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FA00);
    v35 = sub_1A2AE3484();
    *(_QWORD *)&v53 = sub_1A296DA00(v35, v36, v50);
    sub_1A2AE3A60();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A2830000, v30, v31, "Repair completed: %s", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85896E8](v33, -1, -1);
    MEMORY[0x1A85896E8](v32, -1, -1);

  }
  else
  {

  }
  v37 = OBJC_IVAR____TtC7Sharing29SFCommunalDeviceRepairManager_repairSession;
  v38 = *(void **)&v29[OBJC_IVAR____TtC7Sharing29SFCommunalDeviceRepairManager_repairSession];
  if (v38)
  {
    objc_msgSend(v38, sel_invalidate);
    v39 = *(void **)&v29[v37];
  }
  else
  {
    v39 = 0;
  }
  *(_QWORD *)&v29[v37] = 0;

  v29[OBJC_IVAR____TtC7Sharing29SFCommunalDeviceRepairManager_isAttemptingRepair] = 0;
}

uint64_t sub_1A2ABD0DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;

  v4 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  if (a3)
    v5 = sub_1A2AE337C();
  else
    v5 = 0;
  swift_retain();
  v4(a2, v5);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for SFCommunalDeviceRepairManager()
{
  return objc_opt_self();
}

BOOL SFDeviceRepairSessionProblemCanFixSilently(int a1)
{
  return (*(_QWORD *)&a1 & 0x22001ELL) != 0;
}

uint64_t sub_1A2ABD294()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1A2ABD2B8(int a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A2ABC994(a1, a2, v2);
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

unint64_t sub_1A2ABD2D8()
{
  unint64_t result;

  result = qword_1EE67F6E0;
  if (!qword_1EE67F6E0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE67F6E0);
  }
  return result;
}

uint64_t sub_1A2ABD314()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1A2ABD338(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = (id)sub_1A2AE340C();
  (*(void (**)(uint64_t, uint64_t, id))(v3 + 16))(v3, a1, v4);

}

uint64_t sub_1A2ABD398()
{
  sub_1A2ABF57C();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2ABD3C0()
{
  sub_1A2ABF57C();
  return sub_1A2AE4108();
}

uint64_t sub_1A2ABD3E8()
{
  sub_1A2ABF5C0();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2ABD410()
{
  sub_1A2ABF5C0();
  return sub_1A2AE4108();
}

uint64_t sub_1A2ABD438()
{
  sub_1A2ABF604();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2ABD460()
{
  sub_1A2ABF604();
  return sub_1A2AE4108();
}

uint64_t SFAirDropReceive.Transfer.Metrics.TransferResult.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FA10);
  v25 = *(_QWORD *)(v2 - 8);
  v26 = v2;
  MEMORY[0x1E0C80A78](v2);
  v24 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SFAirDropReceive.Failure();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v23 = (uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FA18);
  v21 = *(_QWORD *)(v7 - 8);
  v22 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FA20);
  v28 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2ABF57C();
  sub_1A2AE40E4();
  sub_1A2990388(v27, (uint64_t)v12, type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) == 1)
  {
    v29 = 0;
    sub_1A2ABF604();
    sub_1A2AE3DB4();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v22);
  }
  else
  {
    v17 = v23;
    sub_1A297EB48((uint64_t)v12, v23, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropReceive.Failure);
    v30 = 1;
    sub_1A2ABF5C0();
    v18 = v24;
    sub_1A2AE3DB4();
    sub_1A296E8A4(&qword_1EE67B510, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    v19 = v26;
    sub_1A2AE3E2C();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v19);
    sub_1A297DA3C(v17, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropReceive.Failure);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v15, v13);
}

uint64_t SFAirDropReceive.Transfer.Metrics.TransferResult.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  char v44;

  v42 = a1;
  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FA40);
  v4 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  v37 = v4;
  MEMORY[0x1E0C80A78](v3);
  v39 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FA48);
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  MEMORY[0x1E0C80A78](v6);
  v38 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FA50);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v33 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2ABF57C();
  v18 = v41;
  sub_1A2AE40C0();
  if (!v18)
  {
    v33 = v12;
    v19 = v38;
    v20 = v39;
    v41 = v9;
    v21 = v40;
    v22 = sub_1A2AE3D9C();
    if (*(_QWORD *)(v22 + 16) == 1)
    {
      if ((*(_BYTE *)(v22 + 32) & 1) != 0)
      {
        v38 = (char *)v22;
        v44 = 1;
        sub_1A2ABF5C0();
        sub_1A2AE3CE8();
        v27 = type metadata accessor for SFAirDropReceive.Failure();
        sub_1A296E8A4(&qword_1EE67B6B8, (uint64_t (*)(uint64_t))type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
        v28 = v15;
        v29 = v27;
        v35 = (uint64_t)v28;
        v30 = v36;
        sub_1A2AE3D78();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v30);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
        v31 = v35;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v35, 0, 1, v29);
        sub_1A297EB48(v31, (uint64_t)v17, type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult);
      }
      else
      {
        v43 = 0;
        sub_1A2ABF604();
        sub_1A2AE3CE8();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v35);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
        v32 = type metadata accessor for SFAirDropReceive.Failure();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v17, 1, 1, v32);
      }
      sub_1A297EB48((uint64_t)v17, v21, type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult);
    }
    else
    {
      v23 = sub_1A2AE3B5C();
      swift_allocError();
      v25 = v24;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE67AC00);
      *v25 = v33;
      sub_1A2AE3CF4();
      sub_1A2AE3B50();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x1E0DEC450], v23);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v42);
}

uint64_t sub_1A2ABDBD4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDropReceive.Transfer.Metrics.TransferResult.init(from:)(a1, a2);
}

uint64_t sub_1A2ABDBE8(_QWORD *a1)
{
  return SFAirDropReceive.Transfer.Metrics.TransferResult.encode(to:)(a1);
}

uint64_t SFAirDropReceive.Transfer.Metrics.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1A2AE30C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SFAirDropReceive.Transfer.Metrics.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
  return sub_1A297CDE4(v1 + *(int *)(v3 + 20), a1, &qword_1EE67B7B8);
}

uint64_t SFAirDropReceive.Transfer.Metrics.endDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
  return sub_1A2A9486C(a1, v1 + *(int *)(v3 + 20), &qword_1EE67B7B8);
}

uint64_t (*SFAirDropReceive.Transfer.Metrics.endDate.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
  return nullsub_1;
}

uint64_t SFAirDropReceive.Transfer.Metrics.sensitive.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SFAirDropReceive.Transfer.Metrics(0) + 24));
}

uint64_t SFAirDropReceive.Transfer.Metrics.sensitive.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*SFAirDropReceive.Transfer.Metrics.sensitive.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
  return nullsub_1;
}

uint64_t SFAirDropReceive.Transfer.Metrics.result.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
  return sub_1A297CDE4(v1 + *(int *)(v3 + 28), a1, &qword_1EE67B7C8);
}

uint64_t SFAirDropReceive.Transfer.Metrics.result.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
  return sub_1A2A9486C(a1, v1 + *(int *)(v3 + 28), &qword_1EE67B7C8);
}

uint64_t (*SFAirDropReceive.Transfer.Metrics.result.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
  return nullsub_1;
}

uint64_t SFAirDropReceive.Transfer.Metrics.init(startDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);

  v4 = (int *)type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
  v5 = a2 + v4[5];
  v6 = sub_1A2AE30C4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v8(v5, 1, 1, v6);
  v9 = v4[6];
  *(_BYTE *)(a2 + v9) = 2;
  v10 = a2 + v4[7];
  v11 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v13(v10, 1, 1, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a2, a1, v6);
  sub_1A296F108(v5, &qword_1EE67B7B8);
  v8(v5, 1, 1, v6);
  *(_BYTE *)(a2 + v9) = 2;
  sub_1A296F108(v10, &qword_1EE67B7C8);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v13)(v10, 1, 1, v11);
}

uint64_t SFAirDropReceive.Transfer.Metrics.description.getter()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  void (*v26)(char *, unint64_t, uint64_t);
  int64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char **v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  unint64_t v61;

  v1 = v0;
  v2 = sub_1A2AE2FA4();
  v56 = *(_QWORD *)(v2 - 8);
  v57 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A2AE2FBC();
  v54 = *(_QWORD *)(v5 - 8);
  v55 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char **)((char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67ED20);
  v8 = MEMORY[0x1E0C80A78](v52);
  v10 = (unint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v49 = (char *)&v49 - v11;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67CA98);
  v12 = MEMORY[0x1E0C80A78](v50);
  v51 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v53 = (char **)((char *)&v49 - v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1A2AE30C4();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v49 - v23;
  v58 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
  sub_1A297CDE4(v1 + *(int *)(v58 + 20), (uint64_t)v17, &qword_1EE67B7B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
  {
    v25 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v25(v24, v17, v18);
    if ((sub_1A2AE2FEC() & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v24, v18);
      goto LABEL_8;
    }
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    v57 = v1;
    v26(v22, v1, v18);
    sub_1A296E8A4(&qword_1EE67ED28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    v27 = v18;
    if ((sub_1A2AE33B8() & 1) != 0)
    {
      v29 = v52;
      v30 = v49;
      v31 = &v49[*(int *)(v52 + 48)];
      v25(v49, v22, v18);
      v32 = v31;
      v26(v31, (unint64_t)v24, v18);
      v33 = (char *)(v10 + *(int *)(v29 + 48));
      v26((char *)v10, (unint64_t)v30, v18);
      v26(v33, (unint64_t)v32, v18);
      v34 = v51;
      v25(v51, (char *)v10, v18);
      v19 = *(_QWORD *)(v19 + 8);
      ((void (*)(char *, uint64_t))v19)(v33, v18);
      v35 = (char *)(v10 + *(int *)(v29 + 48));
      v25((char *)v10, v30, v18);
      v25(v35, v32, v18);
      v25(&v34[*(int *)(v50 + 36)], v35, v18);
      ((void (*)(unint64_t, uint64_t))v19)(v10, v18);
      v36 = (uint64_t)v34;
      v26 = (void (*)(char *, unint64_t, uint64_t))v53;
      sub_1A2A948B0(v36, (uint64_t)v53);
      v60 = 0x203A656D6974;
      v61 = 0xE600000000000000;
      sub_1A2A18CEC();
      sub_1A2AE3934();
      sub_1A2AE34F0();
      swift_bridgeObjectRelease();
      v25 = (void (*)(char *, char *, uint64_t))v60;
      v1 = v61;
      v7 = sub_1A296CFB4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v10 = v7[2];
      v28 = v7[3];
      v27 = v10 + 1;
      if (v10 < v28 >> 1)
      {
LABEL_6:
        v7[2] = v27;
        v37 = &v7[2 * v10];
        v37[4] = v25;
        v37[5] = v1;
        sub_1A296F108((uint64_t)v26, &qword_1EE67CA98);
        ((void (*)(char *, uint64_t))v19)(v24, v18);
        v1 = v57;
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    v7 = sub_1A296CFB4((_QWORD *)(v28 > 1), v27, 1, v7);
    goto LABEL_6;
  }
  sub_1A296F108((uint64_t)v17, &qword_1EE67B7B8);
LABEL_8:
  v60 = 0;
  v61 = 0xE000000000000000;
  sub_1A2AE3B20();
  swift_bridgeObjectRelease();
  v60 = 0x203A656D6974;
  v61 = 0xE600000000000000;
  sub_1A2AE2FB0();
  sub_1A2AE2F98();
  sub_1A2AE30A0();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v4, v57);
  (*(void (**)(_QWORD *, uint64_t))(v54 + 8))(v7, v55);
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  v38 = v60;
  v39 = v61;
  v7 = sub_1A296CFB4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v41 = v7[2];
  v40 = v7[3];
  if (v41 >= v40 >> 1)
    v7 = sub_1A296CFB4((_QWORD *)(v40 > 1), v41 + 1, 1, v7);
  v7[2] = v41 + 1;
  v42 = &v7[2 * v41];
  v42[4] = v38;
  v42[5] = v39;
LABEL_11:
  if (*(_BYTE *)(v1 + *(int *)(v58 + 24)) != 2)
  {
    v60 = 0x76697469736E6573;
    v61 = 0xEB00000000203A65;
    sub_1A2AE34F0();
    swift_bridgeObjectRelease();
    v43 = v60;
    v44 = v61;
    v46 = v7[2];
    v45 = v7[3];
    if (v46 >= v45 >> 1)
      v7 = sub_1A296CFB4((_QWORD *)(v45 > 1), v46 + 1, 1, v7);
    v7[2] = v46 + 1;
    v47 = &v7[2 * v46];
    v47[4] = v43;
    v47[5] = v44;
  }
  v60 = 123;
  v61 = 0xE100000000000000;
  v59 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6764B8);
  sub_1A297AFFC();
  sub_1A2AE33AC();
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  return v60;
}

uint64_t sub_1A2ABE5C4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A2ABE5F8 + 4 * byte_1A2B0D940[*v0]))(0x7461447472617473, 0xE900000000000065);
}

uint64_t sub_1A2ABE5F8()
{
  return 0x65746144646E65;
}

uint64_t sub_1A2ABE610()
{
  return 0x76697469736E6573;
}

uint64_t sub_1A2ABE624()
{
  return 0x746C75736572;
}

uint64_t sub_1A2ABE638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2AC1AA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2ABE65C()
{
  sub_1A2ABF65C();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2ABE684()
{
  sub_1A2ABF65C();
  return sub_1A2AE4108();
}

uint64_t SFAirDropReceive.Transfer.Metrics.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FA58);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2ABF65C();
  sub_1A2AE40E4();
  v12 = 0;
  sub_1A2AE30C4();
  sub_1A296E8A4(&qword_1EE67AB88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1A2AE3E2C();
  if (!v1)
  {
    type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
    v11 = 1;
    sub_1A2AE3DE4();
    v10 = 2;
    sub_1A2AE3DCC();
    v9 = 3;
    type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
    sub_1A296E8A4(&qword_1EE67FA68, type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Transfer.Metrics.TransferResult);
    sub_1A2AE3DE4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SFAirDropReceive.Transfer.Metrics.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(void);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  char v44;
  char v45;
  char v46;

  v32 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C8);
  MEMORY[0x1E0C80A78](v3);
  v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
  MEMORY[0x1E0C80A78](v5);
  v35 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A2AE30C4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v37 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FA70);
  v34 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void (**)(void))(v8 + 56);
  v40 = &v15[*(int *)(v13 + 20)];
  v36 = v7;
  v16();
  v17 = *(int *)(v12 + 24);
  v15[v17] = 2;
  v18 = (uint64_t)&v15[*(int *)(v12 + 28)];
  v19 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v41 = v18;
  v20(v18, 1, 1, v19);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2ABF65C();
  v38 = v11;
  v21 = (uint64_t)v42;
  sub_1A2AE40C0();
  if (v21)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    v26 = v41;
    sub_1A296F108((uint64_t)v40, &qword_1EE67B7B8);
    return sub_1A296F108(v26, &qword_1EE67B7C8);
  }
  else
  {
    v30 = v17;
    v31 = v8;
    v22 = (uint64_t)v35;
    v42 = a1;
    v46 = 0;
    sub_1A296E8A4(&qword_1EE67AC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v24 = v36;
    v23 = v37;
    v25 = v38;
    sub_1A2AE3D78();
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v15, v23, v24);
    v45 = 1;
    sub_1A2AE3D30();
    sub_1A2A9486C(v22, (uint64_t)v40, &qword_1EE67B7B8);
    v44 = 2;
    v15[v30] = sub_1A2AE3D0C();
    v43 = 3;
    sub_1A296E8A4(&qword_1EE67FA78, type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Transfer.Metrics.TransferResult);
    v27 = (uint64_t)v33;
    sub_1A2AE3D30();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v25, v39);
    sub_1A2A9486C(v27, v41, &qword_1EE67B7C8);
    sub_1A2990388((uint64_t)v15, v32, type metadata accessor for SFAirDropReceive.Transfer.Metrics);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v42);
    return sub_1A297DA3C((uint64_t)v15, type metadata accessor for SFAirDropReceive.Transfer.Metrics);
  }
}

uint64_t sub_1A2ABED04@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDropReceive.Transfer.Metrics.init(from:)(a1, a2);
}

uint64_t sub_1A2ABED18(_QWORD *a1)
{
  return SFAirDropReceive.Transfer.Metrics.encode(to:)(a1);
}

uint64_t _s7Sharing16SFAirDropReceiveO8TransferV7MetricsV0E6ResultO2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  char v17;
  char v18;
  uint64_t v20;

  v4 = type metadata accessor for SFAirDropReceive.Failure();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FAD8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_1A2990388(a1, (uint64_t)v14, type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult);
  sub_1A2990388(a2, v15, type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) != 1)
  {
    sub_1A2990388((uint64_t)v14, (uint64_t)v10, type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult);
    if (v16(v15, 1, v4) != 1)
    {
      sub_1A297EB48(v15, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropReceive.Failure);
      _s7Sharing16SFAirDropReceiveO7FailureO2eeoiySbAE_AEtFZ_0((uint64_t)v10, (uint64_t)v7);
      v17 = v18;
      sub_1A297DA3C((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropReceive.Failure);
      sub_1A297DA3C((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropReceive.Failure);
      sub_1A297DA3C((uint64_t)v14, type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult);
      return v17 & 1;
    }
    sub_1A297DA3C((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropReceive.Failure);
    goto LABEL_6;
  }
  if (v16(v15, 1, v4) != 1)
  {
LABEL_6:
    sub_1A296F108((uint64_t)v14, &qword_1EE67FAD8);
    v17 = 0;
    return v17 & 1;
  }
  sub_1A297DA3C((uint64_t)v14, type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult);
  v17 = 1;
  return v17 & 1;
}

BOOL _s7Sharing16SFAirDropReceiveO8TransferV7MetricsV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t *v34;
  _BOOL8 result;
  char *v36;
  char v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  _BOOL4 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;

  v4 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
  v61 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v58 = (uint64_t)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FAE0);
  MEMORY[0x1E0C80A78](v60);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v59 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v63 = (uint64_t)&v54 - v12;
  MEMORY[0x1E0C80A78](v11);
  v64 = (char *)&v54 - v13;
  v14 = sub_1A2AE30C4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v62 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67EDC0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
  v21 = MEMORY[0x1E0C80A78](v20);
  v65 = (uint64_t)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v54 - v24;
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v54 - v26;
  if ((sub_1A2AE3088() & 1) == 0)
    return 0;
  v57 = v4;
  v54 = v7;
  v28 = (int *)type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
  v29 = v28[5];
  v55 = a1;
  sub_1A297CDE4(a1 + v29, (uint64_t)v27, &qword_1EE67B7B8);
  v30 = v28[5];
  v56 = a2;
  sub_1A297CDE4(a2 + v30, (uint64_t)v25, &qword_1EE67B7B8);
  v31 = (uint64_t)&v19[*(int *)(v17 + 48)];
  sub_1A297CDE4((uint64_t)v27, (uint64_t)v19, &qword_1EE67B7B8);
  sub_1A297CDE4((uint64_t)v25, v31, &qword_1EE67B7B8);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v32((uint64_t)v19, 1, v14) == 1)
  {
    sub_1A296F108((uint64_t)v25, &qword_1EE67B7B8);
    sub_1A296F108((uint64_t)v27, &qword_1EE67B7B8);
    if (v32(v31, 1, v14) == 1)
    {
      sub_1A296F108((uint64_t)v19, &qword_1EE67B7B8);
      goto LABEL_12;
    }
LABEL_7:
    v34 = &qword_1EE67EDC0;
LABEL_8:
    sub_1A296F108((uint64_t)v19, v34);
    return 0;
  }
  v33 = v65;
  sub_1A297CDE4((uint64_t)v19, v65, &qword_1EE67B7B8);
  if (v32(v31, 1, v14) == 1)
  {
    sub_1A296F108((uint64_t)v25, &qword_1EE67B7B8);
    sub_1A296F108((uint64_t)v27, &qword_1EE67B7B8);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v33, v14);
    goto LABEL_7;
  }
  v36 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v62, v31, v14);
  sub_1A296E8A4(&qword_1EE67EDC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  v37 = sub_1A2AE33DC();
  v38 = v33;
  v39 = *(void (**)(char *, uint64_t))(v15 + 8);
  v39(v36, v14);
  sub_1A296F108((uint64_t)v25, &qword_1EE67B7B8);
  sub_1A296F108((uint64_t)v27, &qword_1EE67B7B8);
  v39((char *)v38, v14);
  sub_1A296F108((uint64_t)v19, &qword_1EE67B7B8);
  if ((v37 & 1) == 0)
    return 0;
LABEL_12:
  v40 = v28[6];
  v41 = v56;
  v42 = *(unsigned __int8 *)(v55 + v40);
  v43 = *(unsigned __int8 *)(v56 + v40);
  if (v42 == 2)
  {
    v44 = v57;
    v45 = (uint64_t)v64;
    if (v43 != 2)
      return 0;
    goto LABEL_17;
  }
  result = 0;
  v46 = (v42 & 1) == 0;
  v44 = v57;
  v45 = (uint64_t)v64;
  if (v43 != 2 && ((v46 ^ v43) & 1) != 0)
  {
LABEL_17:
    sub_1A297CDE4(v55 + v28[7], v45, &qword_1EE67B7C8);
    v47 = v41 + v28[7];
    v48 = v63;
    sub_1A297CDE4(v47, v63, &qword_1EE67B7C8);
    v19 = v54;
    v49 = (uint64_t)&v54[*(int *)(v60 + 48)];
    sub_1A297CDE4(v45, (uint64_t)v54, &qword_1EE67B7C8);
    sub_1A297CDE4(v48, v49, &qword_1EE67B7C8);
    v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
    if (v50((uint64_t)v19, 1, v44) == 1)
    {
      sub_1A296F108(v48, &qword_1EE67B7C8);
      sub_1A296F108(v45, &qword_1EE67B7C8);
      if (v50(v49, 1, v44) == 1)
      {
        sub_1A296F108((uint64_t)v19, &qword_1EE67B7C8);
        return 1;
      }
    }
    else
    {
      v51 = v59;
      sub_1A297CDE4((uint64_t)v19, v59, &qword_1EE67B7C8);
      if (v50(v49, 1, v44) != 1)
      {
        v52 = v58;
        sub_1A297EB48(v49, v58, type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult);
        v53 = _s7Sharing16SFAirDropReceiveO8TransferV7MetricsV0E6ResultO2eeoiySbAI_AItFZ_0(v51, v52);
        sub_1A297DA3C(v52, type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult);
        sub_1A296F108(v63, &qword_1EE67B7C8);
        sub_1A296F108(v45, &qword_1EE67B7C8);
        sub_1A297DA3C(v51, type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult);
        sub_1A296F108((uint64_t)v19, &qword_1EE67B7C8);
        return (v53 & 1) != 0;
      }
      sub_1A296F108(v63, &qword_1EE67B7C8);
      sub_1A296F108(v45, &qword_1EE67B7C8);
      sub_1A297DA3C(v51, type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult);
    }
    v34 = &qword_1EE67FAE0;
    goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(uint64_t a1)
{
  return sub_1A29903E0(a1, (uint64_t *)&unk_1EE6747C8);
}

unint64_t sub_1A2ABF57C()
{
  unint64_t result;

  result = qword_1EE67FA28;
  if (!qword_1EE67FA28)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0DE8C, &_s7MetricsV14TransferResultO10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67FA28);
  }
  return result;
}

unint64_t sub_1A2ABF5C0()
{
  unint64_t result;

  result = qword_1EE67FA30;
  if (!qword_1EE67FA30)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0DE3C, &_s7MetricsV14TransferResultO17FailureCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67FA30);
  }
  return result;
}

unint64_t sub_1A2ABF604()
{
  unint64_t result;

  result = qword_1EE67FA38;
  if (!qword_1EE67FA38)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0DDEC, &_s7MetricsV14TransferResultO17SuccessCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67FA38);
  }
  return result;
}

uint64_t type metadata accessor for SFAirDropReceive.Transfer.Metrics(uint64_t a1)
{
  return sub_1A29903E0(a1, (uint64_t *)&unk_1EE6747E0);
}

unint64_t sub_1A2ABF65C()
{
  unint64_t result;

  result = qword_1EE67FA60;
  if (!qword_1EE67FA60)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0DD9C, &_s7MetricsV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67FA60);
  }
  return result;
}

char *_s7MetricsVwCP(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A2AE30C4();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    v15 = a3[7];
    a1[a3[6]] = a2[a3[6]];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C8);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v21 = type metadata accessor for SFAirDropReceive.Failure();
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v17, 1, v21))
      {
        memcpy(v16, v17, *(_QWORD *)(v19 + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          v29 = *((_QWORD *)v17 + 1);
          *(_QWORD *)v16 = *(_QWORD *)v17;
          *((_QWORD *)v16 + 1) = v29;
          *((_OWORD *)v16 + 1) = *((_OWORD *)v17 + 1);
          v30 = *((_QWORD *)v17 + 5);
          *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
          *((_QWORD *)v16 + 5) = v30;
          *((_QWORD *)v16 + 6) = *((_QWORD *)v17 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(v16, v17, *(_QWORD *)(v22 + 64));
        }
        else
        {
          v24 = *((_QWORD *)v17 + 1);
          *(_QWORD *)v16 = *(_QWORD *)v17;
          *((_QWORD *)v16 + 1) = v24;
          swift_bridgeObjectRetain();
          v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
          v26 = &v16[v25];
          v27 = &v17[v25];
          v28 = sub_1A2AE2F44();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v16, 0, 1, v21);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
  }
  return a1;
}

uint64_t _s7MetricsVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_1A2AE30C4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = a1 + *(int *)(a2 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4))
    v6(v7, v4);
  v8 = a1 + *(int *)(a2 + 28);
  v9 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9);
  if (!(_DWORD)result)
  {
    v11 = type metadata accessor for SFAirDropReceive.Failure();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v8, 1, v11);
    if (!(_DWORD)result)
    {
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      else if (!(_DWORD)result)
      {
        swift_bridgeObjectRelease();
        v12 = v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
        v13 = sub_1A2AE2F44();
        return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
      }
    }
  }
  return result;
}

uint64_t _s7MetricsVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_1A2AE30C4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v9, 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v10, (uint64_t)v11, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = type metadata accessor for SFAirDropReceive.Failure();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48))(v15, 1, v19))
    {
      memcpy(v14, v15, *(_QWORD *)(v17 + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v27 = v15[1];
        *v14 = *v15;
        v14[1] = v27;
        *((_OWORD *)v14 + 1) = *((_OWORD *)v15 + 1);
        v28 = v15[5];
        v14[4] = v15[4];
        v14[5] = v28;
        v14[6] = v15[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v14, v15, *(_QWORD *)(v20 + 64));
      }
      else
      {
        v22 = v15[1];
        *v14 = *v15;
        v14[1] = v22;
        swift_bridgeObjectRetain();
        v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
        v24 = (char *)v14 + v23;
        v25 = (char *)v15 + v23;
        v26 = sub_1A2AE2F44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v14, 0, 1, v19);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

uint64_t _s7MetricsVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD *, uint64_t, uint64_t);
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  int EnumCaseMultiPayload;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;

  v6 = sub_1A2AE30C4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(a1 + v9, 1, v6);
  v14 = v12((uint64_t)v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v10, v11, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v16 = a3[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  v19 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      v24 = type metadata accessor for SFAirDropReceive.Failure();
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v25 + 48))(v18, 1, v24))
      {
        memcpy(v17, v18, *(_QWORD *)(v20 + 64));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          *v17 = *v18;
          v17[1] = v18[1];
          v17[2] = v18[2];
          v17[3] = v18[3];
          v17[4] = v18[4];
          v17[5] = v18[5];
          v17[6] = v18[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(v17, v18, *(_QWORD *)(v25 + 64));
        }
        else
        {
          *v17 = *v18;
          v17[1] = v18[1];
          swift_bridgeObjectRetain();
          v38 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
          v39 = (char *)v17 + v38;
          v40 = (char *)v18 + v38;
          v41 = sub_1A2AE2F44();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v17, 0, 1, v24);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      return a1;
    }
    goto LABEL_13;
  }
  if (v23)
  {
    sub_1A297DA3C((uint64_t)v17, type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult);
LABEL_13:
    v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C8) - 8) + 64);
LABEL_14:
    memcpy(v17, v18, v26);
    return a1;
  }
  v27 = type metadata accessor for SFAirDropReceive.Failure();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v17, 1, v27);
  v31 = v29(v18, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      if (a1 == a2)
        return a1;
      sub_1A297DA3C((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropReceive.Failure);
      v42 = swift_getEnumCaseMultiPayload();
      if (v42 == 1)
      {
        *v17 = *v18;
        v17[1] = v18[1];
        v17[2] = v18[2];
        v17[3] = v18[3];
        v17[4] = v18[4];
        v17[5] = v18[5];
        v17[6] = v18[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      if (!v42)
      {
        *v17 = *v18;
        v17[1] = v18[1];
        swift_bridgeObjectRetain();
        v43 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
        v44 = (char *)v17 + v43;
        v45 = (char *)v18 + v43;
        v46 = sub_1A2AE2F44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v26 = *(_QWORD *)(v28 + 64);
      goto LABEL_14;
    }
    sub_1A297DA3C((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropReceive.Failure);
    goto LABEL_26;
  }
  if (v31)
  {
LABEL_26:
    v26 = *(_QWORD *)(v20 + 64);
    goto LABEL_14;
  }
  v32 = swift_getEnumCaseMultiPayload();
  if (v32 == 1)
  {
    *v17 = *v18;
    v17[1] = v18[1];
    v17[2] = v18[2];
    v17[3] = v18[3];
    v17[4] = v18[4];
    v17[5] = v18[5];
    v17[6] = v18[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (v32)
  {
    memcpy(v17, v18, *(_QWORD *)(v28 + 64));
  }
  else
  {
    *v17 = *v18;
    v17[1] = v18[1];
    swift_bridgeObjectRetain();
    v33 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
    v34 = (char *)v17 + v33;
    v35 = (char *)v18 + v33;
    v36 = sub_1A2AE2F44();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v17, 0, 1, v27);
  return a1;
}

uint64_t _s7MetricsVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v6 = sub_1A2AE30C4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v9, 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v10, (uint64_t)v11, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v14 = (_OWORD *)(a1 + v13);
  v15 = (_OWORD *)(a2 + v13);
  v16 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = type metadata accessor for SFAirDropReceive.Failure();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v20 + 48))(v15, 1, v19))
    {
      memcpy(v14, v15, *(_QWORD *)(v17 + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v14, v15, *(_QWORD *)(v20 + 64));
      }
      else
      {
        *v14 = *v15;
        v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
        v22 = (char *)v14 + v21;
        v23 = (char *)v15 + v21;
        v24 = sub_1A2AE2F44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v14, 0, 1, v19);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

uint64_t _s7MetricsVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_OWORD *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_OWORD *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;

  v6 = sub_1A2AE30C4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(a1 + v9, 1, v6);
  v14 = v12((uint64_t)v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v10, v11, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  v16 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v17 = (_OWORD *)(a1 + v16);
  v18 = (_OWORD *)(a2 + v16);
  v19 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      v24 = type metadata accessor for SFAirDropReceive.Failure();
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v25 + 48))(v18, 1, v24))
      {
        memcpy(v17, v18, *(_QWORD *)(v20 + 64));
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v17, v18, *(_QWORD *)(v25 + 64));
        }
        else
        {
          *v17 = *v18;
          v32 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
          v33 = (char *)v17 + v32;
          v34 = (char *)v18 + v32;
          v35 = sub_1A2AE2F44();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v17, 0, 1, v24);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      return a1;
    }
    goto LABEL_13;
  }
  if (v23)
  {
    sub_1A297DA3C((uint64_t)v17, type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult);
LABEL_13:
    v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C8) - 8) + 64);
LABEL_14:
    memcpy(v17, v18, v26);
    return a1;
  }
  v27 = type metadata accessor for SFAirDropReceive.Failure();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v17, 1, v27);
  v31 = v29(v18, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      if (a1 == a2)
        return a1;
      sub_1A297DA3C((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropReceive.Failure);
      if (!swift_getEnumCaseMultiPayload())
      {
        *v17 = *v18;
        v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
        v42 = (char *)v17 + v41;
        v43 = (char *)v18 + v41;
        v44 = sub_1A2AE2F44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v26 = *(_QWORD *)(v28 + 64);
      goto LABEL_14;
    }
    sub_1A297DA3C((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropReceive.Failure);
    goto LABEL_24;
  }
  if (v31)
  {
LABEL_24:
    v26 = *(_QWORD *)(v20 + 64);
    goto LABEL_14;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v17, v18, *(_QWORD *)(v28 + 64));
  }
  else
  {
    *v17 = *v18;
    v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
    v37 = (char *)v17 + v36;
    v38 = (char *)v18 + v36;
    v39 = sub_1A2AE2F44();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v17, 0, 1, v27);
  return a1;
}

uint64_t _s7MetricsVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2AC084C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;

  v6 = sub_1A2AE30C4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_9:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 253)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C8);
    v12 = *(_QWORD *)(v8 - 8);
    v13 = a3[7];
    goto LABEL_9;
  }
  v14 = *(unsigned __int8 *)(a1 + a3[6]);
  if (v14 >= 2)
    v15 = ((v14 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v15 = -2;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t _s7MetricsVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2AC0944(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_1A2AE30C4();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7B8);
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 253)
      {
        *(_BYTE *)(a1 + a4[6]) = a2 + 2;
        return result;
      }
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C8);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[7];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1A2AC0A10()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1A2AE30C4();
  if (v0 <= 0x3F)
  {
    sub_1A29A1E18(319, &qword_1EE6745C0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (v1 <= 0x3F)
    {
      sub_1A29A1E18(319, &qword_1EE6747D8, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *_s7MetricsV14TransferResultOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for SFAirDropReceive.Failure();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v16 = a2[1];
        *a1 = *a2;
        a1[1] = v16;
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        v17 = a2[5];
        a1[4] = a2[4];
        a1[5] = v17;
        a1[6] = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v8 + 64));
      }
      else
      {
        v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        swift_bridgeObjectRetain();
        v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        v15 = sub_1A2AE2F44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t _s7MetricsV14TransferResultOwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = type metadata accessor for SFAirDropReceive.Failure();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else if (!(_DWORD)result)
    {
      swift_bridgeObjectRelease();
      v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
      v5 = sub_1A2AE2F44();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    }
  }
  return result;
}

_QWORD *_s7MetricsV14TransferResultOwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for SFAirDropReceive.Failure();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      v15 = a2[5];
      a1[4] = a2[4];
      a1[5] = v15;
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
      v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_1A2AE2F44();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

_QWORD *_s7MetricsV14TransferResultOwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  size_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = type metadata accessor for SFAirDropReceive.Failure();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        return a1;
      sub_1A297DA3C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropReceive.Failure);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      if (!EnumCaseMultiPayload)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        v21 = sub_1A2AE2F44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v16 = *(_QWORD *)(v7 + 64);
      goto LABEL_9;
    }
    sub_1A297DA3C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropReceive.Failure);
LABEL_8:
    v16 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_9:
    memcpy(a1, a2, v16);
    return a1;
  }
  if (v10)
    goto LABEL_8;
  v11 = swift_getEnumCaseMultiPayload();
  if (v11 == 1)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (v11)
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    *a1 = *a2;
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_1A2AE2F44();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

_OWORD *_s7MetricsV14TransferResultOwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = type metadata accessor for SFAirDropReceive.Failure();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      *a1 = *a2;
      v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1A2AE2F44();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

_OWORD *_s7MetricsV14TransferResultOwta(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_OWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  size_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = type metadata accessor for SFAirDropReceive.Failure();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        return a1;
      sub_1A297DA3C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropReceive.Failure);
      if (!swift_getEnumCaseMultiPayload())
      {
        *a1 = *a2;
        v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = sub_1A2AE2F44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v11 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    sub_1A297DA3C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for SFAirDropReceive.Failure);
LABEL_7:
    v11 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v11);
    return a1;
  }
  if (v10)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    *a1 = *a2;
    v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE67B7C0) + 48);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_1A2AE2F44();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t _s7MetricsV14TransferResultOwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2AC13D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for SFAirDropReceive.Failure();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t _s7MetricsV14TransferResultOwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2AC1430(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for SFAirDropReceive.Failure();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1A2AC1480(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SFAirDropReceive.Failure();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1A2AC14B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SFAirDropReceive.Failure();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_1A2AC14F8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SFAirDropReceive.Failure();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t _s7MetricsV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A2AC1598 + 4 * byte_1A2B0D949[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A2AC15CC + 4 * byte_1A2B0D944[v4]))();
}

uint64_t sub_1A2AC15CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2AC15D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2AC15DCLL);
  return result;
}

uint64_t sub_1A2AC15E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2AC15F0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A2AC15F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2AC15FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7MetricsV10CodingKeysOMa_0()
{
  return &_s7MetricsV10CodingKeysON_0;
}

uint64_t _s7MetricsV14TransferResultO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A2AC1664 + 4 * byte_1A2B0D953[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A2AC1698 + 4 * byte_1A2B0D94E[v4]))();
}

uint64_t sub_1A2AC1698(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2AC16A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2AC16A8);
  return result;
}

uint64_t sub_1A2AC16B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2AC16BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A2AC16C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2AC16C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7MetricsV14TransferResultO10CodingKeysOMa_0()
{
  return &_s7MetricsV14TransferResultO10CodingKeysON_0;
}

ValueMetadata *_s7MetricsV14TransferResultO17SuccessCodingKeysOMa_0()
{
  return &_s7MetricsV14TransferResultO17SuccessCodingKeysON_0;
}

uint64_t _s7MetricsV14TransferResultO17FailureCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A2AC1734 + 4 * byte_1A2B0D958[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A2AC1754 + 4 * byte_1A2B0D95D[v4]))();
}

_BYTE *sub_1A2AC1734(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A2AC1754(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A2AC175C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A2AC1764(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A2AC176C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A2AC1774(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s7MetricsV14TransferResultO17FailureCodingKeysOMa_0()
{
  return &_s7MetricsV14TransferResultO17FailureCodingKeysON_0;
}

unint64_t sub_1A2AC1794()
{
  unint64_t result;

  result = qword_1EE67FA80;
  if (!qword_1EE67FA80)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0DBB4, &_s7MetricsV14TransferResultO17FailureCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67FA80);
  }
  return result;
}

unint64_t sub_1A2AC17DC()
{
  unint64_t result;

  result = qword_1EE67FA88;
  if (!qword_1EE67FA88)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0DCBC, &_s7MetricsV14TransferResultO10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67FA88);
  }
  return result;
}

unint64_t sub_1A2AC1824()
{
  unint64_t result;

  result = qword_1EE67FA90;
  if (!qword_1EE67FA90)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0DD74, &_s7MetricsV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67FA90);
  }
  return result;
}

unint64_t sub_1A2AC186C()
{
  unint64_t result;

  result = qword_1EE67FA98;
  if (!qword_1EE67FA98)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0DCE4, &_s7MetricsV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67FA98);
  }
  return result;
}

unint64_t sub_1A2AC18B4()
{
  unint64_t result;

  result = qword_1EE67FAA0;
  if (!qword_1EE67FAA0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0DD0C, &_s7MetricsV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67FAA0);
  }
  return result;
}

unint64_t sub_1A2AC18FC()
{
  unint64_t result;

  result = qword_1EE67FAA8;
  if (!qword_1EE67FAA8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0DBDC, &_s7MetricsV14TransferResultO17SuccessCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67FAA8);
  }
  return result;
}

unint64_t sub_1A2AC1944()
{
  unint64_t result;

  result = qword_1EE67FAB0;
  if (!qword_1EE67FAB0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0DC04, &_s7MetricsV14TransferResultO17SuccessCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67FAB0);
  }
  return result;
}

unint64_t sub_1A2AC198C()
{
  unint64_t result;

  result = qword_1EE67FAB8;
  if (!qword_1EE67FAB8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0DB24, &_s7MetricsV14TransferResultO17FailureCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67FAB8);
  }
  return result;
}

unint64_t sub_1A2AC19D4()
{
  unint64_t result;

  result = qword_1EE67FAC0;
  if (!qword_1EE67FAC0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0DB4C, &_s7MetricsV14TransferResultO17FailureCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67FAC0);
  }
  return result;
}

unint64_t sub_1A2AC1A1C()
{
  unint64_t result;

  result = qword_1EE67FAC8;
  if (!qword_1EE67FAC8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0DC2C, &_s7MetricsV14TransferResultO10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67FAC8);
  }
  return result;
}

unint64_t sub_1A2AC1A64()
{
  unint64_t result;

  result = qword_1EE67FAD0;
  if (!qword_1EE67FAD0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0DC54, &_s7MetricsV14TransferResultO10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE67FAD0);
  }
  return result;
}

uint64_t sub_1A2AC1AA8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7461447472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746144646E65 && a2 == 0xE700000000000000 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x76697469736E6573 && a2 == 0xE900000000000065 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746C75736572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t SFAirDrop.ContactRequest.description.getter()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v1 = v0[3];
  if (!v1)
    return 0x6F70707553746F6ELL;
  if (v1 == 1)
    return 0x656465654E746F6ELL;
  v3 = v0[6];
  v4 = *v0;
  v5 = v0[1];
  v6 = v0[2];
  v7 = v0[4];
  v8 = v0[5];
  v9 = v0[7];
  v10 = v0[8];
  sub_1A2AC2B30(*v0, v5, v6, v1, v7, v8, v3, v9, v10);
  SFAirDrop.ContactInfo.description.getter();
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  sub_1A297DB18(v4, v5, v6, v1, v7, v8, v3, v9, v10);
  return 0x28746361746E6F63;
}

uint64_t SFAirDrop.ContactRequest.contact.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 24);
  if (v3 >= 2)
  {
    v7 = *(_QWORD *)(v1 + 56);
    v8 = *(_QWORD *)(v1 + 64);
    v5 = *(_QWORD *)(v1 + 40);
    v4 = *(_QWORD *)(v1 + 32);
    v6 = *(_QWORD *)(v1 + 48) & 1;
    *(_QWORD *)a1 = *(_QWORD *)v1;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A297208C();
    result = sub_1A2973524(v7, v8);
  }
  else
  {
    v3 = 0;
    v4 = 0;
    v5 = 0;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
  }
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 64) = v8;
  return result;
}

uint64_t sub_1A2AC1E80()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656465654E746F6ELL;
  if (*v0 != 1)
    v1 = 0x746361746E6F63;
  if (*v0)
    return v1;
  else
    return 0x6F70707553746F6ELL;
}

uint64_t sub_1A2AC1EE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2AC359C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2AC1F0C()
{
  sub_1A2AC2BA4();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AC1F34()
{
  sub_1A2AC2BA4();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AC1F5C()
{
  sub_1A2AC2BE8();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AC1F84()
{
  sub_1A2AC2BE8();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AC1FAC()
{
  sub_1A2AC2C2C();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AC1FD4()
{
  sub_1A2AC2C2C();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AC1FFC()
{
  sub_1A2AC2C70();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AC2024()
{
  sub_1A2AC2C70();
  return sub_1A2AE4108();
}

uint64_t SFAirDrop.ContactRequest.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  unint64_t v53;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FAE8);
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FAF0);
  v31 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FAF8);
  v29 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FB00);
  v43 = *(_QWORD *)(v9 - 8);
  v44 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v41 = v1[1];
  v42 = v12;
  v13 = v1[2];
  v14 = v1[3];
  v39 = v1[4];
  v40 = v13;
  v15 = v1[5];
  v16 = v1[6];
  v37 = v1[7];
  v38 = v15;
  v33 = v1[8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2AC2BA4();
  sub_1A2AE40E4();
  if (!v14)
  {
    LOBYTE(v45) = 0;
    sub_1A2AC2C70();
    v17 = v44;
    sub_1A2AE3DB4();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v30);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v11, v17);
  }
  if (v14 == 1)
  {
    LOBYTE(v45) = 1;
    sub_1A2AC2C2C();
    v17 = v44;
    sub_1A2AE3DB4();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v32);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v11, v17);
  }
  v28 = v16;
  v32 = v16 & 1;
  LOBYTE(v45) = 2;
  v19 = v41;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = v38;
  v20 = v39;
  sub_1A297208C();
  v22 = v33;
  sub_1A2973524(v37, v33);
  sub_1A2AC2BE8();
  v23 = v34;
  v24 = v44;
  sub_1A2AE3DB4();
  v45 = v42;
  v46 = v19;
  v47 = v40;
  v48 = v14;
  v49 = v20;
  v50 = v21;
  v51 = v32;
  v25 = v37;
  v52 = v37;
  v53 = v22;
  sub_1A298FD2C();
  v26 = v36;
  sub_1A2AE3E2C();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v26);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v24);
  return sub_1A297DB18(v42, v41, v40, v14, v39, v38, v28, v25, v22);
}

uint64_t SFAirDrop.ContactRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  _QWORD *v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  unsigned __int8 v50;
  __int128 v51;
  uint64_t v52;

  v42 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FB28);
  v4 = *(_QWORD *)(v3 - 8);
  v40 = v3;
  v41 = v4;
  MEMORY[0x1E0C80A78](v3);
  v44 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FB30);
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  MEMORY[0x1E0C80A78](v6);
  v43 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FB38);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FB40);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v45 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1A2AC2BA4();
  v17 = v52;
  sub_1A2AE40C0();
  if (!v17)
  {
    v37 = v9;
    v52 = v8;
    v19 = v43;
    v18 = v44;
    v20 = sub_1A2AE3D9C();
    v21 = v12;
    if (*(_QWORD *)(v20 + 16) == 1)
    {
      if (*(_BYTE *)(v20 + 32))
      {
        if (*(_BYTE *)(v20 + 32) != 1)
        {
          v52 = v13;
          LOBYTE(v46) = 2;
          sub_1A2AC2BE8();
          v31 = v15;
          sub_1A2AE3CE8();
          v32 = v42;
          sub_1A2990300();
          v33 = v40;
          sub_1A2AE3D78();
          (*(void (**)(char *, uint64_t))(v41 + 8))(v18, v33);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v52 + 8))(v31, v12);
          v24 = v46;
          v22 = v47;
          v25 = v48;
          v34 = v49;
          v23 = v50;
          v35 = v51;
          v29 = (uint64_t)v45;
LABEL_12:
          *(_OWORD *)v32 = v24;
          *(_QWORD *)(v32 + 16) = v22;
          *(_QWORD *)(v32 + 24) = v25;
          *(_OWORD *)(v32 + 32) = v34;
          *(_QWORD *)(v32 + 48) = v23;
          *(_OWORD *)(v32 + 56) = v35;
          return __swift_destroy_boxed_opaque_existential_0Tm(v29);
        }
        LOBYTE(v46) = 1;
        sub_1A2AC2C2C();
        sub_1A2AE3CE8();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v39);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        v22 = 0;
        v23 = 0;
        v24 = 0uLL;
        v25 = 1;
      }
      else
      {
        LOBYTE(v46) = 0;
        sub_1A2AC2C70();
        sub_1A2AE3CE8();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v52);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        v22 = 0;
        v25 = 0;
        v23 = 0;
        v24 = 0uLL;
      }
      v34 = 0uLL;
      v35 = 0uLL;
      v29 = (uint64_t)v45;
      v32 = v42;
      goto LABEL_12;
    }
    v26 = sub_1A2AE3B5C();
    swift_allocError();
    v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE67AC00);
    *v28 = &type metadata for SFAirDrop.ContactRequest;
    sub_1A2AE3CF4();
    sub_1A2AE3B50();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, *MEMORY[0x1E0DEC450], v26);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v21);
  }
  v29 = (uint64_t)v45;
  return __swift_destroy_boxed_opaque_existential_0Tm(v29);
}

uint64_t sub_1A2AC2890@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDrop.ContactRequest.init(from:)(a1, a2);
}

uint64_t sub_1A2AC28A4(_QWORD *a1)
{
  return SFAirDrop.ContactRequest.encode(to:)(a1);
}

uint64_t _s7Sharing9SFAirDropO14ContactRequestO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[6];
  char v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD v50[6];
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[19];

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v9 = a1[7];
  v10 = a1[8];
  v11 = *a2;
  v12 = a2[1];
  v13 = a2[2];
  v14 = a2[3];
  v15 = a2[4];
  v16 = a2[5];
  v17 = a2[6];
  v18 = a2[7];
  v19 = a2[8];
  v54[0] = *a1;
  v54[1] = v2;
  v54[2] = v4;
  v54[3] = v5;
  v54[4] = v6;
  v54[5] = v7;
  v54[6] = v8;
  v54[7] = v9;
  v54[8] = v10;
  v54[9] = v11;
  v54[10] = v12;
  v54[11] = v13;
  v54[12] = v14;
  v54[13] = v15;
  v54[14] = v16;
  v54[15] = v17;
  v54[16] = v18;
  v54[17] = v19;
  if (v5)
  {
    if (v5 != 1)
    {
      if (v14 >= 2)
      {
        v50[0] = v3;
        v50[1] = v2;
        v50[2] = v4;
        v50[3] = v5;
        v50[4] = v6;
        v50[5] = v7;
        v45 = v2;
        v46[0] = v11;
        v51 = v8 & 1;
        v52 = v9;
        v53 = v10;
        v46[1] = v12;
        v46[2] = v13;
        v46[3] = v14;
        v46[4] = v15;
        v46[5] = v16;
        v47 = v17 & 1;
        v48 = v18;
        v49 = v19;
        v43 = v6;
        v44 = v4;
        v38 = v13;
        v39 = v10;
        v41 = v8;
        v42 = v7;
        v40 = v9;
        sub_1A2AC2B30(v11, v12, v13, v14, v15, v16, v17, v18, v19);
        sub_1A2AC2B30(v3, v45, v44, v5, v43, v42, v41, v40, v39);
        sub_1A2AC2B30(v11, v12, v38, v14, v15, v16, v17, v18, v19);
        sub_1A2AC2B30(v3, v45, v44, v5, v43, v42, v41, v40, v39);
        _s7Sharing9SFAirDropO11ContactInfoV2eeoiySbAE_AEtFZ_0((uint64_t)v50, (uint64_t)v46);
        v37 = v3;
        v20 = v34;
        sub_1A297DA78(v54);
        sub_1A297DB18(v11, v12, v38, v14, v15, v16, v17, v18, v19);
        sub_1A297DB18(v37, v45, v44, v5, v43, v42, v41, v40, v39);
        return v20 & 1;
      }
      goto LABEL_8;
    }
    if (v14 != 1)
    {
LABEL_8:
      v36 = v19;
      v21 = v11;
      v22 = v4;
      v23 = v14;
      v24 = v6;
      v25 = v15;
      v26 = v7;
      v27 = v16;
      v28 = v8;
      v29 = v17;
      v30 = v9;
      v31 = v18;
      v32 = v2;
      v33 = v10;
      sub_1A2AC2B30(v21, v12, v13, v23, v25, v27, v29, v31, v36);
      sub_1A2AC2B30(v3, v32, v22, v5, v24, v26, v28, v30, v33);
      sub_1A297DA78(v54);
      v20 = 0;
      return v20 & 1;
    }
  }
  else if (v14)
  {
    goto LABEL_8;
  }
  sub_1A297DA78(v54);
  v20 = 1;
  return v20 & 1;
}

uint64_t sub_1A2AC2B30(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  uint64_t result;

  if (a4 >= 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A297208C();
    return sub_1A2973524(a8, a9);
  }
  return result;
}

unint64_t sub_1A2AC2BA4()
{
  unint64_t result;

  result = qword_1EE67FB08;
  if (!qword_1EE67FB08)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0E314, &_s14ContactRequestO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FB08);
  }
  return result;
}

unint64_t sub_1A2AC2BE8()
{
  unint64_t result;

  result = qword_1EE67FB10;
  if (!qword_1EE67FB10)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0E2C4, &_s14ContactRequestO17ContactCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FB10);
  }
  return result;
}

unint64_t sub_1A2AC2C2C()
{
  unint64_t result;

  result = qword_1EE67FB18;
  if (!qword_1EE67FB18)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0E274, &_s14ContactRequestO19NotNeededCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FB18);
  }
  return result;
}

unint64_t sub_1A2AC2C70()
{
  unint64_t result;

  result = qword_1EE67FB20;
  if (!qword_1EE67FB20)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0E224, &_s14ContactRequestO22NotSupportedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FB20);
  }
  return result;
}

unint64_t _s14ContactRequestOwxx(_QWORD *a1)
{
  unint64_t result;

  result = a1[3];
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A2973568();
    return sub_1A29736C4(a1[7], a1[8]);
  }
  return result;
}

uint64_t _s14ContactRequestOwcp(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4 < 0xFFFFFFFF)
  {
    v11 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v11;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
  }
  else
  {
    v5 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v4;
    v6 = *(_QWORD *)(a2 + 32);
    v7 = *(_QWORD *)(a2 + 40);
    v8 = *(_BYTE *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A297208C();
    *(_QWORD *)(a1 + 32) = v6;
    *(_QWORD *)(a1 + 40) = v7;
    *(_BYTE *)(a1 + 48) = v8;
    v10 = *(_QWORD *)(a2 + 56);
    v9 = *(_QWORD *)(a2 + 64);
    sub_1A2973524(v10, v9);
    *(_QWORD *)(a1 + 56) = v10;
    *(_QWORD *)(a1 + 64) = v9;
  }
  return a1;
}

uint64_t _s14ContactRequestOwca(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v4 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      v12 = *(_QWORD *)(a2 + 32);
      v13 = *(_QWORD *)(a2 + 40);
      v14 = *(_BYTE *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A297208C();
      *(_QWORD *)(a1 + 32) = v12;
      *(_QWORD *)(a1 + 40) = v13;
      *(_BYTE *)(a1 + 48) = v14;
      v16 = *(_QWORD *)(a2 + 56);
      v15 = *(_QWORD *)(a2 + 64);
      sub_1A2973524(v16, v15);
      *(_QWORD *)(a1 + 56) = v16;
      *(_QWORD *)(a1 + 64) = v15;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v17 = *(_OWORD *)(a2 + 16);
    v18 = *(_OWORD *)(a2 + 32);
    v19 = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v18;
    *(_OWORD *)(a1 + 48) = v19;
    *(_OWORD *)(a1 + 16) = v17;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A2973568();
    sub_1A29736C4(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
    goto LABEL_7;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_BYTE *)(a2 + 48);
  sub_1A297208C();
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = v7;
  sub_1A2973568();
  v9 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  sub_1A2973524(v9, v8);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v8;
  sub_1A29736C4(v10, v11);
  return a1;
}

uint64_t _s14ContactRequestOwta(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;

  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 24);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A2973568();
    sub_1A29736C4(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
LABEL_5:
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
    return a1;
  }
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  v6 = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = v6;
  sub_1A2973568();
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  sub_1A29736C4(v7, v8);
  return a1;
}

uint64_t _s14ContactRequestOwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t _s14ContactRequestOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)(result + 64) = 0;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 72) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2 + 1;
  }
  return result;
}

uint64_t sub_1A2AC30E8(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_1A2AC3100(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for SFAirDrop.ContactRequest()
{
  return &type metadata for SFAirDrop.ContactRequest;
}

uint64_t _s14ContactRequestO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A2AC3190 + 4 * byte_1A2B0DEE5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A2AC31C4 + 4 * byte_1A2B0DEE0[v4]))();
}

uint64_t sub_1A2AC31C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2AC31CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2AC31D4);
  return result;
}

uint64_t sub_1A2AC31E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2AC31E8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A2AC31EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2AC31F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14ContactRequestO10CodingKeysOMa()
{
  return &_s14ContactRequestO10CodingKeysON;
}

ValueMetadata *_s14ContactRequestO22NotSupportedCodingKeysOMa()
{
  return &_s14ContactRequestO22NotSupportedCodingKeysON;
}

ValueMetadata *_s14ContactRequestO19NotNeededCodingKeysOMa()
{
  return &_s14ContactRequestO19NotNeededCodingKeysON;
}

uint64_t _s14ContactRequestO17ContactCodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A2AC3270 + 4 * byte_1A2B0DEEA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A2AC3290 + 4 * byte_1A2B0DEEF[v4]))();
}

_BYTE *sub_1A2AC3270(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A2AC3290(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A2AC3298(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A2AC32A0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A2AC32A8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A2AC32B0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s14ContactRequestO17ContactCodingKeysOMa()
{
  return &_s14ContactRequestO17ContactCodingKeysON;
}

unint64_t sub_1A2AC32D0()
{
  unint64_t result;

  result = qword_1EE67FB48;
  if (!qword_1EE67FB48)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0E0A4, &_s14ContactRequestO17ContactCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FB48);
  }
  return result;
}

unint64_t sub_1A2AC3318()
{
  unint64_t result;

  result = qword_1EE67FB50;
  if (!qword_1EE67FB50)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0E1FC, &_s14ContactRequestO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FB50);
  }
  return result;
}

unint64_t sub_1A2AC3360()
{
  unint64_t result;

  result = qword_1EE67FB58;
  if (!qword_1EE67FB58)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0E11C, &_s14ContactRequestO22NotSupportedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FB58);
  }
  return result;
}

unint64_t sub_1A2AC33A8()
{
  unint64_t result;

  result = qword_1EE67FB60;
  if (!qword_1EE67FB60)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0E144, &_s14ContactRequestO22NotSupportedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FB60);
  }
  return result;
}

unint64_t sub_1A2AC33F0()
{
  unint64_t result;

  result = qword_1EE67FB68;
  if (!qword_1EE67FB68)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0E0CC, &_s14ContactRequestO19NotNeededCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FB68);
  }
  return result;
}

unint64_t sub_1A2AC3438()
{
  unint64_t result;

  result = qword_1EE67FB70;
  if (!qword_1EE67FB70)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0E0F4, &_s14ContactRequestO19NotNeededCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FB70);
  }
  return result;
}

unint64_t sub_1A2AC3480()
{
  unint64_t result;

  result = qword_1EE67FB78;
  if (!qword_1EE67FB78)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0E014, &_s14ContactRequestO17ContactCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FB78);
  }
  return result;
}

unint64_t sub_1A2AC34C8()
{
  unint64_t result;

  result = qword_1EE67FB80;
  if (!qword_1EE67FB80)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0E03C, &_s14ContactRequestO17ContactCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FB80);
  }
  return result;
}

unint64_t sub_1A2AC3510()
{
  unint64_t result;

  result = qword_1EE67FB88;
  if (!qword_1EE67FB88)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0E16C, &_s14ContactRequestO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FB88);
  }
  return result;
}

unint64_t sub_1A2AC3558()
{
  unint64_t result;

  result = qword_1EE67FB90;
  if (!qword_1EE67FB90)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0E194, &_s14ContactRequestO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FB90);
  }
  return result;
}

uint64_t sub_1A2AC359C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F70707553746F6ELL && a2 == 0xEC00000064657472;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656465654E746F6ELL && a2 == 0xE900000000000064 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746361746E6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_1A2AC3714(char a1)
{
  sub_1A2AE400C();
  __asm { BR              X10 }
}

uint64_t sub_1A2AC3764()
{
  sub_1A2AE34C0();
  swift_bridgeObjectRelease();
  return sub_1A2AE4030();
}

void sub_1A2AC37F8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A2AC383C()
{
  sub_1A2AE34C0();
  return swift_bridgeObjectRelease();
}

void sub_1A2AC38D0()
{
  JUMPOUT(0x1A2AC38B8);
}

void sub_1A2AC38F4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A2AC3934()
{
  sub_1A2AE34C0();
  return swift_bridgeObjectRelease();
}

void sub_1A2AC3A10(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A2AC3A54()
{
  sub_1A2AE34C0();
  return swift_bridgeObjectRelease();
}

void sub_1A2AC3AF0(uint64_t a1, char a2)
{
  sub_1A2AE400C();
  __asm { BR              X10 }
}

uint64_t sub_1A2AC3B3C()
{
  sub_1A2AE34C0();
  swift_bridgeObjectRelease();
  return sub_1A2AE4030();
}

void sub_1A2AC3C2C(uint64_t a1, char a2)
{
  sub_1A2AE400C();
  __asm { BR              X10 }
}

uint64_t sub_1A2AC3C78()
{
  sub_1A2AE34C0();
  swift_bridgeObjectRelease();
  return sub_1A2AE4030();
}

BOOL static SFAirDrop.NearbySharingDiscovery.PollingType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SFAirDrop.NearbySharingDiscovery.PollingType.hash(into:)()
{
  return sub_1A2AE4018();
}

uint64_t sub_1A2AC3D48()
{
  sub_1A2AC4234();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AC3D70()
{
  sub_1A2AC4234();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AC3D98()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65766973736170;
  if (*v0 != 1)
    v1 = 1819047270;
  if (*v0)
    return v1;
  else
    return 0x6974616D6F747561;
}

uint64_t sub_1A2AC3DF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2ACF760(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2AC3E14()
{
  sub_1A2AC4168();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AC3E3C()
{
  sub_1A2AC4168();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AC3E64()
{
  sub_1A2AC41AC();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AC3E8C()
{
  sub_1A2AC41AC();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AC3EB4()
{
  sub_1A2AC41F0();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AC3EDC()
{
  sub_1A2AC41F0();
  return sub_1A2AE4108();
}

uint64_t SFAirDrop.NearbySharingDiscovery.PollingType.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675178);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x1E0C80A78](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675180);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675188);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675170);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2AC4168();
  sub_1A2AE40E4();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_1A2AC41F0();
      sub_1A2AE3DB4();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_1A2AC41AC();
      v16 = v21;
      sub_1A2AE3DB4();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_1A2AC4234();
    sub_1A2AE3DB4();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_1A2AC4168()
{
  unint64_t result;

  result = qword_1EE674E98;
  if (!qword_1EE674E98)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0FCEC, &_s22NearbySharingDiscoveryO11PollingTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE674E98);
  }
  return result;
}

unint64_t sub_1A2AC41AC()
{
  unint64_t result;

  result = qword_1EE67FB98;
  if (!qword_1EE67FB98)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0FC9C, &_s22NearbySharingDiscoveryO11PollingTypeO14FullCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FB98);
  }
  return result;
}

unint64_t sub_1A2AC41F0()
{
  unint64_t result;

  result = qword_1EE67FBA0;
  if (!qword_1EE67FBA0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0FC4C, &_s22NearbySharingDiscoveryO11PollingTypeO17PassiveCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FBA0);
  }
  return result;
}

unint64_t sub_1A2AC4234()
{
  unint64_t result;

  result = qword_1EE674ED0;
  if (!qword_1EE674ED0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0FBFC, &_s22NearbySharingDiscoveryO11PollingTypeO19AutomaticCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE674ED0);
  }
  return result;
}

uint64_t SFAirDrop.NearbySharingDiscovery.PollingType.hashValue.getter()
{
  sub_1A2AE400C();
  sub_1A2AE4018();
  return sub_1A2AE4030();
}

uint64_t SFAirDrop.NearbySharingDiscovery.PollingType.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675140);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675148);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675150);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675138);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2AC4168();
  v13 = v41;
  sub_1A2AE40C0();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_1A2AE3D9C();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_1A2AE3B5C();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE67AC00);
    *v25 = &type metadata for SFAirDrop.NearbySharingDiscovery.PollingType;
    sub_1A2AE3CF4();
    sub_1A2AE3B50();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x1E0DEC450], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0Tm(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_1A2AC41F0();
      v20 = v9;
      sub_1A2AE3CE8();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_1A2AC41AC();
      v28 = v15;
      sub_1A2AE3CE8();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_1A2AC4234();
    sub_1A2AE3CE8();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_0Tm(v26);
}

uint64_t sub_1A2AC4700@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return SFAirDrop.NearbySharingDiscovery.PollingType.init(from:)(a1, a2);
}

uint64_t sub_1A2AC4714(_QWORD *a1)
{
  return SFAirDrop.NearbySharingDiscovery.PollingType.encode(to:)(a1);
}

uint64_t SFAirDrop.NearbySharingDiscovery.Request.pollingType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SFAirDrop.NearbySharingDiscovery.Request(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for SFAirDrop.NearbySharingDiscovery.Request(uint64_t a1)
{
  return sub_1A29903E0(a1, (uint64_t *)&unk_1EE674598);
}

uint64_t SFAirDrop.NearbySharingDiscovery.Request.applicationLabel.getter()
{
  return sub_1A2AC4EF4(type metadata accessor for SFAirDrop.NearbySharingDiscovery.Request);
}

uint64_t SFAirDrop.NearbySharingDiscovery.Request.init(pollingType:applicationLabel:)@<X0>(char *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t result;
  unint64_t *v10;

  v7 = *a1;
  sub_1A2AE3124();
  v8 = type metadata accessor for SFAirDrop.NearbySharingDiscovery.Request(0);
  *(_BYTE *)(a4 + *(int *)(v8 + 20)) = v7;
  result = sub_1A2AE3544();
  if ((result & 1) == 0)
  {
    sub_1A2AE34F0();
    swift_bridgeObjectRelease();
    sub_1A2AE34F0();
    result = swift_bridgeObjectRelease();
    a2 = 0xD000000000000011;
    a3 = 0x80000001A2B44F90;
  }
  v10 = (unint64_t *)(a4 + *(int *)(v8 + 24));
  *v10 = a2;
  v10[1] = a3;
  return result;
}

uint64_t sub_1A2AC4858()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x54676E696C6C6F70;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_1A2AC48B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2ACF8B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2AC48D8()
{
  sub_1A2AC4AC4();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AC4900()
{
  sub_1A2AC4AC4();
  return sub_1A2AE4108();
}

uint64_t SFAirDrop.NearbySharingDiscovery.Request.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE675190);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2AC4AC4();
  sub_1A2AE40E4();
  v10[15] = 0;
  sub_1A2AE3130();
  sub_1A296E8A4(&qword_1EE6766D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  sub_1A2AE3E2C();
  if (!v2)
  {
    v10[14] = *(_BYTE *)(v3 + *(int *)(type metadata accessor for SFAirDrop.NearbySharingDiscovery.Request(0) + 20));
    v10[13] = 1;
    sub_1A2AC4B08();
    sub_1A2AE3E2C();
    v10[12] = 2;
    sub_1A2AE3DF0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A2AC4AC4()
{
  unint64_t result;

  result = qword_1EE674EF8;
  if (!qword_1EE674EF8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0FBAC, &_s22NearbySharingDiscoveryO7RequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE674EF8);
  }
  return result;
}

unint64_t sub_1A2AC4B08()
{
  unint64_t result;

  result = qword_1EE674EE8;
  if (!qword_1EE674EE8)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDrop.NearbySharingDiscovery.PollingType, &type metadata for SFAirDrop.NearbySharingDiscovery.PollingType);
    atomic_store(result, (unint64_t *)&qword_1EE674EE8);
  }
  return result;
}

uint64_t SFAirDrop.NearbySharingDiscovery.Request.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;

  v24 = a2;
  v25 = sub_1A2AE3130();
  v3 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v26 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE675158);
  v5 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SFAirDrop.NearbySharingDiscovery.Request(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2AC4AC4();
  v27 = v7;
  v11 = v29;
  sub_1A2AE40C0();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  v29 = v8;
  v12 = v5;
  v33 = 0;
  sub_1A296E8A4(&qword_1EE676788, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
  v14 = v25;
  v13 = v26;
  sub_1A2AE3D78();
  v23[1] = v3;
  v15 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v16 = (uint64_t)v10;
  v15(v10, v13, v14);
  v31 = 1;
  sub_1A2AC4E18();
  sub_1A2AE3D78();
  v17 = v29;
  v10[*(int *)(v29 + 20)] = v32;
  v30 = 2;
  v18 = sub_1A2AE3D3C();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v27, v28);
  v21 = (uint64_t *)(v16 + *(int *)(v17 + 24));
  *v21 = v18;
  v21[1] = v20;
  sub_1A2990388(v16, v24, type metadata accessor for SFAirDrop.NearbySharingDiscovery.Request);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return sub_1A297DA3C(v16, type metadata accessor for SFAirDrop.NearbySharingDiscovery.Request);
}

unint64_t sub_1A2AC4E18()
{
  unint64_t result;

  result = qword_1EE674EF0;
  if (!qword_1EE674EF0)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDrop.NearbySharingDiscovery.PollingType, &type metadata for SFAirDrop.NearbySharingDiscovery.PollingType);
    atomic_store(result, (unint64_t *)&qword_1EE674EF0);
  }
  return result;
}

uint64_t sub_1A2AC4E5C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDrop.NearbySharingDiscovery.Request.init(from:)(a1, a2);
}

uint64_t sub_1A2AC4E70(_QWORD *a1)
{
  return SFAirDrop.NearbySharingDiscovery.Request.encode(to:)(a1);
}

uint64_t SFAirDrop.NearbySharingAssertion.nearbySharingInteractionID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SFAirDrop.NearbySharingAssertion(0) + 20);
  v4 = sub_1A2AE3130();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SFAirDrop.NearbySharingAssertion(uint64_t a1)
{
  return sub_1A29903E0(a1, qword_1EE675CC0);
}

uint64_t SFAirDrop.NearbySharingAssertion.explanation.getter()
{
  return sub_1A2AC4EF4(type metadata accessor for SFAirDrop.NearbySharingAssertion);
}

uint64_t sub_1A2AC4EF4(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SFAirDrop.NearbySharingAssertion.client.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A2AC4F50(type metadata accessor for SFAirDrop.NearbySharingAssertion, (uint64_t)type metadata accessor for SFClientIdentity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A2990388, a1);
}

uint64_t sub_1A2AC4F50@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;

  v8 = a1(0);
  return a3(v4 + *(int *)(v8 + 28), a4, a2);
}

uint64_t SFAirDrop.NearbySharingAssertion.init(nearbySharingInteractionID:explanation:client:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  sub_1A2AE3124();
  v10 = (int *)type metadata accessor for SFAirDrop.NearbySharingAssertion(0);
  v11 = a5 + v10[5];
  v12 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a1, v12);
  v13 = (_QWORD *)(a5 + v10[6]);
  *v13 = a2;
  v13[1] = a3;
  return sub_1A297EB48(a4, a5 + v10[7], (uint64_t (*)(_QWORD))type metadata accessor for SFClientIdentity);
}

uint64_t SFAirDrop.NearbySharingAssertionRequest.explanation.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SFAirDrop.NearbySharingAssertionRequest(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for SFAirDrop.NearbySharingAssertionRequest(uint64_t a1)
{
  return sub_1A29903E0(a1, (uint64_t *)&unk_1EE674E88);
}

uint64_t SFAirDrop.NearbySharingAssertionRequest.init(nearbySharingInteractionID:explanation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;

  v8 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for SFAirDrop.NearbySharingAssertionRequest(0);
  v10 = (_QWORD *)(a4 + *(int *)(result + 20));
  *v10 = a2;
  v10[1] = a3;
  return result;
}

uint64_t sub_1A2AC50F4()
{
  _BYTE *v0;

  if (*v0)
    return 0x74616E616C707865;
  else
    return 0xD00000000000001ALL;
}

uint64_t sub_1A2AC513C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2ACFA00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2AC5160()
{
  sub_1A2AC5304();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AC5188()
{
  sub_1A2AC5304();
  return sub_1A2AE4108();
}

uint64_t SFAirDrop.NearbySharingAssertionRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FBA8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2AC5304();
  sub_1A2AE40E4();
  v8[15] = 0;
  sub_1A2AE3130();
  sub_1A296E8A4(&qword_1EE6766D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  sub_1A2AE3E2C();
  if (!v1)
  {
    type metadata accessor for SFAirDrop.NearbySharingAssertionRequest(0);
    v8[14] = 1;
    sub_1A2AE3DF0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A2AC5304()
{
  unint64_t result;

  result = qword_1EE67FBB0;
  if (!qword_1EE67FBB0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0FB5C, &_s29NearbySharingAssertionRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FBB0);
  }
  return result;
}

uint64_t SFAirDrop.NearbySharingAssertionRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  char v29;

  v23 = a2;
  v26 = sub_1A2AE3130();
  v24 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v27 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FBB8);
  v5 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SFAirDrop.NearbySharingAssertionRequest(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2AC5304();
  sub_1A2AE40C0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  v21 = a1;
  v22 = v5;
  v11 = (uint64_t)v10;
  v12 = v24;
  v29 = 0;
  sub_1A296E8A4(&qword_1EE676788, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
  v13 = v26;
  v14 = v25;
  sub_1A2AE3D78();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v11, v27, v13);
  v28 = 1;
  v15 = sub_1A2AE3D3C();
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v14);
  v18 = (uint64_t *)(v11 + *(int *)(v8 + 20));
  *v18 = v15;
  v18[1] = v17;
  sub_1A2990388(v11, v23, type metadata accessor for SFAirDrop.NearbySharingAssertionRequest);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v21);
  return sub_1A297DA3C(v11, type metadata accessor for SFAirDrop.NearbySharingAssertionRequest);
}

uint64_t sub_1A2AC55D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDrop.NearbySharingAssertionRequest.init(from:)(a1, a2);
}

uint64_t sub_1A2AC55E4(_QWORD *a1)
{
  return SFAirDrop.NearbySharingAssertionRequest.encode(to:)(a1);
}

uint64_t static SFAirDrop.NearbySharingInteraction.PresenceContext.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1A2AC5604()
{
  sub_1A2AC5718();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AC562C()
{
  sub_1A2AC5718();
  return sub_1A2AE4108();
}

uint64_t SFAirDrop.NearbySharingInteraction.PresenceContext.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FBC0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2AC5718();
  sub_1A2AE40E4();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1A2AC5718()
{
  unint64_t result;

  result = qword_1EE67FBC8;
  if (!qword_1EE67FBC8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0FB0C, &_s24NearbySharingInteractionV15PresenceContextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FBC8);
  }
  return result;
}

uint64_t SFAirDrop.NearbySharingInteraction.PresenceContext.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

uint64_t sub_1A2AC5780(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FBC0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2AC5718();
  sub_1A2AE40E4();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A2AE3CD0();
  result = swift_bridgeObjectRelease();
  v4 = 6;
  if (v2 < 6)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A2AC58CC + 4 * byte_1A2B0E39F[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1A2AC58CC()
{
  return 0x636972656E6567;
}

uint64_t sub_1A2AC58E0()
{
  return 0x706F7244726961;
}

uint64_t sub_1A2AC58F4()
{
  return 1952802157;
}

uint64_t sub_1A2AC5904()
{
  return 0x6572616873;
}

uint64_t sub_1A2AC5918()
{
  return 0x6D79615072656570;
}

void sub_1A2AC5938(char *a1)
{
  sub_1A2A5CFB8(*a1);
}

void sub_1A2AC5944()
{
  char *v0;

  sub_1A2AC3714(*v0);
}

void sub_1A2AC594C()
{
  __asm { BR              X10 }
}

uint64_t sub_1A2AC5988()
{
  sub_1A2AE34C0();
  return swift_bridgeObjectRelease();
}

void sub_1A2AC5A08(uint64_t a1)
{
  char *v1;

  sub_1A2AC3C2C(a1, *v1);
}

uint64_t sub_1A2AC5A10@<X0>(char *a1@<X8>)
{
  return SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType.init(rawValue:)(a1);
}

uint64_t sub_1A2AC5A1C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A2AC5A4C + 4 * byte_1A2B0E3AB[*v0]))();
}

void sub_1A2AC5A4C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x636972656E6567;
  a1[1] = v1;
}

void sub_1A2AC5A64(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x706F7244726961;
  a1[1] = v1;
}

void sub_1A2AC5A7C(_QWORD *a1@<X8>)
{
  *a1 = 1952802157;
  a1[1] = 0xE400000000000000;
}

void sub_1A2AC5A90(_QWORD *a1@<X8>)
{
  *a1 = 0x6572616873;
  a1[1] = 0xE500000000000000;
}

void sub_1A2AC5AA8(_QWORD *a1@<X8>)
{
  *a1 = 0x6D79615072656570;
  a1[1] = 0xEB00000000746E65;
}

uint64_t sub_1A2AC5ACC()
{
  sub_1A2AD0450();
  return sub_1A2AE35F8();
}

uint64_t sub_1A2AC5B28()
{
  sub_1A2AD0450();
  return sub_1A2AE35E0();
}

void SFAirDrop.NearbySharingInteraction.ConnectionContext.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *SFAirDrop.NearbySharingInteraction.ConnectionContext.type.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*SFAirDrop.NearbySharingInteraction.ConnectionContext.type.modify())()
{
  return nullsub_1;
}

uint64_t SFAirDrop.NearbySharingInteraction.ConnectionContext.endpointIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A2AC8344(type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext, (uint64_t)&qword_1EE6745C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A297CDE4, a1);
}

uint64_t type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(uint64_t a1)
{
  return sub_1A29903E0(a1, (uint64_t *)&unk_1EE674E58);
}

uint64_t SFAirDrop.NearbySharingInteraction.ConnectionContext.endpointIdentifier.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
  return sub_1A2A9486C(a1, v1 + *(int *)(v3 + 20), &qword_1EE6745C8);
}

uint64_t (*SFAirDrop.NearbySharingInteraction.ConnectionContext.endpointIdentifier.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
  return nullsub_1;
}

uint64_t SFAirDrop.NearbySharingInteraction.ConnectionContext.contactIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0
                 + *(int *)(type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDrop.NearbySharingInteraction.ConnectionContext.contactIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2
                + *(int *)(type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0) + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SFAirDrop.NearbySharingInteraction.ConnectionContext.contactIdentifier.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
  return nullsub_1;
}

uint64_t SFAirDrop.NearbySharingInteraction.ConnectionContext.deviceName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0
                 + *(int *)(type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDrop.NearbySharingInteraction.ConnectionContext.deviceName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2
                + *(int *)(type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0) + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SFAirDrop.NearbySharingInteraction.ConnectionContext.deviceName.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
  return nullsub_1;
}

uint64_t SFAirDrop.NearbySharingInteraction.ConnectionContext.deviceModel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0
                 + *(int *)(type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDrop.NearbySharingInteraction.ConnectionContext.deviceModel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2
                + *(int *)(type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0) + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SFAirDrop.NearbySharingInteraction.ConnectionContext.deviceModel.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
  return nullsub_1;
}

uint64_t SFAirDrop.NearbySharingInteraction.ConnectionContext.accountID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0
                 + *(int *)(type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDrop.NearbySharingInteraction.ConnectionContext.accountID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2
                + *(int *)(type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0) + 36));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SFAirDrop.NearbySharingInteraction.ConnectionContext.accountID.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
  return nullsub_1;
}

uint64_t SFAirDrop.NearbySharingInteraction.ConnectionContext.isSameAccount.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0)
                                     + 40));
}

uint64_t SFAirDrop.NearbySharingInteraction.ConnectionContext.isSameAccount.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
  *(_BYTE *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*SFAirDrop.NearbySharingInteraction.ConnectionContext.isSameAccount.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
  return nullsub_1;
}

uint64_t SFAirDrop.NearbySharingInteraction.ConnectionContext.transactionIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0) + 44);
  v4 = sub_1A2AE3130();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SFAirDrop.NearbySharingInteraction.ConnectionContext.transactionIdentifier.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0) + 44);
  v4 = sub_1A2AE3130();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SFAirDrop.NearbySharingInteraction.ConnectionContext.transactionIdentifier.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
  return nullsub_1;
}

uint64_t SFAirDrop.NearbySharingInteraction.ConnectionContext.init(type:transactionIdentifier:endpointIdentifier:contactIdentifier:deviceName:deviceModel:accountID:isSameAccount:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _BYTE *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t result;
  char v24;

  v24 = *a1;
  v14 = (int *)type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
  v15 = (uint64_t)&a9[v14[5]];
  v16 = sub_1A2AE3130();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
  v18 = &a9[v14[6]];
  *v18 = 0;
  v18[1] = 0;
  v19 = &a9[v14[7]];
  *v19 = 0;
  v19[1] = 0;
  v20 = &a9[v14[8]];
  *v20 = 0;
  v20[1] = 0;
  v21 = &a9[v14[9]];
  *v21 = 0;
  v21[1] = 0;
  v22 = v14[10];
  a9[v22] = 2;
  *a9 = v24;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v17 + 32))(&a9[v14[11]], a2, v16);
  sub_1A2A9486C(a3, v15, &qword_1EE6745C8);
  swift_bridgeObjectRelease();
  *v18 = a4;
  v18[1] = a5;
  swift_bridgeObjectRelease();
  *v19 = a6;
  v19[1] = a7;
  swift_bridgeObjectRelease();
  *v20 = a8;
  v20[1] = a10;
  result = swift_bridgeObjectRelease();
  *v21 = a11;
  v21[1] = a12;
  a9[v22] = a13;
  return result;
}

uint64_t sub_1A2AC6180(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A2AC61AC + 4 * byte_1A2B0E3B1[a1]))(1701869940, 0xE400000000000000);
}

unint64_t sub_1A2AC61AC()
{
  return 0xD000000000000012;
}

uint64_t sub_1A2AC627C()
{
  unsigned __int8 *v0;

  return sub_1A2AC6180(*v0);
}

uint64_t sub_1A2AC6284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2ACFB04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2AC62A8()
{
  sub_1A2ACA420();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AC62D0()
{
  sub_1A2ACA420();
  return sub_1A2AE4108();
}

uint64_t SFAirDrop.NearbySharingInteraction.ConnectionContext.encode(to:)(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[32];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FBD0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2ACA420();
  sub_1A2AE40E4();
  v10[31] = *v3;
  v10[30] = 0;
  sub_1A2ACA464();
  sub_1A2AE3E2C();
  if (!v2)
  {
    type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
    v10[29] = 1;
    sub_1A2AE3130();
    sub_1A296E8A4(&qword_1EE6766D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
    sub_1A2AE3DE4();
    v10[28] = 2;
    sub_1A2AE3DC0();
    v10[27] = 3;
    sub_1A2AE3DC0();
    v10[26] = 4;
    sub_1A2AE3DC0();
    v10[25] = 5;
    sub_1A2AE3DC0();
    v10[24] = 6;
    sub_1A2AE3DCC();
    v10[15] = 7;
    sub_1A2AE3E2C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SFAirDrop.NearbySharingInteraction.ConnectionContext.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  void (*v16)(void);
  uint64_t *v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _QWORD *v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t *v60;
  uint64_t *v61;
  uint64_t *v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;

  v50 = a2;
  v3 = sub_1A2AE3130();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v51 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
  MEMORY[0x1E0C80A78](v6);
  v52 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FBE8);
  v9 = *(_QWORD *)(v8 - 8);
  v53 = v8;
  v54 = v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void (**)(void))(v4 + 56);
  v57 = &v15[*(int *)(v13 + 20)];
  v16();
  v17 = (uint64_t *)&v15[v12[6]];
  *v17 = 0;
  v17[1] = 0;
  v62 = v17;
  v18 = (uint64_t *)&v15[v12[7]];
  *v18 = 0;
  v18[1] = 0;
  v61 = v18;
  v19 = (uint64_t *)&v15[v12[8]];
  *v19 = 0;
  v19[1] = 0;
  v60 = v19;
  v20 = (uint64_t *)&v15[v12[9]];
  *v20 = 0;
  v20[1] = 0;
  v59 = v20;
  v21 = v12[10];
  v15[v21] = 2;
  v22 = a1[3];
  v56 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_1A2ACA420();
  v55 = v11;
  v23 = v58;
  sub_1A2AE40C0();
  if (v23)
  {
    v25 = (uint64_t)v57;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v56);
    sub_1A296F108(v25, &qword_1EE6745C8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v24 = (uint64_t)v52;
    v58 = v21;
    v49 = v4;
    v70 = 0;
    sub_1A2ACA4A8();
    sub_1A2AE3D78();
    *v15 = v71;
    v69 = 1;
    v26 = sub_1A296E8A4(&qword_1EE676788, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    sub_1A2AE3D30();
    v48 = v26;
    sub_1A2A9486C(v24, (uint64_t)v57, &qword_1EE6745C8);
    v68 = 2;
    v27 = sub_1A2AE3D00();
    v29 = v28;
    v30 = v62;
    swift_bridgeObjectRelease();
    *v30 = v27;
    v30[1] = v29;
    v67 = 3;
    v31 = sub_1A2AE3D00();
    v33 = v32;
    v34 = v61;
    swift_bridgeObjectRelease();
    *v34 = v31;
    v34[1] = v33;
    v66 = 4;
    v35 = sub_1A2AE3D00();
    v37 = v36;
    v38 = v60;
    swift_bridgeObjectRelease();
    *v38 = v35;
    v38[1] = v37;
    v65 = 5;
    v39 = sub_1A2AE3D00();
    v41 = v40;
    v42 = v59;
    swift_bridgeObjectRelease();
    *v42 = v39;
    v42[1] = v41;
    v43 = v53;
    v64 = 6;
    v44 = v55;
    v15[v58] = sub_1A2AE3D0C();
    v63 = 7;
    v45 = v51;
    sub_1A2AE3D78();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v44, v43);
    v46 = (uint64_t)v56;
    (*(void (**)(_BYTE *, char *, uint64_t))(v49 + 32))(&v15[v12[11]], v45, v3);
    sub_1A2990388((uint64_t)v15, v50, type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext);
    __swift_destroy_boxed_opaque_existential_0Tm(v46);
    return sub_1A297DA3C((uint64_t)v15, type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext);
  }
}

uint64_t sub_1A2AC6A9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDrop.NearbySharingInteraction.ConnectionContext.init(from:)(a1, a2);
}

uint64_t sub_1A2AC6AB0(_QWORD *a1)
{
  return SFAirDrop.NearbySharingInteraction.ConnectionContext.encode(to:)(a1);
}

uint64_t static SFAirDrop.NearbySharingInteraction.FailureType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  char v3;
  int v4;

  v2 = *a1;
  v3 = v2 == 2;
  v4 = *a2;
  if (v4 != 2)
    v3 = 0;
  if (v2 != 2 && v4 != 2)
    v3 = ((v2 & 1) == 0) ^ v4;
  return v3 & 1;
}

uint64_t sub_1A2AC6AFC()
{
  _BYTE *v0;

  if (*v0)
    return 0x726F707075736E75;
  else
    return 0x796177416C6C7570;
}

uint64_t sub_1A2AC6B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2ACFE78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2AC6B64()
{
  sub_1A2ACA4EC();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AC6B8C()
{
  sub_1A2ACA4EC();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AC6BB4()
{
  sub_1A2ACA574();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AC6BDC()
{
  sub_1A2ACA574();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AC6C04()
{
  return 0x796C6C61636F6CLL;
}

uint64_t sub_1A2AC6C1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x796C6C61636F6CLL && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A2AE3EE0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A2AC6CB0()
{
  sub_1A2ACA530();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AC6CD8()
{
  sub_1A2ACA530();
  return sub_1A2AE4108();
}

uint64_t SFAirDrop.NearbySharingInteraction.FailureType.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FBF8);
  v17 = *(_QWORD *)(v3 - 8);
  v18 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FC00);
  v15 = *(_QWORD *)(v6 - 8);
  v16 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FC08);
  v19 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2ACA4EC();
  sub_1A2AE40E4();
  if (v12 == 2)
  {
    v20 = 0;
    sub_1A2ACA574();
    sub_1A2AE3DB4();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v16);
  }
  else
  {
    v21 = 1;
    sub_1A2ACA530();
    sub_1A2AE3DB4();
    v14 = v18;
    sub_1A2AE3DFC();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v11, v9);
}

uint64_t SFAirDrop.NearbySharingInteraction.FailureType.init(from:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  char v36;
  char v37;

  v31 = a2;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FC28);
  v30 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v32 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FC30);
  v4 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FC38);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2ACA4EC();
  v34 = v10;
  v11 = v35;
  sub_1A2AE40C0();
  if (v11)
    goto LABEL_6;
  v12 = v4;
  v14 = v32;
  v13 = v33;
  v28 = v8;
  v35 = a1;
  v15 = sub_1A2AE3D9C();
  v16 = v7;
  if (*(_QWORD *)(v15 + 16) != 1)
  {
    v20 = sub_1A2AE3B5C();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE67AC00);
    *v22 = &type metadata for SFAirDrop.NearbySharingInteraction.FailureType;
    v23 = v34;
    sub_1A2AE3CF4();
    sub_1A2AE3B50();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x1E0DEC450], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v23, v7);
    a1 = v35;
LABEL_6:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0Tm(v24);
  }
  v18 = v34;
  v17 = (uint64_t)v35;
  if ((*(_BYTE *)(v15 + 32) & 1) != 0)
  {
    v37 = 1;
    sub_1A2ACA530();
    v19 = v16;
    sub_1A2AE3CE8();
    v26 = sub_1A2AE3D48();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v13);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v18, v19);
    v27 = v26 & 1;
    v17 = (uint64_t)v35;
  }
  else
  {
    v36 = 0;
    sub_1A2ACA574();
    sub_1A2AE3CE8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v18, v16);
    v27 = 2;
  }
  *v31 = v27;
  v24 = v17;
  return __swift_destroy_boxed_opaque_existential_0Tm(v24);
}

uint64_t sub_1A2AC72D0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A2AC7308 + 4 * byte_1A2B0E3B9[a1]))(0xD000000000000010, 0x80000001A2B492F0);
}

uint64_t sub_1A2AC7308()
{
  return 0x697463656E6E6F63;
}

uint64_t sub_1A2AC7324()
{
  return 0x657463656E6E6F63;
}

uint64_t sub_1A2AC7340(uint64_t a1)
{
  return a1 + 5;
}

uint64_t sub_1A2AC7358()
{
  return 0x6465646E65;
}

uint64_t sub_1A2AC736C@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return SFAirDrop.NearbySharingInteraction.FailureType.init(from:)(a1, a2);
}

uint64_t sub_1A2AC7380(_QWORD *a1)
{
  return SFAirDrop.NearbySharingInteraction.FailureType.encode(to:)(a1);
}

uint64_t sub_1A2AC7394(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  char v3;
  int v4;

  v2 = *a1;
  v3 = v2 == 2;
  v4 = *a2;
  if (v4 != 2)
    v3 = 0;
  if (v2 != 2 && v4 != 2)
    v3 = ((v2 & 1) == 0) ^ v4;
  return v3 & 1;
}

uint64_t sub_1A2AC73CC()
{
  unsigned __int8 *v0;

  return sub_1A2AC72D0(*v0);
}

uint64_t sub_1A2AC73D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2ACFF80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2AC73F8()
{
  sub_1A2ACA5CC();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AC7420()
{
  sub_1A2ACA5CC();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AC7448()
{
  sub_1A2ACA6DC();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AC7470()
{
  sub_1A2ACA6DC();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AC7498()
{
  sub_1A2ACA720();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AC74C0()
{
  sub_1A2ACA720();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AC74E8()
{
  sub_1A2ACA654();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AC7510()
{
  sub_1A2ACA654();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AC7538()
{
  sub_1A2ACA610();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AC7560()
{
  sub_1A2ACA610();
  return sub_1A2AE4108();
}

uint64_t sub_1A2AC7588()
{
  sub_1A2ACA764();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AC75B0()
{
  sub_1A2ACA764();
  return sub_1A2AE4108();
}

void SFAirDrop.NearbySharingInteraction.State.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  _QWORD v13[3];
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FC40);
  v21 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v18 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FC48);
  v22 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v20 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FC50);
  v17 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v16 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
  MEMORY[0x1E0C80A78](v14);
  v15 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FC58);
  v13[1] = *(_QWORD *)(v6 - 8);
  v13[2] = v6;
  MEMORY[0x1E0C80A78](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FC60);
  v13[0] = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FC68);
  v26 = *(_QWORD *)(v11 - 8);
  v27 = v11;
  MEMORY[0x1E0C80A78](v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2ACA5CC();
  sub_1A2AE40E4();
  sub_1A2990388(v25, (uint64_t)v10, type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
  v12 = (char *)sub_1A2AC7870 + 4 * byte_1A2B0E3BE[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A2AC7870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 - 70) = 0;
  sub_1A2ACA764();
  v4 = *(_QWORD *)(v3 - 96);
  sub_1A2AE3DB4();
  sub_1A2ACA7A8();
  sub_1A2AE3E2C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 224) + 8))(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 104) + 8))(v0, v4);
}

uint64_t SFAirDrop.NearbySharingInteraction.State.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  _QWORD v35[4];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;

  v54 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FCB8);
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  MEMORY[0x1E0C80A78](v3);
  v47 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FCC0);
  v45 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v48 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FCC8);
  v7 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  v44 = v7;
  MEMORY[0x1E0C80A78](v6);
  v49 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FCD0);
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v46 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FCD8);
  v38 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v51 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FCE0);
  v50 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)v35 - v18;
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)v35 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v35 - v23;
  v25 = a1[3];
  v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_1A2ACA5CC();
  v53 = v12;
  v26 = v56;
  sub_1A2AE40C0();
  if (!v26)
  {
    v35[1] = v22;
    v35[2] = v16;
    v35[3] = v19;
    v56 = v24;
    v27 = v13;
    v28 = v53;
    v29 = v52;
    v30 = sub_1A2AE3D9C();
    if (*(_QWORD *)(v30 + 16) == 1)
      __asm { BR              X10 }
    v31 = sub_1A2AE3B5C();
    swift_allocError();
    v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE67AC00);
    *v33 = v27;
    sub_1A2AE3CF4();
    sub_1A2AE3B50();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v33, *MEMORY[0x1E0DEC450], v31);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v28, v29);
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v55);
}

uint64_t sub_1A2AC82F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDrop.NearbySharingInteraction.State.init(from:)(a1, a2);
}

void sub_1A2AC8308(_QWORD *a1)
{
  SFAirDrop.NearbySharingInteraction.State.encode(to:)(a1);
}

uint64_t SFAirDrop.NearbySharingInteraction.state.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A2AC8344(type metadata accessor for SFAirDrop.NearbySharingInteraction, (uint64_t)type metadata accessor for SFAirDrop.NearbySharingInteraction.State, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A2990388, a1);
}

uint64_t sub_1A2AC8344@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;

  v8 = a1(0);
  return a3(v4 + *(int *)(v8 + 20), a4, a2);
}

uint64_t SFAirDrop.NearbySharingInteraction.state.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for SFAirDrop.NearbySharingInteraction(0) + 20);
  return sub_1A2ACA888(a1, v3);
}

uint64_t (*SFAirDrop.NearbySharingInteraction.state.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for SFAirDrop.NearbySharingInteraction(0);
  return nullsub_1;
}

uint64_t SFAirDrop.NearbySharingInteraction.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SFAirDrop.NearbySharingInteraction(0) + 24);
  v4 = sub_1A2AE30C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SFAirDrop.NearbySharingInteraction.connectionTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A2AC4F50(type metadata accessor for SFAirDrop.NearbySharingInteraction, (uint64_t)&unk_1EE675128, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A297CDE4, a1);
}

uint64_t SFAirDrop.NearbySharingInteraction.connectionTime.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SFAirDrop.NearbySharingInteraction(0);
  return sub_1A2A9486C(a1, v1 + *(int *)(v3 + 28), &qword_1EE675128);
}

uint64_t (*SFAirDrop.NearbySharingInteraction.connectionTime.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for SFAirDrop.NearbySharingInteraction(0);
  return nullsub_1;
}

uint64_t SFAirDrop.NearbySharingInteraction.isInitiatorRoleExpected.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SFAirDrop.NearbySharingInteraction(0) + 32));
}

uint64_t SFAirDrop.NearbySharingInteraction.isInitiatorRoleExpected.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SFAirDrop.NearbySharingInteraction(0);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*SFAirDrop.NearbySharingInteraction.isInitiatorRoleExpected.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for SFAirDrop.NearbySharingInteraction(0);
  return nullsub_1;
}

uint64_t SFAirDrop.NearbySharingInteraction.isInitiator.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SFAirDrop.NearbySharingInteraction(0) + 36));
}

uint64_t SFAirDrop.NearbySharingInteraction.isInitiator.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SFAirDrop.NearbySharingInteraction(0);
  *(_BYTE *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*SFAirDrop.NearbySharingInteraction.isInitiator.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for SFAirDrop.NearbySharingInteraction(0);
  return nullsub_1;
}

uint64_t SFAirDrop.NearbySharingInteraction.init(state:id:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;

  v21 = a1;
  v20 = sub_1A2AE30C4();
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A2AE3130();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for SFAirDrop.NearbySharingInteraction(0);
  v16 = &a3[v15[7]];
  v17 = sub_1A2AE3BC8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  a3[v15[8]] = 0;
  a3[v15[9]] = 0;
  sub_1A297CDE4(a2, (uint64_t)v10, &qword_1EE6745C8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1A2AE3124();
    sub_1A296F108((uint64_t)v10, &qword_1EE6745C8);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(a3, v14, v11);
  }
  else
  {
    v18 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v18(v14, v10, v11);
    v18(a3, v14, v11);
  }
  sub_1A2AE30B8();
  sub_1A296F108(a2, &qword_1EE6745C8);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&a3[v15[6]], v7, v20);
  return sub_1A297EB48(v21, (uint64_t)&a3[v15[5]], type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
}

uint64_t sub_1A2AC8790()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A2AC87B4 + 4 * byte_1A2B0E3C8[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_1A2AC87B4()
{
  return 0x6574617473;
}

uint64_t sub_1A2AC87C8()
{
  return 0x6E6F697461657263;
}

uint64_t sub_1A2AC87E8()
{
  return 0x697463656E6E6F63;
}

unint64_t sub_1A2AC880C()
{
  return 0xD000000000000017;
}

uint64_t sub_1A2AC8828()
{
  return 0x616974696E497369;
}

uint64_t sub_1A2AC8848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2AD01A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2AC886C()
{
  sub_1A2ACA8CC();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2AC8894()
{
  sub_1A2ACA8CC();
  return sub_1A2AE4108();
}

uint64_t SFAirDrop.NearbySharingInteraction.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FD00);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2ACA8CC();
  sub_1A2AE40E4();
  v8[15] = 0;
  sub_1A2AE3130();
  sub_1A296E8A4(&qword_1EE6766D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  sub_1A2AE3E2C();
  if (!v1)
  {
    type metadata accessor for SFAirDrop.NearbySharingInteraction(0);
    v8[14] = 1;
    type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
    sub_1A296E8A4(&qword_1EE67FD10, type metadata accessor for SFAirDrop.NearbySharingInteraction.State, (uint64_t)&protocol conformance descriptor for SFAirDrop.NearbySharingInteraction.State);
    sub_1A2AE3E2C();
    v8[13] = 2;
    sub_1A2AE30C4();
    sub_1A296E8A4(&qword_1EE67AB88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1A2AE3E2C();
    v8[12] = 3;
    sub_1A2AE3BC8();
    sub_1A296E8A4(&qword_1EE67FD18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0B60], MEMORY[0x1E0DF0B70]);
    sub_1A2AE3DE4();
    v8[11] = 4;
    sub_1A2AE3DFC();
    v8[10] = 5;
    sub_1A2AE3DFC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SFAirDrop.NearbySharingInteraction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;

  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675128);
  MEMORY[0x1E0C80A78](v3);
  v42 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A2AE30C4();
  v43 = *(_QWORD *)(v5 - 8);
  v44 = v5;
  MEMORY[0x1E0C80A78](v5);
  v49 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
  MEMORY[0x1E0C80A78](v48);
  v47 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1A2AE3130();
  v45 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v50 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FD20);
  v46 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SFAirDrop.NearbySharingInteraction(0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 28)];
  v16 = sub_1A2AE3BC8();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v54 = v15;
  v17(v15, 1, 1, v16);
  v41 = *(int *)(v11 + 32);
  v14[v41] = 0;
  v18 = *(int *)(v11 + 36);
  v14[v18] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2ACA8CC();
  v52 = v10;
  v19 = v55;
  sub_1A2AE40C0();
  v20 = (uint64_t)a1;
  if (v19)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    return sub_1A296F108(v54, &qword_1EE675128);
  }
  else
  {
    v21 = v47;
    v36 = v18;
    v37 = v16;
    v22 = v49;
    v38 = v11;
    v39 = v14;
    v55 = v20;
    v61 = 0;
    sub_1A296E8A4(&qword_1EE676788, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    v23 = v50;
    v24 = v51;
    sub_1A2AE3D78();
    v25 = v39;
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v39, v23, v24);
    v60 = 1;
    sub_1A296E8A4(&qword_1EE67FD28, type metadata accessor for SFAirDrop.NearbySharingInteraction.State, (uint64_t)&protocol conformance descriptor for SFAirDrop.NearbySharingInteraction.State);
    v26 = (uint64_t)v21;
    sub_1A2AE3D78();
    v27 = v38;
    sub_1A297EB48(v26, (uint64_t)&v25[*(int *)(v38 + 20)], type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
    v59 = 2;
    sub_1A296E8A4(&qword_1EE67AC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v28 = v44;
    sub_1A2AE3D78();
    v29 = v54;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v25[*(int *)(v27 + 24)], v22, v28);
    v58 = 3;
    sub_1A296E8A4(&qword_1EE67FD30, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0B60], MEMORY[0x1E0DF0B88]);
    v30 = (uint64_t)v42;
    sub_1A2AE3D30();
    sub_1A2A9486C(v30, v29, &qword_1EE675128);
    v57 = 4;
    v31 = sub_1A2AE3D48();
    v32 = (uint64_t)v39;
    v39[v41] = v31 & 1;
    v56 = 5;
    v33 = sub_1A2AE3D48();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v52, v53);
    *(_BYTE *)(v32 + v36) = v33 & 1;
    sub_1A2990388(v32, v40, type metadata accessor for SFAirDrop.NearbySharingInteraction);
    __swift_destroy_boxed_opaque_existential_0Tm(v55);
    return sub_1A297DA3C(v32, type metadata accessor for SFAirDrop.NearbySharingInteraction);
  }
}

uint64_t sub_1A2AC9108@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDrop.NearbySharingInteraction.init(from:)(a1, a2);
}

uint64_t sub_1A2AC911C(_QWORD *a1)
{
  return SFAirDrop.NearbySharingInteraction.encode(to:)(a1);
}

uint64_t SFAirDrop.NearbySharingInteraction.State.connectionContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A2990388(v2, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1A297EB48((uint64_t)v6, a1, type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext);
    v8 = type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 0, 1, v8);
  }
  else
  {
    v10 = type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
    return sub_1A297DA3C((uint64_t)v6, type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
  }
}

BOOL SFAirDrop.NearbySharingInteraction.State.isConnected.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _BOOL8 v9;
  uint64_t v11;

  v1 = v0;
  v2 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FD38);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A2990388(v1, (uint64_t)v4, type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1A297EB48((uint64_t)v4, (uint64_t)v7, type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext);
    v8 = type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 0, 1, v8);
  }
  else
  {
    v8 = type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
    sub_1A297DA3C((uint64_t)v4, type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
  }
  type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
  v9 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8) != 1;
  sub_1A296F108((uint64_t)v7, &qword_1EE67FD38);
  return v9;
}

BOOL sub_1A2AC93B4(uint64_t a1, uint64_t a2)
{
  char v2;

  _s7Sharing9SFAirDropO06NearbyA11InteractionV5StateO1loiySbAG_AGtFZ_0(a2, a1);
  return (v2 & 1) == 0;
}

BOOL sub_1A2AC93DC(uint64_t a1, uint64_t a2)
{
  char v2;

  _s7Sharing9SFAirDropO06NearbyA11InteractionV5StateO1loiySbAG_AGtFZ_0(a1, a2);
  return (v2 & 1) == 0;
}

void sub_1A2AC93F8(uint64_t a1, uint64_t a2)
{
  _s7Sharing9SFAirDropO06NearbyA11InteractionV5StateO1loiySbAG_AGtFZ_0(a2, a1);
}

void SFAirDrop.NearbySharingInteraction.State.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
  MEMORY[0x1E0C80A78](v2);
  sub_1A2990388(v0, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)sub_1A2AC94E8 + 4 * byte_1A2B0E3CE[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A2AC94E8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 - 64) = 0;
  *(_QWORD *)(v0 - 56) = 0xE000000000000000;
  sub_1A2AE3B20();
  v1 = *(_QWORD *)(v0 - 56);
  *(_QWORD *)(v0 - 64) = *(_QWORD *)(v0 - 64);
  *(_QWORD *)(v0 - 56) = v1;
  sub_1A2AE34F0();
  sub_1A2AE3BF8();
  sub_1A2AE34F0();
  return *(_QWORD *)(v0 - 64);
}

uint64_t SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A2AC965C + 4 * byte_1A2B0E3D3[*v0]))(0x6E776F6E6B6E752ELL, 0xE800000000000000);
}

uint64_t sub_1A2AC965C()
{
  return 0x636972656E65672ELL;
}

uint64_t sub_1A2AC9670()
{
  return 0x706F72447269612ELL;
}

uint64_t sub_1A2AC9684()
{
  return 0x7465656D2ELL;
}

uint64_t sub_1A2AC9698()
{
  return 0x65726168732ELL;
}

uint64_t sub_1A2AC96AC()
{
  return 0x796150726565702ELL;
}

uint64_t sub_1A2AC96CC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A2AC96FC + 4 * byte_1A2B0E3D9[*v0]))(0x6E776F6E6B6E752ELL, 0xE800000000000000);
}

uint64_t sub_1A2AC96FC()
{
  return 0x636972656E65672ELL;
}

uint64_t sub_1A2AC9710()
{
  return 0x706F72447269612ELL;
}

uint64_t sub_1A2AC9724()
{
  return 0x7465656D2ELL;
}

uint64_t sub_1A2AC9738()
{
  return 0x65726168732ELL;
}

uint64_t sub_1A2AC974C()
{
  return 0x796150726565702ELL;
}

void _s7Sharing9SFAirDropO06NearbyA11InteractionV5StateO1loiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  _QWORD v16[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v16[0] = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v16[1] = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
  MEMORY[0x1E0C80A78](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FE88);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v16 + *(int *)(v12 + 48) - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A2990388(a1, (uint64_t)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
  sub_1A2990388(a2, (uint64_t)v14, type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
  v15 = (char *)sub_1A2AC990C + 4 * byte_1A2B0E3DF[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A2AC990C()
{
  uint64_t v0;
  uint64_t v1;
  int EnumCaseMultiPayload;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) < 3)
    goto LABEL_4;
  if (EnumCaseMultiPayload)
  {
    sub_1A297DA3C(v1, type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
LABEL_4:
    sub_1A297DA3C(v0, type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
    return 1;
  }
  sub_1A296F108(v0, &qword_1EE67FE88);
  return 0;
}

void _s7Sharing9SFAirDropO06NearbyA11InteractionV5StateO2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v4 = type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
  MEMORY[0x1E0C80A78](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FE88);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v12 + *(int *)(v8 + 48) - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A2990388(a1, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
  sub_1A2990388(a2, (uint64_t)v10, type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
  v11 = (char *)sub_1A2AC9C88 + 4 * byte_1A2B0E3E4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A2AC9C88()
{
  uint64_t v0;
  char v1;

  if (swift_getEnumCaseMultiPayload())
  {
    sub_1A296F108(v0, &qword_1EE67FE88);
    v1 = 0;
  }
  else
  {
    sub_1A297DA3C(v0, type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
    v1 = 1;
  }
  return v1 & 1;
}

void _s7Sharing9SFAirDropO06NearbyA11InteractionV17ConnectionContextV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];

  v4 = sub_1A2AE3130();
  MEMORY[0x1E0C80A78](v4);
  v10[1] = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67FE90);
  MEMORY[0x1E0C80A78](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v9 = MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v10[2] = a1;
  v10[3] = a2;
  __asm { BR              X11 }
}

uint64_t sub_1A2AC9F24@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A2AC9FA8 + 4 * byte_1A2B0E3EF[a1]))(0x636972656E6567);
}

uint64_t sub_1A2AC9FA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  int *v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  char v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  int v44;
  int v45;
  _BOOL4 v47;

  if (a1 == 0x636972656E6567 && v1 == v3)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = 0;
    if ((v11 & 1) == 0)
      return v12 & 1;
  }
  v13 = (int *)type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
  sub_1A297CDE4(*(_QWORD *)(v10 - 96) + v13[5], v7, &qword_1EE6745C8);
  sub_1A297CDE4(*(_QWORD *)(v10 - 88) + v13[5], v8, &qword_1EE6745C8);
  v14 = v4 + *(int *)(v9 + 48);
  sub_1A297CDE4(v7, v4, &qword_1EE6745C8);
  sub_1A297CDE4(v8, v14, &qword_1EE6745C8);
  v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v15(v4, 1, v2) == 1)
  {
    sub_1A296F108(v8, &qword_1EE6745C8);
    sub_1A296F108(v7, &qword_1EE6745C8);
    if (v15(v14, 1, v2) == 1)
    {
      sub_1A296F108(v4, &qword_1EE6745C8);
      goto LABEL_12;
    }
LABEL_10:
    sub_1A296F108(v4, &qword_1EE67FE90);
    goto LABEL_42;
  }
  sub_1A297CDE4(v4, v6, &qword_1EE6745C8);
  if (v15(v14, 1, v2) == 1)
  {
    sub_1A296F108(v8, &qword_1EE6745C8);
    sub_1A296F108(v7, &qword_1EE6745C8);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v2);
    goto LABEL_10;
  }
  v16 = *(_QWORD *)(v10 - 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v16, v14, v2);
  sub_1A296E8A4(&qword_1EE675F50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
  v17 = sub_1A2AE33DC();
  v18 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v18(v16, v2);
  sub_1A296F108(v8, &qword_1EE6745C8);
  sub_1A296F108(v7, &qword_1EE6745C8);
  v18(v6, v2);
  sub_1A296F108(v4, &qword_1EE6745C8);
  if ((v17 & 1) == 0)
    goto LABEL_42;
LABEL_12:
  v19 = v13[6];
  v20 = (_QWORD *)(*(_QWORD *)(v10 - 96) + v19);
  v21 = v20[1];
  v22 = (_QWORD *)(*(_QWORD *)(v10 - 88) + v19);
  v23 = v22[1];
  if (!v21)
  {
    if (v23)
      goto LABEL_42;
LABEL_19:
    v25 = v13[7];
    v26 = (_QWORD *)(*(_QWORD *)(v10 - 96) + v25);
    v27 = v26[1];
    v28 = (_QWORD *)(*(_QWORD *)(v10 - 88) + v25);
    v29 = v28[1];
    if (v27)
    {
      if (!v29)
        goto LABEL_42;
      if (*v26 != *v28 || v27 != v29)
      {
        v30 = sub_1A2AE3EE0();
        v12 = 0;
        if ((v30 & 1) == 0)
          return v12 & 1;
      }
    }
    else if (v29)
    {
      goto LABEL_42;
    }
    v31 = v13[8];
    v32 = (_QWORD *)(*(_QWORD *)(v10 - 96) + v31);
    v33 = v32[1];
    v34 = (_QWORD *)(*(_QWORD *)(v10 - 88) + v31);
    v35 = v34[1];
    if (v33)
    {
      if (!v35)
        goto LABEL_42;
      if (*v32 != *v34 || v33 != v35)
      {
        v36 = sub_1A2AE3EE0();
        v12 = 0;
        if ((v36 & 1) == 0)
          return v12 & 1;
      }
    }
    else if (v35)
    {
      goto LABEL_42;
    }
    v37 = v13[9];
    v38 = (_QWORD *)(*(_QWORD *)(v10 - 96) + v37);
    v39 = v38[1];
    v40 = (_QWORD *)(*(_QWORD *)(v10 - 88) + v37);
    v41 = v40[1];
    if (v39)
    {
      if (v41)
      {
        if (*v38 != *v40 || v39 != v41)
        {
          v42 = sub_1A2AE3EE0();
          v12 = 0;
          if ((v42 & 1) == 0)
            return v12 & 1;
        }
LABEL_40:
        v43 = v13[10];
        v44 = *(unsigned __int8 *)(*(_QWORD *)(v10 - 96) + v43);
        v45 = *(unsigned __int8 *)(*(_QWORD *)(v10 - 88) + v43);
        if (v44 == 2)
        {
          if (v45 != 2)
            goto LABEL_42;
        }
        else
        {
          v12 = 0;
          v47 = (v44 & 1) == 0;
          if (v45 == 2 || ((v47 ^ v45) & 1) == 0)
            return v12 & 1;
        }
        v12 = _s7Sharing9SFAirDropO17PermissionRequestV18InterventionActionV2eeoiySbAGy_x_G_AItFZ_0();
        return v12 & 1;
      }
    }
    else if (!v41)
    {
      goto LABEL_40;
    }
LABEL_42:
    v12 = 0;
    return v12 & 1;
  }
  if (!v23)
    goto LABEL_42;
  if (*v20 == *v22 && v21 == v23)
    goto LABEL_19;
  v24 = sub_1A2AE3EE0();
  v12 = 0;
  if ((v24 & 1) != 0)
    goto LABEL_19;
  return v12 & 1;
}

unint64_t sub_1A2ACA420()
{
  unint64_t result;

  result = qword_1EE67FBD8;
  if (!qword_1EE67FBD8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0FABC, &_s24NearbySharingInteractionV17ConnectionContextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FBD8);
  }
  return result;
}

unint64_t sub_1A2ACA464()
{
  unint64_t result;

  result = qword_1EE67FBE0;
  if (!qword_1EE67FBE0)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType, &type metadata for SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType);
    atomic_store(result, (unint64_t *)&qword_1EE67FBE0);
  }
  return result;
}

unint64_t sub_1A2ACA4A8()
{
  unint64_t result;

  result = qword_1EE67FBF0;
  if (!qword_1EE67FBF0)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType, &type metadata for SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType);
    atomic_store(result, (unint64_t *)&qword_1EE67FBF0);
  }
  return result;
}

unint64_t sub_1A2ACA4EC()
{
  unint64_t result;

  result = qword_1EE67FC10;
  if (!qword_1EE67FC10)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0FA6C, &_s24NearbySharingInteractionV11FailureTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FC10);
  }
  return result;
}

unint64_t sub_1A2ACA530()
{
  unint64_t result;

  result = qword_1EE67FC18;
  if (!qword_1EE67FC18)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0FA1C, &_s24NearbySharingInteractionV11FailureTypeO21UnsupportedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FC18);
  }
  return result;
}

unint64_t sub_1A2ACA574()
{
  unint64_t result;

  result = qword_1EE67FC20;
  if (!qword_1EE67FC20)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F9CC, &_s24NearbySharingInteractionV11FailureTypeO18PullAwayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FC20);
  }
  return result;
}

uint64_t type metadata accessor for SFAirDrop.NearbySharingInteraction.State(uint64_t a1)
{
  return sub_1A29903E0(a1, (uint64_t *)&unk_1EE674E68);
}

unint64_t sub_1A2ACA5CC()
{
  unint64_t result;

  result = qword_1EE67FC70;
  if (!qword_1EE67FC70)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F97C, &_s24NearbySharingInteractionV5StateO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FC70);
  }
  return result;
}

unint64_t sub_1A2ACA610()
{
  unint64_t result;

  result = qword_1EE67FC78;
  if (!qword_1EE67FC78)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F92C, &_s24NearbySharingInteractionV5StateO15EndedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FC78);
  }
  return result;
}

unint64_t sub_1A2ACA654()
{
  unint64_t result;

  result = qword_1EE67FC80;
  if (!qword_1EE67FC80)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F8DC, &_s24NearbySharingInteractionV5StateO31ConnectionInterruptedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FC80);
  }
  return result;
}

unint64_t sub_1A2ACA698()
{
  unint64_t result;

  result = qword_1EE67FC88;
  if (!qword_1EE67FC88)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDrop.NearbySharingInteraction.FailureType, &type metadata for SFAirDrop.NearbySharingInteraction.FailureType);
    atomic_store(result, (unint64_t *)&qword_1EE67FC88);
  }
  return result;
}

unint64_t sub_1A2ACA6DC()
{
  unint64_t result;

  result = qword_1EE67FC90;
  if (!qword_1EE67FC90)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F88C, &_s24NearbySharingInteractionV5StateO19ConnectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FC90);
  }
  return result;
}

unint64_t sub_1A2ACA720()
{
  unint64_t result;

  result = qword_1EE67FCA0;
  if (!qword_1EE67FCA0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F83C, &_s24NearbySharingInteractionV5StateO20ConnectingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FCA0);
  }
  return result;
}

unint64_t sub_1A2ACA764()
{
  unint64_t result;

  result = qword_1EE67FCA8;
  if (!qword_1EE67FCA8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F7EC, &_s24NearbySharingInteractionV5StateO26PresenceDetectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FCA8);
  }
  return result;
}

unint64_t sub_1A2ACA7A8()
{
  unint64_t result;

  result = qword_1EE67FCB0;
  if (!qword_1EE67FCB0)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDrop.NearbySharingInteraction.PresenceContext, &type metadata for SFAirDrop.NearbySharingInteraction.PresenceContext);
    atomic_store(result, (unint64_t *)&qword_1EE67FCB0);
  }
  return result;
}

unint64_t sub_1A2ACA7EC()
{
  unint64_t result;

  result = qword_1EE67FCE8;
  if (!qword_1EE67FCE8)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDrop.NearbySharingInteraction.FailureType, &type metadata for SFAirDrop.NearbySharingInteraction.FailureType);
    atomic_store(result, (unint64_t *)&qword_1EE67FCE8);
  }
  return result;
}

unint64_t sub_1A2ACA830()
{
  unint64_t result;

  result = qword_1EE67FCF8;
  if (!qword_1EE67FCF8)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDrop.NearbySharingInteraction.PresenceContext, &type metadata for SFAirDrop.NearbySharingInteraction.PresenceContext);
    atomic_store(result, (unint64_t *)&qword_1EE67FCF8);
  }
  return result;
}

uint64_t type metadata accessor for SFAirDrop.NearbySharingInteraction(uint64_t a1)
{
  return sub_1A29903E0(a1, (uint64_t *)&unk_1EE674E78);
}

uint64_t sub_1A2ACA888(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A2ACA8CC()
{
  unint64_t result;

  result = qword_1EE67FD08;
  if (!qword_1EE67FD08)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F79C, &_s24NearbySharingInteractionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FD08);
  }
  return result;
}

unint64_t sub_1A2ACA914()
{
  unint64_t result;

  result = qword_1EE67FD40;
  if (!qword_1EE67FD40)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDrop.NearbySharingDiscovery.PollingType, &type metadata for SFAirDrop.NearbySharingDiscovery.PollingType);
    atomic_store(result, (unint64_t *)&qword_1EE67FD40);
  }
  return result;
}

unint64_t sub_1A2ACA95C()
{
  unint64_t result;

  result = qword_1EE67FD48;
  if (!qword_1EE67FD48)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType, &type metadata for SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType);
    atomic_store(result, (unint64_t *)&qword_1EE67FD48);
  }
  return result;
}

uint64_t sub_1A2ACA9A0()
{
  return sub_1A296E8A4(&qword_1EE67FD50, type metadata accessor for SFAirDrop.NearbySharingInteraction.State, (uint64_t)&protocol conformance descriptor for SFAirDrop.NearbySharingInteraction.State);
}

ValueMetadata *type metadata accessor for SFAirDrop.NearbySharingDiscovery()
{
  return &type metadata for SFAirDrop.NearbySharingDiscovery;
}

ValueMetadata *type metadata accessor for SFAirDrop.NearbySharingDiscovery.PollingType()
{
  return &type metadata for SFAirDrop.NearbySharingDiscovery.PollingType;
}

_QWORD *_s22NearbySharingDiscoveryO7RequestVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A2AE3130();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s22NearbySharingDiscoveryO7RequestVwxx(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t _s22NearbySharingDiscoveryO7RequestVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s22NearbySharingDiscoveryO7RequestVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s22NearbySharingDiscoveryO7RequestVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t _s22NearbySharingDiscoveryO7RequestVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s22NearbySharingDiscoveryO7RequestVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2ACACB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1A2AE3130();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t _s22NearbySharingDiscoveryO7RequestVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2ACAD3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1A2AE3130();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1A2ACADB8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A2AE3130();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *_s22NearbySharingAssertionVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A2AE3130();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v9 = a3[6];
    v10 = a3[7];
    v11 = (uint64_t *)((char *)a1 + v9);
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = (uint64_t *)((char *)a1 + v10);
    v15 = (uint64_t *)((char *)a2 + v10);
    v16 = type metadata accessor for SFClientIdentity();
    swift_bridgeObjectRetain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v8(v14, v15, v7);
      v20 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE675F48);
      *(_DWORD *)((char *)v14 + v20[12]) = *(_DWORD *)((char *)v15 + v20[12]);
      v21 = v20[16];
      v22 = (uint64_t *)((char *)v14 + v21);
      v23 = (uint64_t *)((char *)v15 + v21);
      v25 = *v23;
      v24 = v23[1];
      *v22 = v25;
      v22[1] = v24;
      v26 = v20[20];
      v27 = (uint64_t *)((char *)v14 + v26);
      v28 = (uint64_t *)((char *)v15 + v26);
      v29 = v28[1];
      *v27 = *v28;
      v27[1] = v29;
      *(_DWORD *)((char *)v14 + v20[24]) = *(_DWORD *)((char *)v15 + v20[24]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v18 = v15[1];
      *v14 = *v15;
      v14[1] = v18;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t _s22NearbySharingAssertionVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t result;

  v4 = sub_1A2AE3130();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 28);
  type metadata accessor for SFClientIdentity();
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result)
  {
    if ((_DWORD)result != 1)
      return result;
    v5(v6, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675F48);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *_s22NearbySharingAssertionVwcp(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  v6 = sub_1A2AE3130();
  v7 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7((_QWORD *)((char *)a1 + a3[5]), (_QWORD *)((char *)a2 + a3[5]), v6);
  v8 = a3[6];
  v9 = a3[7];
  v10 = (_QWORD *)((char *)a1 + v8);
  v11 = (_QWORD *)((char *)a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_QWORD *)((char *)a1 + v9);
  v14 = (_QWORD *)((char *)a2 + v9);
  v15 = type metadata accessor for SFClientIdentity();
  swift_bridgeObjectRetain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v7(v13, v14, v6);
    v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE675F48);
    *(_DWORD *)((char *)v13 + v18[12]) = *(_DWORD *)((char *)v14 + v18[12]);
    v19 = v18[16];
    v20 = (_QWORD *)((char *)v13 + v19);
    v21 = (_QWORD *)((char *)v14 + v19);
    v23 = *v21;
    v22 = v21[1];
    *v20 = v23;
    v20[1] = v22;
    v24 = v18[20];
    v25 = (_QWORD *)((char *)v13 + v24);
    v26 = (_QWORD *)((char *)v14 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    *(_DWORD *)((char *)v13 + v18[24]) = *(_DWORD *)((char *)v14 + v18[24]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v17 = v14[1];
    *v13 = *v14;
    v13[1] = v17;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s22NearbySharingAssertionVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  int *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;

  v6 = sub_1A2AE3130();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v8(a1 + a3[5], a2 + a3[5], v6);
  v9 = a3[6];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v12 = a3[7];
    v13 = (_QWORD *)(a1 + v12);
    v14 = (_QWORD *)(a2 + v12);
    sub_1A297DA3C(a1 + v12, (uint64_t (*)(_QWORD))type metadata accessor for SFClientIdentity);
    v15 = type metadata accessor for SFClientIdentity();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v13, v14, v6);
      v17 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE675F48);
      *(_DWORD *)((char *)v13 + v17[12]) = *(_DWORD *)((char *)v14 + v17[12]);
      v18 = v17[16];
      v19 = (_QWORD *)((char *)v13 + v18);
      v20 = (_QWORD *)((char *)v14 + v18);
      *v19 = *v20;
      v19[1] = v20[1];
      v21 = v17[20];
      v22 = (_QWORD *)((char *)v13 + v21);
      v23 = (_QWORD *)((char *)v14 + v21);
      *v22 = *v23;
      v22[1] = v23[1];
      *(_DWORD *)((char *)v13 + v17[24]) = *(_DWORD *)((char *)v14 + v17[24]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      *v13 = *v14;
      v13[1] = v14[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t _s22NearbySharingAssertionVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;

  v6 = sub_1A2AE3130();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for SFClientIdentity();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE675F48);
    *(_DWORD *)&v9[v12[12]] = *(_DWORD *)&v10[v12[12]];
    *(_OWORD *)&v9[v12[16]] = *(_OWORD *)&v10[v12[16]];
    *(_OWORD *)&v9[v12[20]] = *(_OWORD *)&v10[v12[20]];
    *(_DWORD *)&v9[v12[24]] = *(_DWORD *)&v10[v12[24]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  return a1;
}

uint64_t _s22NearbySharingAssertionVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;

  v6 = sub_1A2AE3130();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v8(a1 + a3[5], a2 + a3[5], v6);
  v9 = a3[6];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v13 = *v11;
  v12 = v11[1];
  *v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v14 = a3[7];
    v15 = (char *)(a1 + v14);
    v16 = (char *)(a2 + v14);
    sub_1A297DA3C(a1 + v14, (uint64_t (*)(_QWORD))type metadata accessor for SFClientIdentity);
    v17 = type metadata accessor for SFClientIdentity();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
      v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE675F48);
      *(_DWORD *)&v15[v18[12]] = *(_DWORD *)&v16[v18[12]];
      *(_OWORD *)&v15[v18[16]] = *(_OWORD *)&v16[v18[16]];
      *(_OWORD *)&v15[v18[20]] = *(_OWORD *)&v16[v18[20]];
      *(_DWORD *)&v15[v18[24]] = *(_DWORD *)&v16[v18[24]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
  }
  return a1;
}

uint64_t _s22NearbySharingAssertionVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2ACB640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1A2AE3130();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for SFClientIdentity();
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t _s22NearbySharingAssertionVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2ACB6F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1A2AE3130();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    v10 = type metadata accessor for SFClientIdentity();
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1A2ACB7A0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1A2AE3130();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for SFClientIdentity();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *_s29NearbySharingAssertionRequestVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A2AE3130();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s29NearbySharingAssertionRequestVwxx(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t _s29NearbySharingAssertionRequestVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s29NearbySharingAssertionRequestVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s29NearbySharingAssertionRequestVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s29NearbySharingAssertionRequestVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1A2AE3130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s29NearbySharingAssertionRequestVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2ACBAC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1A2AE3130();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t _s29NearbySharingAssertionRequestVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2ACBB50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1A2AE3130();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1A2ACBBCC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A2AE3130();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *_s24NearbySharingInteractionVwCP(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v51)(_BYTE *, _BYTE *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A2AE3130();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[5];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v51 = v9;
      *v11 = *v12;
      v14 = (int *)type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
      v15 = v14[5];
      v16 = &v11[v15];
      v17 = &v12[v15];
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(&v12[v15], 1, v7))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        v51(v16, v17, v7);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v16, 0, 1, v7);
      }
      v20 = v14[6];
      v21 = &v11[v20];
      v22 = &v12[v20];
      v23 = v22[1];
      *v21 = *v22;
      v21[1] = v23;
      v24 = v14[7];
      v25 = &v11[v24];
      v26 = &v12[v24];
      v27 = v26[1];
      *v25 = *v26;
      v25[1] = v27;
      v28 = v14[8];
      v29 = &v11[v28];
      v30 = &v12[v28];
      v31 = v30[1];
      *v29 = *v30;
      v29[1] = v31;
      v32 = v14[9];
      v33 = &v11[v32];
      v34 = &v12[v32];
      v35 = v34[1];
      *v33 = *v34;
      v33[1] = v35;
      v11[v14[10]] = v12[v14[10]];
      v36 = v14[11];
      v37 = &v11[v36];
      v38 = &v12[v36];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v51(v37, v38, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    v39 = a3[6];
    v40 = (char *)a1 + v39;
    v41 = (char *)a2 + v39;
    v42 = sub_1A2AE30C4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
    v43 = a3[7];
    v44 = (char *)a1 + v43;
    v45 = (char *)a2 + v43;
    v46 = sub_1A2AE3BC8();
    v47 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675128);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    v49 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *((_BYTE *)a1 + v49) = *((_BYTE *)a2 + v49);
  }
  return a1;
}

uint64_t _s24NearbySharingInteractionVwxx(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v4 = sub_1A2AE3130();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = a1 + a2[5];
  type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
    v9 = v7 + *(int *)(v8 + 20);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4))
      v6(v9, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6(v7 + *(int *)(v8 + 44), v4);
  }
  v10 = a1 + a2[6];
  v11 = sub_1A2AE30C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = a1 + a2[7];
  v13 = sub_1A2AE3BC8();
  v14 = *(_QWORD *)(v13 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  return result;
}

_BYTE *_s24NearbySharingInteractionVwcp(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v49)(_BYTE *, _BYTE *, uint64_t);

  v6 = sub_1A2AE3130();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v49 = v8;
    *v10 = *v11;
    v13 = (int *)type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
    v14 = v13[5];
    v15 = &v10[v14];
    v16 = &v11[v14];
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(&v11[v14], 1, v6))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v49(v15, v16, v6);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
    }
    v18 = v13[6];
    v19 = &v10[v18];
    v20 = &v11[v18];
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = v13[7];
    v23 = &v10[v22];
    v24 = &v11[v22];
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = v13[8];
    v27 = &v10[v26];
    v28 = &v11[v26];
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = v13[9];
    v31 = &v10[v30];
    v32 = &v11[v30];
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    v10[v13[10]] = v11[v13[10]];
    v34 = v13[11];
    v35 = &v10[v34];
    v36 = &v11[v34];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v49(v35, v36, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  v37 = a3[6];
  v38 = &a1[v37];
  v39 = &a2[v37];
  v40 = sub_1A2AE30C4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
  v41 = a3[7];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v44 = sub_1A2AE3BC8();
  v45 = *(_QWORD *)(v44 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675128);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v45 + 16))(v42, v43, v44);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  v47 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v47] = a2[v47];
  return a1;
}

uint64_t _s24NearbySharingInteractionVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  void (*v32)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(void *, uint64_t, uint64_t);
  int v43;
  int v44;
  uint64_t v45;
  int *v47;

  v6 = sub_1A2AE3130();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    v8 = a3[5];
    v9 = (_BYTE *)(a1 + v8);
    v10 = (_BYTE *)(a2 + v8);
    sub_1A297DA3C(a1 + v8, type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
    v11 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v47 = a3;
      *v9 = *v10;
      v12 = (int *)type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
      v13 = v12[5];
      v14 = &v9[v13];
      v15 = &v10[v13];
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(&v10[v13], 1, v6))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v14, v15, v6);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
      }
      v17 = v12[6];
      v18 = &v9[v17];
      v19 = &v10[v17];
      *v18 = *v19;
      v18[1] = v19[1];
      v20 = v12[7];
      v21 = &v9[v20];
      v22 = &v10[v20];
      *v21 = *v22;
      v21[1] = v22[1];
      v23 = v12[8];
      v24 = &v9[v23];
      v25 = &v10[v23];
      *v24 = *v25;
      v24[1] = v25[1];
      v26 = v12[9];
      v27 = &v9[v26];
      v28 = &v10[v26];
      *v27 = *v28;
      v27[1] = v28[1];
      v9[v12[10]] = v10[v12[10]];
      v29 = v12[11];
      v30 = &v9[v29];
      v31 = &v10[v29];
      v32 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32(v30, v31, v6);
      swift_storeEnumTagMultiPayload();
      a3 = v47;
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v33 = a3[6];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = sub_1A2AE30C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 24))(v34, v35, v36);
  v37 = a3[7];
  v38 = (void *)(a1 + v37);
  v39 = (void *)(a2 + v37);
  v40 = sub_1A2AE3BC8();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v41 + 48);
  v43 = v42(v38, 1, v40);
  v44 = v42(v39, 1, v40);
  if (!v43)
  {
    if (!v44)
    {
      (*(void (**)(void *, void *, uint64_t))(v41 + 24))(v38, v39, v40);
      goto LABEL_14;
    }
    (*(void (**)(void *, uint64_t))(v41 + 8))(v38, v40);
    goto LABEL_13;
  }
  if (v44)
  {
LABEL_13:
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675128);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v41 + 16))(v38, v39, v40);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
LABEL_14:
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

_BYTE *_s24NearbySharingInteractionVwtk(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  void (*v17)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *__dst;

  v6 = sub_1A2AE3130();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v31 = v8;
    *v10 = *v11;
    v13 = (int *)type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
    v14 = v13[5];
    __dst = &v10[v14];
    v15 = &v11[v14];
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(&v11[v14], 1, v6))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
      memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      v17 = v31;
    }
    else
    {
      v18 = v15;
      v17 = v31;
      v31(__dst, v18, v6);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(__dst, 0, 1, v6);
    }
    *(_OWORD *)&v10[v13[6]] = *(_OWORD *)&v11[v13[6]];
    *(_OWORD *)&v10[v13[7]] = *(_OWORD *)&v11[v13[7]];
    *(_OWORD *)&v10[v13[8]] = *(_OWORD *)&v11[v13[8]];
    *(_OWORD *)&v10[v13[9]] = *(_OWORD *)&v11[v13[9]];
    v10[v13[10]] = v11[v13[10]];
    v17(&v10[v13[11]], &v11[v13[11]], v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  v19 = a3[6];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = sub_1A2AE30C4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[7];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = sub_1A2AE3BC8();
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675128);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v27 + 32))(v24, v25, v26);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  v29 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v29] = a2[v29];
  return a1;
}

uint64_t _s24NearbySharingInteractionVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  void (*v16)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *__dst;

  v6 = sub_1A2AE3130();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    v8 = a3[5];
    v9 = (_BYTE *)(a1 + v8);
    v10 = (_BYTE *)(a2 + v8);
    sub_1A297DA3C(a1 + v8, type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
    v11 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v9 = *v10;
      v12 = (int *)type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
      v13 = v12[5];
      __dst = &v9[v13];
      v14 = &v10[v13];
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(&v10[v13], 1, v6))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
        memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32);
      }
      else
      {
        v17 = v14;
        v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32);
        v16(__dst, v17, v6);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(__dst, 0, 1, v6);
      }
      *(_OWORD *)&v9[v12[6]] = *(_OWORD *)&v10[v12[6]];
      *(_OWORD *)&v9[v12[7]] = *(_OWORD *)&v10[v12[7]];
      *(_OWORD *)&v9[v12[8]] = *(_OWORD *)&v10[v12[8]];
      *(_OWORD *)&v9[v12[9]] = *(_OWORD *)&v10[v12[9]];
      v9[v12[10]] = v10[v12[10]];
      v16(&v9[v12[11]], &v10[v12[11]], v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v18 = a3[6];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_1A2AE30C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  v22 = a3[7];
  v23 = (void *)(a1 + v22);
  v24 = (void *)(a2 + v22);
  v25 = sub_1A2AE3BC8();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 40))(v23, v24, v25);
      goto LABEL_14;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_13;
  }
  if (v29)
  {
LABEL_13:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675128);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v26 + 32))(v23, v24, v25);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_14:
  v31 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v31) = *(_BYTE *)(a2 + v31);
  return a1;
}

uint64_t _s24NearbySharingInteractionVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2ACCBC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v17;

  v6 = sub_1A2AE3130();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_9:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = sub_1A2AE30C4();
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_9;
  }
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675128);
  v12 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v15;
    v13 = a3[7];
    goto LABEL_9;
  }
  v17 = *(unsigned __int8 *)(a1 + a3[8]);
  if (v17 >= 2)
    return ((v17 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t _s24NearbySharingInteractionVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2ACCCD0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v8 = sub_1A2AE3130();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_9:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  v16 = sub_1A2AE30C4();
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = a4[6];
    goto LABEL_9;
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE675128);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[7];
    goto LABEL_9;
  }
  *(_BYTE *)(a1 + a4[8]) = a2 + 1;
  return result;
}

void sub_1A2ACCDC0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1A2AE3130();
  if (v0 <= 0x3F)
  {
    type metadata accessor for SFAirDrop.NearbySharingInteraction.State(319);
    if (v1 <= 0x3F)
    {
      sub_1A2AE30C4();
      if (v2 <= 0x3F)
      {
        sub_1A29A1E18(319, &qword_1EE675130, (void (*)(uint64_t))MEMORY[0x1E0DF0B60]);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

ValueMetadata *type metadata accessor for SFAirDrop.NearbySharingInteraction.PresenceContext()
{
  return &type metadata for SFAirDrop.NearbySharingInteraction.PresenceContext;
}

_QWORD *_s24NearbySharingInteractionV17ConnectionContextVwCP(_BYTE *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char *v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = sub_1A2AE3130();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = a3[6];
    v15 = a3[7];
    v16 = (_QWORD *)((char *)v4 + v14);
    v17 = (_QWORD *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (_QWORD *)((char *)v4 + v15);
    v20 = (_QWORD *)((char *)a2 + v15);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = a3[8];
    v23 = a3[9];
    v24 = (_QWORD *)((char *)v4 + v22);
    v25 = (_QWORD *)((char *)a2 + v22);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = (_QWORD *)((char *)v4 + v23);
    v28 = (_QWORD *)((char *)a2 + v23);
    v29 = *v28;
    v30 = v28[1];
    v31 = a3[10];
    v32 = a3[11];
    v33 = *((_BYTE *)a2 + v31);
    *v27 = v29;
    v27[1] = v30;
    *((_BYTE *)v4 + v31) = v33;
    v34 = (char *)v4 + v32;
    v35 = (char *)a2 + v32;
    v36 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36(v34, v35, v10);
  }
  return v4;
}

uint64_t _s24NearbySharingInteractionV17ConnectionContextVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1A2AE3130();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1 + *(int *)(a2 + 44), v5);
}

_BYTE *_s24NearbySharingInteractionV17ConnectionContextVwcp(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _BYTE *v32;
  _BYTE *v33;
  void (*v34)(_BYTE *, _BYTE *, uint64_t);

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1A2AE3130();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = &a1[v12];
  v15 = &a2[v12];
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = &a1[v13];
  v18 = &a2[v13];
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[8];
  v21 = a3[9];
  v22 = &a1[v20];
  v23 = &a2[v20];
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = &a1[v21];
  v26 = (uint64_t *)&a2[v21];
  v27 = *v26;
  v28 = v26[1];
  v29 = a3[10];
  v30 = a3[11];
  v31 = a2[v29];
  *v25 = v27;
  v25[1] = v28;
  a1[v29] = v31;
  v32 = &a1[v30];
  v33 = &a2[v30];
  v34 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34(v32, v33, v9);
  return a1;
}

_BYTE *_s24NearbySharingInteractionV17ConnectionContextVwca(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1A2AE3130();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = &a1[v21];
  v23 = &a2[v21];
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = a3[9];
  v25 = &a1[v24];
  v26 = &a2[v24];
  *v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[10]] = a2[a3[10]];
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24))(&a1[a3[11]], &a2[a3[11]], v9);
  return a1;
}

_BYTE *_s24NearbySharingInteractionV17ConnectionContextVwtk(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1A2AE3130();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    v12 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32);
  }
  else
  {
    v12 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32);
    v12(v7, v8, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  v14 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  *(_OWORD *)&a1[v14] = *(_OWORD *)&a2[v14];
  v15 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  v12(&a1[v15], &a2[v15], v9);
  return a1;
}

_BYTE *_s24NearbySharingInteractionV17ConnectionContextVwta(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1A2AE3130();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = (uint64_t *)&a2[v15];
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = (uint64_t *)&a2[v20];
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[8];
  v26 = &a1[v25];
  v27 = (uint64_t *)&a2[v25];
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  v30 = a3[9];
  v31 = &a1[v30];
  v32 = (uint64_t *)&a2[v30];
  v34 = *v32;
  v33 = v32[1];
  *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  v35 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 40))(&a1[v35], &a2[v35], v9);
  return a1;
}

uint64_t _s24NearbySharingInteractionV17ConnectionContextVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2ACD6F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 2147483646)
  {
    v8 = sub_1A2AE3130();
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[11];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = *(_QWORD *)(a1 + a3[6] + 8);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  v11 = v10 - 1;
  if (v11 < 0)
    v11 = -1;
  return (v11 + 1);
}

uint64_t _s24NearbySharingInteractionV17ConnectionContextVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2ACD7BC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[5];
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[6] + 8) = a2;
      return result;
    }
    v10 = sub_1A2AE3130();
    v9 = *(_QWORD *)(v10 - 8);
    v11 = a4[11];
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_1A2ACD864()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A29A1E18(319, qword_1EE6745D0, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  if (v0 <= 0x3F)
  {
    sub_1A2AE3130();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType()
{
  return &type metadata for SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType;
}

uint64_t _s24NearbySharingInteractionV11FailureTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1A2ACD984 + 4 * byte_1A2B0E3F5[v4]))();
  }
}

uint64_t _s24NearbySharingInteractionV11FailureTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A2ACDA3C + 4 * byte_1A2B0E3FF[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A2ACDA70 + 4 * byte_1A2B0E3FA[v5]))();
}

uint64_t sub_1A2ACDA70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2ACDA78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2ACDA80);
  return result;
}

uint64_t sub_1A2ACDA8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2ACDA94);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A2ACDA98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2ACDAA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2ACDAAC(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_1A2ACDAC8(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for SFAirDrop.NearbySharingInteraction.FailureType()
{
  return &type metadata for SFAirDrop.NearbySharingInteraction.FailureType;
}

_QWORD *_s24NearbySharingInteractionV5StateOwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = (int *)type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
    v8 = v7[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1A2AE3130();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v15 = v7[6];
    v16 = (_QWORD *)((char *)a1 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = v7[7];
    v20 = (_QWORD *)((char *)a1 + v19);
    v21 = (_QWORD *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = v7[8];
    v24 = (_QWORD *)((char *)a1 + v23);
    v25 = (_QWORD *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = v7[9];
    v28 = (_QWORD *)((char *)a1 + v27);
    v29 = (_QWORD *)((char *)a2 + v27);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    *((_BYTE *)a1 + v7[10]) = *((_BYTE *)a2 + v7[10]);
    v31 = v7[11];
    v32 = (char *)a1 + v31;
    v33 = (char *)a2 + v31;
    v34 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v34(v32, v33, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t _s24NearbySharingInteractionV5StateOwxx(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
    v4 = a1 + *(int *)(v3 + 20);
    v5 = sub_1A2AE3130();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1 + *(int *)(v3 + 44), v5);
  }
  return result;
}

_BYTE *_s24NearbySharingInteractionV5StateOwcp(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  void (*v32)(_BYTE *, _BYTE *, uint64_t);

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v6 = (int *)type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
    v7 = v6[5];
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = sub_1A2AE3130();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v13 = v6[6];
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = v6[7];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = v6[8];
    v22 = &a1[v21];
    v23 = &a2[v21];
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = v6[9];
    v26 = &a1[v25];
    v27 = &a2[v25];
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    a1[v6[10]] = a2[v6[10]];
    v29 = v6[11];
    v30 = &a1[v29];
    v31 = &a2[v29];
    v32 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32(v30, v31, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_BYTE *_s24NearbySharingInteractionV5StateOwca(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  void (*v28)(_BYTE *, _BYTE *, uint64_t);

  if (a1 != a2)
  {
    sub_1A297DA3C((uint64_t)a1, type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v6 = (int *)type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
      v7 = v6[5];
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = sub_1A2AE3130();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      v13 = v6[6];
      v14 = &a1[v13];
      v15 = &a2[v13];
      *v14 = *v15;
      v14[1] = v15[1];
      v16 = v6[7];
      v17 = &a1[v16];
      v18 = &a2[v16];
      *v17 = *v18;
      v17[1] = v18[1];
      v19 = v6[8];
      v20 = &a1[v19];
      v21 = &a2[v19];
      *v20 = *v21;
      v20[1] = v21[1];
      v22 = v6[9];
      v23 = &a1[v22];
      v24 = &a2[v22];
      *v23 = *v24;
      v23[1] = v24[1];
      a1[v6[10]] = a2[v6[10]];
      v25 = v6[11];
      v26 = &a1[v25];
      v27 = &a2[v25];
      v28 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v28(v26, v27, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

_BYTE *_s24NearbySharingInteractionV5StateOwtk(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_BYTE *, _BYTE *, uint64_t);

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v6 = (int *)type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
    v7 = v6[5];
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = sub_1A2AE3130();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      v13 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32);
    }
    else
    {
      v13 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32);
      v13(v8, v9, v10);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *(_OWORD *)&a1[v6[6]] = *(_OWORD *)&a2[v6[6]];
    *(_OWORD *)&a1[v6[7]] = *(_OWORD *)&a2[v6[7]];
    *(_OWORD *)&a1[v6[8]] = *(_OWORD *)&a2[v6[8]];
    *(_OWORD *)&a1[v6[9]] = *(_OWORD *)&a2[v6[9]];
    a1[v6[10]] = a2[v6[10]];
    v13(&a1[v6[11]], &a2[v6[11]], v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_BYTE *_s24NearbySharingInteractionV5StateOwta(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_BYTE *, _BYTE *, uint64_t);

  if (a1 != a2)
  {
    sub_1A297DA3C((uint64_t)a1, type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v6 = (int *)type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
      v7 = v6[5];
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = sub_1A2AE3130();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6745C8);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        v13 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32);
      }
      else
      {
        v13 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32);
        v13(v8, v9, v10);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      *(_OWORD *)&a1[v6[6]] = *(_OWORD *)&a2[v6[6]];
      *(_OWORD *)&a1[v6[7]] = *(_OWORD *)&a2[v6[7]];
      *(_OWORD *)&a1[v6[8]] = *(_OWORD *)&a2[v6[8]];
      *(_OWORD *)&a1[v6[9]] = *(_OWORD *)&a2[v6[9]];
      a1[v6[10]] = a2[v6[10]];
      v13(&a1[v6[11]], &a2[v6[11]], v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1A2ACE44C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t _s24NearbySharingInteractionV17ConnectionContextV15InteractionTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A2ACE514 + 4 * byte_1A2B0E409[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A2ACE548 + 4 * byte_1A2B0E404[v4]))();
}

uint64_t sub_1A2ACE548(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2ACE550(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2ACE558);
  return result;
}

uint64_t sub_1A2ACE564(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2ACE56CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A2ACE570(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2ACE578(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s24NearbySharingInteractionV10CodingKeysOMa()
{
  return &_s24NearbySharingInteractionV10CodingKeysON;
}

uint64_t _s24NearbySharingInteractionV5StateO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A2ACE5E0 + 4 * byte_1A2B0E413[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A2ACE614 + 4 * byte_1A2B0E40E[v4]))();
}

uint64_t sub_1A2ACE614(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2ACE61C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2ACE624);
  return result;
}

uint64_t sub_1A2ACE630(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2ACE638);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A2ACE63C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2ACE644(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s24NearbySharingInteractionV5StateO10CodingKeysOMa()
{
  return &_s24NearbySharingInteractionV5StateO10CodingKeysON;
}

ValueMetadata *_s24NearbySharingInteractionV5StateO26PresenceDetectedCodingKeysOMa()
{
  return &_s24NearbySharingInteractionV5StateO26PresenceDetectedCodingKeysON;
}

ValueMetadata *_s24NearbySharingInteractionV5StateO20ConnectingCodingKeysOMa()
{
  return &_s24NearbySharingInteractionV5StateO20ConnectingCodingKeysON;
}

ValueMetadata *_s24NearbySharingInteractionV5StateO19ConnectedCodingKeysOMa()
{
  return &_s24NearbySharingInteractionV5StateO19ConnectedCodingKeysON;
}

ValueMetadata *_s24NearbySharingInteractionV5StateO31ConnectionInterruptedCodingKeysOMa()
{
  return &_s24NearbySharingInteractionV5StateO31ConnectionInterruptedCodingKeysON;
}

ValueMetadata *_s24NearbySharingInteractionV5StateO15EndedCodingKeysOMa()
{
  return &_s24NearbySharingInteractionV5StateO15EndedCodingKeysON;
}

ValueMetadata *_s24NearbySharingInteractionV11FailureTypeO10CodingKeysOMa()
{
  return &_s24NearbySharingInteractionV11FailureTypeO10CodingKeysON;
}

ValueMetadata *_s24NearbySharingInteractionV11FailureTypeO18PullAwayCodingKeysOMa()
{
  return &_s24NearbySharingInteractionV11FailureTypeO18PullAwayCodingKeysON;
}

uint64_t _s24NearbySharingInteractionV5StateO26PresenceDetectedCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A2ACE718 + 4 * byte_1A2B0E418[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A2ACE738 + 4 * byte_1A2B0E41D[v4]))();
}

_BYTE *sub_1A2ACE718(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A2ACE738(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A2ACE740(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A2ACE748(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A2ACE750(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A2ACE758(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s24NearbySharingInteractionV11FailureTypeO21UnsupportedCodingKeysOMa()
{
  return &_s24NearbySharingInteractionV11FailureTypeO21UnsupportedCodingKeysON;
}

uint64_t _s24NearbySharingInteractionV17ConnectionContextV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1A2ACE7C0 + 4 * byte_1A2B0E427[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1A2ACE7F4 + 4 * byte_1A2B0E422[v4]))();
}

uint64_t sub_1A2ACE7F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2ACE7FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2ACE804);
  return result;
}

uint64_t sub_1A2ACE810(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2ACE818);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1A2ACE81C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2ACE824(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s24NearbySharingInteractionV17ConnectionContextV10CodingKeysOMa()
{
  return &_s24NearbySharingInteractionV17ConnectionContextV10CodingKeysON;
}

ValueMetadata *_s24NearbySharingInteractionV15PresenceContextV10CodingKeysOMa()
{
  return &_s24NearbySharingInteractionV15PresenceContextV10CodingKeysON;
}

uint64_t _s24NearbySharingInteractionV11FailureTypeO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A2ACE89C + 4 * byte_1A2B0E431[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A2ACE8D0 + 4 * byte_1A2B0E42C[v4]))();
}

uint64_t sub_1A2ACE8D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2ACE8D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2ACE8E0);
  return result;
}

uint64_t sub_1A2ACE8EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2ACE8F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A2ACE8F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2ACE900(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s29NearbySharingAssertionRequestV10CodingKeysOMa()
{
  return &_s29NearbySharingAssertionRequestV10CodingKeysON;
}

ValueMetadata *_s22NearbySharingDiscoveryO7RequestV10CodingKeysOMa()
{
  return &_s22NearbySharingDiscoveryO7RequestV10CodingKeysON;
}

uint64_t _s22NearbySharingDiscoveryO11PollingTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A2ACE978 + 4 * byte_1A2B0E43B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A2ACE9AC + 4 * byte_1A2B0E436[v4]))();
}

uint64_t sub_1A2ACE9AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2ACE9B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2ACE9BCLL);
  return result;
}

uint64_t sub_1A2ACE9C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2ACE9D0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A2ACE9D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2ACE9DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s22NearbySharingDiscoveryO11PollingTypeO10CodingKeysOMa()
{
  return &_s22NearbySharingDiscoveryO11PollingTypeO10CodingKeysON;
}

ValueMetadata *_s22NearbySharingDiscoveryO11PollingTypeO19AutomaticCodingKeysOMa()
{
  return &_s22NearbySharingDiscoveryO11PollingTypeO19AutomaticCodingKeysON;
}

ValueMetadata *_s22NearbySharingDiscoveryO11PollingTypeO17PassiveCodingKeysOMa()
{
  return &_s22NearbySharingDiscoveryO11PollingTypeO17PassiveCodingKeysON;
}

ValueMetadata *_s22NearbySharingDiscoveryO11PollingTypeO14FullCodingKeysOMa()
{
  return &_s22NearbySharingDiscoveryO11PollingTypeO14FullCodingKeysON;
}

unint64_t sub_1A2ACEA2C()
{
  unint64_t result;

  result = qword_1EE67FD58;
  if (!qword_1EE67FD58)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0EF04, &_s22NearbySharingDiscoveryO11PollingTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FD58);
  }
  return result;
}

unint64_t sub_1A2ACEA74()
{
  unint64_t result;

  result = qword_1EE67FD60;
  if (!qword_1EE67FD60)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0EFBC, &_s22NearbySharingDiscoveryO7RequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FD60);
  }
  return result;
}

unint64_t sub_1A2ACEABC()
{
  unint64_t result;

  result = qword_1EE67FD68;
  if (!qword_1EE67FD68)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F074, &_s29NearbySharingAssertionRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FD68);
  }
  return result;
}

unint64_t sub_1A2ACEB04()
{
  unint64_t result;

  result = qword_1EE67FD70;
  if (!qword_1EE67FD70)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F17C, &_s24NearbySharingInteractionV17ConnectionContextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FD70);
  }
  return result;
}

unint64_t sub_1A2ACEB4C()
{
  unint64_t result;

  result = qword_1EE67FD78;
  if (!qword_1EE67FD78)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F234, &_s24NearbySharingInteractionV11FailureTypeO21UnsupportedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FD78);
  }
  return result;
}

unint64_t sub_1A2ACEB94()
{
  unint64_t result;

  result = qword_1EE67FD80;
  if (!qword_1EE67FD80)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F33C, &_s24NearbySharingInteractionV11FailureTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FD80);
  }
  return result;
}

unint64_t sub_1A2ACEBDC()
{
  unint64_t result;

  result = qword_1EE67FD88;
  if (!qword_1EE67FD88)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F444, &_s24NearbySharingInteractionV5StateO31ConnectionInterruptedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FD88);
  }
  return result;
}

unint64_t sub_1A2ACEC24()
{
  unint64_t result;

  result = qword_1EE67FD90;
  if (!qword_1EE67FD90)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F4FC, &_s24NearbySharingInteractionV5StateO19ConnectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FD90);
  }
  return result;
}

unint64_t sub_1A2ACEC6C()
{
  unint64_t result;

  result = qword_1EE67FD98;
  if (!qword_1EE67FD98)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F604, &_s24NearbySharingInteractionV5StateO26PresenceDetectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FD98);
  }
  return result;
}

unint64_t sub_1A2ACECB4()
{
  unint64_t result;

  result = qword_1EE67FDA0;
  if (!qword_1EE67FDA0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F6BC, &_s24NearbySharingInteractionV5StateO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FDA0);
  }
  return result;
}

unint64_t sub_1A2ACECFC()
{
  unint64_t result;

  result = qword_1EE67FDA8;
  if (!qword_1EE67FDA8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F774, &_s24NearbySharingInteractionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FDA8);
  }
  return result;
}

unint64_t sub_1A2ACED44()
{
  unint64_t result;

  result = qword_1EE67FDB0;
  if (!qword_1EE67FDB0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F6E4, &_s24NearbySharingInteractionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FDB0);
  }
  return result;
}

unint64_t sub_1A2ACED8C()
{
  unint64_t result;

  result = qword_1EE67FDB8;
  if (!qword_1EE67FDB8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F70C, &_s24NearbySharingInteractionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FDB8);
  }
  return result;
}

unint64_t sub_1A2ACEDD4()
{
  unint64_t result;

  result = qword_1EE67FDC0;
  if (!qword_1EE67FDC0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F574, &_s24NearbySharingInteractionV5StateO26PresenceDetectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FDC0);
  }
  return result;
}

unint64_t sub_1A2ACEE1C()
{
  unint64_t result;

  result = qword_1EE67FDC8;
  if (!qword_1EE67FDC8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F59C, &_s24NearbySharingInteractionV5StateO26PresenceDetectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FDC8);
  }
  return result;
}

unint64_t sub_1A2ACEE64()
{
  unint64_t result;

  result = qword_1EE67FDD0;
  if (!qword_1EE67FDD0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F524, &_s24NearbySharingInteractionV5StateO20ConnectingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FDD0);
  }
  return result;
}

unint64_t sub_1A2ACEEAC()
{
  unint64_t result;

  result = qword_1EE67FDD8;
  if (!qword_1EE67FDD8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F54C, &_s24NearbySharingInteractionV5StateO20ConnectingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FDD8);
  }
  return result;
}

unint64_t sub_1A2ACEEF4()
{
  unint64_t result;

  result = qword_1EE67FDE0;
  if (!qword_1EE67FDE0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F46C, &_s24NearbySharingInteractionV5StateO19ConnectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FDE0);
  }
  return result;
}

unint64_t sub_1A2ACEF3C()
{
  unint64_t result;

  result = qword_1EE67FDE8;
  if (!qword_1EE67FDE8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F494, &_s24NearbySharingInteractionV5StateO19ConnectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FDE8);
  }
  return result;
}

unint64_t sub_1A2ACEF84()
{
  unint64_t result;

  result = qword_1EE67FDF0;
  if (!qword_1EE67FDF0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F3B4, &_s24NearbySharingInteractionV5StateO31ConnectionInterruptedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FDF0);
  }
  return result;
}

unint64_t sub_1A2ACEFCC()
{
  unint64_t result;

  result = qword_1EE67FDF8;
  if (!qword_1EE67FDF8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F3DC, &_s24NearbySharingInteractionV5StateO31ConnectionInterruptedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FDF8);
  }
  return result;
}

unint64_t sub_1A2ACF014()
{
  unint64_t result;

  result = qword_1EE67FE00;
  if (!qword_1EE67FE00)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F364, &_s24NearbySharingInteractionV5StateO15EndedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FE00);
  }
  return result;
}

unint64_t sub_1A2ACF05C()
{
  unint64_t result;

  result = qword_1EE67FE08;
  if (!qword_1EE67FE08)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F38C, &_s24NearbySharingInteractionV5StateO15EndedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FE08);
  }
  return result;
}

unint64_t sub_1A2ACF0A4()
{
  unint64_t result;

  result = qword_1EE67FE10;
  if (!qword_1EE67FE10)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F62C, &_s24NearbySharingInteractionV5StateO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FE10);
  }
  return result;
}

unint64_t sub_1A2ACF0EC()
{
  unint64_t result;

  result = qword_1EE67FE18;
  if (!qword_1EE67FE18)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F654, &_s24NearbySharingInteractionV5StateO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FE18);
  }
  return result;
}

unint64_t sub_1A2ACF134()
{
  unint64_t result;

  result = qword_1EE67FE20;
  if (!qword_1EE67FE20)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F25C, &_s24NearbySharingInteractionV11FailureTypeO18PullAwayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FE20);
  }
  return result;
}

unint64_t sub_1A2ACF17C()
{
  unint64_t result;

  result = qword_1EE67FE28;
  if (!qword_1EE67FE28)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F284, &_s24NearbySharingInteractionV11FailureTypeO18PullAwayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FE28);
  }
  return result;
}

unint64_t sub_1A2ACF1C4()
{
  unint64_t result;

  result = qword_1EE67FE30;
  if (!qword_1EE67FE30)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F1A4, &_s24NearbySharingInteractionV11FailureTypeO21UnsupportedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FE30);
  }
  return result;
}

unint64_t sub_1A2ACF20C()
{
  unint64_t result;

  result = qword_1EE67FE38;
  if (!qword_1EE67FE38)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F1CC, &_s24NearbySharingInteractionV11FailureTypeO21UnsupportedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FE38);
  }
  return result;
}

unint64_t sub_1A2ACF254()
{
  unint64_t result;

  result = qword_1EE67FE40;
  if (!qword_1EE67FE40)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F2AC, &_s24NearbySharingInteractionV11FailureTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FE40);
  }
  return result;
}

unint64_t sub_1A2ACF29C()
{
  unint64_t result;

  result = qword_1EE67FE48;
  if (!qword_1EE67FE48)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F2D4, &_s24NearbySharingInteractionV11FailureTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FE48);
  }
  return result;
}

unint64_t sub_1A2ACF2E4()
{
  unint64_t result;

  result = qword_1EE67FE50;
  if (!qword_1EE67FE50)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F0EC, &_s24NearbySharingInteractionV17ConnectionContextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FE50);
  }
  return result;
}

unint64_t sub_1A2ACF32C()
{
  unint64_t result;

  result = qword_1EE67FE58;
  if (!qword_1EE67FE58)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F114, &_s24NearbySharingInteractionV17ConnectionContextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FE58);
  }
  return result;
}

unint64_t sub_1A2ACF374()
{
  unint64_t result;

  result = qword_1EE67FE60;
  if (!qword_1EE67FE60)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F09C, &_s24NearbySharingInteractionV15PresenceContextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FE60);
  }
  return result;
}

unint64_t sub_1A2ACF3BC()
{
  unint64_t result;

  result = qword_1EE67FE68;
  if (!qword_1EE67FE68)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F0C4, &_s24NearbySharingInteractionV15PresenceContextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FE68);
  }
  return result;
}

unint64_t sub_1A2ACF404()
{
  unint64_t result;

  result = qword_1EE67FE70;
  if (!qword_1EE67FE70)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0EFE4, &_s29NearbySharingAssertionRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FE70);
  }
  return result;
}

unint64_t sub_1A2ACF44C()
{
  unint64_t result;

  result = qword_1EE67FE78;
  if (!qword_1EE67FE78)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0F00C, &_s29NearbySharingAssertionRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE67FE78);
  }
  return result;
}

unint64_t sub_1A2ACF494()
{
  unint64_t result;

  result = qword_1EE674F08;
  if (!qword_1EE674F08)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0EF2C, &_s22NearbySharingDiscoveryO7RequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE674F08);
  }
  return result;
}

unint64_t sub_1A2ACF4DC()
{
  unint64_t result;

  result = qword_1EE674F00;
  if (!qword_1EE674F00)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0EF54, &_s22NearbySharingDiscoveryO7RequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE674F00);
  }
  return result;
}

unint64_t sub_1A2ACF524()
{
  unint64_t result;

  result = qword_1EE674EE0;
  if (!qword_1EE674EE0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0EE24, &_s22NearbySharingDiscoveryO11PollingTypeO19AutomaticCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE674EE0);
  }
  return result;
}

unint64_t sub_1A2ACF56C()
{
  unint64_t result;

  result = qword_1EE674ED8;
  if (!qword_1EE674ED8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0EE4C, &_s22NearbySharingDiscoveryO11PollingTypeO19AutomaticCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE674ED8);
  }
  return result;
}

unint64_t sub_1A2ACF5B4()
{
  unint64_t result;

  result = qword_1EE674EC8;
  if (!qword_1EE674EC8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0EDD4, &_s22NearbySharingDiscoveryO11PollingTypeO17PassiveCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE674EC8);
  }
  return result;
}

unint64_t sub_1A2ACF5FC()
{
  unint64_t result;

  result = qword_1EE674EC0;
  if (!qword_1EE674EC0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0EDFC, &_s22NearbySharingDiscoveryO11PollingTypeO17PassiveCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE674EC0);
  }
  return result;
}

unint64_t sub_1A2ACF644()
{
  unint64_t result;

  result = qword_1EE674EB8;
  if (!qword_1EE674EB8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0ED84, &_s22NearbySharingDiscoveryO11PollingTypeO14FullCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE674EB8);
  }
  return result;
}

unint64_t sub_1A2ACF68C()
{
  unint64_t result;

  result = qword_1EE674EB0;
  if (!qword_1EE674EB0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0EDAC, &_s22NearbySharingDiscoveryO11PollingTypeO14FullCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE674EB0);
  }
  return result;
}

unint64_t sub_1A2ACF6D4()
{
  unint64_t result;

  result = qword_1EE674EA8;
  if (!qword_1EE674EA8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0EE74, &_s22NearbySharingDiscoveryO11PollingTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE674EA8);
  }
  return result;
}

unint64_t sub_1A2ACF71C()
{
  unint64_t result;

  result = qword_1EE674EA0;
  if (!qword_1EE674EA0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B0EE9C, &_s22NearbySharingDiscoveryO11PollingTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE674EA0);
  }
  return result;
}

uint64_t sub_1A2ACF760(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6974616D6F747561 && a2 == 0xE900000000000063;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65766973736170 && a2 == 0xE700000000000000 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1819047270 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A2ACF8B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x54676E696C6C6F70 && a2 == 0xEB00000000657079 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A2B47B20)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A2ACFA00(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A2B492B0 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74616E616C707865 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A2ACFB04(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A2B47FF0 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A2B46600 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x614E656369766564 && a2 == 0xEA0000000000656DLL || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F4D656369766564 && a2 == 0xEB000000006C6564 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x49746E756F636361 && a2 == 0xE900000000000044 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6341656D61537369 && a2 == 0xED0000746E756F63 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A2B492D0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1A2ACFE78(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x796177416C6C7570 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F707075736E75 && a2 == 0xEB00000000646574)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A2ACFF80(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001A2B492F0 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697463656E6E6F63 && a2 == 0xEA0000000000676ELL || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657463656E6E6F63 && a2 == 0xE900000000000064 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A2B49310 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6465646E65 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A2AD01A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x697463656E6E6F63 && a2 == 0xEE00656D69546E6FLL || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A2B49330 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x616974696E497369 && a2 == 0xEB00000000726F74)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

unint64_t sub_1A2AD0450()
{
  unint64_t result;

  result = qword_1EE67FE80;
  if (!qword_1EE67FE80)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType, &type metadata for SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType);
    atomic_store(result, (unint64_t *)&qword_1EE67FE80);
  }
  return result;
}

uint64_t SFNoThrowAsyncSequence.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (**a5)()@<X8>)
{
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t result;

  v10 = *(_QWORD *)(a3 - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = a2;
  *((_QWORD *)v12 + 3) = a3;
  *((_QWORD *)v12 + 4) = a4;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 32))(&v12[v11], a1, a3);
  *a5 = sub_1A2AD0964;
  a5[1] = (uint64_t (*)())v12;
  return result;
}

{
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t result;

  v10 = *(_QWORD *)(a3 - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = a2;
  *((_QWORD *)v12 + 3) = a3;
  *((_QWORD *)v12 + 4) = a4;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 32))(&v12[v11], a1, a3);
  *a5 = sub_1A2AD09CC;
  a5[1] = (uint64_t (*)())v12;
  return result;
}

uint64_t sub_1A2AD052C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A2AE31D8();
  __swift_allocate_value_buffer(v0, qword_1EE67FE98);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE67FE98);
  if (qword_1EE67AA50 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE67CA80);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

_QWORD *sub_1A2AD0654@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *result;
  uint64_t v14;

  v8 = sub_1A2AE3220();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v14 - v10;
  sub_1A2AE3214();
  v12 = swift_allocBox();
  MEMORY[0x1A8586964](a2, a3);
  sub_1A2AE31FC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = v12;
  *a4 = &unk_1EE680008;
  a4[1] = result;
  return result;
}

uint64_t sub_1A2AD0754(uint64_t a1)
{
  _QWORD *v1;

  v1[5] = a1;
  v1[6] = sub_1A2AE3214();
  v1[7] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_1A2AD07B0()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_1A2AD0818;
  return sub_1A2AE3208();
}

uint64_t sub_1A2AD0818()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_endAccess();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

_QWORD *sub_1A2AD086C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *result;
  uint64_t v15;

  v10 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  v13 = swift_allocBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, a3);
  sub_1A2AE37CC();
  result = (_QWORD *)swift_allocObject();
  result[2] = a2;
  result[3] = a3;
  result[4] = a4;
  result[5] = v13;
  *a5 = &unk_1EE680018;
  a5[1] = result;
  return result;
}

uint64_t sub_1A2AD0964()
{
  return sub_1A2AD09D8((uint64_t (*)(uint64_t, _QWORD))sub_1A2AD086C);
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1A2AD09CC()
{
  return sub_1A2AD09D8((uint64_t (*)(uint64_t, _QWORD))sub_1A2AD0654);
}

uint64_t sub_1A2AD09D8(uint64_t (*a1)(uint64_t, _QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 24) - 8) + 80);
  return a1(v1 + ((v2 + 40) & ~v2), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A2AD09FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[15] = a4;
  v5[16] = a5;
  v5[14] = a1;
  v5[17] = swift_getAssociatedTypeWitness();
  v5[18] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_1A2AD0A70()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  swift_getAssociatedConformanceWitness();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v1;
  *v1 = v0;
  v1[1] = sub_1A2AD0B0C;
  return sub_1A2AE36C4();
}

uint64_t sub_1A2AD0B0C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 160) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_endAccess();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A2AD0B80()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14[2];

  swift_endAccess();
  if (qword_1EE67AAC0 != -1)
    swift_once();
  v1 = *(void **)(v0 + 160);
  v2 = sub_1A2AE31D8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EE67FE98);
  v3 = v1;
  v4 = v1;
  v5 = sub_1A2AE31C0();
  v6 = sub_1A2AE3958();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 160);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14[0] = v10;
    *(_DWORD *)v9 = 136315138;
    swift_getErrorValue();
    v11 = sub_1A2AE3F94();
    *(_QWORD *)(v0 + 104) = sub_1A296DA00(v11, v12, v14);
    sub_1A2AE3A60();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A2830000, v5, v6, "Unexpected error by sequence in SFNoThrowAsyncSequence {error: %s}", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85896E8](v10, -1, -1);
    MEMORY[0x1A85896E8](v9, -1, -1);
  }
  else
  {

  }
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  sub_1A2AE3B20();
  sub_1A2AE34F0();
  swift_getErrorValue();
  sub_1A2AE3F94();
  sub_1A2AE34F0();
  swift_bridgeObjectRelease();
  sub_1A2AE34F0();
  return sub_1A2AE3C58();
}

uint64_t SFNoThrowAsyncSequence.AsyncIterator.next()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1A2AD0E34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1A2A21BF4;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch();
}

uint64_t sub_1A2AD0E94()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1A2AD0F18;
  return sub_1A2AE36D0();
}

uint64_t sub_1A2AD0F18()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t SFNoThrowAsyncSequence.makeAsyncIterator()()
{
  uint64_t (**v0)(void);

  return (*v0)();
}

uint64_t sub_1A2AD0F88()
{
  SFNoThrowAsyncSequence.makeAsyncIterator()();
  return swift_release();
}

uint64_t SFThrowingAsyncSequence.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (**a6)()@<X8>)
{
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t result;

  v12 = *(_QWORD *)(a4 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = (char *)swift_allocObject();
  *((_QWORD *)v14 + 2) = a2;
  *((_QWORD *)v14 + 3) = a3;
  *((_QWORD *)v14 + 4) = a4;
  *((_QWORD *)v14 + 5) = a5;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 32))(&v14[v13], a1, a4);
  *a6 = sub_1A2AD1158;
  a6[1] = (uint64_t (*)())v14;
  return result;
}

{
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t result;

  v12 = *(_QWORD *)(a4 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = (char *)swift_allocObject();
  *((_QWORD *)v14 + 2) = a2;
  *((_QWORD *)v14 + 3) = a3;
  *((_QWORD *)v14 + 4) = a4;
  *((_QWORD *)v14 + 5) = a5;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 32))(&v14[v13], a1, a4);
  *a6 = sub_1A2AD14D0;
  a6[1] = (uint64_t (*)())v14;
  return result;
}

_QWORD *sub_1A2AD1044@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a2;
  v9 = sub_1A2AE32A4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v16 - v11;
  sub_1A2AE3298();
  v13 = swift_allocBox();
  MEMORY[0x1A8586958](a3, a4);
  sub_1A2AE3280();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  result = (_QWORD *)swift_allocObject();
  v15 = v17;
  result[2] = a1;
  result[3] = v15;
  result[4] = a3;
  result[5] = a4;
  result[6] = v13;
  *a5 = &unk_1EE67FFF8;
  a5[1] = result;
  return result;
}

uint64_t sub_1A2AD1158()
{
  return sub_1A2AD14DC((uint64_t (*)(char *, _QWORD, _QWORD))sub_1A2AD1044);
}

uint64_t sub_1A2AD1164(uint64_t a1)
{
  _QWORD *v1;

  v1[5] = a1;
  v1[6] = sub_1A2AE3298();
  v1[7] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_1A2AD11C0()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_1A2AD1228;
  return sub_1A2AE328C();
}

uint64_t sub_1A2AD1228()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_endAccess();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A2AD129C()
{
  uint64_t v0;

  swift_endAccess();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_1A2AD1374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *result;
  uint64_t v17;

  v12 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  v15 = swift_allocBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, a4);
  sub_1A2AE37CC();
  result = (_QWORD *)swift_allocObject();
  result[2] = a2;
  result[3] = a3;
  result[4] = a4;
  result[5] = a5;
  result[6] = v15;
  *a6 = &unk_1EE67FFE8;
  a6[1] = result;
  return result;
}

uint64_t objectdestroy_6Tm()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1A2AD14D0()
{
  return sub_1A2AD14DC((uint64_t (*)(char *, _QWORD, _QWORD))sub_1A2AD1374);
}

uint64_t sub_1A2AD14DC(uint64_t (*a1)(char *, _QWORD, _QWORD))
{
  char *v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(*((_QWORD *)v1 + 4) - 8) + 80);
  return a1(&v1[(v2 + 48) & ~v2], *((_QWORD *)v1 + 2), *((_QWORD *)v1 + 3));
}

uint64_t sub_1A2AD1500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a1;
  v6[8] = swift_getAssociatedTypeWitness();
  v6[9] = swift_projectBox();
  return swift_task_switch();
}

uint64_t SFThrowingAsyncSequence.AsyncIterator.next()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1A2AD1588(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1A2971EBC;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch();
}

uint64_t sub_1A2AD15E8()
{
  return MEMORY[0x1E0DEDD18];
}

void sub_1A2AD15F4()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2AD1604()
{
  JUMPOUT(0x1A85895ECLL);
}

uint64_t type metadata accessor for SFNoThrowAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SFNoThrowAsyncSequence);
}

uint64_t type metadata accessor for SFNoThrowAsyncSequence.AsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SFNoThrowAsyncSequence.AsyncIterator);
}

uint64_t type metadata accessor for SFThrowingAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SFThrowingAsyncSequence);
}

uint64_t type metadata accessor for SFThrowingAsyncSequence.AsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SFThrowingAsyncSequence.AsyncIterator);
}

uint64_t sub_1A2AD1644()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A2AD1668(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1A2972038;
  return sub_1A2AD1500(a1, v8, v4, v5, v6, v7);
}

uint64_t sub_1A2AD16E8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1A2971EBC;
  return sub_1A2AD1164(a1);
}

uint64_t sub_1A2AD1768()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A2AD178C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1A2971EBC;
  return sub_1A2AD0754(a1);
}

uint64_t sub_1A2AD1804(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1A2972038;
  return sub_1A2AD09FC(a1, v6, v4, v5, v7);
}

void SFAirDrop.TXTRecord.deviceRelationship.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *SFAirDrop.TXTRecord.init(deviceRelationship:)@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t SFAirDrop.TXTRecord.init(txtRecord:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unsigned __int8 *v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  _QWORD v30[3];

  result = sub_1A2AE32E0();
  if (!v5)
    goto LABEL_56;
  v6 = v5;
  v7 = HIBYTE(v5) & 0xF;
  v8 = result & 0xFFFFFFFFFFFFLL;
  if ((v6 & 0x2000000000000000) != 0)
    v9 = v7;
  else
    v9 = result & 0xFFFFFFFFFFFFLL;
  if (!v9)
  {
    swift_bridgeObjectRelease();
    goto LABEL_56;
  }
  if ((v6 & 0x1000000000000000) != 0)
  {
    v11 = (uint64_t)sub_1A2AD1D9C(result, v6, 10);
    v13 = v29;
    goto LABEL_45;
  }
  if ((v6 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v10 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v10 = (unsigned __int8 *)sub_1A2AE3B8C();
    v11 = (uint64_t)sub_1A2AD2030(v10, v8, 10);
    v13 = v12 & 1;
LABEL_45:
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      v23 = sub_1A2AE32D4();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(a1, v23);
      if ((unint64_t)v11 >= 4)
        v24 = 2;
      else
        v24 = v11;
      goto LABEL_57;
    }
LABEL_56:
    v28 = sub_1A2AE32D4();
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(a1, v28);
    v24 = 2;
LABEL_57:
    *a2 = v24;
    return result;
  }
  v30[0] = result;
  v30[1] = v6 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v7)
      goto LABEL_61;
    if (v7 == 1 || (BYTE1(result) - 48) > 9u)
      goto LABEL_32;
    v11 = (BYTE1(result) - 48);
    if (v7 != 2)
    {
      if ((BYTE2(result) - 48) > 9u)
        goto LABEL_32;
      v11 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
      v14 = v7 - 3;
      if (v14)
      {
        v15 = (unsigned __int8 *)v30 + 3;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_32;
          v17 = 10 * v11;
          if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63)
            goto LABEL_32;
          v11 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_32;
          v13 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_45;
        }
      }
    }
LABEL_44:
    v13 = 0;
    goto LABEL_45;
  }
  if (result != 45)
  {
    if (!v7 || (result - 48) > 9u)
      goto LABEL_32;
    v11 = (result - 48);
    if (v7 != 1)
    {
      if ((BYTE1(result) - 48) > 9u)
        goto LABEL_32;
      v11 = 10 * (result - 48) + (BYTE1(result) - 48);
      v18 = v7 - 2;
      if (v18)
      {
        v19 = (unsigned __int8 *)v30 + 2;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_32;
          v21 = 10 * v11;
          if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63)
            goto LABEL_32;
          v11 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_32;
          v13 = 0;
          ++v19;
          if (!--v18)
            goto LABEL_45;
        }
      }
    }
    goto LABEL_44;
  }
  if (v7)
  {
    if (v7 != 1 && (BYTE1(result) - 48) <= 9u)
    {
      if (v7 == 2)
      {
        v13 = 0;
        v11 = -(uint64_t)(BYTE1(result) - 48);
        goto LABEL_45;
      }
      if ((BYTE2(result) - 48) <= 9u)
      {
        v11 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
        v22 = v7 - 3;
        if (!v22)
          goto LABEL_44;
        v25 = (unsigned __int8 *)v30 + 3;
        while (1)
        {
          v26 = *v25 - 48;
          if (v26 > 9)
            break;
          v27 = 10 * v11;
          if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63)
            break;
          v11 = v27 - v26;
          if (__OFSUB__(v27, v26))
            break;
          v13 = 0;
          ++v25;
          if (!--v22)
            goto LABEL_45;
        }
      }
    }
LABEL_32:
    v11 = 0;
    v13 = 1;
    goto LABEL_45;
  }
  __break(1u);
LABEL_61:
  __break(1u);
  return result;
}

uint64_t SFAirDrop.TXTRecord.addToEndpoint(_:)()
{
  NSObject *dictionary_with_initial_length;
  size_t v1;
  uint64_t v2;

  dictionary_with_initial_length = nw_txt_record_create_dictionary_with_initial_length();
  sub_1A2AE3E5C();
  v1 = sub_1A2AE34CC();
  v2 = sub_1A2AE3490();
  swift_bridgeObjectRelease();
  nw_txt_record_set_key(dictionary_with_initial_length, "deviceRelationship", (const uint8_t *)(v2 + 32), v1);
  swift_release();
  nw_endpoint_set_txt_record();
  return swift_unknownObjectRelease();
}

_QWORD *sub_1A2AD1C98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE676748);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1A2AD1CFC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1A2AE3538();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1A8586BBC](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unsigned __int8 *sub_1A2AD1D74(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A2AD2030(a1, a2, a3);
}

unsigned __int8 *sub_1A2AD1D88(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A2AD22AC(a1, a2, a3);
}

unsigned __int8 *sub_1A2AD1D9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1A2AE3568();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1A2AD252C();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1A2AE3B8C();
  }
LABEL_7:
  v11 = sub_1A2AD2030(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t _s9TXTRecordVwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A2AD1ECC + 4 * byte_1A2B0FF35[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A2AD1F00 + 4 * byte_1A2B0FF30[v4]))();
}

uint64_t sub_1A2AD1F00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2AD1F08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2AD1F10);
  return result;
}

uint64_t sub_1A2AD1F1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2AD1F24);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A2AD1F28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2AD1F30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SFAirDrop.TXTRecord()
{
  return &type metadata for SFAirDrop.TXTRecord;
}

uint64_t sub_1A2AD1F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1A2AE3568();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1A2AD252C();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1A2AE3B8C();
  }
LABEL_7:
  v11 = sub_1A2AD22AC(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 | ((((unint64_t)v11 >> 32) & 1) << 32);
}

unsigned __int8 *sub_1A2AD2030(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_1A2AD22AC(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned int v12;
  unsigned __int8 v13;
  unint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  unint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned int v28;
  unsigned int v29;
  char v30;
  unint64_t v31;
  unsigned __int8 v32;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v16 = a2 - 1;
      if (a2 != 1)
      {
        v17 = a3 + 87;
        if (a3 > 10)
        {
          v18 = a3 + 55;
        }
        else
        {
          v17 = 97;
          v18 = 65;
        }
        if (a3 <= 10)
          v19 = a3 + 48;
        else
          v19 = 58;
        if (result)
        {
          v8 = 0;
          v20 = result + 1;
          do
          {
            v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                v12 = 0;
                v13 = 1;
                if (v21 < 0x61 || v21 >= v17)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v22 = -87;
              }
              else
              {
                v22 = -55;
              }
            }
            else
            {
              v22 = -48;
            }
            v23 = v8 * (unint64_t)a3;
            if ((v23 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v24 = v21 + v22;
            v8 = v23 + v24;
            if (__CFADD__((_DWORD)v23, v24))
              goto LABEL_72;
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v26 = a3 + 55;
        }
        else
        {
          v25 = 97;
          v26 = 65;
        }
        if (a3 <= 10)
          v27 = a3 + 48;
        else
          v27 = 58;
        if (result)
        {
          v28 = 0;
          do
          {
            v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                v12 = 0;
                v13 = 1;
                if (v29 < 0x61 || v29 >= v25)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v30 = -87;
              }
              else
              {
                v30 = -55;
              }
            }
            else
            {
              v30 = -48;
            }
            v31 = v28 * (unint64_t)a3;
            if ((v31 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v32 = v29 + v30;
            v28 = v31 + v32;
            if (__CFADD__((_DWORD)v31, v32))
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          v8 = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            v14 = v8 * (unint64_t)a3;
            if ((v14 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v15 = v10 + v11;
            v8 = v14 - v15;
            if (v14 < v15)
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A2AD252C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1A2AE3574();
  v4 = sub_1A2AD25A8(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1A2AD25A8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_1A2AD26EC(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1A2AD1C98(v9, 0);
      v12 = sub_1A2AD27D8((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x1A8586B5C](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1A8586B5CLL);
LABEL_9:
      sub_1A2AE3B8C();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1A8586B5C]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1A2AD26EC(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1A2AD1CFC(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1A2AD1CFC(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_1A2AE3520();
  }
  __break(1u);
  return result;
}

unint64_t sub_1A2AD27D8(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_1A2AD1CFC(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_1A2AE352C();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_1A2AE3B8C();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_1A2AD1CFC(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_1A2AE3508();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void combineLatest<A, B, C, D, E>(_:_:_:_:_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, __int128 a11, __int128 a12, uint64_t a13)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;

  v45 = a5;
  v39 = a2;
  v40 = a3;
  v47 = a8;
  v46 = a11;
  v44 = a12;
  v42 = a4;
  v43 = a13;
  v37 = a7;
  v38 = a9;
  v41 = *(_QWORD *)(a10 - 8);
  v14 = MEMORY[0x1E0C80A78](a1);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v14);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x1E0C80A78](v19);
  v26 = (char *)&v36 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = MEMORY[0x1E0C80A78](v24);
  v31 = (char *)&v36 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = v32;
  MEMORY[0x1E0C80A78](v29);
  v34 = (char *)&v36 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v35 + 16))(v34);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v31, v39, a6);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v26, v40, v37);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, v42, v38);
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v16, v45, a10);
  sub_1A2AD2BF8((uint64_t)v34, v36, v47);
}

void sub_1A2AD2BF8(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for AsyncCombineLatest5Sequence();
}

uint64_t sub_1A2AD2C90(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v2 + a1[25], v7, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v2 + a1[26], v6, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v2 + a1[27], v3, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v2 + a1[28], v11, v1);
}

void AsyncCombineLatest5Sequence.Iterator.next()(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2[26] = a1;
  v11 = a2[2];
  v12 = a2[7];
  v2[27] = swift_getAssociatedTypeWitness();
  v9 = a2[3];
  v10 = a2[8];
  v2[28] = swift_getAssociatedTypeWitness();
  v8 = a2[9];
  v4 = a2[4];
  v2[29] = swift_getAssociatedTypeWitness();
  v2[30] = swift_getTupleTypeMetadata3();
  v2[31] = swift_getAssociatedTypeWitness();
  v2[32] = swift_getAssociatedTypeWitness();
  v2[33] = swift_getTupleTypeMetadata2();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v2[34] = TupleTypeMetadata2;
  v6 = sub_1A2AE39F4();
  v2[35] = v6;
  v2[36] = *(_QWORD *)(v6 - 8);
  v2[37] = swift_task_alloc();
  v2[38] = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v2[39] = swift_task_alloc();
  v2[40] = swift_task_alloc();
  v2[41] = swift_task_alloc();
  v2[42] = swift_task_alloc();
  v2[43] = swift_task_alloc();
  v2[44] = swift_task_alloc();
  v7 = swift_task_alloc();
  v2[2] = v11;
  v2[45] = v7;
  v2[3] = v9;
  v2[4] = v4;
  v2[5] = v12;
  v2[6] = v10;
  v2[7] = v8;
  type metadata accessor for AsyncCombineLatest3Sequence();
}

void sub_1A2AD2F50()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[18] = v4;
  v2[19] = v1;
  v2[20] = v3;
  v2[21] = v0;
  type metadata accessor for AsyncCombineLatest2Sequence();
}

void sub_1A2AD2F6C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = MEMORY[0x1A85895EC](&protocol conformance descriptor for AsyncCombineLatest3Sequence<A, B, C>, v2);
  v5 = MEMORY[0x1A85895EC](&protocol conformance descriptor for AsyncCombineLatest2Sequence<A, B>, a1);
  v1[22] = v2;
  v1[23] = a1;
  v1[24] = v4;
  v1[25] = v5;
  type metadata accessor for AsyncCombineLatest2Sequence.Iterator();
}

uint64_t sub_1A2AD2FAC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *v2 = v1;
  v2[1] = sub_1A2AD2FE8;
  return AsyncCombineLatest2Sequence.Iterator.next()(v0);
}

uint64_t sub_1A2AD2FE8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 368) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A2AD304C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t TupleTypeMetadata;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  void (*v36)(uint64_t, uint64_t);
  void (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t, uint64_t);
  void (*v39)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);
  void (*v57)(uint64_t, uint64_t, uint64_t);
  void (*v58)(void);
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t);
  void (*v68)(void);
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  _QWORD *v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t, uint64_t);
  void (*v81)(void);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;

  v1 = *(_QWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 272);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 304) + 48))(v1, 1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 232);
    v4 = *(_QWORD *)(v0 + 208);
    v90 = *(_OWORD *)(v0 + 216);
    v92 = *(_OWORD *)(v0 + 248);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 288) + 8))(v1, *(_QWORD *)(v0 + 280));
    *(_OWORD *)(v0 + 64) = v90;
    *(_QWORD *)(v0 + 80) = v3;
    *(_OWORD *)(v0 + 88) = v92;
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata - 8) + 56))(v4, 1, 1, TupleTypeMetadata);
  }
  else
  {
    v86 = *(_QWORD *)(v0 + 352);
    v63 = *(_QWORD *)(v0 + 328);
    v64 = *(_QWORD *)(v0 + 320);
    v65 = *(_QWORD *)(v0 + 344);
    v69 = *(_QWORD *)(v0 + 336);
    v70 = *(_QWORD *)(v0 + 312);
    v87 = *(_QWORD *)(v0 + 256);
    v93 = *(_QWORD *)(v0 + 248);
    v82 = *(_QWORD *)(v0 + 240);
    v89 = *(_QWORD *)(v0 + 232);
    v91 = *(_QWORD *)(v0 + 224);
    v62 = *(_QWORD *)(v0 + 208);
    v6 = *(int *)(v82 + 48);
    v7 = v86 + v6;
    v88 = v86 + v6;
    v8 = *(int *)(v82 + 64);
    v9 = v86 + v8;
    v78 = v86 + v8;
    v79 = *(_QWORD *)(v0 + 264);
    v10 = *(int *)(v2 + 48);
    v11 = v86 + v10;
    v12 = v86 + v10 + *(int *)(v79 + 48);
    v76 = v12;
    v77 = v86 + v10;
    v84 = v2;
    v13 = v1 + v10;
    v14 = v1 + v6;
    v15 = v1 + v8;
    v75 = *(_QWORD **)(*(_QWORD *)(v0 + 216) - 8);
    v68 = (void (*)(void))v75[4];
    v16 = *(_QWORD *)(v0 + 216);
    v68();
    v74 = *(_QWORD **)(v91 - 8);
    v67 = (void (*)(uint64_t, uint64_t))v74[4];
    v67(v7, v14);
    v73 = *(_QWORD **)(v89 - 8);
    v61 = (void (*)(uint64_t, uint64_t))v73[4];
    v61(v9, v15);
    v17 = v13 + *(int *)(v79 + 48);
    v71 = *(_QWORD **)(v93 - 8);
    v46 = (void (*)(uint64_t, uint64_t))v71[4];
    v46(v11, v13);
    v72 = *(_QWORD **)(v87 - 8);
    v51 = (void (*)(uint64_t, uint64_t))v72[4];
    v51(v12, v17);
    *(_QWORD *)(v0 + 104) = v16;
    *(_QWORD *)(v0 + 112) = v91;
    *(_QWORD *)(v0 + 120) = v89;
    *(_QWORD *)(v0 + 128) = v93;
    *(_QWORD *)(v0 + 136) = v87;
    v18 = (int *)swift_getTupleTypeMetadata();
    v59 = v62 + v18[12];
    v41 = v62 + v18[16];
    v44 = v62 + v18[20];
    v48 = v62 + v18[24];
    v49 = v18;
    v19 = v65 + *(int *)(v84 + 48);
    v20 = v65 + *(int *)(v82 + 48);
    v21 = v65 + *(int *)(v82 + 64);
    v54 = v21;
    v55 = v20;
    v58 = (void (*)(void))v75[2];
    v58();
    v57 = (void (*)(uint64_t, uint64_t, uint64_t))v74[2];
    v57(v20, v88, v91);
    v56 = (void (*)(uint64_t, uint64_t, uint64_t))v73[2];
    v56(v21, v78, v89);
    v22 = v19 + *(int *)(v79 + 48);
    v52 = v22;
    v53 = v19;
    v81 = (void (*)(void))v71[2];
    ((void (*)(uint64_t, uint64_t, uint64_t))v81)(v19, v77, v93);
    v80 = (void (*)(uint64_t, uint64_t, uint64_t))v72[2];
    v80(v22, v12, v87);
    ((void (*)(uint64_t, uint64_t, uint64_t))v68)(v62, v65, v16);
    v66 = v69 + *(int *)(v84 + 48);
    v23 = v69 + *(int *)(v82 + 48);
    v24 = v69 + *(int *)(v82 + 64);
    v50 = v24;
    v58();
    v57(v23, v88, v91);
    v56(v24, v78, v89);
    v25 = v66 + *(int *)(v79 + 48);
    v47 = v25;
    v81();
    v80(v25, v76, v87);
    ((void (*)(uint64_t, uint64_t, uint64_t))v67)(v59, v23, v91);
    v60 = v63 + *(int *)(v84 + 48);
    v26 = v63 + *(int *)(v82 + 48);
    v45 = v26;
    v27 = v63 + *(int *)(v82 + 64);
    v58();
    v57(v26, v88, v91);
    v56(v27, v78, v89);
    v43 = v60 + *(int *)(v79 + 48);
    v81();
    v80(v43, v76, v87);
    ((void (*)(uint64_t, uint64_t, uint64_t))v61)(v41, v27, v89);
    v28 = v64 + *(int *)(v84 + 48);
    v29 = v64 + *(int *)(v82 + 48);
    v30 = v64 + *(int *)(v82 + 64);
    v42 = v29;
    v58();
    v57(v29, v88, v91);
    v56(v30, v78, v89);
    v31 = v28 + *(int *)(v79 + 48);
    ((void (*)(uint64_t, uint64_t, uint64_t))v81)(v28, v77, v93);
    v80(v31, v76, v87);
    ((void (*)(uint64_t, uint64_t, uint64_t))v46)(v44, v28, v93);
    v32 = v70 + *(int *)(v84 + 48);
    v33 = v70 + *(int *)(v82 + 48);
    v83 = v70 + *(int *)(v82 + 64);
    v85 = v33;
    v68();
    ((void (*)(uint64_t, uint64_t, uint64_t))v67)(v33, v88, v91);
    ((void (*)(uint64_t, uint64_t, uint64_t))v61)(v83, v78, v89);
    v34 = v32 + *(int *)(v79 + 48);
    ((void (*)(uint64_t, uint64_t, uint64_t))v46)(v32, v77, v93);
    ((void (*)(uint64_t, uint64_t, uint64_t))v51)(v34, v76, v87);
    ((void (*)(uint64_t, uint64_t, uint64_t))v51)(v48, v34, v87);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*((_QWORD *)v49 - 1) + 56))(v62, 0, 1);
    v35 = (void (*)(uint64_t, uint64_t))v71[1];
    v35(v32, v93);
    v36 = (void (*)(uint64_t, uint64_t))v73[1];
    v36(v83, v89);
    v37 = (void (*)(uint64_t, uint64_t))v74[1];
    v37(v85, v91);
    v38 = (void (*)(uint64_t, uint64_t))v75[1];
    v38(v70, v16);
    v39 = (void (*)(uint64_t, uint64_t))v72[1];
    v39(v31, v87);
    v36(v30, v89);
    v37(v42, v91);
    v38(v64, v16);
    v39(v43, v87);
    v35(v60, v93);
    v37(v45, v91);
    v38(v63, v16);
    v39(v47, v87);
    v35(v66, v93);
    v36(v50, v89);
    v38(v69, v16);
    v39(v52, v87);
    v35(v53, v93);
    v36(v54, v89);
    v37(v55, v91);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A2AD3810()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1A2AD3890(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1A2971EBC;
  AsyncCombineLatest5Sequence.Iterator.next()(a1, a2);
}

uint64_t sub_1A2AD38F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  _QWORD *v6;

  v4[2] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[3] = AssociatedTypeWitness;
  v4[4] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[5] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v4[6] = v6;
  *v6 = v4;
  v6[1] = sub_1A29DB594;
  return sub_1A2AE36D0();
}

void AsyncCombineLatest5Sequence.makeAsyncIterator()()
{
  type metadata accessor for AsyncCombineLatest3Sequence();
}

void sub_1A2AD3A2C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v0[5];
  v3 = v0[6];
  *(_QWORD *)(v1 - 200) = v3;
  *(_QWORD *)(v1 - 192) = v2;
  v4 = v0[10];
  v5 = v0[11];
  *(_QWORD *)(v1 - 216) = v5;
  *(_QWORD *)(v1 - 208) = v4;
  *(_QWORD *)(v1 - 136) = v2;
  *(_QWORD *)(v1 - 128) = v3;
  *(_QWORD *)(v1 - 120) = v4;
  *(_QWORD *)(v1 - 112) = v5;
  type metadata accessor for AsyncCombineLatest2Sequence();
}

void sub_1A2AD3A54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = MEMORY[0x1A85895EC](&protocol conformance descriptor for AsyncCombineLatest3Sequence<A, B, C>, v1);
  *(_QWORD *)(v2 - 232) = v4;
  v5 = MEMORY[0x1A85895EC](&protocol conformance descriptor for AsyncCombineLatest2Sequence<A, B>, a1);
  *(_QWORD *)(v2 - 240) = v5;
  *(_QWORD *)(v2 - 136) = v1;
  *(_QWORD *)(v2 - 128) = a1;
  *(_QWORD *)(v2 - 120) = v4;
  *(_QWORD *)(v2 - 112) = v5;
  type metadata accessor for AsyncCombineLatest2Sequence();
}

void sub_1A2AD3A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v11 - 248) = *(_QWORD *)(a1 - 8);
  v12 = MEMORY[0x1E0C80A78](a1);
  v13 = MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  combineLatest<A, B, C>(_:_:_:)(v10, v10 + *(int *)(v9 + 100), v10 + *(int *)(v9 + 104), *(_QWORD *)(v11 - 152), *(_QWORD *)(v11 - 160), *(_QWORD *)(v11 - 168), *(_QWORD *)(v11 - 176), *(_QWORD *)(v11 - 184), (uint64_t)&a9 - v14, *(_QWORD *)(v11 - 224));
}

void sub_1A2AD3B44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  combineLatest<A, B>(_:_:)(v1 + *(int *)(v0 + 108), v1 + *(int *)(v0 + 112), *(_QWORD *)(v3 - 192), *(_QWORD *)(v3 - 200), *(_QWORD *)(v3 - 208), *(_QWORD *)(v3 - 216), v2);
}

void sub_1A2AD3B64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  combineLatest<A, B>(_:_:)(v4, v3, v1, v2, *(_QWORD *)(v5 - 232), *(_QWORD *)(v5 - 240), v0);
}

void sub_1A2AD3B80()
{
  AsyncCombineLatest2Sequence.makeAsyncIterator()();
}

uint64_t sub_1A2AD3B8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 248) + 8))(v1, v7);
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v4, v3);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v2);
  **(_QWORD **)(v8 - 144) = *(_QWORD *)(v8 - 136);
  return result;
}

uint64_t sub_1A2AD3BE8()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return swift_getAssociatedConformanceWitness();
}

void sub_1A2AD3C78()
{
  JUMPOUT(0x1A85895ECLL);
}

void sub_1A2AD3C88()
{
  AsyncCombineLatest5Sequence.makeAsyncIterator()();
}

uint64_t sub_1A2AD3C9C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

uint64_t sub_1A2AD3CB8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          result = swift_checkMetadataState();
          if (v5 <= 0x3F)
          {
            swift_initStructMetadata();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_1A2AD3DA4(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t *v39;

  v4 = *(_QWORD *)(a3[2] - 8);
  v5 = *(_QWORD *)(a3[3] - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v4 + 64) + v6;
  v8 = *(_QWORD *)(a3[4] - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(v5 + 64) + v9;
  v11 = *(_QWORD *)(a3[5] - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_QWORD *)(v8 + 64) + v12;
  v14 = *(_QWORD *)(a3[6] - 8);
  v15 = *(_DWORD *)(v14 + 80);
  v16 = *(_DWORD *)(v4 + 80);
  v17 = (*(_BYTE *)(v5 + 80) | v16 | *(_BYTE *)(v8 + 80) | v12 | v15);
  if (v17 <= 7
    && ((*(_QWORD *)(v11 + 64)
       + v15
       + ((v13 + ((v10 + (v7 & ~v6)) & ~v9)) & ~(unint64_t)v12)) & ~(unint64_t)v15)
     + *(_QWORD *)(v14 + 64) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | v16 | *(_DWORD *)(v8 + 80) | v12 | v15) & 0x100000) == 0)
  {
    v22 = ~v6;
    v33 = ~v9;
    v34 = a3[5];
    v36 = ~(unint64_t)v12;
    v37 = ~(unint64_t)v15;
    v38 = a3[6];
    v31 = a3[3];
    v32 = a3[4];
    v35 = *(_QWORD *)(v11 + 64) + v15;
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    v39 = a1;
    v24 = ((unint64_t)a1 + v7) & v22;
    v25 = ((unint64_t)a2 + v7) & v22;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(v24, v25, v31);
    v26 = v24 + v10;
    v21 = v39;
    v27 = v26 & v33;
    v28 = (v25 + v10) & v33;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v26 & v33, v28, v32);
    v29 = (v28 + v13) & v36;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))((v27 + v13) & v36, v29, v34);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 16))((((v27 + v13) & v36) + v35) & v37, (v29 + v35) & v37, v38);
  }
  else
  {
    v20 = *a2;
    *a1 = *a2;
    v21 = (uint64_t *)(v20 + ((v17 + 16) & ~v17));
    swift_retain();
  }
  return v21;
}

uint64_t sub_1A2AD3F88(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v4 = *(_QWORD *)(a2[2] - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2[3] - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(a2[4] - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  (*(void (**)(unint64_t))(v9 + 8))(v10);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(a2[5] - 8);
  v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  (*(void (**)(unint64_t))(v12 + 8))(v13);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(a2[6] - 8) + 8))((v13
                                                                                       + *(_QWORD *)(v12 + 64)
                                                                                       + *(unsigned __int8 *)(*(_QWORD *)(a2[6] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[6] - 8) + 80));
}

uint64_t sub_1A2AD4058(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v22, v23);
  v24 = *(_QWORD *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v24 + 16))((*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80), (*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
  return a1;
}

uint64_t sub_1A2AD4168(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 24))(v22, v23);
  v24 = *(_QWORD *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v24 + 24))((*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80), (*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
  return a1;
}

uint64_t sub_1A2AD4278(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 32))(v22, v23);
  v24 = *(_QWORD *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v24 + 32))((*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80), (*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
  return a1;
}

uint64_t sub_1A2AD4388(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 40))(v22, v23);
  v24 = *(_QWORD *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v24 + 40))((*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80), (*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
  return a1;
}

uint64_t sub_1A2AD4498(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  char v31;
  int v32;
  unsigned int v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = a3[2];
  v5 = a3[3];
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  v13 = a3[4];
  v12 = a3[5];
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_DWORD *)(v14 + 84);
  if (v15 > v11)
    v11 = *(_DWORD *)(v14 + 84);
  v16 = *(_QWORD *)(v12 - 8);
  v17 = *(unsigned int *)(v16 + 84);
  if (v17 <= v11)
    v18 = v11;
  else
    v18 = *(_DWORD *)(v16 + 84);
  v19 = a3[6];
  v20 = *(_QWORD *)(v19 - 8);
  if (*(_DWORD *)(v20 + 84) > v18)
    v18 = *(_DWORD *)(v20 + 84);
  if (!a2)
    return 0;
  v21 = *(unsigned __int8 *)(v9 + 80);
  v22 = *(_QWORD *)(v7 + 64) + v21;
  v23 = *(_QWORD *)(v9 + 64);
  v24 = *(unsigned __int8 *)(v14 + 80);
  v25 = *(_QWORD *)(v14 + 64);
  v26 = *(unsigned __int8 *)(v16 + 80);
  v27 = *(unsigned __int8 *)(v20 + 80);
  v28 = *(_QWORD *)(v16 + 64) + v27;
  v29 = a2 - v18;
  if (a2 <= v18)
    goto LABEL_30;
  v30 = ((v28 + ((v25 + v26 + ((v23 + v24 + (v22 & ~v21)) & ~v24)) & ~v26)) & ~v27) + *(_QWORD *)(v20 + 64);
  v31 = 8 * v30;
  if (v30 <= 3)
  {
    v33 = ((v29 + ~(-1 << v31)) >> v31) + 1;
    if (HIWORD(v33))
    {
      v32 = *(_DWORD *)(a1 + v30);
      if (!v32)
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v33 > 0xFF)
    {
      v32 = *(unsigned __int16 *)(a1 + v30);
      if (!*(_WORD *)(a1 + v30))
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v33 < 2)
    {
LABEL_30:
      if (v18)
      {
        if (v8 == v18)
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v7 + 48))(a1, *(unsigned int *)(v7 + 84), v6);
        v36 = (v22 + a1) & ~v21;
        if (v10 == v18)
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v9 + 48))(v36, *(unsigned int *)(v9 + 84), v5);
        v37 = (v36 + v23 + v24) & ~v24;
        if (v15 == v18)
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v14 + 48))(v37, *(unsigned int *)(v14 + 84), v13);
        v38 = (v37 + v25 + v26) & ~v26;
        if ((_DWORD)v17 == v18)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v38, v17, v12);
        else
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v20 + 48))((v28 + v38) & ~v27, *(unsigned int *)(v20 + 84), v19);
      }
      return 0;
    }
  }
  v32 = *(unsigned __int8 *)(a1 + v30);
  if (!*(_BYTE *)(a1 + v30))
    goto LABEL_30;
LABEL_21:
  v34 = (v32 - 1) << v31;
  if (v30 > 3)
    v34 = 0;
  if ((_DWORD)v30)
  {
    if (v30 <= 3)
      v35 = ((v28 + ((v25 + v26 + ((v23 + v24 + (v22 & ~(_DWORD)v21)) & ~(_DWORD)v24)) & ~(_DWORD)v26)) & ~(_DWORD)v27)
          + *(_DWORD *)(v20 + 64);
    else
      v35 = 4;
    __asm { BR              X11 }
  }
  return v18 + v34 + 1;
}

uint64_t sub_1A2AD471C(_WORD *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  result = *(_QWORD *)(a4[2] - 8);
  v6 = *(_QWORD *)(a4[3] - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(result + 84))
    v7 = *(_DWORD *)(result + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(a4[4] - 8);
  if (*(_DWORD *)(v8 + 84) > v7)
    v7 = *(_DWORD *)(v8 + 84);
  v9 = *(_QWORD *)(a4[5] - 8);
  if (*(_DWORD *)(v9 + 84) <= v7)
    v10 = v7;
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_QWORD *)(a4[6] - 8);
  if (*(_DWORD *)(v11 + 84) > v10)
    v10 = *(_DWORD *)(v11 + 84);
  v12 = ((*(_QWORD *)(v9 + 64)
        + *(unsigned __int8 *)(v11 + 80)
        + ((*(_QWORD *)(v8 + 64)
          + *(unsigned __int8 *)(v9 + 80)
          + ((*(_QWORD *)(v6 + 64)
            + *(unsigned __int8 *)(v8 + 80)
            + ((*(_QWORD *)(result + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
      + *(_QWORD *)(v11 + 64);
  if (a3 <= v10)
  {
    v13 = 0u;
    if (v10 < a2)
      goto LABEL_16;
  }
  else
  {
    if (v12 > 3)
    {
      v13 = 1u;
      if (v10 >= a2)
        return result;
LABEL_16:
      v14 = ~v10 + a2;
      if (v12 < 4)
      {
        if ((_DWORD)v12)
        {
          v16 = v14 & ~(-1 << (8 * v12));
          bzero(a1, v12);
          if ((_DWORD)v12 == 3)
          {
            *a1 = v16;
            *((_BYTE *)a1 + 2) = BYTE2(v16);
          }
          else if ((_DWORD)v12 == 2)
          {
            *a1 = v16;
          }
          else
          {
            *(_BYTE *)a1 = v16;
          }
        }
      }
      else
      {
        bzero(a1, v12);
        *(_DWORD *)a1 = v14;
      }
      __asm { BR              X10 }
    }
    v15 = ((a3 - v10 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v13 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
    if (v10 < a2)
      goto LABEL_16;
  }
  return result;
}

void sub_1A2AD49C0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1A2AD49C8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void type metadata accessor for AsyncCombineLatest5Sequence()
{
  JUMPOUT(0x1A8589544);
}

uint64_t sub_1A2AD4A60()
{
  return swift_allocateGenericValueMetadata();
}

void type metadata accessor for AsyncCombineLatest5Sequence.Iterator()
{
  JUMPOUT(0x1A8589544);
}

uint64_t SFProgressTask.initialValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = v3 + *(int *)(a1 + 36);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = v5 + *(int *)(type metadata accessor for SFProgressContinuation(0, v6, *(_QWORD *)(a1 + 24), a2) + 44);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, v7, v6);
}

uint64_t type metadata accessor for SFProgressContinuation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SFProgressContinuation);
}

uint64_t SFProgressTask.finalValue.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  v5 = sub_1A2AE2EE4();
  v3[11] = v5;
  v3[12] = *(_QWORD *)(v5 - 8);
  v3[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE67BB88);
  v3[14] = swift_task_alloc();
  v6 = sub_1A2AE2F44();
  v3[15] = v6;
  v3[16] = *(_QWORD *)(v6 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = *(_QWORD *)(a2 - 8);
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v7 = *(_QWORD *)(a2 + 16);
  v3[22] = v7;
  v3[23] = *(_QWORD *)(v7 - 8);
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v8 = *(_QWORD *)(a2 + 24);
  v3[27] = v8;
  v10 = type metadata accessor for SFProgressContinuation.Value(0, v7, v8, v9);
  v3[28] = v10;
  v3[29] = *(_QWORD *)(v10 - 8);
  v3[30] = swift_task_alloc();
  v11 = sub_1A2AE39F4();
  v3[31] = v11;
  v3[32] = *(_QWORD *)(v11 - 8);
  v3[33] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  v12 = sub_1A2AE325C();
  v3[34] = v12;
  v3[35] = MEMORY[0x1A85895EC](MEMORY[0x1E0C95FB8], v12);
  v13 = sub_1A2AE32A4();
  v3[36] = v13;
  v3[37] = *(_QWORD *)(v13 - 8);
  v3[38] = swift_task_alloc();
  v14 = sub_1A2AE3298();
  v3[39] = v14;
  v3[40] = *(_QWORD *)(v14 - 8);
  v3[41] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A2AD4D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v6 = *(_QWORD *)(v4 + 296);
  v5 = *(_QWORD *)(v4 + 304);
  v8 = *(_QWORD *)(v4 + 280);
  v7 = *(_QWORD *)(v4 + 288);
  v9 = *(_QWORD *)(v4 + 272);
  v10 = *(_QWORD *)(v4 + 216);
  v11 = *(_QWORD *)(v4 + 176);
  v12 = *(_QWORD *)(v4 + 80);
  v13 = *(int *)(*(_QWORD *)(v4 + 72) + 36);
  *(_DWORD *)(v4 + 352) = v13;
  v14 = v12 + v13;
  v15 = type metadata accessor for SFProgressContinuation(0, v11, v10, a4);
  *(_QWORD *)(v4 + 336) = v15;
  v16 = *(int *)(v15 + 40);
  *(_DWORD *)(v4 + 356) = v16;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v14 + v16);
  MEMORY[0x1A8586958](v9, v8);
  sub_1A2AE3280();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  v17 = *(_QWORD *)(v4 + 312);
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 344) = v18;
  MEMORY[0x1A85895EC](MEMORY[0x1E0C95FF0], v17);
  *v18 = v4;
  v18[1] = sub_1A2AD4E20;
  return sub_1A2AE36D0();
}

uint64_t sub_1A2AD4E20()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A2AD4E84()
{
  uint64_t v0;
  uint64_t v1;
  int EnumCaseMultiPayload;
  uint64_t (*v3)(void);
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  void (*v17)(uint64_t, uint64_t, uint64_t);
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  void (*v61)(void);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  os_log_type_t type;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76[4];

  v1 = *(_QWORD *)(v0 + 264);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 48))(v1, 1, *(_QWORD *)(v0 + 224)) != 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(v1, *(_QWORD *)(v0 + 248));
    v4 = *(_QWORD *)(v0 + 312);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 344) = v5;
    MEMORY[0x1A85895EC](MEMORY[0x1E0C95FF0], v4);
    *v5 = v0;
    v5[1] = sub_1A2AD4E20;
    return sub_1A2AE36D0();
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 8))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 312));
  sub_1A2AE3244();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 32))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 176));
    if ((sub_1A2AE3778() & 1) != 0)
    {
      if (qword_1EE67AAC8 != -1)
        swift_once();
      v7 = *(_QWORD *)(v0 + 200);
      v8 = *(_QWORD *)(v0 + 176);
      v9 = *(_QWORD *)(v0 + 184);
      v11 = *(_QWORD *)(v0 + 160);
      v10 = *(_QWORD *)(v0 + 168);
      v12 = *(_QWORD *)(v0 + 144);
      v73 = *(_QWORD *)(v0 + 208);
      v74 = *(_QWORD *)(v0 + 152);
      v14 = *(_QWORD *)(v0 + 72);
      v13 = *(_QWORD *)(v0 + 80);
      v15 = sub_1A2AE31D8();
      __swift_project_value_buffer(v15, (uint64_t)qword_1EE680138);
      v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
      v16(v10, v13, v14);
      v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
      v17(v7, v73, v8);
      v16(v11, v13, v14);
      v16(v74, v13, v14);
      v18 = sub_1A2AE31C0();
      v19 = sub_1A2AE394C();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = *(_QWORD *)(v0 + 336);
        v75 = v20;
        v21 = *(_QWORD *)(v0 + 192);
        v22 = *(_QWORD *)(v0 + 176);
        v58 = *(_QWORD *)(v0 + 200);
        v59 = *(_QWORD *)(v0 + 184);
        v23 = *(_QWORD *)(v0 + 168);
        v72 = *(_QWORD *)(v0 + 160);
        v70 = *(_QWORD *)(v0 + 152);
        v57 = *(_QWORD *)(v0 + 144);
        v62 = *(_QWORD *)(v0 + 128);
        v63 = *(_QWORD *)(v0 + 112);
        v66 = *(_QWORD *)(v0 + 104);
        v64 = *(_QWORD *)(v0 + 120);
        v65 = *(_QWORD *)(v0 + 96);
        v67 = *(_QWORD *)(v0 + 88);
        v68 = *(_QWORD *)(v0 + 136);
        v24 = *(_QWORD *)(v0 + 72);
        v56 = v17;
        v25 = swift_slowAlloc();
        v71 = swift_slowAlloc();
        v76[0] = v71;
        *(_DWORD *)v25 = 136315906;
        v26 = (uint64_t *)(v23 + *(int *)(v24 + 36) + *(int *)(v20 + 48));
        type = v19;
        v28 = *v26;
        v27 = v26[1];
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 32) = sub_1A296DA00(v28, v27, v76);
        sub_1A2AE3A60();
        swift_bridgeObjectRelease();
        v61 = *(void (**)(void))(v57 + 8);
        ((void (*)(uint64_t, uint64_t))v61)(v23, v24);
        *(_WORD *)(v25 + 12) = 2080;
        v56(v21, v58, v22);
        v29 = sub_1A2AE346C();
        *(_QWORD *)(v0 + 40) = sub_1A296DA00(v29, v30, v76);
        sub_1A2AE3A60();
        swift_bridgeObjectRelease();
        v60 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
        v60(v58, v22);
        *(_WORD *)(v25 + 22) = 2080;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56))(v63, 1, 1, v64);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v65 + 104))(v66, *MEMORY[0x1E0CAFD78], v67);
        swift_bridgeObjectRetain();
        sub_1A2AE2F38();
        v31 = sub_1A2AE2EFC();
        v33 = v32;
        (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v68, v64);
        *(_QWORD *)(v0 + 48) = sub_1A296DA00(v31, v33, v76);
        sub_1A2AE3A60();
        swift_bridgeObjectRelease();
        v34 = v60;
        ((void (*)(uint64_t, uint64_t))v61)(v72, v24);
        *(_WORD *)(v25 + 32) = 2048;
        v35 = *(_QWORD *)(v70 + *(int *)(v24 + 36) + *(int *)(v75 + 56));
        v61();
        *(_QWORD *)(v0 + 56) = v35;
        sub_1A2AE3A60();
        _os_log_impl(&dword_1A2830000, v18, type, "SFProgressTask was cancelled {name: %s progress: %s} [%s:%ld]", (uint8_t *)v25, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x1A85896E8](v71, -1, -1);
        MEMORY[0x1A85896E8](v25, -1, -1);

      }
      else
      {
        v47 = *(_QWORD *)(v0 + 200);
        v48 = *(_QWORD *)(v0 + 176);
        v49 = *(_QWORD *)(v0 + 184);
        v51 = *(_QWORD *)(v0 + 160);
        v50 = *(_QWORD *)(v0 + 168);
        v52 = *(_QWORD *)(v0 + 72);
        v53 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 8);
        v53(*(_QWORD *)(v0 + 152), v52);
        v53(v50, v52);
        v34 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
        v34(v47, v48);
        v53(v51, v52);

      }
      v54 = *(_QWORD *)(v0 + 208);
      v55 = *(_QWORD *)(v0 + 176);
      sub_1A2AE36B8();
      sub_1A29D3E8C();
      swift_allocError();
      sub_1A2AE334C();
      swift_willThrow();
      v34(v54, v55);
    }
    else
    {
      v36 = *(_QWORD *)(v0 + 336);
      v37 = *(_QWORD *)(v0 + 208);
      v39 = *(_QWORD *)(v0 + 184);
      v38 = *(_QWORD *)(v0 + 192);
      v40 = *(_QWORD *)(v0 + 176);
      v41 = *(_QWORD *)(v0 + 80) + *(int *)(v0 + 352);
      v76[0] = 0;
      v76[1] = 0xE000000000000000;
      sub_1A2AE3B20();
      sub_1A2AE34F0();
      swift_bridgeObjectRetain();
      sub_1A2AE34F0();
      swift_bridgeObjectRelease();
      sub_1A2AE34F0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v38, v37, v40);
      sub_1A2AE346C();
      sub_1A2AE34F0();
      swift_bridgeObjectRelease();
      sub_1A2AE34F0();
      v42 = (uint64_t *)(v41 + *(int *)(v36 + 52));
      v44 = *v42;
      v43 = v42[1];
      v45 = *(_QWORD *)(v41 + *(int *)(v36 + 56));
      sub_1A297AFB8();
      swift_allocError();
      *(_QWORD *)v46 = 0;
      *(_QWORD *)(v46 + 8) = 0xE000000000000000;
      *(_QWORD *)(v46 + 16) = v44;
      *(_QWORD *)(v46 + 24) = v43;
      *(_QWORD *)(v46 + 32) = v45;
      *(_OWORD *)(v46 + 40) = 0u;
      *(_OWORD *)(v46 + 56) = 0u;
      *(_OWORD *)(v46 + 72) = 0u;
      *(_OWORD *)(v46 + 88) = 0u;
      swift_bridgeObjectRetain();
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v40);
    }
    goto LABEL_15;
  }
  if (EnumCaseMultiPayload != 1)
  {
    swift_willThrow();
LABEL_15:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)(v0 + 216) - 8) + 32))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 240));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1A2AD5738()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 8))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 312));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A2AD5830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A2AE31D8();
  __swift_allocate_value_buffer(v0, qword_1EE680138);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE680138);
  if (qword_1EE67AA50 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE67CA80);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t SFProgressContinuation.init(_:initialProgress:file:line:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  _QWORD *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v46 = a8;
  v47 = a3;
  v53 = a5;
  v54 = a6;
  v51 = a2;
  v52 = a4;
  v50 = a1;
  v55 = a9;
  v49 = type metadata accessor for SFProgressContinuation.Value(0, a7, a8, a4);
  v10 = MEMORY[0x1E0C80A78](v49);
  v48 = (char *)&v40 - v11;
  v45 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](v10);
  v44 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  v13 = sub_1A2AE37F0();
  v42 = *(_QWORD *)(v13 - 8);
  v43 = v13;
  MEMORY[0x1E0C80A78](v13);
  v41 = (char *)&v40 - v14;
  v40 = sub_1A2AE37FC();
  v15 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v17 = (char *)&v40 - v16;
  v18 = sub_1A2AE3820();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v40 - v20;
  v22 = sub_1A2AE3850();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v40 - v24;
  sub_1A2AD5C0C((uint64_t)v17);
  sub_1A2AE37E4();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v40);
  v26 = v55;
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v55, v25, v22);
  v28 = (int *)type metadata accessor for SFProgressContinuation(0, a7, v46, v27);
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v26 + v28[9], v21, v18);
  v29 = v45;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
  v31 = v47;
  v30(v44, v47, a7);
  v32 = v41;
  sub_1A2AE3808();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v32, v43);
  sub_1A2AE325C();
  v30(v48, v31, a7);
  swift_storeEnumTagMultiPayload();
  v33 = sub_1A2AE3268();
  v34 = v55;
  *(_QWORD *)(v55 + v28[10]) = v33;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v34 + v28[11], v31, a7);
  v36 = (_QWORD *)(v34 + v28[12]);
  v37 = v51;
  *v36 = v50;
  v36[1] = v37;
  v38 = (uint64_t *)(v34 + v28[13]);
  v39 = v53;
  *v38 = v52;
  v38[1] = v39;
  *(_QWORD *)(v34 + v28[14]) = v54;
  return result;
}

uint64_t sub_1A2AD5C0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DF0A50];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  v3 = sub_1A2AE37FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t SFProgressContinuation.yield(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v23 = a1;
  v5 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v22[1] = a2;
  v6 = type metadata accessor for SFProgressContinuation.Value(0, v5, v4, a4);
  v7 = *(_QWORD *)(v6 - 8);
  v24 = v6;
  v25 = v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v22 - v9;
  v11 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v8);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  v14 = sub_1A2AE37F0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v22 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v19 = v23;
  v18(v13, v23, v5);
  sub_1A2AE3820();
  sub_1A2AE3808();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v18(v10, v19, v5);
  v20 = v24;
  swift_storeEnumTagMultiPayload();
  sub_1A2AE3238();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v10, v20);
}

uint64_t SFProgressContinuation.finish(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a2 + 24);
  v6 = type metadata accessor for SFProgressContinuation.Value(0, *(_QWORD *)(a2 + 16), v5, a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v11 - v8;
  v12 = 0;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  sub_1A2AE3820();
  sub_1A2AE3814();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v9, a1, v5);
  swift_storeEnumTagMultiPayload();
  sub_1A2AE3238();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v12 = 0;
  return sub_1A2AE322C();
}

void SFProgressContinuation.fail(with:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;

  v5 = type metadata accessor for SFProgressContinuation.Value(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v12 - v7);
  v13 = a1;
  v9 = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  sub_1A2AE3820();
  sub_1A2AE3814();
  *v8 = a1;
  swift_storeEnumTagMultiPayload();
  v10 = a1;
  sub_1A2AE3238();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  v13 = a1;
  v11 = a1;
  sub_1A2AE322C();

}

void SFProgressContinuation.cancel(_:)(id a1, uint64_t a2)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  if (a1)
  {
    v4 = a1;
  }
  else
  {
    sub_1A2AE36B8();
    sub_1A29D3E8C();
    v4 = (id)swift_allocError();
    sub_1A2AE334C();
  }
  v5 = a1;
  SFProgressContinuation.fail(with:)(v4, a2, v6, v7);

}

uint64_t SFProgressContinuation.task.getter@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  return sub_1A2AD6158((uint64_t)v5, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v7, a2);
}

uint64_t sub_1A2AD6158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t result;

  v9 = (int *)type metadata accessor for SFProgressTask(0, a2, a3, a4);
  v10 = v9[10];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE680158);
  v11 = swift_allocObject();
  *(_DWORD *)(v11 + 24) = 0;
  *(_QWORD *)((char *)a5 + v10) = v11;
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)((char *)a5 + v9[11]) = 0;
  v12 = (char *)a5 + v9[9];
  v14 = type metadata accessor for SFProgressContinuation(0, a2, a3, v13);
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v12, a1, v14);
  v16 = (uint64_t *)(a1 + *(int *)(v14 + 48));
  v18 = *v16;
  v17 = v16[1];
  v19 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
  swift_bridgeObjectRetain();
  result = v19(a1, v14);
  *a5 = v18;
  a5[1] = v17;
  return result;
}

uint64_t SFProgressTask.init(_:initialProgress:operation:file:line:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v49 = a7;
  v50 = a8;
  v48 = a6;
  v51 = a4;
  v52 = a5;
  v54 = a3;
  v45 = a2;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEFB6D0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v47 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = *(_QWORD *)(a10 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = a11;
  v19 = type metadata accessor for SFProgressContinuation(0, a10, a11, v18);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  v22 = MEMORY[0x1E0C80A78](v19);
  v44 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v43 - v23;
  v26 = (int *)type metadata accessor for SFProgressTask(0, a10, a11, v25);
  v27 = v26[10];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE680158);
  v28 = swift_allocObject();
  *(_DWORD *)(v28 + 24) = 0;
  *(_QWORD *)(v28 + 16) = 0;
  *(uint64_t *)((char *)a9 + v27) = v28;
  v46 = v26[11];
  *(uint64_t *)((char *)a9 + v46) = 0;
  v29 = v45;
  *a9 = a1;
  a9[1] = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v17, v54, a10);
  swift_bridgeObjectRetain();
  v30 = a1;
  v31 = v43;
  SFProgressContinuation.init(_:initialProgress:file:line:)(v30, v29, (uint64_t)v17, v48, v49, v50, a10, v43, (uint64_t)v24);
  v32 = (char *)a9 + v26[9];
  v33 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v33(v32, v24, v19);
  v34 = sub_1A2AE36E8();
  v35 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v47, 1, 1, v34);
  v36 = v44;
  v33(v44, v24, v19);
  v37 = (*(unsigned __int8 *)(v20 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v38 = (char *)swift_allocObject();
  *((_QWORD *)v38 + 2) = 0;
  *((_QWORD *)v38 + 3) = 0;
  *((_QWORD *)v38 + 4) = a10;
  *((_QWORD *)v38 + 5) = v31;
  v39 = v52;
  *((_QWORD *)v38 + 6) = v51;
  *((_QWORD *)v38 + 7) = v39;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v38[v37], v36, v19);
  v40 = sub_1A2974504(v35, (uint64_t)&unk_1EE680168, (uint64_t)v38);
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v54, a10);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v19);
  v41 = v46;
  result = swift_release();
  *(uint64_t *)((char *)a9 + v41) = v40;
  return result;
}

uint64_t sub_1A2AD64D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  v10 = type metadata accessor for SFProgressContinuation(0, a7, a8, a4);
  v8[7] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v8[8] = v11;
  v8[9] = *(_QWORD *)(v11 + 64);
  v8[10] = swift_task_alloc();
  v8[11] = *(_QWORD *)(a8 - 8);
  v8[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A2AD6568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v9;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(int **)(v0 + 16);
  v9 = *(_OWORD *)(v0 + 40);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 16))(v1, *(_QWORD *)(v0 + 32), v2);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 104) = v6;
  *(_OWORD *)(v6 + 16) = v9;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v6 + v5, v1, v2);
  *(_QWORD *)&v9 = (char *)v4 + *v4;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v7;
  *v7 = v0;
  v7[1] = sub_1A2AD6654;
  return ((uint64_t (*)(_QWORD, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))v9)(*(_QWORD *)(v0 + 96), sub_1A2ADA3FC, v6);
}

uint64_t sub_1A2AD6654()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1A2AD66C0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(void **)(v0 + 120);
  sub_1A2AE3784();
  v5 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(v5 + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 48));
    SFProgressContinuation.fail(with:)(v1, *(_QWORD *)(v0 + 56), v6, v7);

  }
  else
  {
    v8 = *(_QWORD *)(v0 + 48);
    SFProgressContinuation.finish(with:)(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 56), v2, v3);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v8);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A2AD6768()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  swift_release();
  v1 = *(void **)(v0 + 120);
  SFProgressContinuation.fail(with:)(v1, *(_QWORD *)(v0 + 56), v2, v3);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SFProgressTask.cancel(_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t result;

  v7 = type metadata accessor for SFProgressContinuation(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  SFProgressContinuation.cancel(_:)(a1, v7);
  result = *(_QWORD *)(v4 + *(int *)(a2 + 44));
  if (result)
    return sub_1A2AE376C();
  return result;
}

uint64_t SFProgressTask.makeAsyncIterator()(uint64_t a1)
{
  uint64_t v1;

  sub_1A2AD68C0(*(os_unfair_lock_s **)(v1 + *(int *)(a1 + 40)), a1);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  sub_1A2AE3850();
  return sub_1A2AE373C();
}

void sub_1A2AD68C0(os_unfair_lock_s *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  os_unfair_lock_s *v6;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = a1 + 4;
  v6 = a1 + 6;
  os_unfair_lock_lock(a1 + 6);
  sub_1A2AD6920(v5, v2, v3, v4);
  os_unfair_lock_unlock(v6);
}

uint64_t sub_1A2AD6920(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];

  v8 = type metadata accessor for SFProgressTask(0, a3, a4, a4);
  result = MEMORY[0x1E0C80A78](v8);
  if (*a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v14 - v12, a2, v10);
    v14[0] = 0;
    v14[1] = 0xE000000000000000;
    sub_1A2AE3B20();
    sub_1A2AE34F0();
    type metadata accessor for SFProgressContinuation(0, a3, a4, v13);
    swift_bridgeObjectRetain();
    sub_1A2AE34F0();
    swift_bridgeObjectRelease();
    result = sub_1A2AE3C58();
    __break(1u);
  }
  else
  {
    *a1 = 1;
  }
  return result;
}

uint64_t sub_1A2AD6A8C(uint64_t a1)
{
  uint64_t v1;

  SFProgressTask.makeAsyncIterator()(a1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t SFProgressTask.split()(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v70 = a1;
  v71 = a2;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
  v68 = *(_QWORD *)(a3 - 8);
  v69 = v5;
  MEMORY[0x1E0C80A78](a1);
  v67 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEFB6D0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v79 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v73 = *(_QWORD *)(a3 + 16);
  MEMORY[0x1E0C80A78](v8);
  v12 = *(_QWORD *)(a3 + 24);
  v74 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = v12;
  v13 = a3;
  v72 = a3;
  v16 = type metadata accessor for SFProgressContinuation(0, v14, v12, v15);
  v66 = *(_QWORD *)(v16 - 8);
  v17 = *(_QWORD *)(v66 + 64);
  v18 = MEMORY[0x1E0C80A78](v16);
  v78 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v18);
  v65 = (char *)&v61 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v76 = (uint64_t)&v61 - v22;
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v61 - v23;
  v77 = (char *)&v61 - v23;
  v25 = *v3;
  v26 = v3[1];
  v27 = v3;
  v64 = v3;
  v80 = v25;
  v81 = v26;
  swift_bridgeObjectRetain();
  sub_1A2AE34F0();
  v28 = v80;
  v29 = v81;
  v30 = (char *)v27 + *(int *)(v13 + 36) + *(int *)(v16 + 44);
  v63 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v31 = v73;
  v32 = (uint64_t)v74;
  v63(v74, v30, v73);
  v62 = 0x80000001A2B49420;
  v33 = (uint64_t)v24;
  v34 = v29;
  v35 = v31;
  v36 = v75;
  SFProgressContinuation.init(_:initialProgress:file:line:)(v28, v34, v32, 0xD00000000000004CLL, 0x80000001A2B49420, 190, v31, v75, v33);
  v80 = v25;
  v81 = v26;
  swift_bridgeObjectRetain();
  sub_1A2AE34F0();
  v37 = v80;
  v38 = v81;
  v39 = v72;
  v40 = v64;
  v41 = (uint64_t)v74;
  v63(v74, (char *)v64 + *(int *)(v72 + 36) + *(int *)(v16 + 44), v35);
  v42 = v76;
  SFProgressContinuation.init(_:initialProgress:file:line:)(v37, v38, v41, 0xD00000000000004CLL, v62, 191, v35, v36, v76);
  v43 = sub_1A2AE36E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v79, 1, 1, v43);
  v45 = v67;
  v44 = v68;
  (*(void (**)(char *, uint64_t *, uint64_t))(v68 + 16))(v67, v40, v39);
  v46 = v65;
  v47 = v66;
  v48 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  v48(v65, v77, v16);
  v48(v78, (char *)v42, v16);
  v49 = (*(unsigned __int8 *)(v44 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  v50 = *(unsigned __int8 *)(v47 + 80);
  v51 = (v69 + v49 + v50) & ~v50;
  v52 = (v17 + v50 + v51) & ~v50;
  v53 = (char *)swift_allocObject();
  *((_QWORD *)v53 + 2) = 0;
  *((_QWORD *)v53 + 3) = 0;
  v54 = v72;
  v55 = v75;
  *((_QWORD *)v53 + 4) = v73;
  *((_QWORD *)v53 + 5) = v55;
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(&v53[v49], v45, v54);
  v56 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
  v56(&v53[v51], v46, v16);
  v56(&v53[v52], v78, v16);
  sub_1A2974504(v79, (uint64_t)&unk_1EE680178, (uint64_t)v53);
  swift_release();
  v57 = v77;
  SFProgressContinuation.task.getter(v16, v70);
  v58 = v76;
  SFProgressContinuation.task.getter(v16, v71);
  v59 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
  v59(v58, v16);
  return ((uint64_t (*)(char *, uint64_t))v59)(v57, v16);
}

uint64_t sub_1A2AD6EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;

  v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  v8[5] = a6;
  v8[3] = a4;
  v8[8] = *(_QWORD *)(a8 - 8);
  v8[9] = swift_task_alloc();
  v8[10] = *(_QWORD *)(a7 - 8);
  v8[11] = swift_task_alloc();
  sub_1A2AE39F4();
  v8[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  v10 = sub_1A2AE3844();
  v8[13] = v10;
  v8[14] = *(_QWORD *)(v10 - 8);
  v8[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A2AD6FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = type metadata accessor for SFProgressTask(0, v4[6], v4[7], a4);
  v4[16] = v5;
  SFProgressTask.makeAsyncIterator()(v5);
  v6 = (_QWORD *)swift_task_alloc();
  v4[17] = (uint64_t)v6;
  *v6 = v4;
  v6[1] = sub_1A2AD704C;
  return sub_1A2AE3838();
}

uint64_t sub_1A2AD704C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    *(_QWORD *)(v2 + 144) = 0;
  return swift_task_switch();
}

uint64_t sub_1A2AD70B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    v4 = *(void **)(v0 + 144);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
    sub_1A2AE3784();
    if (v4)
    {
      v6 = type metadata accessor for SFProgressContinuation(0, *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), v5);
      SFProgressContinuation.fail(with:)(v4, v6, v7, v8);
      SFProgressContinuation.fail(with:)(v4, v6, v9, v10);

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    else
    {
      v21 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 160) = v21;
      *v21 = v0;
      v21[1] = sub_1A2AD7310;
      return SFProgressTask.finalValue.getter(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 128));
    }
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 56);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v12, v1, v3);
    v15 = type metadata accessor for SFProgressContinuation(0, v3, v13, v14);
    SFProgressContinuation.yield(_:)(v12, v15, v16, v17);
    SFProgressContinuation.yield(_:)(v12, v15, v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v3);
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v20;
    *v20 = v0;
    v20[1] = sub_1A2AD72AC;
    return sub_1A2AE3838();
  }
}

uint64_t sub_1A2AD72AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    *(_QWORD *)(v2 + 144) = 0;
  return swift_task_switch();
}

uint64_t sub_1A2AD7310()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A2AD7374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(v4 + 64);
  v5 = *(_QWORD *)(v4 + 72);
  v7 = *(_QWORD *)(v4 + 56);
  v8 = type metadata accessor for SFProgressContinuation(0, *(_QWORD *)(v4 + 48), v7, a4);
  SFProgressContinuation.finish(with:)(v5, v8, v9, v10);
  SFProgressContinuation.finish(with:)(v5, v8, v11, v12);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1A2AD741C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
  v1 = *(void **)(v0 + 16);
  v3 = type metadata accessor for SFProgressContinuation(0, *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), v2);
  SFProgressContinuation.fail(with:)(v1, v3, v4, v5);
  SFProgressContinuation.fail(with:)(v1, v3, v6, v7);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A2AD74C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void **)(v4 + 168);
  v6 = type metadata accessor for SFProgressContinuation(0, *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 56), a4);
  SFProgressContinuation.fail(with:)(v5, v6, v7, v8);
  SFProgressContinuation.fail(with:)(v5, v6, v9, v10);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t withProgressTask<A, B>(_:initialProgress:operation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;

  v34 = a4;
  v35 = a5;
  v31 = a3;
  v32 = a1;
  v36 = a8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEFB6D0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v33 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for SFProgressContinuation(0, a6, a7, v17);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  v21 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v31 - v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v31, a6);
  swift_bridgeObjectRetain();
  SFProgressContinuation.init(_:initialProgress:file:line:)(v32, a2, (uint64_t)v16, 0xD00000000000004CLL, 0x80000001A2B49420, 217, a6, a7, (uint64_t)v24);
  v25 = sub_1A2AE36E8();
  v26 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v33, 1, 1, v25);
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v22, v24, v18);
  v27 = (*(unsigned __int8 *)(v19 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v28 = (char *)swift_allocObject();
  *((_QWORD *)v28 + 2) = 0;
  *((_QWORD *)v28 + 3) = 0;
  *((_QWORD *)v28 + 4) = a6;
  *((_QWORD *)v28 + 5) = a7;
  v29 = v35;
  *((_QWORD *)v28 + 6) = v34;
  *((_QWORD *)v28 + 7) = v29;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v28[v27], v22, v18);
  swift_retain();
  sub_1A2974504(v26, (uint64_t)&unk_1EE680188, (uint64_t)v28);
  swift_release();
  SFProgressContinuation.task.getter(v18, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v24, v18);
}

uint64_t sub_1A2AD7788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  return swift_task_switch();
}

uint64_t sub_1A2AD77A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v4;
  v5 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  *(_OWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 48) = v3;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v6;
  v6[2] = v2;
  v6[3] = v1;
  v6[4] = v3;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v7;
  *v7 = v0;
  v7[1] = sub_1A2AD786C;
  return sub_1A2AE3EEC();
}

uint64_t sub_1A2AD786C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_1A2AD78E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc();
  swift_task_dealloc();
  v5 = type metadata accessor for SFProgressContinuation(0, v3, v2, v4);
  SFProgressContinuation.fail(with:)(v1, v5, v6, v7);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A2AD7958(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v8 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v6;
  *v6 = v4;
  v6[1] = sub_1A2971EBC;
  return v8(a4);
}

uint64_t type metadata accessor for SFProgressContinuation.Value(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SFProgressContinuation.Value);
}

uint64_t type metadata accessor for SFProgressTask(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SFProgressTask);
}

uint64_t sub_1A2AD79D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v7 = v4[4];
  v8 = v4[5];
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SFProgressContinuation(0, v7, v8, a4) - 8) + 80);
  v10 = v4[2];
  v11 = v4[3];
  v12 = v4[6];
  v13 = v4[7];
  v14 = (uint64_t)v4 + ((v9 + 64) & ~v9);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v15;
  *v15 = v5;
  v15[1] = sub_1A2972038;
  return sub_1A2AD64D4(a1, v10, v11, v12, v13, v14, v7, v8);
}

uint64_t sub_1A2AD7A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(unint64_t, uint64_t);
  void (*v21)(unint64_t, uint64_t);
  void (*v22)(unint64_t, uint64_t);
  unint64_t v23;
  unint64_t v24;

  v5 = *(_QWORD *)(v4 + 32);
  v6 = *(_QWORD *)(v4 + 40);
  v7 = type metadata accessor for SFProgressTask(0, v5, v6, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v12 = type metadata accessor for SFProgressContinuation(0, v5, v6, v11);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v23 = (v9 + v10 + v14) & ~v14;
  v24 = (*(_QWORD *)(v13 + 64) + v14 + v23) & ~v14;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v15 = v4 + v9 + *(int *)(v7 + 36);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  v16 = sub_1A2AE3850();
  v22 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
  v22(v15, v16);
  v17 = v15 + *(int *)(v12 + 36);
  v18 = sub_1A2AE3820();
  v21 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8);
  v21(v17, v18);
  swift_release();
  v19 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v19(v15 + *(int *)(v12 + 44), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v22(v4 + v23, v16);
  v21(v4 + v23 + *(int *)(v12 + 36), v18);
  swift_release();
  v19(v4 + v23 + *(int *)(v12 + 44), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22(v4 + v24, v16);
  v21(v4 + v24 + *(int *)(v12 + 36), v18);
  swift_release();
  v19(v4 + v24 + *(int *)(v12 + 44), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A2AD7D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v7 = v4[4];
  v8 = v4[5];
  v9 = *(_QWORD *)(type metadata accessor for SFProgressTask(0, v7, v8, a4) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v13 = *(_QWORD *)(type metadata accessor for SFProgressContinuation(0, v7, v8, v12) - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (v10 + v11 + v14) & ~v14;
  v16 = v4[2];
  v17 = v4[3];
  v18 = (uint64_t)v4 + v10;
  v19 = (uint64_t)v4 + v15;
  v20 = (uint64_t)v4 + ((*(_QWORD *)(v13 + 64) + v14 + v15) & ~v14);
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v21;
  *v21 = v5;
  v21[1] = sub_1A2971EBC;
  return sub_1A2AD6EDC(a1, v16, v17, v18, v19, v20, v7, v8);
}

uint64_t objectdestroyTm_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(v4 + 32);
  v6 = type metadata accessor for SFProgressContinuation(0, v5, *(_QWORD *)(v4 + 40), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = (v7 + 64) & ~v7;
  swift_unknownObjectRelease();
  swift_release();
  v9 = v4 + v8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  v10 = sub_1A2AE3850();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v9 + *(int *)(v6 + 36);
  v12 = sub_1A2AE3820();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v9 + *(int *)(v6 + 44), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A2AD7F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v6 = *(_QWORD *)(v4 + 32);
  v7 = *(_QWORD *)(v4 + 40);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SFProgressContinuation(0, v6, v7, a4) - 8) + 80);
  v9 = v4 + ((v8 + 64) & ~v8);
  v10 = swift_task_alloc();
  v11 = *(_OWORD *)(v4 + 48);
  *(_QWORD *)(v5 + 16) = v10;
  *(_QWORD *)v10 = v5;
  *(_QWORD *)(v10 + 8) = sub_1A2972038;
  *(_QWORD *)(v10 + 40) = v6;
  *(_QWORD *)(v10 + 48) = v7;
  *(_QWORD *)(v10 + 32) = v9;
  *(_OWORD *)(v10 + 16) = v11;
  return swift_task_switch();
}

void sub_1A2AD7FD4()
{
  JUMPOUT(0x1A85895ECLL);
}

uint64_t sub_1A2AD7FE4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  result = sub_1A2AE3850();
  if (v1 <= 0x3F)
  {
    result = sub_1A2AE3820();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_1A2AD80E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)(a3 + 16);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
    v8 = sub_1A2AE3850();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = *(int *)(a3 + 36);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1A2AE3820();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = *(int *)(a3 + 44);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 40)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 40));
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    swift_retain();
    v16(v14, v15, v7);
    v17 = *(int *)(a3 + 48);
    v18 = *(int *)(a3 + 52);
    v19 = (uint64_t *)((char *)a1 + v17);
    v20 = (uint64_t *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = (uint64_t *)((char *)a1 + v18);
    v23 = (uint64_t *)((char *)a2 + v18);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 56)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 56));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1A2AD8240(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  v5 = sub_1A2AE3850();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  v6 = a1 + *(int *)(a2 + 36);
  v7 = sub_1A2AE3820();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1 + *(int *)(a2 + 44), v4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A2AD8324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v6 = *(_QWORD *)(a3 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  v7 = sub_1A2AE3850();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  v8 = *(int *)(a3 + 36);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1A2AE3820();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = *(int *)(a3 + 44);
  *(_QWORD *)(a1 + *(int *)(a3 + 40)) = *(_QWORD *)(a2 + *(int *)(a3 + 40));
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  swift_retain();
  v15(v13, v14, v6);
  v16 = *(int *)(a3 + 48);
  v17 = *(int *)(a3 + 52);
  v18 = (_QWORD *)(a1 + v16);
  v19 = (_QWORD *)(a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = (_QWORD *)(a1 + v17);
  v22 = (_QWORD *)(a2 + v17);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  *(_QWORD *)(a1 + *(int *)(a3 + 56)) = *(_QWORD *)(a2 + *(int *)(a3 + 56));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A2AD8450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  v6 = *(_QWORD *)(a3 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  v7 = sub_1A2AE3850();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(a1, a2, v7);
  v8 = *(int *)(a3 + 36);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1A2AE3820();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  *(_QWORD *)(a1 + *(int *)(a3 + 40)) = *(_QWORD *)(a2 + *(int *)(a3 + 40));
  swift_retain();
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44), v6);
  v12 = *(int *)(a3 + 48);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = *(int *)(a3 + 52);
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 56)) = *(_QWORD *)(a2 + *(int *)(a3 + 56));
  return a1;
}

uint64_t sub_1A2AD85AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)(a3 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  v7 = sub_1A2AE3850();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  v8 = *(int *)(a3 + 36);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1A2AE3820();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = *(int *)(a3 + 44);
  *(_QWORD *)(a1 + *(int *)(a3 + 40)) = *(_QWORD *)(a2 + *(int *)(a3 + 40));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1 + v12, a2 + v12, v6);
  v13 = *(int *)(a3 + 52);
  *(_OWORD *)(a1 + *(int *)(a3 + 48)) = *(_OWORD *)(a2 + *(int *)(a3 + 48));
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  *(_QWORD *)(a1 + *(int *)(a3 + 56)) = *(_QWORD *)(a2 + *(int *)(a3 + 56));
  return a1;
}

uint64_t sub_1A2AD86B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *(_QWORD *)(a3 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  v7 = sub_1A2AE3850();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(a1, a2, v7);
  v8 = *(int *)(a3 + 36);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1A2AE3820();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  *(_QWORD *)(a1 + *(int *)(a3 + 40)) = *(_QWORD *)(a2 + *(int *)(a3 + 40));
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44), v6);
  v12 = *(int *)(a3 + 48);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = *(int *)(a3 + 52);
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 56)) = *(_QWORD *)(a2 + *(int *)(a3 + 56));
  return a1;
}

uint64_t sub_1A2AD87E4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2AD87F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  v6 = *(_QWORD *)(a3 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  v7 = sub_1A2AE3850();
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == (_DWORD)a2)
  {
    v9 = v7;
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    v11 = a1;
LABEL_5:
    v14 = a2;
    return v10(v11, v14, v9);
  }
  v12 = sub_1A2AE3820();
  v13 = *(_QWORD *)(v12 - 8);
  if (*(_DWORD *)(v13 + 84) == (_DWORD)a2)
  {
    v9 = v12;
    v11 = a1 + *(int *)(a3 + 36);
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    goto LABEL_5;
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v11 = a1 + *(int *)(a3 + 44);
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48);
    v14 = a2;
    v9 = v6;
    return v10(v11, v14, v9);
  }
  v16 = *(_QWORD *)(a1 + *(int *)(a3 + 40));
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t sub_1A2AD8900()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2AD890C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8 = *(_QWORD *)(a4 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  v9 = sub_1A2AE3850();
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
  {
    v11 = v9;
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v13 = a1;
LABEL_5:
    v16 = a2;
    v17 = a2;
    return v12(v13, v16, v17, v11);
  }
  result = sub_1A2AE3820();
  v15 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v15 + 84) == a3)
  {
    v11 = result;
    v13 = a1 + *(int *)(a4 + 36);
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
    goto LABEL_5;
  }
  if (a3 != 0x7FFFFFFF)
  {
    v13 = a1 + *(int *)(a4 + 44);
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
    v16 = a2;
    v17 = a2;
    v11 = v8;
    return v12(v13, v16, v17, v11);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
  return result;
}

uint64_t sub_1A2AD8A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for SFProgressContinuation(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A2AD8AAC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *v4 = *a2;
    v4[1] = v7;
    v8 = *(int *)(a3 + 36);
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)(a3 + 16);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
    v12 = sub_1A2AE3850();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
    v14 = (int *)type metadata accessor for SFProgressContinuation(0, v11, *(_QWORD *)(a3 + 24), v13);
    v15 = v14[9];
    v16 = &v9[v15];
    v17 = &v10[v15];
    v18 = sub_1A2AE3820();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    *(_QWORD *)&v9[v14[10]] = *(_QWORD *)&v10[v14[10]];
    v19 = v14[11];
    v20 = &v9[v19];
    v21 = &v10[v19];
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain();
    v22(v20, v21, v11);
    v23 = v14[12];
    v24 = &v9[v23];
    v25 = &v10[v23];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    v27 = v14[13];
    v28 = &v9[v27];
    v29 = &v10[v27];
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    *(_QWORD *)&v9[v14[14]] = *(_QWORD *)&v10[v14[14]];
    v31 = *(int *)(a3 + 44);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 40)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 40));
    *(uint64_t *)((char *)v4 + v31) = *(uint64_t *)((char *)a2 + v31);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1A2AD8C60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = *(_QWORD *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  v6 = sub_1A2AE3850();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  v8 = type metadata accessor for SFProgressContinuation(0, v5, *(_QWORD *)(a2 + 24), v7);
  v9 = v4 + *(int *)(v8 + 36);
  v10 = sub_1A2AE3820();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + *(int *)(v8 + 44), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

_QWORD *sub_1A2AD8D88(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 36);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)(a3 + 16);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  v11 = sub_1A2AE3850();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
  v13 = (int *)type metadata accessor for SFProgressContinuation(0, v10, *(_QWORD *)(a3 + 24), v12);
  v14 = v13[9];
  v15 = &v8[v14];
  v16 = &v9[v14];
  v17 = sub_1A2AE3820();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  *(_QWORD *)&v8[v13[10]] = *(_QWORD *)&v9[v13[10]];
  v18 = v13[11];
  v19 = &v8[v18];
  v20 = &v9[v18];
  v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain();
  v21(v19, v20, v10);
  v22 = v13[12];
  v23 = &v8[v22];
  v24 = &v9[v22];
  v25 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = v25;
  v26 = v13[13];
  v27 = &v8[v26];
  v28 = &v9[v26];
  v29 = *((_QWORD *)v28 + 1);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *((_QWORD *)v27 + 1) = v29;
  *(_QWORD *)&v8[v13[14]] = *(_QWORD *)&v9[v13[14]];
  v30 = *(int *)(a3 + 44);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 40));
  *(_QWORD *)((char *)a1 + v30) = *(_QWORD *)((char *)a2 + v30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_1A2AD8F14(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = *(_QWORD *)(a3 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  v10 = sub_1A2AE3850();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v7, v8, v10);
  v12 = (int *)type metadata accessor for SFProgressContinuation(0, v9, *(_QWORD *)(a3 + 24), v11);
  v13 = v12[9];
  v14 = &v7[v13];
  v15 = &v8[v13];
  v16 = sub_1A2AE3820();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  *(_QWORD *)&v7[v12[10]] = *(_QWORD *)&v8[v12[10]];
  swift_retain();
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(&v7[v12[11]], &v8[v12[11]], v9);
  v17 = v12[12];
  v18 = &v7[v17];
  v19 = &v8[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = v12[13];
  v21 = &v7[v20];
  v22 = &v8[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v12[14]] = *(_QWORD *)&v8[v12[14]];
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 40));
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 44)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 44));
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1A2AD90F0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = *(_QWORD *)(a3 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  v10 = sub_1A2AE3850();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
  v12 = (int *)type metadata accessor for SFProgressContinuation(0, v9, *(_QWORD *)(a3 + 24), v11);
  v13 = v12[9];
  v14 = &v7[v13];
  v15 = &v8[v13];
  v16 = sub_1A2AE3820();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  *(_QWORD *)&v7[v12[10]] = *(_QWORD *)&v8[v12[10]];
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(&v7[v12[11]], &v8[v12[11]], v9);
  *(_OWORD *)&v7[v12[12]] = *(_OWORD *)&v8[v12[12]];
  *(_OWORD *)&v7[v12[13]] = *(_OWORD *)&v8[v12[13]];
  *(_QWORD *)&v7[v12[14]] = *(_QWORD *)&v8[v12[14]];
  v17 = *(int *)(a3 + 44);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 40));
  *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
  return a1;
}

_QWORD *sub_1A2AD9240(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 36);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)(a3 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  v11 = sub_1A2AE3850();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v8, v9, v11);
  v13 = (int *)type metadata accessor for SFProgressContinuation(0, v10, *(_QWORD *)(a3 + 24), v12);
  v14 = v13[9];
  v15 = &v8[v14];
  v16 = &v9[v14];
  v17 = sub_1A2AE3820();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  *(_QWORD *)&v8[v13[10]] = *(_QWORD *)&v9[v13[10]];
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(&v8[v13[11]], &v9[v13[11]], v10);
  v18 = v13[12];
  v19 = &v8[v18];
  v20 = &v9[v18];
  v22 = *(_QWORD *)v20;
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = v22;
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRelease();
  v23 = v13[13];
  v24 = &v8[v23];
  v25 = &v9[v23];
  v27 = *(_QWORD *)v25;
  v26 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v24 = v27;
  *((_QWORD *)v24 + 1) = v26;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v8[v13[14]] = *(_QWORD *)&v9[v13[14]];
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 40));
  swift_release();
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 44)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 44));
  swift_release();
  return a1;
}

uint64_t sub_1A2AD93D4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2AD93E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v9;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v5 = *(_QWORD *)(a1 + 8);
    if (v5 >= 0xFFFFFFFF)
      LODWORD(v5) = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for SFProgressContinuation(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v9);
  }
}

uint64_t sub_1A2AD9460()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A2AD946C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for SFProgressContinuation(0, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24), a4);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1A2AD94E4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

id *sub_1A2AD9574(id *a1, id *a2, uint64_t a3)
{
  id *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  char *v10;
  unsigned int v11;
  uint64_t v12;
  id v13;
  id v14;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v6 + 64) > v5)
    v5 = *(_QWORD *)(v6 + 64);
  if (v5 <= 8)
    v7 = 8;
  else
    v7 = v5;
  v8 = *(_DWORD *)(v6 + 80) | *(_DWORD *)(v4 + 80);
  if ((unint64_t)(v7 + 1) <= 0x18 && (v8 & 0x1000F8) == 0)
  {
    v11 = *((unsigned __int8 *)a2 + v7);
    if (v11 >= 3)
    {
      if (v7 <= 3)
        v12 = v7;
      else
        v12 = 4;
      __asm { BR              X15 }
    }
    if (v11 == 2)
    {
      v13 = *a2;
      v14 = *a2;
      *v3 = v13;
      *((_BYTE *)v3 + v7) = 2;
    }
    else if (v11 == 1)
    {
      (*(void (**)(id *))(v6 + 16))(a1);
      *((_BYTE *)v3 + v7) = 1;
    }
    else
    {
      (*(void (**)(id *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v7) = 0;
    }
  }
  else
  {
    v10 = (char *)*a2;
    *v3 = *a2;
    v3 = (id *)&v10[((v8 & 0xF8 | 7u) + 16) & ~(unint64_t)(v8 & 0xF8 | 7u)];
    swift_retain();
  }
  return v3;
}

void sub_1A2AD96DC(id *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  if (*(_QWORD *)(v4 + 64) > v3)
    v3 = *(_QWORD *)(v4 + 64);
  if (v3 <= 8)
    v3 = 8;
  v5 = *((unsigned __int8 *)a1 + v3);
  if (v5 < 3)
  {
    if (v5 == 2)
    {

    }
    else if (v5 == 1)
    {
      (*(void (**)(void))(v4 + 8))();
    }
    else
    {
      (*(void (**)(void))(v2 + 8))();
    }
  }
  else
  {
    if (v3 <= 3)
      v6 = v3;
    else
      v6 = 4;
    ((void (*)(void))((char *)&loc_1A2AD973C + 4 * byte_1A2B10075[v6]))();
  }
}

_QWORD *sub_1A2AD97A8(_QWORD *a1, id *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  char v10;
  id v11;
  id v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v6 + 64) > v5)
    v5 = *(_QWORD *)(v6 + 64);
  if (v5 <= 8)
    v7 = 8;
  else
    v7 = v5;
  v8 = *((unsigned __int8 *)a2 + v7);
  if (v8 >= 3)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X15 }
  }
  if (v8 == 2)
  {
    v11 = *a2;
    v12 = *a2;
    *a1 = v11;
    v10 = 2;
  }
  else if (v8 == 1)
  {
    (*(void (**)(_QWORD *))(v6 + 16))(a1);
    v10 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 16))(a1);
    v10 = 0;
  }
  *((_BYTE *)a1 + v7) = v10;
  return a1;
}

id *sub_1A2AD98C4(id *a1, void **a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  void (*v13)(void);
  unsigned int v14;
  uint64_t v15;
  char v16;
  void *v17;
  id v18;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(a3 + 24);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = *(_QWORD *)(v7 + 64);
    v9 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v9 + 64) > v8)
      v8 = *(_QWORD *)(v9 + 64);
    if (v8 <= 8)
      v10 = 8;
    else
      v10 = v8;
    v11 = *((unsigned __int8 *)a1 + v10);
    if (v11 >= 3)
    {
      if (v10 <= 3)
        v12 = v10;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 2)
    {

    }
    else
    {
      if (v11 == 1)
        v13 = *(void (**)(void))(v9 + 8);
      else
        v13 = *(void (**)(void))(v7 + 8);
      v13();
    }
    v14 = *((unsigned __int8 *)a2 + v10);
    if (v14 >= 3)
    {
      if (v10 <= 3)
        v15 = v10;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    if (v14 == 2)
    {
      v17 = *a2;
      v18 = v17;
      *a1 = v17;
      v16 = 2;
    }
    else if (v14 == 1)
    {
      (*(void (**)(id *, void **, uint64_t))(v9 + 16))(a1, a2, v6);
      v16 = 1;
    }
    else
    {
      (*(void (**)(id *, void **, uint64_t))(v7 + 16))(a1, a2, v5);
      v16 = 0;
    }
    *((_BYTE *)a1 + v10) = v16;
  }
  return a1;
}

_QWORD *sub_1A2AD9AAC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  char v10;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v6 + 64) > v5)
    v5 = *(_QWORD *)(v6 + 64);
  if (v5 <= 8)
    v7 = 8;
  else
    v7 = v5;
  v8 = *((unsigned __int8 *)a2 + v7);
  if (v8 >= 3)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X15 }
  }
  if (v8 == 2)
  {
    *a1 = *a2;
    v10 = 2;
  }
  else if (v8 == 1)
  {
    (*(void (**)(_QWORD *))(v6 + 32))(a1);
    v10 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 32))(a1);
    v10 = 0;
  }
  *((_BYTE *)a1 + v7) = v10;
  return a1;
}

id *sub_1A2AD9BB8(id *a1, id *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  void (*v13)(void);
  unsigned int v14;
  uint64_t v15;
  char v16;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(a3 + 24);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = *(_QWORD *)(v7 + 64);
    v9 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v9 + 64) > v8)
      v8 = *(_QWORD *)(v9 + 64);
    if (v8 <= 8)
      v10 = 8;
    else
      v10 = v8;
    v11 = *((unsigned __int8 *)a1 + v10);
    if (v11 >= 3)
    {
      if (v10 <= 3)
        v12 = v10;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 2)
    {

    }
    else
    {
      if (v11 == 1)
        v13 = *(void (**)(void))(v9 + 8);
      else
        v13 = *(void (**)(void))(v7 + 8);
      v13();
    }
    v14 = *((unsigned __int8 *)a2 + v10);
    if (v14 >= 3)
    {
      if (v10 <= 3)
        v15 = v10;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    if (v14 == 2)
    {
      *a1 = *a2;
      v16 = 2;
    }
    else if (v14 == 1)
    {
      (*(void (**)(id *, id *, uint64_t))(v9 + 32))(a1, a2, v6);
      v16 = 1;
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v7 + 32))(a1, a2, v5);
      v16 = 0;
    }
    *((_BYTE *)a1 + v10) = v16;
  }
  return a1;
}

uint64_t sub_1A2AD9D98(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  unsigned int v9;
  int v10;
  unsigned int v11;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64) > v3)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  v4 = 8;
  if (v3 > 8)
    v4 = v3;
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_23;
  v5 = v4 + 1;
  v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      v7 = *(_DWORD *)(a1 + v5);
      if (!v7)
        goto LABEL_23;
      goto LABEL_16;
    }
    if (v9 > 0xFF)
    {
      v7 = *(unsigned __int16 *)(a1 + v5);
      if (!*(_WORD *)(a1 + v5))
        goto LABEL_23;
      goto LABEL_16;
    }
    if (v9 < 2)
    {
LABEL_23:
      v11 = *(unsigned __int8 *)(a1 + v4);
      if (v11 >= 3)
        return (v11 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v7 = *(unsigned __int8 *)(a1 + v5);
  if (!*(_BYTE *)(a1 + v5))
    goto LABEL_23;
LABEL_16:
  v10 = (v7 - 1) << v6;
  if (v5 > 3)
    v10 = 0;
  if (!(_DWORD)v5)
    return (v10 + 254);
  if (v5 > 3)
    LODWORD(v5) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A2AD9E6C + 4 * byte_1A2B10098[(v5 - 1)]))();
}

void sub_1A2AD9EB8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64) > v5)
    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    v7 = 0u;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v8 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_1A2ADA070(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64) > v2)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64);
  v3 = 8;
  if (v2 > 8)
    v3 = v2;
  if (*(unsigned __int8 *)(a1 + v3) < 3u)
    return *(unsigned __int8 *)(a1 + v3);
  if (v3 <= 3)
    v4 = v3;
  else
    v4 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A2ADA0C8 + 4 * byte_1A2B100A6[v4]))();
}

void sub_1A2ADA110(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  int v9;

  if (a2 > 2)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64) > v5)
      v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
    if (v5 <= 8)
      v6 = 8;
    else
      v6 = v5;
    v7 = a2 - 3;
    if (v6 < 4)
    {
      v8 = v7 >> (8 * v6);
      v9 = v7 & ~(-1 << (8 * v6));
      a1[v6] = v8 + 3;
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *(_WORD *)a1 = v9;
        a1[2] = BYTE2(v9);
      }
      else if ((_DWORD)v6 == 2)
      {
        *(_WORD *)a1 = v9;
      }
      else
      {
        *a1 = v9;
      }
    }
    else
    {
      a1[v6] = 3;
      bzero(a1, v6);
      *(_DWORD *)a1 = v7;
    }
  }
  else
  {
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
    if (v4 <= *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64))
      v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
    if (v4 <= 8)
      v4 = 8;
    a1[v4] = a2;
  }
}

uint64_t sub_1A2ADA210()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v2 = *(int **)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1A2971EBC;
  v7 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  v5 = (_QWORD *)swift_task_alloc();
  v4[2] = v5;
  *v5 = v4;
  v5[1] = sub_1A2971EBC;
  return v7(v3);
}

void sub_1A2ADA29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v5 = type metadata accessor for SFProgressContinuation(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  SFProgressContinuation.cancel(_:)(0, v5);
}

uint64_t sub_1A2ADA2D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for SFProgressContinuation(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE6767B0);
  v9 = sub_1A2AE3850();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v8 + *(int *)(v6 + 36);
  v11 = sub_1A2AE3820();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8 + *(int *)(v6 + 44), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A2ADA3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for SFProgressContinuation(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  return SFProgressContinuation.yield(_:)(a1, v6, v7, v8);
}

ValueMetadata *type metadata accessor for SFAirDropReceive()
{
  return &type metadata for SFAirDropReceive;
}

uint64_t static NWParameters.airDropClientBrowserParameters(domain:type:bundleID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  xpc_object_t v8;
  size_t v9;
  uint64_t v10;
  xpc_object_t v11;
  size_t v12;
  uint64_t v13;

  v7 = sub_1A2AE32EC();
  sub_1A2AE32F8();
  v8 = xpc_array_create(0, 0);
  v9 = sub_1A2AE31E4();
  v10 = sub_1A2AE3490();
  xpc_array_set_string(v8, v9, (const char *)(v10 + 32));
  swift_release();
  v11 = xpc_array_create(0, 0);
  v12 = sub_1A2AE31E4();
  v13 = sub_1A2AE3490();
  xpc_array_set_string(v11, v12, (const char *)(v13 + 32));
  swift_release();
  nw_parameters_set_required_netagent_classes();
  if (a6)
  {
    sub_1A2AE3490();
    nw_parameters_set_attributed_bundle_identifier();
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v7;
}

uint64_t static NWParameters.airDropNetworkBrowserParameters(domain:type:)()
{
  uint64_t v0;
  xpc_object_t v1;
  size_t v2;
  uint64_t v3;
  xpc_object_t v4;
  size_t v5;
  uint64_t v6;

  v0 = sub_1A2AE32EC();
  sub_1A2AE32F8();
  v1 = xpc_array_create(0, 0);
  v2 = sub_1A2AE31E4();
  v3 = sub_1A2AE3490();
  xpc_array_set_string(v1, v2, (const char *)(v3 + 32));
  swift_release();
  v4 = xpc_array_create(0, 0);
  v5 = sub_1A2AE31E4();
  v6 = sub_1A2AE3490();
  xpc_array_set_string(v4, v5, (const char *)(v6 + 32));
  swift_release();
  swift_unknownObjectRetain();
  nw_parameters_set_required_netagent_classes();
  nw_parameters_set_include_ble();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease_n();
  return v0;
}

uint64_t SFNWInterfaceType.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A2ADA6D4
                                                            + 4 * asc_1A2B101E0[*v0]))(1818523489, 0xE400000000000000);
}

uint64_t sub_1A2ADA6D4()
{
  return 0x72616C756C6C6563;
}

uint64_t sub_1A2ADA6EC()
{
  return 0x6957746365726964;
}

uint64_t sub_1A2ADA70C()
{
  return 0x4669576C61636F6CLL;
}

uint64_t sub_1A2ADA728()
{
  return 0x726568746FLL;
}

uint64_t sub_1A2ADA73C()
{
  return 1768319351;
}

uint64_t sub_1A2ADA748()
{
  return 0x6465726977;
}

BOOL static SFNWInterfaceType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SFNWInterfaceType.hash(into:)()
{
  return sub_1A2AE4018();
}

uint64_t sub_1A2ADA798()
{
  sub_1A2ADB0B4();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2ADA7C0()
{
  sub_1A2ADB0B4();
  return sub_1A2AE4108();
}

uint64_t sub_1A2ADA7E8()
{
  sub_1A2ADB070();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2ADA810()
{
  sub_1A2ADB070();
  return sub_1A2AE4108();
}

uint64_t sub_1A2ADA83C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2ADC17C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A2ADA860(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1A2ADA86C()
{
  sub_1A2ADAED8();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2ADA894()
{
  sub_1A2ADAED8();
  return sub_1A2AE4108();
}

uint64_t sub_1A2ADA8BC()
{
  sub_1A2ADB02C();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2ADA8E4()
{
  sub_1A2ADB02C();
  return sub_1A2AE4108();
}

uint64_t sub_1A2ADA90C()
{
  sub_1A2ADAFE8();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2ADA934()
{
  sub_1A2ADAFE8();
  return sub_1A2AE4108();
}

uint64_t sub_1A2ADA95C()
{
  sub_1A2ADAFA4();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2ADA984()
{
  sub_1A2ADAFA4();
  return sub_1A2AE4108();
}

uint64_t sub_1A2ADA9AC()
{
  sub_1A2ADAF60();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2ADA9D4()
{
  sub_1A2ADAF60();
  return sub_1A2AE4108();
}

uint64_t sub_1A2ADA9FC()
{
  sub_1A2ADAF1C();
  return sub_1A2AE40FC();
}

uint64_t sub_1A2ADAA24()
{
  sub_1A2ADAF1C();
  return sub_1A2AE4108();
}

void SFNWInterfaceType.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[22];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6802A0);
  v17[16] = *(_QWORD *)(v3 - 8);
  v17[17] = v3;
  MEMORY[0x1E0C80A78](v3);
  v17[15] = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6802A8);
  v17[13] = *(_QWORD *)(v5 - 8);
  v17[14] = v5;
  MEMORY[0x1E0C80A78](v5);
  v17[12] = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6802B0);
  v17[10] = *(_QWORD *)(v7 - 8);
  v17[11] = v7;
  MEMORY[0x1E0C80A78](v7);
  v17[9] = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6802B8);
  v17[7] = *(_QWORD *)(v9 - 8);
  v17[8] = v9;
  MEMORY[0x1E0C80A78](v9);
  v17[6] = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6802C0);
  v17[4] = *(_QWORD *)(v11 - 8);
  v17[5] = v11;
  MEMORY[0x1E0C80A78](v11);
  v17[3] = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6802C8);
  v17[1] = *(_QWORD *)(v13 - 8);
  v17[2] = v13;
  MEMORY[0x1E0C80A78](v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6802D0);
  MEMORY[0x1E0C80A78](v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE6802D8);
  v17[19] = *(_QWORD *)(v15 - 8);
  v17[20] = v15;
  MEMORY[0x1E0C80A78](v15);
  v16 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A2ADAED8();
  sub_1A2AE40E4();
  __asm { BR              X9 }
}

uint64_t sub_1A2ADACC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 71) = 0;
  sub_1A2ADB0B4();
  v5 = *(_QWORD *)(v4 - 96);
  sub_1A2AE3DB4();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 104) + 8))(v1, v5);
}

unint64_t sub_1A2ADAED8()
{
  unint64_t result;

  result = qword_1EE6802E0;
  if (!qword_1EE6802E0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B109AC, &type metadata for SFNWInterfaceType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE6802E0);
  }
  return result;
}

unint64_t sub_1A2ADAF1C()
{
  unint64_t result;

  result = qword_1EE6802E8;
  if (!qword_1EE6802E8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B1095C, &type metadata for SFNWInterfaceType.WiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE6802E8);
  }
  return result;
}

unint64_t sub_1A2ADAF60()
{
  unint64_t result;

  result = qword_1EE6802F0;
  if (!qword_1EE6802F0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B1090C, &type metadata for SFNWInterfaceType.WifiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE6802F0);
  }
  return result;
}

unint64_t sub_1A2ADAFA4()
{
  unint64_t result;

  result = qword_1EE6802F8;
  if (!qword_1EE6802F8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B108BC, &type metadata for SFNWInterfaceType.OtherCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE6802F8);
  }
  return result;
}

unint64_t sub_1A2ADAFE8()
{
  unint64_t result;

  result = qword_1EE680300;
  if (!qword_1EE680300)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B1086C, &type metadata for SFNWInterfaceType.LocalWiFiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE680300);
  }
  return result;
}

unint64_t sub_1A2ADB02C()
{
  unint64_t result;

  result = qword_1EE680308;
  if (!qword_1EE680308)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B1081C, &type metadata for SFNWInterfaceType.DirectWiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE680308);
  }
  return result;
}

unint64_t sub_1A2ADB070()
{
  unint64_t result;

  result = qword_1EE680310;
  if (!qword_1EE680310)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B107CC, &type metadata for SFNWInterfaceType.CellularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE680310);
  }
  return result;
}

unint64_t sub_1A2ADB0B4()
{
  unint64_t result;

  result = qword_1EE680318;
  if (!qword_1EE680318)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B1077C, &type metadata for SFNWInterfaceType.AwdlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE680318);
  }
  return result;
}

uint64_t SFNWInterfaceType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;

  v50 = a2;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE680320);
  v41 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v49 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE680328);
  v38 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v45 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE680330);
  v39 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  MEMORY[0x1E0C80A78](v5);
  v48 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE680338);
  v36 = *(_QWORD *)(v7 - 8);
  v37 = v7;
  MEMORY[0x1E0C80A78](v7);
  v46 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE680340);
  v34 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  MEMORY[0x1E0C80A78](v9);
  v47 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE680348);
  v32 = *(_QWORD *)(v11 - 8);
  v33 = v11;
  MEMORY[0x1E0C80A78](v11);
  v44 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE680350);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE680358);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_1A2ADAED8();
  v22 = v52;
  sub_1A2AE40C0();
  if (!v22)
  {
    v30[2] = v16;
    v30[0] = v14;
    v30[1] = v13;
    v52 = v18;
    v31 = v17;
    v23 = v20;
    v24 = sub_1A2AE3D9C();
    if (*(_QWORD *)(v24 + 16) == 1)
      __asm { BR              X9 }
    v25 = sub_1A2AE3B5C();
    swift_allocError();
    v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE67AC00);
    *v27 = &type metadata for SFNWInterfaceType;
    v28 = v31;
    sub_1A2AE3CF4();
    sub_1A2AE3B50();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x1E0DEC450], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v23, v28);
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v51);
}

void sub_1A2ADB52C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 70) = 1;
  sub_1A2ADB070();
  v4 = *(_QWORD *)(v3 - 160);
  v5 = *(_QWORD *)(v3 - 264);
  sub_1A2AE3CE8();
  if (!v2)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 256) + 8))(v4, *(_QWORD *)(v3 - 248));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v5);
    JUMPOUT(0x1A2ADB7B0);
  }
  swift_bridgeObjectRelease();
  JUMPOUT(0x1A2ADB4FCLL);
}

uint64_t sub_1A2ADB7B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SFNWInterfaceType.init(from:)(a1, a2);
}

void sub_1A2ADB7CC(_QWORD *a1)
{
  SFNWInterfaceType.encode(to:)(a1);
}

uint64_t sub_1A2ADB7E0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A2ADB808 + 4 * byte_1A2B101F5[*v0]))(1818523489, 0xE400000000000000);
}

uint64_t sub_1A2ADB808()
{
  return 0x72616C756C6C6563;
}

uint64_t sub_1A2ADB820()
{
  return 0x6957746365726964;
}

uint64_t sub_1A2ADB840()
{
  return 0x4669576C61636F6CLL;
}

uint64_t sub_1A2ADB85C()
{
  return 0x726568746FLL;
}

uint64_t sub_1A2ADB870()
{
  return 1768319351;
}

uint64_t sub_1A2ADB87C()
{
  return 0x6465726977;
}

uint64_t SFNWInterfaceTypeCategory.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6465726977;
  if (*v0 != 1)
    v1 = 0x72616C75676572;
  if (*v0)
    return v1;
  else
    return 0x72616C756C6C6563;
}

uint64_t sub_1A2ADB8EC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6465726977;
  if (*v0 != 1)
    v1 = 0x72616C75676572;
  if (*v0)
    return v1;
  else
    return 0x72616C756C6C6563;
}

Sharing::SFNWInterfaceTypeCategory __swiftcall SFNWInterfaceType.category()()
{
  char *v0;
  unsigned __int8 *v1;
  unint64_t v2;
  char v3;
  Sharing::SFNWInterfaceTypeCategory result;

  v2 = *v1;
  if (v2 >= 7)
    v3 = 2;
  else
    v3 = 0x1020202010002uLL >> (8 * v2);
  *v0 = v3;
  return result;
}

unint64_t sub_1A2ADB978()
{
  unint64_t result;

  result = qword_1EE680360;
  if (!qword_1EE680360)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFNWInterfaceType, &type metadata for SFNWInterfaceType);
    atomic_store(result, (unint64_t *)&qword_1EE680360);
  }
  return result;
}

unint64_t sub_1A2ADB9C0()
{
  unint64_t result;

  result = qword_1EE680368;
  if (!qword_1EE680368)
  {
    result = MEMORY[0x1A85895EC](&protocol conformance descriptor for SFNWInterfaceTypeCategory, &type metadata for SFNWInterfaceTypeCategory);
    atomic_store(result, (unint64_t *)&qword_1EE680368);
  }
  return result;
}

ValueMetadata *type metadata accessor for SFNWInterfaceType()
{
  return &type metadata for SFNWInterfaceType;
}

uint64_t storeEnumTagSinglePayload for SFNWInterfaceTypeCategory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A2ADBA68 + 4 * byte_1A2B10201[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A2ADBA9C + 4 * byte_1A2B101FC[v4]))();
}

uint64_t sub_1A2ADBA9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2ADBAA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2ADBAACLL);
  return result;
}

uint64_t sub_1A2ADBAB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2ADBAC0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A2ADBAC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2ADBACC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SFNWInterfaceTypeCategory()
{
  return &type metadata for SFNWInterfaceTypeCategory;
}

uint64_t _s7Sharing17SFNWInterfaceTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s7Sharing17SFNWInterfaceTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1A2ADBBC4 + 4 * byte_1A2B1020B[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1A2ADBBF8 + 4 * byte_1A2B10206[v4]))();
}

uint64_t sub_1A2ADBBF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2ADBC00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2ADBC08);
  return result;
}

uint64_t sub_1A2ADBC14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2ADBC1CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1A2ADBC20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2ADBC28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SFNWInterfaceType.CodingKeys()
{
  return &type metadata for SFNWInterfaceType.CodingKeys;
}

ValueMetadata *type metadata accessor for SFNWInterfaceType.AwdlCodingKeys()
{
  return &type metadata for SFNWInterfaceType.AwdlCodingKeys;
}

ValueMetadata *type metadata accessor for SFNWInterfaceType.CellularCodingKeys()
{
  return &type metadata for SFNWInterfaceType.CellularCodingKeys;
}

ValueMetadata *type metadata accessor for SFNWInterfaceType.DirectWiredCodingKeys()
{
  return &type metadata for SFNWInterfaceType.DirectWiredCodingKeys;
}

ValueMetadata *type metadata accessor for SFNWInterfaceType.LocalWiFiCodingKeys()
{
  return &type metadata for SFNWInterfaceType.LocalWiFiCodingKeys;
}

ValueMetadata *type metadata accessor for SFNWInterfaceType.OtherCodingKeys()
{
  return &type metadata for SFNWInterfaceType.OtherCodingKeys;
}

ValueMetadata *type metadata accessor for SFNWInterfaceType.WifiCodingKeys()
{
  return &type metadata for SFNWInterfaceType.WifiCodingKeys;
}

ValueMetadata *type metadata accessor for SFNWInterfaceType.WiredCodingKeys()
{
  return &type metadata for SFNWInterfaceType.WiredCodingKeys;
}

unint64_t sub_1A2ADBCB8()
{
  unint64_t result;

  result = qword_1EE680370;
  if (!qword_1EE680370)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B10754, &type metadata for SFNWInterfaceType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE680370);
  }
  return result;
}

unint64_t sub_1A2ADBD00()
{
  unint64_t result;

  result = qword_1EE680378;
  if (!qword_1EE680378)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B10674, &type metadata for SFNWInterfaceType.AwdlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE680378);
  }
  return result;
}

unint64_t sub_1A2ADBD48()
{
  unint64_t result;

  result = qword_1EE680380;
  if (!qword_1EE680380)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B1069C, &type metadata for SFNWInterfaceType.AwdlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE680380);
  }
  return result;
}

unint64_t sub_1A2ADBD90()
{
  unint64_t result;

  result = qword_1EE680388;
  if (!qword_1EE680388)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B10624, &type metadata for SFNWInterfaceType.CellularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE680388);
  }
  return result;
}

unint64_t sub_1A2ADBDD8()
{
  unint64_t result;

  result = qword_1EE680390;
  if (!qword_1EE680390)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B1064C, &type metadata for SFNWInterfaceType.CellularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE680390);
  }
  return result;
}

unint64_t sub_1A2ADBE20()
{
  unint64_t result;

  result = qword_1EE680398;
  if (!qword_1EE680398)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B105D4, &type metadata for SFNWInterfaceType.DirectWiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE680398);
  }
  return result;
}

unint64_t sub_1A2ADBE68()
{
  unint64_t result;

  result = qword_1EE6803A0;
  if (!qword_1EE6803A0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B105FC, &type metadata for SFNWInterfaceType.DirectWiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE6803A0);
  }
  return result;
}

unint64_t sub_1A2ADBEB0()
{
  unint64_t result;

  result = qword_1EE6803A8;
  if (!qword_1EE6803A8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B10584, &type metadata for SFNWInterfaceType.LocalWiFiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE6803A8);
  }
  return result;
}

unint64_t sub_1A2ADBEF8()
{
  unint64_t result;

  result = qword_1EE6803B0;
  if (!qword_1EE6803B0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B105AC, &type metadata for SFNWInterfaceType.LocalWiFiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE6803B0);
  }
  return result;
}

unint64_t sub_1A2ADBF40()
{
  unint64_t result;

  result = qword_1EE6803B8;
  if (!qword_1EE6803B8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B10534, &type metadata for SFNWInterfaceType.OtherCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE6803B8);
  }
  return result;
}

unint64_t sub_1A2ADBF88()
{
  unint64_t result;

  result = qword_1EE6803C0;
  if (!qword_1EE6803C0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B1055C, &type metadata for SFNWInterfaceType.OtherCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE6803C0);
  }
  return result;
}

unint64_t sub_1A2ADBFD0()
{
  unint64_t result;

  result = qword_1EE6803C8;
  if (!qword_1EE6803C8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B104E4, &type metadata for SFNWInterfaceType.WifiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE6803C8);
  }
  return result;
}

unint64_t sub_1A2ADC018()
{
  unint64_t result;

  result = qword_1EE6803D0;
  if (!qword_1EE6803D0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B1050C, &type metadata for SFNWInterfaceType.WifiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE6803D0);
  }
  return result;
}

unint64_t sub_1A2ADC060()
{
  unint64_t result;

  result = qword_1EE6803D8;
  if (!qword_1EE6803D8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B10494, &type metadata for SFNWInterfaceType.WiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE6803D8);
  }
  return result;
}

unint64_t sub_1A2ADC0A8()
{
  unint64_t result;

  result = qword_1EE6803E0;
  if (!qword_1EE6803E0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B104BC, &type metadata for SFNWInterfaceType.WiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE6803E0);
  }
  return result;
}

unint64_t sub_1A2ADC0F0()
{
  unint64_t result;

  result = qword_1EE6803E8;
  if (!qword_1EE6803E8)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B106C4, &type metadata for SFNWInterfaceType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE6803E8);
  }
  return result;
}

unint64_t sub_1A2ADC138()
{
  unint64_t result;

  result = qword_1EE6803F0;
  if (!qword_1EE6803F0)
  {
    result = MEMORY[0x1A85895EC](&unk_1A2B106EC, &type metadata for SFNWInterfaceType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE6803F0);
  }
  return result;
}

uint64_t sub_1A2ADC17C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1818523489 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72616C756C6C6563 && a2 == 0xE800000000000000 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6957746365726964 && a2 == 0xEB00000000646572 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4669576C61636F6CLL && a2 == 0xE900000000000069 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726568746FLL && a2 == 0xE500000000000000 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1768319351 && a2 == 0xE400000000000000 || (sub_1A2AE3EE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6465726977 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1A2AE3EE0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_1A2ADC45C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self();
}

void SFBrowserCreate_cold_1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_0(&dword_1A2830000, v0, v1, "SFBrowserCreate (alloc = %p, kind = %@)");
  OUTLINED_FUNCTION_3();
}

void SFBrowserSetDispatchQueue_cold_1()
{
  uint64_t v0;
  os_log_t v1;
  const void *v2;
  const void *v3;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1A2830000, v0, v1, "SFBrowserSetDispatchQueue (browser = %p, queue = %p)", v2, v3);
  OUTLINED_FUNCTION_3();
}

void SFBrowserSetMode_cold_1()
{
  int v0;
  os_log_t v1;
  uint8_t v2[12];
  __int16 v3;
  int v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_7();
  v3 = 1024;
  v4 = v0;
  _os_log_debug_impl(&dword_1A2830000, v1, OS_LOG_TYPE_DEBUG, "SFBrowserSetMode (browser = %p, mode = %d)", v2, 0x12u);
  OUTLINED_FUNCTION_3();
}

void SFBrowserSetOptions_cold_1()
{
  uint64_t v0;
  os_log_t v1;
  const void *v2;
  const void *v3;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1A2830000, v0, v1, "SFBrowserSetOptions (browser = %p, mode = %p)", v2, v3);
  OUTLINED_FUNCTION_3();
}

void SFBrowserScheduleWithRunLoop_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "SFBrowserScheduleWithRunLoop is unimplemented.  Use SFBrowserSetDispatchQueue instead.", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFBrowserGetRootNode_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_4(&dword_1A2830000, v0, v1, "SFBrowserGetRootNode (browser = %p)", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

void SFBrowserCopyChildren_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_4(&dword_1A2830000, v0, v1, "%@", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

void SFBrowserCopyChildren_cold_2()
{
  uint64_t v0;
  os_log_t v1;
  const void *v2;
  const void *v3;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1A2830000, v0, v1, "SFBrowserCopyChildren (browser = %p, node = %p)", v2, v3);
  OUTLINED_FUNCTION_3();
}

void SFBrowserCopySidebarChildren_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_4(&dword_1A2830000, v0, v1, "SFBrowserCopySidebarChildren (browser = %p)", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

void SFBrowserOpenNode_cold_1()
{
  uint64_t v0;
  os_log_t v1;
  const void *v2;
  const void *v3;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1A2830000, v0, v1, "SFBrowserOpenNode (browser = %p, node = %p)", v2, v3);
  OUTLINED_FUNCTION_3();
}

void SFBrowserAddNode_cold_1()
{
  uint64_t v0;
  os_log_t v1;
  const void *v2;
  const void *v3;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1A2830000, v0, v1, "SFBrowserAddNode (browser = %p, node = %p)", v2, v3);
  OUTLINED_FUNCTION_3();
}

void SFBrowserRemoveNode_cold_1()
{
  uint64_t v0;
  os_log_t v1;
  const void *v2;
  const void *v3;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1A2830000, v0, v1, "SFBrowserRemoveNode (browser = %p, node = %p)", v2, v3);
  OUTLINED_FUNCTION_3();
}

void SFBrowserCloseNode_cold_1()
{
  uint64_t v0;
  os_log_t v1;
  const void *v2;
  const void *v3;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1A2830000, v0, v1, "SFBrowserCloseNode (browser = %p, node = %p)", v2, v3);
  OUTLINED_FUNCTION_3();
}

void SFBrowserInvalidate_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_4(&dword_1A2830000, v0, v1, "SFBrowserInvalidate (browser = %p)", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

void SFBrowserCopyNodeForURL_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "SFBrowserCopyNodeForURL invalid scheme", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFBrowserCopyNodeForURL_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "SFBrowserCopyNodeForURL hostPart is NULL", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFBrowserCopyNodeForURL_cold_3()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "SFBrowserCopyNodeForURL namePart is NULL", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFBrowserCopyNodeForURL_cold_4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "SFBrowserCopyNodeForURL unrecognized URL host prefix", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFBrowserCopyNodeForURL_cold_5()
{
  uint64_t v0;
  os_log_t v1;
  const void *v2;
  const void *v3;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1A2830000, v0, v1, "SFBrowserCopyNodeForURL (browser = %p, nodeURL = %p)", v2, v3);
  OUTLINED_FUNCTION_3();
}

void _SFNodeCreateWithXPCObject_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "xpcDictionaryCopyCFDictionaryForKey result is not a dictionary", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void _SFNodeCreateWithXPCObject_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "xpcDictionaryCopyCFDictionaryForKey xpcNode is not a dictionary", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void xpcDictionaryCopyCFStringForKey()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "xpcDictionaryCopyCFStringForKey result is not a string", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "xpcDictionaryCopyCFStringForKey xpcNode is not a dictionary", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void xpcDictionaryCopyCFArrayForKey()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "xpcDictionaryCopyCFArrayForKey result is not a array", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "xpcDictionaryCopyCFArrayForKey xpcNode is not a dictionary", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void xpcDictionaryCopyCFDataForKey()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "xpcDictionaryCopyCFDataForKey result is not a data", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "xpcDictionaryCopyCFDataForKey xpcNode is not a dictionary", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void xpcDictionaryCopyCFNumberForKey()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "xpcDictionaryCopyCFNumberForKey result is not a number", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "xpcDictionaryCopyCFNumberForKey xpcNode is not a dictionary", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void xpcDictionaryCopyCFURLForKey()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "xpcDictionaryCopyCFURLForKey result is not a url", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "xpcDictionaryCopyCFURLForKey xpcNode is not a dictionary", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void __getCKContainerIDClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCKContainerIDClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SFCollaborationCloudSharingMailRequest.m"), 20, CFSTR("Unable to find class %s"), "CKContainerID");

  __break(1u);
}

void CloudKitLibrary_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CloudKitLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SFCollaborationCloudSharingMailRequest.m"), 18, CFSTR("%s"), *a1);

  __break(1u);
}

void __getCKShareClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCKShareClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SFCollaborationCloudSharingMailRequest.m"), 21, CFSTR("Unable to find class %s"), "CKShare");

  __break(1u);
}

void __getCKContainerSetupInfoClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCKContainerSetupInfoClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SFCollaborationCloudSharingMailRequest.m"), 19, CFSTR("Unable to find class %s"), "CKContainerSetupInfo");

  __break(1u);
}

void SFOperationCreate_cold_1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_0(&dword_1A2830000, v0, v1, "SFOperationCreate (alloc = %p, kind = %@)");
  OUTLINED_FUNCTION_3();
}

void _SFOperationCreateInternal_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_4(&dword_1A2830000, v0, v1, "SFOperationCreate (kind = %@)", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

void SFOperationSetDispatchQueue_cold_1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_0(&dword_1A2830000, v0, v1, "SFOperationSetDispatchQueue (%@, queue = %p)");
  OUTLINED_FUNCTION_3();
}

void SFOperationCopyProperty_cold_1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_0(&dword_1A2830000, v0, v1, "SFOperationCopyProperty (%@, name = %@)");
  OUTLINED_FUNCTION_3();
}

void SFOperationResume_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_4(&dword_1A2830000, v0, v1, "SFOperationResume (%@)", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

void SFOperationCancel_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_4(&dword_1A2830000, v0, v1, "SFOperationCancel (%@)", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

void _SFOperationAddSandboxExtensionForFileURL_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_6_0(&dword_1A2830000, v0, v1, "CFURLCopyFileSystemPath failed for file \"%@\"", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

void _SFOperationAddSandboxExtensionForFileURL_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_6_0(&dword_1A2830000, v0, v1, "CFStringGetCString failed for file \"%@\"", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

void _SFOperationAddSandboxExtensionForFileURL_cold_3(uint64_t a1, NSObject *a2)
{
  int v4;
  int v5;
  uint64_t v6;
  __int16 v7;
  int v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v4 = *__error();
  v5 = 136315394;
  v6 = a1;
  v7 = 1024;
  v8 = v4;
  _os_log_error_impl(&dword_1A2830000, a2, OS_LOG_TYPE_ERROR, "sandbox_extension_issue_file failed for file \"%s\" with error %d", (uint8_t *)&v5, 0x12u);
}

void createURL_cold_1(uint64_t *a1, NSObject *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v2 = *a1;
  v3 = 138412290;
  v4 = v2;
  _os_log_error_impl(&dword_1A2830000, a2, OS_LOG_TYPE_ERROR, "createURL: CFURLSetResourcePropertyForKey %@", (uint8_t *)&v3, 0xCu);
}

void createCGImageWithURL_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "createCGImageWithData: CGImageSourceCreateWithURL returned NULL", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void createCGImageWithURL_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "createCGImageWithURL: CGImageSourceGetCount returned zero", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void createCGImageWithDataInternal_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "createCGImageWithDataInternal: CGImageSourceCreateWithData returned NULL", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void createCGImageWithDataInternal_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "createCGImageWithDataInternal: CGImageSourceGetCount returned zero", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void createCGImageWithDataInternal_cold_3()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "createCGImageWithDataInternal: CGImageSourceGetType image format invalid", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void createCGImageWithDataInternal_cold_4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "createCGImageWithDataInternal: CGImageSourceCreateImageAtIndex (requireJPEG2000) returned NULL", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void createCGImageWithDataInternal_cold_5()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "createCGImageWithDataInternal: CGImageSourceCreateImageAtIndex returned NULL", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void createCGImageWithDataOrURL_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "createCGImageWithDataOrURL: CGImageSourceCreate returned NULL", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void createCGImageWithDataOrURL_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "createCGImageWithDataOrURL: CGImageSourceGetCount returned zero", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void copyImageData_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "copyImageData: CGImageDestinationCreateWithData returned NULL", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void copyImageData_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "copyImageData: CGImageDestinationFinalize failed", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void createImageDataWithSize_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "createImageDataWithSize: CGColorSpaceCreateDeviceRGB returned NULL", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void createImageDataWithSize_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "createImageDataWithSize: CGImageCreateCopyWithColorSpace returned NULL", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void createImageDataWithSize_cold_3()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "createImageDataWithSize: CGImageCreateThumb returned NULL", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFIsBluetoothEnabled_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_6_0(&dword_1A2830000, v0, v1, "Bluetooth controller failed to fetch controller info with error: %@", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

void SFCreateLivePhotoBundle_cold_1(void *a1, uint64_t a2, NSObject *a3)
{
  void *v5;
  uint8_t v6[12];
  __int16 v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "path");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_7();
  v7 = 2112;
  v8 = a2;
  _os_log_error_impl(&dword_1A2830000, a3, OS_LOG_TYPE_ERROR, "Failed write live photo bundle to %@ (%@)", v6, 0x16u);

  OUTLINED_FUNCTION_5_0();
}

void SFIsiCloudFamilyLink_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  objc_msgSend(a1, "scheme");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_7_0(&dword_1A2830000, v2, v3, "Overridden URL scheme %@", v4, v5, v6, v7, v8);

}

void SFIsiCloudFamilyLink_cold_2(uint64_t a1, void *a2, NSObject *a3)
{
  void *v5;
  int v6;
  uint64_t v7;
  __int16 v8;
  void *v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a2, "description");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = 138412546;
  v7 = a1;
  v8 = 2112;
  v9 = v5;
  _os_log_debug_impl(&dword_1A2830000, a3, OS_LOG_TYPE_DEBUG, "Failed to create appLink for URL - %@ with error - %@", (uint8_t *)&v6, 0x16u);

  OUTLINED_FUNCTION_5_0();
}

void SFIsiCloudFamilyLink_cold_3(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t v9;

  objc_msgSend(a1, "targetApplicationProxy");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "bundleIdentifier");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_7_0(&dword_1A2830000, v3, v4, "Applink created with bundleID %@", v5, v6, v7, v8, v9);

  OUTLINED_FUNCTION_5_0();
}

void SFEncryptData_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "### SecKeyCreateEncryptedData failed", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFSharablePasswordForAirDropURL_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "### No hexString in URL?", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFSharablePasswordForAirDropURL_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "### Failed to grab credential data", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFSharablePasswordForAirDropURL_cold_3()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "### Failed to deserialize credential data", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFDecryptData_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "### SFDecryptData failed: no data", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFDecryptData_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "### SFDecryptData failed: no private key", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFDecryptData_cold_3()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "### SFDecryptData failed: SecKeyCreateDecryptedData failed", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFFullTextFromRTIDataPayload_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "### Failed to create RTI input system data payload", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFFullTextFromRTIDataPayload_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "### Failed to get TI Document State", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFMinorWatchHardwareVersion_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "Can not query Watch's minor hardware version!", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFRemoteDeviceCanConnectOn5GHz_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "Can not query Watch's major hardware version!", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFRemoteTextInputPayloadFromLegacyAPI_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "### Failed to convert legacy API -> RTI payload", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFRemoteTextInputPayloadFromLegacyAPI_cold_2(int a1, NSObject *a2)
{
  _DWORD v2[2];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl(&dword_1A2830000, a2, OS_LOG_TYPE_ERROR, "### Unrecognized opCode: %d", (uint8_t *)v2, 8u);
  OUTLINED_FUNCTION_5();
}

void SFRemoteTextInputPayloadFromLegacyAPI_cold_3()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "### Insert text without string?", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFRemoteTextInputPayloadFromLegacyAPI_cold_4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "### Set text without string?", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFRemoteTextInputPayloadFromLegacyAPI_cold_5()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "### Text did change without string?", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFRemoteTextInputPayloadToLegacyAPI_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "### Failed to convert RTI payload -> legacy API", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFRTIDataPayloadForData_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_6_0(&dword_1A2830000, v0, v1, "### Error getting RTIDataPayload from data: %@", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

void SFAirDropDownloadsURL_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_6_0(&dword_1A2830000, v0, v1, "SFDownloadsURL: failed to get Downloads directory with error %@", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

void SFRealpathForFileURL_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_6_0(&dword_1A2830000, v0, v1, "SFRealpathForFileURL: failed to get file system representation for %@", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

void SFRealpathForFileURL_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "SFRealpathForFileURL: failed to get file system representation", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFRealpathForFileURL_cold_3(uint64_t a1, int *a2, uint8_t *buf, os_log_t log)
{
  int v4;

  v4 = *a2;
  *(_DWORD *)buf = 136315394;
  *(_QWORD *)(buf + 4) = a1;
  *((_WORD *)buf + 6) = 1024;
  *(_DWORD *)(buf + 14) = v4;
  _os_log_fault_impl(&dword_1A2830000, log, OS_LOG_TYPE_FAULT, "SFRealpathForFileURL: realpath for %s failed: %d", buf, 0x12u);
}

void SFRealpathForFileURL_cold_4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_6_0(&dword_1A2830000, v0, v1, "SFRealpathForFileURL: paramater is not a file URL. (%@)", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

void SFCreateThumbnailForAirDropItem_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "SFCreateThumbnailForAirDropItem failed to generate icon", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFCreateThumbnailForAirDropItem_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_2(&dword_1A2830000, v0, v1, "Thumbnail generation timed out!", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_5();
}

void SFAirDropModelImageNameFromModelString_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_6_0(&dword_1A2830000, v0, v1, "No icon data for model: %@", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_3();
}

void __getSLCollaborationFooterViewModelClass_block_invoke_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *SocialLayerLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SFCollaborationItem.m"), 32, CFSTR("%s"), *a1);

  __break(1u);
}

void __getSLCollaborationFooterViewModelClass_block_invoke_cold_2()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getSLCollaborationFooterViewModelClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SFCollaborationItem.m"), 33, CFSTR("Unable to find class %s"), "SLCollaborationFooterViewModel");

  __break(1u);
}

void SharedWithYouCoreLibrary_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *SharedWithYouCoreLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SFCollaborationUtilities.m"), 119, CFSTR("%s"), *a1);

  __break(1u);
}

void get_CKCloudKitPreShareType_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSString *get_CKCloudKitPreShareType(void)");
  objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v0, CFSTR("SFCollaborationUtilities.m"), 74, CFSTR("%s"), OUTLINED_FUNCTION_7_1());

  __break(1u);
}

void get_CKCloudKitPostShareType_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSString *get_CKCloudKitPostShareType(void)");
  objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v0, CFSTR("SFCollaborationUtilities.m"), 75, CFSTR("%s"), OUTLINED_FUNCTION_7_1());

  __break(1u);
}

void soft_CKSharingAccessTypeFromOptionsGroups_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CKShareParticipantPermission soft_CKSharingAccessTypeFromOptionsGroups(NSArray<_SWCollaborationOptionsGroup *> *__strong)");
  objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v0, CFSTR("SFCollaborationUtilities.m"), 83, CFSTR("%s"), OUTLINED_FUNCTION_7_1());

  __break(1u);
}

void getCKShareTitleKey_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSString *getCKShareTitleKey(void)");
  objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v0, CFSTR("SFCollaborationUtilities.m"), 101, CFSTR("%s"), OUTLINED_FUNCTION_7_1());

  __break(1u);
}

void get_SWPendingCollaborationTypeIdentifier_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSString *get_SWPendingCollaborationTypeIdentifier(void)");
  objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v0, CFSTR("SFCollaborationUtilities.m"), 123, CFSTR("%s"), OUTLINED_FUNCTION_7_1());

  __break(1u);
}

void getUTCollaborationOptionsTypeIdentifier_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSString *getUTCollaborationOptionsTypeIdentifier(void)");
  objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v0, CFSTR("SFCollaborationUtilities.m"), 124, CFSTR("%s"), OUTLINED_FUNCTION_7_1());

  __break(1u);
}

void getCKErrorDomain_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSString *getCKErrorDomain(void)");
  objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v0, CFSTR("SFCollaborationUtilities.m"), 77, CFSTR("%s"), OUTLINED_FUNCTION_7_1());

  __break(1u);
}

void __getFPItemManagerClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getFPItemManagerClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SFCollaborationUtilities.m"), 53, CFSTR("Unable to find class %s"), "FPItemManager");

  __break(1u);
}

void FileProviderLibrary_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *FileProviderLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SFCollaborationUtilities.m"), 52, CFSTR("%s"), *a1);

  __break(1u);
}

void CloudKitLibrary_cold_1_0(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CloudKitLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SFCollaborationUtilities.m"), 72, CFSTR("%s"), *a1);

  __break(1u);
}

void __getCKAllowedSharingOptionsClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCKAllowedSharingOptionsClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SFCollaborationUtilities.m"), 82, CFSTR("Unable to find class %s"), "CKAllowedSharingOptions");

  __break(1u);
}

void __getCloudSharingClass_block_invoke_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CloudSharingLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SFCollaborationUtilities.m"), 44, CFSTR("%s"), *a1);

  __break(1u);
}

void __getCloudSharingClass_block_invoke_cold_2()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCloudSharingClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SFCollaborationUtilities.m"), 45, CFSTR("Unable to find class %s"), "CloudSharing");

  __break(1u);
}

void __getCKPostSharingContextClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCKPostSharingContextClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SFCollaborationUtilities.m"), 100, CFSTR("Unable to find class %s"), "CKPostSharingContext");

  __break(1u);
}

void __getCKPreSharingContextClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCKPreSharingContextClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SFCollaborationUtilities.m"), 99, CFSTR("Unable to find class %s"), "CKPreSharingContext");

  __break(1u);
}

void __getCKContainerSetupInfoClass_block_invoke_cold_1_0()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCKContainerSetupInfoClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SFCollaborationUtilities.m"), 80, CFSTR("Unable to find class %s"), "CKContainerSetupInfo");

  __break(1u);
}

void __getLPiCloudSharingMetadataClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getLPiCloudSharingMetadataClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SFCollaborationUtilities.m"), 108, CFSTR("Unable to find class %s"), "LPiCloudSharingMetadata");

  __break(1u);
}

void LinkPresentationLibrary_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *LinkPresentationLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SFCollaborationUtilities.m"), 107, CFSTR("%s"), *a1);

  __break(1u);
}

void __getLPImageClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getLPImageClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SFCollaborationUtilities.m"), 109, CFSTR("Unable to find class %s"), "LPImage");

  __break(1u);
}

void __getLPSharedObjectMetadataClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getLPSharedObjectMetadataClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SFCollaborationUtilities.m"), 111, CFSTR("Unable to find class %s"), "LPSharedObjectMetadata");

  __break(1u);
}

void __getLPLinkMetadataClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getLPLinkMetadataClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SFCollaborationUtilities.m"), 110, CFSTR("Unable to find class %s"), "LPLinkMetadata");

  __break(1u);
}

void __getFPProviderDomainClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getFPProviderDomainClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SFCollaborationUtilities.m"), 54, CFSTR("Unable to find class %s"), "FPProviderDomain");

  __break(1u);
}

void __getCNContactClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCNContactClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SFPeopleSuggestion.m"), 18, CFSTR("Unable to find class %s"), "CNContact");

  __break(1u);
}

void ContactsLibrary_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *ContactsLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SFPeopleSuggestion.m"), 17, CFSTR("%s"), *a1);

  __break(1u);
}

void __getCNMutableContactClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCNMutableContactClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SFPeopleSuggestion.m"), 19, CFSTR("Unable to find class %s"), "CNMutableContact");

  __break(1u);
}

void __getINImageClass_block_invoke_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *IntentsLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SFPeopleSuggestion.m"), 21, CFSTR("%s"), *a1);

  __break(1u);
}

void __getINImageClass_block_invoke_cold_2()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getINImageClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SFPeopleSuggestion.m"), 22, CFSTR("Unable to find class %s"), "INImage");

  __break(1u);
}

void __getCKShareClass_block_invoke_cold_1_0()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCKShareClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SFCollaborationCloudSharingRequest.m"), 23, CFSTR("Unable to find class %s"), "CKShare");

  __break(1u);
}

void CloudKitLibrary_cold_1_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CloudKitLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SFCollaborationCloudSharingRequest.m"), 20, CFSTR("%s"), *a1);

  __break(1u);
}

void __getCKContainerSetupInfoClass_block_invoke_cold_1_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCKContainerSetupInfoClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SFCollaborationCloudSharingRequest.m"), 21, CFSTR("Unable to find class %s"), "CKContainerSetupInfo");

  __break(1u);
}

uint64_t sub_1A2AE2DB8()
{
  return MEMORY[0x1E0CADD38]();
}

uint64_t sub_1A2AE2DC4()
{
  return MEMORY[0x1E0CADE48]();
}

uint64_t sub_1A2AE2DD0()
{
  return MEMORY[0x1E0CADFC8]();
}

uint64_t sub_1A2AE2DDC()
{
  return MEMORY[0x1E0CAE070]();
}

uint64_t sub_1A2AE2DE8()
{
  return MEMORY[0x1E0CAE080]();
}

uint64_t sub_1A2AE2DF4()
{
  return MEMORY[0x1E0CAE0A8]();
}

uint64_t sub_1A2AE2E00()
{
  return MEMORY[0x1E0CAE0B8]();
}

uint64_t sub_1A2AE2E0C()
{
  return MEMORY[0x1E0CAE1A0]();
}

uint64_t sub_1A2AE2E18()
{
  return MEMORY[0x1E0CAE1B8]();
}

uint64_t sub_1A2AE2E24()
{
  return MEMORY[0x1E0CAE1D8]();
}

uint64_t sub_1A2AE2E30()
{
  return MEMORY[0x1E0CAE1E8]();
}

uint64_t sub_1A2AE2E3C()
{
  return MEMORY[0x1E0CAE6D0]();
}

uint64_t sub_1A2AE2E48()
{
  return MEMORY[0x1E0CAE718]();
}

uint64_t sub_1A2AE2E54()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t sub_1A2AE2E60()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t sub_1A2AE2E6C()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t sub_1A2AE2E78()
{
  return MEMORY[0x1E0CAEB20]();
}

uint64_t sub_1A2AE2E84()
{
  return MEMORY[0x1E0CAEB38]();
}

uint64_t sub_1A2AE2E90()
{
  return MEMORY[0x1E0CAEB50]();
}

uint64_t sub_1A2AE2E9C()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_1A2AE2EA8()
{
  return MEMORY[0x1E0CAFAA0]();
}

uint64_t sub_1A2AE2EB4()
{
  return MEMORY[0x1E0CAFAB0]();
}

uint64_t sub_1A2AE2EC0()
{
  return MEMORY[0x1E0CAFCA0]();
}

uint64_t sub_1A2AE2ECC()
{
  return MEMORY[0x1E0CAFCC0]();
}

uint64_t sub_1A2AE2ED8()
{
  return MEMORY[0x1E0CAFD30]();
}

uint64_t sub_1A2AE2EE4()
{
  return MEMORY[0x1E0CAFD90]();
}

uint64_t sub_1A2AE2EF0()
{
  return MEMORY[0x1E0CAFDE0]();
}

uint64_t sub_1A2AE2EFC()
{
  return MEMORY[0x1E0CAFE08]();
}

uint64_t sub_1A2AE2F08()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1A2AE2F14()
{
  return MEMORY[0x1E0CAFED8]();
}

uint64_t sub_1A2AE2F20()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_1A2AE2F2C()
{
  return MEMORY[0x1E0CAFF80]();
}

uint64_t sub_1A2AE2F38()
{
  return MEMORY[0x1E0CAFF98]();
}

uint64_t sub_1A2AE2F44()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1A2AE2F50()
{
  return MEMORY[0x1E0CB00A0]();
}

uint64_t sub_1A2AE2F5C()
{
  return MEMORY[0x1E0CB0110]();
}

uint64_t sub_1A2AE2F68()
{
  return MEMORY[0x1E0CB01B0]();
}

uint64_t sub_1A2AE2F74()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_1A2AE2F80()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1A2AE2F8C()
{
  return MEMORY[0x1E0CB0240]();
}

uint64_t sub_1A2AE2F98()
{
  return MEMORY[0x1E0CB03F0]();
}

uint64_t sub_1A2AE2FA4()
{
  return MEMORY[0x1E0CB03F8]();
}

uint64_t sub_1A2AE2FB0()
{
  return MEMORY[0x1E0CB0420]();
}

uint64_t sub_1A2AE2FBC()
{
  return MEMORY[0x1E0CB0428]();
}

uint64_t sub_1A2AE2FC8()
{
  return MEMORY[0x1E0CB05D8]();
}

uint64_t sub_1A2AE2FD4()
{
  return MEMORY[0x1E0CB0670]();
}

uint64_t sub_1A2AE2FE0()
{
  return MEMORY[0x1E0CB06B8]();
}

uint64_t sub_1A2AE2FEC()
{
  return MEMORY[0x1E0CB06D8]();
}

uint64_t sub_1A2AE2FF8()
{
  return MEMORY[0x1E0CB0720]();
}

uint64_t sub_1A2AE3004()
{
  return MEMORY[0x1E0CB0738]();
}

uint64_t sub_1A2AE3010()
{
  return MEMORY[0x1E0CB0740]();
}

uint64_t sub_1A2AE301C()
{
  return MEMORY[0x1E0CB0748]();
}

uint64_t sub_1A2AE3028()
{
  return MEMORY[0x1E0CB0750]();
}

uint64_t sub_1A2AE3034()
{
  return MEMORY[0x1E0CB0758]();
}

uint64_t sub_1A2AE3040()
{
  return MEMORY[0x1E0CB0760]();
}

uint64_t sub_1A2AE304C()
{
  return MEMORY[0x1E0CB0768]();
}

uint64_t sub_1A2AE3058()
{
  return MEMORY[0x1E0CB0770]();
}

uint64_t sub_1A2AE3064()
{
  return MEMORY[0x1E0CB0778]();
}

uint64_t sub_1A2AE3070()
{
  return MEMORY[0x1E0CB0798]();
}

uint64_t sub_1A2AE307C()
{
  return MEMORY[0x1E0CB07A8]();
}

uint64_t sub_1A2AE3088()
{
  return MEMORY[0x1E0CB07C8]();
}

uint64_t sub_1A2AE3094()
{
  return MEMORY[0x1E0CB07E8]();
}

uint64_t sub_1A2AE30A0()
{
  return MEMORY[0x1E0CB0838]();
}

uint64_t sub_1A2AE30AC()
{
  return MEMORY[0x1E0CB0848]();
}

uint64_t sub_1A2AE30B8()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_1A2AE30C4()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1A2AE30D0()
{
  return MEMORY[0x1E0CB08D8]();
}

uint64_t sub_1A2AE30DC()
{
  return MEMORY[0x1E0CB0900]();
}

uint64_t _s7Sharing9SFAirDropO18TransferIdentifierV11stringValueSSvg_0()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1A2AE30F4()
{
  return MEMORY[0x1E0CB0930]();
}

uint64_t _s7Sharing9SFAirDropO17PermissionRequestV18InterventionActionV2eeoiySbAGy_x_G_AItFZ_0()
{
  return MEMORY[0x1E0CB0948]();
}

uint64_t sub_1A2AE310C()
{
  return MEMORY[0x1E0CB0958]();
}

uint64_t sub_1A2AE3118()
{
  return MEMORY[0x1E0CB0970]();
}

uint64_t sub_1A2AE3124()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1A2AE3130()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1A2AE313C()
{
  return MEMORY[0x1E0CB0BF8]();
}

uint64_t sub_1A2AE3148()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t sub_1A2AE3154()
{
  return MEMORY[0x1E0CB1030]();
}

uint64_t sub_1A2AE3160()
{
  return MEMORY[0x1E0CB11F0]();
}

uint64_t sub_1A2AE316C()
{
  return MEMORY[0x1E0DEF0A0]();
}

uint64_t sub_1A2AE3178()
{
  return MEMORY[0x1E0DEF0A8]();
}

uint64_t sub_1A2AE3184()
{
  return MEMORY[0x1E0DEF0B0]();
}

uint64_t sub_1A2AE3190()
{
  return MEMORY[0x1E0DF0188]();
}

uint64_t sub_1A2AE319C()
{
  return MEMORY[0x1E0DF0190]();
}

uint64_t sub_1A2AE31A8()
{
  return MEMORY[0x1E0DF0268]();
}

uint64_t sub_1A2AE31B4()
{
  return MEMORY[0x1E0DF0340]();
}

uint64_t sub_1A2AE31C0()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1A2AE31CC()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1A2AE31D8()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1A2AE31E4()
{
  return MEMORY[0x1E0DF03F0]();
}

uint64_t sub_1A2AE31F0()
{
  return MEMORY[0x1E0DF2040]();
}

uint64_t sub_1A2AE31FC()
{
  return MEMORY[0x1E0C95E50]();
}

uint64_t sub_1A2AE3208()
{
  return MEMORY[0x1E0C95E58]();
}

uint64_t sub_1A2AE3214()
{
  return MEMORY[0x1E0C95E68]();
}

uint64_t sub_1A2AE3220()
{
  return MEMORY[0x1E0C95E80]();
}

uint64_t sub_1A2AE322C()
{
  return MEMORY[0x1E0C95F50]();
}

uint64_t sub_1A2AE3238()
{
  return MEMORY[0x1E0C95F60]();
}

uint64_t sub_1A2AE3244()
{
  return MEMORY[0x1E0C95F70]();
}

uint64_t sub_1A2AE3250()
{
  return MEMORY[0x1E0C95F78]();
}

uint64_t sub_1A2AE325C()
{
  return MEMORY[0x1E0C95F88]();
}

uint64_t sub_1A2AE3268()
{
  return MEMORY[0x1E0C95FA0]();
}

uint64_t sub_1A2AE3274()
{
  return MEMORY[0x1E0C95FA8]();
}

uint64_t sub_1A2AE3280()
{
  return MEMORY[0x1E0C95FC8]();
}

uint64_t sub_1A2AE328C()
{
  return MEMORY[0x1E0C95FD0]();
}

uint64_t sub_1A2AE3298()
{
  return MEMORY[0x1E0C95FE0]();
}

uint64_t sub_1A2AE32A4()
{
  return MEMORY[0x1E0C95FF8]();
}

uint64_t sub_1A2AE32B0()
{
  return MEMORY[0x1E0C96330]();
}

uint64_t sub_1A2AE32BC()
{
  return MEMORY[0x1E0C96428]();
}

uint64_t sub_1A2AE32C8()
{
  return MEMORY[0x1E0CCE208]();
}

uint64_t sub_1A2AE32D4()
{
  return MEMORY[0x1E0CCE3E0]();
}

uint64_t sub_1A2AE32E0()
{
  return MEMORY[0x1E0CCE3E8]();
}

uint64_t sub_1A2AE32EC()
{
  return MEMORY[0x1E0CCE660]();
}

uint64_t sub_1A2AE32F8()
{
  return MEMORY[0x1E0CCE698]();
}

uint64_t sub_1A2AE3304()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1A2AE3310()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1A2AE331C()
{
  return MEMORY[0x1E0DEF590]();
}

uint64_t sub_1A2AE3328()
{
  return MEMORY[0x1E0DEF598]();
}

uint64_t sub_1A2AE3334()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1A2AE3340()
{
  return MEMORY[0x1E0DE9D70]();
}

uint64_t sub_1A2AE334C()
{
  return MEMORY[0x1E0DF05B0]();
}

uint64_t sub_1A2AE3358()
{
  return MEMORY[0x1E0CB17C0]();
}

uint64_t sub_1A2AE3364()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1A2AE3370()
{
  return MEMORY[0x1E0CB17F8]();
}

uint64_t sub_1A2AE337C()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1A2AE3388()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1A2AE3394()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_1A2AE33A0()
{
  return MEMORY[0x1E0DEA378]();
}

uint64_t sub_1A2AE33AC()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1A2AE33B8()
{
  return MEMORY[0x1E0DEA3D0]();
}

uint64_t sub_1A2AE33C4()
{
  return MEMORY[0x1E0DEA448]();
}

uint64_t sub_1A2AE33D0()
{
  return MEMORY[0x1E0DEA460]();
}

uint64_t sub_1A2AE33DC()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1A2AE33E8()
{
  return MEMORY[0x1E0DEA588]();
}

uint64_t sub_1A2AE33F4()
{
  return MEMORY[0x1E0DEA5B8]();
}

uint64_t sub_1A2AE3400()
{
  return MEMORY[0x1E0CB1850]();
}

uint64_t sub_1A2AE340C()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1A2AE3418()
{
  return MEMORY[0x1E0CB1950]();
}

uint64_t sub_1A2AE3424()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t sub_1A2AE3430()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_1A2AE343C()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1A2AE3448()
{
  return MEMORY[0x1E0CB19C0]();
}

uint64_t sub_1A2AE3454()
{
  return MEMORY[0x1E0CB19E8]();
}

uint64_t sub_1A2AE3460()
{
  return MEMORY[0x1E0CB1A18]();
}

uint64_t sub_1A2AE346C()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1A2AE3478()
{
  return MEMORY[0x1E0DEA610]();
}

uint64_t sub_1A2AE3484()
{
  return MEMORY[0x1E0DEA618]();
}

uint64_t sub_1A2AE3490()
{
  return MEMORY[0x1E0DEA630]();
}

uint64_t sub_1A2AE349C()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_1A2AE34A8()
{
  return MEMORY[0x1E0DEA6F0]();
}

uint64_t sub_1A2AE34B4()
{
  return MEMORY[0x1E0DEA6F8]();
}

uint64_t sub_1A2AE34C0()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1A2AE34CC()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_1A2AE34D8()
{
  return MEMORY[0x1E0DEA7C0]();
}

uint64_t sub_1A2AE34E4()
{
  return MEMORY[0x1E0DEA7D0]();
}

uint64_t sub_1A2AE34F0()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1A2AE34FC()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1A2AE3508()
{
  return MEMORY[0x1E0DEA858]();
}

uint64_t sub_1A2AE3514()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t sub_1A2AE3520()
{
  return MEMORY[0x1E0DEA878]();
}

uint64_t sub_1A2AE352C()
{
  return MEMORY[0x1E0DEA880]();
}

uint64_t sub_1A2AE3538()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t sub_1A2AE3544()
{
  return MEMORY[0x1E0DEA940]();
}

uint64_t sub_1A2AE3550()
{
  return MEMORY[0x1E0DEA9C0]();
}

uint64_t sub_1A2AE355C()
{
  return MEMORY[0x1E0DEAA08]();
}

uint64_t sub_1A2AE3568()
{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t sub_1A2AE3574()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1A2AE3580()
{
  return MEMORY[0x1E0DEAA58]();
}

uint64_t sub_1A2AE358C()
{
  return MEMORY[0x1E0DEAA60]();
}

uint64_t sub_1A2AE3598()
{
  return MEMORY[0x1E0DEAA68]();
}

uint64_t sub_1A2AE35A4()
{
  return MEMORY[0x1E0DEAA80]();
}

uint64_t sub_1A2AE35B0()
{
  return MEMORY[0x1E0DEAB90]();
}

uint64_t sub_1A2AE35BC()
{
  return MEMORY[0x1E0DEABB0]();
}

uint64_t sub_1A2AE35C8()
{
  return MEMORY[0x1E0DEAC88]();
}

uint64_t sub_1A2AE35D4()
{
  return MEMORY[0x1E0DEAC90]();
}

uint64_t sub_1A2AE35E0()
{
  return MEMORY[0x1E0DEACA0]();
}

uint64_t sub_1A2AE35EC()
{
  return MEMORY[0x1E0DEACB8]();
}

uint64_t sub_1A2AE35F8()
{
  return MEMORY[0x1E0DEAD18]();
}

uint64_t sub_1A2AE3604()
{
  return MEMORY[0x1E0DEAD30]();
}

uint64_t sub_1A2AE3610()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1A2AE361C()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1A2AE3628()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_1A2AE3634()
{
  return MEMORY[0x1E0DEADC0]();
}

uint64_t sub_1A2AE3640()
{
  return MEMORY[0x1E0DEAE10]();
}

uint64_t sub_1A2AE364C()
{
  return MEMORY[0x1E0DEAE30]();
}

uint64_t sub_1A2AE3658()
{
  return MEMORY[0x1E0DEAE80]();
}

uint64_t sub_1A2AE3664()
{
  return MEMORY[0x1E0DEAE90]();
}

uint64_t sub_1A2AE3670()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_1A2AE367C()
{
  return MEMORY[0x1E0DEAEF0]();
}

uint64_t sub_1A2AE3688()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_1A2AE3694()
{
  return MEMORY[0x1E0DF05C8]();
}

uint64_t sub_1A2AE36A0()
{
  return MEMORY[0x1E0DF05D0]();
}

uint64_t sub_1A2AE36AC()
{
  return MEMORY[0x1E0DF05D8]();
}

uint64_t sub_1A2AE36B8()
{
  return MEMORY[0x1E0DF05E0]();
}

uint64_t sub_1A2AE36C4()
{
  return MEMORY[0x1E0DF0688]();
}

uint64_t sub_1A2AE36D0()
{
  return MEMORY[0x1E0DF06B8]();
}

uint64_t sub_1A2AE36DC()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_1A2AE36E8()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_1A2AE36F4()
{
  return MEMORY[0x1E0DF0790]();
}

uint64_t sub_1A2AE3700()
{
  return MEMORY[0x1E0DF07A0]();
}

uint64_t sub_1A2AE370C()
{
  return MEMORY[0x1E0DF07C0]();
}

uint64_t sub_1A2AE3718()
{
  return MEMORY[0x1E0DF07D8]();
}

uint64_t sub_1A2AE3724()
{
  return MEMORY[0x1E0DF07E0]();
}

uint64_t sub_1A2AE3730()
{
  return MEMORY[0x1E0DF07E8]();
}

uint64_t sub_1A2AE373C()
{
  return MEMORY[0x1E0DF07F8]();
}

uint64_t sub_1A2AE3748()
{
  return MEMORY[0x1E0DF0800]();
}

uint64_t sub_1A2AE3754()
{
  return MEMORY[0x1E0DF0840]();
}

uint64_t sub_1A2AE3760()
{
  return MEMORY[0x1E0DF0860]();
}

uint64_t sub_1A2AE376C()
{
  return MEMORY[0x1E0DF0870]();
}

uint64_t sub_1A2AE3778()
{
  return MEMORY[0x1E0DF08B8]();
}

uint64_t sub_1A2AE3784()
{
  return MEMORY[0x1E0DF08C8]();
}

uint64_t sub_1A2AE3790()
{
  return MEMORY[0x1E0DF0918]();
}

uint64_t sub_1A2AE379C()
{
  return MEMORY[0x1E0DF0958]();
}

uint64_t sub_1A2AE37A8()
{
  return MEMORY[0x1E0DF0978]();
}

uint64_t sub_1A2AE37B4()
{
  return MEMORY[0x1E0DF09A8]();
}

uint64_t sub_1A2AE37C0()
{
  return MEMORY[0x1E0DF09B0]();
}

uint64_t sub_1A2AE37CC()
{
  return MEMORY[0x1E0DF09D0]();
}

uint64_t sub_1A2AE37D8()
{
  return MEMORY[0x1E0DF09E8]();
}

uint64_t sub_1A2AE37E4()
{
  return MEMORY[0x1E0DF0A28]();
}

uint64_t sub_1A2AE37F0()
{
  return MEMORY[0x1E0DF0A30]();
}

uint64_t sub_1A2AE37FC()
{
  return MEMORY[0x1E0DF0A58]();
}

uint64_t sub_1A2AE3808()
{
  return MEMORY[0x1E0DF0A68]();
}

uint64_t sub_1A2AE3814()
{
  return MEMORY[0x1E0DF0A70]();
}

uint64_t sub_1A2AE3820()
{
  return MEMORY[0x1E0DF0A78]();
}

uint64_t sub_1A2AE382C()
{
  return MEMORY[0x1E0DF0A88]();
}

uint64_t sub_1A2AE3838()
{
  return MEMORY[0x1E0DF0A90]();
}

uint64_t sub_1A2AE3844()
{
  return MEMORY[0x1E0DF0AB0]();
}

uint64_t sub_1A2AE3850()
{
  return MEMORY[0x1E0DF0AD0]();
}

uint64_t sub_1A2AE385C()
{
  return MEMORY[0x1E0DEB030]();
}

uint64_t sub_1A2AE3868()
{
  return MEMORY[0x1E0CB1BB0]();
}

uint64_t sub_1A2AE3874()
{
  return MEMORY[0x1E0CB1BB8]();
}

uint64_t sub_1A2AE3880()
{
  return MEMORY[0x1E0DEB528]();
}

uint64_t sub_1A2AE388C()
{
  return MEMORY[0x1E0DEB560]();
}

uint64_t sub_1A2AE3898()
{
  return MEMORY[0x1E0DEB580]();
}

uint64_t sub_1A2AE38A4()
{
  return MEMORY[0x1E0DEB598]();
}

uint64_t sub_1A2AE38B0()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t sub_1A2AE38BC()
{
  return MEMORY[0x1E0DEB5C8]();
}

uint64_t sub_1A2AE38C8()
{
  return MEMORY[0x1E0DEB5E8]();
}

uint64_t sub_1A2AE38D4()
{
  return MEMORY[0x1E0DEB618]();
}

uint64_t sub_1A2AE38E0()
{
  return MEMORY[0x1E0DEB620]();
}

uint64_t sub_1A2AE38EC()
{
  return MEMORY[0x1E0DEB648]();
}

uint64_t sub_1A2AE38F8()
{
  return MEMORY[0x1E0DEB660]();
}

uint64_t sub_1A2AE3904()
{
  return MEMORY[0x1E0DEB690]();
}

uint64_t sub_1A2AE3910()
{
  return MEMORY[0x1E0DEB6A8]();
}

uint64_t sub_1A2AE391C()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t sub_1A2AE3928()
{
  return MEMORY[0x1E0DEB810]();
}

uint64_t sub_1A2AE3934()
{
  return MEMORY[0x1E0CB1C50]();
}

uint64_t sub_1A2AE3940()
{
  return MEMORY[0x1E0DEB848]();
}

uint64_t sub_1A2AE394C()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1A2AE3958()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_1A2AE3964()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1A2AE3970()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_1A2AE397C()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_1A2AE3988()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_1A2AE3994()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1A2AE39A0()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_1A2AE39AC()
{
  return MEMORY[0x1E0CB2028]();
}

uint64_t sub_1A2AE39B8()
{
  return MEMORY[0x1E0DEB8D0]();
}

uint64_t sub_1A2AE39C4()
{
  return MEMORY[0x1E0DEB8D8]();
}

uint64_t sub_1A2AE39D0()
{
  return MEMORY[0x1E0DEB8E8]();
}

uint64_t sub_1A2AE39DC()
{
  return MEMORY[0x1E0DEB8F0]();
}

uint64_t sub_1A2AE39E8()
{
  return MEMORY[0x1E0DEB8F8]();
}

uint64_t sub_1A2AE39F4()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1A2AE3A00()
{
  return MEMORY[0x1E0DEB980]();
}

uint64_t sub_1A2AE3A0C()
{
  return MEMORY[0x1E0DEB988]();
}

uint64_t sub_1A2AE3A18()
{
  return MEMORY[0x1E0DEB998]();
}

uint64_t sub_1A2AE3A24()
{
  return MEMORY[0x1E0DEB9B0]();
}

uint64_t sub_1A2AE3A30()
{
  return MEMORY[0x1E0DEB9B8]();
}

uint64_t sub_1A2AE3A3C()
{
  return MEMORY[0x1E0DEB9C0]();
}

uint64_t sub_1A2AE3A48()
{
  return MEMORY[0x1E0DEB9D0]();
}

uint64_t sub_1A2AE3A54()
{
  return MEMORY[0x1E0DEBB68]();
}

uint64_t sub_1A2AE3A60()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1A2AE3A6C()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1A2AE3A78()
{
  return MEMORY[0x1E0CB24A8]();
}

uint64_t sub_1A2AE3A84()
{
  return MEMORY[0x1E0CB2558]();
}

uint64_t sub_1A2AE3A90()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1A2AE3A9C()
{
  return MEMORY[0x1E0DEBF30]();
}

uint64_t sub_1A2AE3AA8()
{
  return MEMORY[0x1E0DEBF58]();
}

uint64_t sub_1A2AE3AB4()
{
  return MEMORY[0x1E0DEC050]();
}

uint64_t sub_1A2AE3AC0()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1A2AE3ACC()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1A2AE3AD8()
{
  return MEMORY[0x1E0DEC148]();
}

uint64_t sub_1A2AE3AE4()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1A2AE3AF0()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_1A2AE3AFC()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_1A2AE3B08()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1A2AE3B14()
{
  return MEMORY[0x1E0DEC280]();
}

uint64_t sub_1A2AE3B20()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1A2AE3B2C()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1A2AE3B38()
{
  return MEMORY[0x1E0DEC338]();
}

uint64_t sub_1A2AE3B44()
{
  return MEMORY[0x1E0DEC3B8]();
}

uint64_t sub_1A2AE3B50()
{
  return MEMORY[0x1E0DEC470]();
}

uint64_t sub_1A2AE3B5C()
{
  return MEMORY[0x1E0DEC498]();
}

uint64_t sub_1A2AE3B68()
{
  return MEMORY[0x1E0DEC508]();
}

uint64_t sub_1A2AE3B74()
{
  return MEMORY[0x1E0DEC510]();
}

uint64_t sub_1A2AE3B80()
{
  return MEMORY[0x1E0DEC530]();
}

uint64_t sub_1A2AE3B8C()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1A2AE3B98()
{
  return MEMORY[0x1E0DEC680]();
}

uint64_t sub_1A2AE3BA4()
{
  return MEMORY[0x1E0DEC6E0]();
}

uint64_t sub_1A2AE3BB0()
{
  return MEMORY[0x1E0DEC700]();
}

uint64_t sub_1A2AE3BBC()
{
  return MEMORY[0x1E0DEC708]();
}

uint64_t sub_1A2AE3BC8()
{
  return MEMORY[0x1E0DF0B60]();
}

uint64_t sub_1A2AE3BD4()
{
  return MEMORY[0x1E0DF0B98]();
}

uint64_t sub_1A2AE3BE0()
{
  return MEMORY[0x1E0DF0BA0]();
}

uint64_t sub_1A2AE3BEC()
{
  return MEMORY[0x1E0DEC7D0]();
}

uint64_t sub_1A2AE3BF8()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1A2AE3C04()
{
  return MEMORY[0x1E0DF0C58]();
}

uint64_t sub_1A2AE3C10()
{
  return MEMORY[0x1E0DEC8E8]();
}

uint64_t sub_1A2AE3C1C()
{
  return MEMORY[0x1E0DEC910]();
}

uint64_t sub_1A2AE3C28()
{
  return MEMORY[0x1E0DEC930]();
}

uint64_t sub_1A2AE3C34()
{
  return MEMORY[0x1E0DEC980]();
}

uint64_t sub_1A2AE3C40()
{
  return MEMORY[0x1E0DEC990]();
}

uint64_t sub_1A2AE3C4C()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1A2AE3C58()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1A2AE3C64()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1A2AE3C70()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1A2AE3C7C()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1A2AE3C88()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1A2AE3C94()
{
  return MEMORY[0x1E0DECE40]();
}

uint64_t sub_1A2AE3CA0()
{
  return MEMORY[0x1E0DECE48]();
}

uint64_t sub_1A2AE3CAC()
{
  return MEMORY[0x1E0DECE50]();
}

uint64_t sub_1A2AE3CB8()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_1A2AE3CC4()
{
  return MEMORY[0x1E0DECEF8]();
}

uint64_t sub_1A2AE3CD0()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1A2AE3CDC()
{
  return MEMORY[0x1E0DF0D38]();
}

uint64_t sub_1A2AE3CE8()
{
  return MEMORY[0x1E0DECF38]();
}

uint64_t sub_1A2AE3CF4()
{
  return MEMORY[0x1E0DECF40]();
}

uint64_t sub_1A2AE3D00()
{
  return MEMORY[0x1E0DECF58]();
}

uint64_t sub_1A2AE3D0C()
{
  return MEMORY[0x1E0DECF60]();
}

uint64_t sub_1A2AE3D18()
{
  return MEMORY[0x1E0DECF68]();
}

uint64_t sub_1A2AE3D24()
{
  return MEMORY[0x1E0DECF78]();
}

uint64_t sub_1A2AE3D30()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_1A2AE3D3C()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_1A2AE3D48()
{
  return MEMORY[0x1E0DECFC8]();
}

uint64_t sub_1A2AE3D54()
{
  return MEMORY[0x1E0DECFD0]();
}

uint64_t sub_1A2AE3D60()
{
  return MEMORY[0x1E0DECFE0]();
}

uint64_t sub_1A2AE3D6C()
{
  return MEMORY[0x1E0DECFE8]();
}

uint64_t sub_1A2AE3D78()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1A2AE3D84()
{
  return MEMORY[0x1E0DED010]();
}

uint64_t sub_1A2AE3D90()
{
  return MEMORY[0x1E0DED028]();
}

uint64_t sub_1A2AE3D9C()
{
  return MEMORY[0x1E0DED038]();
}

uint64_t sub_1A2AE3DA8()
{
  return MEMORY[0x1E0DED048]();
}

uint64_t sub_1A2AE3DB4()
{
  return MEMORY[0x1E0DED070]();
}

uint64_t sub_1A2AE3DC0()
{
  return MEMORY[0x1E0DED090]();
}

uint64_t sub_1A2AE3DCC()
{
  return MEMORY[0x1E0DED098]();
}

uint64_t sub_1A2AE3DD8()
{
  return MEMORY[0x1E0DED0B0]();
}

uint64_t sub_1A2AE3DE4()
{
  return MEMORY[0x1E0DED0C0]();
}

uint64_t sub_1A2AE3DF0()
{
  return MEMORY[0x1E0DED0F0]();
}

uint64_t sub_1A2AE3DFC()
{
  return MEMORY[0x1E0DED0F8]();
}

uint64_t sub_1A2AE3E08()
{
  return MEMORY[0x1E0DED100]();
}

uint64_t sub_1A2AE3E14()
{
  return MEMORY[0x1E0DED110]();
}

uint64_t sub_1A2AE3E20()
{
  return MEMORY[0x1E0DED118]();
}

uint64_t sub_1A2AE3E2C()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1A2AE3E38()
{
  return MEMORY[0x1E0DED140]();
}

uint64_t sub_1A2AE3E44()
{
  return MEMORY[0x1E0DED158]();
}

uint64_t sub_1A2AE3E50()
{
  return MEMORY[0x1E0DED170]();
}

uint64_t sub_1A2AE3E5C()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1A2AE3E68()
{
  return MEMORY[0x1E0DED1E8]();
}

uint64_t sub_1A2AE3E74()
{
  return MEMORY[0x1E0DF0DD0]();
}

uint64_t sub_1A2AE3E80()
{
  return MEMORY[0x1E0DED258]();
}

uint64_t sub_1A2AE3E8C()
{
  return MEMORY[0x1E0DED290]();
}

uint64_t sub_1A2AE3E98()
{
  return MEMORY[0x1E0DED2B8]();
}

uint64_t sub_1A2AE3EA4()
{
  return MEMORY[0x1E0DED3D0]();
}

uint64_t sub_1A2AE3EB0()
{
  return MEMORY[0x1E0DED4A0]();
}

uint64_t sub_1A2AE3EBC()
{
  return MEMORY[0x1E0DED548]();
}

uint64_t sub_1A2AE3EC8()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t sub_1A2AE3ED4()
{
  return MEMORY[0x1E0DED5F8]();
}

uint64_t sub_1A2AE3EE0()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1A2AE3EEC()
{
  return MEMORY[0x1E0DF0E78]();
}

uint64_t sub_1A2AE3EF8()
{
  return MEMORY[0x1E0DED770]();
}

uint64_t sub_1A2AE3F04()
{
  return MEMORY[0x1E0DED9A8]();
}

uint64_t sub_1A2AE3F10()
{
  return MEMORY[0x1E0DF0EC0]();
}

uint64_t sub_1A2AE3F1C()
{
  return MEMORY[0x1E0DED9C0]();
}

uint64_t sub_1A2AE3F28()
{
  return MEMORY[0x1E0DED9C8]();
}

uint64_t sub_1A2AE3F34()
{
  return MEMORY[0x1E0DED9F8]();
}

uint64_t sub_1A2AE3F40()
{
  return MEMORY[0x1E0DEDA20]();
}

uint64_t sub_1A2AE3F4C()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1A2AE3F58()
{
  return MEMORY[0x1E0DF0EE8]();
}

uint64_t sub_1A2AE3F64()
{
  return MEMORY[0x1E0DF0EF0]();
}

uint64_t sub_1A2AE3F70()
{
  return MEMORY[0x1E0DF0F10]();
}

uint64_t sub_1A2AE3F7C()
{
  return MEMORY[0x1E0CB2628]();
}

uint64_t sub_1A2AE3F88()
{
  return MEMORY[0x1E0CB2640]();
}

uint64_t sub_1A2AE3F94()
{
  return MEMORY[0x1E0CB2650]();
}

uint64_t sub_1A2AE3FA0()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1A2AE3FAC()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1A2AE3FB8()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1A2AE3FC4()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1A2AE3FD0()
{
  return MEMORY[0x1E0DEDDE0]();
}

uint64_t sub_1A2AE3FDC()
{
  return MEMORY[0x1E0DEDDE8]();
}

uint64_t sub_1A2AE3FE8()
{
  return MEMORY[0x1E0DEDDF0]();
}

uint64_t sub_1A2AE3FF4()
{
  return MEMORY[0x1E0DEDE10]();
}

uint64_t sub_1A2AE4000()
{
  return MEMORY[0x1E0DEDED8]();
}

uint64_t sub_1A2AE400C()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1A2AE4018()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1A2AE4024()
{
  return MEMORY[0x1E0DEDF18]();
}

uint64_t sub_1A2AE4030()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1A2AE403C()
{
  return MEMORY[0x1E0DEDF80]();
}

uint64_t sub_1A2AE4048()
{
  return MEMORY[0x1E0DEDF88]();
}

uint64_t sub_1A2AE4054()
{
  return MEMORY[0x1E0DEDFC8]();
}

uint64_t sub_1A2AE4060()
{
  return MEMORY[0x1E0DEDFF0]();
}

uint64_t sub_1A2AE406C()
{
  return MEMORY[0x1E0DEE000]();
}

uint64_t sub_1A2AE4078()
{
  return MEMORY[0x1E0DEE010]();
}

uint64_t sub_1A2AE4084()
{
  return MEMORY[0x1E0DEE030]();
}

uint64_t sub_1A2AE4090()
{
  return MEMORY[0x1E0CB26E8]();
}

uint64_t sub_1A2AE409C()
{
  return MEMORY[0x1E0DEE220]();
}

uint64_t sub_1A2AE40A8()
{
  return MEMORY[0x1E0DEE228]();
}

uint64_t sub_1A2AE40B4()
{
  return MEMORY[0x1E0DEE238]();
}

uint64_t sub_1A2AE40C0()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1A2AE40CC()
{
  return MEMORY[0x1E0DEE258]();
}

uint64_t sub_1A2AE40D8()
{
  return MEMORY[0x1E0DEE268]();
}

uint64_t sub_1A2AE40E4()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1A2AE40F0()
{
  return MEMORY[0x1E0DEE8B8]();
}

uint64_t sub_1A2AE40FC()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1A2AE4108()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t sub_1A2AE4114()
{
  return MEMORY[0x1E0DF0F28]();
}

uint64_t sub_1A2AE4120()
{
  return MEMORY[0x1E0DF0F38]();
}

uint64_t sub_1A2AE412C()
{
  return MEMORY[0x1E0DEE978]();
}

uint64_t ASPrintF()
{
  return MEMORY[0x1E0D1A790]();
}

unsigned __int8 *__cdecl CC_SHA256(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x1E0C80368](data, *(_QWORD *)&len, md);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  CFAbsoluteTime result;

  MEMORY[0x1E0C97C58]();
  return result;
}

uint64_t CFAppendPrintF()
{
  return MEMORY[0x1E0D1A8D0]();
}

void CFArrayAppendArray(CFMutableArrayRef theArray, CFArrayRef otherArray, CFRange otherRange)
{
  MEMORY[0x1E0C97CE8](theArray, otherArray, otherRange.location, otherRange.length);
}

void CFArrayAppendValue(CFMutableArrayRef theArray, const void *value)
{
  MEMORY[0x1E0C97CF8](theArray, value);
}

Boolean CFArrayContainsValue(CFArrayRef theArray, CFRange range, const void *value)
{
  return MEMORY[0x1E0C97D10](theArray, range.location, range.length, value);
}

CFArrayRef CFArrayCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFArrayCallBacks *callBacks)
{
  return (CFArrayRef)MEMORY[0x1E0C97D20](allocator, values, numValues, callBacks);
}

CFArrayRef CFArrayCreateCopy(CFAllocatorRef allocator, CFArrayRef theArray)
{
  return (CFArrayRef)MEMORY[0x1E0C97D30](allocator, theArray);
}

CFMutableArrayRef CFArrayCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks)
{
  return (CFMutableArrayRef)MEMORY[0x1E0C97D38](allocator, capacity, callBacks);
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return MEMORY[0x1E0C97D60](theArray);
}

CFIndex CFArrayGetFirstIndexOfValue(CFArrayRef theArray, CFRange range, const void *value)
{
  return MEMORY[0x1E0C97D78](theArray, range.location, range.length, value);
}

CFTypeID CFArrayGetTypeID(void)
{
  return MEMORY[0x1E0C97D90]();
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return (const void *)MEMORY[0x1E0C97D98](theArray, idx);
}

void CFArrayGetValues(CFArrayRef theArray, CFRange range, const void **values)
{
  MEMORY[0x1E0C97DA8](theArray, range.location, range.length, values);
}

void CFArrayRemoveAllValues(CFMutableArrayRef theArray)
{
  MEMORY[0x1E0C97DB8](theArray);
}

void CFArrayRemoveValueAtIndex(CFMutableArrayRef theArray, CFIndex idx)
{
  MEMORY[0x1E0C97DC0](theArray, idx);
}

void CFArraySetValueAtIndex(CFMutableArrayRef theArray, CFIndex idx, const void *value)
{
  MEMORY[0x1E0C97DD0](theArray, idx, value);
}

void CFArraySortValues(CFMutableArrayRef theArray, CFRange range, CFComparatorFunction comparator, void *context)
{
  MEMORY[0x1E0C97DE0](theArray, range.location, range.length, comparator, context);
}

CFTypeRef CFAutorelease(CFTypeRef arg)
{
  return (CFTypeRef)MEMORY[0x1E0C97E90](arg);
}

void CFBagAddValue(CFMutableBagRef theBag, const void *value)
{
  MEMORY[0x1E0C97E98](theBag, value);
}

CFBagRef CFBagCreateCopy(CFAllocatorRef allocator, CFBagRef theBag)
{
  return (CFBagRef)MEMORY[0x1E0C97EB0](allocator, theBag);
}

CFMutableBagRef CFBagCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFBagCallBacks *callBacks)
{
  return (CFMutableBagRef)MEMORY[0x1E0C97EB8](allocator, capacity, callBacks);
}

CFMutableBagRef CFBagCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFBagRef theBag)
{
  return (CFMutableBagRef)MEMORY[0x1E0C97EC0](allocator, capacity, theBag);
}

CFIndex CFBagGetCount(CFBagRef theBag)
{
  return MEMORY[0x1E0C97EC8](theBag);
}

CFTypeID CFBagGetTypeID(void)
{
  return MEMORY[0x1E0C97ED8]();
}

void CFBagGetValues(CFBagRef theBag, const void **values)
{
  MEMORY[0x1E0C97EE8](theBag, values);
}

void CFBagRemoveValue(CFMutableBagRef theBag, const void *value)
{
  MEMORY[0x1E0C97EF8](theBag, value);
}

void CFBagSetValue(CFMutableBagRef theBag, const void *value)
{
  MEMORY[0x1E0C97F00](theBag, value);
}

CFTypeID CFBooleanGetTypeID(void)
{
  return MEMORY[0x1E0C97FC8]();
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return MEMORY[0x1E0C97FE0](BOOLean);
}

CFStringRef CFBundleCopyLocalizedString(CFBundleRef bundle, CFStringRef key, CFStringRef value, CFStringRef tableName)
{
  return (CFStringRef)MEMORY[0x1E0C98050](bundle, key, value, tableName);
}

CFBundleRef CFBundleCreate(CFAllocatorRef allocator, CFURLRef bundleURL)
{
  return (CFBundleRef)MEMORY[0x1E0C980D0](allocator, bundleURL);
}

CFBundleRef CFBundleGetBundleWithIdentifier(CFStringRef bundleID)
{
  return (CFBundleRef)MEMORY[0x1E0C980E8](bundleID);
}

CFStringRef CFCopyDescription(CFTypeRef cf)
{
  return (CFStringRef)MEMORY[0x1E0C98350](cf);
}

CFDataRef CFDataCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length)
{
  return (CFDataRef)MEMORY[0x1E0C983A0](allocator, bytes, length);
}

CFDataRef CFDataCreateCopy(CFAllocatorRef allocator, CFDataRef theData)
{
  return (CFDataRef)MEMORY[0x1E0C983B0](allocator, theData);
}

CFMutableDataRef CFDataCreateMutable(CFAllocatorRef allocator, CFIndex capacity)
{
  return (CFMutableDataRef)MEMORY[0x1E0C983B8](allocator, capacity);
}

CFTypeID CFDataGetTypeID(void)
{
  return MEMORY[0x1E0C98418]();
}

CFTypeID CFDateGetTypeID(void)
{
  return MEMORY[0x1E0C984E8]();
}

void CFDictionaryAddValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
  MEMORY[0x1E0C98500](theDict, key, value);
}

Boolean CFDictionaryContainsKey(CFDictionaryRef theDict, const void *key)
{
  return MEMORY[0x1E0C98518](theDict, key);
}

CFDictionaryRef CFDictionaryCreate(CFAllocatorRef allocator, const void **keys, const void **values, CFIndex numValues, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFDictionaryRef)MEMORY[0x1E0C98530](allocator, keys, values, numValues, keyCallBacks, valueCallBacks);
}

CFDictionaryRef CFDictionaryCreateCopy(CFAllocatorRef allocator, CFDictionaryRef theDict)
{
  return (CFDictionaryRef)MEMORY[0x1E0C98538](allocator, theDict);
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFMutableDictionaryRef)MEMORY[0x1E0C98550](allocator, capacity, keyCallBacks, valueCallBacks);
}

CFMutableDictionaryRef CFDictionaryCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFDictionaryRef theDict)
{
  return (CFMutableDictionaryRef)MEMORY[0x1E0C98558](allocator, capacity, theDict);
}

uint64_t CFDictionaryGetCFDataOfLength()
{
  return MEMORY[0x1E0D1A930]();
}

CFIndex CFDictionaryGetCount(CFDictionaryRef theDict)
{
  return MEMORY[0x1E0C98570](theDict);
}

uint64_t CFDictionaryGetDouble()
{
  return MEMORY[0x1E0D1A950]();
}

uint64_t CFDictionaryGetHardwareAddress()
{
  return MEMORY[0x1E0D1A968]();
}

uint64_t CFDictionaryGetInt64()
{
  return MEMORY[0x1E0D1A970]();
}

uint64_t CFDictionaryGetInt64Ranged()
{
  return MEMORY[0x1E0D1A980]();
}

void CFDictionaryGetKeysAndValues(CFDictionaryRef theDict, const void **keys, const void **values)
{
  MEMORY[0x1E0C985A0](theDict, keys, values);
}

CFTypeID CFDictionaryGetTypeID(void)
{
  return MEMORY[0x1E0C985A8]();
}

uint64_t CFDictionaryGetTypedValue()
{
  return MEMORY[0x1E0D1A990]();
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return (const void *)MEMORY[0x1E0C985B8](theDict, key);
}

void CFDictionaryRemoveAllValues(CFMutableDictionaryRef theDict)
{
  MEMORY[0x1E0C985D8](theDict);
}

void CFDictionaryRemoveValue(CFMutableDictionaryRef theDict, const void *key)
{
  MEMORY[0x1E0C985E8](theDict, key);
}

uint64_t CFDictionarySetInt64()
{
  return MEMORY[0x1E0D1A9C0]();
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
  MEMORY[0x1E0C98610](theDict, key, value);
}

Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2)
{
  return MEMORY[0x1E0C98620](cf1, cf2);
}

CFErrorRef CFErrorCreate(CFAllocatorRef allocator, CFErrorDomain domain, CFIndex code, CFDictionaryRef userInfo)
{
  return (CFErrorRef)MEMORY[0x1E0C98650](allocator, domain, code, userInfo);
}

CFIndex CFErrorGetCode(CFErrorRef err)
{
  return MEMORY[0x1E0C98660](err);
}

CFTypeID CFErrorGetTypeID(void)
{
  return MEMORY[0x1E0C98678]();
}

CFAllocatorRef CFGetAllocator(CFTypeRef cf)
{
  return (CFAllocatorRef)MEMORY[0x1E0C98718](cf);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x1E0C98738](cf);
}

CFHashCode CFHash(CFTypeRef cf)
{
  return MEMORY[0x1E0C98758](cf);
}

CFNumberRef CFNumberCreate(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr)
{
  return (CFNumberRef)MEMORY[0x1E0C98928](allocator, theType, valuePtr);
}

CFTypeID CFNumberGetTypeID(void)
{
  return MEMORY[0x1E0C989B8]();
}

Boolean CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr)
{
  return MEMORY[0x1E0C989C0](number, theType, valuePtr);
}

uint64_t CFPhoneNumberCreate()
{
  return MEMORY[0x1E0D17838]();
}

uint64_t CFPhoneNumberCreateString()
{
  return MEMORY[0x1E0D17848]();
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return MEMORY[0x1E0C98A30](applicationID);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98A40](key, applicationID);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x1E0C98A70](key, applicationID, keyExistsAndHasValidFormat);
}

Boolean CFPreferencesSynchronize(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return MEMORY[0x1E0C98A98](applicationID, userName, hostName);
}

uint64_t CFPrefs_CopyTypedValue()
{
  return MEMORY[0x1E0D1AA40]();
}

uint64_t CFPrefs_GetDouble()
{
  return MEMORY[0x1E0D1AA50]();
}

uint64_t CFPrefs_GetInt64()
{
  return MEMORY[0x1E0D1AA60]();
}

uint64_t CFPrefs_SetInt64()
{
  return MEMORY[0x1E0D1AA88]();
}

uint64_t CFPrefs_SetValue()
{
  return MEMORY[0x1E0D1AA98]();
}

Boolean CFReadStreamSetProperty(CFReadStreamRef stream, CFStreamPropertyKey propertyName, CFTypeRef propertyValue)
{
  return MEMORY[0x1E0C98BA8](stream, propertyName, propertyValue);
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x1E0C98BC0](cf);
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x1E0C98BD0](cf);
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
  MEMORY[0x1E0C98BF8](rl, source, mode);
}

void CFRunLoopAddTimer(CFRunLoopRef rl, CFRunLoopTimerRef timer, CFRunLoopMode mode)
{
  MEMORY[0x1E0C98C00](rl, timer, mode);
}

CFRunLoopRef CFRunLoopGetMain(void)
{
  return (CFRunLoopRef)MEMORY[0x1E0C98C40]();
}

void CFRunLoopRemoveSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
  MEMORY[0x1E0C98C90](rl, source, mode);
}

CFRunLoopTimerRef CFRunLoopTimerCreate(CFAllocatorRef allocator, CFAbsoluteTime fireDate, CFTimeInterval interval, CFOptionFlags flags, CFIndex order, CFRunLoopTimerCallBack callout, CFRunLoopTimerContext *context)
{
  return (CFRunLoopTimerRef)MEMORY[0x1E0C98D08](allocator, flags, order, callout, context, fireDate, interval);
}

void CFRunLoopTimerInvalidate(CFRunLoopTimerRef timer)
{
  MEMORY[0x1E0C98D48](timer);
}

Boolean CFSetContainsValue(CFSetRef theSet, const void *value)
{
  return MEMORY[0x1E0C98D80](theSet, value);
}

CFSetRef CFSetCreateCopy(CFAllocatorRef allocator, CFSetRef theSet)
{
  return (CFSetRef)MEMORY[0x1E0C98D90](allocator, theSet);
}

CFMutableSetRef CFSetCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFSetCallBacks *callBacks)
{
  return (CFMutableSetRef)MEMORY[0x1E0C98D98](allocator, capacity, callBacks);
}

CFMutableSetRef CFSetCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFSetRef theSet)
{
  return (CFMutableSetRef)MEMORY[0x1E0C98DA0](allocator, capacity, theSet);
}

CFIndex CFSetGetCount(CFSetRef theSet)
{
  return MEMORY[0x1E0C98DA8](theSet);
}

CFTypeID CFSetGetTypeID(void)
{
  return MEMORY[0x1E0C98DB8]();
}

void CFSetGetValues(CFSetRef theSet, const void **values)
{
  MEMORY[0x1E0C98DD0](theSet, values);
}

void CFSetRemoveValue(CFMutableSetRef theSet, const void *value)
{
  MEMORY[0x1E0C98DE0](theSet, value);
}

void CFSetSetValue(CFMutableSetRef theSet, const void *value)
{
  MEMORY[0x1E0C98DF0](theSet, value);
}

void CFStreamCreatePairWithSocket(CFAllocatorRef alloc, CFSocketNativeHandle sock, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream)
{
  MEMORY[0x1E0C98EC8](alloc, *(_QWORD *)&sock, readStream, writeStream);
}

void CFStringAppend(CFMutableStringRef theString, CFStringRef appendedString)
{
  MEMORY[0x1E0C98ED8](theString, appendedString);
}

void CFStringAppendFormat(CFMutableStringRef theString, CFDictionaryRef formatOptions, CFStringRef format, ...)
{
  MEMORY[0x1E0C98EF0](theString, formatOptions, format);
}

CFComparisonResult CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions)
{
  return MEMORY[0x1E0C98F10](theString1, theString2, compareOptions);
}

CFStringRef CFStringCreateCopy(CFAllocatorRef alloc, CFStringRef theString)
{
  return (CFStringRef)MEMORY[0x1E0C98F78](alloc, theString);
}

CFMutableStringRef CFStringCreateMutable(CFAllocatorRef alloc, CFIndex maxLength)
{
  return (CFMutableStringRef)MEMORY[0x1E0C98F90](alloc, maxLength);
}

CFMutableStringRef CFStringCreateMutableCopy(CFAllocatorRef alloc, CFIndex maxLength, CFStringRef theString)
{
  return (CFMutableStringRef)MEMORY[0x1E0C98F98](alloc, maxLength, theString);
}

CFStringRef CFStringCreateWithCString(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding)
{
  return (CFStringRef)MEMORY[0x1E0C98FD0](alloc, cStr, *(_QWORD *)&encoding);
}

CFStringRef CFStringCreateWithFormat(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, ...)
{
  return (CFStringRef)MEMORY[0x1E0C99018](alloc, formatOptions, format);
}

CFStringRef CFStringCreateWithSubstring(CFAllocatorRef alloc, CFStringRef str, CFRange range)
{
  return (CFStringRef)MEMORY[0x1E0C99030](alloc, str, range.location, range.length);
}

CFIndex CFStringFindAndReplace(CFMutableStringRef theString, CFStringRef stringToFind, CFStringRef replacementString, CFRange rangeToSearch, CFStringCompareFlags compareOptions)
{
  return MEMORY[0x1E0C99058](theString, stringToFind, replacementString, rangeToSearch.location, rangeToSearch.length, compareOptions);
}

Boolean CFStringGetCString(CFStringRef theString, char *buffer, CFIndex bufferSize, CFStringEncoding encoding)
{
  return MEMORY[0x1E0C99098](theString, buffer, bufferSize, *(_QWORD *)&encoding);
}

SInt32 CFStringGetIntValue(CFStringRef str)
{
  return MEMORY[0x1E0C990F0](str);
}

CFIndex CFStringGetLength(CFStringRef theString)
{
  return MEMORY[0x1E0C99100](theString);
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x1E0C99170]();
}

Boolean CFStringHasPrefix(CFStringRef theString, CFStringRef prefix)
{
  return MEMORY[0x1E0C99180](theString, prefix);
}

Boolean CFStringHasSuffix(CFStringRef theString, CFStringRef suffix)
{
  return MEMORY[0x1E0C99190](theString, suffix);
}

CFURLRef CFURLCopyAbsoluteURL(CFURLRef relativeURL)
{
  return (CFURLRef)MEMORY[0x1E0C992C8](relativeURL);
}

CFStringRef CFURLCopyFileSystemPath(CFURLRef anURL, CFURLPathStyle pathStyle)
{
  return (CFStringRef)MEMORY[0x1E0C992D8](anURL, pathStyle);
}

CFStringRef CFURLCopyHostName(CFURLRef anURL)
{
  return (CFStringRef)MEMORY[0x1E0C992F0](anURL);
}

CFStringRef CFURLCopyScheme(CFURLRef anURL)
{
  return (CFStringRef)MEMORY[0x1E0C99348](anURL);
}

CFStringRef CFURLCreateStringByAddingPercentEscapes(CFAllocatorRef allocator, CFStringRef originalString, CFStringRef charactersToLeaveUnescaped, CFStringRef legalURLCharactersToBeEscaped, CFStringEncoding encoding)
{
  return (CFStringRef)MEMORY[0x1E0C993F8](allocator, originalString, charactersToLeaveUnescaped, legalURLCharactersToBeEscaped, *(_QWORD *)&encoding);
}

CFURLRef CFURLCreateWithFileSystemPath(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory)
{
  return (CFURLRef)MEMORY[0x1E0C99420](allocator, filePath, pathStyle, isDirectory);
}

CFURLRef CFURLCreateWithString(CFAllocatorRef allocator, CFStringRef URLString, CFURLRef baseURL)
{
  return (CFURLRef)MEMORY[0x1E0C99448](allocator, URLString, baseURL);
}

CFStringRef CFURLGetString(CFURLRef anURL)
{
  return (CFStringRef)MEMORY[0x1E0C994A0](anURL);
}

CFTypeID CFURLGetTypeID(void)
{
  return MEMORY[0x1E0C994B8]();
}

Boolean CFURLSetResourcePropertyForKey(CFURLRef url, CFStringRef key, CFTypeRef propertyValue, CFErrorRef *error)
{
  return MEMORY[0x1E0C994E0](url, key, propertyValue, error);
}

SInt32 CFUserNotificationCancel(CFUserNotificationRef userNotification)
{
  return MEMORY[0x1E0C995A0](userNotification);
}

CFUserNotificationRef CFUserNotificationCreate(CFAllocatorRef allocator, CFTimeInterval timeout, CFOptionFlags flags, SInt32 *error, CFDictionaryRef dictionary)
{
  return (CFUserNotificationRef)MEMORY[0x1E0C995A8](allocator, flags, error, dictionary, timeout);
}

CFRunLoopSourceRef CFUserNotificationCreateRunLoopSource(CFAllocatorRef allocator, CFUserNotificationRef userNotification, CFUserNotificationCallBack callout, CFIndex order)
{
  return (CFRunLoopSourceRef)MEMORY[0x1E0C995B8](allocator, userNotification, callout, order);
}

CFDictionaryRef CFUserNotificationGetResponseDictionary(CFUserNotificationRef userNotification)
{
  return (CFDictionaryRef)MEMORY[0x1E0C995D8](userNotification);
}

CFStringRef CFUserNotificationGetResponseValue(CFUserNotificationRef userNotification, CFStringRef key, CFIndex idx)
{
  return (CFStringRef)MEMORY[0x1E0C995E0](userNotification, key, idx);
}

SInt32 CFUserNotificationUpdate(CFUserNotificationRef userNotification, CFTimeInterval timeout, CFOptionFlags flags, CFDictionaryRef dictionary)
{
  return MEMORY[0x1E0C995F0](userNotification, flags, dictionary, timeout);
}

Boolean CFWriteStreamSetProperty(CFWriteStreamRef stream, CFStreamPropertyKey propertyName, CFTypeRef propertyValue)
{
  return MEMORY[0x1E0C99670](stream, propertyName, propertyValue);
}

CFStringRef CGColorSpaceCopyName(CGColorSpaceRef space)
{
  return (CFStringRef)MEMORY[0x1E0C9BDB8](space);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BDF0]();
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BE50](name);
}

CFDataRef CGDataProviderCopyData(CGDataProviderRef provider)
{
  return (CFDataRef)MEMORY[0x1E0C9C5D8](provider);
}

CGDataProviderRef CGDataProviderCreateWithCFData(CFDataRef data)
{
  return (CGDataProviderRef)MEMORY[0x1E0C9C5F0](data);
}

CGImageRef CGImageCreate(size_t width, size_t height, size_t bitsPerComponent, size_t bitsPerPixel, size_t bytesPerRow, CGColorSpaceRef space, CGBitmapInfo bitmapInfo, CGDataProviderRef provider, const CGFloat *decode, BOOL shouldInterpolate, CGColorRenderingIntent intent)
{
  return (CGImageRef)MEMORY[0x1E0C9CB80](width, height, bitsPerComponent, bitsPerPixel, bytesPerRow, space, *(_QWORD *)&bitmapInfo, provider);
}

uint64_t CGImageCreateByMatchingToColorSpace()
{
  return MEMORY[0x1E0CBC298]();
}

uint64_t CGImageCreateThumb()
{
  return MEMORY[0x1E0CBC2F0]();
}

void CGImageDestinationAddImage(CGImageDestinationRef idst, CGImageRef image, CFDictionaryRef properties)
{
  MEMORY[0x1E0CBC308](idst, image, properties);
}

CGImageDestinationRef CGImageDestinationCreateWithData(CFMutableDataRef data, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x1E0CBC338](data, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return MEMORY[0x1E0CBC358](idst);
}

CGBitmapInfo CGImageGetBitmapInfo(CGImageRef image)
{
  return MEMORY[0x1E0C9CBF0](image);
}

size_t CGImageGetBitsPerComponent(CGImageRef image)
{
  return MEMORY[0x1E0C9CBF8](image);
}

size_t CGImageGetBitsPerPixel(CGImageRef image)
{
  return MEMORY[0x1E0C9CC00](image);
}

size_t CGImageGetBytesPerRow(CGImageRef image)
{
  return MEMORY[0x1E0C9CC08](image);
}

CGColorSpaceRef CGImageGetColorSpace(CGImageRef image)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9CC20](image);
}

CGDataProviderRef CGImageGetDataProvider(CGImageRef image)
{
  return (CGDataProviderRef)MEMORY[0x1E0C9CC38](image);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return MEMORY[0x1E0C9CC60](image);
}

CGColorRenderingIntent CGImageGetRenderingIntent(CGImageRef image)
{
  return MEMORY[0x1E0C9CCA0](image);
}

BOOL CGImageGetShouldInterpolate(CGImageRef image)
{
  return MEMORY[0x1E0C9CCA8](image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return MEMORY[0x1E0C9CCD0](image);
}

void CGImageRelease(CGImageRef image)
{
  MEMORY[0x1E0C9CDA0](image);
}

CGImageRef CGImageRetain(CGImageRef image)
{
  return (CGImageRef)MEMORY[0x1E0C9CDA8](image);
}

CGImageRef CGImageSourceCreateImageAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CGImageRef)MEMORY[0x1E0CBC568](isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithData(CFDataRef data, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x1E0CBC590](data, options);
}

CGImageSourceRef CGImageSourceCreateWithURL(CFURLRef url, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x1E0CBC5C0](url, options);
}

size_t CGImageSourceGetCount(CGImageSourceRef isrc)
{
  return MEMORY[0x1E0CBC5F0](isrc);
}

CFStringRef CGImageSourceGetType(CGImageSourceRef isrc)
{
  return (CFStringRef)MEMORY[0x1E0CBC618](isrc);
}

uint64_t CNUserInteractionIsRequired()
{
  return MEMORY[0x1E0D0D270]();
}

uint64_t CPPhoneNumberCopyActiveCountryCode()
{
  return MEMORY[0x1E0CFA330]();
}

uint64_t CUDispatchTimerSet()
{
  return MEMORY[0x1E0D1AB18]();
}

uint64_t CUMainQueue()
{
  return MEMORY[0x1E0D1AB40]();
}

uint64_t CUPrintNSError()
{
  return MEMORY[0x1E0D1ABD0]();
}

uint64_t CryptoAEADCreate()
{
  return MEMORY[0x1E0D1ACD0]();
}

uint64_t CryptoAEADDecryptMessage()
{
  return MEMORY[0x1E0D1ACD8]();
}

uint64_t CryptoAEADEncryptMessage()
{
  return MEMORY[0x1E0D1ACE0]();
}

uint64_t DataToHexCStringEx()
{
  return MEMORY[0x1E0D1AD80]();
}

uint64_t DebugGetErrorString()
{
  return MEMORY[0x1E0D1AD88]();
}

uint64_t FPrintF()
{
  return MEMORY[0x1E0D1ADB0]();
}

uint64_t FatalErrorF()
{
  return MEMORY[0x1E0D1ADC0]();
}

uint64_t GestaltCopyAnswer()
{
  return MEMORY[0x1E0D1ADD0]();
}

uint64_t GestaltGetDeviceClass()
{
  return MEMORY[0x1E0D1AE00]();
}

uint64_t IOPMConnectionGetSystemCapabilities()
{
  return MEMORY[0x1E0CBB760]();
}

uint64_t IOPMIsASleep()
{
  return MEMORY[0x1E0CBB7D0]();
}

CFDictionaryRef IOPSCopyExternalPowerAdapterDetails(void)
{
  return (CFDictionaryRef)MEMORY[0x1E0CBB860]();
}

uint64_t IOPSCopyPowerSourcesByType()
{
  return MEMORY[0x1E0CBB868]();
}

uint64_t IOPSCopyPowerSourcesByTypePrecise()
{
  return MEMORY[0x1E0CBB870]();
}

CFArrayRef IOPSCopyPowerSourcesList(CFTypeRef blob)
{
  return (CFArrayRef)MEMORY[0x1E0CBB880](blob);
}

uint64_t IOPSCreatePowerSource()
{
  return MEMORY[0x1E0CBB888]();
}

CFDictionaryRef IOPSGetPowerSourceDescription(CFTypeRef blob, CFTypeRef ps)
{
  return (CFDictionaryRef)MEMORY[0x1E0CBB8A8](blob, ps);
}

uint64_t IOPSReleasePowerSource()
{
  return MEMORY[0x1E0CBB8C8]();
}

uint64_t IOPSSetPowerSourceDetails()
{
  return MEMORY[0x1E0CBB8D0]();
}

uint64_t IsAppleInternalBuild()
{
  return MEMORY[0x1E0D1AFF8]();
}

uint64_t LogCategoryCreateEx()
{
  return MEMORY[0x1E0D1B048]();
}

uint64_t LogCategoryReplaceF()
{
  return MEMORY[0x1E0D1B050]();
}

uint64_t LogCategory_Remove()
{
  return MEMORY[0x1E0D1B068]();
}

uint64_t LogPrintF()
{
  return MEMORY[0x1E0D1B098]();
}

uint64_t MAGetActivationState()
{
  return MEMORY[0x1E0D4DEB8]();
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x1E0DE2B20]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x1E0DE2B50]();
}

uint64_t MGGetSInt32Answer()
{
  return MEMORY[0x1E0DE2B70]();
}

uint64_t MKBGetDeviceLockState()
{
  return MEMORY[0x1E0D4E4D0]();
}

uint64_t NSAppendPrintF()
{
  return MEMORY[0x1E0D1B130]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1E0CB28A0](aClassName);
}

uint64_t NSDataCompress()
{
  return MEMORY[0x1E0D1B150]();
}

uint64_t NSDataDecompress()
{
  return MEMORY[0x1E0D1B158]();
}

uint64_t NSDecodeNSArrayOfClassIfPresent()
{
  return MEMORY[0x1E0D1B168]();
}

uint64_t NSDecodeObjectIfPresent()
{
  return MEMORY[0x1E0D1B188]();
}

uint64_t NSDecodeSInt64RangedIfPresent()
{
  return MEMORY[0x1E0D1B190]();
}

uint64_t NSDecodeStandardContainerIfPresent()
{
  return MEMORY[0x1E0D1B198]();
}

uint64_t NSDictionaryGetNSNumber()
{
  return MEMORY[0x1E0D1B1A8]();
}

uint64_t NSErrorF()
{
  return MEMORY[0x1E0D1B1C0]();
}

uint64_t NSErrorNestedF()
{
  return MEMORY[0x1E0D1B1E0]();
}

uint64_t NSErrorNestedV()
{
  return MEMORY[0x1E0D1B1E8]();
}

uint64_t NSErrorToOSStatus()
{
  return MEMORY[0x1E0D1B1F0]();
}

uint64_t NSErrorV()
{
  return MEMORY[0x1E0D1B1F8]();
}

uint64_t NSErrorWithOSStatusF()
{
  return MEMORY[0x1E0D1B200]();
}

void NSLog(NSString *format, ...)
{
  MEMORY[0x1E0CB2D88](format);
}

uint64_t NSPrintF()
{
  return MEMORY[0x1E0D1B210]();
}

uint64_t NSRandomData()
{
  return MEMORY[0x1E0D1B228]();
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return (NSArray *)MEMORY[0x1E0CB3178](directory, domainMask, expandTilde);
}

uint64_t NSStringFromBOOL()
{
  return MEMORY[0x1E0CB31F8]();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1E0CB3200](aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1E0CB3230](aSelector);
}

uint64_t NSStringWithMACAddress()
{
  return MEMORY[0x1E0D1B238]();
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1E0CB3250]();
}

uint64_t NSUnimplemented_()
{
  return MEMORY[0x1E0CB33D8]();
}

uint64_t NormalizePath()
{
  return MEMORY[0x1E0D1B308]();
}

uint64_t OPACKDecodeData()
{
  return MEMORY[0x1E0D1B4C0]();
}

uint64_t OPACKEncoderCreateData()
{
  return MEMORY[0x1E0D1B4D0]();
}

uint64_t OPACKEncoderCreateDataMutable()
{
  return MEMORY[0x1E0D1B4D8]();
}

uint64_t PNCopyBestGuessNormalizedNumberForCountry()
{
  return MEMORY[0x1E0D17868]();
}

uint64_t PairingSessionCopyPairedPeer()
{
  return MEMORY[0x1E0D1B4F8]();
}

uint64_t PairingSessionCreate()
{
  return MEMORY[0x1E0D1B510]();
}

uint64_t PairingSessionDeriveKey()
{
  return MEMORY[0x1E0D1B528]();
}

uint64_t PairingSessionExchange()
{
  return MEMORY[0x1E0D1B530]();
}

uint64_t PairingSessionSetACL()
{
  return MEMORY[0x1E0D1B560]();
}

uint64_t PairingSessionSetFlags()
{
  return MEMORY[0x1E0D1B570]();
}

uint64_t PairingSessionSetLogging()
{
  return MEMORY[0x1E0D1B588]();
}

uint64_t PairingSessionSetMyAppleID()
{
  return MEMORY[0x1E0D1B598]();
}

uint64_t PairingSessionSetMyAppleIDInfoClient()
{
  return MEMORY[0x1E0D1B5A0]();
}

uint64_t PairingSessionSetPeerAppleID()
{
  return MEMORY[0x1E0D1B5A8]();
}

uint64_t PairingSessionSetPeerAppleIDs()
{
  return MEMORY[0x1E0D1B5B0]();
}

uint64_t PairingSessionSetSetupCode()
{
  return MEMORY[0x1E0D1B5C8]();
}

uint64_t RandomBytes()
{
  return MEMORY[0x1E0D1B5F8]();
}

uint64_t RandomString()
{
  return MEMORY[0x1E0D1B600]();
}

CFPropertyListRef SCDynamicStoreCopyValue(SCDynamicStoreRef store, CFStringRef key)
{
  return (CFPropertyListRef)MEMORY[0x1E0CE8768](store, key);
}

uint64_t SNPrintF()
{
  return MEMORY[0x1E0D1B610]();
}

uint64_t SNPrintF_Add()
{
  return MEMORY[0x1E0D1B618]();
}

uint64_t SecCMSVerifyCopyDataAndAttributes()
{
  return MEMORY[0x1E0CD5F28]();
}

uint64_t SecCertificateCopyCommonNames()
{
  return MEMORY[0x1E0CD5F50]();
}

SecKeyRef SecCertificateCopyKey(SecCertificateRef certificate)
{
  return (SecKeyRef)MEMORY[0x1E0CD5F98](certificate);
}

CFDataRef SecCertificateCopySerialNumberData(SecCertificateRef certificate, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x1E0CD5FD8](certificate, error);
}

SecCertificateRef SecCertificateCreateWithData(CFAllocatorRef allocator, CFDataRef data)
{
  return (SecCertificateRef)MEMORY[0x1E0CD6010](allocator, data);
}

CFTypeID SecCertificateGetTypeID(void)
{
  return MEMORY[0x1E0CD6050]();
}

uint64_t SecCertificateNotValidAfter()
{
  return MEMORY[0x1E0CD6070]();
}

uint64_t SecGenerateCertificateRequestWithParameters()
{
  return MEMORY[0x1E0CD6260]();
}

uint64_t SecIdentityCreate()
{
  return MEMORY[0x1E0CD6280]();
}

OSStatus SecItemAdd(CFDictionaryRef attributes, CFTypeRef *result)
{
  return MEMORY[0x1E0CD6290](attributes, result);
}

OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef *result)
{
  return MEMORY[0x1E0CD6298](query, result);
}

OSStatus SecItemDelete(CFDictionaryRef query)
{
  return MEMORY[0x1E0CD62A0](query);
}

OSStatus SecItemUpdate(CFDictionaryRef query, CFDictionaryRef attributesToUpdate)
{
  return MEMORY[0x1E0CD62D8](query, attributesToUpdate);
}

uint64_t SecKeyCopyMatchingPrivateKey()
{
  return MEMORY[0x1E0CD6308]();
}

SecKeyRef SecKeyCopyPublicKey(SecKeyRef key)
{
  return (SecKeyRef)MEMORY[0x1E0CD6318](key);
}

CFDataRef SecKeyCreateDecryptedData(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef ciphertext, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x1E0CD6340](key, algorithm, ciphertext, error);
}

CFDataRef SecKeyCreateEncryptedData(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef plaintext, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x1E0CD6358](key, algorithm, plaintext, error);
}

SecKeyRef SecKeyCreateRandomKey(CFDictionaryRef parameters, CFErrorRef *error)
{
  return (SecKeyRef)MEMORY[0x1E0CD6388](parameters, error);
}

CFDataRef SecKeyCreateSignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef dataToSign, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x1E0CD6390](key, algorithm, dataToSign, error);
}

uint64_t SecKeyGetAlgorithmId()
{
  return MEMORY[0x1E0CD63D0]();
}

size_t SecKeyGetBlockSize(SecKeyRef key)
{
  return MEMORY[0x1E0CD63D8](key);
}

CFTypeID SecKeyGetTypeID(void)
{
  return MEMORY[0x1E0CD63E8]();
}

Boolean SecKeyVerifySignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef signedData, CFDataRef signature, CFErrorRef *error)
{
  return MEMORY[0x1E0CD6418](key, algorithm, signedData, signature, error);
}

uint64_t SecPolicyCreateAppleIDAuthorityPolicy()
{
  return MEMORY[0x1E0CD6480]();
}

uint64_t SecPolicyCreateAppleIDValidationRecordSigningPolicy()
{
  return MEMORY[0x1E0CD6498]();
}

OSStatus SecTrustCreateWithCertificates(CFTypeRef certificates, CFTypeRef policies, SecTrustRef *trust)
{
  return MEMORY[0x1E0CD6698](certificates, policies, trust);
}

OSStatus SecTrustEvaluate(SecTrustRef trust, SecTrustResultType *result)
{
  return MEMORY[0x1E0CD66A8](trust, result);
}

OSStatus SecTrustEvaluateAsync(SecTrustRef trust, dispatch_queue_t queue, SecTrustCallback result)
{
  return MEMORY[0x1E0CD66B0](trust, queue, result);
}

BOOL SecTrustEvaluateWithError(SecTrustRef trust, CFErrorRef *error)
{
  return MEMORY[0x1E0CD66C8](trust, error);
}

uint64_t SecondsToUpTicksF()
{
  return MEMORY[0x1E0D1B630]();
}

uint64_t SipHash()
{
  return MEMORY[0x1E0D1B658]();
}

uint64_t StringToUUIDEx()
{
  return MEMORY[0x1E0D1B720]();
}

uint64_t TextSep()
{
  return MEMORY[0x1E0D1B788]();
}

uint64_t TextToSourceVersion()
{
  return MEMORY[0x1E0D1B7B8]();
}

Boolean UTTypeConformsTo(CFStringRef inUTI, CFStringRef inConformsToUTI)
{
  return MEMORY[0x1E0CA5940](inUTI, inConformsToUTI);
}

CFURLRef UTTypeCopyDeclaringBundleURL(CFStringRef inUTI)
{
  return (CFURLRef)MEMORY[0x1E0CA5958](inUTI);
}

CFStringRef UTTypeCreatePreferredIdentifierForTag(CFStringRef inTagClass, CFStringRef inTag, CFStringRef inConformingToUTI)
{
  return (CFStringRef)MEMORY[0x1E0CA5980](inTagClass, inTag, inConformingToUTI);
}

Boolean UTTypeIsDynamic(CFStringRef inUTI)
{
  return MEMORY[0x1E0CA5998](inUTI);
}

uint64_t UUIDGet()
{
  return MEMORY[0x1E0D1B7C8]();
}

uint64_t UpTicksToMicroseconds()
{
  return MEMORY[0x1E0D1B7E8]();
}

uint64_t UpTicksToMilliseconds()
{
  return MEMORY[0x1E0D1B7F0]();
}

uint64_t UpTicksToSeconds()
{
  return MEMORY[0x1E0D1B808]();
}

uint64_t UpTicksToSecondsF()
{
  return MEMORY[0x1E0D1B818]();
}

uint64_t WiFiCopyCurrentNetworkInfo()
{
  return MEMORY[0x1E0D1B820]();
}

uint64_t WiFiCopyCurrentNetworkInfoEx()
{
  return MEMORY[0x1E0D1B828]();
}

uint64_t WiFiDeviceClientRegisterAutoJoinNotificationCallback()
{
  return MEMORY[0x1E0D4FB58]();
}

uint64_t WiFiDeviceClientRegisterRemovalCallback()
{
  return MEMORY[0x1E0D4FB88]();
}

uint64_t WiFiJoinNetwork_b()
{
  return MEMORY[0x1E0D1B840]();
}

uint64_t WiFiManagerClientCopyDevices()
{
  return MEMORY[0x1E0D4FBE0]();
}

uint64_t WiFiManagerClientCopyNetworks()
{
  return MEMORY[0x1E0D4FBF8]();
}

uint64_t WiFiManagerClientCreate()
{
  return MEMORY[0x1E0D4FC08]();
}

uint64_t WiFiManagerClientDisable()
{
  return MEMORY[0x1E0D4FC10]();
}

uint64_t WiFiManagerClientEnable()
{
  return MEMORY[0x1E0D4FC18]();
}

uint64_t WiFiManagerClientRegisterDeviceAttachmentCallback()
{
  return MEMORY[0x1E0D4FC58]();
}

uint64_t WiFiManagerClientRegisterServerRestartCallback()
{
  return MEMORY[0x1E0D4FC68]();
}

uint64_t WiFiManagerClientScheduleWithRunLoop()
{
  return MEMORY[0x1E0D4FC88]();
}

uint64_t WiFiManagerClientUnscheduleFromRunLoop()
{
  return MEMORY[0x1E0D4FCC0]();
}

uint64_t WiFiNetworkCopyShareablePassword()
{
  return MEMORY[0x1E0D4FCE0]();
}

uint64_t WiFiNetworkGetSSID()
{
  return MEMORY[0x1E0D4FD30]();
}

uint64_t WiFiNetworkGetShareMode()
{
  return MEMORY[0x1E0D4FD40]();
}

uint64_t WiFiScan_b()
{
  return MEMORY[0x1E0D1B868]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

uint64_t _CFRuntimeCreateInstance()
{
  return MEMORY[0x1E0C9A498]();
}

uint64_t _CFRuntimeRegisterClass()
{
  return MEMORY[0x1E0C9A4B0]();
}

uint64_t _CFURLIsFileURL()
{
  return MEMORY[0x1E0C9A710]();
}

uint64_t _CFXPCCreateCFObjectFromXPCObject()
{
  return MEMORY[0x1E0C9A800]();
}

uint64_t _CFXPCCreateXPCObjectFromCFObject()
{
  return MEMORY[0x1E0C9A818]();
}

uint64_t _LogCategory_Initialize()
{
  return MEMORY[0x1E0D1B880]();
}

uint64_t _NSMethodExceptionProem()
{
  return MEMORY[0x1E0CB3C38]();
}

uint64_t _UTHardwareColorMakeWithIndex()
{
  return MEMORY[0x1E0CEC680]();
}

uint64_t _UTHardwareColorMakeWithRGBComponents()
{
  return MEMORY[0x1E0CEC688]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

void std::terminate(void)
{
  MEMORY[0x1E0DE4E18]();
}

uint64_t operator delete()
{
  return off_1E48211B8();
}

uint64_t operator new()
{
  return off_1E48211C0();
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x1E0DE5080](a1);
}

int *__error(void)
{
  return (int *)MEMORY[0x1E0C80AC0]();
}

int __maskrune(__darwin_ct_rune_t a1, unint64_t a2)
{
  return MEMORY[0x1E0C80B50](*(_QWORD *)&a1, a2);
}

uint64_t __memcpy_chk()
{
  return MEMORY[0x1E0C80B68]();
}

uint64_t __strlcat_chk()
{
  return MEMORY[0x1E0C80C40]();
}

os_activity_t _os_activity_create(void *dso, const char *description, os_activity_t activity, os_activity_flag_t flags)
{
  return (os_activity_t)MEMORY[0x1E0C80FC0](dso, description, activity, *(_QWORD *)&flags);
}

void _os_activity_initiate(void *dso, const char *description, os_activity_flag_t flags, os_block_t activity_block)
{
  MEMORY[0x1E0C80FD0](dso, description, *(_QWORD *)&flags, activity_block);
}

void _os_activity_label_useraction(void *dso, const char *name)
{
  MEMORY[0x1E0C80FD8](dso, name);
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x1E0C81010]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81020](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81038](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81040](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1E0DA88F0]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x1E0DEEA50]();
}

uint32_t arc4random(void)
{
  return MEMORY[0x1E0C81570]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

__uint64_t clock_gettime_nsec_np(clockid_t __clock_id)
{
  return MEMORY[0x1E0C82670](*(_QWORD *)&__clock_id);
}

int close(int a1)
{
  return MEMORY[0x1E0C82688](*(_QWORD *)&a1);
}

void dispatch_activate(dispatch_object_t object)
{
  MEMORY[0x1E0C82BC0](object);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82BC8](when, queue, block);
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
  MEMORY[0x1E0C82BE8](queue);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C00](queue, block);
}

dispatch_data_t dispatch_data_create(const void *buffer, size_t size, dispatch_queue_t queue, dispatch_block_t destructor)
{
  return (dispatch_data_t)MEMORY[0x1E0C82CB0](buffer, size, queue, destructor);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1E0C82D00](identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82D48](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

uint64_t dispatch_pthread_root_queue_create()
{
  return MEMORY[0x1E0C82E18]();
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E28](attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E38](attr, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E48](label, attr);
}

dispatch_queue_t dispatch_queue_create_with_target_V2(const char *label, dispatch_queue_attr_t attr, dispatch_queue_t target)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E50](label, attr, target);
}

void dispatch_release(dispatch_object_t object)
{
  MEMORY[0x1E0C82E98](object);
}

void dispatch_resume(dispatch_object_t object)
{
  MEMORY[0x1E0C82EA0](object);
}

void dispatch_retain(dispatch_object_t object)
{
  MEMORY[0x1E0C82EA8](object);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1E0C82EB8](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1E0C82EC8](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82ED8](dsema, timeout);
}

void dispatch_source_cancel(dispatch_source_t source)
{
  MEMORY[0x1E0C82F10](source);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1E0C82F20](type, handle, mask, queue);
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x1E0C82F48](source, handler);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x1E0C82F58](source, handler);
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
  MEMORY[0x1E0C82F78](source, start, interval, leeway);
}

void dispatch_suspend(dispatch_object_t object)
{
  MEMORY[0x1E0C82F88](object);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1E0C82FB8](when, delta);
}

char *dlerror(void)
{
  return (char *)MEMORY[0x1E0C83038]();
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x1E0C83040](__path, *(_QWORD *)&__mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1E0C83050](__handle, __symbol);
}

int dup(int a1)
{
  return MEMORY[0x1E0C83078](*(_QWORD *)&a1);
}

int fclose(FILE *a1)
{
  return MEMORY[0x1E0C832F8](a1);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return (FILE *)MEMORY[0x1E0C83460](__filename, __mode);
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

const char *getprogname(void)
{
  return (const char *)MEMORY[0x1E0C83778]();
}

int getrusage(int a1, rusage *a2)
{
  return MEMORY[0x1E0C837C0](*(_QWORD *)&a1, a2);
}

int gettimeofday(timeval *a1, void *a2)
{
  return MEMORY[0x1E0C83820](a1, a2);
}

uid_t getuid(void)
{
  return MEMORY[0x1E0C83828]();
}

uint64_t kdebug_trace()
{
  return MEMORY[0x1E0C83A20]();
}

tm *__cdecl localtime_r(const time_t *a1, tm *a2)
{
  return (tm *)MEMORY[0x1E0C83BB0](a1, a2);
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x1E0C83C50]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83EF8](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83F00](size, type_id);
}

void *__cdecl memchr(void *__s, int __c, size_t __n)
{
  return (void *)MEMORY[0x1E0C84070](__s, *(_QWORD *)&__c, __n);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1E0C84078](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

errno_t memset_s(void *__s, rsize_t __smax, int __c, rsize_t __n)
{
  return MEMORY[0x1E0C840D0](__s, __smax, *(_QWORD *)&__c, __n);
}

uint64_t mkpath()
{
  return MEMORY[0x1E0D1B970]();
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1E0C843D8](*(_QWORD *)&token);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return MEMORY[0x1E0C843E8](*(_QWORD *)&token, state64);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x1E0C843F8](name);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return MEMORY[0x1E0C84400](name, out_token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1E0C84408](name, out_token, queue, handler);
}

uint32_t notify_set_state(int token, uint64_t state64)
{
  return MEMORY[0x1E0C84428](*(_QWORD *)&token, state64);
}

nw_advertise_descriptor_t nw_advertise_descriptor_create_bonjour_service(const char *name, const char *type, const char *domain)
{
  return (nw_advertise_descriptor_t)MEMORY[0x1E0CCEE78](name, type, domain);
}

nw_browse_descriptor_t nw_browse_descriptor_create_bonjour_service(const char *type, const char *domain)
{
  return (nw_browse_descriptor_t)MEMORY[0x1E0CCEF08](type, domain);
}

nw_endpoint_t nw_browse_result_copy_endpoint(nw_browse_result_t result)
{
  return (nw_endpoint_t)MEMORY[0x1E0CCEF20](result);
}

nw_browse_result_change_t nw_browse_result_get_changes(nw_browse_result_t old_result, nw_browse_result_t new_result)
{
  return MEMORY[0x1E0CCEF30](old_result, new_result);
}

void nw_browser_cancel(nw_browser_t browser)
{
  MEMORY[0x1E0CCEF38](browser);
}

nw_browser_t nw_browser_create(nw_browse_descriptor_t descriptor, nw_parameters_t parameters)
{
  return (nw_browser_t)MEMORY[0x1E0CCEF40](descriptor, parameters);
}

void nw_browser_set_browse_results_changed_handler(nw_browser_t browser, nw_browser_browse_results_changed_handler_t handler)
{
  MEMORY[0x1E0CCEF48](browser, handler);
}

void nw_browser_set_queue(nw_browser_t browser, dispatch_queue_t queue)
{
  MEMORY[0x1E0CCEF50](browser, queue);
}

void nw_browser_set_state_changed_handler(nw_browser_t browser, nw_browser_state_changed_handler_t state_changed_handler)
{
  MEMORY[0x1E0CCEF58](browser, state_changed_handler);
}

void nw_browser_start(nw_browser_t browser)
{
  MEMORY[0x1E0CCEF60](browser);
}

void nw_connection_cancel(nw_connection_t connection)
{
  MEMORY[0x1E0CCEFB8](connection);
}

nw_endpoint_t nw_connection_copy_endpoint(nw_connection_t connection)
{
  return (nw_endpoint_t)MEMORY[0x1E0CCEFF8](connection);
}

nw_parameters_t nw_connection_copy_parameters(nw_connection_t connection)
{
  return (nw_parameters_t)MEMORY[0x1E0CCF018](connection);
}

nw_protocol_metadata_t nw_connection_copy_protocol_metadata(nw_connection_t connection, nw_protocol_definition_t definition)
{
  return (nw_protocol_metadata_t)MEMORY[0x1E0CCF020](connection, definition);
}

nw_connection_t nw_connection_create(nw_endpoint_t endpoint, nw_parameters_t parameters)
{
  return (nw_connection_t)MEMORY[0x1E0CCF030](endpoint, parameters);
}

void nw_connection_receive_message(nw_connection_t connection, nw_connection_receive_completion_t completion)
{
  MEMORY[0x1E0CCF130](connection, completion);
}

void nw_connection_send(nw_connection_t connection, dispatch_data_t content, nw_content_context_t context, BOOL is_complete, nw_connection_send_completion_t completion)
{
  MEMORY[0x1E0CCF168](connection, content, context, is_complete, completion);
}

void nw_connection_set_queue(nw_connection_t connection, dispatch_queue_t queue)
{
  MEMORY[0x1E0CCF1B0](connection, queue);
}

void nw_connection_set_state_changed_handler(nw_connection_t connection, nw_connection_state_changed_handler_t handler)
{
  MEMORY[0x1E0CCF1C0](connection, handler);
}

void nw_connection_start(nw_connection_t connection)
{
  MEMORY[0x1E0CCF1D8](connection);
}

nw_content_context_t nw_content_context_create(const char *context_identifier)
{
  return (nw_content_context_t)MEMORY[0x1E0CCF220](context_identifier);
}

BOOL nw_content_context_get_is_final(nw_content_context_t context)
{
  return MEMORY[0x1E0CCF238](context);
}

void nw_content_context_set_metadata_for_protocol(nw_content_context_t context, nw_protocol_metadata_t protocol_metadata)
{
  MEMORY[0x1E0CCF258](context, protocol_metadata);
}

const char *__cdecl nw_endpoint_get_bonjour_service_name(nw_endpoint_t endpoint)
{
  return (const char *)MEMORY[0x1E0CCF3F0](endpoint);
}

const char *__cdecl nw_endpoint_get_hostname(nw_endpoint_t endpoint)
{
  return (const char *)MEMORY[0x1E0CCF410](endpoint);
}

uint16_t nw_endpoint_get_port(nw_endpoint_t endpoint)
{
  return MEMORY[0x1E0CCF428](endpoint);
}

uint64_t nw_endpoint_get_service_identifier()
{
  return MEMORY[0x1E0CCF430]();
}

uint64_t nw_endpoint_set_txt_record()
{
  return MEMORY[0x1E0CCF450]();
}

CFErrorRef nw_error_copy_cf_error(nw_error_t error)
{
  return (CFErrorRef)MEMORY[0x1E0CCF458](error);
}

int nw_error_get_error_code(nw_error_t error)
{
  return MEMORY[0x1E0CCF468](error);
}

uint64_t nw_interface_create_with_name()
{
  return MEMORY[0x1E0CCF6F8]();
}

void nw_listener_cancel(nw_listener_t listener)
{
  MEMORY[0x1E0CCF7C8](listener);
}

nw_listener_t nw_listener_create(nw_parameters_t parameters)
{
  return (nw_listener_t)MEMORY[0x1E0CCF7D8](parameters);
}

void nw_listener_set_advertise_descriptor(nw_listener_t listener, nw_advertise_descriptor_t advertise_descriptor)
{
  MEMORY[0x1E0CCF7F8](listener, advertise_descriptor);
}

void nw_listener_set_new_connection_handler(nw_listener_t listener, nw_listener_new_connection_handler_t handler)
{
  MEMORY[0x1E0CCF810](listener, handler);
}

void nw_listener_set_queue(nw_listener_t listener, dispatch_queue_t queue)
{
  MEMORY[0x1E0CCF820](listener, queue);
}

void nw_listener_set_state_changed_handler(nw_listener_t listener, nw_listener_state_changed_handler_t handler)
{
  MEMORY[0x1E0CCF828](listener, handler);
}

void nw_listener_start(nw_listener_t listener)
{
  MEMORY[0x1E0CCF830](listener);
}

nw_protocol_stack_t nw_parameters_copy_default_protocol_stack(nw_parameters_t parameters)
{
  return (nw_protocol_stack_t)MEMORY[0x1E0CCF8C8](parameters);
}

nw_parameters_t nw_parameters_create(void)
{
  return (nw_parameters_t)MEMORY[0x1E0CCF930]();
}

nw_parameters_t nw_parameters_create_secure_tcp(nw_parameters_configure_protocol_block_t configure_tls, nw_parameters_configure_protocol_block_t configure_tcp)
{
  return (nw_parameters_t)MEMORY[0x1E0CCF980](configure_tls, configure_tcp);
}

void nw_parameters_prohibit_interface(nw_parameters_t parameters, nw_interface_t interface)
{
  MEMORY[0x1E0CCFA30](parameters, interface);
}

void nw_parameters_require_interface(nw_parameters_t parameters, nw_interface_t interface)
{
  MEMORY[0x1E0CCFA48](parameters, interface);
}

uint64_t nw_parameters_set_attributed_bundle_identifier()
{
  return MEMORY[0x1E0CCFA68]();
}

uint64_t nw_parameters_set_include_ble()
{
  return MEMORY[0x1E0CCFB00]();
}

void nw_parameters_set_include_peer_to_peer(nw_parameters_t parameters, BOOL include_peer_to_peer)
{
  MEMORY[0x1E0CCFB08](parameters, include_peer_to_peer);
}

uint64_t nw_parameters_set_required_netagent_classes()
{
  return MEMORY[0x1E0CCFC00]();
}

nw_protocol_definition_t nw_protocol_copy_ws_definition(void)
{
  return (nw_protocol_definition_t)MEMORY[0x1E0CCFEE8]();
}

BOOL nw_protocol_definition_is_equal(nw_protocol_definition_t definition1, nw_protocol_definition_t definition2)
{
  return MEMORY[0x1E0CCFF08](definition1, definition2);
}

nw_protocol_definition_t nw_protocol_options_copy_definition(nw_protocol_options_t options)
{
  return (nw_protocol_definition_t)MEMORY[0x1E0CCFF80](options);
}

void nw_protocol_stack_iterate_application_protocols(nw_protocol_stack_t stack, nw_protocol_stack_iterate_protocols_block_t iterate_block)
{
  MEMORY[0x1E0CCFFF0](stack, iterate_block);
}

void nw_protocol_stack_prepend_application_protocol(nw_protocol_stack_t stack, nw_protocol_options_t protocol)
{
  MEMORY[0x1E0CCFFF8](stack, protocol);
}

void nw_tcp_options_set_enable_fast_open(nw_protocol_options_t options, BOOL enable_fast_open)
{
  MEMORY[0x1E0CD0380](options, enable_fast_open);
}

void nw_tcp_options_set_enable_keepalive(nw_protocol_options_t options, BOOL enable_keepalive)
{
  MEMORY[0x1E0CD0388](options, enable_keepalive);
}

void nw_tcp_options_set_keepalive_idle_time(nw_protocol_options_t options, uint32_t keepalive_idle_time)
{
  MEMORY[0x1E0CD03A0](options, *(_QWORD *)&keepalive_idle_time);
}

void nw_tcp_options_set_no_delay(nw_protocol_options_t options, BOOL no_delay)
{
  MEMORY[0x1E0CD03A8](options, no_delay);
}

uint64_t nw_txt_record_create_dictionary_with_initial_length()
{
  return MEMORY[0x1E0CD03E8]();
}

BOOL nw_txt_record_set_key(nw_txt_record_t txt_record, const char *key, const uint8_t *value, size_t value_len)
{
  return MEMORY[0x1E0CD0400](txt_record, key, value, value_len);
}

nw_protocol_metadata_t nw_ws_create_metadata(nw_ws_opcode_t opcode)
{
  return (nw_protocol_metadata_t)MEMORY[0x1E0CD0418](*(_QWORD *)&opcode);
}

nw_protocol_options_t nw_ws_create_options(nw_ws_version_t version)
{
  return (nw_protocol_options_t)MEMORY[0x1E0CD0420](*(_QWORD *)&version);
}

nw_ws_response_t nw_ws_metadata_copy_server_response(nw_protocol_metadata_t metadata)
{
  return (nw_ws_response_t)MEMORY[0x1E0CD0428](metadata);
}

void nw_ws_options_add_additional_header(nw_protocol_options_t options, const char *name, const char *value)
{
  MEMORY[0x1E0CD0450](options, name, value);
}

void nw_ws_options_set_auto_reply_ping(nw_protocol_options_t options, BOOL auto_reply_ping)
{
  MEMORY[0x1E0CD0460](options, auto_reply_ping);
}

void nw_ws_options_set_client_request_handler(nw_protocol_options_t options, dispatch_queue_t client_queue, nw_ws_client_request_handler_t handler)
{
  MEMORY[0x1E0CD0468](options, client_queue, handler);
}

BOOL nw_ws_request_enumerate_additional_headers(nw_ws_request_t request, nw_ws_additional_header_enumerator_t enumerator)
{
  return MEMORY[0x1E0CD0490](request, enumerator);
}

void nw_ws_response_add_additional_header(nw_ws_response_t response, const char *name, const char *value)
{
  MEMORY[0x1E0CD0498](response, name, value);
}

nw_ws_response_t nw_ws_response_create(nw_ws_response_status_t status, const char *selected_subprotocol)
{
  return (nw_ws_response_t)MEMORY[0x1E0CD04A0](*(_QWORD *)&status, selected_subprotocol);
}

BOOL nw_ws_response_enumerate_additional_headers(nw_ws_response_t response, nw_ws_additional_header_enumerator_t enumerator)
{
  return MEMORY[0x1E0CD04A8](response, enumerator);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x1E0DE7BD8](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x1E0DE7BE0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1E0DE7BF0](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7C38](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

void objc_end_catch(void)
{
  MEMORY[0x1E0DE7C80]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

void objc_exception_throw(id exception)
{
  MEMORY[0x1E0DE7CA0](exception);
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x1E0DE7CA8](object, key);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1E0DE7CB0](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1E0DE7CD0](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1E0DE7CE0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1E0DE7D50]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1E0DE7E70](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
  MEMORY[0x1E0DE7F40](object, key, value, policy);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F88](self, _cmd, newValue, offset);
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F90](self, _cmd, newValue, offset);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1E0DE7FC8](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1E0DE7FD0](obj);
}

void objc_terminate(void)
{
  MEMORY[0x1E0DE7FD8]();
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7FE0](a1);
}

int open(const char *a1, int a2, ...)
{
  return MEMORY[0x1E0C84480](a1, *(_QWORD *)&a2);
}

void os_activity_apply(os_activity_t activity, os_block_t block)
{
  MEMORY[0x1E0C844F8](activity, block);
}

void os_activity_scope_enter(os_activity_t activity, os_activity_scope_state_t state)
{
  MEMORY[0x1E0C84510](activity, state);
}

void os_activity_scope_leave(os_activity_scope_state_t state)
{
  MEMORY[0x1E0C84518](state);
}

uint64_t os_channel_advance_slot()
{
  return MEMORY[0x1E0C84548]();
}

uint64_t os_channel_get_fd()
{
  return MEMORY[0x1E0C845C8]();
}

uint64_t os_channel_get_next_slot()
{
  return MEMORY[0x1E0C845E0]();
}

uint64_t os_channel_ring_id()
{
  return MEMORY[0x1E0C84620]();
}

uint64_t os_channel_rx_ring()
{
  return MEMORY[0x1E0C84638]();
}

uint64_t os_channel_set_slot_properties()
{
  return MEMORY[0x1E0C84640]();
}

uint64_t os_channel_sync()
{
  return MEMORY[0x1E0C84660]();
}

uint64_t os_channel_tx_ring()
{
  return MEMORY[0x1E0C84668]();
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

void os_release(void *object)
{
  MEMORY[0x1E0C84910](object);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1E0C84920](log);
}

os_signpost_id_t os_signpost_id_make_with_pointer(os_log_t log, const void *ptr)
{
  return MEMORY[0x1E0C84930](log, ptr);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x1E0C84970]();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

int pthread_attr_destroy(pthread_attr_t *a1)
{
  return MEMORY[0x1E0C84CB0](a1);
}

int pthread_attr_init(pthread_attr_t *a1)
{
  return MEMORY[0x1E0C84CC8](a1);
}

int pthread_attr_set_qos_class_np(pthread_attr_t *__attr, qos_class_t __qos_class, int __relative_priority)
{
  return MEMORY[0x1E0C84CD0](__attr, *(_QWORD *)&__qos_class, *(_QWORD *)&__relative_priority);
}

int pthread_mutex_destroy(pthread_mutex_t *a1)
{
  return MEMORY[0x1E0C84E18](a1);
}

int pthread_mutex_init(pthread_mutex_t *a1, const pthread_mutexattr_t *a2)
{
  return MEMORY[0x1E0C84E20](a1, a2);
}

int pthread_mutex_lock(pthread_mutex_t *a1)
{
  return MEMORY[0x1E0C84E28](a1);
}

int pthread_mutex_unlock(pthread_mutex_t *a1)
{
  return MEMORY[0x1E0C84E38](a1);
}

uint64_t pthread_set_fixedpriority_self()
{
  return MEMORY[0x1E0C84EE8]();
}

void qsort(void *__base, size_t __nel, size_t __width, int (__cdecl *__compar)(const void *, const void *))
{
  MEMORY[0x1E0C84F88](__base, __nel, __width, __compar);
}

char *__cdecl realpath_DARWIN_EXTSN(const char *a1, char *a2)
{
  return (char *)MEMORY[0x1E0C85040](a1, a2);
}

uint64_t reboot3()
{
  return MEMORY[0x1E0C85050]();
}

uint64_t sandbox_extension_consume()
{
  return MEMORY[0x1E0C851A0]();
}

uint64_t sandbox_extension_issue_file()
{
  return MEMORY[0x1E0C851A8]();
}

uint64_t sandbox_extension_release()
{
  return MEMORY[0x1E0C851F8]();
}

int setlinebuf(FILE *a1)
{
  return MEMORY[0x1E0C85350](a1);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1E0C85520](__s1, __s2);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x1E0C85548](*(_QWORD *)&__errnum);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1E0C85578](__s);
}

uint64_t strnicmp_prefix()
{
  return MEMORY[0x1E0D1B9A0]();
}

uint64_t strnicmpx()
{
  return MEMORY[0x1E0D1B9A8]();
}

unint64_t strtoul(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x1E0C85698](__str, __endptr, *(_QWORD *)&__base);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x1E0DF0F98]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1E0DF0FA0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1E0DF0FA8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x1E0DF0FB0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1E0DF0FB8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1E0DF0FC0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1E0DEEB88]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getFunctionTypeMetadata1()
{
  return MEMORY[0x1E0DEEC98]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1E0DEECC0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeLayout()
{
  return MEMORY[0x1E0DEED00]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x1E0DEED08]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x1E0DEED10]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x1E0DEED18]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x1E0DEED28]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1E0DEED60]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x1E0DEED68]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1E0DEED70]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x1E0DEED90]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_nonNull()
{
  return MEMORY[0x1E0DEEDC0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x1E0DEEE08]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x1E0DEEFC8]();
}

void xpc_array_append_value(xpc_object_t xarray, xpc_object_t value)
{
  MEMORY[0x1E0C85DE0](xarray, value);
}

xpc_object_t xpc_array_create(xpc_object_t *objects, size_t count)
{
  return (xpc_object_t)MEMORY[0x1E0C85E00](objects, count);
}

size_t xpc_array_get_count(xpc_object_t xarray)
{
  return MEMORY[0x1E0C85E30](xarray);
}

int64_t xpc_array_get_int64(xpc_object_t xarray, size_t index)
{
  return MEMORY[0x1E0C85E60](xarray, index);
}

xpc_object_t xpc_array_get_value(xpc_object_t xarray, size_t index)
{
  return (xpc_object_t)MEMORY[0x1E0C85E90](xarray, index);
}

void xpc_array_set_int64(xpc_object_t xarray, size_t index, int64_t value)
{
  MEMORY[0x1E0C85EC0](xarray, index, value);
}

void xpc_array_set_string(xpc_object_t xarray, size_t index, const char *string)
{
  MEMORY[0x1E0C85ED0](xarray, index, string);
}

void xpc_connection_cancel(xpc_connection_t connection)
{
  MEMORY[0x1E0C85F68](connection);
}

xpc_connection_t xpc_connection_create_mach_service(const char *name, dispatch_queue_t targetq, uint64_t flags)
{
  return (xpc_connection_t)MEMORY[0x1E0C85FB0](name, targetq, flags);
}

void *__cdecl xpc_connection_get_context(xpc_connection_t connection)
{
  return (void *)MEMORY[0x1E0C85FE0](connection);
}

void xpc_connection_resume(xpc_connection_t connection)
{
  MEMORY[0x1E0C86018](connection);
}

void xpc_connection_send_barrier(xpc_connection_t connection, dispatch_block_t barrier)
{
  MEMORY[0x1E0C86020](connection, barrier);
}

void xpc_connection_send_message(xpc_connection_t connection, xpc_object_t message)
{
  MEMORY[0x1E0C86030](connection, message);
}

void xpc_connection_set_context(xpc_connection_t connection, void *context)
{
  MEMORY[0x1E0C86070](connection, context);
}

void xpc_connection_set_event_handler(xpc_connection_t connection, xpc_handler_t handler)
{
  MEMORY[0x1E0C86080](connection, handler);
}

void xpc_connection_set_finalizer_f(xpc_connection_t connection, xpc_finalizer_t finalizer)
{
  MEMORY[0x1E0C86088](connection, finalizer);
}

BOOL xpc_dictionary_apply(xpc_object_t xdict, xpc_dictionary_applier_t applier)
{
  return MEMORY[0x1E0C861F0](xdict, applier);
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return (xpc_object_t)MEMORY[0x1E0C86208](keys, values, count);
}

int64_t xpc_dictionary_get_int64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1E0C862A0](xdict, key);
}

uint64_t xpc_dictionary_get_uint64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1E0C862D0](xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x1E0C862E0](xdict, key);
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
  MEMORY[0x1E0C86360](xdict, key, value);
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
  MEMORY[0x1E0C86390](xdict, key, string);
}

void xpc_dictionary_set_uint64(xpc_object_t xdict, const char *key, uint64_t value)
{
  MEMORY[0x1E0C86398](xdict, key, value);
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
  MEMORY[0x1E0C863B8](xdict, key, value);
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x1E0C86520](object);
}

void xpc_release(xpc_object_t object)
{
  MEMORY[0x1E0C86658](object);
}

const char *__cdecl xpc_string_get_string_ptr(xpc_object_t xstring)
{
  return (const char *)MEMORY[0x1E0C86758](xstring);
}

