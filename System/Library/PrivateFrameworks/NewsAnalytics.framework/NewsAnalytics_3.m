uint64_t (*ArticleEngagementEvent.channelData.modify())()
{
  type metadata accessor for ArticleEngagementEvent(0);
  return nullsub_1;
}

uint64_t ArticleEngagementEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleEngagementEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleEngagementEvent.userChannelContextData.modify())()
{
  type metadata accessor for ArticleEngagementEvent(0);
  return nullsub_1;
}

uint64_t ArticleEngagementEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleEngagementEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleEngagementEvent.issueData.modify())()
{
  type metadata accessor for ArticleEngagementEvent(0);
  return nullsub_1;
}

uint64_t ArticleEngagementEvent.issueViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleEngagementEvent.issueViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleEngagementEvent.issueViewData.modify())()
{
  type metadata accessor for ArticleEngagementEvent(0);
  return nullsub_1;
}

uint64_t ArticleEngagementEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleEngagementEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleEngagementEvent.groupData.modify())()
{
  type metadata accessor for ArticleEngagementEvent(0);
  return nullsub_1;
}

uint64_t ArticleEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ArticleEngagementEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  v14 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v14, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v14, v19);
}

uint64_t ArticleEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ArticleEngagementEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleEngagementEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ArticleEngagementEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CAC80);
}

uint64_t ArticleEngagementEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent.Model(0) + 24);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t ArticleEngagementEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleEngagementEvent.Model.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = type metadata accessor for ArticleEngagementEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 32));
  v5 = *v4;
  v6 = v4[1];
  LOWORD(v4) = *((_WORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_BYTE *)(a1 + 1) = v6;
  *(_WORD *)(a1 + 2) = (_WORD)v4;
  return result;
}

uint64_t ArticleEngagementEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleEngagementEvent.Model(0) + 36));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t ArticleEngagementEvent.Model.issueViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ArticleEngagementEvent.Model(0) + 40));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t *ArticleEngagementEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5[17];

  v3 = type metadata accessor for ArticleEngagementEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 44), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D582B584(v5);
}

uint64_t ArticleEngagementEvent.Model.init(eventData:viewData:articleData:channelData:userChannelContextData:issueData:issueViewData:groupData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __int128 *a3@<X2>, uint64_t *a4@<X3>, char *a5@<X4>, __int128 *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  __int16 v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _BYTE v44[23];
  _BYTE v45[144];

  v11 = *a2;
  v12 = a2[1];
  v13 = *((_WORD *)a2 + 8);
  v43 = a3[6];
  *(_OWORD *)v44 = a3[7];
  *(_QWORD *)&v44[15] = *(_QWORD *)((char *)a3 + 127);
  v39 = a3[2];
  v40 = a3[3];
  v41 = a3[4];
  v42 = a3[5];
  v37 = *a3;
  v38 = a3[1];
  v14 = *a4;
  v28 = a4[1];
  v15 = *((_BYTE *)a4 + 16);
  v16 = *((_BYTE *)a4 + 17);
  v17 = a4[3];
  v18 = a4[4];
  v30 = a5[1];
  v31 = *a5;
  v29 = *((_WORD *)a5 + 1);
  v34 = *a6;
  v32 = *((_QWORD *)a6 + 3);
  v33 = *((_QWORD *)a6 + 2);
  v35 = a7[1];
  v36 = *a7;
  sub_1D57DD5B8(a8, (uint64_t)v45);
  v19 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a9, a1, v19);
  v20 = (int *)type metadata accessor for ArticleEngagementEvent.Model(0);
  v21 = a9 + v20[5];
  *(_QWORD *)v21 = v11;
  *(_QWORD *)(v21 + 8) = v12;
  *(_WORD *)(v21 + 16) = v13;
  v22 = a9 + v20[6];
  *(_OWORD *)(v22 + 96) = v43;
  *(_OWORD *)(v22 + 112) = *(_OWORD *)v44;
  *(_QWORD *)(v22 + 127) = *(_QWORD *)&v44[15];
  *(_OWORD *)(v22 + 32) = v39;
  *(_OWORD *)(v22 + 48) = v40;
  *(_OWORD *)(v22 + 64) = v41;
  *(_OWORD *)(v22 + 80) = v42;
  *(_OWORD *)v22 = v37;
  *(_OWORD *)(v22 + 16) = v38;
  v23 = a9 + v20[7];
  *(_QWORD *)v23 = v14;
  *(_QWORD *)(v23 + 8) = v28;
  *(_BYTE *)(v23 + 16) = v15;
  *(_BYTE *)(v23 + 17) = v16;
  *(_QWORD *)(v23 + 24) = v17;
  *(_QWORD *)(v23 + 32) = v18;
  v24 = a9 + v20[8];
  *(_BYTE *)v24 = v31;
  *(_BYTE *)(v24 + 1) = v30;
  *(_WORD *)(v24 + 2) = v29;
  v25 = a9 + v20[9];
  *(_OWORD *)v25 = v34;
  *(_QWORD *)(v25 + 16) = v33;
  *(_QWORD *)(v25 + 24) = v32;
  v26 = (_QWORD *)(a9 + v20[10]);
  *v26 = v36;
  v26[1] = v35;
  return sub_1D57DD5B8((uint64_t)v45, a9 + v20[11]);
}

uint64_t sub_1D5933F20(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5933F58 + 4 * byte_1D5ACC940[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5933F58()
{
  return 0x6174614477656976;
}

uint64_t sub_1D5933F70()
{
  return 0x44656C6369747261;
}

unint64_t sub_1D5933FA4()
{
  return 0xD000000000000016;
}

uint64_t sub_1D5933FC0()
{
  return 0x7461446575737369;
}

uint64_t sub_1D5933FD4()
{
  return 0x6569566575737369;
}

uint64_t sub_1D5933FF8()
{
  return 0x74614470756F7267;
}

uint64_t sub_1D593400C()
{
  unsigned __int8 *v0;

  return sub_1D5933F20(*v0);
}

uint64_t sub_1D5934014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59377CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5934038()
{
  sub_1D5934410();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5934060()
{
  sub_1D5934410();
  return sub_1D5AAEEE0();
}

uint64_t ArticleEngagementEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  char v28;
  __int128 *v29;
  __int128 v30;
  _BYTE v32[8];
  char v33[136];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[23];
  char v42;
  __int128 v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  __int16 v47;

  v3 = v1;
  sub_1D5934AFC(0, &qword_1EFF4D590, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v32[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5934410();
  sub_1D5AAEEC8();
  LOBYTE(v34) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for ArticleEngagementEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    v45 = v12;
    v46 = v13;
    v47 = (__int16)v11;
    v44 = 1;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v14 = (__int128 *)(v3 + v10[6]);
    v15 = v14[7];
    v40 = v14[6];
    *(_OWORD *)v41 = v15;
    *(_QWORD *)&v41[15] = *(_QWORD *)((char *)v14 + 127);
    v16 = v14[3];
    v36 = v14[2];
    v37 = v16;
    v17 = v14[5];
    v38 = v14[4];
    v39 = v17;
    v18 = v14[1];
    v34 = *v14;
    v35 = v18;
    v33[0] = 2;
    sub_1D57CB940();
    sub_1D5AAED6C();
    v19 = (uint64_t *)(v3 + v10[7]);
    v20 = *v19;
    v21 = v19[1];
    v22 = *((_BYTE *)v19 + 16);
    v23 = *((_BYTE *)v19 + 17);
    v25 = v19[3];
    v24 = v19[4];
    *(_QWORD *)&v34 = v20;
    *((_QWORD *)&v34 + 1) = v21;
    LOBYTE(v35) = v22;
    BYTE1(v35) = v23;
    *((_QWORD *)&v35 + 1) = v25;
    *(_QWORD *)&v36 = v24;
    v33[0] = 3;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v26 = (char *)(v3 + v10[8]);
    v27 = *v26;
    v28 = v26[1];
    LOWORD(v26) = *((_WORD *)v26 + 1);
    LOBYTE(v34) = v27;
    BYTE1(v34) = v28;
    WORD1(v34) = (_WORD)v26;
    v33[0] = 4;
    sub_1D57C7B24();
    sub_1D5AAED6C();
    v29 = (__int128 *)(v3 + v10[9]);
    v30 = v29[1];
    v34 = *v29;
    v35 = v30;
    v33[0] = 5;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    v43 = *(_OWORD *)(v3 + v10[10]);
    v42 = 6;
    sub_1D57CAD6C();
    sub_1D5AAED18();
    sub_1D57DD5B8(v3 + v10[11], (uint64_t)&v34);
    sub_1D57DD5B8((uint64_t)&v34, (uint64_t)v33);
    v32[7] = 7;
    sub_1D57C5FEC();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5934410()
{
  unint64_t result;

  result = qword_1ED9CD918;
  if (!qword_1ED9CD918)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACCBEC, &type metadata for ArticleEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD918);
  }
  return result;
}

uint64_t ArticleEngagementEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  __int16 v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  __int128 v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  _BYTE v46[144];
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  char v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _OWORD v58[2];
  char *v59;

  v40 = a2;
  v4 = sub_1D5AADF98();
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5934AFC(0, &qword_1ED9CD920, MEMORY[0x1E0DED048]);
  v41 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v38 - v9;
  v45 = type metadata accessor for ArticleEngagementEvent.Model(0);
  MEMORY[0x1E0C80A78](v45);
  v59 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v44 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1D5934410();
  v43 = v10;
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  v39 = v8;
  LOBYTE(v47) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v13 = v41;
  sub_1D5AAECD0();
  v14 = (uint64_t)v59;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v59, v6, v4);
  v46[0] = 1;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v15 = *((_QWORD *)&v47 + 1);
  v16 = v48;
  v17 = (int *)v45;
  v18 = v14 + *(int *)(v45 + 20);
  *(_QWORD *)v18 = v47;
  *(_QWORD *)(v18 + 8) = v15;
  *(_WORD *)(v18 + 16) = v16;
  v50 = 2;
  sub_1D57CB8FC();
  sub_1D5AAECD0();
  v19 = v14 + v17[6];
  v20 = v56;
  v21 = v58[0];
  *(_OWORD *)(v19 + 96) = v57;
  *(_OWORD *)(v19 + 112) = v21;
  *(_QWORD *)(v19 + 127) = *(_QWORD *)((char *)v58 + 15);
  v22 = v54;
  *(_OWORD *)(v19 + 32) = v53;
  *(_OWORD *)(v19 + 48) = v22;
  *(_OWORD *)(v19 + 64) = v55;
  *(_OWORD *)(v19 + 80) = v20;
  v23 = v52;
  *(_OWORD *)v19 = v51;
  *(_OWORD *)(v19 + 16) = v23;
  v46[0] = 3;
  sub_1D57CB874();
  sub_1D5AAECD0();
  v24 = (uint64_t)v44;
  v25 = *((_QWORD *)&v47 + 1);
  v26 = v48;
  v27 = BYTE1(v48);
  v28 = *((_QWORD *)&v48 + 1);
  v29 = v49;
  v30 = v14 + v17[7];
  *(_QWORD *)v30 = v47;
  *(_QWORD *)(v30 + 8) = v25;
  *(_BYTE *)(v30 + 16) = v26;
  *(_BYTE *)(v30 + 17) = v27;
  *(_QWORD *)(v30 + 24) = v28;
  *(_QWORD *)(v30 + 32) = v29;
  v46[0] = 4;
  sub_1D57C7AE0();
  sub_1D5AAECD0();
  v31 = BYTE1(v47);
  v32 = WORD1(v47);
  v33 = v14 + v17[8];
  *(_BYTE *)v33 = v47;
  *(_BYTE *)(v33 + 1) = v31;
  *(_WORD *)(v33 + 2) = v32;
  v46[0] = 5;
  sub_1D57C5ED8();
  sub_1D5AAEC7C();
  v34 = v39;
  v35 = (_OWORD *)(v14 + v17[9]);
  v36 = v48;
  *v35 = v47;
  v35[1] = v36;
  v46[0] = 6;
  sub_1D57CAD28();
  sub_1D5AAEC7C();
  *(_OWORD *)(v14 + v17[10]) = v47;
  v46[143] = 7;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v43, v13);
  sub_1D57DD5B8((uint64_t)&v47, (uint64_t)v46);
  sub_1D57DD5B8((uint64_t)v46, v14 + v17[11]);
  sub_1D5934B58(v14, v40);
  __swift_destroy_boxed_opaque_existential_1(v24);
  return sub_1D5934B9C(v14);
}

void sub_1D5934AFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5934410();
    v7 = a3(a1, &type metadata for ArticleEngagementEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5934B58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArticleEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5934B9C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArticleEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5934BD8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5934BEC(_QWORD *a1)
{
  return ArticleEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5934C00@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CCFD8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCC78, a1);
}

uint64_t sub_1D5934C24@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CD000, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCFE0, a1);
}

uint64_t sub_1D5934C48@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  v15 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v15, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v15, v20);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleEngagementEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for ArticleEngagementEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

uint64_t initializeWithCopy for ArticleEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for ArticleEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for ArticleEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for ArticleEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleEngagementEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5935D0C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
                v8 = v19;
                v12 = *(_QWORD *)(v19 - 8);
                v13 = a3[11];
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ArticleEngagementEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5935F44(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
                v10 = v21;
                v14 = *(_QWORD *)(v21 - 8);
                v15 = a4[11];
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5936178()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
                if (v7 <= 0x3F)
                  swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleEngagementEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v13[8] = v14[8];
    v15 = *((_QWORD *)v14 + 3);
    *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 3) = v15;
    v13[32] = v14[32];
    v16 = *((_QWORD *)v14 + 6);
    *((_QWORD *)v13 + 5) = *((_QWORD *)v14 + 5);
    *((_QWORD *)v13 + 6) = v16;
    v13[56] = v14[56];
    v13[57] = v14[57];
    v17 = *((_QWORD *)v14 + 9);
    v18 = *((_QWORD *)v14 + 8);
    v13[80] = v14[80];
    *((_QWORD *)v13 + 8) = v18;
    *((_QWORD *)v13 + 9) = v17;
    *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
    *((_QWORD *)v13 + 13) = *((_QWORD *)v14 + 13);
    v13[112] = v14[112];
    *((_QWORD *)v13 + 15) = *((_QWORD *)v14 + 15);
    *((_DWORD *)v13 + 32) = *((_DWORD *)v14 + 32);
    v13[132] = v14[132];
    v13[133] = v14[133];
    v13[134] = v14[134];
    v19 = a3[7];
    v20 = a3[8];
    v21 = (char *)a1 + v19;
    v22 = (char *)a2 + v19;
    v23 = *((_QWORD *)v22 + 1);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = v23;
    v21[16] = v22[16];
    v21[17] = v22[17];
    v24 = *((_QWORD *)v22 + 4);
    *((_QWORD *)v21 + 3) = *((_QWORD *)v22 + 3);
    *((_QWORD *)v21 + 4) = v24;
    *(_DWORD *)((char *)a1 + v20) = *(_DWORD *)((char *)a2 + v20);
    v25 = a3[9];
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = *(uint64_t *)((char *)a2 + v25 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28)
    {
      *(_QWORD *)v26 = *(_QWORD *)v27;
      *((_QWORD *)v26 + 1) = v28;
      *((_WORD *)v26 + 8) = *((_WORD *)v27 + 8);
      *((_QWORD *)v26 + 3) = *((_QWORD *)v27 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v30 = *((_OWORD *)v27 + 1);
      *(_OWORD *)v26 = *(_OWORD *)v27;
      *((_OWORD *)v26 + 1) = v30;
    }
    v31 = a3[10];
    v32 = a3[11];
    v33 = (uint64_t *)((char *)a1 + v31);
    v34 = (uint64_t *)((char *)a2 + v31);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v36 = (char *)a1 + v32;
    v37 = (char *)a2 + v32;
    v38 = *(uint64_t *)((char *)a2 + v32 + 16);
    swift_bridgeObjectRetain();
    if (v38)
    {
      *(_WORD *)v36 = *(_WORD *)v37;
      *((_QWORD *)v36 + 1) = *((_QWORD *)v37 + 1);
      *((_QWORD *)v36 + 2) = v38;
      *((_QWORD *)v36 + 3) = *((_QWORD *)v37 + 3);
      v39 = *((_QWORD *)v37 + 5);
      *((_QWORD *)v36 + 4) = *((_QWORD *)v37 + 4);
      *((_QWORD *)v36 + 5) = v39;
      v40 = *((_QWORD *)v37 + 7);
      *((_QWORD *)v36 + 6) = *((_QWORD *)v37 + 6);
      *((_QWORD *)v36 + 7) = v40;
      v41 = *((_QWORD *)v37 + 9);
      *((_QWORD *)v36 + 8) = *((_QWORD *)v37 + 8);
      *((_QWORD *)v36 + 9) = v41;
      v36[80] = v37[80];
      v42 = *((_QWORD *)v37 + 12);
      *((_QWORD *)v36 + 11) = *((_QWORD *)v37 + 11);
      *((_QWORD *)v36 + 12) = v42;
      *((_QWORD *)v36 + 13) = *((_QWORD *)v37 + 13);
      v36[112] = v37[112];
      v43 = *((_QWORD *)v37 + 15);
      v44 = *((_QWORD *)v37 + 16);
      *((_QWORD *)v36 + 15) = v43;
      *((_QWORD *)v36 + 16) = v44;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v45 = *((_OWORD *)v37 + 7);
      *((_OWORD *)v36 + 6) = *((_OWORD *)v37 + 6);
      *((_OWORD *)v36 + 7) = v45;
      *((_QWORD *)v36 + 16) = *((_QWORD *)v37 + 16);
      v46 = *((_OWORD *)v37 + 3);
      *((_OWORD *)v36 + 2) = *((_OWORD *)v37 + 2);
      *((_OWORD *)v36 + 3) = v46;
      v47 = *((_OWORD *)v37 + 5);
      *((_OWORD *)v36 + 4) = *((_OWORD *)v37 + 4);
      *((_OWORD *)v36 + 5) = v47;
      v48 = *((_OWORD *)v37 + 1);
      *(_OWORD *)v36 = *(_OWORD *)v37;
      *((_OWORD *)v36 + 1) = v48;
    }
  }
  return a1;
}

uint64_t destroy for ArticleEngagementEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 36) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + *(int *)(a2 + 44) + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ArticleEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v48;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  v14 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v14;
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  v15 = *(_QWORD *)(v13 + 48);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 48) = v15;
  *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
  *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
  v17 = *(_QWORD *)(v13 + 64);
  v16 = *(_QWORD *)(v13 + 72);
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  *(_QWORD *)(v12 + 64) = v17;
  *(_QWORD *)(v12 + 72) = v16;
  *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  *(_DWORD *)(v12 + 128) = *(_DWORD *)(v13 + 128);
  *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
  *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
  *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
  v18 = a3[7];
  v19 = a3[8];
  v20 = a1 + v18;
  v21 = a2 + v18;
  v22 = *(_QWORD *)(v21 + 8);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_QWORD *)(v20 + 8) = v22;
  *(_BYTE *)(v20 + 16) = *(_BYTE *)(v21 + 16);
  *(_BYTE *)(v20 + 17) = *(_BYTE *)(v21 + 17);
  v23 = *(_QWORD *)(v21 + 32);
  *(_QWORD *)(v20 + 24) = *(_QWORD *)(v21 + 24);
  *(_QWORD *)(v20 + 32) = v23;
  *(_DWORD *)(a1 + v19) = *(_DWORD *)(a2 + v19);
  v24 = a3[9];
  v48 = a1;
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)(a2 + v24 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27)
  {
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *(_QWORD *)(v25 + 8) = v27;
    *(_WORD *)(v25 + 16) = *(_WORD *)(v26 + 16);
    *(_QWORD *)(v25 + 24) = *(_QWORD *)(v26 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v28 = *(_OWORD *)(v26 + 16);
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 16) = v28;
  }
  v29 = a3[10];
  v30 = a3[11];
  v31 = (_QWORD *)(v48 + v29);
  v32 = (_QWORD *)(a2 + v29);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = v48 + v30;
  v35 = a2 + v30;
  v36 = *(_QWORD *)(a2 + v30 + 16);
  swift_bridgeObjectRetain();
  if (v36)
  {
    *(_WORD *)v34 = *(_WORD *)v35;
    *(_QWORD *)(v34 + 8) = *(_QWORD *)(v35 + 8);
    *(_QWORD *)(v34 + 16) = v36;
    *(_QWORD *)(v34 + 24) = *(_QWORD *)(v35 + 24);
    v37 = *(_QWORD *)(v35 + 40);
    *(_QWORD *)(v34 + 32) = *(_QWORD *)(v35 + 32);
    *(_QWORD *)(v34 + 40) = v37;
    v38 = *(_QWORD *)(v35 + 56);
    *(_QWORD *)(v34 + 48) = *(_QWORD *)(v35 + 48);
    *(_QWORD *)(v34 + 56) = v38;
    v39 = *(_QWORD *)(v35 + 72);
    *(_QWORD *)(v34 + 64) = *(_QWORD *)(v35 + 64);
    *(_QWORD *)(v34 + 72) = v39;
    *(_BYTE *)(v34 + 80) = *(_BYTE *)(v35 + 80);
    v40 = *(_QWORD *)(v35 + 96);
    *(_QWORD *)(v34 + 88) = *(_QWORD *)(v35 + 88);
    *(_QWORD *)(v34 + 96) = v40;
    *(_QWORD *)(v34 + 104) = *(_QWORD *)(v35 + 104);
    *(_BYTE *)(v34 + 112) = *(_BYTE *)(v35 + 112);
    v41 = *(_QWORD *)(v35 + 120);
    v42 = *(_QWORD *)(v35 + 128);
    *(_QWORD *)(v34 + 120) = v41;
    *(_QWORD *)(v34 + 128) = v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v43 = *(_OWORD *)(v35 + 112);
    *(_OWORD *)(v34 + 96) = *(_OWORD *)(v35 + 96);
    *(_OWORD *)(v34 + 112) = v43;
    *(_QWORD *)(v34 + 128) = *(_QWORD *)(v35 + 128);
    v44 = *(_OWORD *)(v35 + 48);
    *(_OWORD *)(v34 + 32) = *(_OWORD *)(v35 + 32);
    *(_OWORD *)(v34 + 48) = v44;
    v45 = *(_OWORD *)(v35 + 80);
    *(_OWORD *)(v34 + 64) = *(_OWORD *)(v35 + 64);
    *(_OWORD *)(v34 + 80) = v45;
    v46 = *(_OWORD *)(v35 + 16);
    *(_OWORD *)v34 = *(_OWORD *)v35;
    *(_OWORD *)(v34 + 16) = v46;
  }
  return v48;
}

uint64_t assignWithCopy for ArticleEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(v9 + 17);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_BYTE *)v11 = *(_BYTE *)(a2 + v10);
  *(_DWORD *)(v11 + 4) = *(_DWORD *)(a2 + v10 + 4);
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(a2 + v10 + 8);
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(a2 + v10 + 16);
  *(_QWORD *)(v11 + 24) = *(_QWORD *)(a2 + v10 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 32) = *(_BYTE *)(v12 + 32);
  *(_QWORD *)(v11 + 40) = *(_QWORD *)(v12 + 40);
  v13 = *(_QWORD *)(v12 + 48);
  *(_BYTE *)(v11 + 56) = *(_BYTE *)(v12 + 56);
  *(_QWORD *)(v11 + 48) = v13;
  *(_BYTE *)(v11 + 57) = *(_BYTE *)(v12 + 57);
  *(_QWORD *)(v11 + 64) = *(_QWORD *)(v12 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v12 + 72);
  *(_BYTE *)(v11 + 80) = *(_BYTE *)(v12 + 80);
  *(_QWORD *)(v11 + 72) = v14;
  *(_QWORD *)(v11 + 88) = *(_QWORD *)(v12 + 88);
  *(_QWORD *)(v11 + 96) = *(_QWORD *)(v12 + 96);
  *(_QWORD *)(v11 + 104) = *(_QWORD *)(v12 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 112) = *(_BYTE *)(v12 + 112);
  *(_QWORD *)(v11 + 120) = *(_QWORD *)(v12 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 128) = *(_BYTE *)(v12 + 128);
  *(_BYTE *)(v11 + 129) = *(_BYTE *)(v12 + 129);
  *(_BYTE *)(v11 + 130) = *(_BYTE *)(v12 + 130);
  *(_BYTE *)(v11 + 131) = *(_BYTE *)(v12 + 131);
  *(_BYTE *)(v11 + 132) = *(_BYTE *)(v12 + 132);
  *(_BYTE *)(v11 + 133) = *(_BYTE *)(v12 + 133);
  *(_BYTE *)(v11 + 134) = *(_BYTE *)(v12 + 134);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)v16 = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v17 + 16);
  *(_BYTE *)(v16 + 17) = *(_BYTE *)(v17 + 17);
  *(_QWORD *)(v16 + 24) = *(_QWORD *)(v17 + 24);
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = (_BYTE *)(a1 + v18);
  v20 = (_BYTE *)(a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  v19[2] = v20[2];
  v19[3] = v20[3];
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(_QWORD *)(a1 + v21 + 8);
  v25 = *(_QWORD *)(a2 + v21 + 8);
  if (v24)
  {
    if (v25)
    {
      *(_QWORD *)v22 = *(_QWORD *)v23;
      *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v22 + 16) = *(_BYTE *)(v23 + 16);
      *(_BYTE *)(v22 + 17) = *(_BYTE *)(v23 + 17);
      *(_QWORD *)(v22 + 24) = *(_QWORD *)(v23 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE47C(v22);
      v26 = *(_OWORD *)(v23 + 16);
      *(_OWORD *)v22 = *(_OWORD *)v23;
      *(_OWORD *)(v22 + 16) = v26;
    }
  }
  else if (v25)
  {
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
    *(_BYTE *)(v22 + 16) = *(_BYTE *)(v23 + 16);
    *(_BYTE *)(v22 + 17) = *(_BYTE *)(v23 + 17);
    *(_QWORD *)(v22 + 24) = *(_QWORD *)(v23 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v27 = *(_OWORD *)(v23 + 16);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 16) = v27;
  }
  v28 = a3[10];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_QWORD *)(a1 + v31 + 16);
  v35 = *(_QWORD *)(v33 + 16);
  if (v34)
  {
    if (v35)
    {
      *(_BYTE *)v32 = *(_BYTE *)v33;
      *(_BYTE *)(v32 + 1) = *(_BYTE *)(v33 + 1);
      *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
      *(_QWORD *)(v32 + 16) = *(_QWORD *)(v33 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v32 + 24) = *(_DWORD *)(v33 + 24);
      *(_DWORD *)(v32 + 28) = *(_DWORD *)(v33 + 28);
      *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 40) = *(_QWORD *)(v33 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 48) = *(_QWORD *)(v33 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 56) = *(_QWORD *)(v33 + 56);
      *(_QWORD *)(v32 + 64) = *(_QWORD *)(v33 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 72) = *(_QWORD *)(v33 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v32 + 80) = *(_BYTE *)(v33 + 80);
      *(_QWORD *)(v32 + 88) = *(_QWORD *)(v33 + 88);
      *(_QWORD *)(v32 + 96) = *(_QWORD *)(v33 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v36 = *(_QWORD *)(v33 + 104);
      *(_BYTE *)(v32 + 112) = *(_BYTE *)(v33 + 112);
      *(_QWORD *)(v32 + 104) = v36;
      *(_QWORD *)(v32 + 120) = *(_QWORD *)(v33 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 128) = *(_QWORD *)(v33 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v32);
      *(_OWORD *)v32 = *(_OWORD *)v33;
      v38 = *(_OWORD *)(v33 + 64);
      v40 = *(_OWORD *)(v33 + 16);
      v39 = *(_OWORD *)(v33 + 32);
      *(_OWORD *)(v32 + 48) = *(_OWORD *)(v33 + 48);
      *(_OWORD *)(v32 + 64) = v38;
      *(_OWORD *)(v32 + 16) = v40;
      *(_OWORD *)(v32 + 32) = v39;
      v42 = *(_OWORD *)(v33 + 96);
      v41 = *(_OWORD *)(v33 + 112);
      v43 = *(_OWORD *)(v33 + 80);
      *(_QWORD *)(v32 + 128) = *(_QWORD *)(v33 + 128);
      *(_OWORD *)(v32 + 96) = v42;
      *(_OWORD *)(v32 + 112) = v41;
      *(_OWORD *)(v32 + 80) = v43;
    }
  }
  else if (v35)
  {
    *(_BYTE *)v32 = *(_BYTE *)v33;
    *(_BYTE *)(v32 + 1) = *(_BYTE *)(v33 + 1);
    *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
    *(_QWORD *)(v32 + 16) = *(_QWORD *)(v33 + 16);
    *(_DWORD *)(v32 + 24) = *(_DWORD *)(v33 + 24);
    *(_DWORD *)(v32 + 28) = *(_DWORD *)(v33 + 28);
    *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
    *(_QWORD *)(v32 + 40) = *(_QWORD *)(v33 + 40);
    *(_QWORD *)(v32 + 48) = *(_QWORD *)(v33 + 48);
    *(_QWORD *)(v32 + 56) = *(_QWORD *)(v33 + 56);
    *(_QWORD *)(v32 + 64) = *(_QWORD *)(v33 + 64);
    *(_QWORD *)(v32 + 72) = *(_QWORD *)(v33 + 72);
    *(_BYTE *)(v32 + 80) = *(_BYTE *)(v33 + 80);
    *(_QWORD *)(v32 + 88) = *(_QWORD *)(v33 + 88);
    *(_QWORD *)(v32 + 96) = *(_QWORD *)(v33 + 96);
    v37 = *(_QWORD *)(v33 + 104);
    *(_BYTE *)(v32 + 112) = *(_BYTE *)(v33 + 112);
    *(_QWORD *)(v32 + 104) = v37;
    *(_QWORD *)(v32 + 120) = *(_QWORD *)(v33 + 120);
    *(_QWORD *)(v32 + 128) = *(_QWORD *)(v33 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v32 = *(_OWORD *)v33;
    v44 = *(_OWORD *)(v33 + 16);
    v45 = *(_OWORD *)(v33 + 32);
    v46 = *(_OWORD *)(v33 + 64);
    *(_OWORD *)(v32 + 48) = *(_OWORD *)(v33 + 48);
    *(_OWORD *)(v32 + 64) = v46;
    *(_OWORD *)(v32 + 16) = v44;
    *(_OWORD *)(v32 + 32) = v45;
    v47 = *(_OWORD *)(v33 + 80);
    v48 = *(_OWORD *)(v33 + 96);
    v49 = *(_OWORD *)(v33 + 112);
    *(_QWORD *)(v32 + 128) = *(_QWORD *)(v33 + 128);
    *(_OWORD *)(v32 + 96) = v48;
    *(_OWORD *)(v32 + 112) = v49;
    *(_OWORD *)(v32 + 80) = v47;
  }
  return a1;
}

uint64_t initializeWithTake for ArticleEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v11 = a1 + v8;
  v12 = a2 + v8;
  v13 = *(_OWORD *)(v12 + 48);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v12 + 32);
  *(_OWORD *)(v11 + 48) = v13;
  v14 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v14;
  *(_QWORD *)(v11 + 127) = *(_QWORD *)(v12 + 127);
  v15 = *(_OWORD *)(v12 + 112);
  *(_OWORD *)(v11 + 96) = *(_OWORD *)(v12 + 96);
  *(_OWORD *)(v11 + 112) = v15;
  v16 = *(_OWORD *)(v12 + 80);
  *(_OWORD *)(v11 + 64) = *(_OWORD *)(v12 + 64);
  *(_OWORD *)(v11 + 80) = v16;
  v17 = a3[7];
  v18 = a3[8];
  v19 = a1 + v17;
  v20 = a2 + v17;
  v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  *(_DWORD *)(a1 + v18) = *(_DWORD *)(a2 + v18);
  v22 = a3[9];
  v23 = a3[10];
  v24 = (_OWORD *)(a1 + v22);
  v25 = (_OWORD *)(a2 + v22);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  v27 = a3[11];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = *(_OWORD *)(v29 + 112);
  *(_OWORD *)(v28 + 96) = *(_OWORD *)(v29 + 96);
  *(_OWORD *)(v28 + 112) = v30;
  *(_QWORD *)(v28 + 128) = *(_QWORD *)(v29 + 128);
  v31 = *(_OWORD *)(v29 + 48);
  *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
  *(_OWORD *)(v28 + 48) = v31;
  v32 = *(_OWORD *)(v29 + 80);
  *(_OWORD *)(v28 + 64) = *(_OWORD *)(v29 + 64);
  *(_OWORD *)(v28 + 80) = v32;
  v33 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v33;
  return a1;
}

uint64_t assignWithTake for ArticleEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 16) = *(_WORD *)(v9 + 16);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_DWORD *)(v12 + 4) = *(_DWORD *)(a2 + v11 + 4);
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(a2 + v11 + 8);
  v14 = *(_QWORD *)(a2 + v11 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 24) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  v15 = *(_QWORD *)(v13 + 48);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 48) = v15;
  *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
  *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
  *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
  *(_BYTE *)(v12 + 130) = *(_BYTE *)(v13 + 130);
  *(_BYTE *)(v12 + 131) = *(_BYTE *)(v13 + 131);
  *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
  *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
  *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  v20 = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 32) = v20;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = a3[9];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_BYTE *)v23 = *(_BYTE *)v24;
  *(_BYTE *)(v23 + 1) = *(_BYTE *)(v24 + 1);
  *(_WORD *)(v23 + 2) = *(_WORD *)(v24 + 2);
  v25 = a1 + v22;
  v26 = a2 + v22;
  if (*(_QWORD *)(a1 + v22 + 8))
  {
    v27 = *(_QWORD *)(v26 + 8);
    if (v27)
    {
      *(_QWORD *)v25 = *(_QWORD *)v26;
      *(_QWORD *)(v25 + 8) = v27;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v25 + 16) = *(_BYTE *)(v26 + 16);
      *(_BYTE *)(v25 + 17) = *(_BYTE *)(v26 + 17);
      *(_QWORD *)(v25 + 24) = *(_QWORD *)(v26 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D57EE47C(a1 + v22);
  }
  v28 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v28;
LABEL_6:
  v29 = a3[10];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  v34 = a3[11];
  v35 = a1 + v34;
  v36 = a2 + v34;
  if (!*(_QWORD *)(a1 + v34 + 16))
  {
LABEL_10:
    v40 = *(_OWORD *)(v36 + 112);
    *(_OWORD *)(v35 + 96) = *(_OWORD *)(v36 + 96);
    *(_OWORD *)(v35 + 112) = v40;
    *(_QWORD *)(v35 + 128) = *(_QWORD *)(v36 + 128);
    v41 = *(_OWORD *)(v36 + 48);
    *(_OWORD *)(v35 + 32) = *(_OWORD *)(v36 + 32);
    *(_OWORD *)(v35 + 48) = v41;
    v42 = *(_OWORD *)(v36 + 80);
    *(_OWORD *)(v35 + 64) = *(_OWORD *)(v36 + 64);
    *(_OWORD *)(v35 + 80) = v42;
    v43 = *(_OWORD *)(v36 + 16);
    *(_OWORD *)v35 = *(_OWORD *)v36;
    *(_OWORD *)(v35 + 16) = v43;
    return a1;
  }
  v37 = *(_QWORD *)(v36 + 16);
  if (!v37)
  {
    sub_1D57E17B8(v35);
    goto LABEL_10;
  }
  *(_WORD *)v35 = *(_WORD *)v36;
  *(_QWORD *)(v35 + 8) = *(_QWORD *)(v36 + 8);
  *(_QWORD *)(v35 + 16) = v37;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v35 + 24) = *(_QWORD *)(v36 + 24);
  *(_QWORD *)(v35 + 32) = *(_QWORD *)(v36 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v35 + 40) = *(_QWORD *)(v36 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v35 + 48) = *(_QWORD *)(v36 + 48);
  swift_bridgeObjectRelease();
  v38 = *(_QWORD *)(v36 + 64);
  *(_QWORD *)(v35 + 56) = *(_QWORD *)(v36 + 56);
  *(_QWORD *)(v35 + 64) = v38;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v35 + 72) = *(_QWORD *)(v36 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v35 + 80) = *(_BYTE *)(v36 + 80);
  v39 = *(_QWORD *)(v36 + 96);
  *(_QWORD *)(v35 + 88) = *(_QWORD *)(v36 + 88);
  *(_QWORD *)(v35 + 96) = v39;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v35 + 104) = *(_QWORD *)(v36 + 104);
  *(_BYTE *)(v35 + 112) = *(_BYTE *)(v36 + 112);
  *(_QWORD *)(v35 + 120) = *(_QWORD *)(v36 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v35 + 128) = *(_QWORD *)(v36 + 128);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleEngagementEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5937474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleEngagementEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5937500(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D593757C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ArticleEngagementEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D5937674 + 4 * byte_1D5ACC94D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D59376A8 + 4 * byte_1D5ACC948[v4]))();
}

uint64_t sub_1D59376A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59376B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59376B8);
  return result;
}

uint64_t sub_1D59376C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59376CCLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D59376D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59376D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleEngagementEvent.Model.CodingKeys()
{
  return &type metadata for ArticleEngagementEvent.Model.CodingKeys;
}

unint64_t sub_1D59376F8()
{
  unint64_t result;

  result = qword_1EFF4D598;
  if (!qword_1EFF4D598)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACCBC4, &type metadata for ArticleEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D598);
  }
  return result;
}

unint64_t sub_1D5937740()
{
  unint64_t result;

  result = qword_1ED9CDC28;
  if (!qword_1ED9CDC28)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACCB34, &type metadata for ArticleEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDC28);
  }
  return result;
}

unint64_t sub_1D5937788()
{
  unint64_t result;

  result = qword_1ED9CDC20;
  if (!qword_1ED9CDC20)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACCB5C, &type metadata for ArticleEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDC20);
  }
  return result;
}

uint64_t sub_1D59377CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEC9F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6569566575737369 && a2 == 0xED00006174614477 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t TrackData.trackDuration.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t TrackData.trackDuration.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*TrackData.trackDuration.modify())()
{
  return nullsub_1;
}

void TrackData.trackVariant.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 4);
}

_BYTE *TrackData.trackVariant.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 4) = *result;
  return result;
}

uint64_t (*TrackData.trackVariant.modify())()
{
  return nullsub_1;
}

uint64_t TrackData.init(trackDuration:trackVariant:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3;

  v3 = *a2;
  *(_DWORD *)a3 = result;
  *(_BYTE *)(a3 + 4) = v3;
  return result;
}

uint64_t sub_1D5937BC8()
{
  _BYTE *v0;

  if (*v0)
    return 0x7261566B63617274;
  else
    return 0x7275446B63617274;
}

uint64_t sub_1D5937C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59382E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5937C3C()
{
  sub_1D5937DCC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5937C64()
{
  sub_1D5937DCC();
  return sub_1D5AAEEE0();
}

uint64_t TrackData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  int v11;
  char v12;
  char v13;
  char v14;

  sub_1D5937FC0(0, &qword_1EFF4D5A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v10 - v7;
  v11 = *(unsigned __int8 *)(v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5937DCC();
  sub_1D5AAEEC8();
  v14 = 0;
  sub_1D5AAED78();
  if (!v2)
  {
    v13 = v11;
    v12 = 1;
    sub_1D5937E10();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D5937DCC()
{
  unint64_t result;

  result = qword_1EFF4D5A8;
  if (!qword_1EFF4D5A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACCDB0, &type metadata for TrackData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D5A8);
  }
  return result;
}

unint64_t sub_1D5937E10()
{
  unint64_t result;

  result = qword_1EFF4D5B0;
  if (!qword_1EFF4D5B0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TrackVariant, &type metadata for TrackVariant);
    atomic_store(result, (unint64_t *)&qword_1EFF4D5B0);
  }
  return result;
}

uint64_t TrackData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;

  sub_1D5937FC0(0, &qword_1EFF4D5B8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5937DCC();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v16 = 0;
    v10 = sub_1D5AAECDC();
    v14 = 1;
    sub_1D593801C();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
    *(_DWORD *)a2 = v10;
    *(_BYTE *)(a2 + 4) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5937FC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5937DCC();
    v7 = a3(a1, &type metadata for TrackData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D593801C()
{
  unint64_t result;

  result = qword_1EFF4D5C0;
  if (!qword_1EFF4D5C0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TrackVariant, &type metadata for TrackVariant);
    atomic_store(result, (unint64_t *)&qword_1EFF4D5C0);
  }
  return result;
}

uint64_t sub_1D5938068@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TrackData.init(from:)(a1, a2);
}

uint64_t sub_1D593807C(_QWORD *a1)
{
  return TrackData.encode(to:)(a1);
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for TrackData(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 4);
  v4 = v3 >= 3;
  v5 = v3 - 3;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TrackData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 5) = 0;
    if (a2)
      *(_BYTE *)(result + 4) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrackData()
{
  return &type metadata for TrackData;
}

uint64_t storeEnumTagSinglePayload for TrackData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5938188 + 4 * byte_1D5ACCC41[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D59381BC + 4 * byte_1D5ACCC3C[v4]))();
}

uint64_t sub_1D59381BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59381C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59381CCLL);
  return result;
}

uint64_t sub_1D59381D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59381E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D59381E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59381EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrackData.CodingKeys()
{
  return &type metadata for TrackData.CodingKeys;
}

unint64_t sub_1D593820C()
{
  unint64_t result;

  result = qword_1EFF4D5C8;
  if (!qword_1EFF4D5C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACCD88, &type metadata for TrackData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D5C8);
  }
  return result;
}

unint64_t sub_1D5938254()
{
  unint64_t result;

  result = qword_1EFF4D5D0;
  if (!qword_1EFF4D5D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACCCF8, &type metadata for TrackData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D5D0);
  }
  return result;
}

unint64_t sub_1D593829C()
{
  unint64_t result;

  result = qword_1EFF4D5D8;
  if (!qword_1EFF4D5D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACCD20, &type metadata for TrackData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D5D8);
  }
  return result;
}

uint64_t sub_1D59382E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7275446B63617274 && a2 == 0xED00006E6F697461;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7261566B63617274 && a2 == 0xEC000000746E6169)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1D593840C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

unint64_t sub_1D593843C()
{
  uint64_t v0;

  sub_1D5AAEB80();
  swift_bridgeObjectRelease();
  MEMORY[0x1D8278D38](v0, MEMORY[0x1E0DEA968]);
  sub_1D5AAE898();
  swift_bridgeObjectRelease();
  return 0xD000000000000021;
}

_QWORD *sub_1D5938578()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_1D5AADFD4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  v0[3] = v6;
  v0[4] = 1937204590;
  v0[5] = 0xE400000000000000;
  v0[6] = 0x706F742D7377656ELL;
  v0[7] = 0xEB00000000736369;
  sub_1D5AAE004();
  swift_allocObject();
  v0[2] = sub_1D5AADFF8();
  *v5 = sub_1D58D84E8;
  v5[1] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB2FF8], v2);
  sub_1D5AADFE0();
  if (v6)
  {
    v7 = v6;
    v8 = (void *)sub_1D5AAE7FC();
    objc_msgSend(v7, sel_setClientIdentifier_, v8);

  }
  return v1;
}

void PortraitEventProcessor.process<A>(processEvent:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  unint64_t v54;
  int v55;
  uint64_t v56;
  char *v57;
  void *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  void *v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  void *v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  void *v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  void (*v103)(char *, uint64_t);
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  void *v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(char *, uint64_t);
  char *v122;
  void *v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  void (*v149)(char *, uint64_t);
  char *v150;
  uint64_t v151;
  void *v152;
  uint64_t v153;
  id v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  id v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  char **v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  uint64_t v180;
  void *v181;
  uint64_t v182;
  id v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char **v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  void *v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  char *v252;
  __int128 v253;

  v208 = type metadata accessor for ArticleViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v208);
  v209 = (char *)&v200 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58D482C(0, (unint64_t *)&qword_1ED9C7030, type metadata accessor for ArticleViewEvent, &qword_1ED9C8788, (uint64_t)&protocol conformance descriptor for ArticleViewEvent);
  v215 = v3;
  v210 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v214 = (char *)&v200 - v4;
  v211 = type metadata accessor for HeadlineExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v211);
  v212 = (char *)&v200 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58D482C(0, &qword_1ED9C7068, type metadata accessor for HeadlineExposureEvent, &qword_1ED9CAA28, (uint64_t)&protocol conformance descriptor for HeadlineExposureEvent);
  v220 = v6;
  v213 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v219 = (char *)&v200 - v7;
  v216 = type metadata accessor for UnfollowTagEvent.Model(0);
  MEMORY[0x1E0C80A78](v216);
  v218 = (char *)&v200 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58D482C(0, &qword_1ED9C7048, type metadata accessor for UnfollowTagEvent, &qword_1ED9C9198, (uint64_t)&protocol conformance descriptor for UnfollowTagEvent);
  v225 = v9;
  v217 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v224 = (char *)&v200 - v10;
  v221 = type metadata accessor for FollowTagEvent.Model(0);
  MEMORY[0x1E0C80A78](v221);
  v223 = (char *)&v200 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58D482C(0, (unint64_t *)&unk_1ED9C70A0, type metadata accessor for FollowTagEvent, &qword_1ED9C7CB8, (uint64_t)&protocol conformance descriptor for FollowTagEvent);
  v230 = v12;
  v222 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v229 = (char *)&v200 - v13;
  v226 = type metadata accessor for UnblockTagEvent.Model(0);
  MEMORY[0x1E0C80A78](v226);
  v228 = (char *)&v200 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58D482C(0, &qword_1ED9C7010, type metadata accessor for UnblockTagEvent, &qword_1ED9C82C8, (uint64_t)&protocol conformance descriptor for UnblockTagEvent);
  v234 = v15;
  v227 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v233 = (char *)&v200 - v16;
  v231 = type metadata accessor for BlockTagEvent.Model(0);
  MEMORY[0x1E0C80A78](v231);
  v252 = (char *)&v200 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58D482C(0, &qword_1ED9C7088, type metadata accessor for BlockTagEvent, &qword_1ED9C7938, (uint64_t)&protocol conformance descriptor for BlockTagEvent);
  v239 = v18;
  v232 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v238 = (char *)&v200 - v19;
  v235 = type metadata accessor for ArticleSaveEvent.Model(0);
  MEMORY[0x1E0C80A78](v235);
  v236 = (char *)&v200 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58D482C(0, (unint64_t *)&unk_1ED9C7020, type metadata accessor for ArticleSaveEvent, &qword_1ED9C85B8, (uint64_t)&protocol conformance descriptor for ArticleSaveEvent);
  v244 = v21;
  v237 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v243 = (char *)&v200 - v22;
  v240 = type metadata accessor for ArticleShareEvent.Model(0);
  MEMORY[0x1E0C80A78](v240);
  v241 = (char *)&v200 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58D482C(0, &qword_1ED9C7050, type metadata accessor for ArticleShareEvent, &qword_1ED9C9320, (uint64_t)&protocol conformance descriptor for ArticleShareEvent);
  v249 = v24;
  v242 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v248 = (char *)&v200 - v25;
  v245 = type metadata accessor for ArticleDislikeEvent.Model(0);
  MEMORY[0x1E0C80A78](v245);
  v246 = (char *)&v200 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58D482C(0, &qword_1ED9C7060, type metadata accessor for ArticleDislikeEvent, &qword_1ED9CA290, (uint64_t)&protocol conformance descriptor for ArticleDislikeEvent);
  v251 = v27;
  v247 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v250 = (char *)&v200 - v28;
  v29 = type metadata accessor for ArticleLikeEvent.Model(0);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v200 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58D482C(0, &qword_1ED9C7018, type metadata accessor for ArticleLikeEvent, &qword_1ED9C8440, (uint64_t)&protocol conformance descriptor for ArticleLikeEvent);
  *(_QWORD *)&v253 = v32;
  v33 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v35 = (char *)&v200 - v34;
  v36 = sub_1D5AADAAC();
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v39 = (char *)&v200 - v38;
  v40 = a1;
  v41 = (void *)sub_1D5AADA7C();
  v42 = sub_1D5AADE3C();
  v202 = v31;
  v203 = v33;
  v53 = v252;
  v204 = 0;
  v206 = v42;
  v207 = v54;

  v205 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v39, v40, v36);
  v55 = swift_dynamicCast();
  v56 = v40;
  if (!v55)
  {
    if (swift_dynamicCast())
    {
      sub_1D5AAEA00();
      if (qword_1ED9CCD08 != -1)
        swift_once();
      v69 = (void *)qword_1ED9C77B8;
      sub_1D57B34CC();
      v70 = swift_allocObject();
      *(_OWORD *)(v70 + 16) = xmmword_1D5AB0170;
      v71 = v69;
      v72 = sub_1D5AADA94();
      v74 = v73;
      *(_QWORD *)(v70 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v70 + 64) = sub_1D57B356C();
      *(_QWORD *)(v70 + 32) = v72;
      *(_QWORD *)(v70 + 40) = v74;
      sub_1D5AAE334();

      swift_bridgeObjectRelease();
      sub_1D57A8DE4(&qword_1EFF4D610, type metadata accessor for ArticleDislikeEvent.Model, (uint64_t)&protocol conformance descriptor for ArticleDislikeEvent.Model);
      v76 = v245;
      v75 = (uint64_t)v246;
      v77 = v206;
      v78 = v207;
      v67 = v204;
      sub_1D5AADFEC();
      if (v67)
      {
        sub_1D57E69C4(v77, v78);
        (*(void (**)(char *, uint64_t))(v247 + 8))(v250, v251);
        (*(void (**)(char *, uint64_t))(v205 + 8))(v39, v36);
        goto LABEL_2;
      }
      v106 = v247;
      if (*(_QWORD *)(*(_QWORD *)(v75 + *(int *)(v76 + 20) + 120) + 16))
      {
        v107 = swift_bridgeObjectRetain();
        sub_1D593A43C(v107, 1);
        sub_1D57E69C4(v206, v207);
        swift_bridgeObjectRelease();
        sub_1D5820E20(v75, type metadata accessor for ArticleDislikeEvent.Model);
      }
      else
      {
        sub_1D5820E20(v75, type metadata accessor for ArticleDislikeEvent.Model);
        sub_1D57E69C4(v206, v207);
      }
      (*(void (**)(char *, uint64_t))(v106 + 8))(v250, v251);
      v121 = *(void (**)(char *, uint64_t))(v205 + 8);
      v122 = v39;
LABEL_82:
      v121(v122, v36);
      return;
    }
    if (swift_dynamicCast())
    {
      v79 = v39;
      sub_1D5AAEA00();
      v67 = v204;
      if (qword_1ED9CCD08 != -1)
        swift_once();
      v80 = (void *)qword_1ED9C77B8;
      sub_1D57B34CC();
      v81 = swift_allocObject();
      *(_OWORD *)(v81 + 16) = xmmword_1D5AB0170;
      v82 = v80;
      v83 = sub_1D5AADA94();
      v85 = v84;
      *(_QWORD *)(v81 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v81 + 64) = sub_1D57B356C();
      *(_QWORD *)(v81 + 32) = v83;
      *(_QWORD *)(v81 + 40) = v85;
      sub_1D5AAE334();

      swift_bridgeObjectRelease();
      sub_1D57A8DE4(&qword_1EFF4D608, type metadata accessor for ArticleShareEvent.Model, (uint64_t)&protocol conformance descriptor for ArticleShareEvent.Model);
      v87 = v240;
      v86 = (uint64_t)v241;
      v88 = v206;
      v89 = v207;
      sub_1D5AADFEC();
      if (v67)
      {
        sub_1D57E69C4(v88, v89);
        (*(void (**)(char *, uint64_t))(v242 + 8))(v248, v249);
LABEL_28:
        (*(void (**)(char *, uint64_t))(v205 + 8))(v79, v36);
        goto LABEL_2;
      }
      v119 = v242;
      if (*(_QWORD *)(*(_QWORD *)(v86 + *(int *)(v87 + 20) + 120) + 16))
      {
        v120 = swift_bridgeObjectRetain();
        sub_1D593A43C(v120, 0);
        sub_1D57E69C4(v206, v207);
        swift_bridgeObjectRelease();
        sub_1D5820E20(v86, type metadata accessor for ArticleShareEvent.Model);
      }
      else
      {
        sub_1D5820E20(v86, type metadata accessor for ArticleShareEvent.Model);
        sub_1D57E69C4(v206, v207);
      }
      (*(void (**)(char *, uint64_t))(v119 + 8))(v248, v249);
LABEL_60:
      v121 = *(void (**)(char *, uint64_t))(v205 + 8);
      v122 = v79;
      goto LABEL_82;
    }
    v92 = swift_dynamicCast();
    v67 = v204;
    if (v92)
    {
      v79 = v39;
      sub_1D5AAEA00();
      if (qword_1ED9CCD08 != -1)
        swift_once();
      v93 = (void *)qword_1ED9C77B8;
      sub_1D57B34CC();
      v94 = swift_allocObject();
      *(_OWORD *)(v94 + 16) = xmmword_1D5AB0170;
      v95 = v93;
      v96 = sub_1D5AADA94();
      v98 = v97;
      *(_QWORD *)(v94 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v94 + 64) = sub_1D57B356C();
      *(_QWORD *)(v94 + 32) = v96;
      *(_QWORD *)(v94 + 40) = v98;
      sub_1D5AAE334();

      swift_bridgeObjectRelease();
      sub_1D57A8DE4(&qword_1EFF4D600, type metadata accessor for ArticleSaveEvent.Model, (uint64_t)&protocol conformance descriptor for ArticleSaveEvent.Model);
      v99 = (uint64_t)v236;
      v100 = v235;
      v101 = v206;
      v102 = v207;
      sub_1D5AADFEC();
      if (v67)
      {
        sub_1D57E69C4(v101, v102);
        v103 = *(void (**)(char *, uint64_t))(v237 + 8);
        v104 = v243;
        v105 = v244;
LABEL_27:
        v103(v104, v105);
        goto LABEL_28;
      }
      v133 = v237;
      if (*(_QWORD *)(*(_QWORD *)(v99 + *(int *)(v100 + 20) + 120) + 16))
      {
        v134 = swift_bridgeObjectRetain();
        sub_1D593A43C(v134, 0);
        sub_1D57E69C4(v206, v207);
        swift_bridgeObjectRelease();
        sub_1D5820E20(v99, type metadata accessor for ArticleSaveEvent.Model);
      }
      else
      {
        sub_1D5820E20(v99, type metadata accessor for ArticleSaveEvent.Model);
        sub_1D57E69C4(v206, v207);
      }
      v149 = *(void (**)(char *, uint64_t))(v133 + 8);
      v150 = v243;
      v151 = v244;
LABEL_59:
      v149(v150, v151);
      goto LABEL_60;
    }
    v108 = swift_dynamicCast();
    v201 = v39;
    if (v108)
    {
      sub_1D5AAEA00();
      if (qword_1ED9CCD08 != -1)
        swift_once();
      v109 = (void *)qword_1ED9C77B8;
      sub_1D57B34CC();
      v110 = swift_allocObject();
      v253 = xmmword_1D5AB0170;
      *(_OWORD *)(v110 + 16) = xmmword_1D5AB0170;
      v111 = v109;
      v112 = sub_1D5AADA94();
      v114 = v113;
      *(_QWORD *)(v110 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v110 + 64) = sub_1D57B356C();
      *(_QWORD *)(v110 + 32) = v112;
      *(_QWORD *)(v110 + 40) = v114;
      sub_1D5AAE334();

      swift_bridgeObjectRelease();
      sub_1D57A8DE4(&qword_1EFF4D5F8, type metadata accessor for BlockTagEvent.Model, (uint64_t)&protocol conformance descriptor for BlockTagEvent.Model);
      v115 = (uint64_t)v53;
      v116 = v231;
      v117 = v206;
      v118 = v207;
      sub_1D5AADFEC();
      if (v67)
      {
        sub_1D57E69C4(v117, v118);
        (*(void (**)(char *, uint64_t))(v232 + 8))(v238, v239);
LABEL_66:
        (*(void (**)(char *, uint64_t))(v205 + 8))(v201, v36);
        goto LABEL_2;
      }
      sub_1D58C75E8();
      v145 = v115;
      v146 = swift_allocObject();
      *(_OWORD *)(v146 + 16) = v253;
      v147 = (_QWORD *)(v145 + *(int *)(v116 + 24));
      v148 = v147[1];
      *(_QWORD *)(v146 + 32) = *v147;
      *(_QWORD *)(v146 + 40) = v148;
      swift_bridgeObjectRetain();
      sub_1D593A43C(v146, 1);
      sub_1D57E69C4(v117, v118);
      swift_bridgeObjectRelease();
      sub_1D5820E20(v145, type metadata accessor for BlockTagEvent.Model);
      (*(void (**)(char *, uint64_t))(v232 + 8))(v238, v239);
      goto LABEL_81;
    }
    if (swift_dynamicCast())
    {
      sub_1D5AAEA00();
      if (qword_1ED9CCD08 != -1)
        swift_once();
      v123 = (void *)qword_1ED9C77B8;
      sub_1D57B34CC();
      v124 = swift_allocObject();
      v253 = xmmword_1D5AB0170;
      *(_OWORD *)(v124 + 16) = xmmword_1D5AB0170;
      v125 = v123;
      v126 = sub_1D5AADA94();
      v128 = v127;
      *(_QWORD *)(v124 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v124 + 64) = sub_1D57B356C();
      *(_QWORD *)(v124 + 32) = v126;
      *(_QWORD *)(v124 + 40) = v128;
      sub_1D5AAE334();

      swift_bridgeObjectRelease();
      sub_1D57A8DE4(&qword_1EFF4D5F0, type metadata accessor for UnblockTagEvent.Model, (uint64_t)&protocol conformance descriptor for UnblockTagEvent.Model);
      v129 = v228;
      v130 = v226;
      v131 = v206;
      v132 = v207;
      sub_1D5AADFEC();
      if (v67)
      {
        sub_1D57E69C4(v131, v132);
        (*(void (**)(char *, uint64_t))(v227 + 8))(v233, v234);
        goto LABEL_66;
      }
      sub_1D58C75E8();
      v162 = (uint64_t)v129;
      v163 = swift_allocObject();
      *(_OWORD *)(v163 + 16) = v253;
      v164 = (_QWORD *)(v162 + *(int *)(v130 + 24));
      v165 = v164[1];
      *(_QWORD *)(v163 + 32) = *v164;
      *(_QWORD *)(v163 + 40) = v165;
      swift_bridgeObjectRetain();
      sub_1D593A43C(v163, 0);
      sub_1D57E69C4(v131, v132);
      swift_bridgeObjectRelease();
      sub_1D5820E20(v162, type metadata accessor for UnblockTagEvent.Model);
      (*(void (**)(char *, uint64_t))(v227 + 8))(v233, v234);
LABEL_81:
      v121 = *(void (**)(char *, uint64_t))(v205 + 8);
      v122 = v201;
      goto LABEL_82;
    }
    if (swift_dynamicCast())
    {
      sub_1D5AAEA00();
      if (qword_1ED9CCD08 != -1)
        swift_once();
      v135 = (void *)qword_1ED9C77B8;
      sub_1D57B34CC();
      v136 = swift_allocObject();
      v253 = xmmword_1D5AB0170;
      *(_OWORD *)(v136 + 16) = xmmword_1D5AB0170;
      v137 = v135;
      v138 = sub_1D5AADA94();
      v140 = v139;
      *(_QWORD *)(v136 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v136 + 64) = sub_1D57B356C();
      *(_QWORD *)(v136 + 32) = v138;
      *(_QWORD *)(v136 + 40) = v140;
      sub_1D5AAE334();

      swift_bridgeObjectRelease();
      sub_1D57A8DE4(&qword_1EFF4D5E8, type metadata accessor for FollowTagEvent.Model, (uint64_t)&protocol conformance descriptor for FollowTagEvent.Model);
      v141 = v223;
      v142 = v221;
      v143 = v206;
      v144 = v207;
      sub_1D5AADFEC();
      if (v67)
      {
        sub_1D57E69C4(v143, v144);
        (*(void (**)(char *, uint64_t))(v222 + 8))(v229, v230);
        goto LABEL_66;
      }
      sub_1D58C75E8();
      v177 = (uint64_t)v141;
      v178 = swift_allocObject();
      *(_OWORD *)(v178 + 16) = v253;
      v179 = (_QWORD *)(v177 + *(int *)(v142 + 20));
      v180 = v179[1];
      *(_QWORD *)(v178 + 32) = *v179;
      *(_QWORD *)(v178 + 40) = v180;
      swift_bridgeObjectRetain();
      sub_1D593A43C(v178, 0);
      sub_1D57E69C4(v143, v144);
      swift_bridgeObjectRelease();
      sub_1D5820E20(v177, type metadata accessor for FollowTagEvent.Model);
      (*(void (**)(char *, uint64_t))(v222 + 8))(v229, v230);
      goto LABEL_81;
    }
    if (swift_dynamicCast())
    {
      sub_1D5AAEA00();
      if (qword_1ED9CCD08 != -1)
        swift_once();
      v152 = (void *)qword_1ED9C77B8;
      sub_1D57B34CC();
      v153 = swift_allocObject();
      v253 = xmmword_1D5AB0170;
      *(_OWORD *)(v153 + 16) = xmmword_1D5AB0170;
      v154 = v152;
      v155 = sub_1D5AADA94();
      v157 = v156;
      *(_QWORD *)(v153 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v153 + 64) = sub_1D57B356C();
      *(_QWORD *)(v153 + 32) = v155;
      *(_QWORD *)(v153 + 40) = v157;
      sub_1D5AAE334();

      swift_bridgeObjectRelease();
      sub_1D57A8DE4(&qword_1EFF4D5E0, type metadata accessor for UnfollowTagEvent.Model, (uint64_t)&protocol conformance descriptor for UnfollowTagEvent.Model);
      v158 = v218;
      v159 = v216;
      v160 = v206;
      v161 = v207;
      sub_1D5AADFEC();
      if (v67)
      {
        sub_1D57E69C4(v160, v161);
        (*(void (**)(char *, uint64_t))(v217 + 8))(v224, v225);
        goto LABEL_66;
      }
      sub_1D58C75E8();
      v191 = (uint64_t)v158;
      v192 = swift_allocObject();
      *(_OWORD *)(v192 + 16) = v253;
      v193 = (_QWORD *)(v191 + *(int *)(v159 + 20));
      v194 = v193[1];
      *(_QWORD *)(v192 + 32) = *v193;
      *(_QWORD *)(v192 + 40) = v194;
      swift_bridgeObjectRetain();
      sub_1D593A43C(v192, 1);
      sub_1D57E69C4(v160, v161);
      swift_bridgeObjectRelease();
      sub_1D5820E20(v191, type metadata accessor for UnfollowTagEvent.Model);
      (*(void (**)(char *, uint64_t))(v217 + 8))(v224, v225);
      goto LABEL_81;
    }
    if (swift_dynamicCast())
    {
      v79 = v39;
      sub_1D5AAEA00();
      if (qword_1ED9CCD08 != -1)
        swift_once();
      v166 = (void *)qword_1ED9C77B8;
      sub_1D57B34CC();
      v167 = swift_allocObject();
      *(_OWORD *)(v167 + 16) = xmmword_1D5AB0170;
      v168 = v166;
      v169 = sub_1D5AADA94();
      v171 = v170;
      *(_QWORD *)(v167 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v167 + 64) = sub_1D57B356C();
      *(_QWORD *)(v167 + 32) = v169;
      *(_QWORD *)(v167 + 40) = v171;
      sub_1D5AAE334();

      swift_bridgeObjectRelease();
      sub_1D57A8DE4(&qword_1ED9CA940, type metadata accessor for HeadlineExposureEvent.Model, (uint64_t)&protocol conformance descriptor for HeadlineExposureEvent.Model);
      v172 = (uint64_t)v212;
      v173 = v211;
      v174 = v206;
      v175 = v207;
      sub_1D5AADFEC();
      if (v67)
      {
        sub_1D57E69C4(v174, v175);
        v103 = *(void (**)(char *, uint64_t))(v213 + 8);
        v104 = v219;
        v176 = &v252;
LABEL_79:
        v105 = (uint64_t)*(v176 - 32);
        goto LABEL_27;
      }
      v195 = v213;
      if (*(_QWORD *)(*(_QWORD *)(v172 + *(int *)(v173 + 28) + 120) + 16))
      {
        v196 = swift_bridgeObjectRetain();
        sub_1D593A43C(v196, 4);
        sub_1D57E69C4(v206, v207);
        swift_bridgeObjectRelease();
        sub_1D5820E20(v172, type metadata accessor for HeadlineExposureEvent.Model);
      }
      else
      {
        sub_1D5820E20(v172, type metadata accessor for HeadlineExposureEvent.Model);
        sub_1D57E69C4(v206, v207);
      }
      v149 = *(void (**)(char *, uint64_t))(v195 + 8);
      v150 = v219;
      v199 = &v252;
    }
    else
    {
      if (!swift_dynamicCast())
      {
        sub_1D57E69C4(v206, v207);
        v121 = *(void (**)(char *, uint64_t))(v205 + 8);
        v122 = v39;
        goto LABEL_82;
      }
      v79 = v39;
      sub_1D5AAEA00();
      if (qword_1ED9CCD08 != -1)
        swift_once();
      v181 = (void *)qword_1ED9C77B8;
      sub_1D57B34CC();
      v182 = swift_allocObject();
      *(_OWORD *)(v182 + 16) = xmmword_1D5AB0170;
      v183 = v181;
      v184 = sub_1D5AADA94();
      v186 = v185;
      *(_QWORD *)(v182 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v182 + 64) = sub_1D57B356C();
      *(_QWORD *)(v182 + 32) = v184;
      *(_QWORD *)(v182 + 40) = v186;
      sub_1D5AAE334();

      swift_bridgeObjectRelease();
      sub_1D57A8DE4((unint64_t *)&unk_1ED9C6938, type metadata accessor for ArticleViewEvent.Model, (uint64_t)&protocol conformance descriptor for ArticleViewEvent.Model);
      v187 = (uint64_t)v209;
      v188 = v208;
      v189 = v206;
      v190 = v207;
      sub_1D5AADFEC();
      if (v67)
      {
        sub_1D57E69C4(v189, v190);
        v103 = *(void (**)(char *, uint64_t))(v210 + 8);
        v104 = v214;
        v176 = (char **)&v247;
        goto LABEL_79;
      }
      v197 = v210;
      if (*(_QWORD *)(*(_QWORD *)(v187 + *(int *)(v188 + 28) + 120) + 16))
      {
        v198 = swift_bridgeObjectRetain();
        sub_1D593A43C(v198, 2);
        sub_1D57E69C4(v206, v207);
        swift_bridgeObjectRelease();
        sub_1D5820E20(v187, type metadata accessor for ArticleViewEvent.Model);
      }
      else
      {
        sub_1D5820E20(v187, type metadata accessor for ArticleViewEvent.Model);
        sub_1D57E69C4(v206, v207);
      }
      v149 = *(void (**)(char *, uint64_t))(v197 + 8);
      v150 = v214;
      v199 = (char **)&v247;
    }
    v151 = (uint64_t)*(v199 - 32);
    goto LABEL_59;
  }
  v57 = v35;
  v251 = v56;
  v201 = v39;
  v252 = (char *)v36;
  sub_1D5AAEA00();
  if (qword_1ED9CCD08 != -1)
    swift_once();
  v58 = (void *)qword_1ED9C77B8;
  sub_1D57B34CC();
  v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = xmmword_1D5AB0170;
  v60 = v58;
  v61 = sub_1D5AADA94();
  v63 = v62;
  *(_QWORD *)(v59 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v59 + 64) = sub_1D57B356C();
  *(_QWORD *)(v59 + 32) = v61;
  *(_QWORD *)(v59 + 40) = v63;
  sub_1D5AAE334();

  swift_bridgeObjectRelease();
  sub_1D57A8DE4(&qword_1EFF4D618, type metadata accessor for ArticleLikeEvent.Model, (uint64_t)&protocol conformance descriptor for ArticleLikeEvent.Model);
  v64 = (uint64_t)v202;
  v65 = v206;
  v66 = v207;
  v67 = v204;
  sub_1D5AADFEC();
  v68 = v203;
  if (v67)
  {
    sub_1D57E69C4(v65, v66);
    (*(void (**)(char *, _QWORD))(v68 + 8))(v57, v253);
    (*(void (**)(char *, char *))(v205 + 8))(v201, v252);
LABEL_2:
    sub_1D5AAEA0C();
    if (qword_1ED9CCD08 != -1)
      swift_once();
    v43 = (void *)qword_1ED9C77B8;
    sub_1D57B34CC();
    v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_1D5ABF230;
    v45 = v43;
    v46 = sub_1D5AADA94();
    v48 = v47;
    v49 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v44 + 56) = MEMORY[0x1E0DEA968];
    v50 = sub_1D57B356C();
    *(_QWORD *)(v44 + 64) = v50;
    *(_QWORD *)(v44 + 32) = v46;
    *(_QWORD *)(v44 + 40) = v48;
    swift_getErrorValue();
    v51 = sub_1D5AAEE38();
    *(_QWORD *)(v44 + 96) = v49;
    *(_QWORD *)(v44 + 104) = v50;
    *(_QWORD *)(v44 + 72) = v51;
    *(_QWORD *)(v44 + 80) = v52;
    sub_1D5AAE334();

    swift_bridgeObjectRelease();
    return;
  }
  v90 = v205;
  if (*(_QWORD *)(*(_QWORD *)(v64 + *(int *)(v29 + 20) + 120) + 16))
  {
    v91 = swift_bridgeObjectRetain();
    sub_1D593A43C(v91, 0);
    swift_bridgeObjectRelease();
    sub_1D57E69C4(v206, v207);
    sub_1D5820E20(v64, type metadata accessor for ArticleLikeEvent.Model);
  }
  else
  {
    sub_1D5820E20(v64, type metadata accessor for ArticleLikeEvent.Model);
    sub_1D57E69C4(v206, v207);
  }
  (*(void (**)(char *, _QWORD))(v68 + 8))(v57, v253);
  (*(void (**)(char *, char *))(v90 + 8))(v201, v252);
}

void sub_1D593A43C(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[6];

  v3 = v2;
  sub_1D593A62C(a1, a2);
  v7 = v6;
  v8 = (void *)v3[3];
  if (v8)
  {
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a1;
    *(_BYTE *)(v9 + 24) = a2;
    v23[4] = sub_1D593AC1C;
    v23[5] = v9;
    v23[0] = MEMORY[0x1E0C809B0];
    v23[1] = 1107296256;
    v23[2] = sub_1D593AB18;
    v23[3] = &block_descriptor_2;
    v10 = _Block_copy(v23);
    swift_bridgeObjectRetain();
    v11 = v8;
    swift_release();
    objc_msgSend(v11, sel_registerFeedback_completion_, v7, v10);
    _Block_release(v10);

  }
  else
  {
    sub_1D5AAEA0C();
    if (qword_1ED9CCD08 != -1)
      swift_once();
    v12 = (void *)qword_1ED9C77B8;
    sub_1D57B34CC();
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1D5ABF230;
    v14 = v12;
    sub_1D593840C(a1, a2);
    v16 = v15;
    v18 = v17;
    v19 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
    v20 = sub_1D57B356C();
    *(_QWORD *)(v13 + 32) = v16;
    *(_QWORD *)(v13 + 40) = v18;
    v22 = v3[4];
    v21 = v3[5];
    *(_QWORD *)(v13 + 96) = v19;
    *(_QWORD *)(v13 + 104) = v20;
    *(_QWORD *)(v13 + 64) = v20;
    *(_QWORD *)(v13 + 72) = v22;
    *(_QWORD *)(v13 + 80) = v21;
    swift_bridgeObjectRetain();
    sub_1D5AAE334();

    swift_bridgeObjectRelease();
  }
}

void sub_1D593A62C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

id sub_1D593A660()
{
  id v0;
  void *v1;
  void *v2;
  id v3;

  v0 = objc_allocWithZone(MEMORY[0x1E0D70BA0]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v1 = (void *)sub_1D5AAE934();
  swift_bridgeObjectRelease();
  v2 = (void *)sub_1D5AAE7FC();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v0, sel_initWithExplicitlyEngagedStrings_explicitlyRejectedStrings_implicitlyEngagedStrings_implicitlyRejectedStrings_mappingId_, v1, 0, 0, 0, v2);

  return v3;
}

uint64_t sub_1D593A8D8(char a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  if ((a1 & 1) != 0)
  {
    sub_1D5AAEA00();
    if (qword_1ED9CCD08 != -1)
      swift_once();
    v6 = (void *)qword_1ED9C77B8;
    sub_1D57B34CC();
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1D5AB0170;
    v8 = v6;
    sub_1D593840C(a3, a4);
    v10 = v9;
    v12 = v11;
    *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v7 + 64) = sub_1D57B356C();
    *(_QWORD *)(v7 + 32) = v10;
    *(_QWORD *)(v7 + 40) = v12;
    sub_1D5AAE334();

    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D5AAEA0C();
    if (qword_1ED9CCD08 != -1)
      swift_once();
    v15 = (void *)qword_1ED9C77B8;
    sub_1D57B34CC();
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1D5ABF230;
    v17 = v15;
    sub_1D593840C(a3, a4);
    v19 = v18;
    v21 = v20;
    v22 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
    v23 = sub_1D57B356C();
    *(_QWORD *)(v16 + 64) = v23;
    *(_QWORD *)(v16 + 32) = v19;
    *(_QWORD *)(v16 + 40) = v21;
    if (a2)
    {
      swift_getErrorValue();
      sub_1D5AAEE38();
    }
    sub_1D5AAE898();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v16 + 96) = v22;
    *(_QWORD *)(v16 + 104) = v23;
    *(_QWORD *)(v16 + 72) = 0;
    *(_QWORD *)(v16 + 80) = 0xE000000000000000;
    sub_1D5AAE334();

    return swift_bridgeObjectRelease();
  }
}

void sub_1D593AB18(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t PortraitEventProcessor.deinit()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PortraitEventProcessor.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for PortraitEventProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1D593ABF8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D593AC1C(char a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D593A8D8(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
}

uint64_t ErrorDetails.domain.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ErrorDetails.domain.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ErrorDetails.domain.modify())()
{
  return nullsub_1;
}

uint64_t ErrorDetails.code.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ErrorDetails.code.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*ErrorDetails.code.modify())()
{
  return nullsub_1;
}

uint64_t ErrorDetails.message.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ErrorDetails.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*ErrorDetails.message.modify())()
{
  return nullsub_1;
}

uint64_t ErrorDetails.init(domain:code:message:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t sub_1D593AD38()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1701080931;
  if (*v0 != 1)
    v1 = 0x6567617373656DLL;
  if (*v0)
    return v1;
  else
    return 0x6E69616D6F64;
}

uint64_t sub_1D593AD88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D593B598(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D593ADAC()
{
  sub_1D593AF68();
  return sub_1D5AAEED4();
}

uint64_t sub_1D593ADD4()
{
  sub_1D593AF68();
  return sub_1D5AAEEE0();
}

uint64_t ErrorDetails.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  char v12;
  char v13;
  char v14;

  sub_1D593B19C(0, &qword_1EFF4D620, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = v1[2];
  v11[1] = v1[3];
  v11[2] = v8;
  v11[0] = v1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D593AF68();
  sub_1D5AAEEC8();
  v14 = 0;
  v9 = v11[3];
  sub_1D5AAED3C();
  if (!v9)
  {
    v13 = 1;
    sub_1D5AAED84();
    v12 = 2;
    sub_1D5AAECF4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D593AF68()
{
  unint64_t result;

  result = qword_1EFF4D628;
  if (!qword_1EFF4D628)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACD050, &type metadata for ErrorDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D628);
  }
  return result;
}

uint64_t ErrorDetails.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;

  sub_1D593B19C(0, &qword_1EFF4D630, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D593AF68();
  sub_1D5AAEEB0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v23 = 0;
    v11 = sub_1D5AAECA0();
    v13 = v12;
    v22 = 1;
    swift_bridgeObjectRetain();
    v20 = sub_1D5AAECE8();
    v21 = 2;
    v14 = sub_1D5AAEC58();
    v16 = v15;
    v17 = *(void (**)(char *, uint64_t))(v7 + 8);
    v18 = v14;
    v17(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v11;
    a2[1] = v13;
    a2[2] = v20;
    a2[3] = v18;
    a2[4] = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void sub_1D593B19C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D593AF68();
    v7 = a3(a1, &type metadata for ErrorDetails.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D593B200@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ErrorDetails.init(from:)(a1, a2);
}

uint64_t sub_1D593B214(_QWORD *a1)
{
  return ErrorDetails.encode(to:)(a1);
}

uint64_t destroy for ChannelData()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ErrorDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ErrorDetails(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ErrorDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ChannelData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ChannelData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ErrorDetails()
{
  return &type metadata for ErrorDetails;
}

uint64_t storeEnumTagSinglePayload for ErrorDetails.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D593B440 + 4 * byte_1D5ACCED9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D593B474 + 4 * byte_1D5ACCED4[v4]))();
}

uint64_t sub_1D593B474(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D593B47C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D593B484);
  return result;
}

uint64_t sub_1D593B490(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D593B498);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D593B49C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D593B4A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ErrorDetails.CodingKeys()
{
  return &type metadata for ErrorDetails.CodingKeys;
}

unint64_t sub_1D593B4C4()
{
  unint64_t result;

  result = qword_1EFF4D638;
  if (!qword_1EFF4D638)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACD028, &type metadata for ErrorDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D638);
  }
  return result;
}

unint64_t sub_1D593B50C()
{
  unint64_t result;

  result = qword_1EFF4D640;
  if (!qword_1EFF4D640)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACCF98, &type metadata for ErrorDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D640);
  }
  return result;
}

unint64_t sub_1D593B554()
{
  unint64_t result;

  result = qword_1EFF4D648;
  if (!qword_1EFF4D648)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACCFC0, &type metadata for ErrorDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D648);
  }
  return result;
}

uint64_t sub_1D593B598(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701080931 && a2 == 0xE400000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t dispatch thunk of AppExtensionSessionDataCommunicatorType.communicate(sessionData:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

NewsAnalytics::VideoAdEngagementType_optional __swiftcall VideoAdEngagementType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::VideoAdEngagementType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t VideoAdEngagementType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D593B75C + 4 * byte_1D5ACD0D0[*v0]))(2036427888, 0xE400000000000000);
}

uint64_t sub_1D593B75C()
{
  return 0x6573756170;
}

uint64_t sub_1D593B770()
{
  return 0x656D75736572;
}

uint64_t sub_1D593B784()
{
  return 0x6D6F436863746177;
}

uint64_t sub_1D593B7A8()
{
  return 1885956979;
}

uint64_t sub_1D593B7B4()
{
  return 0x726F4D6E7261656CLL;
}

void sub_1D593B7D0(char *a1)
{
  sub_1D5A3842C(*a1);
}

unint64_t sub_1D593B7E0()
{
  unint64_t result;

  result = qword_1EFF4D650;
  if (!qword_1EFF4D650)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for VideoAdEngagementType, &type metadata for VideoAdEngagementType);
    atomic_store(result, (unint64_t *)&qword_1EFF4D650);
  }
  return result;
}

void sub_1D593B824()
{
  char *v0;

  sub_1D5A80CAC(*v0);
}

void sub_1D593B82C()
{
  __asm { BR              X10 }
}

uint64_t sub_1D593B860()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D593B8E8(uint64_t a1)
{
  char *v1;

  sub_1D5AA98D8(a1, *v1);
}

NewsAnalytics::VideoAdEngagementType_optional sub_1D593B8F0(Swift::String *a1)
{
  return VideoAdEngagementType.init(rawValue:)(*a1);
}

uint64_t sub_1D593B8FC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D593B924 + 4 * byte_1D5ACD0DC[*v0]))();
}

void sub_1D593B924(_QWORD *a1@<X8>)
{
  *a1 = 0x6573756170;
  a1[1] = 0xE500000000000000;
}

void sub_1D593B93C(_QWORD *a1@<X8>)
{
  *a1 = 0x656D75736572;
  a1[1] = 0xE600000000000000;
}

void sub_1D593B954(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "watchComplete");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1D593B97C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 1885956979;
  a1[1] = v1;
}

void sub_1D593B98C(_QWORD *a1@<X8>)
{
  *a1 = 0x726F4D6E7261656CLL;
  a1[1] = 0xE900000000000065;
}

uint64_t sub_1D593B9AC()
{
  sub_1D593BB20();
  return sub_1D5AAE928();
}

uint64_t sub_1D593BA08()
{
  sub_1D593BB20();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for VideoAdEngagementType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D593BAA0 + 4 * byte_1D5ACD0E7[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D593BAD4 + 4 * byte_1D5ACD0E2[v4]))();
}

uint64_t sub_1D593BAD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D593BADC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D593BAE4);
  return result;
}

uint64_t sub_1D593BAF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D593BAF8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D593BAFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D593BB04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoAdEngagementType()
{
  return &type metadata for VideoAdEngagementType;
}

unint64_t sub_1D593BB20()
{
  unint64_t result;

  result = qword_1EFF4D658;
  if (!qword_1EFF4D658)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for VideoAdEngagementType, &type metadata for VideoAdEngagementType);
    atomic_store(result, (unint64_t *)&qword_1EFF4D658);
  }
  return result;
}

uint64_t sub_1D593BB64(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4D660, MEMORY[0x1E0CF8078]);
}

uint64_t static ArticleUndislikeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47238, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4D660, a1);
}

uint64_t sub_1D593BBA4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4D678, MEMORY[0x1E0CF8380]);
}

uint64_t static ArticleUndislikeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47240, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4D678, a1);
}

uint64_t ArticleUndislikeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t ArticleUndislikeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ArticleUndislikeEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleUndislikeEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for ArticleUndislikeEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9D02B8);
}

uint64_t ArticleUndislikeEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUndislikeEvent.articleData.modify())()
{
  type metadata accessor for ArticleUndislikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleUndislikeEvent.actionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUndislikeEvent.actionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUndislikeEvent.actionData.modify())()
{
  type metadata accessor for ArticleUndislikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleUndislikeEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUndislikeEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUndislikeEvent.channelData.modify())()
{
  type metadata accessor for ArticleUndislikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleUndislikeEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUndislikeEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUndislikeEvent.feedData.modify())()
{
  type metadata accessor for ArticleUndislikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleUndislikeEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUndislikeEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUndislikeEvent.groupData.modify())()
{
  type metadata accessor for ArticleUndislikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleUndislikeEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUndislikeEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUndislikeEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for ArticleUndislikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleUndislikeEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUndislikeEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUndislikeEvent.issueData.modify())()
{
  type metadata accessor for ArticleUndislikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleUndislikeEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUndislikeEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUndislikeEvent.userChannelContextData.modify())()
{
  type metadata accessor for ArticleUndislikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleUndislikeEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent(0) + 52);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUndislikeEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent(0) + 52);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUndislikeEvent.viewData.modify())()
{
  type metadata accessor for ArticleUndislikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleUndislikeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ArticleUndislikeEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v12, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v12, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v12, v23);
}

uint64_t ArticleUndislikeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ArticleUndislikeEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent.Model(0) + 20);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t type metadata accessor for ArticleUndislikeEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, (uint64_t *)&unk_1ED9CE598);
}

uint64_t ArticleUndislikeEvent.Model.actionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ArticleUndislikeEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t ArticleUndislikeEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleUndislikeEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent.Model(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

_QWORD *ArticleUndislikeEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for ArticleUndislikeEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 36), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t ArticleUndislikeEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent.Model(0) + 40));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleUndislikeEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent.Model(0) + 44));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t ArticleUndislikeEvent.Model.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = type metadata accessor for ArticleUndislikeEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 48));
  v5 = *v4;
  v6 = v4[1];
  LOWORD(v4) = *((_WORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_BYTE *)(a1 + 1) = v6;
  *(_WORD *)(a1 + 2) = (_WORD)v4;
  return result;
}

uint64_t ArticleUndislikeEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleUndislikeEvent.Model(0) + 52));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

__n128 ArticleUndislikeEvent.Model.init(eventData:articleData:actionData:channelData:feedData:groupData:userBundleSubscriptionContextData:issueData:userChannelContextData:viewData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, __int128 *a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, __n128 *a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t *a11)
{
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 *v29;
  __n128 result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  __n128 v46;
  __int16 v47;
  char v48;
  char v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _BYTE v58[23];
  _BYTE v59[144];

  v57 = a2[6];
  *(_OWORD *)v58 = a2[7];
  *(_QWORD *)&v58[15] = *(_QWORD *)((char *)a2 + 127);
  v53 = a2[2];
  v54 = a2[3];
  v55 = a2[4];
  v56 = a2[5];
  v51 = *a2;
  v52 = a2[1];
  v15 = *a3;
  v34 = a4[1];
  v35 = *a4;
  v16 = *((_BYTE *)a4 + 16);
  v17 = *((_BYTE *)a4 + 17);
  v18 = a4[3];
  v33 = a4[4];
  v37 = *a5;
  v36 = *((_QWORD *)a5 + 2);
  sub_1D57DD5B8(a6, (uint64_t)v59);
  v44 = *a7;
  v42 = *((_QWORD *)a7 + 2);
  v43 = *((_QWORD *)a7 + 1);
  v40 = a7[25];
  v41 = a7[24];
  v38 = *((_QWORD *)a7 + 5);
  v39 = *((_QWORD *)a7 + 4);
  LOBYTE(a7) = a7[48];
  v46 = *a8;
  v19 = a8[1].n128_u64[0];
  v20 = a8[1].n128_u64[1];
  v45 = v19;
  v48 = a10[1];
  v49 = *a10;
  v47 = *((_WORD *)a10 + 1);
  v21 = *a11;
  v50 = a11[1];
  v22 = *((_WORD *)a11 + 8);
  v23 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a9, a1, v23);
  v24 = (int *)type metadata accessor for ArticleUndislikeEvent.Model(0);
  v25 = a9 + v24[5];
  *(_OWORD *)(v25 + 96) = v57;
  *(_OWORD *)(v25 + 112) = *(_OWORD *)v58;
  *(_QWORD *)(v25 + 127) = *(_QWORD *)&v58[15];
  *(_OWORD *)(v25 + 32) = v53;
  *(_OWORD *)(v25 + 48) = v54;
  *(_OWORD *)(v25 + 64) = v55;
  *(_OWORD *)(v25 + 80) = v56;
  *(_OWORD *)v25 = v51;
  *(_OWORD *)(v25 + 16) = v52;
  *(_BYTE *)(a9 + v24[6]) = v15;
  v26 = a9 + v24[7];
  *(_QWORD *)v26 = v35;
  *(_QWORD *)(v26 + 8) = v34;
  *(_BYTE *)(v26 + 16) = v16;
  *(_BYTE *)(v26 + 17) = v17;
  *(_QWORD *)(v26 + 24) = v18;
  *(_QWORD *)(v26 + 32) = v33;
  v27 = a9 + v24[8];
  *(_OWORD *)v27 = v37;
  *(_QWORD *)(v27 + 16) = v36;
  sub_1D57DD5B8((uint64_t)v59, a9 + v24[9]);
  v28 = a9 + v24[10];
  *(_BYTE *)v28 = v44;
  *(_QWORD *)(v28 + 8) = v43;
  *(_QWORD *)(v28 + 16) = v42;
  *(_BYTE *)(v28 + 24) = v41;
  *(_BYTE *)(v28 + 25) = v40;
  *(_QWORD *)(v28 + 32) = v39;
  *(_QWORD *)(v28 + 40) = v38;
  *(_BYTE *)(v28 + 48) = (_BYTE)a7;
  v29 = (__n128 *)(a9 + v24[11]);
  result = v46;
  *v29 = v46;
  v29[1].n128_u64[0] = v45;
  v29[1].n128_u64[1] = v20;
  v31 = a9 + v24[12];
  *(_BYTE *)v31 = v49;
  *(_BYTE *)(v31 + 1) = v48;
  *(_WORD *)(v31 + 2) = v47;
  v32 = a9 + v24[13];
  *(_QWORD *)v32 = v21;
  *(_QWORD *)(v32 + 8) = v50;
  *(_WORD *)(v32 + 16) = v22;
  return result;
}

uint64_t sub_1D593CD38(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D593CD70 + 4 * byte_1D5ACD210[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D593CD70()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D593CDC0()
{
  return 0x6174614464656566;
}

uint64_t sub_1D593CDD8()
{
  return 0x74614470756F7267;
}

unint64_t sub_1D593CDEC()
{
  return 0xD000000000000021;
}

uint64_t sub_1D593CE0C()
{
  return 0x7461446575737369;
}

unint64_t sub_1D593CE20()
{
  return 0xD000000000000016;
}

uint64_t sub_1D593CE3C()
{
  return 0x6174614477656976;
}

uint64_t sub_1D593CE54()
{
  unsigned __int8 *v0;

  return sub_1D593CD38(*v0);
}

uint64_t sub_1D593CE5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5940D94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D593CE80()
{
  sub_1D593D318();
  return sub_1D5AAEED4();
}

uint64_t sub_1D593CEA8()
{
  sub_1D593D318();
  return sub_1D5AAEEE0();
}

uint64_t ArticleUndislikeEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  _OWORD *v29;
  __int128 v30;
  char *v31;
  char v32;
  char v33;
  uint64_t v34;
  __int16 v35;
  uint64_t v37;
  char v38;
  _OWORD v39[3];
  char v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _BYTE v48[23];
  char v49;
  __int128 v50;
  uint64_t v51;
  char v52;

  v3 = v1;
  sub_1D593DB0C(0, &qword_1EFF4D690, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v37 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D593D318();
  sub_1D5AAEEC8();
  v52 = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for ArticleUndislikeEvent.Model(0);
    v11 = (__int128 *)(v3 + v10[5]);
    v12 = v11[7];
    v47 = v11[6];
    *(_OWORD *)v48 = v12;
    *(_QWORD *)&v48[15] = *(_QWORD *)((char *)v11 + 127);
    v13 = v11[3];
    v43 = v11[2];
    v44 = v13;
    v14 = v11[5];
    v45 = v11[4];
    v46 = v14;
    v15 = v11[1];
    v41 = *v11;
    v42 = v15;
    LOBYTE(v39[0]) = 1;
    sub_1D57CB940();
    sub_1D5AAED6C();
    LOBYTE(v41) = *(_BYTE *)(v3 + v10[6]);
    LOBYTE(v39[0]) = 2;
    sub_1D57CC038();
    sub_1D5AAED6C();
    v16 = (uint64_t *)(v3 + v10[7]);
    v17 = *v16;
    v18 = v16[1];
    v19 = *((_BYTE *)v16 + 16);
    v20 = *((_BYTE *)v16 + 17);
    v22 = v16[3];
    v21 = v16[4];
    *(_QWORD *)&v41 = v17;
    *((_QWORD *)&v41 + 1) = v18;
    LOBYTE(v42) = v19;
    BYTE1(v42) = v20;
    *((_QWORD *)&v42 + 1) = v22;
    *(_QWORD *)&v43 = v21;
    LOBYTE(v39[0]) = 3;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v23 = (__int128 *)(v3 + v10[8]);
    v24 = *((_QWORD *)v23 + 2);
    v50 = *v23;
    v51 = v24;
    v49 = 4;
    sub_1D57C65D4();
    sub_1D5AAED18();
    sub_1D57DD5B8(v3 + v10[9], (uint64_t)&v41);
    sub_1D57DD5B8((uint64_t)&v41, (uint64_t)v39);
    v38 = 5;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v25 = v3 + v10[10];
    v26 = *(_BYTE *)(v25 + 24);
    v27 = *(_BYTE *)(v25 + 25);
    v28 = *(_BYTE *)(v25 + 48);
    LOBYTE(v39[0]) = *(_BYTE *)v25;
    *(_OWORD *)((char *)v39 + 8) = *(_OWORD *)(v25 + 8);
    BYTE8(v39[1]) = v26;
    BYTE9(v39[1]) = v27;
    v39[2] = *(_OWORD *)(v25 + 32);
    v40 = v28;
    v38 = 6;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v29 = (_OWORD *)(v3 + v10[11]);
    v30 = v29[1];
    v39[0] = *v29;
    v39[1] = v30;
    v38 = 7;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    v31 = (char *)(v3 + v10[12]);
    v32 = *v31;
    v33 = v31[1];
    LOWORD(v31) = *((_WORD *)v31 + 1);
    LOBYTE(v39[0]) = v32;
    BYTE1(v39[0]) = v33;
    WORD1(v39[0]) = (_WORD)v31;
    v38 = 8;
    sub_1D57C7B24();
    sub_1D5AAED6C();
    v34 = v3 + v10[13];
    v35 = *(_WORD *)(v34 + 16);
    v39[0] = *(_OWORD *)v34;
    LOWORD(v39[1]) = v35;
    v38 = 9;
    sub_1D57C62A4();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D593D318()
{
  unint64_t result;

  result = qword_1EFF4D698;
  if (!qword_1EFF4D698)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACD50C, &type metadata for ArticleUndislikeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D698);
  }
  return result;
}

uint64_t ArticleUndislikeEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char v28;
  char v29;
  char v30;
  char *v31;
  char *v32;
  __int128 v33;
  char v34;
  __int16 v35;
  char *v36;
  __int16 v37;
  uint64_t v38;
  char *v39;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  int *v48;
  char v49;
  _OWORD v50[3];
  char v51;
  _BYTE v52[144];
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _BYTE v60[23];
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;

  v43 = a2;
  v4 = sub_1D5AADF98();
  v46 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D593DB0C(0, &qword_1EFF4D6A0, MEMORY[0x1E0DED048]);
  v45 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v41 - v9;
  v48 = (int *)type metadata accessor for ArticleUndislikeEvent.Model(0);
  MEMORY[0x1E0C80A78](v48);
  v65 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1D593D318();
  v44 = v10;
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  v42 = v8;
  LOBYTE(v61) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v13 = v65;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v65, v6, v4);
  v52[143] = 1;
  sub_1D57CB8FC();
  sub_1D5AAECD0();
  v41[1] = v4;
  v14 = v48;
  v15 = &v13[v48[5]];
  v16 = *(_OWORD *)v60;
  *((_OWORD *)v15 + 6) = v59;
  *((_OWORD *)v15 + 7) = v16;
  *(_QWORD *)(v15 + 127) = *(_QWORD *)&v60[15];
  v17 = v56;
  *((_OWORD *)v15 + 2) = v55;
  *((_OWORD *)v15 + 3) = v17;
  v18 = v58;
  *((_OWORD *)v15 + 4) = v57;
  *((_OWORD *)v15 + 5) = v18;
  v19 = v54;
  *(_OWORD *)v15 = v53;
  *((_OWORD *)v15 + 1) = v19;
  v52[0] = 2;
  sub_1D57CBFF4();
  sub_1D5AAECD0();
  v13[v14[6]] = v61;
  v52[0] = 3;
  sub_1D57CB874();
  sub_1D5AAECD0();
  v20 = *((_QWORD *)&v61 + 1);
  v21 = v62;
  v22 = BYTE1(v62);
  v23 = v63;
  v24 = v64;
  v25 = &v13[v14[7]];
  *(_QWORD *)v25 = v61;
  *((_QWORD *)v25 + 1) = v20;
  v25[16] = v21;
  v25[17] = v22;
  *((_QWORD *)v25 + 3) = v23;
  *((_QWORD *)v25 + 4) = v24;
  v52[0] = 4;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v26 = v62;
  v27 = &v13[v14[8]];
  *(_OWORD *)v27 = v61;
  *((_QWORD *)v27 + 2) = v26;
  v52[142] = 5;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  sub_1D57DD5B8((uint64_t)&v61, (uint64_t)v52);
  sub_1D57DD5B8((uint64_t)v52, (uint64_t)&v13[v14[9]]);
  v49 = 6;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v28 = BYTE8(v50[1]);
  v29 = BYTE9(v50[1]);
  v30 = v51;
  v31 = &v13[v14[10]];
  *v31 = v50[0];
  *(_OWORD *)(v31 + 8) = *(_OWORD *)((char *)v50 + 8);
  v31[24] = v28;
  v31[25] = v29;
  *((_OWORD *)v31 + 2) = v50[2];
  v31[48] = v30;
  v49 = 7;
  sub_1D57C5ED8();
  sub_1D5AAEC7C();
  v32 = &v13[v48[11]];
  v33 = v50[1];
  *(_OWORD *)v32 = v50[0];
  *((_OWORD *)v32 + 1) = v33;
  v49 = 8;
  sub_1D57C7AE0();
  sub_1D5AAECD0();
  v34 = BYTE1(v50[0]);
  v35 = WORD1(v50[0]);
  v36 = &v13[v48[12]];
  *v36 = v50[0];
  v36[1] = v34;
  *((_WORD *)v36 + 1) = v35;
  v49 = 9;
  sub_1D57C6260();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v45);
  v37 = v50[1];
  v38 = (uint64_t)v65;
  v39 = &v65[v48[13]];
  *(_OWORD *)v39 = v50[0];
  *((_WORD *)v39 + 8) = v37;
  sub_1D593DB68(v38, v43);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  return sub_1D593DBAC(v38);
}

void sub_1D593DB0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D593D318();
    v7 = a3(a1, &type metadata for ArticleUndislikeEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D593DB68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArticleUndislikeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D593DBAC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArticleUndislikeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D593DBE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleUndislikeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D593DBFC(_QWORD *a1)
{
  return ArticleUndislikeEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D593DC10@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47238, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4D660, a1);
}

uint64_t sub_1D593DC34@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47240, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4D678, a1);
}

uint64_t sub_1D593DC58@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  v13 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v13, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v13, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v13, v24);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleUndislikeEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for ArticleUndislikeEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
}

uint64_t initializeWithCopy for ArticleUndislikeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for ArticleUndislikeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for ArticleUndislikeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for ArticleUndislikeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleUndislikeEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D593F134(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                    v8 = v21;
                    v12 = *(_QWORD *)(v21 - 8);
                    v13 = a3[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ArticleUndislikeEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D593F3F4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                    v10 = v23;
                    v14 = *(_QWORD *)(v23 - 8);
                    v15 = a4[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

_QWORD *initializeBufferWithCopyOfBuffer for ArticleUndislikeEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v54;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v12;
    v10[32] = v11[32];
    v13 = *((_QWORD *)v11 + 6);
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 6) = v13;
    v10[56] = v11[56];
    v10[57] = v11[57];
    v14 = *((_QWORD *)v11 + 9);
    *((_QWORD *)v10 + 8) = *((_QWORD *)v11 + 8);
    *((_QWORD *)v10 + 9) = v14;
    v10[80] = v11[80];
    *(_OWORD *)(v10 + 88) = *(_OWORD *)(v11 + 88);
    *((_QWORD *)v10 + 13) = *((_QWORD *)v11 + 13);
    v10[112] = v11[112];
    *((_QWORD *)v10 + 15) = *((_QWORD *)v11 + 15);
    *((_DWORD *)v10 + 32) = *((_DWORD *)v11 + 32);
    v10[132] = v11[132];
    *(_WORD *)(v10 + 133) = *(_WORD *)(v11 + 133);
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v15 = a3[7];
    v16 = a3[8];
    v17 = (char *)a1 + v15;
    v18 = (char *)a2 + v15;
    v19 = *((_QWORD *)v18 + 1);
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *((_QWORD *)v17 + 1) = v19;
    *((_WORD *)v17 + 8) = *((_WORD *)v18 + 8);
    v20 = *((_QWORD *)v18 + 4);
    *((_QWORD *)v17 + 3) = *((_QWORD *)v18 + 3);
    *((_QWORD *)v17 + 4) = v20;
    v21 = (char *)a1 + v16;
    v54 = a2;
    v22 = (char *)a2 + v16;
    v23 = *((_QWORD *)v22 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23 == 1)
    {
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
    }
    else
    {
      *v21 = *v22;
      *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
      *((_QWORD *)v21 + 2) = v23;
      swift_bridgeObjectRetain();
    }
    v25 = v54;
    v26 = a3[9];
    v27 = (char *)a1 + v26;
    v28 = (char *)v54 + v26;
    v29 = *((_QWORD *)v28 + 2);
    if (v29)
    {
      *(_WORD *)v27 = *(_WORD *)v28;
      *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
      *((_QWORD *)v27 + 2) = v29;
      *((_QWORD *)v27 + 3) = *((_QWORD *)v28 + 3);
      v30 = *((_QWORD *)v28 + 5);
      *((_QWORD *)v27 + 4) = *((_QWORD *)v28 + 4);
      *((_QWORD *)v27 + 5) = v30;
      v31 = *((_QWORD *)v28 + 7);
      *((_QWORD *)v27 + 6) = *((_QWORD *)v28 + 6);
      *((_QWORD *)v27 + 7) = v31;
      v32 = *((_QWORD *)v28 + 9);
      *((_QWORD *)v27 + 8) = *((_QWORD *)v28 + 8);
      *((_QWORD *)v27 + 9) = v32;
      v27[80] = v28[80];
      v33 = *((_QWORD *)v28 + 12);
      *((_QWORD *)v27 + 11) = *((_QWORD *)v28 + 11);
      *((_QWORD *)v27 + 12) = v33;
      *((_QWORD *)v27 + 13) = *((_QWORD *)v28 + 13);
      v27[112] = v28[112];
      v34 = *((_QWORD *)v28 + 16);
      *((_QWORD *)v27 + 15) = *((_QWORD *)v28 + 15);
      *((_QWORD *)v27 + 16) = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v25 = v54;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v35 = *((_OWORD *)v28 + 7);
      *((_OWORD *)v27 + 6) = *((_OWORD *)v28 + 6);
      *((_OWORD *)v27 + 7) = v35;
      *((_QWORD *)v27 + 16) = *((_QWORD *)v28 + 16);
      v36 = *((_OWORD *)v28 + 3);
      *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
      *((_OWORD *)v27 + 3) = v36;
      v37 = *((_OWORD *)v28 + 5);
      *((_OWORD *)v27 + 4) = *((_OWORD *)v28 + 4);
      *((_OWORD *)v27 + 5) = v37;
      v38 = *((_OWORD *)v28 + 1);
      *(_OWORD *)v27 = *(_OWORD *)v28;
      *((_OWORD *)v27 + 1) = v38;
    }
    v39 = a3[10];
    v40 = a3[11];
    v41 = (char *)a1 + v39;
    v42 = (char *)v25 + v39;
    *v41 = *v42;
    v43 = *((_QWORD *)v42 + 2);
    *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
    *((_QWORD *)v41 + 2) = v43;
    *((_WORD *)v41 + 12) = *((_WORD *)v42 + 12);
    v44 = *((_QWORD *)v42 + 5);
    *((_QWORD *)v41 + 4) = *((_QWORD *)v42 + 4);
    *((_QWORD *)v41 + 5) = v44;
    v41[48] = v42[48];
    v45 = (char *)a1 + v40;
    v46 = (uint64_t)v25 + v40;
    v47 = *(_QWORD *)((char *)v25 + v40 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v47)
    {
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *((_QWORD *)v45 + 1) = v47;
      *((_WORD *)v45 + 8) = *(_WORD *)(v46 + 16);
      *((_QWORD *)v45 + 3) = *(_QWORD *)(v46 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v48 = *(_OWORD *)(v46 + 16);
      *(_OWORD *)v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + 1) = v48;
    }
    v49 = a3[13];
    *(_DWORD *)((char *)a1 + a3[12]) = *(_DWORD *)((char *)v25 + a3[12]);
    v50 = (char *)a1 + v49;
    v51 = (uint64_t)v25 + v49;
    v52 = *(_QWORD *)(v51 + 8);
    *(_QWORD *)v50 = *(_QWORD *)v51;
    *((_QWORD *)v50 + 1) = v52;
    *((_WORD *)v50 + 8) = *(_WORD *)(v51 + 16);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ArticleUndislikeEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[8] + 16) != 1)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[9] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[11] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArticleUndislikeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int *v52;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  v12 = *(_QWORD *)(v10 + 48);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 48) = v12;
  *(_BYTE *)(v9 + 56) = *(_BYTE *)(v10 + 56);
  *(_BYTE *)(v9 + 57) = *(_BYTE *)(v10 + 57);
  v13 = *(_QWORD *)(v10 + 72);
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v9 + 72) = v13;
  *(_BYTE *)(v9 + 80) = *(_BYTE *)(v10 + 80);
  *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
  *(_QWORD *)(v9 + 104) = *(_QWORD *)(v10 + 104);
  *(_BYTE *)(v9 + 112) = *(_BYTE *)(v10 + 112);
  *(_QWORD *)(v9 + 120) = *(_QWORD *)(v10 + 120);
  *(_DWORD *)(v9 + 128) = *(_DWORD *)(v10 + 128);
  *(_BYTE *)(v9 + 132) = *(_BYTE *)(v10 + 132);
  *(_WORD *)(v9 + 133) = *(_WORD *)(v10 + 133);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v14 = a3[7];
  v15 = a3[8];
  v52 = a3;
  v16 = a1 + v14;
  v17 = a2 + v14;
  v18 = *(_QWORD *)(v17 + 8);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_QWORD *)(v16 + 8) = v18;
  *(_WORD *)(v16 + 16) = *(_WORD *)(v17 + 16);
  v19 = *(_QWORD *)(v17 + 32);
  *(_QWORD *)(v16 + 24) = *(_QWORD *)(v17 + 24);
  *(_QWORD *)(v16 + 32) = v19;
  v20 = a1 + v15;
  v21 = a2 + v15;
  v22 = *(_QWORD *)(a2 + v15 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22 == 1)
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
    *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  }
  else
  {
    *(_BYTE *)v20 = *(_BYTE *)v21;
    *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
    *(_QWORD *)(v20 + 16) = v22;
    swift_bridgeObjectRetain();
  }
  v23 = v52;
  v24 = v52[9];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)(v26 + 16);
  if (v27)
  {
    *(_WORD *)v25 = *(_WORD *)v26;
    *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
    *(_QWORD *)(v25 + 16) = v27;
    *(_QWORD *)(v25 + 24) = *(_QWORD *)(v26 + 24);
    v28 = *(_QWORD *)(v26 + 40);
    *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
    *(_QWORD *)(v25 + 40) = v28;
    v29 = *(_QWORD *)(v26 + 56);
    *(_QWORD *)(v25 + 48) = *(_QWORD *)(v26 + 48);
    *(_QWORD *)(v25 + 56) = v29;
    v30 = *(_QWORD *)(v26 + 72);
    *(_QWORD *)(v25 + 64) = *(_QWORD *)(v26 + 64);
    *(_QWORD *)(v25 + 72) = v30;
    *(_BYTE *)(v25 + 80) = *(_BYTE *)(v26 + 80);
    v31 = *(_QWORD *)(v26 + 96);
    *(_QWORD *)(v25 + 88) = *(_QWORD *)(v26 + 88);
    *(_QWORD *)(v25 + 96) = v31;
    *(_QWORD *)(v25 + 104) = *(_QWORD *)(v26 + 104);
    *(_BYTE *)(v25 + 112) = *(_BYTE *)(v26 + 112);
    v32 = *(_QWORD *)(v26 + 128);
    *(_QWORD *)(v25 + 120) = *(_QWORD *)(v26 + 120);
    *(_QWORD *)(v25 + 128) = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = v52;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v33 = *(_OWORD *)(v26 + 112);
    *(_OWORD *)(v25 + 96) = *(_OWORD *)(v26 + 96);
    *(_OWORD *)(v25 + 112) = v33;
    *(_QWORD *)(v25 + 128) = *(_QWORD *)(v26 + 128);
    v34 = *(_OWORD *)(v26 + 48);
    *(_OWORD *)(v25 + 32) = *(_OWORD *)(v26 + 32);
    *(_OWORD *)(v25 + 48) = v34;
    v35 = *(_OWORD *)(v26 + 80);
    *(_OWORD *)(v25 + 64) = *(_OWORD *)(v26 + 64);
    *(_OWORD *)(v25 + 80) = v35;
    v36 = *(_OWORD *)(v26 + 16);
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 16) = v36;
  }
  v37 = v23[10];
  v38 = v23[11];
  v39 = a1 + v37;
  v40 = a2 + v37;
  *(_BYTE *)v39 = *(_BYTE *)v40;
  v41 = *(_QWORD *)(v40 + 16);
  *(_QWORD *)(v39 + 8) = *(_QWORD *)(v40 + 8);
  *(_QWORD *)(v39 + 16) = v41;
  *(_WORD *)(v39 + 24) = *(_WORD *)(v40 + 24);
  v42 = *(_QWORD *)(v40 + 40);
  *(_QWORD *)(v39 + 32) = *(_QWORD *)(v40 + 32);
  *(_QWORD *)(v39 + 40) = v42;
  *(_BYTE *)(v39 + 48) = *(_BYTE *)(v40 + 48);
  v43 = a1 + v38;
  v44 = a2 + v38;
  v45 = *(_QWORD *)(a2 + v38 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v45)
  {
    *(_QWORD *)v43 = *(_QWORD *)v44;
    *(_QWORD *)(v43 + 8) = v45;
    *(_WORD *)(v43 + 16) = *(_WORD *)(v44 + 16);
    *(_QWORD *)(v43 + 24) = *(_QWORD *)(v44 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v46 = *(_OWORD *)(v44 + 16);
    *(_OWORD *)v43 = *(_OWORD *)v44;
    *(_OWORD *)(v43 + 16) = v46;
  }
  v47 = v23[13];
  *(_DWORD *)(a1 + v23[12]) = *(_DWORD *)(a2 + v23[12]);
  v48 = a1 + v47;
  v49 = a2 + v47;
  v50 = *(_QWORD *)(v49 + 8);
  *(_QWORD *)v48 = *(_QWORD *)v49;
  *(_QWORD *)(v48 + 8) = v50;
  *(_WORD *)(v48 + 16) = *(_WORD *)(v49 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArticleUndislikeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(a2 + v7 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  v10 = *(_QWORD *)(v9 + 48);
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_QWORD *)(v8 + 48) = v10;
  *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  *(_QWORD *)(v8 + 72) = v11;
  *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
  *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
  *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
  *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
  *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(a2 + v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_BYTE *)(v13 + 17) = *(_BYTE *)(v14 + 17);
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = (__int128 *)(a2 + v15);
  v18 = *(_QWORD *)(a1 + v15 + 16);
  v19 = *(_QWORD *)(a2 + v15 + 16);
  if (v18 == 1)
  {
    if (v19 == 1)
    {
      v20 = *v17;
      *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
      *(_OWORD *)v16 = v20;
    }
    else
    {
      *(_BYTE *)v16 = *(_BYTE *)v17;
      *(_QWORD *)(v16 + 8) = *((_QWORD *)v17 + 1);
      *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v19 == 1)
  {
    sub_1D57D9100(v16);
    v21 = *((_QWORD *)v17 + 2);
    *(_OWORD *)v16 = *v17;
    *(_QWORD *)(v16 + 16) = v21;
  }
  else
  {
    *(_BYTE *)v16 = *(_BYTE *)v17;
    *(_QWORD *)(v16 + 8) = *((_QWORD *)v17 + 1);
    *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v22 = a3[9];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_QWORD *)(a1 + v22 + 16);
  v26 = *(_QWORD *)(a2 + v22 + 16);
  if (v25)
  {
    if (v26)
    {
      *(_BYTE *)v23 = *(_BYTE *)v24;
      *(_BYTE *)(v23 + 1) = *(_BYTE *)(v24 + 1);
      *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
      *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v23 + 24) = *(_DWORD *)(v24 + 24);
      *(_DWORD *)(v23 + 28) = *(_DWORD *)(v24 + 28);
      *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 40) = *(_QWORD *)(v24 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 48) = *(_QWORD *)(v24 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 56) = *(_QWORD *)(v24 + 56);
      *(_QWORD *)(v23 + 64) = *(_QWORD *)(v24 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 72) = *(_QWORD *)(v24 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v23 + 80) = *(_BYTE *)(v24 + 80);
      *(_QWORD *)(v23 + 88) = *(_QWORD *)(v24 + 88);
      *(_QWORD *)(v23 + 96) = *(_QWORD *)(v24 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v27 = *(_QWORD *)(v24 + 104);
      *(_BYTE *)(v23 + 112) = *(_BYTE *)(v24 + 112);
      *(_QWORD *)(v23 + 104) = v27;
      *(_QWORD *)(v23 + 120) = *(_QWORD *)(v24 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 128) = *(_QWORD *)(v24 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v23);
      *(_OWORD *)v23 = *(_OWORD *)v24;
      v29 = *(_OWORD *)(v24 + 64);
      v31 = *(_OWORD *)(v24 + 16);
      v30 = *(_OWORD *)(v24 + 32);
      *(_OWORD *)(v23 + 48) = *(_OWORD *)(v24 + 48);
      *(_OWORD *)(v23 + 64) = v29;
      *(_OWORD *)(v23 + 16) = v31;
      *(_OWORD *)(v23 + 32) = v30;
      v33 = *(_OWORD *)(v24 + 96);
      v32 = *(_OWORD *)(v24 + 112);
      v34 = *(_OWORD *)(v24 + 80);
      *(_QWORD *)(v23 + 128) = *(_QWORD *)(v24 + 128);
      *(_OWORD *)(v23 + 96) = v33;
      *(_OWORD *)(v23 + 112) = v32;
      *(_OWORD *)(v23 + 80) = v34;
    }
  }
  else if (v26)
  {
    *(_BYTE *)v23 = *(_BYTE *)v24;
    *(_BYTE *)(v23 + 1) = *(_BYTE *)(v24 + 1);
    *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
    *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
    *(_DWORD *)(v23 + 24) = *(_DWORD *)(v24 + 24);
    *(_DWORD *)(v23 + 28) = *(_DWORD *)(v24 + 28);
    *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
    *(_QWORD *)(v23 + 40) = *(_QWORD *)(v24 + 40);
    *(_QWORD *)(v23 + 48) = *(_QWORD *)(v24 + 48);
    *(_QWORD *)(v23 + 56) = *(_QWORD *)(v24 + 56);
    *(_QWORD *)(v23 + 64) = *(_QWORD *)(v24 + 64);
    *(_QWORD *)(v23 + 72) = *(_QWORD *)(v24 + 72);
    *(_BYTE *)(v23 + 80) = *(_BYTE *)(v24 + 80);
    *(_QWORD *)(v23 + 88) = *(_QWORD *)(v24 + 88);
    *(_QWORD *)(v23 + 96) = *(_QWORD *)(v24 + 96);
    v28 = *(_QWORD *)(v24 + 104);
    *(_BYTE *)(v23 + 112) = *(_BYTE *)(v24 + 112);
    *(_QWORD *)(v23 + 104) = v28;
    *(_QWORD *)(v23 + 120) = *(_QWORD *)(v24 + 120);
    *(_QWORD *)(v23 + 128) = *(_QWORD *)(v24 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v23 = *(_OWORD *)v24;
    v35 = *(_OWORD *)(v24 + 16);
    v36 = *(_OWORD *)(v24 + 32);
    v37 = *(_OWORD *)(v24 + 64);
    *(_OWORD *)(v23 + 48) = *(_OWORD *)(v24 + 48);
    *(_OWORD *)(v23 + 64) = v37;
    *(_OWORD *)(v23 + 16) = v35;
    *(_OWORD *)(v23 + 32) = v36;
    v38 = *(_OWORD *)(v24 + 80);
    v39 = *(_OWORD *)(v24 + 96);
    v40 = *(_OWORD *)(v24 + 112);
    *(_QWORD *)(v23 + 128) = *(_QWORD *)(v24 + 128);
    *(_OWORD *)(v23 + 96) = v39;
    *(_OWORD *)(v23 + 112) = v40;
    *(_OWORD *)(v23 + 80) = v38;
  }
  v41 = a3[10];
  v42 = a1 + v41;
  v43 = a2 + v41;
  *(_BYTE *)v42 = *(_BYTE *)(a2 + v41);
  *(_QWORD *)(v42 + 8) = *(_QWORD *)(a2 + v41 + 8);
  *(_QWORD *)(v42 + 16) = *(_QWORD *)(a2 + v41 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v42 + 24) = *(_BYTE *)(v43 + 24);
  *(_BYTE *)(v42 + 25) = *(_BYTE *)(v43 + 25);
  *(_QWORD *)(v42 + 32) = *(_QWORD *)(v43 + 32);
  *(_QWORD *)(v42 + 40) = *(_QWORD *)(v43 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v42 + 48) = *(_BYTE *)(v43 + 48);
  v44 = a3[11];
  v45 = a1 + v44;
  v46 = a2 + v44;
  v47 = *(_QWORD *)(a1 + v44 + 8);
  v48 = *(_QWORD *)(a2 + v44 + 8);
  if (v47)
  {
    if (v48)
    {
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *(_QWORD *)(v45 + 8) = *(_QWORD *)(v46 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v45 + 16) = *(_BYTE *)(v46 + 16);
      *(_BYTE *)(v45 + 17) = *(_BYTE *)(v46 + 17);
      *(_QWORD *)(v45 + 24) = *(_QWORD *)(v46 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE47C(v45);
      v49 = *(_OWORD *)(v46 + 16);
      *(_OWORD *)v45 = *(_OWORD *)v46;
      *(_OWORD *)(v45 + 16) = v49;
    }
  }
  else if (v48)
  {
    *(_QWORD *)v45 = *(_QWORD *)v46;
    *(_QWORD *)(v45 + 8) = *(_QWORD *)(v46 + 8);
    *(_BYTE *)(v45 + 16) = *(_BYTE *)(v46 + 16);
    *(_BYTE *)(v45 + 17) = *(_BYTE *)(v46 + 17);
    *(_QWORD *)(v45 + 24) = *(_QWORD *)(v46 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v50 = *(_OWORD *)(v46 + 16);
    *(_OWORD *)v45 = *(_OWORD *)v46;
    *(_OWORD *)(v45 + 16) = v50;
  }
  v51 = a3[12];
  v52 = (_BYTE *)(a1 + v51);
  v53 = (_BYTE *)(a2 + v51);
  *v52 = *v53;
  v52[1] = v53[1];
  v52[2] = v53[2];
  v52[3] = v53[3];
  v54 = a3[13];
  v55 = a1 + v54;
  v56 = a2 + v54;
  *(_QWORD *)v55 = *(_QWORD *)(a2 + v54);
  *(_QWORD *)(v55 + 8) = *(_QWORD *)(a2 + v54 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v55 + 16) = *(_BYTE *)(v56 + 16);
  *(_BYTE *)(v55 + 17) = *(_BYTE *)(v56 + 17);
  return a1;
}

uint64_t initializeWithTake for ArticleUndislikeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  _OWORD *v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  *(_QWORD *)(v9 + 127) = *(_QWORD *)(v10 + 127);
  v12 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v12;
  v13 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v13;
  v14 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v14;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  v20 = a1 + v16;
  v21 = a2 + v16;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  v22 = a3[9];
  v23 = a3[10];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_QWORD *)(v24 + 128) = *(_QWORD *)(v25 + 128);
  v26 = *(_OWORD *)(v25 + 48);
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
  *(_OWORD *)(v24 + 48) = v26;
  v27 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v27;
  v28 = *(_OWORD *)(v25 + 112);
  *(_OWORD *)(v24 + 96) = *(_OWORD *)(v25 + 96);
  *(_OWORD *)(v24 + 112) = v28;
  v29 = *(_OWORD *)(v25 + 80);
  *(_OWORD *)(v24 + 64) = *(_OWORD *)(v25 + 64);
  *(_OWORD *)(v24 + 80) = v29;
  v30 = a1 + v23;
  v31 = a2 + v23;
  v32 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 16) = v32;
  *(_OWORD *)(v30 + 32) = *(_OWORD *)(v31 + 32);
  *(_BYTE *)(v30 + 48) = *(_BYTE *)(v31 + 48);
  v33 = a3[11];
  v34 = a3[12];
  v35 = (_OWORD *)(a1 + v33);
  v36 = (_OWORD *)(a2 + v33);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  *(_DWORD *)(a1 + v34) = *(_DWORD *)(a2 + v34);
  v38 = a3[13];
  v39 = a1 + v38;
  v40 = a2 + v38;
  *(_OWORD *)v39 = *(_OWORD *)v40;
  *(_WORD *)(v39 + 16) = *(_WORD *)(v40 + 16);
  return a1;
}

uint64_t assignWithTake for ArticleUndislikeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(a2 + v7 + 8);
  v10 = *(_QWORD *)(a2 + v7 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v11 = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = v11;
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
  *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
  *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
  *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
  *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
  v12 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12);
  v16 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = v15;
  *(_QWORD *)(v13 + 8) = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_BYTE *)(v13 + 17) = *(_BYTE *)(v14 + 17);
  v17 = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 32) = v17;
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  if (*(_QWORD *)(a1 + v18 + 16) == 1)
    goto LABEL_4;
  v21 = *(_QWORD *)(v20 + 16);
  if (v21 == 1)
  {
    sub_1D57D9100(v19);
LABEL_4:
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
    goto LABEL_6;
  }
  *(_BYTE *)v19 = *(_BYTE *)v20;
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  *(_QWORD *)(v19 + 16) = v21;
  swift_bridgeObjectRelease();
LABEL_6:
  v22 = a3[9];
  v23 = a1 + v22;
  v24 = a2 + v22;
  if (*(_QWORD *)(a1 + v22 + 16))
  {
    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
    {
      *(_WORD *)v23 = *(_WORD *)v24;
      *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
      *(_QWORD *)(v23 + 16) = v25;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 24) = *(_QWORD *)(v24 + 24);
      *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 40) = *(_QWORD *)(v24 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 48) = *(_QWORD *)(v24 + 48);
      swift_bridgeObjectRelease();
      v26 = *(_QWORD *)(v24 + 64);
      *(_QWORD *)(v23 + 56) = *(_QWORD *)(v24 + 56);
      *(_QWORD *)(v23 + 64) = v26;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 72) = *(_QWORD *)(v24 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v23 + 80) = *(_BYTE *)(v24 + 80);
      v27 = *(_QWORD *)(v24 + 96);
      *(_QWORD *)(v23 + 88) = *(_QWORD *)(v24 + 88);
      *(_QWORD *)(v23 + 96) = v27;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 104) = *(_QWORD *)(v24 + 104);
      *(_BYTE *)(v23 + 112) = *(_BYTE *)(v24 + 112);
      *(_QWORD *)(v23 + 120) = *(_QWORD *)(v24 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 128) = *(_QWORD *)(v24 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D57E17B8(v23);
  }
  v28 = *(_OWORD *)(v24 + 112);
  *(_OWORD *)(v23 + 96) = *(_OWORD *)(v24 + 96);
  *(_OWORD *)(v23 + 112) = v28;
  *(_QWORD *)(v23 + 128) = *(_QWORD *)(v24 + 128);
  v29 = *(_OWORD *)(v24 + 48);
  *(_OWORD *)(v23 + 32) = *(_OWORD *)(v24 + 32);
  *(_OWORD *)(v23 + 48) = v29;
  v30 = *(_OWORD *)(v24 + 80);
  *(_OWORD *)(v23 + 64) = *(_OWORD *)(v24 + 64);
  *(_OWORD *)(v23 + 80) = v30;
  v31 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v31;
LABEL_11:
  v32 = a3[10];
  v33 = a1 + v32;
  v34 = a2 + v32;
  *(_BYTE *)v33 = *(_BYTE *)(a2 + v32);
  v35 = *(_QWORD *)(a2 + v32 + 16);
  *(_QWORD *)(v33 + 8) = *(_QWORD *)(a2 + v32 + 8);
  *(_QWORD *)(v33 + 16) = v35;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v33 + 24) = *(_BYTE *)(v34 + 24);
  *(_BYTE *)(v33 + 25) = *(_BYTE *)(v34 + 25);
  v36 = *(_QWORD *)(v34 + 40);
  *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
  *(_QWORD *)(v33 + 40) = v36;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v33 + 48) = *(_BYTE *)(v34 + 48);
  v37 = a3[11];
  v38 = a1 + v37;
  v39 = a2 + v37;
  if (!*(_QWORD *)(a1 + v37 + 8))
  {
LABEL_15:
    v41 = *(_OWORD *)(v39 + 16);
    *(_OWORD *)v38 = *(_OWORD *)v39;
    *(_OWORD *)(v38 + 16) = v41;
    goto LABEL_16;
  }
  v40 = *(_QWORD *)(v39 + 8);
  if (!v40)
  {
    sub_1D57EE47C(v38);
    goto LABEL_15;
  }
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *(_QWORD *)(v38 + 8) = v40;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v38 + 16) = *(_BYTE *)(v39 + 16);
  *(_BYTE *)(v38 + 17) = *(_BYTE *)(v39 + 17);
  *(_QWORD *)(v38 + 24) = *(_QWORD *)(v39 + 24);
  swift_bridgeObjectRelease();
LABEL_16:
  v42 = a3[12];
  v43 = a3[13];
  v44 = a1 + v42;
  v45 = a2 + v42;
  *(_BYTE *)v44 = *(_BYTE *)v45;
  *(_BYTE *)(v44 + 1) = *(_BYTE *)(v45 + 1);
  *(_WORD *)(v44 + 2) = *(_WORD *)(v45 + 2);
  v46 = a1 + v43;
  v47 = a2 + v43;
  v48 = *(_QWORD *)(v47 + 8);
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *(_QWORD *)(v46 + 8) = v48;
  swift_bridgeObjectRelease();
  *(_WORD *)(v46 + 16) = *(_WORD *)(v47 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleUndislikeEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5940A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleUndislikeEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5940AB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_1D5940B30()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ArticleUndislikeEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1D5940C3C + 4 * byte_1D5ACD21F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1D5940C70 + 4 * byte_1D5ACD21A[v4]))();
}

uint64_t sub_1D5940C70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5940C78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5940C80);
  return result;
}

uint64_t sub_1D5940C8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5940C94);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1D5940C98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5940CA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleUndislikeEvent.Model.CodingKeys()
{
  return &type metadata for ArticleUndislikeEvent.Model.CodingKeys;
}

unint64_t sub_1D5940CC0()
{
  unint64_t result;

  result = qword_1EFF4D6A8;
  if (!qword_1EFF4D6A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACD4E4, &type metadata for ArticleUndislikeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D6A8);
  }
  return result;
}

unint64_t sub_1D5940D08()
{
  unint64_t result;

  result = qword_1EFF4D6B0;
  if (!qword_1EFF4D6B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACD454, &type metadata for ArticleUndislikeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D6B0);
  }
  return result;
}

unint64_t sub_1D5940D50()
{
  unint64_t result;

  result = qword_1EFF4D6B8;
  if (!qword_1EFF4D6B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACD47C, &type metadata for ArticleUndislikeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D6B8);
  }
  return result;
}

uint64_t sub_1D5940D94(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61446E6F69746361 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEC9F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

void AdEngagementData.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AdEngagementData.type.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AdEngagementData.type.modify())()
{
  return nullsub_1;
}

NewsAnalytics::AdEngagementData __swiftcall AdEngagementData.init(type:)(NewsAnalytics::AdEngagementData type)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)type.type;
  return type;
}

uint64_t sub_1D5941210()
{
  sub_1D5941364();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5941238()
{
  sub_1D5941364();
  return sub_1D5AAEEE0();
}

uint64_t AdEngagementData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D5941524(0, &qword_1EFF4D6C0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5941364();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D59413A8();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5941364()
{
  unint64_t result;

  result = qword_1EFF4D6C8;
  if (!qword_1EFF4D6C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACD6E4, &type metadata for AdEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D6C8);
  }
  return result;
}

unint64_t sub_1D59413A8()
{
  unint64_t result;

  result = qword_1EFF4D6D0;
  if (!qword_1EFF4D6D0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdEngagementType, &type metadata for AdEngagementType);
    atomic_store(result, (unint64_t *)&qword_1EFF4D6D0);
  }
  return result;
}

uint64_t AdEngagementData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D5941524(0, &qword_1EFF4D6D8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5941364();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5941580();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5941524(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5941364();
    v7 = a3(a1, &type metadata for AdEngagementData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5941580()
{
  unint64_t result;

  result = qword_1EFF4D6E0;
  if (!qword_1EFF4D6E0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdEngagementType, &type metadata for AdEngagementType);
    atomic_store(result, (unint64_t *)&qword_1EFF4D6E0);
  }
  return result;
}

unint64_t sub_1D59415C8()
{
  unint64_t result;

  result = qword_1EFF4D6E8;
  if (!qword_1EFF4D6E8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdEngagementData, &type metadata for AdEngagementData);
    atomic_store(result, (unint64_t *)&qword_1EFF4D6E8);
  }
  return result;
}

unint64_t sub_1D5941610()
{
  unint64_t result;

  result = qword_1EFF4D6F0;
  if (!qword_1EFF4D6F0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdEngagementData, &type metadata for AdEngagementData);
    atomic_store(result, (unint64_t *)&qword_1EFF4D6F0);
  }
  return result;
}

uint64_t sub_1D5941654@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return AdEngagementData.init(from:)(a1, a2);
}

uint64_t sub_1D5941668(_QWORD *a1)
{
  return AdEngagementData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for AdEngagementData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D59416C8 + 4 * byte_1D5ACD565[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D59416FC + 4 * byte_1D5ACD560[v4]))();
}

uint64_t sub_1D59416FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5941704(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D594170CLL);
  return result;
}

uint64_t sub_1D5941718(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5941720);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D5941724(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D594172C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdEngagementData()
{
  return &type metadata for AdEngagementData;
}

uint64_t storeEnumTagSinglePayload for AdEngagementData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5941788 + 4 * byte_1D5ACD56A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D59417A8 + 4 * byte_1D5ACD56F[v4]))();
}

_BYTE *sub_1D5941788(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D59417A8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59417B0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59417B8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59417C0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59417C8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AdEngagementData.CodingKeys()
{
  return &type metadata for AdEngagementData.CodingKeys;
}

unint64_t sub_1D59417E8()
{
  unint64_t result;

  result = qword_1EFF4D6F8;
  if (!qword_1EFF4D6F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACD6BC, &type metadata for AdEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D6F8);
  }
  return result;
}

unint64_t sub_1D5941830()
{
  unint64_t result;

  result = qword_1EFF4D700;
  if (!qword_1EFF4D700)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACD62C, &type metadata for AdEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D700);
  }
  return result;
}

unint64_t sub_1D5941878()
{
  unint64_t result;

  result = qword_1EFF4D708;
  if (!qword_1EFF4D708)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACD654, &type metadata for AdEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D708);
  }
  return result;
}

uint64_t sub_1D59418BC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4D710, MEMORY[0x1E0CF8078]);
}

uint64_t static ConsentScreenViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47248, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4D710, a1);
}

uint64_t sub_1D59418FC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4D728, MEMORY[0x1E0CF8380]);
}

uint64_t static ConsentScreenViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47250, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4D728, a1);
}

uint64_t ConsentScreenViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t ConsentScreenViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ConsentScreenViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ConsentScreenViewEvent.consentScreenActionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ConsentScreenViewEvent(0) + 20);
  sub_1D59419EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for ConsentScreenViewEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4D7C8);
}

void sub_1D59419EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFF4D740)
  {
    sub_1D5941A50();
    sub_1D5941A94();
    v0 = sub_1D5AADB48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFF4D740);
  }
}

unint64_t sub_1D5941A50()
{
  unint64_t result;

  result = qword_1EFF4D748;
  if (!qword_1EFF4D748)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ConsentScreenActionData, &type metadata for ConsentScreenActionData);
    atomic_store(result, (unint64_t *)&qword_1EFF4D748);
  }
  return result;
}

unint64_t sub_1D5941A94()
{
  unint64_t result;

  result = qword_1EFF4D750;
  if (!qword_1EFF4D750)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ConsentScreenActionData, &type metadata for ConsentScreenActionData);
    atomic_store(result, (unint64_t *)&qword_1EFF4D750);
  }
  return result;
}

uint64_t ConsentScreenViewEvent.consentScreenActionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ConsentScreenViewEvent(0) + 20);
  sub_1D59419EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ConsentScreenViewEvent.consentScreenActionData.modify())()
{
  type metadata accessor for ConsentScreenViewEvent(0);
  return nullsub_1;
}

uint64_t ConsentScreenViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = a1 + *(int *)(type metadata accessor for ConsentScreenViewEvent(0) + 20);
  v5 = *MEMORY[0x1E0CF8120];
  sub_1D59419EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v4, v5, v6);
}

uint64_t ConsentScreenViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ConsentScreenViewEvent.Model.consentScreenActionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ConsentScreenViewEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for ConsentScreenViewEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4D858);
}

uint64_t ConsentScreenViewEvent.Model.init(eventData:consentScreenActionData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t result;

  v5 = *a2;
  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for ConsentScreenViewEvent.Model(0);
  *(_BYTE *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

uint64_t sub_1D5941C74()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000017;
  else
    return 0x746144746E657665;
}

uint64_t sub_1D5941CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5942D18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5941CDC()
{
  sub_1D5941E94();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5941D04()
{
  sub_1D5941E94();
  return sub_1D5AAEEE0();
}

uint64_t ConsentScreenViewEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];

  v3 = v1;
  sub_1D5942160(0, &qword_1EFF4D758, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5941E94();
  sub_1D5AAEEC8();
  v11[15] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v11[14] = *(_BYTE *)(v3 + *(int *)(type metadata accessor for ConsentScreenViewEvent.Model(0) + 20));
    v11[13] = 1;
    sub_1D5941A94();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5941E94()
{
  unint64_t result;

  result = qword_1EFF4D760;
  if (!qword_1EFF4D760)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACD92C, &type metadata for ConsentScreenViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D760);
  }
  return result;
}

uint64_t ConsentScreenViewEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  v21 = a2;
  v25 = sub_1D5AADF98();
  v22 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v23 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5942160(0, &qword_1EFF4D768, MEMORY[0x1E0DED048]);
  v24 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - v7;
  v9 = type metadata accessor for ConsentScreenViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5941E94();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v19 = a1;
  v20 = v6;
  v12 = (uint64_t)v11;
  v13 = v22;
  v28 = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v15 = v23;
  v14 = v24;
  v16 = v25;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v15, v16);
  v26 = 1;
  sub_1D5941A50();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v14);
  *(_BYTE *)(v12 + *(int *)(v9 + 20)) = v27;
  sub_1D59421BC(v12, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  return sub_1D5942200(v12);
}

void sub_1D5942160(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5941E94();
    v7 = a3(a1, &type metadata for ConsentScreenViewEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59421BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConsentScreenViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5942200(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ConsentScreenViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D594223C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ConsentScreenViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5942250(_QWORD *a1)
{
  return ConsentScreenViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5942264@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47248, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4D710, a1);
}

uint64_t sub_1D5942288@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47250, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4D728, a1);
}

uint64_t sub_1D59422AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  v7 = *MEMORY[0x1E0CF8120];
  sub_1D59419EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
}

uint64_t *initializeBufferWithCopyOfBuffer for ConsentScreenViewEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D59419EC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for ConsentScreenViewEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1D59419EC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for ConsentScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D59419EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for ConsentScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D59419EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for ConsentScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D59419EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for ConsentScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D59419EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConsentScreenViewEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5942630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D59419EC();
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ConsentScreenViewEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59426B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D59419EC();
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D594272C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D59419EC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ConsentScreenViewEvent.Model(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for ConsentScreenViewEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for ConsentScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for ConsentScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for ConsentScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ConsentScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for ConsentScreenViewEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59429E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  int v10;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    v10 = ((v9 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v10 = -2;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for ConsentScreenViewEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5942A8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
  return result;
}

uint64_t sub_1D5942B04()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ConsentScreenViewEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5942BC0 + 4 * byte_1D5ACD775[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D5942BF4 + 4 * asc_1D5ACD770[v4]))();
}

uint64_t sub_1D5942BF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5942BFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5942C04);
  return result;
}

uint64_t sub_1D5942C10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5942C18);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5942C1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5942C24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConsentScreenViewEvent.Model.CodingKeys()
{
  return &type metadata for ConsentScreenViewEvent.Model.CodingKeys;
}

unint64_t sub_1D5942C44()
{
  unint64_t result;

  result = qword_1EFF4D890;
  if (!qword_1EFF4D890)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACD904, &type metadata for ConsentScreenViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D890);
  }
  return result;
}

unint64_t sub_1D5942C8C()
{
  unint64_t result;

  result = qword_1EFF4D898;
  if (!qword_1EFF4D898)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACD874, &type metadata for ConsentScreenViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D898);
  }
  return result;
}

unint64_t sub_1D5942CD4()
{
  unint64_t result;

  result = qword_1EFF4D8A0;
  if (!qword_1EFF4D8A0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACD89C, &type metadata for ConsentScreenViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D8A0);
  }
  return result;
}

uint64_t sub_1D5942D18(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D5AF03F0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t dispatch thunk of ExternalAnalyticsFeatureAvailabilityType.allowSubmission.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

NewsAnalytics::SportScoreConcernContentType_optional __swiftcall SportScoreConcernContentType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::SportScoreConcernContentType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SportScoreConcernContentType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5942EAC + 4 * byte_1D5ACD9B0[*v0]))(0x6172756363616E69, 0xEF65726F63536574);
}

uint64_t sub_1D5942EAC()
{
  return 0x53646579616C6564;
}

uint64_t sub_1D5942ECC()
{
  return 0x6F666E496D616574;
}

uint64_t sub_1D5942EE4()
{
  return 0x656D6954656D6167;
}

unint64_t sub_1D5942EFC()
{
  return 0xD000000000000011;
}

uint64_t sub_1D5942F18()
{
  return 0x6E696874656D6F73;
}

void sub_1D5942F3C(char *a1)
{
  sub_1D5A3675C(*a1);
}

unint64_t sub_1D5942F4C()
{
  unint64_t result;

  result = qword_1EFF4D8A8;
  if (!qword_1EFF4D8A8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SportScoreConcernContentType, &type metadata for SportScoreConcernContentType);
    atomic_store(result, (unint64_t *)&qword_1EFF4D8A8);
  }
  return result;
}

void sub_1D5942F90()
{
  char *v0;

  sub_1D5A80D90(*v0);
}

void sub_1D5942F98(uint64_t a1)
{
  char *v1;

  sub_1D5AA8044(a1, *v1);
}

void sub_1D5942FA0(uint64_t a1)
{
  char *v1;

  sub_1D5AAA04C(a1, *v1);
}

NewsAnalytics::SportScoreConcernContentType_optional sub_1D5942FA8(Swift::String *a1)
{
  return SportScoreConcernContentType.init(rawValue:)(*a1);
}

uint64_t sub_1D5942FB4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D5942FF0 + 4 * byte_1D5ACD9B6[*v0]))();
}

void sub_1D5942FF0(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "delayedScore");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1D5943014(_QWORD *a1@<X8>)
{
  *a1 = 0x6F666E496D616574;
  a1[1] = 0xE800000000000000;
}

void sub_1D5943030(_QWORD *a1@<X8>)
{
  *a1 = 0x656D6954656D6167;
  a1[1] = 0xE800000000000000;
}

void sub_1D594304C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000001D5AEB490;
}

void sub_1D594306C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "somethingElse");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_1D5943094()
{
  sub_1D5943208();
  return sub_1D5AAE928();
}

uint64_t sub_1D59430F0()
{
  sub_1D5943208();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for SportScoreConcernContentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D5943188 + 4 * byte_1D5ACD9C1[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D59431BC + 4 * byte_1D5ACD9BC[v4]))();
}

uint64_t sub_1D59431BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59431C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59431CCLL);
  return result;
}

uint64_t sub_1D59431D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59431E0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D59431E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59431EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportScoreConcernContentType()
{
  return &type metadata for SportScoreConcernContentType;
}

unint64_t sub_1D5943208()
{
  unint64_t result;

  result = qword_1EFF4D8B0;
  if (!qword_1EFF4D8B0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SportScoreConcernContentType, &type metadata for SportScoreConcernContentType);
    atomic_store(result, (unint64_t *)&qword_1EFF4D8B0);
  }
  return result;
}

uint64_t UserEmbeddingData.embeddingCoefficients.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UserEmbeddingData.embeddingCoefficients.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*UserEmbeddingData.embeddingCoefficients.modify())()
{
  return nullsub_1;
}

NewsAnalytics::UserEmbeddingData __swiftcall UserEmbeddingData.init(embeddingCoefficients:)(NewsAnalytics::UserEmbeddingData embeddingCoefficients)
{
  NewsAnalytics::UserEmbeddingData *v1;

  v1->embeddingCoefficients._rawValue = embeddingCoefficients.embeddingCoefficients._rawValue;
  return embeddingCoefficients;
}

unint64_t sub_1D5943294()
{
  return 0xD000000000000015;
}

uint64_t sub_1D59432B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59438A8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D59432D8()
{
  sub_1D594344C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5943300()
{
  sub_1D594344C();
  return sub_1D5AAEEE0();
}

uint64_t UserEmbeddingData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1D594363C(0, &qword_1ED9D17A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D594344C();
  sub_1D5AAEEC8();
  v10[1] = v8;
  sub_1D5943490();
  sub_1D5943698(&qword_1ED9D1790, MEMORY[0x1E0DEB198], MEMORY[0x1E0DEAF10]);
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D594344C()
{
  unint64_t result;

  result = qword_1ED9D16E8;
  if (!qword_1ED9D16E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACDC78, &type metadata for UserEmbeddingData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D16E8);
  }
  return result;
}

void sub_1D5943490()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9D1788)
  {
    v0 = sub_1D5AAE97C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9D1788);
  }
}

uint64_t UserEmbeddingData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1D594363C(0, &qword_1ED9D17A0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D594344C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5943490();
    sub_1D5943698(&qword_1ED9D1798, MEMORY[0x1E0DEB1C0], MEMORY[0x1E0DEAF40]);
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D594363C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D594344C();
    v7 = a3(a1, &type metadata for UserEmbeddingData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5943698(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1D5943490();
    v8 = a2;
    result = MEMORY[0x1D8279680](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D59436FC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return UserEmbeddingData.init(from:)(a1, a2);
}

uint64_t sub_1D5943710(_QWORD *a1)
{
  return UserEmbeddingData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for UserEmbeddingData()
{
  return &type metadata for UserEmbeddingData;
}

uint64_t storeEnumTagSinglePayload for UserEmbeddingData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5943774 + 4 * byte_1D5ACDB00[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5943794 + 4 * byte_1D5ACDB05[v4]))();
}

_BYTE *sub_1D5943774(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5943794(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D594379C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59437A4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59437AC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59437B4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for UserEmbeddingData.CodingKeys()
{
  return &type metadata for UserEmbeddingData.CodingKeys;
}

unint64_t sub_1D59437D4()
{
  unint64_t result;

  result = qword_1EFF4D8B8;
  if (!qword_1EFF4D8B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACDC50, &type metadata for UserEmbeddingData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D8B8);
  }
  return result;
}

unint64_t sub_1D594381C()
{
  unint64_t result;

  result = qword_1ED9D16F8;
  if (!qword_1ED9D16F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACDBC0, &type metadata for UserEmbeddingData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D16F8);
  }
  return result;
}

unint64_t sub_1D5943864()
{
  unint64_t result;

  result = qword_1ED9D16F0;
  if (!qword_1ED9D16F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACDBE8, &type metadata for UserEmbeddingData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D16F0);
  }
  return result;
}

uint64_t sub_1D59438A8(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AF0410)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1D594392C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;

  sub_1D57B9B68();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v6 = objc_msgSend(v5, sel_preferredContentSizeCategory);

  v7 = v6;
  sub_1D57B94F0(v7, &v14);
  sub_1D57B9B24();
  sub_1D5AADA40();
  sub_1D57BD7B0();
  v8 = sub_1D5AADB54();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1D5AB0170;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v9 + 104))(v11 + v10, *MEMORY[0x1E0CF8168], v8);
  sub_1D5AADBB4();

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1D5943BC4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1D5943BE8()
{
  return sub_1D594392C();
}

void Error.errorData()(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[16];
  uint64_t *v21;
  id v22;
  uint64_t v23;

  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = MEMORY[0x1E0DEE9D8];
  v21 = &v23;
  sub_1D5943F38((void (*)(void *))sub_1D5943F30, (uint64_t)v20, a1);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
  v8 = sub_1D5AAEDC0();
  if (v8)
  {
    v9 = (void *)v8;
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, a1);
  }
  else
  {
    v9 = (void *)swift_allocError();
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v5 + 32))(v10, v7, a1);
  }
  v11 = (void *)sub_1D5AAD5FC();

  v12 = objc_msgSend(v11, sel_domain);
  v13 = sub_1D5AAE820();
  v15 = v14;

  v22 = objc_msgSend(v11, sel_code);
  v16 = sub_1D5AAEDA8();
  v18 = v17;

  v19 = v23;
  *a2 = v13;
  a2[1] = v15;
  a2[2] = v16;
  a2[3] = v18;
  a2[4] = v19;
}

uint64_t sub_1D5943D80(void *a1, uint64_t *a2)
{
  id v4;
  uint64_t v5;
  void *v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;

  sub_1D594412C();
  sub_1D5944168();
  v4 = a1;
  v5 = sub_1D5AAEDC0();
  if (v5)
  {
    v6 = (void *)v5;

  }
  else
  {
    v6 = (void *)swift_allocError();
    *v7 = a1;
  }
  v8 = (void *)sub_1D5AAD5FC();

  v9 = objc_msgSend(v8, sel_domain);
  v10 = sub_1D5AAE820();
  v12 = v11;

  v13 = objc_msgSend(v8, sel_code);
  v14 = objc_msgSend(v8, sel_localizedDescription);
  v15 = sub_1D5AAE820();
  v17 = v16;

  v18 = *a2;
  result = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v18;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1D5873634(0, *(_QWORD *)(v18 + 16) + 1, 1, (char *)v18);
    v18 = result;
    *a2 = result;
  }
  v21 = *(_QWORD *)(v18 + 16);
  v20 = *(_QWORD *)(v18 + 24);
  if (v21 >= v20 >> 1)
  {
    result = (uint64_t)sub_1D5873634((char *)(v20 > 1), v21 + 1, 1, (char *)v18);
    v18 = result;
    *a2 = result;
  }
  *(_QWORD *)(v18 + 16) = v21 + 1;
  v22 = (_QWORD *)(v18 + 40 * v21);
  v22[4] = v10;
  v22[5] = v12;
  v22[6] = v13;
  v22[7] = v15;
  v22[8] = v17;
  return result;
}

uint64_t sub_1D5943F30(void *a1)
{
  uint64_t v1;

  return sub_1D5943D80(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_1D5943F38(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  _QWORD v23[3];

  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v6 + 16))(v8, v9);
  v10 = sub_1D5AAEDC0();
  if (v10)
  {
    v11 = (void *)v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a3);
  }
  else
  {
    v11 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v12, v8, a3);
  }
  v13 = (void *)sub_1D5AAD5FC();

  a1(v13);
  v14 = objc_msgSend(v13, sel_underlyingErrors);
  sub_1D59440D8();
  v15 = sub_1D5AAE94C();

  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v17 = (void **)(v15 + 32);
    do
    {
      v18 = *v17++;
      swift_getErrorValue();
      v19 = v23[1];
      v20 = v23[2];
      v21 = v18;
      sub_1D5943F38(a1, a2, v19, v20);

      --v16;
    }
    while (v16);
  }

  return swift_bridgeObjectRelease();
}

unint64_t sub_1D59440D8()
{
  unint64_t result;

  result = qword_1ED9CD090;
  if (!qword_1ED9CD090)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9CD090);
  }
  return result;
}

unint64_t sub_1D594412C()
{
  unint64_t result;

  result = qword_1EFF4D8C0;
  if (!qword_1EFF4D8C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFF4D8C0);
  }
  return result;
}

unint64_t sub_1D5944168()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1EFF4D8C8;
  if (!qword_1EFF4D8C8)
  {
    v1 = sub_1D594412C();
    result = MEMORY[0x1D8279680](MEMORY[0x1E0CB2080], v1);
    atomic_store(result, (unint64_t *)&qword_1EFF4D8C8);
  }
  return result;
}

uint64_t sub_1D59441B0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4D8D0, MEMORY[0x1E0CF8078]);
}

uint64_t static OfflineModeEndEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47258, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4D8D0, a1);
}

uint64_t sub_1D59441F0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4D8E8, MEMORY[0x1E0CF8380]);
}

uint64_t static OfflineModeEndEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47260, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4D8E8, a1);
}

uint64_t OfflineModeEndEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t OfflineModeEndEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*OfflineModeEndEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t OfflineModeEndEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for OfflineModeEndEvent(0) + 20);
  sub_1D589A36C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for OfflineModeEndEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4D970);
}

uint64_t OfflineModeEndEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for OfflineModeEndEvent(0) + 20);
  sub_1D589A36C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*OfflineModeEndEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for OfflineModeEndEvent(0);
  return nullsub_1;
}

uint64_t OfflineModeEndEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5824B58(type metadata accessor for OfflineModeEndEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t OfflineModeEndEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for OfflineModeEndEvent(0) + 24);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*OfflineModeEndEvent.timedData.modify())()
{
  type metadata accessor for OfflineModeEndEvent(0);
  return nullsub_1;
}

uint64_t OfflineModeEndEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = type metadata accessor for OfflineModeEndEvent(0);
  v5 = a1 + *(int *)(v4 + 20);
  sub_1D589A36C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + *(int *)(v4 + 24);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
}

uint64_t OfflineModeEndEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t OfflineModeEndEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for OfflineModeEndEvent.Model(0) + 20));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for OfflineModeEndEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4DA08);
}

uint64_t OfflineModeEndEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5824B58(type metadata accessor for OfflineModeEndEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t OfflineModeEndEvent.Model.init(eventData:userBundleSubscriptionContextData:timedData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *a2;
  v7 = *((_QWORD *)a2 + 1);
  v8 = *((_QWORD *)a2 + 2);
  v9 = a2[24];
  v10 = a2[25];
  v11 = *((_QWORD *)a2 + 4);
  v12 = *((_QWORD *)a2 + 5);
  v13 = a2[48];
  v14 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a4, a1, v14);
  v15 = type metadata accessor for OfflineModeEndEvent.Model(0);
  v16 = a4 + *(int *)(v15 + 20);
  *(_BYTE *)v16 = v6;
  *(_QWORD *)(v16 + 8) = v7;
  *(_QWORD *)(v16 + 16) = v8;
  *(_BYTE *)(v16 + 24) = v9;
  *(_BYTE *)(v16 + 25) = v10;
  *(_QWORD *)(v16 + 32) = v11;
  *(_QWORD *)(v16 + 40) = v12;
  *(_BYTE *)(v16 + 48) = v13;
  v17 = a4 + *(int *)(v15 + 24);
  v18 = sub_1D5AADFB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a3, v18);
}

uint64_t sub_1D59445E4()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000021;
  if (*v0 != 1)
    v1 = 0x74614464656D6974;
  if (*v0)
    return v1;
  else
    return 0x746144746E657665;
}

uint64_t sub_1D5944644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5945CE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5944668()
{
  sub_1D59448B8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5944690()
{
  sub_1D59448B8();
  return sub_1D5AAEEE0();
}

uint64_t OfflineModeEndEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  _BYTE v15[8];
  char v16;
  __int128 v17;
  char v18;
  char v19;
  __int128 v20;
  char v21;

  v3 = v1;
  sub_1D5944C98(0, &qword_1EFF4D900, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v15[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59448B8();
  sub_1D5AAEEC8();
  v16 = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = v3 + *(int *)(type metadata accessor for OfflineModeEndEvent.Model(0) + 20);
    v11 = *(_BYTE *)(v10 + 24);
    v12 = *(_BYTE *)(v10 + 25);
    v13 = *(_BYTE *)(v10 + 48);
    v16 = *(_BYTE *)v10;
    v17 = *(_OWORD *)(v10 + 8);
    v18 = v11;
    v19 = v12;
    v20 = *(_OWORD *)(v10 + 32);
    v21 = v13;
    v15[7] = 1;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v16 = 2;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D59448B8()
{
  unint64_t result;

  result = qword_1EFF4D908;
  if (!qword_1EFF4D908)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACDE9C, &type metadata for OfflineModeEndEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4D908);
  }
  return result;
}

uint64_t OfflineModeEndEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  char v35;
  char v36;
  __int128 v37;
  char v38;
  char v39;

  v25 = a2;
  v26 = sub_1D5AADFB0();
  v24 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v27 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1D5AADF98();
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v29 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5944C98(0, &qword_1EFF4D910, MEMORY[0x1E0DED048]);
  v30 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - v8;
  v10 = type metadata accessor for OfflineModeEndEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59448B8();
  v31 = v9;
  v13 = v32;
  sub_1D5AAEEB0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v33 = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v14 = v28;
  sub_1D5AAECD0();
  v32 = v4;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v12, v29, v14);
  v39 = 1;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v15 = v35;
  v16 = v36;
  v17 = v38;
  v18 = v10;
  v19 = &v12[*(int *)(v10 + 20)];
  *v19 = v33;
  *(_OWORD *)(v19 + 8) = v34;
  v19[24] = v15;
  v19[25] = v16;
  *((_OWORD *)v19 + 2) = v37;
  v19[48] = v17;
  v33 = 2;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v29 = v12;
  v21 = v26;
  v20 = v27;
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v30);
  v22 = (uint64_t)v29;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v29[*(int *)(v18 + 24)], v20, v21);
  sub_1D5944CF4(v22, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1D5944D38(v22);
}

void sub_1D5944C98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59448B8();
    v7 = a3(a1, &type metadata for OfflineModeEndEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5944CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OfflineModeEndEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5944D38(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for OfflineModeEndEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5944D74@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return OfflineModeEndEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5944D88(_QWORD *a1)
{
  return OfflineModeEndEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5944D9C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47258, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4D8D0, a1);
}

uint64_t sub_1D5944DC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47260, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4D8E8, a1);
}

uint64_t sub_1D5944DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1D589A36C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + *(int *)(a1 + 24);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for OfflineModeEndEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D589A36C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for OfflineModeEndEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1D589A36C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for OfflineModeEndEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D589A36C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for OfflineModeEndEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D589A36C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for OfflineModeEndEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D589A36C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for OfflineModeEndEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D589A36C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for OfflineModeEndEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59452B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D589A36C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1D57A8C9C();
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for OfflineModeEndEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5945358(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D589A36C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1D57A8C9C();
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D59453F8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D589A36C();
    if (v1 <= 0x3F)
    {
      sub_1D57A8C9C();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for OfflineModeEndEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    *((_WORD *)v10 + 12) = *((_WORD *)v11 + 12);
    v13 = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
    *((_QWORD *)v10 + 5) = v13;
    v10[48] = v11[48];
    v14 = (char *)a1 + v9;
    v15 = (char *)a2 + v9;
    v16 = sub_1D5AADFB0();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17(v14, v15, v16);
  }
  return a1;
}

uint64_t destroy for OfflineModeEndEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_1D5AADFB0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for OfflineModeEndEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  *(_WORD *)(v9 + 24) = *(_WORD *)(v10 + 24);
  v12 = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v9 + 40) = v12;
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  v13 = a1 + v8;
  v14 = a2 + v8;
  v15 = sub_1D5AADFB0();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  return a1;
}

uint64_t assignWithCopy for OfflineModeEndEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for OfflineModeEndEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for OfflineModeEndEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  v11 = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for OfflineModeEndEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5945948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 16);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_1D5AADFB0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for OfflineModeEndEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5945A0C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 16) = a2;
      return result;
    }
    v10 = sub_1D5AADFB0();
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1D5945AB4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for OfflineModeEndEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5945B8C + 4 * byte_1D5ACDCD5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5945BC0 + 4 * byte_1D5ACDCD0[v4]))();
}

uint64_t sub_1D5945BC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5945BC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5945BD0);
  return result;
}

uint64_t sub_1D5945BDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5945BE4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5945BE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5945BF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OfflineModeEndEvent.Model.CodingKeys()
{
  return &type metadata for OfflineModeEndEvent.Model.CodingKeys;
}

unint64_t sub_1D5945C10()
{
  unint64_t result;

  result = qword_1EFF4DA48;
  if (!qword_1EFF4DA48)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACDE74, &type metadata for OfflineModeEndEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4DA48);
  }
  return result;
}

unint64_t sub_1D5945C58()
{
  unint64_t result;

  result = qword_1EFF4DA50;
  if (!qword_1EFF4DA50)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACDDE4, &type metadata for OfflineModeEndEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4DA50);
  }
  return result;
}

unint64_t sub_1D5945CA0()
{
  unint64_t result;

  result = qword_1EFF4DA58;
  if (!qword_1EFF4DA58)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACDE0C, &type metadata for OfflineModeEndEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4DA58);
  }
  return result;
}

uint64_t sub_1D5945CE4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t SessionObserver.__allocating_init(sessionManager:aggregateStateModeProvider:cloudContext:client:kind:fsidProvider:appExtensionCommunicator:userInfo:tabiDataProvider:liveActivityCountDataProvider:userEmbeddingDataProvider:offlineProvider:)(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_1D57AE094(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, (uint64_t (*)(uint64_t, uint64_t, void *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D59498B8);
}

NewsAnalytics::SessionObserverKind_optional __swiftcall SessionObserverKind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::SessionObserverKind_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SessionObserverKind.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6F69647561;
  if (*v0 != 1)
    v1 = 0x7274656D656C6574;
  if (*v0)
    return v1;
  else
    return 7368801;
}

uint64_t sub_1D5945F2C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A398F4(*a1, *a2);
}

uint64_t sub_1D5945F38()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5945FD0()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5946044()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::SessionObserverKind_optional sub_1D59460D8(Swift::String *a1)
{
  return SessionObserverKind.init(rawValue:)(*a1);
}

void sub_1D59460E4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE300000000000000;
  v4 = 0xE500000000000000;
  v5 = 0x6F69647561;
  if (v2 != 1)
  {
    v5 = 0x7274656D656C6574;
    v4 = 0xE900000000000079;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 7368801;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t SessionObserver.sessionManager.getter()
{
  return swift_retain();
}

id SessionObserver.__deallocating_deinit()
{
  char *v0;
  objc_class *ObjectType;
  id v2;
  char *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  objc_msgSend(v2, sel_endGeneratingDeviceOrientationNotifications);

  v3 = &v0[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_window];
  swift_beginAccess();
  v4 = MEMORY[0x1D8279758](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = (void *)sub_1D5AAE7FC();
    objc_msgSend(v5, sel_removeObserver_forKeyPath_context_, v0, v6, 0);

  }
  v8.receiver = v0;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_dealloc);
}

uint64_t SessionObserver.window.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_window;
  swift_beginAccess();
  return MEMORY[0x1D8279758](v1);
}

void sub_1D594639C(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = swift_unknownObjectWeakAssign();
  v5 = MEMORY[0x1D8279758](v4);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = v2;
    sub_1D57B80E4(v6);
    v8 = (void *)sub_1D5AAE7FC();
    objc_msgSend(v6, sel_addObserver_forKeyPath_options_context_, v3, v8, 1, 0);

    sub_1D57BBBE8();
  }
}

void (*SessionObserver.window.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_window;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x1D8279758](v5);
  return sub_1D59464CC;
}

void sub_1D59464CC(uint64_t *a1, char a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;

  v3 = *a1;
  v4 = *(void **)(*a1 + 24);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    v5 = *(_QWORD *)(v3 + 32) + *(_QWORD *)(v3 + 40);
    swift_endAccess();

    v6 = (void *)MEMORY[0x1D8279758](v5);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)(v3 + 32);
      sub_1D57B80E4(v6);
      v9 = (void *)sub_1D5AAE7FC();
      objc_msgSend(v7, sel_addObserver_forKeyPath_options_context_, v8, v9, 1, 0);

      sub_1D57BBBE8();
    }
  }
  free((void *)v3);
}

Swift::Void __swiftcall SessionObserver.set(sessionStartSource:)(NewsAnalytics::SessionStartSource sessionStartSource)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_sessionStartSource) = *(_BYTE *)sessionStartSource;
}

uint64_t SessionObserver.sceneSessionIdentifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_sceneSessionIdentifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t (*SessionObserver.sceneSessionIdentifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id SessionObserver.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SessionObserver.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1D5946738()
{
  swift_getObjectType();
  return sub_1D5AAD7F4();
}

uint64_t sub_1D594677C()
{
  swift_getObjectType();
  return sub_1D5AAD800();
}

uint64_t sub_1D59467D8()
{
  swift_getObjectType();
  return sub_1D5AAD7DC();
}

unint64_t sub_1D5946844(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1D5949F0C();
  v2 = sub_1D5AAEC28();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D5949F90(v6, (uint64_t)&v13);
    v7 = v13;
    result = sub_1D5A9E300(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1D5845180(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

Swift::Void __swiftcall SessionObserver.sessionWillEnd(withEndReason:)(NSNumber withEndReason)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD v12[88];

  v2 = v1;
  v4 = sub_1D5AAD710();
  v12[40] = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v12[39] = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = -[objc_class integerValue](withEndReason.super.super.isa, sel_integerValue);
  if ((unint64_t)v6 >= 5)
    v7 = 0;
  else
    v7 = 0x504020300uLL >> (8 * v6);
  sub_1D57B663C(0, (unint64_t *)&qword_1ED9CC7B0);
  sub_1D5AAEAC0();
  sub_1D57C02F0(0, (unint64_t *)&qword_1ED9CCA30, (unint64_t *)&qword_1ED9CCA40, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_allocObject();
  v9 = v8;
  *(_OWORD *)(v8 + 16) = xmmword_1D5ABF230;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_kind))
  {
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_kind) == 1)
    {
      v10 = 0xE500000000000000;
      v11 = 0x6F69647561;
    }
    else
    {
      v10 = 0xE900000000000079;
      v11 = 0x7274656D656C6574;
    }
  }
  else
  {
    v10 = 0xE300000000000000;
    v11 = 7368801;
  }
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 64) = sub_1D57B356C();
  *(_QWORD *)(v9 + 32) = v11;
  *(_QWORD *)(v9 + 40) = v10;
  __asm { BR              X11 }
}

uint64_t sub_1D5946B0C(uint64_t a1)
{
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  id v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *i;
  id v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  double v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  void *v71;
  id v72;
  id v73;
  unint64_t v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;

  *(_QWORD *)(v3 + 96) = v5;
  *(_QWORD *)(v3 + 104) = a1;
  strcpy((char *)(v3 + 72), "appBackground");
  *(_WORD *)(v3 + 86) = -4864;
  sub_1D5AAEA24();
  sub_1D5AAE328();

  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v7 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_sessionManager);
  sub_1D5AADBF0();
  *((_BYTE *)v1 + 352) = v4;
  sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9CC9F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = v11;
  v13 = sub_1D5AADB54();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v1[37] = v12;
  v1[34] = v16 | 7;
  v1[35] = v17 + v15;
  v18 = swift_allocObject();
  *((_OWORD *)v1 + 15) = xmmword_1D5AB0170;
  *(_OWORD *)(v18 + 16) = xmmword_1D5AB0170;
  v1[36] = v17;
  v19 = *(void (**)(uint64_t))(v14 + 104);
  *((_DWORD *)v1 + 67) = *MEMORY[0x1E0CF8168];
  v1[38] = v13;
  v19(v18 + v17);
  sub_1D58F6010();
  v1[43] = (uint64_t)"ics session start";
  sub_1D5AADF2C();
  swift_bridgeObjectRelease();
  swift_release();
  v20 = OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_cloudContext;
  v1[42] = v7;
  v21 = objc_msgSend(*(id *)(v7 + v20), sel_userEventHistory);
  v22 = objc_msgSend(v21, sel_storage);

  v23 = objc_msgSend(v22, sel_sessions);
  if (v23)
  {
    v24 = v23;
    sub_1D57B663C(0, &qword_1ED9CE738);
    v25 = sub_1D5AAE94C();

  }
  else
  {
    v25 = 0;
  }
  v26 = objc_msgSend(v22, sel_metadata);
  v27 = sub_1D5AADBF0();
  v28 = (unint64_t)objc_msgSend(v26, sel_sessionsOnDiskSize);
  v29 = (uint64_t)v28 % 1000;
  v1[29] = v27;
  if ((uint64_t)v28 % 1000 <= 499)
  {
    v30 = __OFSUB__(v28, v29);
    v29 = v28 - v29;
    if (!v30)
      goto LABEL_9;
    __break(1u);
  }
  v31 = 1000 - v29;
  v30 = __OFADD__(v28, v31);
  v29 = v28 + v31;
  if (v30)
    goto LABEL_74;
LABEL_9:
  v1[28] = v29;
  v32 = objc_msgSend(v22, sel_prunedSessionIDs);
  v33 = (_QWORD *)sub_1D5AAE94C();

  v34 = v33[2];
  v28 = swift_bridgeObjectRelease();
  v35 = v34 % 0x3E8;
  if (v34 % 0x3E8 > 0x1F3)
  {
    v37 = 1000 - v35;
    v30 = __OFADD__(v34, v37);
    v36 = v34 + v37;
    if (v30)
      goto LABEL_75;
  }
  else
  {
    v36 = v34 - v35;
  }
  v1[27] = v36;
  v28 = (unint64_t)objc_msgSend(v22, sel_prunedSessionSize);
  if ((v28 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v38 = v28 % 0x3E8;
    v1[26] = (uint64_t)v19;
    if (v28 % 0x3E8 > 0x1F3)
    {
      v40 = 1000 - v38;
      v30 = __OFADD__(v28, v40);
      v39 = v28 + v40;
      if (v30)
        goto LABEL_76;
    }
    else
    {
      v39 = v28 - v38;
    }
    v9 = -1.0;
    v19 = (void (*)(uint64_t))(v25 >> 62);
    v1[25] = v39;
    if (!v25)
    {
      v1[24] = -1;
      goto LABEL_29;
    }
    v33 = (_QWORD *)(v25 & 0xFFFFFFFFFFFFFF8);
    if (!v19)
    {
      v41 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v1[24] = v41;
      v42 = v41;
      if (v41)
        goto LABEL_19;
LABEL_28:
      v28 = swift_bridgeObjectRelease();
      goto LABEL_29;
    }
  }
  swift_bridgeObjectRetain();
  v1[24] = sub_1D5AAEC04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v42 = sub_1D5AAEC04();
  if (!v42)
    goto LABEL_28;
LABEL_19:
  v30 = __OFSUB__(v42, 1);
  v28 = v42 - 1;
  if (v30)
    goto LABEL_79;
  if ((v25 & 0xC000000000000001) != 0)
    goto LABEL_80;
  if ((v28 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_82;
  }
  if (v28 >= v33[2])
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  for (i = *(id *)(v25 + 8 * v28 + 32); ; i = (_QWORD *)MEMORY[0x1D8278F6C](v28, v25))
  {
    v33 = i;
    swift_bridgeObjectRelease();
    v44 = objc_msgSend(v33, sel_date);
    v13 = v1[39];
    sub_1D5AAD6F8();

    sub_1D5AAD6D4();
    v46 = v45;
    (*(void (**)(uint64_t, uint64_t))(v1[40] + 8))(v13, v6);

    v9 = -v46;
LABEL_29:
    if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
    {
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    if (v9 <= -9.22337204e18)
      goto LABEL_45;
    if (v9 >= 9.22337204e18)
      goto LABEL_46;
    v47 = (uint64_t)v9;
    v48 = (uint64_t)v9 % 1000;
    if (v48 <= 499)
    {
      v13 = v47 - v48;
      if (!__OFSUB__(v47, v48))
        goto LABEL_37;
      __break(1u);
    }
    v49 = 1000 - v48;
    v13 = v47 + v49;
    if (__OFADD__(v47, v49))
      goto LABEL_77;
LABEL_37:
    v9 = -1.0;
    if (!v25)
      goto LABEL_49;
    v33 = (_QWORD *)(v25 & 0xFFFFFFFFFFFFFF8);
    if (!v19)
    {
      if (!*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_48;
      goto LABEL_40;
    }
LABEL_47:
    swift_bridgeObjectRetain();
    v55 = sub_1D5AAEC04();
    swift_bridgeObjectRelease();
    if (!v55)
    {
LABEL_48:
      v28 = swift_bridgeObjectRelease();
      goto LABEL_49;
    }
LABEL_40:
    if ((v25 & 0xC000000000000001) != 0)
    {
LABEL_83:
      v50 = (id)MEMORY[0x1D8278F6C](0, v25);
    }
    else
    {
      if (!v33[2])
      {
        __break(1u);
        JUMPOUT(0x1D59478E8);
      }
      v50 = *(id *)(v25 + 32);
    }
    v51 = v50;
    swift_bridgeObjectRelease();
    v52 = objc_msgSend(v51, sel_date);
    v19 = (void (*)(uint64_t))v1[39];
    sub_1D5AAD6F8();

    sub_1D5AAD6D4();
    v54 = v53;
    (*(void (**)(void (*)(uint64_t), uint64_t))(v1[40] + 8))(v19, v6);

    v9 = -v54;
LABEL_49:
    if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
    {
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
    if (v9 <= -9.22337204e18)
      goto LABEL_72;
    if (v9 >= 9.22337204e18)
      goto LABEL_73;
    v56 = (uint64_t)v9;
    v57 = (uint64_t)v9 % 1000;
    if (v57 <= 499)
    {
      v25 = v56 - v57;
      if (!__OFSUB__(v56, v57))
        break;
      __break(1u);
    }
    v58 = 1000 - v57;
    v25 = v56 + v58;
    if (!__OFADD__(v56, v58))
      break;
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    ;
  }
  v59 = objc_msgSend(v26, sel_aggregateStoreGenerationTime);
  v1[21] = (uint64_t)objc_msgSend(v26, sel_aggregateTotalCount);
  objc_msgSend(v26, sel_meanCountOfEvents);
  v61 = v60;
  objc_msgSend(v26, sel_standardDeviationOfEvents);
  v63 = v62;
  v1[20] = (uint64_t)objc_msgSend(v26, sel_totalEventsCount);
  v1[19] = (uint64_t)objc_msgSend(v26, sel_headlineEventCount);
  v1[18] = (uint64_t)objc_msgSend(v26, sel_headlinesWithValidTitleEmbeddingsEventCount);
  v1[17] = (uint64_t)objc_msgSend(v26, sel_headlinesWithInvalidTitleEmbeddingsEventCount);
  v1[16] = (uint64_t)objc_msgSend(v26, sel_headlinesWithValidBodyEmbeddingsEventCount);
  v1[15] = (uint64_t)objc_msgSend(v26, sel_headlinesWithInvalidBodyEmbeddingsEventCount);
  v64 = objc_msgSend(v26, sel_eventCounts);
  if (v64)
  {
    sub_1D5947960(v1 + 44);

    v65 = v1[44];
    v1[13] = v1[45];
    v1[14] = v65;
    v66 = v1[46];
    v1[11] = v1[47];
    v1[12] = v66;
    v67 = v1[48];
    v1[9] = v1[49];
    v1[10] = v67;
    v68 = v1[50];
    v1[7] = v1[51];
    v1[8] = v68;
    v69 = v1[52];
    v1[5] = v1[53];
    v1[6] = v69;
    v1[4] = v1[54];
  }
  else
  {
    v1[13] = 0;
    v1[14] = 0;
    v1[11] = 0;
    v1[12] = 0;
    v1[9] = 0;
    v1[10] = 0;
    v1[7] = 0;
    v1[8] = 0;
    v1[5] = 0;
    v1[6] = 0;
    v1[4] = 0;
  }
  v1[22] = v13;
  v1[23] = (uint64_t)v26;
  v1[2] = (uint64_t)v22;
  v1[3] = v6;
  v1[41] = v10;
  v70 = objc_msgSend(v26, sel_aggregateStoreData);
  v71 = v70;
  if (v70)
  {
    v1[1] = (uint64_t)objc_msgSend(v70, sel_baselineTimestamp);
    *v1 = (uint64_t)objc_msgSend(v71, sel_baselineStatelessEventCount);
    v72 = objc_msgSend(v71, sel_baselineTotalEventCount);
    v73 = v59;
    v74 = v25;
    v75 = objc_msgSend(v71, sel_aggregateCounts);
    v76 = objc_msgSend(v75, sel_tag);
    v77 = objc_msgSend(v75, sel_channelTopic);
    v78 = objc_msgSend(v75, sel_group);

    v79 = (uint64_t)v72;
    v81 = *v1;
    v80 = v1[1];
    v25 = v74;
    v59 = v73;
  }
  else
  {
    v80 = 0;
    v81 = 0;
    v79 = 0;
    v76 = 0;
    v77 = 0;
    v78 = 0;
  }
  v1[44] = v1[28];
  *(_BYTE *)(v8 - 120) = v64 == 0;
  *(_BYTE *)(v8 - 112) = 0;
  *(_BYTE *)(v8 - 122) = v71 == 0;
  *((_BYTE *)v1 + 360) = 0;
  v82 = v1[25];
  v1[46] = v1[27];
  v1[47] = v82;
  v83 = v1[22];
  v1[48] = v1[24];
  v1[49] = v83;
  v1[50] = v25;
  v1[51] = (uint64_t)v59;
  v1[52] = v1[21];
  v1[53] = v61;
  v1[54] = v63;
  v84 = v1[19];
  v1[55] = v1[20];
  v1[56] = v84;
  v85 = v1[17];
  v1[57] = v1[18];
  v1[58] = v85;
  v86 = v1[15];
  v1[59] = v1[16];
  v1[60] = v86;
  v87 = v1[13];
  v1[61] = v1[14];
  v1[62] = v87;
  v88 = v1[11];
  v1[63] = v1[12];
  v1[64] = v88;
  v1[65] = v1[10];
  v1[66] = v1[9];
  v1[67] = v1[8];
  v1[68] = v1[7];
  v1[69] = v1[6];
  v1[70] = v1[5];
  v1[71] = v1[4];
  *((_BYTE *)v1 + 576) = *(_BYTE *)(v8 - 120);
  v1[73] = v80;
  v1[74] = 0;
  v1[75] = v81;
  v1[76] = 0;
  v1[77] = v79;
  v1[78] = 0;
  v1[79] = (uint64_t)v76;
  v1[80] = 0;
  v1[81] = (uint64_t)v77;
  v1[82] = 0;
  v1[83] = (uint64_t)v78;
  *((_WORD *)v1 + 336) = 0;
  *((_BYTE *)v1 + 674) = *(_BYTE *)(v8 - 122);
  v89 = swift_allocObject();
  *(_OWORD *)(v89 + 16) = *((_OWORD *)v1 + 15);
  ((void (*)(uint64_t, _QWORD, uint64_t))v1[26])(v89 + v1[36], *((unsigned int *)v1 + 67), v1[38]);
  sub_1D5949970();
  v1[38] = v1[43] | 0x8000000000000000;
  sub_1D5AADF2C();
  swift_bridgeObjectRelease();
  swift_release();
  v1[37] = sub_1D5AADBF0();
  v90 = (_QWORD *)(v1[42] + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_tabiDataProvider);
  v91 = v90[3];
  v92 = v90[4];
  __swift_project_boxed_opaque_existential_1(v90, v91);
  (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v91, v92);
  v93 = v1[45];
  if (v93)
  {
    v95 = v1[55];
    v94 = v1[56];
    v97 = v1[53];
    v96 = v1[54];
    v99 = v1[51];
    v98 = v1[52];
    v101 = v1[49];
    v100 = v1[50];
    v102 = v1[46];
    v103 = v1[47];
    v104 = v1[48] & 1;
    v105 = v1[44];
  }
  else
  {
    v104 = 0;
    v101 = 0;
    v100 = 0;
    v99 = 0;
    v98 = 0;
    v97 = 0;
    v96 = 0;
    v95 = 0;
    v94 = 0;
    v102 = MEMORY[0x1E0DEE9D8];
    v93 = 0xE700000000000000;
    v103 = MEMORY[0x1E0DEE9D8];
    v105 = 0x6E776F6E6B6E75;
  }
  v1[34] = v96;
  v1[35] = v95;
  v1[36] = v94;
  v1[44] = v105;
  v1[45] = v93;
  v1[46] = v102;
  v1[47] = v103;
  *((_BYTE *)v1 + 384) = v104;
  v1[49] = v101;
  v1[50] = v100;
  v1[51] = v99;
  v1[52] = v98;
  v1[53] = v97;
  v1[54] = v96;
  v1[55] = v95;
  v1[56] = v94;
  sub_1D59499B4();
  sub_1D5AADF2C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1D58B0684(v101);
  v106 = (char *)v1[42];
  v107 = *(_QWORD *)&v106[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_liveActivityCountDataProvider + 24];
  v108 = *(_QWORD *)&v106[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_liveActivityCountDataProvider + 32];
  __swift_project_boxed_opaque_existential_1(&v106[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_liveActivityCountDataProvider], v107);
  (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v107, v108);
  if (*((_BYTE *)v1 + 356) != 1)
  {
    v110 = *((_DWORD *)v1 + 88);
    sub_1D5AADBF0();
    *((_DWORD *)v1 + 88) = v110;
    sub_1D5949A44();
    sub_1D5AADF2C();
    swift_release();
  }
  v109 = v1[3];
  v111 = *(_QWORD *)&v106[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_userEmbeddingDataProvider + 24];
  v112 = *(_QWORD *)&v106[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_userEmbeddingDataProvider + 32];
  __swift_project_boxed_opaque_existential_1(&v106[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_userEmbeddingDataProvider], v111);
  (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v111, v112);
  v113 = v1[44];
  if (v113)
  {
    sub_1D5AADBF0();
    v1[44] = v113;
    sub_1D5949A00();
    sub_1D5AADF2C();
    swift_bridgeObjectRelease();
    swift_release();
  }
  *(_QWORD *)(swift_allocObject() + 16) = v106;
  v114 = v106;
  v115 = v1[39];
  sub_1D5AAD704();
  sub_1D5AADBA8();
  swift_unknownObjectRelease();

  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1[40] + 8))(v115, v109);
}

Swift::Int64 __swiftcall Int64.rounded(by:)(Swift::Int64 by)
{
  uint64_t v1;
  Swift::Int64 v2;
  Swift::Int64 v3;
  BOOL v4;
  Swift::Int64 v5;

  if (!by)
  {
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (by == -1 && v1 == 0x8000000000000000)
    goto LABEL_15;
  v2 = v1 % by;
  if (by >= 0)
    v3 = by;
  else
    v3 = by + 1;
  if (v2 < v3 >> 1)
  {
    by = v1 - v2;
    if (!__OFSUB__(v1, v2))
      return by;
    __break(1u);
  }
  v4 = __OFSUB__(by, v2);
  v5 = by - v2;
  if (v4)
    goto LABEL_16;
  by = v1 + v5;
  if (__OFADD__(v1, v5))
LABEL_17:
    __break(1u);
  return by;
}

uint64_t sub_1D5947960@<X0>(_QWORD *a1@<X8>)
{
  void *v1;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;

  result = (uint64_t)objc_msgSend(v1, sel_articleSeenEventCount);
  v4 = result % 10;
  if (result % 10 <= 4)
  {
    v5 = (char *)(result - v4);
    if (!__OFSUB__(result, v4))
      goto LABEL_6;
    __break(1u);
  }
  v6 = 10 - v4;
  v5 = (char *)(result + v6);
  if (__OFADD__(result, v6))
  {
    __break(1u);
    goto LABEL_58;
  }
LABEL_6:
  result = (uint64_t)objc_msgSend(v1, sel_articleVisitedEventCount);
  v7 = result % 10;
  if (result % 10 > 4)
    goto LABEL_10;
  v8 = (char *)(result - v7);
  if (__OFSUB__(result, v7))
  {
    __break(1u);
LABEL_10:
    v9 = 10 - v7;
    v8 = (char *)(result + v9);
    if (!__OFADD__(result, v9))
      goto LABEL_11;
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
LABEL_11:
  result = (uint64_t)objc_msgSend(v1, sel_articleReadEventCount);
  v10 = result % 10;
  if (result % 10 > 4)
    goto LABEL_15;
  v11 = (char *)(result - v10);
  if (__OFSUB__(result, v10))
  {
    __break(1u);
LABEL_15:
    v12 = 10 - v10;
    v11 = (char *)(result + v12);
    if (!__OFADD__(result, v12))
      goto LABEL_16;
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
LABEL_16:
  result = (uint64_t)objc_msgSend(v1, sel_articleLikedEventCount);
  v13 = result % 10;
  if (result % 10 > 4)
    goto LABEL_20;
  v14 = (char *)(result - v13);
  if (__OFSUB__(result, v13))
  {
    __break(1u);
LABEL_20:
    v15 = 10 - v13;
    v14 = (char *)(result + v15);
    if (!__OFADD__(result, v15))
      goto LABEL_21;
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
LABEL_21:
  result = (uint64_t)objc_msgSend(v1, sel_articleDislikedEventCount);
  v16 = result % 10;
  if (result % 10 > 4)
    goto LABEL_25;
  v17 = (char *)(result - v16);
  if (__OFSUB__(result, v16))
  {
    __break(1u);
LABEL_25:
    v18 = 10 - v16;
    v17 = (char *)(result + v18);
    if (!__OFADD__(result, v18))
      goto LABEL_26;
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
LABEL_26:
  result = (uint64_t)objc_msgSend(v1, sel_articleSharedEventCount);
  v19 = result % 10;
  if (result % 10 > 4)
    goto LABEL_30;
  v20 = (char *)(result - v19);
  if (__OFSUB__(result, v19))
  {
    __break(1u);
LABEL_30:
    v21 = 10 - v19;
    v20 = (char *)(result + v21);
    if (!__OFADD__(result, v21))
      goto LABEL_31;
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
LABEL_31:
  result = (uint64_t)objc_msgSend(v1, sel_articleSavedEventCount);
  v22 = result % 10;
  if (result % 10 > 4)
    goto LABEL_35;
  v23 = (char *)(result - v22);
  if (__OFSUB__(result, v22))
  {
    __break(1u);
LABEL_35:
    v24 = 10 - v22;
    v23 = (char *)(result + v24);
    if (!__OFADD__(result, v24))
      goto LABEL_36;
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
LABEL_36:
  result = (uint64_t)objc_msgSend(v1, sel_feedViewEventCount);
  v25 = result % 10;
  if (result % 10 > 4)
    goto LABEL_40;
  v26 = (char *)(result - v25);
  if (__OFSUB__(result, v25))
  {
    __break(1u);
LABEL_40:
    v27 = 10 - v25;
    v26 = (char *)(result + v27);
    if (!__OFADD__(result, v27))
      goto LABEL_41;
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
LABEL_41:
  result = (uint64_t)objc_msgSend(v1, sel_tagFollowedEventCount);
  v28 = result % 10;
  v43 = v26;
  if (result % 10 > 4)
    goto LABEL_45;
  v29 = __OFSUB__(result, v28);
  v28 = result - v28;
  if (v29)
  {
    __break(1u);
LABEL_45:
    v30 = 10 - v28;
    v29 = __OFADD__(result, v30);
    v28 = result + v30;
    if (!v29)
      goto LABEL_46;
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
LABEL_46:
  v31 = v20;
  v32 = v17;
  v33 = v14;
  v34 = v11;
  v35 = v8;
  v36 = v5;
  result = (uint64_t)objc_msgSend(v1, sel_tagUnfollowedEventCount, v28);
  v37 = result % 10;
  if (result % 10 <= 4)
  {
    v38 = (char *)(result - v37);
    if (!__OFSUB__(result, v37))
      goto LABEL_51;
    __break(1u);
  }
  v39 = 10 - v37;
  v38 = (char *)(result + v39);
  if (__OFADD__(result, v39))
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
LABEL_51:
  result = (uint64_t)objc_msgSend(v1, sel_tagMutedEventCount);
  v40 = result % 10;
  if (result % 10 <= 4)
  {
    v29 = __OFSUB__(result, v40);
    v40 = result - v40;
    if (!v29)
      goto LABEL_56;
    __break(1u);
  }
  v41 = 10 - v40;
  v29 = __OFADD__(result, v41);
  v40 = result + v41;
  if (!v29)
  {
LABEL_56:
    *a1 = v36;
    a1[1] = v35;
    a1[2] = v34;
    a1[3] = v33;
    a1[4] = v32;
    a1[5] = v31;
    a1[6] = v23;
    a1[7] = v43;
    a1[8] = v42;
    a1[9] = v38;
    a1[10] = v40;
    return result;
  }
LABEL_67:
  __break(1u);
  return result;
}

uint64_t sub_1D5947D80(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  sub_1D57B663C(0, (unint64_t *)&qword_1ED9CC7B0);
  v2 = (void *)sub_1D5AAEAC0();
  sub_1D57C02F0(0, (unint64_t *)&qword_1ED9CCA30, (unint64_t *)&qword_1ED9CCA40, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  v4 = v3;
  *(_OWORD *)(v3 + 16) = xmmword_1D5AB0170;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_kind))
  {
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_kind) == 1)
    {
      v5 = 0xE500000000000000;
      v6 = 0x6F69647561;
    }
    else
    {
      v5 = 0xE900000000000079;
      v6 = 0x7274656D656C6574;
    }
  }
  else
  {
    v5 = 0xE300000000000000;
    v6 = 7368801;
  }
  *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v3 + 64) = sub_1D57B356C();
  *(_QWORD *)(v4 + 32) = v6;
  *(_QWORD *)(v4 + 40) = v5;
  sub_1D5AAEA24();
  sub_1D5AAE328();

  return swift_bridgeObjectRelease();
}

uint64_t SessionObserver.networkReachabilityConnectivityDidChange(_:)(uint64_t a1)
{
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  swift_unknownObjectRetain();
  sub_1D5AADF5C();
  return swift_release();
}

void sub_1D5947F68(int a1, id a2)
{
  __int128 v2;
  __int128 v3;

  if (a2)
  {
    if (objc_msgSend(a2, sel_isNetworkReachable))
    {
      type metadata accessor for OfflineModeEndEvent(0);
      sub_1D57A8DE4((unint64_t *)&unk_1EFF4DCA8, type metadata accessor for OfflineModeEndEvent, (uint64_t)&protocol conformance descriptor for OfflineModeEndEvent);
      v2 = 0u;
      v3 = 0u;
      sub_1D5AADB0C();
      sub_1D57C5484((uint64_t)&v2);
    }
    else
    {
      type metadata accessor for OfflineModeStartEvent(0);
      sub_1D57A8DE4(&qword_1EFF4DCB8, type metadata accessor for OfflineModeStartEvent, (uint64_t)&protocol conformance descriptor for OfflineModeStartEvent);
      v2 = 0u;
      v3 = 0u;
      sub_1D5AADB0C();
      sub_1D57C5484((uint64_t)&v2);
      type metadata accessor for OfflineModeEndEvent(0);
      sub_1D57A8DE4((unint64_t *)&unk_1EFF4DCA8, type metadata accessor for OfflineModeEndEvent, (uint64_t)&protocol conformance descriptor for OfflineModeEndEvent);
      sub_1D5AADB00();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D5948120(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  void (*v32)(void);
  char *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  void (*v81)(void);
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  unint64_t v102;
  _QWORD v103[80];
  _BYTE v104[80];
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  char v110[8];
  uint64_t v111;

  sub_1D57ABC2C(0, &qword_1ED9C6F90, (void (*)(void))sub_1D57C9F00);
  v95 = *(_QWORD *)(v2 - 8);
  v96 = v2;
  MEMORY[0x1E0C80A78](v2);
  v93 = (char *)&v79 - v3;
  sub_1D57ABC2C(0, &qword_1ED9C6FF0, (void (*)(void))sub_1D57CB4A4);
  v91 = *(_QWORD *)(v4 - 8);
  v92 = v4;
  MEMORY[0x1E0C80A78](v4);
  v94 = (char *)&v79 - v5;
  v6 = sub_1D5AADEA8();
  v85 = *(_QWORD *)(v6 - 8);
  v86 = v6;
  MEMORY[0x1E0C80A78](v6);
  v84 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9D0BF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6EB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3F28]);
  v9 = v8;
  v100 = *(void (**)(char *, uint64_t))(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v90 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v99 = (char *)&v79 - v12;
  v13 = sub_1D5AAE0D0();
  v98 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v89 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v88 = (char *)&v79 - v17;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v79 - v18;
  v20 = sub_1D5AAE0F4();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x1E0C80A78](v20);
  v83 = (char *)&v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v87 = (char *)&v79 - v25;
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v79 - v26;
  sub_1D5AAE190();
  sub_1D5AAE0E8();
  v28 = *(void (**)(char *, uint64_t))(v21 + 8);
  v97 = v20;
  v28(v27, v20);
  sub_1D5AAE0DC();
  v30 = v29;
  v31 = *(void (**)(char *, uint64_t))(v98 + 8);
  v98 = v13;
  v31(v19, v13);
  swift_bridgeObjectRelease();
  v32 = (void (*)(void))*((_QWORD *)v100 + 2);
  v33 = v99;
  v32();
  if (v30)
    return (*((uint64_t (**)(char *, uint64_t))v100 + 1))(v33, v9);
  v81 = v32;
  v82 = a1;
  sub_1D5AAE190();
  sub_1D5AAE0E8();
  v28(v27, v97);
  sub_1D5AAE0DC();
  v36 = v35;
  v37 = v98;
  v31(v19, v98);
  v38 = (void (*)(char *, uint64_t))*((_QWORD *)v100 + 1);
  v38(v33, v9);
  result = swift_bridgeObjectRelease();
  if (!v36)
  {
    v39 = v37;
    v40 = v9;
    v99 = (char *)v31;
    v100 = v28;
    v80 = v38;
    v41 = v82;
    URLHandlerContext<A>.urlReferralData()((uint64_t)v103);
    sub_1D57E4810((uint64_t)&v103[14], (uint64_t)v104, &qword_1ED9C6948);
    sub_1D57E4810((uint64_t)v104, (uint64_t)v110, &qword_1ED9C6948);
    if (v111 != 1)
    {
      sub_1D5AADBF0();
      v43 = v84;
      v42 = v85;
      v44 = v86;
      (*(void (**)(char *, _QWORD, uint64_t))(v85 + 104))(v84, *MEMORY[0x1E0CF84F0], v86);
      sub_1D5AADF38();
      swift_release();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
    }
    v45 = v94;
    if (v103[7])
    {
      v105 = v103[6];
      v106 = v103[7];
      v107 = v103[8];
      v108 = *(_OWORD *)&v103[9];
      v109 = v103[11];
      sub_1D57CB4A4();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D5AADA40();
      sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9CC9F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v46 = sub_1D5AADB54();
      v47 = v45;
      v48 = *(_QWORD *)(v46 - 8);
      v49 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
      v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_1D5AB0170;
      v39 = v98;
      (*(void (**)(unint64_t, _QWORD, uint64_t))(v48 + 104))(v50 + v49, *MEMORY[0x1E0CF8168], v46);
      v41 = v82;
      sub_1D5AADBB4();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v91 + 8))(v47, v92);
    }
    sub_1D57E4810((uint64_t)v104, (uint64_t)&v105, &qword_1ED9C6948);
    if (v106 == 1)
    {
      v51 = v87;
      sub_1D5AAE190();
      v52 = v88;
      sub_1D5AAE0E8();
      v100(v51, v97);
      v53 = sub_1D5AAE0DC();
      v55 = v54;
      v56 = v39;
      ((void (*)(char *, uint64_t))v99)(v52, v39);
      v57 = sub_1D5AAE820();
      v59 = v40;
      v60 = v96;
      if (v55)
      {
        v62 = v89;
        v61 = v90;
        if (v53 == v57 && v55 == v58)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          ((void (*)(char *, uint64_t, uint64_t))v81)(v61, v41, v59);
LABEL_17:
          v80(v61, v59);
          goto LABEL_22;
        }
        v66 = sub_1D5AAEDE4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t, uint64_t))v81)(v61, v41, v59);
        if ((v66 & 1) != 0)
          goto LABEL_17;
      }
      else
      {
        swift_bridgeObjectRelease();
        v61 = v90;
        ((void (*)(char *, uint64_t, uint64_t))v81)(v90, v41, v59);
        v62 = v89;
      }
      v67 = v83;
      sub_1D5AAE190();
      sub_1D5AAE0E8();
      v100(v67, v97);
      v68 = sub_1D5AAE0DC();
      v70 = v69;
      ((void (*)(char *, uint64_t))v99)(v62, v56);
      v71 = sub_1D5AAE820();
      if (v70)
      {
        if (v68 != v71 || v70 != v72)
        {
          v78 = sub_1D5AAEDE4();
          swift_bridgeObjectRelease();
          v80(v61, v59);
          swift_bridgeObjectRelease();
          v65 = v93;
          if ((v78 & 1) == 0)
          {
            v64 = 0x6C616E7265747865;
            v63 = 0xEC0000006B6E694CLL;
            goto LABEL_24;
          }
          goto LABEL_23;
        }
        swift_bridgeObjectRelease();
        v80(v61, v59);
        swift_bridgeObjectRelease();
LABEL_22:
        v65 = v93;
LABEL_23:
        v63 = 0xEB00000000746567;
        v64 = 0x6469577961646F74;
        goto LABEL_24;
      }
      v80(v61, v59);
      swift_bridgeObjectRelease();
      v64 = 0x6C616E7265747865;
      v63 = 0xEC0000006B6E694CLL;
    }
    else
    {
      v63 = 0xEC0000006E6F6974;
      v64 = 0x6163696669746F6ELL;
      v60 = v96;
    }
    v65 = v93;
LABEL_24:
    v101 = v64;
    v102 = v63;
    sub_1D57C9F00();
    sub_1D5AADA40();
    sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9CC9F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v73 = sub_1D5AADB54();
    v74 = *(_QWORD *)(v73 - 8);
    v75 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
    v76 = swift_allocObject();
    *(_OWORD *)(v76 + 16) = xmmword_1D5AB0170;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v74 + 104))(v76 + v75, *MEMORY[0x1E0CF8168], v73);
    sub_1D5AADBB4();
    swift_bridgeObjectRelease();
    sub_1D5AADBF0();
    v77 = swift_allocObject();
    memcpy((void *)(v77 + 16), v103, 0x280uLL);
    sub_1D5AADF14();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v65, v60);
  }
  return result;
}

uint64_t sub_1D5948B78(uint64_t a1, _OWORD *a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  void (*v14)(unint64_t);
  unsigned int v15;
  _BYTE __dst[448];
  _BYTE v17[448];
  _BYTE v18[80];
  _BYTE v19[48];
  _OWORD v20[3];
  _OWORD v21[3];
  _OWORD v22[3];
  _OWORD v23[2];
  _OWORD __src[29];

  v3 = a2[1];
  v20[0] = *a2;
  v20[1] = v3;
  v5 = *a2;
  v4 = a2[1];
  v20[2] = a2[2];
  __src[0] = v5;
  __src[1] = v4;
  __src[2] = a2[2];
  sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9CC9F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = sub_1D5AADB54();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1D5AB0170;
  v15 = *MEMORY[0x1E0CF8168];
  v14 = *(void (**)(unint64_t))(v7 + 104);
  v14(v9 + v8);
  sub_1D5949D80((uint64_t)v20);
  sub_1D5894308();
  sub_1D5AADAF4();
  swift_bridgeObjectRelease();
  sub_1D5949DC8((uint64_t)v20);
  sub_1D57E4810((uint64_t)(a2 + 3), (uint64_t)v19, &qword_1ED9C6818);
  sub_1D57E4810((uint64_t)v19, (uint64_t)v21, &qword_1ED9C6818);
  if (*((_QWORD *)&v21[0] + 1))
  {
    __src[0] = v21[0];
    __src[1] = v21[1];
    __src[2] = v21[2];
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1D5AB0170;
    ((void (*)(unint64_t, _QWORD, uint64_t))v14)(v10 + v8, v15, v6);
    sub_1D57CB4A4();
    sub_1D5AADAF4();
    swift_bridgeObjectRelease();
  }
  sub_1D57E4810((uint64_t)(a2 + 7), (uint64_t)v18, &qword_1ED9C6948);
  sub_1D57E4810((uint64_t)v18, (uint64_t)v22, &qword_1ED9C6948);
  if (*((_QWORD *)&v22[0] + 1) != 1)
  {
    __src[2] = v22[2];
    __src[3] = v23[0];
    *(_OWORD *)((char *)&__src[3] + 10) = *(_OWORD *)((char *)v23 + 10);
    __src[1] = v22[1];
    __src[0] = v22[0];
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1D5AB0170;
    ((void (*)(unint64_t, _QWORD, uint64_t))v14)(v11 + v8, v15, v6);
    sub_1D57E6A08();
    sub_1D5AADAF4();
    swift_bridgeObjectRelease();
  }
  sub_1D57E4810((uint64_t)(a2 + 12), (uint64_t)v17, (unint64_t *)&qword_1ED9C6A60);
  sub_1D57E4810((uint64_t)v17, (uint64_t)__src, (unint64_t *)&qword_1ED9C6A60);
  result = sub_1D5949E10((uint64_t)__src);
  if ((_DWORD)result != 1)
  {
    memcpy(__dst, __src, sizeof(__dst));
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1D5AB0170;
    ((void (*)(unint64_t, _QWORD, uint64_t))v14)(v13 + v8, v15, v6);
    sub_1D5949E28();
    sub_1D5AADAF4();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D5948F2C()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D5948F50(uint64_t a1)
{
  return sub_1D5948120(a1);
}

unint64_t sub_1D5948F70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5AAEE80();
  sub_1D5AAE874();
  v4 = sub_1D5AAEE98();
  return sub_1D5948FD4(a1, a2, v4);
}

unint64_t sub_1D5948FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1D5AAEDE4() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1D5AAEDE4() & 1) == 0);
    }
  }
  return v6;
}

char *sub_1D59490B4(uint64_t a1, uint64_t a2, void *a3, void *a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, _BYTE *a13)
{
  int v19;
  uint64_t v20;
  _BYTE *v21;
  _QWORD *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  char *v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  char *result;
  id v40;
  void *v41;
  id v42;
  void *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  objc_class *ObjectType;
  char *v54;
  __int128 v56[2];
  objc_super v57;

  ObjectType = (objc_class *)swift_getObjectType();
  v19 = *a5;
  a13[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_sessionStartSource] = 4;
  v20 = OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_sessionURLManager;
  sub_1D57B1F4C(0, &qword_1ED9D0C00, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6EB0], MEMORY[0x1E0DB3F60]);
  swift_allocObject();
  v21 = a13;
  *(_QWORD *)&a13[v20] = sub_1D5AAE1C0();
  swift_unknownObjectWeakInit();
  v22 = &v21[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_sceneSessionIdentifier];
  *v22 = 0;
  v22[1] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_sessionManager] = a1;
  v51 = a2;
  sub_1D57B6254(a2, (uint64_t)&v21[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_aggregateStateModeProvider]);
  swift_retain();
  *(_QWORD *)&v21[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_tracker] = sub_1D5AADBF0();
  *(_QWORD *)&v21[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_cloudContext] = a3;
  *(_QWORD *)&v21[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_client] = a4;
  *(_QWORD *)&v21[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_fsidProvider] = a6;
  v21[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_kind] = v19;
  v23 = a3;
  v24 = a4;
  swift_unknownObjectRetain();
  v25 = objc_msgSend(v23, sel_userInfo);
  v26 = objc_msgSend(v25, sel_onboardingVersionNumber);

  if (!v26)
  {
    sub_1D57B663C(0, (unint64_t *)&qword_1ED9CC7A0);
    v26 = (id)sub_1D5AAEA90();
  }
  *(_QWORD *)&v21[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_onboardingVersion] = v26;
  sub_1D57BCF08(a7, (uint64_t)&v21[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_appExtensionCommunicator]);
  sub_1D57B6254(a9, (uint64_t)&v21[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_tabiDataProvider]);
  sub_1D57B6254(a10, (uint64_t)&v21[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_liveActivityCountDataProvider]);
  sub_1D57B6254(a11, (uint64_t)&v21[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_userEmbeddingDataProvider]);

  v57.receiver = v21;
  v57.super_class = ObjectType;
  v27 = objc_msgSendSuper2(&v57, sel_init);
  type metadata accessor for SessionObserverURLHandler();
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = a1;
  *(_QWORD *)&v56[0] = v28;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9D0870, (uint64_t (*)(uint64_t))type metadata accessor for SessionObserverURLHandler, (uint64_t)&unk_1D5ACE06C);
  swift_retain();
  v29 = v27;
  sub_1D5AAE1B4();
  swift_release();
  *(_QWORD *)(swift_allocObject() + 16) = v29;
  v30 = v29;
  sub_1D5AADB9C();
  swift_release();
  sub_1D57BCFA8();
  *(_QWORD *)(swift_allocObject() + 16) = v30;
  v31 = (char *)v30;
  sub_1D5AADB9C();
  swift_release();
  v32 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  objc_msgSend(v32, sel_beginGeneratingDeviceOrientationNotifications);

  sub_1D57BBBE8();
  v33 = (void *)objc_opt_self();
  v34 = objc_msgSend(v33, sel_defaultCenter);
  objc_msgSend(v34, sel_addObserver_selector_name_object_, v31, sel_pushOrientationData, *MEMORY[0x1E0DC4960], 0);

  sub_1D57C04C0();
  sub_1D57B64C0(0, objc_msgSend(a8, sel_sportsOnboardingState) == (id)1);
  sub_1D5AADBF0();
  v35 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = v35;
  *(_QWORD *)(v36 + 24) = a8;
  swift_retain();
  v54 = a8;
  sub_1D5AADF20();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1D57BFA4C();
  sub_1D5AADBF0();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1D5AADF20();
  swift_release();
  swift_release();
  swift_release_n();
  sub_1D57BC4D0();
  v37 = objc_msgSend(v33, sel_defaultCenter);
  objc_msgSend(v37, sel_addObserver_selector_name_object_, v31, sel_pushUserSubscriptionContextData, *MEMORY[0x1E0D58730], 0);

  v38 = objc_msgSend(v33, sel_defaultCenter);
  objc_msgSend(v38, sel_addObserver_selector_name_object_, v31, sel_pushUserSubscriptionContextData, *MEMORY[0x1E0D58750], 0);

  sub_1D57BBF64();
  sub_1D57BDCA4();
  SessionObserver.pushNotificationSettingsData()();
  result = (char *)objc_msgSend(*(id *)&v31[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_cloudContext], sel_newsletterManager);
  if (result)
  {
    objc_msgSend(result, sel_addObserver_, v31);
    swift_unknownObjectRelease();
    v40 = objc_msgSend(v33, sel_defaultCenter);
    v41 = (void *)sub_1D5AAE7FC();
    objc_msgSend(v40, (SEL)0x1E9A5EF48, v31, sel_offerDidChange_, v41, 0);

    sub_1D57BDB94();
    v42 = objc_msgSend(v33, (SEL)0x1E9A5ED7FLL);
    v43 = (void *)sub_1D5AAE7FC();
    objc_msgSend(v42, (SEL)0x1E9A5EF48, v31, sel_familySharingStatusDidChange_, v43, 0);

    *(_QWORD *)(swift_allocObject() + 16) = v31;
    v44 = v31;
    sub_1D5AADB9C();
    swift_release();
    sub_1D57BF678();
    if (v19)
    {
      v49 = a9;
      v48 = a7;
      v50 = v51;
      v47 = v54;
    }
    else
    {
      sub_1D57B6254(a12, (uint64_t)v56);
      v45 = swift_allocObject();
      sub_1D57ADBD0(v56, v45 + 16);
      sub_1D5AADF20();
      swift_release();
      v46 = v44;
      sub_1D5AADC08();

      swift_release();
      v47 = v46;
      v49 = a9;
      v48 = a7;
      v50 = v51;
    }

    __swift_destroy_boxed_opaque_existential_1(a12);
    __swift_destroy_boxed_opaque_existential_1(a11);
    __swift_destroy_boxed_opaque_existential_1(a10);
    __swift_destroy_boxed_opaque_existential_1(v49);
    sub_1D57BCEB4(v48);
    __swift_destroy_boxed_opaque_existential_1(v50);
    return v44;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_1D59498B8(uint64_t a1, uint64_t a2, void *a3, void *a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, objc_class *a13)
{
  return sub_1D59490B4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, objc_allocWithZone(a13));
}

uint64_t sub_1D594994C()
{
  uint64_t v0;

  return swift_deallocObject();
}

unint64_t sub_1D5949970()
{
  unint64_t result;

  result = qword_1ED9D0200;
  if (!qword_1ED9D0200)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserEventStorageData, &type metadata for UserEventStorageData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0200);
  }
  return result;
}

unint64_t sub_1D59499B4()
{
  unint64_t result;

  result = qword_1ED9D0BC0;
  if (!qword_1ED9D0BC0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TabiData, &type metadata for TabiData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0BC0);
  }
  return result;
}

uint64_t sub_1D59499F8()
{
  uint64_t v0;

  return sub_1D5947D80(*(_QWORD *)(v0 + 16));
}

unint64_t sub_1D5949A00()
{
  unint64_t result;

  result = qword_1ED9CFC88;
  if (!qword_1ED9CFC88)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserEmbeddingData, &type metadata for UserEmbeddingData);
    atomic_store(result, (unint64_t *)&qword_1ED9CFC88);
  }
  return result;
}

unint64_t sub_1D5949A44()
{
  unint64_t result;

  result = qword_1ED9D04C0;
  if (!qword_1ED9D04C0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for LiveActivityCountData, &type metadata for LiveActivityCountData);
    atomic_store(result, (unint64_t *)&qword_1ED9D04C0);
  }
  return result;
}

void sub_1D5949A88(int a1)
{
  uint64_t v1;

  sub_1D5947F68(a1, *(id *)(v1 + 16));
}

unint64_t sub_1D5949A94()
{
  unint64_t result;

  result = qword_1EFF4DB48;
  if (!qword_1EFF4DB48)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SessionObserverKind, &type metadata for SessionObserverKind);
    atomic_store(result, (unint64_t *)&qword_1EFF4DB48);
  }
  return result;
}

uint64_t sub_1D5949AD8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_window;
  swift_beginAccess();
  result = MEMORY[0x1D8279758](v3);
  *a2 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for SessionObserverKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5949B7C + 4 * byte_1D5ACDEFD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5949BB0 + 4 * byte_1D5ACDEF8[v4]))();
}

uint64_t sub_1D5949BB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5949BB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5949BC0);
  return result;
}

uint64_t sub_1D5949BCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5949BD4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5949BD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5949BE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t method lookup function for SessionObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SessionObserver.__allocating_init(sessionManager:aggregateStateModeProvider:cloudContext:client:kind:fsidProvider:appExtensionCommunicator:userInfo:tabiDataProvider:liveActivityCountDataProvider:userEmbeddingDataProvider:offlineProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t sub_1D5949C18()
{
  return sub_1D57A8DE4((unint64_t *)&unk_1ED9D0870, (uint64_t (*)(uint64_t))type metadata accessor for SessionObserverURLHandler, (uint64_t)&unk_1D5ACE06C);
}

uint64_t sub_1D5949C44()
{
  _QWORD *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[9])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (v0[17] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v0[27])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1D5949D78(uint64_t a1)
{
  uint64_t v1;

  return sub_1D5948B78(a1, (_OWORD *)(v1 + 16));
}

uint64_t sub_1D5949D80(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D5949DC8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D5949E10(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

unint64_t sub_1D5949E28()
{
  unint64_t result;

  result = qword_1ED9D1398;
  if (!qword_1ED9D1398)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetEngagementData, &type metadata for WidgetEngagementData);
    atomic_store(result, (unint64_t *)&qword_1ED9D1398);
  }
  return result;
}

void sub_1D5949E6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFF4DCC8)
  {
    sub_1D57B1F4C(255, &qword_1EFF4DCD0, MEMORY[0x1E0DB3FE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1D5AAEC34();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFF4DCC8);
  }
}

uint64_t sub_1D5949EE8()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1D5949F0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFF4DCD8)
  {
    type metadata accessor for OpenURLOptionsKey(255);
    sub_1D57A8DE4(&qword_1EFF47650, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_1D5AAFC0C);
    v0 = sub_1D5AAEC34();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFF4DCD8);
  }
}

uint64_t sub_1D5949F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5949FD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1D5949FD4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EFF4DCE8)
  {
    type metadata accessor for OpenURLOptionsKey(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EFF4DCE8);
  }
}

uint64_t sub_1D594A03C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 56))
    __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocObject();
}

uint64_t sub_1D594A078()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D594A09C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1D594A0C8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

NewsAnalytics::PuzzleRevealType_optional __swiftcall PuzzleRevealType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::PuzzleRevealType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PuzzleRevealType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D594A190 + 4 * byte_1D5ACE120[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D594A190()
{
  return 7105633;
}

uint64_t sub_1D594A1A0()
{
  return 1685221239;
}

uint64_t sub_1D594A1B0()
{
  return 0x72657474656CLL;
}

void sub_1D594A1C4(char *a1)
{
  sub_1D5A3ADC8(*a1);
}

unint64_t sub_1D594A1D4()
{
  unint64_t result;

  result = qword_1EFF4DCF0;
  if (!qword_1EFF4DCF0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PuzzleRevealType, &type metadata for PuzzleRevealType);
    atomic_store(result, (unint64_t *)&qword_1EFF4DCF0);
  }
  return result;
}

void sub_1D594A218()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D594A264()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D594A2C0()
{
  __asm { BR              X10 }
}

uint64_t sub_1D594A2FC()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D594A344()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D594A38C()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::PuzzleRevealType_optional sub_1D594A3E8(Swift::String *a1)
{
  return PuzzleRevealType.init(rawValue:)(*a1);
}

uint64_t sub_1D594A3F4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D594A424 + 4 * byte_1D5ACE130[*v0]))();
}

void sub_1D594A424(_QWORD *a1@<X8>)
{
  *a1 = 7105633;
  a1[1] = 0xE300000000000000;
}

void sub_1D594A438(_QWORD *a1@<X8>)
{
  *a1 = 1685221239;
  a1[1] = 0xE400000000000000;
}

void sub_1D594A44C(_QWORD *a1@<X8>)
{
  *a1 = 0x72657474656CLL;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1D594A464()
{
  sub_1D594A5D8();
  return sub_1D5AAE928();
}

uint64_t sub_1D594A4C0()
{
  sub_1D594A5D8();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for PuzzleRevealType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D594A558 + 4 * byte_1D5ACE139[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D594A58C + 4 * byte_1D5ACE134[v4]))();
}

uint64_t sub_1D594A58C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D594A594(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D594A59CLL);
  return result;
}

uint64_t sub_1D594A5A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D594A5B0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D594A5B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D594A5BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleRevealType()
{
  return &type metadata for PuzzleRevealType;
}

unint64_t sub_1D594A5D8()
{
  unint64_t result;

  result = qword_1EFF4DCF8;
  if (!qword_1EFF4DCF8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PuzzleRevealType, &type metadata for PuzzleRevealType);
    atomic_store(result, (unint64_t *)&qword_1EFF4DCF8);
  }
  return result;
}

uint64_t GroupingInventoryData.inventory.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GroupingInventoryData.inventory.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*GroupingInventoryData.inventory.modify())()
{
  return nullsub_1;
}

NewsAnalytics::GroupingInventoryData __swiftcall GroupingInventoryData.init(inventory:)(NewsAnalytics::GroupingInventoryData inventory)
{
  NewsAnalytics::GroupingInventoryData *v1;

  v1->inventory._rawValue = inventory.inventory._rawValue;
  return inventory;
}

uint64_t sub_1D594A664()
{
  return 0x726F746E65766E69;
}

uint64_t sub_1D594A680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x726F746E65766E69 && a2 == 0xE900000000000079)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D594A720()
{
  sub_1D594A894();
  return sub_1D5AAEED4();
}

uint64_t sub_1D594A748()
{
  sub_1D594A894();
  return sub_1D5AAEEE0();
}

uint64_t GroupingInventoryData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1D594AA84(0, &qword_1ED9D0D98, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D594A894();
  sub_1D5AAEEC8();
  v10[1] = v8;
  sub_1D594A8D8();
  sub_1D594AAE0(&qword_1ED9D0C88, (uint64_t (*)(void))sub_1D5932CC4, MEMORY[0x1E0DEAF10]);
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D594A894()
{
  unint64_t result;

  result = qword_1ED9D0458;
  if (!qword_1ED9D0458)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACE3EC, &type metadata for GroupingInventoryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0458);
  }
  return result;
}

void sub_1D594A8D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9D0C80)
  {
    v0 = sub_1D5AAE97C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9D0C80);
  }
}

uint64_t GroupingInventoryData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1D594AA84(0, &qword_1EFF4DD00, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D594A894();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D594A8D8();
    sub_1D594AAE0(&qword_1EFF4DD08, (uint64_t (*)(void))sub_1D5932C7C, MEMORY[0x1E0DEAF40]);
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D594AA84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D594A894();
    v7 = a3(a1, &type metadata for GroupingInventoryData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D594AAE0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1D594A8D8();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1D8279680](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D594AB4C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return GroupingInventoryData.init(from:)(a1, a2);
}

uint64_t sub_1D594AB60(_QWORD *a1)
{
  return GroupingInventoryData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for GroupingInventoryData()
{
  return &type metadata for GroupingInventoryData;
}

uint64_t storeEnumTagSinglePayload for GroupingInventoryData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D594ABC4 + 4 * byte_1D5ACE270[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D594ABE4 + 4 * byte_1D5ACE275[v4]))();
}

_BYTE *sub_1D594ABC4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D594ABE4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D594ABEC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D594ABF4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D594ABFC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D594AC04(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for GroupingInventoryData.CodingKeys()
{
  return &type metadata for GroupingInventoryData.CodingKeys;
}

unint64_t sub_1D594AC24()
{
  unint64_t result;

  result = qword_1EFF4DD10;
  if (!qword_1EFF4DD10)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACE3C4, &type metadata for GroupingInventoryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4DD10);
  }
  return result;
}

unint64_t sub_1D594AC6C()
{
  unint64_t result;

  result = qword_1ED9D0468;
  if (!qword_1ED9D0468)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACE334, &type metadata for GroupingInventoryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0468);
  }
  return result;
}

unint64_t sub_1D594ACB4()
{
  unint64_t result;

  result = qword_1ED9D0460;
  if (!qword_1ED9D0460)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACE35C, &type metadata for GroupingInventoryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0460);
  }
  return result;
}

uint64_t NotificationData.notificationID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NotificationData.notificationID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*NotificationData.notificationID.modify())()
{
  return nullsub_1;
}

uint64_t NotificationData.viewFromNotification.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t NotificationData.viewFromNotification.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*NotificationData.viewFromNotification.modify())()
{
  return nullsub_1;
}

uint64_t NotificationData.senderChannelID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NotificationData.senderChannelID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*NotificationData.senderChannelID.modify())()
{
  return nullsub_1;
}

uint64_t NotificationData.sourceChannelID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NotificationData.sourceChannelID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*NotificationData.sourceChannelID.modify())()
{
  return nullsub_1;
}

uint64_t NotificationData.notificationArticleID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NotificationData.notificationArticleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*NotificationData.notificationArticleID.modify())()
{
  return nullsub_1;
}

void NotificationData.notificationType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 72);
}

_BYTE *NotificationData.notificationType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 72) = *result;
  return result;
}

uint64_t (*NotificationData.notificationType.modify())()
{
  return nullsub_1;
}

void NotificationData.notificationInterruptionLevel.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 73);
}

_BYTE *NotificationData.notificationInterruptionLevel.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 73) = *result;
  return result;
}

uint64_t (*NotificationData.notificationInterruptionLevel.modify())()
{
  return nullsub_1;
}

void __swiftcall NotificationData.init(notificationID:viewFromNotification:senderChannelID:sourceChannelID:notificationArticleID:notificationType:notificationInterruptionLevel:)(NewsAnalytics::NotificationData *__return_ptr retstr, Swift::String_optional notificationID, Swift::Bool viewFromNotification, Swift::String_optional senderChannelID, Swift::String_optional sourceChannelID, Swift::String_optional notificationArticleID, NewsAnalytics::NotificationType_optional notificationType, NewsAnalytics::NotificationInterruptionLevel_optional notificationInterruptionLevel)
{
  NewsAnalytics::NotificationType v8;
  NewsAnalytics::NotificationInterruptionLevel v9;
  NewsAnalytics::NotificationInterruptionLevel *v10;

  v8 = *(_BYTE *)notificationType.value;
  v9 = *v10;
  retstr->notificationID = notificationID;
  retstr->viewFromNotification = viewFromNotification;
  retstr->senderChannelID = senderChannelID;
  retstr->sourceChannelID = sourceChannelID;
  retstr->notificationArticleID = notificationArticleID;
  retstr->notificationType.value = v8;
  retstr->notificationInterruptionLevel.value = v9;
}

uint64_t sub_1D594AF58(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D594AF98 + 4 * byte_1D5ACE440[a1]))(0x6163696669746F6ELL, 0xEE0044496E6F6974);
}

unint64_t sub_1D594AF98()
{
  return 0xD000000000000014;
}

uint64_t sub_1D594B040()
{
  unsigned __int8 *v0;

  return sub_1D594AF58(*v0);
}

uint64_t sub_1D594B048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D594BD30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D594B06C()
{
  sub_1D594B328();
  return sub_1D5AAEED4();
}

uint64_t sub_1D594B094()
{
  sub_1D594B328();
  return sub_1D5AAEEE0();
}

uint64_t NotificationData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;

  sub_1D594B80C(0, &qword_1EFF4DD18, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v13 - v6;
  v21 = *(unsigned __int8 *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v19 = *(_QWORD *)(v1 + 32);
  v20 = v8;
  v9 = *(_QWORD *)(v1 + 40);
  v17 = *(_QWORD *)(v1 + 48);
  v18 = v9;
  v10 = *(_QWORD *)(v1 + 64);
  v15 = *(_QWORD *)(v1 + 56);
  v16 = v10;
  LODWORD(v9) = *(unsigned __int8 *)(v1 + 72);
  v13 = *(unsigned __int8 *)(v1 + 73);
  v14 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D594B328();
  sub_1D5AAEEC8();
  v31 = 0;
  v11 = v22;
  sub_1D5AAECF4();
  if (!v11)
  {
    v30 = 1;
    sub_1D5AAED48();
    v29 = 2;
    sub_1D5AAECF4();
    v28 = 3;
    sub_1D5AAECF4();
    v27 = 4;
    sub_1D5AAECF4();
    v26 = v14;
    v25 = 5;
    sub_1D594B36C();
    sub_1D5AAED18();
    v24 = v13;
    v23 = 6;
    sub_1D594B3B0();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D594B328()
{
  unint64_t result;

  result = qword_1EFF4DD20;
  if (!qword_1EFF4DD20)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACE5D4, &type metadata for NotificationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4DD20);
  }
  return result;
}

unint64_t sub_1D594B36C()
{
  unint64_t result;

  result = qword_1EFF4DD28;
  if (!qword_1EFF4DD28)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationType, &type metadata for NotificationType);
    atomic_store(result, (unint64_t *)&qword_1EFF4DD28);
  }
  return result;
}

unint64_t sub_1D594B3B0()
{
  unint64_t result;

  result = qword_1EFF4DD30;
  if (!qword_1EFF4DD30)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationInterruptionLevel, &type metadata for NotificationInterruptionLevel);
    atomic_store(result, (unint64_t *)&qword_1EFF4DD30);
  }
  return result;
}

uint64_t NotificationData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  unsigned __int8 v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;

  sub_1D594B80C(0, &qword_1EFF4DD38, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D594B328();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v44 = 0;
    v11 = sub_1D5AAEC58();
    v13 = v12;
    v43 = 1;
    swift_bridgeObjectRetain();
    v34 = sub_1D5AAECAC();
    v35 = v13;
    v42 = 2;
    v14 = sub_1D5AAEC58();
    v16 = v15;
    v32 = v14;
    v33 = v11;
    v41 = 3;
    swift_bridgeObjectRetain();
    v17 = sub_1D5AAEC58();
    v19 = v18;
    v30 = v17;
    v31 = a2;
    v40 = 4;
    swift_bridgeObjectRetain();
    v20 = sub_1D5AAEC58();
    v22 = v21;
    v29 = v20;
    v38 = 5;
    sub_1D594B868();
    swift_bridgeObjectRetain();
    sub_1D5AAEC7C();
    v28 = v39;
    v36 = 6;
    sub_1D594B8AC();
    sub_1D5AAEC7C();
    v23 = v34 & 1;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v24 = v37;
    v25 = v31;
    v26 = v35;
    *v31 = v33;
    v25[1] = v26;
    *((_BYTE *)v25 + 16) = v23;
    v25[3] = v32;
    v25[4] = v16;
    v25[5] = v30;
    v25[6] = v19;
    v25[7] = v29;
    v25[8] = v22;
    *((_BYTE *)v25 + 72) = v28;
    *((_BYTE *)v25 + 73) = v24;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D594B80C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D594B328();
    v7 = a3(a1, &type metadata for NotificationData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D594B868()
{
  unint64_t result;

  result = qword_1EFF4DD40;
  if (!qword_1EFF4DD40)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationType, &type metadata for NotificationType);
    atomic_store(result, (unint64_t *)&qword_1EFF4DD40);
  }
  return result;
}

unint64_t sub_1D594B8AC()
{
  unint64_t result;

  result = qword_1EFF4DD48;
  if (!qword_1EFF4DD48)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationInterruptionLevel, &type metadata for NotificationInterruptionLevel);
    atomic_store(result, (unint64_t *)&qword_1EFF4DD48);
  }
  return result;
}

uint64_t sub_1D594B8F8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return NotificationData.init(from:)(a1, a2);
}

uint64_t sub_1D594B90C(_QWORD *a1)
{
  return NotificationData.encode(to:)(a1);
}

uint64_t destroy for NotificationData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NotificationData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NotificationData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  return a1;
}

__n128 __swift_memcpy74_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 58) = *(_OWORD *)(a2 + 58);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for NotificationData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 74))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D594BBD8 + 4 * byte_1D5ACE44C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D594BC0C + 4 * byte_1D5ACE447[v4]))();
}

uint64_t sub_1D594BC0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D594BC14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D594BC1CLL);
  return result;
}

uint64_t sub_1D594BC28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D594BC30);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D594BC34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D594BC3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationData.CodingKeys()
{
  return &type metadata for NotificationData.CodingKeys;
}

unint64_t sub_1D594BC5C()
{
  unint64_t result;

  result = qword_1EFF4DD50;
  if (!qword_1EFF4DD50)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACE5AC, &type metadata for NotificationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4DD50);
  }
  return result;
}

unint64_t sub_1D594BCA4()
{
  unint64_t result;

  result = qword_1EFF4DD58;
  if (!qword_1EFF4DD58)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACE51C, &type metadata for NotificationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4DD58);
  }
  return result;
}

unint64_t sub_1D594BCEC()
{
  unint64_t result;

  result = qword_1EFF4DD60;
  if (!qword_1EFF4DD60)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACE544, &type metadata for NotificationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4DD60);
  }
  return result;
}

uint64_t sub_1D594BD30(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6163696669746F6ELL && a2 == 0xEE0044496E6F6974;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AF0A70 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x68437265646E6573 && a2 == 0xEF44496C656E6E61 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6843656372756F73 && a2 == 0xEF44496C656E6E61 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AF0A90 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AF0AB0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001D5AF0AD0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t FCRelativePriority.analyticsPriority.getter@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  if ((unint64_t)(result + 1) >= 4)
  {
    type metadata accessor for FCRelativePriority(0);
    result = sub_1D5AAEE14();
    __break(1u);
  }
  else
  {
    *a2 = result + 1;
  }
  return result;
}

uint64_t sub_1D594C0A0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CCF78, MEMORY[0x1E0CF8078]);
}

uint64_t static EOAGroupExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(qword_1ED9CCF98, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCF78, a1);
}

uint64_t sub_1D594C0E0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CD800, MEMORY[0x1E0CF8380]);
}

uint64_t static EOAGroupExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CD4B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CD800, a1);
}

uint64_t EOAGroupExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t EOAGroupExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*EOAGroupExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t EOAGroupExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for EOAGroupExposureEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for EOAGroupExposureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CA880);
}

uint64_t EOAGroupExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAGroupExposureEvent.timedData.modify())(_QWORD)
{
  type metadata accessor for EOAGroupExposureEvent(0);
  return nullsub_1;
}

uint64_t EOAGroupExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAGroupExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAGroupExposureEvent.groupData.modify())(_QWORD)
{
  type metadata accessor for EOAGroupExposureEvent(0);
  return nullsub_1;
}

uint64_t EOAGroupExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAGroupExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAGroupExposureEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for EOAGroupExposureEvent(0);
  return nullsub_1;
}

uint64_t EOAGroupExposureEvent.hostArticleViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAGroupExposureEvent.hostArticleViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAGroupExposureEvent.hostArticleViewData.modify())(_QWORD)
{
  type metadata accessor for EOAGroupExposureEvent(0);
  return nullsub_1;
}

uint64_t EOAGroupExposureEvent.hostArticleNewsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAGroupExposureEvent.hostArticleNewsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAGroupExposureEvent.hostArticleNewsArticleData.modify())(_QWORD)
{
  type metadata accessor for EOAGroupExposureEvent(0);
  return nullsub_1;
}

uint64_t EOAGroupExposureEvent.hostArticleChannelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAGroupExposureEvent.hostArticleChannelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAGroupExposureEvent.hostArticleChannelData.modify())(_QWORD)
{
  type metadata accessor for EOAGroupExposureEvent(0);
  return nullsub_1;
}

uint64_t EOAGroupExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAGroupExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAGroupExposureEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for EOAGroupExposureEvent(0);
  return nullsub_1;
}

uint64_t EOAGroupExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for EOAGroupExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v2, v14);
  v15 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v2, v16);
  v17 = a1 + v4[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v2, v18);
}

uint64_t EOAGroupExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t EOAGroupExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for EOAGroupExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for EOAGroupExposureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CA7D8);
}

uint64_t EOAGroupExposureEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent.Model(0) + 24);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22 = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  v23 = *(_QWORD *)(v3 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(v3 + 128);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D5802B14((uint64_t)v16);
}

uint64_t EOAGroupExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent.Model(0) + 28);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t EOAGroupExposureEvent.Model.hostArticleViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent.Model(0) + 32));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t EOAGroupExposureEvent.Model.hostArticleNewsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent.Model(0) + 36);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t EOAGroupExposureEvent.Model.hostArticleChannelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent.Model(0) + 40);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t EOAGroupExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent.Model(0) + 44));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 EOAGroupExposureEvent.Model.init(eventData:timedData:groupData:feedData:hostArticleViewData:hostArticleNewsArticleData:hostArticleChannelData:userBundleSubscriptionContextData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, __int128 *a6@<X5>, uint64_t *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  __n128 result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51;
  __n128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _BYTE v58[23];

  v48 = a3[6];
  v49 = a3[7];
  v50 = *((_QWORD *)a3 + 16);
  v44 = a3[2];
  v45 = a3[3];
  v46 = a3[4];
  v47 = a3[5];
  v42 = *a3;
  v43 = a3[1];
  v12 = *a4;
  v13 = *((_QWORD *)a4 + 1);
  v14 = *((_QWORD *)a4 + 2);
  v15 = *a5;
  v16 = a5[1];
  v57 = a6[6];
  *(_OWORD *)v58 = a6[7];
  *(_QWORD *)&v58[15] = *(_QWORD *)((char *)a6 + 127);
  v53 = a6[2];
  v54 = a6[3];
  v55 = a6[4];
  v56 = a6[5];
  v51 = *a6;
  v52 = (__n128)a6[1];
  v32 = a7[1];
  v33 = *a7;
  v30 = *((_BYTE *)a7 + 17);
  v31 = *((_BYTE *)a7 + 16);
  v17 = a7[4];
  v29 = a7[3];
  v41 = *a8;
  v39 = *((_QWORD *)a8 + 2);
  v40 = *((_QWORD *)a8 + 1);
  v37 = a8[25];
  v38 = a8[24];
  v35 = *((_QWORD *)a8 + 5);
  v36 = *((_QWORD *)a8 + 4);
  v34 = a8[48];
  v18 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a9, a1, v18);
  v19 = (int *)type metadata accessor for EOAGroupExposureEvent.Model(0);
  v20 = a9 + v19[5];
  v21 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a2, v21);
  v22 = a9 + v19[6];
  *(_OWORD *)(v22 + 32) = v44;
  *(_OWORD *)(v22 + 48) = v45;
  *(_OWORD *)v22 = v42;
  *(_OWORD *)(v22 + 16) = v43;
  *(_QWORD *)(v22 + 128) = v50;
  *(_OWORD *)(v22 + 96) = v48;
  *(_OWORD *)(v22 + 112) = v49;
  *(_OWORD *)(v22 + 64) = v46;
  *(_OWORD *)(v22 + 80) = v47;
  v23 = a9 + v19[7];
  *(_BYTE *)v23 = v12;
  *(_QWORD *)(v23 + 8) = v13;
  *(_QWORD *)(v23 + 16) = v14;
  v24 = (_QWORD *)(a9 + v19[8]);
  *v24 = v15;
  v24[1] = v16;
  v25 = a9 + v19[9];
  *(_OWORD *)(v25 + 96) = v57;
  *(_OWORD *)(v25 + 112) = *(_OWORD *)v58;
  *(_QWORD *)(v25 + 127) = *(_QWORD *)&v58[15];
  *(_OWORD *)(v25 + 32) = v53;
  *(_OWORD *)(v25 + 48) = v54;
  *(_OWORD *)(v25 + 64) = v55;
  *(_OWORD *)(v25 + 80) = v56;
  result = v52;
  *(_OWORD *)v25 = v51;
  *(__n128 *)(v25 + 16) = v52;
  v27 = a9 + v19[10];
  *(_QWORD *)v27 = v33;
  *(_QWORD *)(v27 + 8) = v32;
  *(_BYTE *)(v27 + 16) = v31;
  *(_BYTE *)(v27 + 17) = v30;
  *(_QWORD *)(v27 + 24) = v29;
  *(_QWORD *)(v27 + 32) = v17;
  v28 = a9 + v19[11];
  *(_BYTE *)v28 = v41;
  *(_QWORD *)(v28 + 8) = v40;
  *(_QWORD *)(v28 + 16) = v39;
  *(_BYTE *)(v28 + 24) = v38;
  *(_BYTE *)(v28 + 25) = v37;
  *(_QWORD *)(v28 + 32) = v36;
  *(_QWORD *)(v28 + 40) = v35;
  *(_BYTE *)(v28 + 48) = v34;
  return result;
}

uint64_t sub_1D594CEC8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D594CF00 + 4 * byte_1D5ACE630[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D594CF00()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D594CF14()
{
  return 0x74614470756F7267;
}

uint64_t sub_1D594CF28()
{
  return 0x6174614464656566;
}

unint64_t sub_1D594CF40()
{
  return 0xD000000000000013;
}

unint64_t sub_1D594CF5C()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1D594CFAC()
{
  unsigned __int8 *v0;

  return sub_1D594CEC8(*v0);
}

uint64_t sub_1D594CFB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59505D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D594CFD8()
{
  sub_1D594D3FC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D594D000()
{
  sub_1D594D3FC();
  return sub_1D5AAEEE0();
}

uint64_t EOAGroupExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _BYTE v48[24];
  char v49;

  v3 = v1;
  sub_1D594DB9C(0, &qword_1EFF4DD68, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v37 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D594D3FC();
  sub_1D5AAEEC8();
  v42[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for EOAGroupExposureEvent.Model(0);
    v49 = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = v3 + v10[6];
    v12 = *(_OWORD *)(v11 + 96);
    *(_OWORD *)v48 = *(_OWORD *)(v11 + 112);
    *(_QWORD *)&v48[16] = *(_QWORD *)(v11 + 128);
    v13 = *(_OWORD *)(v11 + 48);
    v43 = *(_OWORD *)(v11 + 32);
    v44 = v13;
    v14 = *(_OWORD *)(v11 + 64);
    v46 = *(_OWORD *)(v11 + 80);
    v47 = v12;
    v45 = v14;
    v15 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)v42 = *(_OWORD *)v11;
    *(_OWORD *)&v42[16] = v15;
    LOBYTE(v40) = 2;
    sub_1D57C5FEC();
    sub_1D5AAED6C();
    v16 = v3 + v10[7];
    v42[0] = *(_BYTE *)v16;
    *(_OWORD *)&v42[8] = *(_OWORD *)(v16 + 8);
    LOBYTE(v40) = 3;
    sub_1D57C65D4();
    sub_1D5AAED6C();
    v17 = (uint64_t *)(v3 + v10[8]);
    v19 = *v17;
    v18 = v17[1];
    v40 = v19;
    v41 = v18;
    v39 = 4;
    sub_1D57CA658();
    sub_1D5AAED6C();
    v20 = v3 + v10[9];
    v21 = *(_OWORD *)(v20 + 96);
    *(_OWORD *)v48 = *(_OWORD *)(v20 + 112);
    *(_QWORD *)&v48[15] = *(_QWORD *)(v20 + 127);
    v22 = *(_OWORD *)(v20 + 48);
    v43 = *(_OWORD *)(v20 + 32);
    v44 = v22;
    v23 = *(_OWORD *)(v20 + 64);
    v46 = *(_OWORD *)(v20 + 80);
    v47 = v21;
    v45 = v23;
    v24 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)v42 = *(_OWORD *)v20;
    *(_OWORD *)&v42[16] = v24;
    v38 = 5;
    sub_1D57CB940();
    sub_1D5AAED6C();
    v25 = (uint64_t *)(v3 + v10[10]);
    v26 = *v25;
    v27 = v25[1];
    v28 = *((_BYTE *)v25 + 16);
    v29 = *((_BYTE *)v25 + 17);
    v31 = v25[3];
    v30 = v25[4];
    *(_QWORD *)v42 = v26;
    *(_QWORD *)&v42[8] = v27;
    v42[16] = v28;
    v42[17] = v29;
    *(_QWORD *)&v42[24] = v31;
    *(_QWORD *)&v43 = v30;
    v38 = 6;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v32 = v3 + v10[11];
    v33 = *(_BYTE *)(v32 + 24);
    v34 = *(_BYTE *)(v32 + 25);
    v35 = *(_BYTE *)(v32 + 48);
    v42[0] = *(_BYTE *)v32;
    *(_OWORD *)&v42[8] = *(_OWORD *)(v32 + 8);
    v42[24] = v33;
    v42[25] = v34;
    v43 = *(_OWORD *)(v32 + 32);
    LOBYTE(v44) = v35;
    v38 = 7;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D594D3FC()
{
  unint64_t result;

  result = qword_1EFF4DD70;
  if (!qword_1EFF4DD70)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACE8C4, &type metadata for EOAGroupExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4DD70);
  }
  return result;
}

uint64_t EOAGroupExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  char v58;
  char v59;
  char v60;
  _OWORD v61[7];
  _BYTE v62[23];
  char v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;

  v45[0] = a2;
  v49 = sub_1D5AADFB0();
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v4 = (char *)v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D5AADF98();
  v48 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D594DB9C(0, &qword_1EFF4DD78, MEMORY[0x1E0DED048]);
  v46 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v45 - v10;
  v52 = type metadata accessor for EOAGroupExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v52);
  v53 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1D594D3FC();
  v50 = v11;
  v14 = v73;
  sub_1D5AAEEB0();
  v45[1] = v5;
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  v15 = v9;
  LOBYTE(v64) = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v16 = (uint64_t)v53;
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v53, v7, v5);
  LOBYTE(v64) = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v17 = v4;
  v18 = v49;
  sub_1D5AAECD0();
  v19 = (int *)v52;
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v16 + *(int *)(v52 + 20), v17, v18);
  v63 = 2;
  sub_1D57C5FA8();
  sub_1D5AAECD0();
  v20 = v16 + v19[6];
  v21 = v71;
  *(_OWORD *)(v20 + 96) = v70;
  *(_OWORD *)(v20 + 112) = v21;
  *(_QWORD *)(v20 + 128) = v72;
  v22 = v67;
  *(_OWORD *)(v20 + 32) = v66;
  *(_OWORD *)(v20 + 48) = v22;
  v23 = v69;
  *(_OWORD *)(v20 + 64) = v68;
  *(_OWORD *)(v20 + 80) = v23;
  v24 = v65;
  *(_OWORD *)v20 = v64;
  *(_OWORD *)(v20 + 16) = v24;
  LOBYTE(v54) = 3;
  sub_1D57C6590();
  sub_1D5AAECD0();
  v25 = (uint64_t)v51;
  v26 = v16 + v19[7];
  *(_BYTE *)v26 = v61[0];
  *(_OWORD *)(v26 + 8) = *(_OWORD *)((char *)v61 + 8);
  LOBYTE(v54) = 4;
  sub_1D57CA614();
  sub_1D5AAECD0();
  v27 = *((_QWORD *)&v61[0] + 1);
  v28 = (_QWORD *)(v16 + v19[8]);
  *v28 = *(_QWORD *)&v61[0];
  v28[1] = v27;
  v60 = 5;
  sub_1D57CB8FC();
  sub_1D5AAECD0();
  v29 = v16 + v19[9];
  v30 = v61[5];
  v31 = *(_OWORD *)v62;
  *(_OWORD *)(v29 + 96) = v61[6];
  *(_OWORD *)(v29 + 112) = v31;
  *(_QWORD *)(v29 + 127) = *(_QWORD *)&v62[15];
  v32 = v61[3];
  *(_OWORD *)(v29 + 32) = v61[2];
  *(_OWORD *)(v29 + 48) = v32;
  *(_OWORD *)(v29 + 64) = v61[4];
  *(_OWORD *)(v29 + 80) = v30;
  v33 = v61[1];
  *(_OWORD *)v29 = v61[0];
  *(_OWORD *)(v29 + 16) = v33;
  v59 = 6;
  sub_1D57CB874();
  sub_1D5AAECD0();
  v34 = v55;
  v35 = BYTE8(v55);
  v36 = BYTE9(v55);
  v37 = v56;
  v38 = v57;
  v39 = v16 + v19[10];
  *(_QWORD *)v39 = v54;
  *(_QWORD *)(v39 + 8) = v34;
  *(_BYTE *)(v39 + 16) = v35;
  *(_BYTE *)(v39 + 17) = v36;
  *(_QWORD *)(v39 + 24) = v37;
  *(_QWORD *)(v39 + 32) = v38;
  v59 = 7;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v50, v46);
  v40 = v56;
  v41 = BYTE1(v56);
  v42 = v58;
  v43 = v16 + v19[11];
  *(_BYTE *)v43 = v54;
  *(_OWORD *)(v43 + 8) = v55;
  *(_BYTE *)(v43 + 24) = v40;
  *(_BYTE *)(v43 + 25) = v41;
  *(_OWORD *)(v43 + 32) = v57;
  *(_BYTE *)(v43 + 48) = v42;
  sub_1D594DBF8(v16, v45[0]);
  __swift_destroy_boxed_opaque_existential_1(v25);
  return sub_1D594DC3C(v16);
}

void sub_1D594DB9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D594D3FC();
    v7 = a3(a1, &type metadata for EOAGroupExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D594DBF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EOAGroupExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D594DC3C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EOAGroupExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D594DC78@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EOAGroupExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D594DC8C(_QWORD *a1)
{
  return EOAGroupExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D594DCA0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(qword_1ED9CCF98, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCF78, a1);
}

uint64_t sub_1D594DCC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CD4B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CD800, a1);
}

uint64_t sub_1D594DCE8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v4, v15);
  v16 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v4, v17);
  v18 = a2 + a1[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v4, v19);
}

uint64_t *initializeBufferWithCopyOfBuffer for EOAGroupExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for EOAGroupExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

uint64_t initializeWithCopy for EOAGroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for EOAGroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for EOAGroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for EOAGroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for EOAGroupExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D594ECC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                v8 = v19;
                v12 = *(_QWORD *)(v19 - 8);
                v13 = a3[11];
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for EOAGroupExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D594EED8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                v10 = v21;
                v14 = *(_QWORD *)(v21 - 8);
                v15 = a4[11];
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D594F0EC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                if (v7 <= 0x3F)
                  swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for EOAGroupExposureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v42 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v42 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *(_WORD *)v14 = *(_WORD *)v15;
    v16 = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
    *((_QWORD *)v14 + 2) = v16;
    *((_QWORD *)v14 + 3) = *((_QWORD *)v15 + 3);
    v17 = *((_QWORD *)v15 + 5);
    *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
    *((_QWORD *)v14 + 5) = v17;
    v18 = *((_QWORD *)v15 + 7);
    *((_QWORD *)v14 + 6) = *((_QWORD *)v15 + 6);
    *((_QWORD *)v14 + 7) = v18;
    v44 = *((_QWORD *)v15 + 9);
    *((_QWORD *)v14 + 8) = *((_QWORD *)v15 + 8);
    *((_QWORD *)v14 + 9) = v44;
    v14[80] = v15[80];
    v19 = *((_QWORD *)v15 + 12);
    *((_QWORD *)v14 + 11) = *((_QWORD *)v15 + 11);
    *((_QWORD *)v14 + 12) = v19;
    *((_QWORD *)v14 + 13) = *((_QWORD *)v15 + 13);
    v14[112] = v15[112];
    v47 = *((_QWORD *)v15 + 16);
    *((_QWORD *)v14 + 15) = *((_QWORD *)v15 + 15);
    *((_QWORD *)v14 + 16) = v47;
    v20 = (char *)a1 + v13;
    v21 = (char *)a2 + v13;
    *v20 = *v21;
    v46 = *((_QWORD *)v21 + 2);
    *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
    *((_QWORD *)v20 + 2) = v46;
    v22 = a3[8];
    v23 = a3[9];
    v24 = (uint64_t *)((char *)a1 + v22);
    v25 = (uint64_t *)((char *)a2 + v22);
    v45 = v25[1];
    *v24 = *v25;
    v24[1] = v45;
    v26 = (char *)a1 + v23;
    v27 = (char *)a2 + v23;
    *(_QWORD *)v26 = *(_QWORD *)v27;
    v26[8] = v27[8];
    v28 = *((_QWORD *)v27 + 3);
    *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
    *((_QWORD *)v26 + 3) = v28;
    v26[32] = v27[32];
    v26[56] = v27[56];
    v29 = *((_QWORD *)v27 + 6);
    *((_QWORD *)v26 + 5) = *((_QWORD *)v27 + 5);
    *((_QWORD *)v26 + 6) = v29;
    v26[57] = v27[57];
    v30 = *((_QWORD *)v27 + 9);
    v31 = *((_QWORD *)v27 + 8);
    v26[80] = v27[80];
    *((_QWORD *)v26 + 8) = v31;
    *((_QWORD *)v26 + 9) = v30;
    *(_OWORD *)(v26 + 88) = *(_OWORD *)(v27 + 88);
    *((_QWORD *)v26 + 13) = *((_QWORD *)v27 + 13);
    v26[112] = v27[112];
    *((_QWORD *)v26 + 15) = *((_QWORD *)v27 + 15);
    *((_DWORD *)v26 + 32) = *((_DWORD *)v27 + 32);
    v26[132] = v27[132];
    v26[133] = v27[133];
    v26[134] = v27[134];
    v32 = a3[10];
    v33 = a3[11];
    v34 = (char *)a1 + v32;
    v35 = (char *)a2 + v32;
    v36 = *((_QWORD *)v35 + 1);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *((_QWORD *)v34 + 1) = v36;
    v34[16] = v35[16];
    v34[17] = v35[17];
    v37 = *((_QWORD *)v35 + 4);
    *((_QWORD *)v34 + 3) = *((_QWORD *)v35 + 3);
    *((_QWORD *)v34 + 4) = v37;
    v38 = (char *)a1 + v33;
    v39 = (char *)a2 + v33;
    *v38 = *v39;
    v40 = *((_QWORD *)v39 + 2);
    *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
    *((_QWORD *)v38 + 2) = v40;
    v38[24] = v39[24];
    v38[25] = v39[25];
    v41 = *((_QWORD *)v39 + 5);
    *((_QWORD *)v38 + 4) = *((_QWORD *)v39 + 4);
    *((_QWORD *)v38 + 5) = v41;
    v38[48] = v39[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EOAGroupExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EOAGroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_WORD *)v13 = *(_WORD *)v14;
  v15 = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  v16 = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 40) = v16;
  v17 = *(_QWORD *)(v14 + 56);
  *(_QWORD *)(v13 + 48) = *(_QWORD *)(v14 + 48);
  *(_QWORD *)(v13 + 56) = v17;
  v42 = *(_QWORD *)(v14 + 72);
  *(_QWORD *)(v13 + 64) = *(_QWORD *)(v14 + 64);
  *(_QWORD *)(v13 + 72) = v42;
  *(_BYTE *)(v13 + 80) = *(_BYTE *)(v14 + 80);
  v18 = *(_QWORD *)(v14 + 96);
  *(_QWORD *)(v13 + 88) = *(_QWORD *)(v14 + 88);
  *(_QWORD *)(v13 + 96) = v18;
  *(_QWORD *)(v13 + 104) = *(_QWORD *)(v14 + 104);
  *(_BYTE *)(v13 + 112) = *(_BYTE *)(v14 + 112);
  v45 = *(_QWORD *)(v14 + 128);
  *(_QWORD *)(v13 + 120) = *(_QWORD *)(v14 + 120);
  *(_QWORD *)(v13 + 128) = v45;
  v19 = a1 + v12;
  v20 = a2 + v12;
  *(_BYTE *)v19 = *(_BYTE *)v20;
  v44 = *(_QWORD *)(v20 + 16);
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  *(_QWORD *)(v19 + 16) = v44;
  v21 = a3[8];
  v22 = a3[9];
  v23 = (_QWORD *)(a1 + v21);
  v24 = (_QWORD *)(a2 + v21);
  v43 = v24[1];
  *v23 = *v24;
  v23[1] = v43;
  v25 = a1 + v22;
  v26 = a2 + v22;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  v27 = *(_QWORD *)(v26 + 24);
  *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
  *(_QWORD *)(v25 + 24) = v27;
  *(_BYTE *)(v25 + 32) = *(_BYTE *)(v26 + 32);
  *(_BYTE *)(v25 + 56) = *(_BYTE *)(v26 + 56);
  v28 = *(_QWORD *)(v26 + 48);
  *(_QWORD *)(v25 + 40) = *(_QWORD *)(v26 + 40);
  *(_QWORD *)(v25 + 48) = v28;
  *(_BYTE *)(v25 + 57) = *(_BYTE *)(v26 + 57);
  v29 = *(_QWORD *)(v26 + 72);
  v30 = *(_QWORD *)(v26 + 64);
  *(_BYTE *)(v25 + 80) = *(_BYTE *)(v26 + 80);
  *(_QWORD *)(v25 + 64) = v30;
  *(_QWORD *)(v25 + 72) = v29;
  *(_OWORD *)(v25 + 88) = *(_OWORD *)(v26 + 88);
  *(_QWORD *)(v25 + 104) = *(_QWORD *)(v26 + 104);
  *(_BYTE *)(v25 + 112) = *(_BYTE *)(v26 + 112);
  *(_QWORD *)(v25 + 120) = *(_QWORD *)(v26 + 120);
  *(_DWORD *)(v25 + 128) = *(_DWORD *)(v26 + 128);
  *(_BYTE *)(v25 + 132) = *(_BYTE *)(v26 + 132);
  *(_BYTE *)(v25 + 133) = *(_BYTE *)(v26 + 133);
  *(_BYTE *)(v25 + 134) = *(_BYTE *)(v26 + 134);
  v31 = a3[10];
  v32 = a3[11];
  v33 = a1 + v31;
  v34 = a2 + v31;
  v35 = *(_QWORD *)(v34 + 8);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_QWORD *)(v33 + 8) = v35;
  *(_BYTE *)(v33 + 16) = *(_BYTE *)(v34 + 16);
  *(_BYTE *)(v33 + 17) = *(_BYTE *)(v34 + 17);
  v36 = *(_QWORD *)(v34 + 32);
  *(_QWORD *)(v33 + 24) = *(_QWORD *)(v34 + 24);
  *(_QWORD *)(v33 + 32) = v36;
  v37 = a1 + v32;
  v38 = a2 + v32;
  *(_BYTE *)v37 = *(_BYTE *)v38;
  v39 = *(_QWORD *)(v38 + 16);
  *(_QWORD *)(v37 + 8) = *(_QWORD *)(v38 + 8);
  *(_QWORD *)(v37 + 16) = v39;
  *(_BYTE *)(v37 + 24) = *(_BYTE *)(v38 + 24);
  *(_BYTE *)(v37 + 25) = *(_BYTE *)(v38 + 25);
  v40 = *(_QWORD *)(v38 + 40);
  *(_QWORD *)(v37 + 32) = *(_QWORD *)(v38 + 32);
  *(_QWORD *)(v37 + 40) = v40;
  *(_BYTE *)(v37 + 48) = *(_BYTE *)(v38 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EOAGroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_BYTE *)(v12 + 1) = *(_BYTE *)(a2 + v11 + 1);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v12 + 24) = *(_DWORD *)(v13 + 24);
  *(_DWORD *)(v12 + 28) = *(_DWORD *)(v13 + 28);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v13 + 104);
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 104) = v14;
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_BYTE *)v16 = *(_BYTE *)v17;
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_BYTE *)v22 = *(_BYTE *)(a2 + v21);
  *(_DWORD *)(v22 + 4) = *(_DWORD *)(a2 + v21 + 4);
  *(_BYTE *)(v22 + 8) = *(_BYTE *)(a2 + v21 + 8);
  *(_QWORD *)(v22 + 16) = *(_QWORD *)(a2 + v21 + 16);
  *(_QWORD *)(v22 + 24) = *(_QWORD *)(a2 + v21 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v22 + 32) = *(_BYTE *)(v23 + 32);
  *(_QWORD *)(v22 + 40) = *(_QWORD *)(v23 + 40);
  v24 = *(_QWORD *)(v23 + 48);
  *(_BYTE *)(v22 + 56) = *(_BYTE *)(v23 + 56);
  *(_QWORD *)(v22 + 48) = v24;
  *(_BYTE *)(v22 + 57) = *(_BYTE *)(v23 + 57);
  *(_QWORD *)(v22 + 64) = *(_QWORD *)(v23 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(v23 + 72);
  *(_BYTE *)(v22 + 80) = *(_BYTE *)(v23 + 80);
  *(_QWORD *)(v22 + 72) = v25;
  *(_QWORD *)(v22 + 88) = *(_QWORD *)(v23 + 88);
  *(_QWORD *)(v22 + 96) = *(_QWORD *)(v23 + 96);
  *(_QWORD *)(v22 + 104) = *(_QWORD *)(v23 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v22 + 112) = *(_BYTE *)(v23 + 112);
  *(_QWORD *)(v22 + 120) = *(_QWORD *)(v23 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v22 + 128) = *(_BYTE *)(v23 + 128);
  *(_BYTE *)(v22 + 129) = *(_BYTE *)(v23 + 129);
  *(_BYTE *)(v22 + 130) = *(_BYTE *)(v23 + 130);
  *(_BYTE *)(v22 + 131) = *(_BYTE *)(v23 + 131);
  *(_BYTE *)(v22 + 132) = *(_BYTE *)(v23 + 132);
  *(_BYTE *)(v22 + 133) = *(_BYTE *)(v23 + 133);
  *(_BYTE *)(v22 + 134) = *(_BYTE *)(v23 + 134);
  v26 = a3[10];
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_QWORD *)v27 = *(_QWORD *)(a2 + v26);
  *(_QWORD *)(v27 + 8) = *(_QWORD *)(a2 + v26 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v27 + 16) = *(_BYTE *)(v28 + 16);
  *(_BYTE *)(v27 + 17) = *(_BYTE *)(v28 + 17);
  *(_QWORD *)(v27 + 24) = *(_QWORD *)(v28 + 24);
  *(_QWORD *)(v27 + 32) = *(_QWORD *)(v28 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = a3[11];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_BYTE *)v30 = *(_BYTE *)(a2 + v29);
  *(_QWORD *)(v30 + 8) = *(_QWORD *)(a2 + v29 + 8);
  *(_QWORD *)(v30 + 16) = *(_QWORD *)(a2 + v29 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v30 + 24) = *(_BYTE *)(v31 + 24);
  *(_BYTE *)(v30 + 25) = *(_BYTE *)(v31 + 25);
  *(_QWORD *)(v30 + 32) = *(_QWORD *)(v31 + 32);
  *(_QWORD *)(v30 + 40) = *(_QWORD *)(v31 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v30 + 48) = *(_BYTE *)(v31 + 48);
  return a1;
}

uint64_t initializeWithTake for EOAGroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)(v13 + 128) = *(_QWORD *)(v14 + 128);
  v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  v16 = *(_OWORD *)(v14 + 112);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(v14 + 96);
  *(_OWORD *)(v13 + 112) = v16;
  v17 = *(_OWORD *)(v14 + 80);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v14 + 64);
  *(_OWORD *)(v13 + 80) = v17;
  v18 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v18;
  v19 = a1 + v12;
  v20 = a2 + v12;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  v21 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(_OWORD *)(v23 + 48);
  *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
  *(_OWORD *)(v22 + 48) = v24;
  v25 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v25;
  *(_QWORD *)(v22 + 127) = *(_QWORD *)(v23 + 127);
  v26 = *(_OWORD *)(v23 + 112);
  *(_OWORD *)(v22 + 96) = *(_OWORD *)(v23 + 96);
  *(_OWORD *)(v22 + 112) = v26;
  v27 = *(_OWORD *)(v23 + 80);
  *(_OWORD *)(v22 + 64) = *(_OWORD *)(v23 + 64);
  *(_OWORD *)(v22 + 80) = v27;
  v28 = a3[10];
  v29 = a3[11];
  v30 = a1 + v28;
  v31 = a2 + v28;
  v32 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 16) = v32;
  *(_QWORD *)(v30 + 32) = *(_QWORD *)(v31 + 32);
  v33 = a1 + v29;
  v34 = a2 + v29;
  v35 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v35;
  *(_OWORD *)(v33 + 32) = *(_OWORD *)(v34 + 32);
  *(_BYTE *)(v33 + 48) = *(_BYTE *)(v34 + 48);
  return a1;
}

uint64_t assignWithTake for EOAGroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_WORD *)v12 = *(_WORD *)(a2 + v11);
  v14 = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 64);
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_QWORD *)(v12 + 64) = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  v16 = *(_QWORD *)(v13 + 96);
  *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 96) = v16;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_BYTE *)v18 = *(_BYTE *)v19;
  v21 = *(_QWORD *)(v19 + 8);
  v20 = *(_QWORD *)(v19 + 16);
  *(_QWORD *)(v18 + 8) = v21;
  *(_QWORD *)(v18 + 16) = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  v27 = a3[9];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_BYTE *)v28 = *(_BYTE *)(a2 + v27);
  *(_DWORD *)(v28 + 4) = *(_DWORD *)(a2 + v27 + 4);
  *(_BYTE *)(v28 + 8) = *(_BYTE *)(a2 + v27 + 8);
  v30 = *(_QWORD *)(a2 + v27 + 24);
  *(_QWORD *)(v28 + 16) = *(_QWORD *)(a2 + v27 + 16);
  *(_QWORD *)(v28 + 24) = v30;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v28 + 32) = *(_BYTE *)(v29 + 32);
  v31 = *(_QWORD *)(v29 + 48);
  *(_QWORD *)(v28 + 40) = *(_QWORD *)(v29 + 40);
  *(_QWORD *)(v28 + 48) = v31;
  *(_BYTE *)(v28 + 56) = *(_BYTE *)(v29 + 56);
  *(_BYTE *)(v28 + 57) = *(_BYTE *)(v29 + 57);
  *(_QWORD *)(v28 + 64) = *(_QWORD *)(v29 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v28 + 72) = *(_QWORD *)(v29 + 72);
  *(_BYTE *)(v28 + 80) = *(_BYTE *)(v29 + 80);
  *(_OWORD *)(v28 + 88) = *(_OWORD *)(v29 + 88);
  *(_QWORD *)(v28 + 104) = *(_QWORD *)(v29 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v28 + 112) = *(_BYTE *)(v29 + 112);
  *(_QWORD *)(v28 + 120) = *(_QWORD *)(v29 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v28 + 128) = *(_BYTE *)(v29 + 128);
  *(_BYTE *)(v28 + 129) = *(_BYTE *)(v29 + 129);
  *(_BYTE *)(v28 + 130) = *(_BYTE *)(v29 + 130);
  *(_BYTE *)(v28 + 131) = *(_BYTE *)(v29 + 131);
  *(_BYTE *)(v28 + 132) = *(_BYTE *)(v29 + 132);
  *(_BYTE *)(v28 + 133) = *(_BYTE *)(v29 + 133);
  *(_BYTE *)(v28 + 134) = *(_BYTE *)(v29 + 134);
  v32 = a3[10];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_QWORD *)(a2 + v32 + 8);
  *(_QWORD *)v33 = *(_QWORD *)(a2 + v32);
  *(_QWORD *)(v33 + 8) = v35;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v33 + 16) = *(_BYTE *)(v34 + 16);
  *(_BYTE *)(v33 + 17) = *(_BYTE *)(v34 + 17);
  v36 = *(_QWORD *)(v34 + 32);
  *(_QWORD *)(v33 + 24) = *(_QWORD *)(v34 + 24);
  *(_QWORD *)(v33 + 32) = v36;
  swift_bridgeObjectRelease();
  v37 = a3[11];
  v38 = a1 + v37;
  v39 = a2 + v37;
  *(_BYTE *)v38 = *(_BYTE *)v39;
  v40 = *(_QWORD *)(v39 + 16);
  *(_QWORD *)(v38 + 8) = *(_QWORD *)(v39 + 8);
  *(_QWORD *)(v38 + 16) = v40;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v38 + 24) = *(_BYTE *)(v39 + 24);
  *(_BYTE *)(v38 + 25) = *(_BYTE *)(v39 + 25);
  v41 = *(_QWORD *)(v39 + 40);
  *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
  *(_QWORD *)(v38 + 40) = v41;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v38 + 48) = *(_BYTE *)(v39 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for EOAGroupExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D595020C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 16);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for EOAGroupExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59502C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 16) = (a2 - 1);
  return result;
}

uint64_t sub_1D595036C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EOAGroupExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D5950478 + 4 * byte_1D5ACE63D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D59504AC + 4 * byte_1D5ACE638[v4]))();
}

uint64_t sub_1D59504AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59504B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59504BCLL);
  return result;
}

uint64_t sub_1D59504C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59504D0);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D59504D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59504DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EOAGroupExposureEvent.Model.CodingKeys()
{
  return &type metadata for EOAGroupExposureEvent.Model.CodingKeys;
}

unint64_t sub_1D59504FC()
{
  unint64_t result;

  result = qword_1EFF4DD80;
  if (!qword_1EFF4DD80)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACE89C, &type metadata for EOAGroupExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4DD80);
  }
  return result;
}

unint64_t sub_1D5950544()
{
  unint64_t result;

  result = qword_1EFF4DD88;
  if (!qword_1EFF4DD88)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACE80C, &type metadata for EOAGroupExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4DD88);
  }
  return result;
}

unint64_t sub_1D595058C()
{
  unint64_t result;

  result = qword_1EFF4DD90;
  if (!qword_1EFF4DD90)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACE834, &type metadata for EOAGroupExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4DD90);
  }
  return result;
}

uint64_t sub_1D59505D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AEEAF0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AEEB10 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEEB30 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t UserSubscriptionContextData.isPurchaser.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t UserSubscriptionContextData.isPurchaser.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*UserSubscriptionContextData.isPurchaser.modify())()
{
  return nullsub_1;
}

uint64_t UserSubscriptionContextData.purchaseSources.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UserSubscriptionContextData.purchaseSources.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*UserSubscriptionContextData.purchaseSources.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5950968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5950C98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D595098C()
{
  sub_1D57AEBB0();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59509B4()
{
  sub_1D57AEBB0();
  return sub_1D5AAEEE0();
}

uint64_t UserSubscriptionContextData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;
  _QWORD v13[2];
  char v14;
  char v15;

  sub_1D57AEA9C(0, &qword_1ED9CC838, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AEBB0();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v15 = 0;
    v10 = sub_1D5AAECAC();
    sub_1D57AEB5C();
    v14 = 1;
    sub_1D57AEAF8(&qword_1ED9CC690, (uint64_t (*)(void))sub_1D5950B70, MEMORY[0x1E0DEAF40]);
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v13[1];
    *(_BYTE *)a2 = v10 & 1;
    *(_QWORD *)(a2 + 8) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1D5950B70()
{
  unint64_t result;

  result = qword_1ED9C7F00;
  if (!qword_1ED9C7F00)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PurchaseSource, &type metadata for PurchaseSource);
    atomic_store(result, (unint64_t *)&qword_1ED9C7F00);
  }
  return result;
}

uint64_t sub_1D5950BB4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UserSubscriptionContextData.init(from:)(a1, a2);
}

uint64_t assignWithCopy for UserSubscriptionContextData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UserSubscriptionContextData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for UserSubscriptionContextData.CodingKeys()
{
  return &type metadata for UserSubscriptionContextData.CodingKeys;
}

unint64_t sub_1D5950C54()
{
  unint64_t result;

  result = qword_1EFF4DD98;
  if (!qword_1EFF4DD98)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACEA88, &type metadata for UserSubscriptionContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4DD98);
  }
  return result;
}

uint64_t sub_1D5950C98(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6168637275507369 && a2 == 0xEB00000000726573;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEF73656372756F53)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void ChannelDataFactory.createChannelData(for:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::Bool v8;
  unsigned __int8 v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  swift_getObjectType();
  v4 = objc_msgSend(a1, sel_identifier);
  v5 = sub_1D5AAE820();
  v7 = v6;

  v8 = FCChannelProviding.isAdSupported()();
  swift_getObjectType();
  v9 = FCBundleSubscriptionManagerType.bundleContainsChannel(_:)(a1);
  v10 = objc_msgSend(a1, sel_language);
  if (v10)
  {
    v11 = v10;
    v12 = sub_1D5AAE820();
    v14 = v13;

  }
  else
  {
    v12 = 0;
    v14 = 0xE000000000000000;
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v7;
  *(_BYTE *)(a2 + 16) = v8;
  *(_BYTE *)(a2 + 17) = v9 & 1;
  *(_QWORD *)(a2 + 24) = v12;
  *(_QWORD *)(a2 + 32) = v14;
}

void ChannelDataFactory.createChannelContextData(for:)(void *a1@<X0>, unsigned __int8 *a2@<X8>)
{
  uint64_t v2;
  char v5;
  unsigned __int8 v6;
  void *v7;
  id v8;
  unsigned __int8 v9;
  id v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  char v13;

  sub_1D5950FD4(v2, a1, &v13);
  v5 = v13;
  sub_1D5951120(a1, v2, &v12);
  v6 = v12;
  v7 = *(void **)(v2 + 32);
  v8 = objc_msgSend(a1, sel_identifier);
  if (!v8)
  {
    sub_1D5AAE820();
    v8 = (id)sub_1D5AAE7FC();
    swift_bridgeObjectRelease();
  }
  v9 = objc_msgSend(v7, sel_hasSubscriptionToTagID_, v8);

  v10 = objc_msgSend(a1, sel_identifier);
  if (!v10)
  {
    sub_1D5AAE820();
    v10 = (id)sub_1D5AAE7FC();
    swift_bridgeObjectRelease();
  }
  v11 = objc_msgSend(v7, sel_hasMutedSubscriptionForTagID_, v10);

  *a2 = v9;
  a2[1] = v11;
  a2[2] = v5;
  a2[3] = v6;
}

uint64_t sub_1D5950FD4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  void *v5;
  id v6;
  id v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  char v14;

  v5 = *(void **)(a1 + 24);
  swift_unknownObjectRetain();
  if (objc_msgSend(a2, sel_tagType) == (id)3)
  {
    v6 = objc_msgSend(a2, sel_asSection);
    if (!v6
      || (v7 = objc_msgSend(v6, sel_parentID), swift_unknownObjectRelease(), !v7))
    {
      result = swift_unknownObjectRelease();
LABEL_8:
      v14 = 2;
      goto LABEL_9;
    }
  }
  else
  {
    v7 = objc_msgSend(a2, sel_identifier);
  }
  v9 = sub_1D5AAE820();
  v11 = v10;

  v12 = objc_msgSend(v5, sel_purchasedTagIDs);
  v13 = sub_1D5AAE994();

  LOBYTE(v12) = sub_1D59512A4(v9, v11, v13);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
    goto LABEL_8;
  v14 = 1;
LABEL_9:
  *a3 = v14;
  return result;
}

void sub_1D5951120(id a1@<X1>, uint64_t a2@<X0>, _BYTE *a3@<X8>)
{
  void *v4;
  id v5;
  id v6;
  unint64_t v7;
  unsigned int v8;

  v4 = *(void **)(a2 + 24);
  v5 = objc_msgSend(a1, sel_identifier);
  if (!v5)
  {
    sub_1D5AAE820();
    v5 = (id)sub_1D5AAE7FC();
    swift_bridgeObjectRelease();
  }
  v6 = objc_msgSend(v4, sel_purchaseLookUpEntryForTagID_, v5);

  if (!v6)
  {
    LOBYTE(v8) = 0;
    goto LABEL_7;
  }
  v7 = (unint64_t)objc_msgSend(v6, sel_purchaseType);
  if (v7 < 3)
  {
    v8 = 0x30200u >> (8 * v7);

LABEL_7:
    *a3 = v8;
    return;
  }
  sub_1D5AAEBF8();
  __break(1u);
}

uint64_t ChannelDataFactory.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return v0;
}

uint64_t ChannelDataFactory.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t method lookup function for ChannelDataFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1D59512A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1D5AAEE80();
    sub_1D5AAE874();
    v6 = sub_1D5AAEE98();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1D5AAEDE4() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1D5AAEDE4() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1D59513D8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4DE00, MEMORY[0x1E0CF8078]);
}

uint64_t static ArticleViewResignEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47268, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4DE00, a1);
}

uint64_t sub_1D5951418(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4DE18, MEMORY[0x1E0CF8380]);
}

uint64_t static ArticleViewResignEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47270, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4DE18, a1);
}

uint64_t ArticleViewResignEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t ArticleViewResignEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ArticleViewResignEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleViewResignEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResignEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for ArticleViewResignEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C6B10);
}

uint64_t ArticleViewResignEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResignEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewResignEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewResignEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewResignEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResignEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewResignEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResignEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewResignEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewResignEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewResignEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResignEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewResignEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResignEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewResignEvent.orientationData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewResignEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewResignEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResignEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewResignEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResignEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewResignEvent.articleData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewResignEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewResignEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResignEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewResignEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResignEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewResignEvent.channelData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewResignEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewResignEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ArticleViewResignEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v2, v14);
}

uint64_t ArticleViewResignEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ArticleViewResignEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleViewResignEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ArticleViewResignEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, (uint64_t *)&unk_1ED9CADD8);
}

uint64_t ArticleViewResignEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for ArticleViewResignEvent.Model(0) + 24));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleViewResignEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ArticleViewResignEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t ArticleViewResignEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResignEvent.Model(0) + 32);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t ArticleViewResignEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResignEvent.Model(0) + 36);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 ArticleViewResignEvent.Model.init(eventData:viewData:userBundleSubscriptionContextData:orientationData:articleData:channelData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, __int16 *a4@<X3>, __int128 *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 result;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __n128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[23];

  v9 = *a2;
  v10 = a2[1];
  v11 = *((_WORD *)a2 + 8);
  v12 = *a3;
  v25 = *((_QWORD *)a3 + 2);
  v26 = *((_QWORD *)a3 + 1);
  v24 = a3[24];
  v13 = a3[25];
  v14 = *((_QWORD *)a3 + 4);
  v15 = *((_QWORD *)a3 + 5);
  v16 = a3[48];
  v27 = *a4;
  v40 = a5[6];
  *(_OWORD *)v41 = a5[7];
  *(_QWORD *)&v41[15] = *(_QWORD *)((char *)a5 + 127);
  v36 = a5[2];
  v37 = a5[3];
  v38 = a5[4];
  v39 = a5[5];
  v34 = *a5;
  v35 = (__n128)a5[1];
  v32 = a6[1];
  v33 = *a6;
  v30 = *((_BYTE *)a6 + 17);
  v31 = *((_BYTE *)a6 + 16);
  v28 = a6[4];
  v29 = a6[3];
  v17 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a7, a1, v17);
  v18 = (int *)type metadata accessor for ArticleViewResignEvent.Model(0);
  v19 = a7 + v18[5];
  *(_QWORD *)v19 = v9;
  *(_QWORD *)(v19 + 8) = v10;
  *(_WORD *)(v19 + 16) = v11;
  v20 = a7 + v18[6];
  *(_BYTE *)v20 = v12;
  *(_QWORD *)(v20 + 8) = v26;
  *(_QWORD *)(v20 + 16) = v25;
  *(_BYTE *)(v20 + 24) = v24;
  *(_BYTE *)(v20 + 25) = v13;
  *(_QWORD *)(v20 + 32) = v14;
  *(_QWORD *)(v20 + 40) = v15;
  *(_BYTE *)(v20 + 48) = v16;
  *(_WORD *)(a7 + v18[7]) = v27;
  v21 = a7 + v18[8];
  *(_OWORD *)(v21 + 96) = v40;
  *(_OWORD *)(v21 + 112) = *(_OWORD *)v41;
  *(_QWORD *)(v21 + 127) = *(_QWORD *)&v41[15];
  *(_OWORD *)(v21 + 32) = v36;
  *(_OWORD *)(v21 + 48) = v37;
  *(_OWORD *)(v21 + 64) = v38;
  *(_OWORD *)(v21 + 80) = v39;
  result = v35;
  *(_OWORD *)v21 = v34;
  *(__n128 *)(v21 + 16) = v35;
  v23 = a7 + v18[9];
  *(_QWORD *)v23 = v33;
  *(_QWORD *)(v23 + 8) = v32;
  *(_BYTE *)(v23 + 16) = v31;
  *(_BYTE *)(v23 + 17) = v30;
  *(_QWORD *)(v23 + 24) = v29;
  *(_QWORD *)(v23 + 32) = v28;
  return result;
}

uint64_t sub_1D5951EC4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5951EF8 + 4 * byte_1D5ACEB50[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5951EF8()
{
  return 0x6174614477656976;
}

unint64_t sub_1D5951F10()
{
  return 0xD000000000000021;
}

uint64_t sub_1D5951F2C()
{
  return 0x7461746E6569726FLL;
}

uint64_t sub_1D5951F50()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D5951F84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59548E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5951FA8()
{
  sub_1D59522F0();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5951FD0()
{
  sub_1D59522F0();
  return sub_1D5AAEEE0();
}

uint64_t ArticleViewResignEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char v32;
  _BYTE v33[32];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[23];
  char v40;
  __int16 v41;

  v3 = v1;
  sub_1D59528F8(0, &qword_1EFF4DE30, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59522F0();
  sub_1D5AAEEC8();
  v33[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for ArticleViewResignEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    *(_QWORD *)v33 = v12;
    *(_QWORD *)&v33[8] = v13;
    *(_WORD *)&v33[16] = (_WORD)v11;
    LOBYTE(v41) = 1;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v14 = v3 + v10[6];
    v15 = *(_BYTE *)(v14 + 24);
    v16 = *(_BYTE *)(v14 + 25);
    v17 = *(_BYTE *)(v14 + 48);
    v33[0] = *(_BYTE *)v14;
    *(_OWORD *)&v33[8] = *(_OWORD *)(v14 + 8);
    v33[24] = v15;
    v33[25] = v16;
    v34 = *(_OWORD *)(v14 + 32);
    LOBYTE(v35) = v17;
    LOBYTE(v41) = 2;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v41 = *(_WORD *)(v3 + v10[7]);
    v40 = 3;
    sub_1D57CA4E4();
    sub_1D5AAED6C();
    v18 = v3 + v10[8];
    v19 = *(_OWORD *)(v18 + 112);
    v38 = *(_OWORD *)(v18 + 96);
    *(_OWORD *)v39 = v19;
    *(_QWORD *)&v39[15] = *(_QWORD *)(v18 + 127);
    v20 = *(_OWORD *)(v18 + 48);
    v34 = *(_OWORD *)(v18 + 32);
    v35 = v20;
    v21 = *(_OWORD *)(v18 + 80);
    v36 = *(_OWORD *)(v18 + 64);
    v37 = v21;
    v22 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)v33 = *(_OWORD *)v18;
    *(_OWORD *)&v33[16] = v22;
    v32 = 4;
    sub_1D57CB940();
    sub_1D5AAED6C();
    v23 = (uint64_t *)(v3 + v10[9]);
    v24 = *v23;
    v25 = v23[1];
    v26 = *((_BYTE *)v23 + 16);
    v27 = *((_BYTE *)v23 + 17);
    v29 = v23[3];
    v28 = v23[4];
    *(_QWORD *)v33 = v24;
    *(_QWORD *)&v33[8] = v25;
    v33[16] = v26;
    v33[17] = v27;
    *(_QWORD *)&v33[24] = v29;
    *(_QWORD *)&v34 = v28;
    v32 = 5;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D59522F0()
{
  unint64_t result;

  result = qword_1EFF4DE38;
  if (!qword_1EFF4DE38)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACEDAC, &type metadata for ArticleViewResignEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4DE38);
  }
  return result;
}

uint64_t ArticleViewResignEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  _BYTE v49[32];
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  _OWORD v55[3];
  char *v56;

  v36 = a2;
  v3 = sub_1D5AADF98();
  v37 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v39 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59528F8(0, &qword_1EFF4DE40, MEMORY[0x1E0DED048]);
  v38 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - v7;
  v9 = (int *)type metadata accessor for ArticleViewResignEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59522F0();
  v40 = v8;
  v12 = v56;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v14 = v37;
  v56 = v11;
  v49[0] = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v15 = v3;
  v16 = (uint64_t)v56;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v56, v39, v15);
  LOBYTE(v42) = 1;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v17 = *(_QWORD *)&v49[8];
  v18 = *(_WORD *)&v49[16];
  v19 = v16 + v9[5];
  *(_QWORD *)v19 = *(_QWORD *)v49;
  *(_QWORD *)(v19 + 8) = v17;
  *(_WORD *)(v19 + 16) = v18;
  LOBYTE(v42) = 2;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v20 = v49[24];
  v21 = v49[25];
  v22 = v51;
  v23 = v16 + v9[6];
  *(_BYTE *)v23 = v49[0];
  *(_OWORD *)(v23 + 8) = *(_OWORD *)&v49[8];
  *(_BYTE *)(v23 + 24) = v20;
  *(_BYTE *)(v23 + 25) = v21;
  *(_OWORD *)(v23 + 32) = v50;
  *(_BYTE *)(v23 + 48) = v22;
  LOBYTE(v42) = 3;
  sub_1D57CA4A0();
  sub_1D5AAECD0();
  *(_WORD *)(v16 + v9[7]) = *(_WORD *)v49;
  v48 = 4;
  sub_1D57CB8FC();
  sub_1D5AAECD0();
  v24 = v16 + MEMORY[0x20];
  v25 = v53;
  v26 = v55[0];
  *(_OWORD *)(v24 + 96) = v54;
  *(_OWORD *)(v24 + 112) = v26;
  *(_QWORD *)(v24 + 127) = *(_QWORD *)((char *)v55 + 15);
  v27 = v51;
  *(_OWORD *)(v24 + 32) = v50;
  *(_OWORD *)(v24 + 48) = v27;
  *(_OWORD *)(v24 + 64) = v52;
  *(_OWORD *)(v24 + 80) = v25;
  v28 = *(_OWORD *)&v49[16];
  *(_OWORD *)v24 = *(_OWORD *)v49;
  *(_OWORD *)(v24 + 16) = v28;
  v41 = 5;
  sub_1D57CB874();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v40, v38);
  v29 = v43;
  v30 = v44;
  v31 = v45;
  v32 = v46;
  v33 = v47;
  v34 = v16 + MEMORY[0x24];
  *(_QWORD *)v34 = v42;
  *(_QWORD *)(v34 + 8) = v29;
  *(_BYTE *)(v34 + 16) = v30;
  *(_BYTE *)(v34 + 17) = v31;
  *(_QWORD *)(v34 + 24) = v32;
  *(_QWORD *)(v34 + 32) = v33;
  sub_1D5952954(v16, v36);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1D5952998(v16);
}

void sub_1D59528F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59522F0();
    v7 = a3(a1, &type metadata for ArticleViewResignEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5952954(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArticleViewResignEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5952998(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArticleViewResignEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D59529D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleViewResignEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D59529E8(_QWORD *a1)
{
  return ArticleViewResignEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D59529FC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47268, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4DE00, a1);
}

uint64_t sub_1D5952A20@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47270, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4DE18, a1);
}

uint64_t sub_1D5952A44@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v4, v15);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleViewResignEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for ArticleViewResignEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

uint64_t initializeWithCopy for ArticleViewResignEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for ArticleViewResignEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for ArticleViewResignEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for ArticleViewResignEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleViewResignEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59536EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ArticleViewResignEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D595389C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5953A48()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ArticleViewResignEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    *v13 = *v14;
    v15 = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
    *((_QWORD *)v13 + 2) = v15;
    v13[24] = v14[24];
    v13[25] = v14[25];
    v16 = *((_QWORD *)v14 + 5);
    *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
    *((_QWORD *)v13 + 5) = v16;
    v17 = a3[7];
    v18 = a3[8];
    v19 = *(_WORD *)((char *)a2 + v17);
    v13[48] = v14[48];
    *(_WORD *)((char *)a1 + v17) = v19;
    v20 = (char *)a1 + v18;
    v21 = (char *)a2 + v18;
    *(_QWORD *)v20 = *(_QWORD *)((char *)a2 + v18);
    v20[8] = *((_BYTE *)a2 + v18 + 8);
    v22 = *(_QWORD *)((char *)a2 + v18 + 24);
    *((_QWORD *)v20 + 2) = *(_QWORD *)((char *)a2 + v18 + 16);
    *((_QWORD *)v20 + 3) = v22;
    v20[32] = *((_BYTE *)a2 + v18 + 32);
    v23 = *(_QWORD *)((char *)a2 + v18 + 40);
    v24 = *(_QWORD *)((char *)a2 + v18 + 48);
    *((_QWORD *)v20 + 5) = v23;
    *((_QWORD *)v20 + 6) = v24;
    v20[56] = v21[56];
    v20[57] = v21[57];
    v26 = *((_QWORD *)v21 + 8);
    v25 = *((_QWORD *)v21 + 9);
    v20[80] = v21[80];
    *((_QWORD *)v20 + 8) = v26;
    *((_QWORD *)v20 + 9) = v25;
    *(_OWORD *)(v20 + 88) = *(_OWORD *)(v21 + 88);
    *((_QWORD *)v20 + 13) = *((_QWORD *)v21 + 13);
    v20[112] = v21[112];
    *((_QWORD *)v20 + 15) = *((_QWORD *)v21 + 15);
    *((_DWORD *)v20 + 32) = *((_DWORD *)v21 + 32);
    v20[132] = v21[132];
    v20[133] = v21[133];
    v20[134] = v21[134];
    v27 = a3[9];
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    v28[16] = v29[16];
    v28[17] = v29[17];
    v31 = *((_QWORD *)v29 + 4);
    *((_QWORD *)v28 + 3) = *((_QWORD *)v29 + 3);
    *((_QWORD *)v28 + 4) = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ArticleViewResignEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArticleViewResignEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = v14;
  *(_BYTE *)(v12 + 24) = *(_BYTE *)(v13 + 24);
  *(_BYTE *)(v12 + 25) = *(_BYTE *)(v13 + 25);
  v15 = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = v15;
  v16 = a3[7];
  v17 = a3[8];
  v18 = *(_WORD *)(a2 + v16);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_WORD *)(a1 + v16) = v18;
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_QWORD *)v19 = *(_QWORD *)(a2 + v17);
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(a2 + v17 + 8);
  v21 = *(_QWORD *)(a2 + v17 + 24);
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(a2 + v17 + 16);
  *(_QWORD *)(v19 + 24) = v21;
  *(_BYTE *)(v19 + 32) = *(_BYTE *)(a2 + v17 + 32);
  v22 = *(_QWORD *)(a2 + v17 + 40);
  v23 = *(_QWORD *)(a2 + v17 + 48);
  *(_QWORD *)(v19 + 40) = v22;
  *(_QWORD *)(v19 + 48) = v23;
  *(_BYTE *)(v19 + 56) = *(_BYTE *)(v20 + 56);
  *(_BYTE *)(v19 + 57) = *(_BYTE *)(v20 + 57);
  v25 = *(_QWORD *)(v20 + 64);
  v24 = *(_QWORD *)(v20 + 72);
  *(_BYTE *)(v19 + 80) = *(_BYTE *)(v20 + 80);
  *(_QWORD *)(v19 + 64) = v25;
  *(_QWORD *)(v19 + 72) = v24;
  *(_OWORD *)(v19 + 88) = *(_OWORD *)(v20 + 88);
  *(_QWORD *)(v19 + 104) = *(_QWORD *)(v20 + 104);
  *(_BYTE *)(v19 + 112) = *(_BYTE *)(v20 + 112);
  *(_QWORD *)(v19 + 120) = *(_QWORD *)(v20 + 120);
  *(_DWORD *)(v19 + 128) = *(_DWORD *)(v20 + 128);
  *(_BYTE *)(v19 + 132) = *(_BYTE *)(v20 + 132);
  *(_BYTE *)(v19 + 133) = *(_BYTE *)(v20 + 133);
  *(_BYTE *)(v19 + 134) = *(_BYTE *)(v20 + 134);
  v26 = a3[9];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_QWORD *)(v28 + 8);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_QWORD *)(v27 + 8) = v29;
  *(_BYTE *)(v27 + 16) = *(_BYTE *)(v28 + 16);
  *(_BYTE *)(v27 + 17) = *(_BYTE *)(v28 + 17);
  v30 = *(_QWORD *)(v28 + 32);
  *(_QWORD *)(v27 + 24) = *(_QWORD *)(v28 + 24);
  *(_QWORD *)(v27 + 32) = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArticleViewResignEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(v9 + 17);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_BYTE *)v11 = *(_BYTE *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(a2 + v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 24) = *(_BYTE *)(v12 + 24);
  *(_BYTE *)(v11 + 25) = *(_BYTE *)(v12 + 25);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  *(_QWORD *)(v11 + 40) = *(_QWORD *)(v12 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 48) = *(_BYTE *)(v12 + 48);
  v13 = a3[7];
  v14 = (_BYTE *)(a1 + v13);
  v15 = (_BYTE *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_BYTE *)v17 = *(_BYTE *)(a2 + v16);
  *(_DWORD *)(v17 + 4) = *(_DWORD *)(a2 + v16 + 4);
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(a2 + v16 + 8);
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(a2 + v16 + 16);
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(a2 + v16 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 32) = *(_BYTE *)(v18 + 32);
  *(_QWORD *)(v17 + 40) = *(_QWORD *)(v18 + 40);
  v19 = *(_QWORD *)(v18 + 48);
  *(_BYTE *)(v17 + 56) = *(_BYTE *)(v18 + 56);
  *(_QWORD *)(v17 + 48) = v19;
  *(_BYTE *)(v17 + 57) = *(_BYTE *)(v18 + 57);
  *(_QWORD *)(v17 + 64) = *(_QWORD *)(v18 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v18 + 72);
  *(_BYTE *)(v17 + 80) = *(_BYTE *)(v18 + 80);
  *(_QWORD *)(v17 + 72) = v20;
  *(_QWORD *)(v17 + 88) = *(_QWORD *)(v18 + 88);
  *(_QWORD *)(v17 + 96) = *(_QWORD *)(v18 + 96);
  *(_QWORD *)(v17 + 104) = *(_QWORD *)(v18 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 112) = *(_BYTE *)(v18 + 112);
  *(_QWORD *)(v17 + 120) = *(_QWORD *)(v18 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 128) = *(_BYTE *)(v18 + 128);
  *(_BYTE *)(v17 + 129) = *(_BYTE *)(v18 + 129);
  *(_BYTE *)(v17 + 130) = *(_BYTE *)(v18 + 130);
  *(_BYTE *)(v17 + 131) = *(_BYTE *)(v18 + 131);
  *(_BYTE *)(v17 + 132) = *(_BYTE *)(v18 + 132);
  *(_BYTE *)(v17 + 133) = *(_BYTE *)(v18 + 133);
  *(_BYTE *)(v17 + 134) = *(_BYTE *)(v18 + 134);
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_QWORD *)v22 = *(_QWORD *)(a2 + v21);
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(a2 + v21 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v22 + 16) = *(_BYTE *)(v23 + 16);
  *(_BYTE *)(v22 + 17) = *(_BYTE *)(v23 + 17);
  *(_QWORD *)(v22 + 24) = *(_QWORD *)(v23 + 24);
  *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ArticleViewResignEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  v11 = a1 + v8;
  v12 = a2 + v8;
  v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v12 + 32);
  *(_BYTE *)(v11 + 48) = *(_BYTE *)(v12 + 48);
  v14 = a3[8];
  *(_WORD *)(a1 + a3[7]) = *(_WORD *)(a2 + a3[7]);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_OWORD *)(v16 + 48);
  *(_OWORD *)(v15 + 32) = *(_OWORD *)(v16 + 32);
  *(_OWORD *)(v15 + 48) = v17;
  v18 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v18;
  *(_QWORD *)(v15 + 127) = *(_QWORD *)(v16 + 127);
  v19 = *(_OWORD *)(v16 + 112);
  *(_OWORD *)(v15 + 96) = *(_OWORD *)(v16 + 96);
  *(_OWORD *)(v15 + 112) = v19;
  v20 = *(_OWORD *)(v16 + 80);
  *(_OWORD *)(v15 + 64) = *(_OWORD *)(v16 + 64);
  *(_OWORD *)(v15 + 80) = v20;
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
  return a1;
}

uint64_t assignWithTake for ArticleViewResignEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 16) = *(_WORD *)(v9 + 16);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  v14 = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 24) = *(_BYTE *)(v13 + 24);
  *(_BYTE *)(v12 + 25) = *(_BYTE *)(v13 + 25);
  v15 = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  v16 = a3[8];
  *(_WORD *)(a1 + a3[7]) = *(_WORD *)(a2 + a3[7]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_BYTE *)v17 = *(_BYTE *)(a2 + v16);
  *(_DWORD *)(v17 + 4) = *(_DWORD *)(a2 + v16 + 4);
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(a2 + v16 + 8);
  v19 = *(_QWORD *)(a2 + v16 + 16);
  v20 = *(_QWORD *)(a2 + v16 + 24);
  *(_QWORD *)(v17 + 16) = v19;
  *(_QWORD *)(v17 + 24) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 32) = *(_BYTE *)(v18 + 32);
  v21 = *(_QWORD *)(v18 + 48);
  *(_QWORD *)(v17 + 40) = *(_QWORD *)(v18 + 40);
  *(_QWORD *)(v17 + 48) = v21;
  *(_BYTE *)(v17 + 56) = *(_BYTE *)(v18 + 56);
  *(_BYTE *)(v17 + 57) = *(_BYTE *)(v18 + 57);
  *(_QWORD *)(v17 + 64) = *(_QWORD *)(v18 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v17 + 72) = *(_QWORD *)(v18 + 72);
  *(_BYTE *)(v17 + 80) = *(_BYTE *)(v18 + 80);
  *(_OWORD *)(v17 + 88) = *(_OWORD *)(v18 + 88);
  *(_QWORD *)(v17 + 104) = *(_QWORD *)(v18 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 112) = *(_BYTE *)(v18 + 112);
  *(_QWORD *)(v17 + 120) = *(_QWORD *)(v18 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 128) = *(_BYTE *)(v18 + 128);
  *(_BYTE *)(v17 + 129) = *(_BYTE *)(v18 + 129);
  *(_BYTE *)(v17 + 130) = *(_BYTE *)(v18 + 130);
  *(_BYTE *)(v17 + 131) = *(_BYTE *)(v18 + 131);
  *(_BYTE *)(v17 + 132) = *(_BYTE *)(v18 + 132);
  *(_BYTE *)(v17 + 133) = *(_BYTE *)(v18 + 133);
  *(_BYTE *)(v17 + 134) = *(_BYTE *)(v18 + 134);
  v22 = a3[9];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_QWORD *)(v24 + 8);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_QWORD *)(v23 + 8) = v25;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v23 + 16) = *(_BYTE *)(v24 + 16);
  *(_BYTE *)(v23 + 17) = *(_BYTE *)(v24 + 17);
  v26 = *(_QWORD *)(v24 + 32);
  *(_QWORD *)(v23 + 24) = *(_QWORD *)(v24 + 24);
  *(_QWORD *)(v23 + 32) = v26;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleViewResignEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59545A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleViewResignEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5954630(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D59546AC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ArticleViewResignEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D5954790 + 4 * byte_1D5ACEB5B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D59547C4 + 4 * byte_1D5ACEB56[v4]))();
}

uint64_t sub_1D59547C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59547CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59547D4);
  return result;
}

uint64_t sub_1D59547E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59547E8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D59547EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59547F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleViewResignEvent.Model.CodingKeys()
{
  return &type metadata for ArticleViewResignEvent.Model.CodingKeys;
}

unint64_t sub_1D5954814()
{
  unint64_t result;

  result = qword_1EFF4DE48;
  if (!qword_1EFF4DE48)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACED84, &type metadata for ArticleViewResignEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4DE48);
  }
  return result;
}

unint64_t sub_1D595485C()
{
  unint64_t result;

  result = qword_1EFF4DE50;
  if (!qword_1EFF4DE50)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACECF4, &type metadata for ArticleViewResignEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4DE50);
  }
  return result;
}

unint64_t sub_1D59548A4()
{
  unint64_t result;

  result = qword_1EFF4DE58;
  if (!qword_1EFF4DE58)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACED1C, &type metadata for ArticleViewResignEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4DE58);
  }
  return result;
}

uint64_t sub_1D59548E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

NewsAnalytics::FeedConfigSource_optional __swiftcall FeedConfigSource.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::FeedConfigSource_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FeedConfigSource.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x74694B64756F6C63;
  if (*v0 != 1)
    v1 = 0x656764457377656ELL;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D5954C70(char *a1, unsigned __int8 *a2)
{
  return sub_1D5A3B3D8(*a1, *a2);
}

unint64_t sub_1D5954C80()
{
  unint64_t result;

  result = qword_1EFF4DE60;
  if (!qword_1EFF4DE60)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedConfigSource, &type metadata for FeedConfigSource);
    atomic_store(result, (unint64_t *)&qword_1EFF4DE60);
  }
  return result;
}

uint64_t sub_1D5954CC4()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5954D64()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5954DE0()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::FeedConfigSource_optional sub_1D5954E7C(Swift::String *a1)
{
  return FeedConfigSource.init(rawValue:)(*a1);
}

uint64_t sub_1D5954E88()
{
  sub_1D57C9D3C();
  return sub_1D5AAE928();
}

uint64_t storeEnumTagSinglePayload for FeedConfigSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5954F30 + 4 * byte_1D5ACEE05[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5954F64 + 4 * byte_1D5ACEE00[v4]))();
}

uint64_t sub_1D5954F64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5954F6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5954F74);
  return result;
}

uint64_t sub_1D5954F80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5954F88);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5954F8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5954F94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

NewsAnalytics::SearchOriginationType_optional __swiftcall SearchOriginationType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::SearchOriginationType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SearchOriginationType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6142686372616573;
  if (*v0 != 1)
    v1 = 0x6553746E65636572;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D5955060(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A385DC(*a1, *a2);
}

unint64_t sub_1D5955070()
{
  unint64_t result;

  result = qword_1EFF4DE68;
  if (!qword_1EFF4DE68)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SearchOriginationType, &type metadata for SearchOriginationType);
    atomic_store(result, (unint64_t *)&qword_1EFF4DE68);
  }
  return result;
}

uint64_t sub_1D59550B4()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5955160()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D59551E8()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::SearchOriginationType_optional sub_1D5955290(Swift::String *a1)
{
  return SearchOriginationType.init(rawValue:)(*a1);
}

void sub_1D595529C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE900000000000072;
  v5 = 0x6142686372616573;
  if (v2 != 1)
  {
    v5 = 0x6553746E65636572;
    v4 = 0xEC00000068637261;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D5955308()
{
  sub_1D595547C();
  return sub_1D5AAE928();
}

uint64_t sub_1D5955364()
{
  sub_1D595547C();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for SearchOriginationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D59553FC + 4 * byte_1D5ACEF25[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5955430 + 4 * byte_1D5ACEF20[v4]))();
}

uint64_t sub_1D5955430(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5955438(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5955440);
  return result;
}

uint64_t sub_1D595544C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5955454);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5955458(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5955460(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchOriginationType()
{
  return &type metadata for SearchOriginationType;
}

unint64_t sub_1D595547C()
{
  unint64_t result;

  result = qword_1EFF4DE70;
  if (!qword_1EFF4DE70)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SearchOriginationType, &type metadata for SearchOriginationType);
    atomic_store(result, (unint64_t *)&qword_1EFF4DE70);
  }
  return result;
}

uint64_t sub_1D59554C0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4DE78, MEMORY[0x1E0CF8078]);
}

uint64_t static LiveActivityUnsubscribeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47278, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4DE78, a1);
}

uint64_t sub_1D5955500(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4DE90, MEMORY[0x1E0CF8380]);
}

uint64_t static LiveActivityUnsubscribeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47280, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4DE90, a1);
}

uint64_t LiveActivityUnsubscribeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t LiveActivityUnsubscribeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*LiveActivityUnsubscribeEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t LiveActivityUnsubscribeEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivityUnsubscribeEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for LiveActivityUnsubscribeEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4DF18);
}

uint64_t LiveActivityUnsubscribeEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivityUnsubscribeEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*LiveActivityUnsubscribeEvent.groupData.modify())(_QWORD)
{
  type metadata accessor for LiveActivityUnsubscribeEvent(0);
  return nullsub_1;
}

uint64_t LiveActivityUnsubscribeEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivityUnsubscribeEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t LiveActivityUnsubscribeEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivityUnsubscribeEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*LiveActivityUnsubscribeEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for LiveActivityUnsubscribeEvent(0);
  return nullsub_1;
}

uint64_t LiveActivityUnsubscribeEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivityUnsubscribeEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t LiveActivityUnsubscribeEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivityUnsubscribeEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*LiveActivityUnsubscribeEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for LiveActivityUnsubscribeEvent(0);
  return nullsub_1;
}

uint64_t LiveActivityUnsubscribeEvent.liveActivityData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivityUnsubscribeEvent(0) + 32);
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t LiveActivityUnsubscribeEvent.liveActivityData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivityUnsubscribeEvent(0) + 32);
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*LiveActivityUnsubscribeEvent.liveActivityData.modify())(_QWORD)
{
  type metadata accessor for LiveActivityUnsubscribeEvent(0);
  return nullsub_1;
}

uint64_t LiveActivityUnsubscribeEvent.liveActivityDismissalData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivityUnsubscribeEvent(0) + 36);
  sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t LiveActivityUnsubscribeEvent.liveActivityDismissalData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivityUnsubscribeEvent(0) + 36);
  sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*LiveActivityUnsubscribeEvent.liveActivityDismissalData.modify())(_QWORD)
{
  type metadata accessor for LiveActivityUnsubscribeEvent(0);
  return nullsub_1;
}

uint64_t LiveActivityUnsubscribeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for LiveActivityUnsubscribeEvent(0);
  v5 = a1 + v4[5];
  v6 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = a1 + v4[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v6, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v2, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
}

uint64_t LiveActivityUnsubscribeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

_QWORD *LiveActivityUnsubscribeEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for LiveActivityUnsubscribeEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 20), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t type metadata accessor for LiveActivityUnsubscribeEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4DFB8);
}

uint64_t LiveActivityUnsubscribeEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for LiveActivityUnsubscribeEvent.Model(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t LiveActivityUnsubscribeEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for LiveActivityUnsubscribeEvent.Model(0) + 28));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t LiveActivityUnsubscribeEvent.Model.liveActivityData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for LiveActivityUnsubscribeEvent.Model(0) + 32));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t LiveActivityUnsubscribeEvent.Model.liveActivityDismissalData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for LiveActivityUnsubscribeEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

__n128 LiveActivityUnsubscribeEvent.Model.init(eventData:groupData:feedData:userBundleSubscriptionContextData:liveActivityData:liveActivityDismissalData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  __n128 *v22;
  __n128 result;
  uint64_t v24;
  _QWORD *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  _BYTE v32[144];

  sub_1D57DD5B8(a2, (uint64_t)v32);
  v26 = *a3;
  v13 = a3[1].n128_u64[0];
  v14 = *a4;
  v15 = *((_QWORD *)a4 + 1);
  v16 = *((_QWORD *)a4 + 2);
  v17 = a4[24];
  v29 = a4[25];
  v27 = *((_QWORD *)a4 + 5);
  v28 = *((_QWORD *)a4 + 4);
  LOBYTE(a4) = a4[48];
  v18 = *a5;
  v19 = a5[1];
  v30 = v18;
  v31 = *a6;
  v20 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a7, a1, v20);
  v21 = (int *)type metadata accessor for LiveActivityUnsubscribeEvent.Model(0);
  sub_1D57DD5B8((uint64_t)v32, a7 + v21[5]);
  v22 = (__n128 *)(a7 + v21[6]);
  result = v26;
  *v22 = v26;
  v22[1].n128_u64[0] = v13;
  v24 = a7 + v21[7];
  *(_BYTE *)v24 = v14;
  *(_QWORD *)(v24 + 8) = v15;
  *(_QWORD *)(v24 + 16) = v16;
  *(_BYTE *)(v24 + 24) = v17;
  *(_BYTE *)(v24 + 25) = v29;
  *(_QWORD *)(v24 + 32) = v28;
  *(_QWORD *)(v24 + 40) = v27;
  *(_BYTE *)(v24 + 48) = (_BYTE)a4;
  v25 = (_QWORD *)(a7 + v21[8]);
  *v25 = v30;
  v25[1] = v19;
  *(_BYTE *)(a7 + v21[9]) = v31;
  return result;
}

uint64_t sub_1D5955F10(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5955F48 + 4 * byte_1D5ACF050[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5955F48()
{
  return 0x74614470756F7267;
}

uint64_t sub_1D5955F5C()
{
  return 0x6174614464656566;
}

unint64_t sub_1D5955F74()
{
  return 0xD000000000000021;
}

uint64_t sub_1D5955FCC()
{
  unsigned __int8 *v0;

  return sub_1D5955F10(*v0);
}

uint64_t sub_1D5955FD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5958AB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5955FF8()
{
  sub_1D595631C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5956020()
{
  sub_1D595631C();
  return sub_1D5AAEEE0();
}

uint64_t LiveActivityUnsubscribeEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[24];
  char v22;
  char v23;
  __int128 v24;
  char v25;
  _BYTE v26[144];
  char v27;
  char v28;

  v3 = v1;
  sub_1D5956838(0, &qword_1EFF4DEA8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v21[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D595631C();
  sub_1D5AAEEC8();
  v28 = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for LiveActivityUnsubscribeEvent.Model(0);
    sub_1D57DD5B8(v3 + v10[5], (uint64_t)v26);
    sub_1D57DD5B8((uint64_t)v26, (uint64_t)v21);
    v27 = 1;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v11 = v3 + v10[6];
    v12 = *(_QWORD *)(v11 + 16);
    *(_OWORD *)v21 = *(_OWORD *)v11;
    *(_QWORD *)&v21[16] = v12;
    v27 = 2;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v13 = v3 + v10[7];
    v14 = *(_BYTE *)(v13 + 24);
    v15 = *(_BYTE *)(v13 + 25);
    v16 = *(_BYTE *)(v13 + 48);
    v21[0] = *(_BYTE *)v13;
    *(_OWORD *)&v21[8] = *(_OWORD *)(v13 + 8);
    v22 = v14;
    v23 = v15;
    v24 = *(_OWORD *)(v13 + 32);
    v25 = v16;
    v27 = 3;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v17 = (uint64_t *)(v3 + v10[8]);
    v19 = *v17;
    v18 = v17[1];
    *(_QWORD *)v21 = v19;
    *(_QWORD *)&v21[8] = v18;
    v27 = 4;
    sub_1D5820FF0();
    sub_1D5AAED6C();
    v21[0] = *(_BYTE *)(v3 + v10[9]);
    v27 = 5;
    sub_1D5821568();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D595631C()
{
  unint64_t result;

  result = qword_1EFF4DEB0;
  if (!qword_1EFF4DEB0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACF2B4, &type metadata for LiveActivityUnsubscribeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4DEB0);
  }
  return result;
}

uint64_t LiveActivityUnsubscribeEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  char v19;
  char v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _BYTE v33[24];
  char v34;
  char v35;
  __int128 v36;
  char v37;
  _BYTE v38[136];
  char v39[144];
  char v40;
  char v41;

  v26 = a2;
  v3 = sub_1D5AADF98();
  v27 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v28 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5956838(0, &qword_1EFF4DEB8, MEMORY[0x1E0DED048]);
  v30 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - v7;
  v9 = (int *)type metadata accessor for LiveActivityUnsubscribeEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v31 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1D595631C();
  v29 = v8;
  v13 = v32;
  sub_1D5AAEEB0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  v14 = v6;
  v15 = v27;
  v39[0] = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v11, v28, v3);
  v41 = 1;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  sub_1D57DD5B8((uint64_t)v39, (uint64_t)v38);
  sub_1D57DD5B8((uint64_t)v38, (uint64_t)&v11[v9[5]]);
  v40 = 2;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v16 = *(_QWORD *)&v33[16];
  v17 = &v11[v9[6]];
  *(_OWORD *)v17 = *(_OWORD *)v33;
  *((_QWORD *)v17 + 2) = v16;
  v40 = 3;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v18 = v34;
  v19 = v35;
  v20 = v37;
  v21 = &v11[v9[7]];
  *v21 = v33[0];
  *(_OWORD *)(v21 + 8) = *(_OWORD *)&v33[8];
  v21[24] = v18;
  v21[25] = v19;
  *((_OWORD *)v21 + 2) = v36;
  v21[48] = v20;
  v40 = 4;
  sub_1D5820FAC();
  sub_1D5AAECD0();
  v22 = *(_QWORD *)&v33[8];
  v23 = &v11[MEMORY[0x20]];
  *(_QWORD *)v23 = *(_QWORD *)v33;
  *((_QWORD *)v23 + 1) = v22;
  v40 = 5;
  sub_1D5821524();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v29, v30);
  v11[MEMORY[0x24]] = v33[0];
  sub_1D5956894((uint64_t)v11, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return sub_1D59568D8((uint64_t)v11);
}

void sub_1D5956838(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D595631C();
    v7 = a3(a1, &type metadata for LiveActivityUnsubscribeEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5956894(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LiveActivityUnsubscribeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D59568D8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LiveActivityUnsubscribeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5956914@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LiveActivityUnsubscribeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5956928(_QWORD *a1)
{
  return LiveActivityUnsubscribeEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D595693C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47278, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4DE78, a1);
}

uint64_t sub_1D5956960@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47280, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4DE90, a1);
}

uint64_t sub_1D5956984@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  v7 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  v9 = a2 + a1[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v7, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v4, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for LiveActivityUnsubscribeEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for LiveActivityUnsubscribeEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

uint64_t initializeWithCopy for LiveActivityUnsubscribeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for LiveActivityUnsubscribeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for LiveActivityUnsubscribeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for LiveActivityUnsubscribeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveActivityUnsubscribeEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5957640(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for LiveActivityUnsubscribeEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59577F0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D595799C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1EFF48A50, (void (*)(void))sub_1D5821524, (void (*)(void))sub_1D5821568);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for LiveActivityUnsubscribeEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 2);
    if (v11)
    {
      *(_WORD *)v9 = *(_WORD *)v10;
      *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
      *((_QWORD *)v9 + 2) = v11;
      *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
      v12 = *((_QWORD *)v10 + 5);
      *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
      *((_QWORD *)v9 + 5) = v12;
      v13 = *((_QWORD *)v10 + 7);
      *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
      *((_QWORD *)v9 + 7) = v13;
      v14 = *((_QWORD *)v10 + 9);
      *((_QWORD *)v9 + 8) = *((_QWORD *)v10 + 8);
      *((_QWORD *)v9 + 9) = v14;
      v9[80] = v10[80];
      v15 = *((_QWORD *)v10 + 12);
      *((_QWORD *)v9 + 11) = *((_QWORD *)v10 + 11);
      *((_QWORD *)v9 + 12) = v15;
      *((_QWORD *)v9 + 13) = *((_QWORD *)v10 + 13);
      v9[112] = v10[112];
      v16 = *((_QWORD *)v10 + 16);
      *((_QWORD *)v9 + 15) = *((_QWORD *)v10 + 15);
      *((_QWORD *)v9 + 16) = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = *((_OWORD *)v10 + 7);
      *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
      *((_OWORD *)v9 + 7) = v18;
      *((_QWORD *)v9 + 16) = *((_QWORD *)v10 + 16);
      v19 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v19;
      v20 = *((_OWORD *)v10 + 5);
      *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
      *((_OWORD *)v9 + 5) = v20;
      v21 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v21;
    }
    v22 = a3[6];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = *((_QWORD *)v24 + 2);
    if (v25 == 1)
    {
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *((_QWORD *)v23 + 2) = *((_QWORD *)v24 + 2);
    }
    else
    {
      *v23 = *v24;
      *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
      *((_QWORD *)v23 + 2) = v25;
      swift_bridgeObjectRetain();
    }
    v26 = a3[7];
    v27 = a3[8];
    v28 = (char *)a1 + v26;
    v29 = (char *)a2 + v26;
    *v28 = *v29;
    v30 = *((_QWORD *)v29 + 2);
    *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
    *((_QWORD *)v28 + 2) = v30;
    *((_WORD *)v28 + 12) = *((_WORD *)v29 + 12);
    v31 = *((_QWORD *)v29 + 5);
    *((_QWORD *)v28 + 4) = *((_QWORD *)v29 + 4);
    *((_QWORD *)v28 + 5) = v31;
    v28[48] = v29[48];
    v32 = (_QWORD *)((char *)a1 + v27);
    v33 = (_QWORD *)((char *)a2 + v27);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for LiveActivityUnsubscribeEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  if (*(_QWORD *)(a1 + *(int *)(a2 + 20) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + *(int *)(a2 + 24) + 16) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LiveActivityUnsubscribeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    *(_WORD *)v8 = *(_WORD *)v9;
    *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
    *(_QWORD *)(v8 + 16) = v10;
    *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
    v11 = *(_QWORD *)(v9 + 40);
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
    *(_QWORD *)(v8 + 40) = v11;
    v12 = *(_QWORD *)(v9 + 56);
    *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
    *(_QWORD *)(v8 + 56) = v12;
    v13 = *(_QWORD *)(v9 + 72);
    *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
    *(_QWORD *)(v8 + 72) = v13;
    *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
    v14 = *(_QWORD *)(v9 + 96);
    *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
    *(_QWORD *)(v8 + 96) = v14;
    *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
    *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
    v15 = *(_QWORD *)(v9 + 128);
    *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
    *(_QWORD *)(v8 + 128) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v16 = *(_OWORD *)(v9 + 112);
    *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
    *(_OWORD *)(v8 + 112) = v16;
    *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 + 128);
    v17 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 48) = v17;
    v18 = *(_OWORD *)(v9 + 80);
    *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 80) = v18;
    v19 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v19;
  }
  v20 = a3[6];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_QWORD *)(v22 + 16);
  if (v23 == 1)
  {
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
  }
  else
  {
    *(_BYTE *)v21 = *(_BYTE *)v22;
    *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
    *(_QWORD *)(v21 + 16) = v23;
    swift_bridgeObjectRetain();
  }
  v24 = a3[7];
  v25 = a3[8];
  v26 = a1 + v24;
  v27 = a2 + v24;
  *(_BYTE *)v26 = *(_BYTE *)v27;
  v28 = *(_QWORD *)(v27 + 16);
  *(_QWORD *)(v26 + 8) = *(_QWORD *)(v27 + 8);
  *(_QWORD *)(v26 + 16) = v28;
  *(_WORD *)(v26 + 24) = *(_WORD *)(v27 + 24);
  v29 = *(_QWORD *)(v27 + 40);
  *(_QWORD *)(v26 + 32) = *(_QWORD *)(v27 + 32);
  *(_QWORD *)(v26 + 40) = v29;
  *(_BYTE *)(v26 + 48) = *(_BYTE *)(v27 + 48);
  v30 = (_QWORD *)(a1 + v25);
  v31 = (_QWORD *)(a2 + v25);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LiveActivityUnsubscribeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7 + 16);
  v11 = *(_QWORD *)(a2 + v7 + 16);
  if (v10)
  {
    if (v11)
    {
      *(_BYTE *)v8 = *(_BYTE *)v9;
      *(_BYTE *)(v8 + 1) = *(_BYTE *)(v9 + 1);
      *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v8 + 24) = *(_DWORD *)(v9 + 24);
      *(_DWORD *)(v8 + 28) = *(_DWORD *)(v9 + 28);
      *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
      *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
      *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
      *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(v9 + 104);
      *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
      *(_QWORD *)(v8 + 104) = v12;
      *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v8);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      v14 = *(_OWORD *)(v9 + 64);
      v16 = *(_OWORD *)(v9 + 16);
      v15 = *(_OWORD *)(v9 + 32);
      *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 48);
      *(_OWORD *)(v8 + 64) = v14;
      *(_OWORD *)(v8 + 16) = v16;
      *(_OWORD *)(v8 + 32) = v15;
      v18 = *(_OWORD *)(v9 + 96);
      v17 = *(_OWORD *)(v9 + 112);
      v19 = *(_OWORD *)(v9 + 80);
      *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 + 128);
      *(_OWORD *)(v8 + 96) = v18;
      *(_OWORD *)(v8 + 112) = v17;
      *(_OWORD *)(v8 + 80) = v19;
    }
  }
  else if (v11)
  {
    *(_BYTE *)v8 = *(_BYTE *)v9;
    *(_BYTE *)(v8 + 1) = *(_BYTE *)(v9 + 1);
    *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_DWORD *)(v8 + 24) = *(_DWORD *)(v9 + 24);
    *(_DWORD *)(v8 + 28) = *(_DWORD *)(v9 + 28);
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
    *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
    *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
    *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
    *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
    *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
    *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
    *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
    *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
    v13 = *(_QWORD *)(v9 + 104);
    *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
    *(_QWORD *)(v8 + 104) = v13;
    *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
    *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v20 = *(_OWORD *)(v9 + 16);
    v21 = *(_OWORD *)(v9 + 32);
    v22 = *(_OWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 64) = v22;
    *(_OWORD *)(v8 + 16) = v20;
    *(_OWORD *)(v8 + 32) = v21;
    v23 = *(_OWORD *)(v9 + 80);
    v24 = *(_OWORD *)(v9 + 96);
    v25 = *(_OWORD *)(v9 + 112);
    *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 + 128);
    *(_OWORD *)(v8 + 96) = v24;
    *(_OWORD *)(v8 + 112) = v25;
    *(_OWORD *)(v8 + 80) = v23;
  }
  v26 = a3[6];
  v27 = a1 + v26;
  v28 = (__int128 *)(a2 + v26);
  v29 = *(_QWORD *)(a1 + v26 + 16);
  v30 = *(_QWORD *)(a2 + v26 + 16);
  if (v29 == 1)
  {
    if (v30 == 1)
    {
      v31 = *v28;
      *(_QWORD *)(v27 + 16) = *((_QWORD *)v28 + 2);
      *(_OWORD *)v27 = v31;
    }
    else
    {
      *(_BYTE *)v27 = *(_BYTE *)v28;
      *(_QWORD *)(v27 + 8) = *((_QWORD *)v28 + 1);
      *(_QWORD *)(v27 + 16) = *((_QWORD *)v28 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v30 == 1)
  {
    sub_1D57D9100(v27);
    v32 = *((_QWORD *)v28 + 2);
    *(_OWORD *)v27 = *v28;
    *(_QWORD *)(v27 + 16) = v32;
  }
  else
  {
    *(_BYTE *)v27 = *(_BYTE *)v28;
    *(_QWORD *)(v27 + 8) = *((_QWORD *)v28 + 1);
    *(_QWORD *)(v27 + 16) = *((_QWORD *)v28 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v33 = a3[7];
  v34 = a1 + v33;
  v35 = a2 + v33;
  *(_BYTE *)v34 = *(_BYTE *)(a2 + v33);
  *(_QWORD *)(v34 + 8) = *(_QWORD *)(a2 + v33 + 8);
  *(_QWORD *)(v34 + 16) = *(_QWORD *)(a2 + v33 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v34 + 24) = *(_BYTE *)(v35 + 24);
  *(_BYTE *)(v34 + 25) = *(_BYTE *)(v35 + 25);
  *(_QWORD *)(v34 + 32) = *(_QWORD *)(v35 + 32);
  *(_QWORD *)(v34 + 40) = *(_QWORD *)(v35 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v34 + 48) = *(_BYTE *)(v35 + 48);
  v36 = a3[8];
  v37 = (_QWORD *)(a1 + v36);
  v38 = (_QWORD *)(a2 + v36);
  *v37 = *v38;
  v37[1] = v38[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for LiveActivityUnsubscribeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)(v9 + 128) = *(_QWORD *)(v10 + 128);
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  v12 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v12;
  v13 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v13;
  v14 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v14;
  v15 = a1 + v8;
  v16 = a2 + v8;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  v17 = a3[7];
  v18 = a3[8];
  v19 = a1 + v17;
  v20 = a2 + v17;
  v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
  *(_BYTE *)(v19 + 48) = *(_BYTE *)(v20 + 48);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for LiveActivityUnsubscribeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (*(_QWORD *)(a1 + v7 + 16))
  {
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      *(_WORD *)v8 = *(_WORD *)v9;
      *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
      *(_QWORD *)(v8 + 16) = v10;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
      *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(v9 + 64);
      *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
      *(_QWORD *)(v8 + 64) = v11;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
      v12 = *(_QWORD *)(v9 + 96);
      *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
      *(_QWORD *)(v8 + 96) = v12;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
      *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
      *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D57E17B8(v8);
  }
  v13 = *(_OWORD *)(v9 + 112);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 112) = v13;
  *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 + 128);
  v14 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v14;
  v15 = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(_OWORD *)(v8 + 80) = v15;
  v16 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v16;
LABEL_6:
  v17 = a3[6];
  v18 = a1 + v17;
  v19 = a2 + v17;
  if (*(_QWORD *)(a1 + v17 + 16) != 1)
  {
    v20 = *(_QWORD *)(v19 + 16);
    if (v20 != 1)
    {
      *(_BYTE *)v18 = *(_BYTE *)v19;
      *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
      *(_QWORD *)(v18 + 16) = v20;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D57D9100(v18);
  }
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_QWORD *)(v18 + 16) = *(_QWORD *)(v19 + 16);
LABEL_11:
  v21 = a3[7];
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_BYTE *)v22 = *(_BYTE *)(a2 + v21);
  v24 = *(_QWORD *)(a2 + v21 + 16);
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(a2 + v21 + 8);
  *(_QWORD *)(v22 + 16) = v24;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v22 + 24) = *(_BYTE *)(v23 + 24);
  *(_BYTE *)(v22 + 25) = *(_BYTE *)(v23 + 25);
  v25 = *(_QWORD *)(v23 + 40);
  *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
  *(_QWORD *)(v22 + 40) = v25;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v22 + 48) = *(_BYTE *)(v23 + 48);
  v26 = a3[8];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (uint64_t *)(a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveActivityUnsubscribeEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D595876C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for LiveActivityUnsubscribeEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59587F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5958874()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LiveActivityUnsubscribeEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D5958958 + 4 * byte_1D5ACF05B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D595898C + 4 * byte_1D5ACF056[v4]))();
}

uint64_t sub_1D595898C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5958994(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D595899CLL);
  return result;
}

uint64_t sub_1D59589A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59589B0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D59589B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59589BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityUnsubscribeEvent.Model.CodingKeys()
{
  return &type metadata for LiveActivityUnsubscribeEvent.Model.CodingKeys;
}

unint64_t sub_1D59589DC()
{
  unint64_t result;

  result = qword_1EFF4E000;
  if (!qword_1EFF4E000)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACF28C, &type metadata for LiveActivityUnsubscribeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E000);
  }
  return result;
}

unint64_t sub_1D5958A24()
{
  unint64_t result;

  result = qword_1EFF4E008;
  if (!qword_1EFF4E008)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACF1FC, &type metadata for LiveActivityUnsubscribeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E008);
  }
  return result;
}

unint64_t sub_1D5958A6C()
{
  unint64_t result;

  result = qword_1EFF4E010;
  if (!qword_1EFF4E010)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACF224, &type metadata for LiveActivityUnsubscribeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E010);
  }
  return result;
}

uint64_t sub_1D5958AB0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AED610 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001D5AED650)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

NewsAnalytics::CellularRadioAccessTechnology_optional __swiftcall CellularRadioAccessTechnology.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::CellularRadioAccessTechnology_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t CellularRadioAccessTechnology.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5958DB0 + 4 * byte_1D5ACF310[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5958DB0()
{
  return 1768319351;
}

uint64_t sub_1D5958DC0()
{
  return 1851881335;
}

uint64_t sub_1D5958DD0()
{
  return 0x47356E617777;
}

uint64_t sub_1D5958DE4()
{
  return 0x6863616552746F6ELL;
}

void sub_1D5958E04(char *a1)
{
  sub_1D5A364BC(*a1);
}

unint64_t sub_1D5958E14()
{
  unint64_t result;

  result = qword_1EFF4E018;
  if (!qword_1EFF4E018)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for CellularRadioAccessTechnology, &type metadata for CellularRadioAccessTechnology);
    atomic_store(result, (unint64_t *)&qword_1EFF4E018);
  }
  return result;
}

void sub_1D5958E58()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5958EA4()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5958F20()
{
  __asm { BR              X10 }
}

uint64_t sub_1D5958F5C()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5958FC4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D595900C()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::CellularRadioAccessTechnology_optional sub_1D5959088(Swift::String *a1)
{
  return CellularRadioAccessTechnology.init(rawValue:)(*a1);
}

uint64_t sub_1D5959094()
{
  sub_1D579FF0C();
  return sub_1D5AAE928();
}

uint64_t storeEnumTagSinglePayload for CellularRadioAccessTechnology(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D595913C + 4 * byte_1D5ACF32E[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5959170 + 4 * byte_1D5ACF329[v4]))();
}

uint64_t sub_1D5959170(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5959178(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5959180);
  return result;
}

uint64_t sub_1D595918C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5959194);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5959198(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59591A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59591AC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4E020, MEMORY[0x1E0CF8078]);
}

uint64_t static SearchExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47288, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4E020, a1);
}

uint64_t sub_1D59591EC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4E038, MEMORY[0x1E0CF8380]);
}

uint64_t static SearchExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47290, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4E038, a1);
}

uint64_t SearchExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t SearchExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SearchExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SearchExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for SearchExposureEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for SearchExposureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4E0C0);
}

uint64_t SearchExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchExposureEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SearchExposureEvent.timedData.modify())(_QWORD)
{
  type metadata accessor for SearchExposureEvent(0);
  return nullsub_1;
}

uint64_t SearchExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchExposureEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SearchExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchExposureEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SearchExposureEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for SearchExposureEvent(0);
  return nullsub_1;
}

uint64_t SearchExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchExposureEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SearchExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchExposureEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SearchExposureEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for SearchExposureEvent(0);
  return nullsub_1;
}

uint64_t SearchExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for SearchExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
}

uint64_t SearchExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SearchExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for SearchExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for SearchExposureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4E158);
}

uint64_t SearchExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for SearchExposureEvent.Model(0) + 24));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SearchExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SearchExposureEvent.Model(0) + 28));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t SearchExposureEvent.Model.init(eventData:timedData:userBundleSubscriptionContextData:viewData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  __int16 v23;
  uint64_t v24;
  uint64_t v25;

  v8 = *a3;
  v9 = *((_QWORD *)a3 + 1);
  v10 = *((_QWORD *)a3 + 2);
  v11 = a3[24];
  v12 = a3[25];
  v13 = *((_QWORD *)a3 + 4);
  v22 = *((_QWORD *)a3 + 5);
  v21 = a3[48];
  v24 = a4[1];
  v25 = *a4;
  v23 = *((_WORD *)a4 + 8);
  v14 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a5, a1, v14);
  v15 = (int *)type metadata accessor for SearchExposureEvent.Model(0);
  v16 = a5 + v15[5];
  v17 = sub_1D5AADFB0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16, a2, v17);
  v19 = a5 + v15[6];
  *(_BYTE *)v19 = v8;
  *(_QWORD *)(v19 + 8) = v9;
  *(_QWORD *)(v19 + 16) = v10;
  *(_BYTE *)(v19 + 24) = v11;
  *(_BYTE *)(v19 + 25) = v12;
  *(_QWORD *)(v19 + 32) = v13;
  *(_QWORD *)(v19 + 40) = v22;
  *(_BYTE *)(v19 + 48) = v21;
  v20 = a5 + v15[7];
  *(_QWORD *)v20 = v25;
  *(_QWORD *)(v20 + 8) = v24;
  *(_WORD *)(v20 + 16) = v23;
  return result;
}

uint64_t sub_1D5959804()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5959838 + 4 * byte_1D5ACF470[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5959838()
{
  return 0x74614464656D6974;
}

unint64_t sub_1D595984C()
{
  return 0xD000000000000021;
}

uint64_t sub_1D5959868()
{
  return 0x6174614477656976;
}

uint64_t sub_1D5959880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D595B4F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59598A4()
{
  sub_1D5959B44();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59598CC()
{
  sub_1D5959B44();
  return sub_1D5AAEEE0();
}

uint64_t SearchExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  char v22;
  char v23;
  __int128 v24;
  char v25;

  v3 = v1;
  sub_1D5959FCC(0, &qword_1EFF4E050, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5959B44();
  sub_1D5AAEEC8();
  LOBYTE(v20) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = type metadata accessor for SearchExposureEvent.Model(0);
    LOBYTE(v20) = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = v3 + *(int *)(v10 + 24);
    v12 = *(_BYTE *)(v11 + 24);
    v13 = *(_BYTE *)(v11 + 25);
    v14 = *(_BYTE *)(v11 + 48);
    LOBYTE(v20) = *(_BYTE *)v11;
    v21 = *(_OWORD *)(v11 + 8);
    v22 = v12;
    v23 = v13;
    v24 = *(_OWORD *)(v11 + 32);
    v25 = v14;
    HIBYTE(v19) = 2;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v15 = (uint64_t *)(v3 + *(int *)(v10 + 28));
    v16 = *v15;
    v17 = v15[1];
    LOWORD(v15) = *((_WORD *)v15 + 8);
    v20 = v16;
    *(_QWORD *)&v21 = v17;
    WORD4(v21) = (_WORD)v15;
    HIBYTE(v19) = 3;
    sub_1D57C62A4();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5959B44()
{
  unint64_t result;

  result = qword_1EFF4E058;
  if (!qword_1EFF4E058)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACF664, &type metadata for SearchExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E058);
  }
  return result;
}

uint64_t SearchExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  char v44;
  char v45;
  __int128 v46;
  char v47;
  char v48;

  v33 = a2;
  v3 = sub_1D5AADFB0();
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1D5AADF98();
  v5 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5959FCC(0, &qword_1EFF4E060, MEMORY[0x1E0DED048]);
  v38 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v29 - v9;
  v11 = type metadata accessor for SearchExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5959B44();
  v40 = v10;
  v14 = v41;
  sub_1D5AAEEB0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v41 = v8;
  v30 = v11;
  v31 = v5;
  v15 = (uint64_t)v13;
  v32 = a1;
  v16 = v34;
  v17 = v35;
  v18 = v36;
  LOBYTE(v42) = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v19 = v37;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v15, v39, v19);
  LOBYTE(v42) = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1D5AAECD0();
  v20 = v30;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v15 + *(int *)(v30 + 20), v16, v18);
  v48 = 2;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v21 = v44;
  v22 = v45;
  v23 = v47;
  v24 = v15 + *(int *)(v20 + 24);
  *(_BYTE *)v24 = v42;
  *(_OWORD *)(v24 + 8) = v43;
  *(_BYTE *)(v24 + 24) = v21;
  *(_BYTE *)(v24 + 25) = v22;
  *(_OWORD *)(v24 + 32) = v46;
  *(_BYTE *)(v24 + 48) = v23;
  v48 = 3;
  sub_1D57C6260();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v40, v38);
  v25 = v43;
  v26 = WORD4(v43);
  v27 = v15 + *(int *)(v20 + 28);
  *(_QWORD *)v27 = v42;
  *(_QWORD *)(v27 + 8) = v25;
  *(_WORD *)(v27 + 16) = v26;
  sub_1D595A028(v15, v33);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return sub_1D595A06C(v15);
}

void sub_1D5959FCC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5959B44();
    v7 = a3(a1, &type metadata for SearchExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D595A028(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D595A06C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SearchExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D595A0A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D595A0BC(_QWORD *a1)
{
  return SearchExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D595A0D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47288, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4E020, a1);
}

uint64_t sub_1D595A0F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47290, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4E038, a1);
}

uint64_t sub_1D595A118@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for SearchExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t initializeWithCopy for SearchExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for SearchExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for SearchExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for SearchExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D595A8D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SearchExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D595A9D8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D595AADC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchExposureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *v14 = *v15;
    v16 = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
    *((_QWORD *)v14 + 2) = v16;
    *((_WORD *)v14 + 12) = *((_WORD *)v15 + 12);
    v17 = *((_QWORD *)v15 + 5);
    *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
    *((_QWORD *)v14 + 5) = v17;
    v14[48] = v15[48];
    v18 = (char *)a1 + v13;
    v19 = (char *)a2 + v13;
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v18[16] = v19[16];
    v18[17] = v19[17];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SearchExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_BYTE *)v13 = *(_BYTE *)v14;
  v15 = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 16) = v15;
  *(_WORD *)(v13 + 24) = *(_WORD *)(v14 + 24);
  v16 = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 40) = v16;
  *(_BYTE *)(v13 + 48) = *(_BYTE *)(v14 + 48);
  v17 = a1 + v12;
  v18 = a2 + v12;
  v19 = *(_QWORD *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v19;
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 24) = *(_BYTE *)(v13 + 24);
  *(_BYTE *)(v12 + 25) = *(_BYTE *)(v13 + 25);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_QWORD *)v15 = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v15 + 16) = *(_BYTE *)(v16 + 16);
  *(_BYTE *)(v15 + 17) = *(_BYTE *)(v16 + 17);
  return a1;
}

uint64_t initializeWithTake for SearchExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_BYTE *)(v13 + 48) = *(_BYTE *)(v14 + 48);
  v16 = a1 + v12;
  v17 = a2 + v12;
  *(_WORD *)(v16 + 16) = *(_WORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  return a1;
}

uint64_t assignWithTake for SearchExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  v14 = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 24) = *(_BYTE *)(v13 + 24);
  *(_BYTE *)(v12 + 25) = *(_BYTE *)(v13 + 25);
  v15 = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_WORD *)(v17 + 16) = *(_WORD *)(v18 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D595B154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D595B20C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D595B2B4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SearchExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D595B398 + 4 * byte_1D5ACF479[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D595B3CC + 4 * byte_1D5ACF474[v4]))();
}

uint64_t sub_1D595B3CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D595B3D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D595B3DCLL);
  return result;
}

uint64_t sub_1D595B3E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D595B3F0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D595B3F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D595B3FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchExposureEvent.Model.CodingKeys()
{
  return &type metadata for SearchExposureEvent.Model.CodingKeys;
}

unint64_t sub_1D595B41C()
{
  unint64_t result;

  result = qword_1EFF4E198;
  if (!qword_1EFF4E198)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACF63C, &type metadata for SearchExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E198);
  }
  return result;
}

unint64_t sub_1D595B464()
{
  unint64_t result;

  result = qword_1EFF4E1A0;
  if (!qword_1EFF4E1A0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACF5AC, &type metadata for SearchExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E1A0);
  }
  return result;
}

unint64_t sub_1D595B4AC()
{
  unint64_t result;

  result = qword_1EFF4E1A8;
  if (!qword_1EFF4E1A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACF5D4, &type metadata for SearchExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E1A8);
  }
  return result;
}

uint64_t sub_1D595B4F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t AdData.opportunityIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdData.opportunityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AdData.opportunityIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t AdData.placementIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdData.placementIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*AdData.placementIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t AdData.isFilled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t AdData.isFilled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*AdData.isFilled.modify())()
{
  return nullsub_1;
}

void __swiftcall AdData.init(opportunityIdentifier:placementIdentifier:isFilled:)(NewsAnalytics::AdData *__return_ptr retstr, Swift::String opportunityIdentifier, Swift::String placementIdentifier, Swift::Bool isFilled)
{
  retstr->opportunityIdentifier = opportunityIdentifier;
  retstr->placementIdentifier = placementIdentifier;
  retstr->isFilled = isFilled;
}

unint64_t sub_1D595B7C8()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000013;
  if (*v0 != 1)
    v1 = 0x64656C6C69467369;
  if (*v0)
    return v1;
  else
    return 0xD000000000000015;
}

uint64_t sub_1D595B828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D595C03C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D595B84C()
{
  sub_1D595BA04();
  return sub_1D5AAEED4();
}

uint64_t sub_1D595B874()
{
  sub_1D595BA04();
  return sub_1D5AAEEE0();
}

uint64_t AdData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  int v12;
  char v13;
  char v14;
  char v15;

  sub_1D595BC6C(0, &qword_1EFF4E1B0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v11[1] = *(_QWORD *)(v1 + 24);
  v11[2] = v8;
  v12 = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D595BA04();
  sub_1D5AAEEC8();
  v15 = 0;
  v9 = v11[3];
  sub_1D5AAED3C();
  if (!v9)
  {
    v14 = 1;
    sub_1D5AAED3C();
    v13 = 2;
    sub_1D5AAED48();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D595BA04()
{
  unint64_t result;

  result = qword_1EFF4E1B8;
  if (!qword_1EFF4E1B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACF828, &type metadata for AdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E1B8);
  }
  return result;
}

uint64_t AdData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;

  sub_1D595BC6C(0, &qword_1EFF4E1C0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D595BA04();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v25 = 0;
  v10 = sub_1D5AAECA0();
  v12 = v11;
  v22 = v10;
  v24 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1D5AAECA0();
  v15 = v14;
  v20 = v13;
  v23 = 2;
  swift_bridgeObjectRetain();
  v21 = v15;
  LOBYTE(v15) = sub_1D5AAECAC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v16 = v15 & 1;
  v17 = v21;
  *(_QWORD *)a2 = v22;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v20;
  *(_QWORD *)(a2 + 24) = v17;
  *(_BYTE *)(a2 + 32) = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D595BC6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D595BA04();
    v7 = a3(a1, &type metadata for AdData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D595BCD0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AdData.init(from:)(a1, a2);
}

uint64_t sub_1D595BCE4(_QWORD *a1)
{
  return AdData.encode(to:)(a1);
}

uint64_t initializeWithCopy for AdData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AdData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for AdData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AdData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AdData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AdData()
{
  return &type metadata for AdData;
}

uint64_t storeEnumTagSinglePayload for AdData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D595BEE4 + 4 * byte_1D5ACF6B9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D595BF18 + 4 * byte_1D5ACF6B4[v4]))();
}

uint64_t sub_1D595BF18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D595BF20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D595BF28);
  return result;
}

uint64_t sub_1D595BF34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D595BF3CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D595BF40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D595BF48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdData.CodingKeys()
{
  return &type metadata for AdData.CodingKeys;
}

unint64_t sub_1D595BF68()
{
  unint64_t result;

  result = qword_1EFF4E1C8;
  if (!qword_1EFF4E1C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACF800, &type metadata for AdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E1C8);
  }
  return result;
}

unint64_t sub_1D595BFB0()
{
  unint64_t result;

  result = qword_1EFF4E1D0;
  if (!qword_1EFF4E1D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACF770, &type metadata for AdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E1D0);
  }
  return result;
}

unint64_t sub_1D595BFF8()
{
  unint64_t result;

  result = qword_1EFF4E1D8;
  if (!qword_1EFF4E1D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACF798, &type metadata for AdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E1D8);
  }
  return result;
}

uint64_t sub_1D595C03C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AF0BB0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AF0BD0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656C6C69467369 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t AppBadgeData.isAppBadged.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t AppBadgeData.isAppBadged.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*AppBadgeData.isAppBadged.modify())()
{
  return nullsub_1;
}

void AppBadgeData.badgeOriginationData.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *AppBadgeData.badgeOriginationData.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*AppBadgeData.badgeOriginationData.modify())()
{
  return nullsub_1;
}

NewsAnalytics::AppBadgeData __swiftcall AppBadgeData.init(isAppBadged:badgeOriginationData:)(Swift::Bool isAppBadged, NewsAnalytics::BadgeOriginationData badgeOriginationData)
{
  Swift::Bool *v2;
  char v3;
  NewsAnalytics::AppBadgeData result;

  v3 = *(_BYTE *)badgeOriginationData.badgeOriginationType;
  *v2 = isAppBadged;
  v2[1] = v3;
  result.isAppBadged = isAppBadged;
  return result;
}

uint64_t sub_1D595C1E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D595C5A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D595C204()
{
  sub_1D57A9DD4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D595C22C()
{
  sub_1D57A9DD4();
  return sub_1D5AAEEE0();
}

uint64_t AppBadgeData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;

  sub_1D57A9D34(0, &qword_1EFF4E1E0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A9DD4();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v16 = 0;
    v10 = sub_1D5AAECAC();
    v14 = 1;
    sub_1D58C5198();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
    *a2 = v10 & 1;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D595C3C4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return AppBadgeData.init(from:)(a1, a2);
}

uint64_t getEnumTagSinglePayload for AppBadgeData(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AppBadgeData(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D595C4C8 + 4 * byte_1D5ACF87D[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1D595C4FC + 4 * byte_1D5ACF878[v4]))();
}

uint64_t sub_1D595C4FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1D595C504(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1D595C50CLL);
  return result;
}

uint64_t sub_1D595C518(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1D595C520);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D595C524(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1D595C52C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppBadgeData()
{
  return &type metadata for AppBadgeData;
}

ValueMetadata *type metadata accessor for AppBadgeData.CodingKeys()
{
  return &type metadata for AppBadgeData.CodingKeys;
}

unint64_t sub_1D595C55C()
{
  unint64_t result;

  result = qword_1EFF4E1E8;
  if (!qword_1EFF4E1E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACF9D0, &type metadata for AppBadgeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E1E8);
  }
  return result;
}

uint64_t sub_1D595C5A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6461427070417369 && a2 == 0xEB00000000646567;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AF0BF0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D595C6A4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4E1F0, MEMORY[0x1E0CF8078]);
}

uint64_t static MediaEngageCompleteEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47298, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4E1F0, a1);
}

uint64_t sub_1D595C6E4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4E208, MEMORY[0x1E0CF8380]);
}

uint64_t static MediaEngageCompleteEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF472A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4E208, a1);
}

uint64_t MediaEngageCompleteEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t MediaEngageCompleteEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*MediaEngageCompleteEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for MediaEngageCompleteEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CB330);
}

uint64_t MediaEngageCompleteEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.articleData.modify())(_QWORD)
{
  type metadata accessor for MediaEngageCompleteEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.channelData.modify())(_QWORD)
{
  type metadata accessor for MediaEngageCompleteEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.groupData.modify())(_QWORD)
{
  type metadata accessor for MediaEngageCompleteEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for MediaEngageCompleteEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.mediaData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.mediaData.modify())(_QWORD)
{
  type metadata accessor for MediaEngageCompleteEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for MediaEngageCompleteEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.anfComponentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.anfComponentData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.anfComponentData.modify())(_QWORD)
{
  type metadata accessor for MediaEngageCompleteEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.mediaEngagementCompletedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7268, (void (*)(void))sub_1D595CEBC, (void (*)(void))sub_1D595CF00);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D595CEBC()
{
  unint64_t result;

  result = qword_1ED9CB808;
  if (!qword_1ED9CB808)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MediaEngagementCompletedData, &type metadata for MediaEngagementCompletedData);
    atomic_store(result, (unint64_t *)&qword_1ED9CB808);
  }
  return result;
}

unint64_t sub_1D595CF00()
{
  unint64_t result;

  result = qword_1ED9CB800;
  if (!qword_1ED9CB800)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MediaEngagementCompletedData, &type metadata for MediaEngagementCompletedData);
    atomic_store(result, (unint64_t *)&qword_1ED9CB800);
  }
  return result;
}

uint64_t MediaEngageCompleteEvent.mediaEngagementCompletedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7268, (void (*)(void))sub_1D595CEBC, (void (*)(void))sub_1D595CF00);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.mediaEngagementCompletedData.modify())(_QWORD)
{
  type metadata accessor for MediaEngageCompleteEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 52);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 52);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for MediaEngageCompleteEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.issueData.modify())(_QWORD)
{
  type metadata accessor for MediaEngageCompleteEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.issueViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.issueViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.issueViewData.modify())(_QWORD)
{
  type metadata accessor for MediaEngageCompleteEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.orientationData.modify())(_QWORD)
{
  type metadata accessor for MediaEngageCompleteEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.articleExposureContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.articleExposureContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.articleExposureContextData.modify())(_QWORD)
{
  type metadata accessor for MediaEngageCompleteEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for MediaEngageCompleteEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v10, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C7268, (void (*)(void))sub_1D595CEBC, (void (*)(void))sub_1D595CF00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v10, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v10, v27);
  v28 = a1 + v4[16];
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v10, v29);
  v30 = a1 + v4[17];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v30, v10, v31);
}

uint64_t MediaEngageCompleteEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t MediaEngageCompleteEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 20);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t type metadata accessor for MediaEngageCompleteEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CB268);
}

uint64_t MediaEngageCompleteEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 24);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

_QWORD *MediaEngageCompleteEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for MediaEngageCompleteEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 28), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t MediaEngageCompleteEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t MediaEngageCompleteEvent.Model.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 36));
  v4 = *v3;
  v6 = *((_QWORD *)v3 + 1);
  v5 = *((_QWORD *)v3 + 2);
  v7 = *((_DWORD *)v3 + 6);
  LOBYTE(v3) = v3[28];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 28) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageCompleteEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 40));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageCompleteEvent.Model.anfComponentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 44));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  return sub_1D57E8EF4(v4, v5);
}

uint64_t MediaEngageCompleteEvent.Model.mediaEngagementCompletedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;

  result = type metadata accessor for MediaEngageCompleteEvent.Model(0);
  v4 = (uint64_t *)(v1 + *(int *)(result + 48));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 8);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = (_BYTE)v4;
  return result;
}

uint64_t MediaEngageCompleteEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 52));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageCompleteEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 56));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t MediaEngageCompleteEvent.Model.issueViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 60));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageCompleteEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaEngageCompleteEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t MediaEngageCompleteEvent.Model.articleExposureContextData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 68));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57E90BC(v4, v5);
}

__n128 MediaEngageCompleteEvent.Model.init(eventData:articleData:channelData:groupData:feedData:mediaData:viewData:anfComponentData:mediaEngagementCompletedData:userBundleSubscriptionContextData:issueData:issueViewData:orientationData:articleExposureContextData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, __int128 *a5@<X4>, char *a6@<X5>, uint64_t *a7@<X6>, __int128 *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, char *a11, __int128 *a12, uint64_t *a13, __int16 *a14, __int128 *a15)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int16 v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  __n128 result;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  char v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __n128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  _BYTE v81[23];
  _BYTE v82[144];

  v80 = a2[6];
  *(_OWORD *)v81 = a2[7];
  *(_QWORD *)&v81[15] = *(_QWORD *)((char *)a2 + 127);
  v76 = a2[2];
  v77 = a2[3];
  v78 = a2[4];
  v79 = a2[5];
  v74 = *a2;
  v75 = a2[1];
  v46 = a3[1];
  v47 = *a3;
  v44 = *((_BYTE *)a3 + 17);
  v45 = *((_BYTE *)a3 + 16);
  v42 = a3[4];
  v43 = a3[3];
  sub_1D57DD5B8(a4, (uint64_t)v82);
  v48 = *a5;
  v20 = *((_QWORD *)a5 + 2);
  v52 = *a6;
  v50 = *((_QWORD *)a6 + 2);
  v51 = *((_QWORD *)a6 + 1);
  v49 = *((_DWORD *)a6 + 6);
  LOBYTE(a6) = a6[28];
  v53 = a7[1];
  v54 = *a7;
  LOWORD(a7) = *((_WORD *)a7 + 8);
  v57 = a8[1];
  v58 = *a8;
  v56 = a8[2];
  v21 = *((_QWORD *)a8 + 6);
  v22 = *((_QWORD *)a8 + 7);
  v55 = v21;
  v60 = *a10;
  v59 = *((_BYTE *)a10 + 8);
  v68 = *a11;
  v66 = *((_QWORD *)a11 + 2);
  v67 = *((_QWORD *)a11 + 1);
  v64 = a11[25];
  v65 = a11[24];
  v62 = *((_QWORD *)a11 + 5);
  v63 = *((_QWORD *)a11 + 4);
  v61 = a11[48];
  v69 = *((_QWORD *)a12 + 3);
  v70 = *((_QWORD *)a12 + 2);
  v24 = *a13;
  v23 = a13[1];
  v25 = *a14;
  v73 = *a15;
  v71 = *a12;
  v72 = (__n128)a15[1];
  v26 = *((_QWORD *)a15 + 4);
  v27 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(a9, a1, v27);
  v28 = (int *)type metadata accessor for MediaEngageCompleteEvent.Model(0);
  v29 = a9 + v28[5];
  *(_OWORD *)(v29 + 96) = v80;
  *(_OWORD *)(v29 + 112) = *(_OWORD *)v81;
  *(_QWORD *)(v29 + 127) = *(_QWORD *)&v81[15];
  *(_OWORD *)(v29 + 32) = v76;
  *(_OWORD *)(v29 + 48) = v77;
  *(_OWORD *)(v29 + 64) = v78;
  *(_OWORD *)(v29 + 80) = v79;
  *(_OWORD *)v29 = v74;
  *(_OWORD *)(v29 + 16) = v75;
  v30 = a9 + v28[6];
  *(_QWORD *)v30 = v47;
  *(_QWORD *)(v30 + 8) = v46;
  *(_BYTE *)(v30 + 16) = v45;
  *(_BYTE *)(v30 + 17) = v44;
  *(_QWORD *)(v30 + 24) = v43;
  *(_QWORD *)(v30 + 32) = v42;
  sub_1D57DD5B8((uint64_t)v82, a9 + v28[7]);
  v31 = a9 + v28[8];
  *(_OWORD *)v31 = v48;
  *(_QWORD *)(v31 + 16) = v20;
  v32 = a9 + v28[9];
  *(_BYTE *)v32 = v52;
  *(_QWORD *)(v32 + 8) = v51;
  *(_QWORD *)(v32 + 16) = v50;
  *(_DWORD *)(v32 + 24) = v49;
  *(_BYTE *)(v32 + 28) = (_BYTE)a6;
  v33 = a9 + v28[10];
  *(_QWORD *)v33 = v54;
  *(_QWORD *)(v33 + 8) = v53;
  *(_WORD *)(v33 + 16) = (_WORD)a7;
  v34 = a9 + v28[11];
  *(_OWORD *)v34 = v58;
  *(_OWORD *)(v34 + 16) = v57;
  *(_OWORD *)(v34 + 32) = v56;
  *(_QWORD *)(v34 + 48) = v55;
  *(_QWORD *)(v34 + 56) = v22;
  v35 = a9 + v28[12];
  *(_QWORD *)v35 = v60;
  *(_BYTE *)(v35 + 8) = v59;
  v36 = a9 + v28[13];
  *(_BYTE *)v36 = v68;
  *(_QWORD *)(v36 + 8) = v67;
  *(_QWORD *)(v36 + 16) = v66;
  *(_BYTE *)(v36 + 24) = v65;
  *(_BYTE *)(v36 + 25) = v64;
  *(_QWORD *)(v36 + 32) = v63;
  *(_QWORD *)(v36 + 40) = v62;
  *(_BYTE *)(v36 + 48) = v61;
  v37 = a9 + v28[14];
  *(_OWORD *)v37 = v71;
  *(_QWORD *)(v37 + 16) = v70;
  *(_QWORD *)(v37 + 24) = v69;
  v38 = (_QWORD *)(a9 + v28[15]);
  *v38 = v24;
  v38[1] = v23;
  *(_WORD *)(a9 + v28[16]) = v25;
  v39 = a9 + v28[17];
  result = v72;
  *(_OWORD *)v39 = v73;
  *(__n128 *)(v39 + 16) = v72;
  *(_QWORD *)(v39 + 32) = v26;
  return result;
}

uint64_t sub_1D595DFF8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D595E030 + 4 * byte_1D5ACFA50[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D595E030()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D595E064()
{
  return 0x74614470756F7267;
}

uint64_t sub_1D595E078()
{
  return 0x6174614464656566;
}

unint64_t sub_1D595E0B4()
{
  return 0xD000000000000010;
}

unint64_t sub_1D595E0D0()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1D595E180()
{
  unsigned __int8 *v0;

  return sub_1D595DFF8(*v0);
}

uint64_t sub_1D595E188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D596394C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D595E1AC()
{
  sub_1D595E780();
  return sub_1D5AAEED4();
}

uint64_t sub_1D595E1D4()
{
  sub_1D595E780();
  return sub_1D5AAEEE0();
}

uint64_t MediaEngageCompleteEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  _OWORD *v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v48;
  char v49;
  _OWORD v50[2];
  __int128 v51;
  __int128 v52;
  _OWORD v53[7];
  _BYTE v54[23];
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char v62;

  v3 = v1;
  sub_1D595F200(0, &qword_1EFF4E220, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v48 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D595E780();
  sub_1D5AAEEC8();
  v62 = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for MediaEngageCompleteEvent.Model(0);
    v11 = v3 + v10[5];
    v12 = *(_OWORD *)(v11 + 112);
    v53[6] = *(_OWORD *)(v11 + 96);
    *(_OWORD *)v54 = v12;
    *(_QWORD *)&v54[15] = *(_QWORD *)(v11 + 127);
    v13 = *(_OWORD *)(v11 + 48);
    v53[2] = *(_OWORD *)(v11 + 32);
    v53[3] = v13;
    v14 = *(_OWORD *)(v11 + 80);
    v53[4] = *(_OWORD *)(v11 + 64);
    v53[5] = v14;
    v15 = *(_OWORD *)(v11 + 16);
    v53[0] = *(_OWORD *)v11;
    v53[1] = v15;
    LOBYTE(v50[0]) = 1;
    sub_1D57CB940();
    sub_1D5AAED6C();
    v16 = (uint64_t *)(v3 + v10[6]);
    v17 = *v16;
    v18 = v16[1];
    v19 = *((_BYTE *)v16 + 16);
    v20 = *((_BYTE *)v16 + 17);
    v22 = v16[3];
    v21 = v16[4];
    v56 = v17;
    v57 = v18;
    v58 = v19;
    v59 = v20;
    v60 = v22;
    v61 = v21;
    v55 = 2;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    sub_1D57DD5B8(v3 + v10[7], (uint64_t)v53);
    sub_1D57DD5B8((uint64_t)v53, (uint64_t)v50);
    v49 = 3;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v23 = v3 + v10[8];
    v24 = *(_QWORD *)(v23 + 16);
    v50[0] = *(_OWORD *)v23;
    *(_QWORD *)&v50[1] = v24;
    v49 = 4;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v25 = (char *)(v3 + v10[9]);
    v26 = *v25;
    v27 = *((_QWORD *)v25 + 1);
    v28 = *((_QWORD *)v25 + 2);
    v29 = *((_DWORD *)v25 + 6);
    LOBYTE(v25) = v25[28];
    LOBYTE(v50[0]) = v26;
    *((_QWORD *)&v50[0] + 1) = v27;
    *(_QWORD *)&v50[1] = v28;
    DWORD2(v50[1]) = v29;
    BYTE12(v50[1]) = (_BYTE)v25;
    v49 = 5;
    sub_1D57E7E7C();
    sub_1D5AAED6C();
    v30 = (uint64_t *)(v3 + v10[10]);
    v31 = *v30;
    v32 = v30[1];
    LOWORD(v30) = *((_WORD *)v30 + 8);
    *(_QWORD *)&v50[0] = v31;
    *((_QWORD *)&v50[0] + 1) = v32;
    LOWORD(v50[1]) = (_WORD)v30;
    v49 = 6;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v33 = (_OWORD *)(v3 + v10[11]);
    v34 = v33[1];
    v50[0] = *v33;
    v50[1] = v34;
    v35 = v33[3];
    v51 = v33[2];
    v52 = v35;
    v49 = 7;
    sub_1D57E8274();
    sub_1D5AAED18();
    v36 = (uint64_t *)(v3 + v10[12]);
    v37 = *v36;
    LOBYTE(v36) = *((_BYTE *)v36 + 8);
    *(_QWORD *)&v50[0] = v37;
    BYTE8(v50[0]) = (_BYTE)v36;
    v49 = 8;
    sub_1D595CF00();
    sub_1D5AAED6C();
    v38 = v3 + v10[13];
    v39 = *(_BYTE *)(v38 + 24);
    v40 = *(_BYTE *)(v38 + 25);
    v41 = *(_BYTE *)(v38 + 48);
    LOBYTE(v50[0]) = *(_BYTE *)v38;
    *(_OWORD *)((char *)v50 + 8) = *(_OWORD *)(v38 + 8);
    BYTE8(v50[1]) = v39;
    BYTE9(v50[1]) = v40;
    v51 = *(_OWORD *)(v38 + 32);
    LOBYTE(v52) = v41;
    v49 = 9;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v42 = (_OWORD *)(v3 + v10[14]);
    v43 = v42[1];
    v50[0] = *v42;
    v50[1] = v43;
    v49 = 10;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    v50[0] = *(_OWORD *)(v3 + v10[15]);
    v49 = 11;
    sub_1D57CAD6C();
    sub_1D5AAED18();
    LOWORD(v50[0]) = *(_WORD *)(v3 + v10[16]);
    v49 = 12;
    sub_1D57CA4E4();
    sub_1D5AAED18();
    v44 = v3 + v10[17];
    v45 = *(_QWORD *)(v44 + 32);
    v46 = *(_OWORD *)(v44 + 16);
    v50[0] = *(_OWORD *)v44;
    v50[1] = v46;
    *(_QWORD *)&v51 = v45;
    v49 = 13;
    sub_1D57C71C4();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D595E780()
{
  unint64_t result;

  result = qword_1EFF4E228;
  if (!qword_1EFF4E228)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACFDEC, &type metadata for MediaEngageCompleteEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E228);
  }
  return result;
}

uint64_t MediaEngageCompleteEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int v20;
  int *v21;
  char *v22;
  int *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  char v40;
  char *v41;
  uint64_t v42;
  __int16 v43;
  char *v44;
  char *v45;
  __int128 v46;
  __int128 v47;
  char v48;
  char *v49;
  char v50;
  char v51;
  char v52;
  char *v53;
  uint64_t v54;
  char *v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BOOL4 v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  _OWORD v74[2];
  __int128 v75;
  __int128 v76;
  char v77;
  _BYTE v78[144];
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  _BYTE v86[23];
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  _OWORD v94[3];
  int *v95;

  v65 = a2;
  v4 = sub_1D5AADF98();
  v68 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D595F200(0, &qword_1EFF4E230, MEMORY[0x1E0DED048]);
  v69 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v64 - v9;
  v95 = (int *)type metadata accessor for MediaEngageCompleteEvent.Model(0);
  MEMORY[0x1E0C80A78](v95);
  v73 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v71 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1D595E780();
  v66 = v10;
  sub_1D5AAEEB0();
  v67 = v4;
  if (v2)
  {
    v72 = v2;
    LODWORD(v69) = 0;
    v13 = v73;
    result = __swift_destroy_boxed_opaque_existential_1(v71);
    v20 = 0;
    v70 = 0;
    LODWORD(v71) = 0;
    v21 = v95;
    if ((_DWORD)v69)
      goto LABEL_10;
LABEL_5:
    if (!v20)
      goto LABEL_11;
LABEL_6:
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v70)
      goto LABEL_12;
    goto LABEL_7;
  }
  v64 = v8;
  LOBYTE(v87) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v22 = v73;
  (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v73, v6, v4);
  v78[143] = 1;
  sub_1D57CB8FC();
  sub_1D5AAECD0();
  v23 = v95;
  v24 = &v22[v95[5]];
  v25 = *(_OWORD *)v86;
  *((_OWORD *)v24 + 6) = v85;
  *((_OWORD *)v24 + 7) = v25;
  *(_QWORD *)(v24 + 127) = *(_QWORD *)&v86[15];
  v26 = v82;
  *((_OWORD *)v24 + 2) = v81;
  *((_OWORD *)v24 + 3) = v26;
  v27 = v84;
  *((_OWORD *)v24 + 4) = v83;
  *((_OWORD *)v24 + 5) = v27;
  v28 = v80;
  *(_OWORD *)v24 = v79;
  *((_OWORD *)v24 + 1) = v28;
  v78[0] = 2;
  sub_1D57CB874();
  sub_1D5AAECD0();
  v29 = *((_QWORD *)&v87 + 1);
  v30 = v88;
  v31 = BYTE1(v88);
  v32 = *((_QWORD *)&v88 + 1);
  v33 = v89;
  v34 = &v22[v23[6]];
  *(_QWORD *)v34 = v87;
  *((_QWORD *)v34 + 1) = v29;
  v34[16] = v30;
  v34[17] = v31;
  *((_QWORD *)v34 + 3) = v32;
  *((_QWORD *)v34 + 4) = v33;
  v78[142] = 3;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  sub_1D57DD5B8((uint64_t)&v87, (uint64_t)v78);
  sub_1D57DD5B8((uint64_t)v78, (uint64_t)&v22[v23[7]]);
  v77 = 4;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v35 = *(_QWORD *)&v74[1];
  v36 = &v22[v23[8]];
  *(_OWORD *)v36 = v74[0];
  *((_QWORD *)v36 + 2) = v35;
  v77 = 5;
  sub_1D57E7E38();
  sub_1D5AAECD0();
  v37 = *((_QWORD *)&v74[0] + 1);
  v38 = *(_QWORD *)&v74[1];
  v39 = DWORD2(v74[1]);
  v40 = BYTE12(v74[1]);
  v41 = &v22[v23[9]];
  *v41 = v74[0];
  *((_QWORD *)v41 + 1) = v37;
  *((_QWORD *)v41 + 2) = v38;
  *((_DWORD *)v41 + 6) = v39;
  v41[28] = v40;
  v77 = 6;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v42 = *((_QWORD *)&v74[0] + 1);
  v43 = v74[1];
  v44 = &v22[v23[10]];
  *(_QWORD *)v44 = *(_QWORD *)&v74[0];
  *((_QWORD *)v44 + 1) = v42;
  *((_WORD *)v44 + 8) = v43;
  v77 = 7;
  sub_1D57E8230();
  sub_1D5AAEC7C();
  v45 = &v22[v23[11]];
  v46 = v74[1];
  *(_OWORD *)v45 = v74[0];
  *((_OWORD *)v45 + 1) = v46;
  v47 = v76;
  *((_OWORD *)v45 + 2) = v75;
  *((_OWORD *)v45 + 3) = v47;
  v77 = 8;
  sub_1D595CEBC();
  sub_1D5AAECD0();
  v48 = BYTE8(v74[0]);
  v49 = &v22[v95[12]];
  *(_QWORD *)v49 = *(_QWORD *)&v74[0];
  v49[8] = v48;
  v77 = 9;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v72 = 0;
  v50 = BYTE8(v74[1]);
  v51 = BYTE9(v74[1]);
  v52 = v76;
  v53 = &v73[v95[13]];
  *v53 = v74[0];
  *(_OWORD *)(v53 + 8) = *(_OWORD *)((char *)v74 + 8);
  v53[24] = v50;
  v53[25] = v51;
  *((_OWORD *)v53 + 2) = v75;
  v53[48] = v52;
  v77 = 10;
  sub_1D57C5ED8();
  v54 = v72;
  sub_1D5AAEC7C();
  v70 = v54 == 0;
  v72 = v54;
  if (v54)
    goto LABEL_17;
  v55 = &v73[v95[14]];
  v56 = v74[1];
  *(_OWORD *)v55 = v74[0];
  *((_OWORD *)v55 + 1) = v56;
  v77 = 11;
  sub_1D57CAD28();
  v57 = v72;
  sub_1D5AAEC7C();
  v72 = v57;
  if (v57)
  {
LABEL_17:
    (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v69);
    __swift_destroy_boxed_opaque_existential_1(v71);
    LODWORD(v71) = 0;
  }
  else
  {
    *(_OWORD *)&v73[v95[15]] = v74[0];
    v77 = 12;
    sub_1D57CA4A0();
    v58 = v72;
    sub_1D5AAEC7C();
    v72 = v58;
    if (!v58)
    {
      *(_WORD *)&v73[v95[16]] = v74[0];
      v77 = 13;
      sub_1D57C7180();
      v59 = v72;
      sub_1D5AAEC7C();
      v72 = v59;
      if (!v59)
      {
        (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v69);
        v60 = v75;
        v61 = (uint64_t)v73;
        v62 = &v73[v95[17]];
        v63 = v74[1];
        *(_OWORD *)v62 = v74[0];
        *((_OWORD *)v62 + 1) = v63;
        *((_QWORD *)v62 + 4) = v60;
        sub_1D595F25C(v61, v65);
        __swift_destroy_boxed_opaque_existential_1(v71);
        return sub_1D595F2A0(v61);
      }
    }
    (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v69);
    __swift_destroy_boxed_opaque_existential_1(v71);
    LODWORD(v71) = 1;
  }
  v13 = v73;
  (*(void (**)(char *, uint64_t))(v68 + 8))(v73, v67);
  v20 = 1;
  LODWORD(v69) = 1;
  v15 = &v13[v95[5]];
  v16 = *((_OWORD *)v15 + 7);
  v93 = *((_OWORD *)v15 + 6);
  v94[0] = v16;
  *(_QWORD *)((char *)v94 + 15) = *(_QWORD *)(v15 + 127);
  v17 = *((_OWORD *)v15 + 3);
  v89 = *((_OWORD *)v15 + 2);
  v90 = v17;
  v18 = *((_OWORD *)v15 + 5);
  v91 = *((_OWORD *)v15 + 4);
  v92 = v18;
  v19 = *((_OWORD *)v15 + 1);
  v87 = *(_OWORD *)v15;
  v88 = v19;
  sub_1D57D5AE0((uint64_t)&v87);
  v21 = v95;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D57DD5B8((uint64_t)&v13[v21[7]], (uint64_t)&v87);
  sub_1D57DE9C8(&v87, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DEA24);
  sub_1D57DAEDC(*(_QWORD *)&v13[v21[8]], *(_QWORD *)&v13[v21[8] + 8], *(_QWORD *)&v13[v21[8] + 16]);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v69 & 1) == 0)
    goto LABEL_5;
LABEL_10:
  result = sub_1D57EA730(*(_QWORD *)&v13[v21[11]], *(_QWORD *)&v13[v21[11] + 8]);
  if ((v20 & 1) != 0)
    goto LABEL_6;
LABEL_11:
  if (v70)
  {
LABEL_12:
    result = sub_1D57EA700(*(_QWORD *)&v13[v21[14]], *(_QWORD *)&v13[v21[14] + 8]);
    if ((v71 & 1) == 0)
      return result;
    return swift_bridgeObjectRelease();
  }
LABEL_7:
  if (!(_DWORD)v71)
    return result;
  return swift_bridgeObjectRelease();
}

void sub_1D595F200(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D595E780();
    v7 = a3(a1, &type metadata for MediaEngageCompleteEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D595F25C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MediaEngageCompleteEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D595F2A0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MediaEngageCompleteEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D595F2DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaEngageCompleteEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D595F2F0(_QWORD *a1)
{
  return MediaEngageCompleteEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D595F304@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47298, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4E1F0, a1);
}

uint64_t sub_1D595F328@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF472A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4E208, a1);
}

uint64_t sub_1D595F34C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v11, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C7268, (void (*)(void))sub_1D595CEBC, (void (*)(void))sub_1D595CF00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v11, v26);
  v27 = a2 + a1[15];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v11, v28);
  v29 = a2 + a1[16];
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v11, v30);
  v31 = a2 + a1[17];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v31, v11, v32);
}

uint64_t *initializeBufferWithCopyOfBuffer for MediaEngageCompleteEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v60 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v60 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C7268, (void (*)(void))sub_1D595CEBC, (void (*)(void))sub_1D595CF00);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
    v56 = a3[17];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
  }
  return a1;
}

uint64_t destroy for MediaEngageCompleteEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C7268, (void (*)(void))sub_1D595CEBC, (void (*)(void))sub_1D595CF00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  v29 = a1 + a2[17];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
}

uint64_t initializeWithCopy for MediaEngageCompleteEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7268, (void (*)(void))sub_1D595CEBC, (void (*)(void))sub_1D595CF00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
  return a1;
}

uint64_t assignWithCopy for MediaEngageCompleteEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7268, (void (*)(void))sub_1D595CEBC, (void (*)(void))sub_1D595CF00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v56, v57, v58);
  return a1;
}

uint64_t initializeWithTake for MediaEngageCompleteEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7268, (void (*)(void))sub_1D595CEBC, (void (*)(void))sub_1D595CF00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
  return a1;
}

uint64_t assignWithTake for MediaEngageCompleteEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7268, (void (*)(void))sub_1D595CEBC, (void (*)(void))sub_1D595CF00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaEngageCompleteEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5961048(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7268, (void (*)(void))sub_1D595CEBC, (void (*)(void))sub_1D595CF00);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
                          v12 = *(_QWORD *)(v24 - 8);
                          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                          {
                            v8 = v24;
                            v13 = a3[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                            v8 = v25;
                            v12 = *(_QWORD *)(v25 - 8);
                            v13 = a3[17];
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for MediaEngageCompleteEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5961418(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7268, (void (*)(void))sub_1D595CEBC, (void (*)(void))sub_1D595CF00);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
                          v14 = *(_QWORD *)(v26 - 8);
                          if (*(_DWORD *)(v14 + 84) == a3)
                          {
                            v10 = v26;
                            v15 = a4[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                            v10 = v27;
                            v14 = *(_QWORD *)(v27 - 8);
                            v15 = a4[17];
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D59617E4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C7268, (void (*)(void))sub_1D595CEBC, (void (*)(void))sub_1D595CF00);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                      if (v10 <= 0x3F)
                      {
                        sub_1D579E208(319, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                        if (v11 <= 0x3F)
                        {
                          sub_1D579E208(319, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
                          if (v12 <= 0x3F)
                          {
                            sub_1D579E208(319, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                            if (v13 <= 0x3F)
                              swift_initStructMetadata();
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for MediaEngageCompleteEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  _QWORD *v81;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v12;
    v10[32] = v11[32];
    v13 = *((_QWORD *)v11 + 6);
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 6) = v13;
    v10[56] = v11[56];
    v10[57] = v11[57];
    v14 = *((_QWORD *)v11 + 9);
    *((_QWORD *)v10 + 8) = *((_QWORD *)v11 + 8);
    *((_QWORD *)v10 + 9) = v14;
    v10[80] = v11[80];
    *(_OWORD *)(v10 + 88) = *(_OWORD *)(v11 + 88);
    *((_QWORD *)v10 + 13) = *((_QWORD *)v11 + 13);
    v10[112] = v11[112];
    *((_QWORD *)v10 + 15) = *((_QWORD *)v11 + 15);
    *((_DWORD *)v10 + 32) = *((_DWORD *)v11 + 32);
    v10[132] = v11[132];
    *(_WORD *)(v10 + 133) = *(_WORD *)(v11 + 133);
    v15 = (char *)a1 + v9;
    v16 = (char *)a2 + v9;
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    *((_WORD *)v15 + 8) = *((_WORD *)v16 + 8);
    v18 = *((_QWORD *)v16 + 4);
    *((_QWORD *)v15 + 3) = *((_QWORD *)v16 + 3);
    *((_QWORD *)v15 + 4) = v18;
    v19 = a3[7];
    v20 = (char *)a1 + v19;
    v81 = a2;
    v21 = (char *)a2 + v19;
    v22 = *((_QWORD *)v21 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22)
    {
      *(_WORD *)v20 = *(_WORD *)v21;
      *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
      *((_QWORD *)v20 + 2) = v22;
      *((_QWORD *)v20 + 3) = *((_QWORD *)v21 + 3);
      v23 = *((_QWORD *)v21 + 5);
      *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
      *((_QWORD *)v20 + 5) = v23;
      v24 = *((_QWORD *)v21 + 7);
      *((_QWORD *)v20 + 6) = *((_QWORD *)v21 + 6);
      *((_QWORD *)v20 + 7) = v24;
      v25 = *((_QWORD *)v21 + 9);
      *((_QWORD *)v20 + 8) = *((_QWORD *)v21 + 8);
      *((_QWORD *)v20 + 9) = v25;
      v20[80] = v21[80];
      v26 = *((_QWORD *)v21 + 12);
      *((_QWORD *)v20 + 11) = *((_QWORD *)v21 + 11);
      *((_QWORD *)v20 + 12) = v26;
      *((_QWORD *)v20 + 13) = *((_QWORD *)v21 + 13);
      v20[112] = v21[112];
      v28 = *((_QWORD *)v21 + 15);
      v27 = *((_QWORD *)v21 + 16);
      *((_QWORD *)v20 + 15) = v28;
      *((_QWORD *)v20 + 16) = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v30 = *((_OWORD *)v21 + 7);
      *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
      *((_OWORD *)v20 + 7) = v30;
      *((_QWORD *)v20 + 16) = *((_QWORD *)v21 + 16);
      v31 = *((_OWORD *)v21 + 3);
      *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
      *((_OWORD *)v20 + 3) = v31;
      v32 = *((_OWORD *)v21 + 5);
      *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
      *((_OWORD *)v20 + 5) = v32;
      v33 = *((_OWORD *)v21 + 1);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v33;
    }
    v34 = a3[8];
    v35 = (char *)a1 + v34;
    v36 = (char *)v81 + v34;
    v37 = *((_QWORD *)v36 + 2);
    if (v37 == 1)
    {
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
    }
    else
    {
      *v35 = *v36;
      *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
      *((_QWORD *)v35 + 2) = v37;
      swift_bridgeObjectRetain();
    }
    v38 = a3[9];
    v39 = a3[10];
    v40 = (char *)a1 + v38;
    v41 = (char *)v81 + v38;
    *v40 = *v41;
    v42 = *((_QWORD *)v41 + 2);
    *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
    *((_QWORD *)v40 + 2) = v42;
    *((_DWORD *)v40 + 6) = *((_DWORD *)v41 + 6);
    v40[28] = v41[28];
    v43 = (char *)a1 + v39;
    v44 = (char *)v81 + v39;
    v45 = *((_QWORD *)v44 + 1);
    *(_QWORD *)v43 = *(_QWORD *)v44;
    *((_QWORD *)v43 + 1) = v45;
    v43[16] = v44[16];
    v43[17] = v44[17];
    v46 = a3[11];
    v47 = (_QWORD *)((char *)a1 + v46);
    v48 = (_QWORD *)((char *)v81 + v46);
    v49 = *(_QWORD *)((char *)v81 + v46 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v49)
    {
      *v47 = *v48;
      v47[1] = v49;
      v50 = v48[3];
      v47[2] = v48[2];
      v47[3] = v50;
      v51 = v48[5];
      v47[4] = v48[4];
      v47[5] = v51;
      v52 = v48[6];
      v53 = v48[7];
      v47[6] = v52;
      v47[7] = v53;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v54 = *((_OWORD *)v48 + 1);
      *(_OWORD *)v47 = *(_OWORD *)v48;
      *((_OWORD *)v47 + 1) = v54;
      v55 = *((_OWORD *)v48 + 3);
      *((_OWORD *)v47 + 2) = *((_OWORD *)v48 + 2);
      *((_OWORD *)v47 + 3) = v55;
    }
    v56 = a3[12];
    v57 = a3[13];
    v58 = (char *)a1 + v56;
    v59 = (char *)v81 + v56;
    *(_QWORD *)v58 = *(_QWORD *)v59;
    v58[8] = v59[8];
    v60 = (char *)a1 + v57;
    v61 = (char *)v81 + v57;
    *v60 = *v61;
    v62 = *((_QWORD *)v61 + 2);
    *((_QWORD *)v60 + 1) = *((_QWORD *)v61 + 1);
    *((_QWORD *)v60 + 2) = v62;
    *((_WORD *)v60 + 12) = *((_WORD *)v61 + 12);
    v63 = *((_QWORD *)v61 + 5);
    *((_QWORD *)v60 + 4) = *((_QWORD *)v61 + 4);
    *((_QWORD *)v60 + 5) = v63;
    v60[48] = v61[48];
    v64 = a3[14];
    v65 = (char *)a1 + v64;
    v66 = (char *)v81 + v64;
    v67 = *(_QWORD *)((char *)v81 + v64 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v67)
    {
      *(_QWORD *)v65 = *(_QWORD *)v66;
      *((_QWORD *)v65 + 1) = v67;
      *((_WORD *)v65 + 8) = *((_WORD *)v66 + 8);
      *((_QWORD *)v65 + 3) = *((_QWORD *)v66 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v68 = *((_OWORD *)v66 + 1);
      *(_OWORD *)v65 = *(_OWORD *)v66;
      *((_OWORD *)v65 + 1) = v68;
    }
    v69 = a3[15];
    v70 = a3[16];
    v71 = (_QWORD *)((char *)a1 + v69);
    v72 = (_QWORD *)((char *)v81 + v69);
    v73 = v72[1];
    *v71 = *v72;
    v71[1] = v73;
    *(_WORD *)((char *)a1 + v70) = *(_WORD *)((char *)v81 + v70);
    v74 = a3[17];
    v75 = (char *)a1 + v74;
    v76 = (char *)v81 + v74;
    v77 = *(_QWORD *)((char *)v81 + v74 + 8);
    swift_bridgeObjectRetain();
    if (v77 == 1)
    {
      v78 = *((_OWORD *)v76 + 1);
      *(_OWORD *)v75 = *(_OWORD *)v76;
      *((_OWORD *)v75 + 1) = v78;
      *((_QWORD *)v75 + 4) = *((_QWORD *)v76 + 4);
    }
    else
    {
      *(_QWORD *)v75 = *(_QWORD *)v76;
      *((_QWORD *)v75 + 1) = v77;
      v79 = *((_QWORD *)v76 + 3);
      *((_QWORD *)v75 + 2) = *((_QWORD *)v76 + 2);
      *((_QWORD *)v75 + 3) = v79;
      *((_QWORD *)v75 + 4) = *((_QWORD *)v76 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t destroy for MediaEngageCompleteEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[7] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[8] + 16) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[11] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[14] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + a2[17] + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MediaEngageCompleteEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  int *v79;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  v12 = *(_QWORD *)(v10 + 48);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 48) = v12;
  *(_BYTE *)(v9 + 56) = *(_BYTE *)(v10 + 56);
  *(_BYTE *)(v9 + 57) = *(_BYTE *)(v10 + 57);
  v13 = *(_QWORD *)(v10 + 72);
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v9 + 72) = v13;
  *(_BYTE *)(v9 + 80) = *(_BYTE *)(v10 + 80);
  *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
  *(_QWORD *)(v9 + 104) = *(_QWORD *)(v10 + 104);
  *(_BYTE *)(v9 + 112) = *(_BYTE *)(v10 + 112);
  *(_QWORD *)(v9 + 120) = *(_QWORD *)(v10 + 120);
  *(_DWORD *)(v9 + 128) = *(_DWORD *)(v10 + 128);
  *(_BYTE *)(v9 + 132) = *(_BYTE *)(v10 + 132);
  *(_WORD *)(v9 + 133) = *(_WORD *)(v10 + 133);
  v14 = a1 + v8;
  v15 = a2 + v8;
  v16 = *(_QWORD *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_QWORD *)(v14 + 8) = v16;
  *(_WORD *)(v14 + 16) = *(_WORD *)(v15 + 16);
  v17 = *(_QWORD *)(v15 + 32);
  *(_QWORD *)(v14 + 24) = *(_QWORD *)(v15 + 24);
  *(_QWORD *)(v14 + 32) = v17;
  v79 = a3;
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)(a2 + v18 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21)
  {
    *(_WORD *)v19 = *(_WORD *)v20;
    *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
    *(_QWORD *)(v19 + 16) = v21;
    *(_QWORD *)(v19 + 24) = *(_QWORD *)(v20 + 24);
    v22 = *(_QWORD *)(v20 + 40);
    *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
    *(_QWORD *)(v19 + 40) = v22;
    v23 = *(_QWORD *)(v20 + 56);
    *(_QWORD *)(v19 + 48) = *(_QWORD *)(v20 + 48);
    *(_QWORD *)(v19 + 56) = v23;
    v24 = *(_QWORD *)(v20 + 72);
    *(_QWORD *)(v19 + 64) = *(_QWORD *)(v20 + 64);
    *(_QWORD *)(v19 + 72) = v24;
    *(_BYTE *)(v19 + 80) = *(_BYTE *)(v20 + 80);
    v25 = *(_QWORD *)(v20 + 96);
    *(_QWORD *)(v19 + 88) = *(_QWORD *)(v20 + 88);
    *(_QWORD *)(v19 + 96) = v25;
    *(_QWORD *)(v19 + 104) = *(_QWORD *)(v20 + 104);
    *(_BYTE *)(v19 + 112) = *(_BYTE *)(v20 + 112);
    v27 = *(_QWORD *)(v20 + 120);
    v26 = *(_QWORD *)(v20 + 128);
    *(_QWORD *)(v19 + 120) = v27;
    *(_QWORD *)(v19 + 128) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v28 = *(_OWORD *)(v20 + 112);
    *(_OWORD *)(v19 + 96) = *(_OWORD *)(v20 + 96);
    *(_OWORD *)(v19 + 112) = v28;
    *(_QWORD *)(v19 + 128) = *(_QWORD *)(v20 + 128);
    v29 = *(_OWORD *)(v20 + 48);
    *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
    *(_OWORD *)(v19 + 48) = v29;
    v30 = *(_OWORD *)(v20 + 80);
    *(_OWORD *)(v19 + 64) = *(_OWORD *)(v20 + 64);
    *(_OWORD *)(v19 + 80) = v30;
    v31 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 16) = v31;
  }
  v32 = v79[8];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_QWORD *)(v34 + 16);
  if (v35 == 1)
  {
    *(_OWORD *)v33 = *(_OWORD *)v34;
    *(_QWORD *)(v33 + 16) = *(_QWORD *)(v34 + 16);
  }
  else
  {
    *(_BYTE *)v33 = *(_BYTE *)v34;
    *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
    *(_QWORD *)(v33 + 16) = v35;
    swift_bridgeObjectRetain();
  }
  v36 = v79[9];
  v37 = v79[10];
  v38 = a1 + v36;
  v39 = a2 + v36;
  *(_BYTE *)v38 = *(_BYTE *)v39;
  v40 = *(_QWORD *)(v39 + 16);
  *(_QWORD *)(v38 + 8) = *(_QWORD *)(v39 + 8);
  *(_QWORD *)(v38 + 16) = v40;
  *(_DWORD *)(v38 + 24) = *(_DWORD *)(v39 + 24);
  *(_BYTE *)(v38 + 28) = *(_BYTE *)(v39 + 28);
  v41 = a1 + v37;
  v42 = a2 + v37;
  v43 = *(_QWORD *)(v42 + 8);
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *(_QWORD *)(v41 + 8) = v43;
  *(_BYTE *)(v41 + 16) = *(_BYTE *)(v42 + 16);
  *(_BYTE *)(v41 + 17) = *(_BYTE *)(v42 + 17);
  v44 = v79[11];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  v47 = *(_QWORD *)(a2 + v44 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v47)
  {
    *v45 = *v46;
    v45[1] = v47;
    v48 = v46[3];
    v45[2] = v46[2];
    v45[3] = v48;
    v49 = v46[5];
    v45[4] = v46[4];
    v45[5] = v49;
    v50 = v46[6];
    v51 = v46[7];
    v45[6] = v50;
    v45[7] = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v52 = *((_OWORD *)v46 + 1);
    *(_OWORD *)v45 = *(_OWORD *)v46;
    *((_OWORD *)v45 + 1) = v52;
    v53 = *((_OWORD *)v46 + 3);
    *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
    *((_OWORD *)v45 + 3) = v53;
  }
  v54 = v79[12];
  v55 = v79[13];
  v56 = a1 + v54;
  v57 = a2 + v54;
  *(_QWORD *)v56 = *(_QWORD *)v57;
  *(_BYTE *)(v56 + 8) = *(_BYTE *)(v57 + 8);
  v58 = a1 + v55;
  v59 = a2 + v55;
  *(_BYTE *)v58 = *(_BYTE *)v59;
  v60 = *(_QWORD *)(v59 + 16);
  *(_QWORD *)(v58 + 8) = *(_QWORD *)(v59 + 8);
  *(_QWORD *)(v58 + 16) = v60;
  *(_WORD *)(v58 + 24) = *(_WORD *)(v59 + 24);
  v61 = *(_QWORD *)(v59 + 40);
  *(_QWORD *)(v58 + 32) = *(_QWORD *)(v59 + 32);
  *(_QWORD *)(v58 + 40) = v61;
  *(_BYTE *)(v58 + 48) = *(_BYTE *)(v59 + 48);
  v62 = v79[14];
  v63 = a1 + v62;
  v64 = a2 + v62;
  v65 = *(_QWORD *)(a2 + v62 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v65)
  {
    *(_QWORD *)v63 = *(_QWORD *)v64;
    *(_QWORD *)(v63 + 8) = v65;
    *(_WORD *)(v63 + 16) = *(_WORD *)(v64 + 16);
    *(_QWORD *)(v63 + 24) = *(_QWORD *)(v64 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v66 = *(_OWORD *)(v64 + 16);
    *(_OWORD *)v63 = *(_OWORD *)v64;
    *(_OWORD *)(v63 + 16) = v66;
  }
  v67 = v79[15];
  v68 = v79[16];
  v69 = (_QWORD *)(a1 + v67);
  v70 = (_QWORD *)(a2 + v67);
  v71 = v70[1];
  *v69 = *v70;
  v69[1] = v71;
  *(_WORD *)(a1 + v68) = *(_WORD *)(a2 + v68);
  v72 = v79[17];
  v73 = a1 + v72;
  v74 = a2 + v72;
  v75 = *(_QWORD *)(a2 + v72 + 8);
  swift_bridgeObjectRetain();
  if (v75 == 1)
  {
    v76 = *(_OWORD *)(v74 + 16);
    *(_OWORD *)v73 = *(_OWORD *)v74;
    *(_OWORD *)(v73 + 16) = v76;
    *(_QWORD *)(v73 + 32) = *(_QWORD *)(v74 + 32);
  }
  else
  {
    *(_QWORD *)v73 = *(_QWORD *)v74;
    *(_QWORD *)(v73 + 8) = v75;
    v77 = *(_QWORD *)(v74 + 24);
    *(_QWORD *)(v73 + 16) = *(_QWORD *)(v74 + 16);
    *(_QWORD *)(v73 + 24) = v77;
    *(_QWORD *)(v73 + 32) = *(_QWORD *)(v74 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for MediaEngageCompleteEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  __int128 *v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  __int128 v83;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(a2 + v7 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  v10 = *(_QWORD *)(v9 + 48);
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_QWORD *)(v8 + 48) = v10;
  *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  *(_QWORD *)(v8 + 72) = v11;
  *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
  *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
  *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
  *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
  *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(a2 + v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_BYTE *)(v13 + 17) = *(_BYTE *)(v14 + 17);
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)(a1 + v15 + 16);
  v19 = *(_QWORD *)(a2 + v15 + 16);
  if (v18)
  {
    if (v19)
    {
      *(_BYTE *)v16 = *(_BYTE *)v17;
      *(_BYTE *)(v16 + 1) = *(_BYTE *)(v17 + 1);
      *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
      *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v16 + 24) = *(_DWORD *)(v17 + 24);
      *(_DWORD *)(v16 + 28) = *(_DWORD *)(v17 + 28);
      *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 48) = *(_QWORD *)(v17 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 56) = *(_QWORD *)(v17 + 56);
      *(_QWORD *)(v16 + 64) = *(_QWORD *)(v17 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 72) = *(_QWORD *)(v17 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v16 + 80) = *(_BYTE *)(v17 + 80);
      *(_QWORD *)(v16 + 88) = *(_QWORD *)(v17 + 88);
      *(_QWORD *)(v16 + 96) = *(_QWORD *)(v17 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v20 = *(_QWORD *)(v17 + 104);
      *(_BYTE *)(v16 + 112) = *(_BYTE *)(v17 + 112);
      *(_QWORD *)(v16 + 104) = v20;
      *(_QWORD *)(v16 + 120) = *(_QWORD *)(v17 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 128) = *(_QWORD *)(v17 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v16);
      *(_OWORD *)v16 = *(_OWORD *)v17;
      v22 = *(_OWORD *)(v17 + 64);
      v24 = *(_OWORD *)(v17 + 16);
      v23 = *(_OWORD *)(v17 + 32);
      *(_OWORD *)(v16 + 48) = *(_OWORD *)(v17 + 48);
      *(_OWORD *)(v16 + 64) = v22;
      *(_OWORD *)(v16 + 16) = v24;
      *(_OWORD *)(v16 + 32) = v23;
      v26 = *(_OWORD *)(v17 + 96);
      v25 = *(_OWORD *)(v17 + 112);
      v27 = *(_OWORD *)(v17 + 80);
      *(_QWORD *)(v16 + 128) = *(_QWORD *)(v17 + 128);
      *(_OWORD *)(v16 + 96) = v26;
      *(_OWORD *)(v16 + 112) = v25;
      *(_OWORD *)(v16 + 80) = v27;
    }
  }
  else if (v19)
  {
    *(_BYTE *)v16 = *(_BYTE *)v17;
    *(_BYTE *)(v16 + 1) = *(_BYTE *)(v17 + 1);
    *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
    *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
    *(_DWORD *)(v16 + 24) = *(_DWORD *)(v17 + 24);
    *(_DWORD *)(v16 + 28) = *(_DWORD *)(v17 + 28);
    *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
    *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
    *(_QWORD *)(v16 + 48) = *(_QWORD *)(v17 + 48);
    *(_QWORD *)(v16 + 56) = *(_QWORD *)(v17 + 56);
    *(_QWORD *)(v16 + 64) = *(_QWORD *)(v17 + 64);
    *(_QWORD *)(v16 + 72) = *(_QWORD *)(v17 + 72);
    *(_BYTE *)(v16 + 80) = *(_BYTE *)(v17 + 80);
    *(_QWORD *)(v16 + 88) = *(_QWORD *)(v17 + 88);
    *(_QWORD *)(v16 + 96) = *(_QWORD *)(v17 + 96);
    v21 = *(_QWORD *)(v17 + 104);
    *(_BYTE *)(v16 + 112) = *(_BYTE *)(v17 + 112);
    *(_QWORD *)(v16 + 104) = v21;
    *(_QWORD *)(v16 + 120) = *(_QWORD *)(v17 + 120);
    *(_QWORD *)(v16 + 128) = *(_QWORD *)(v17 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
    v28 = *(_OWORD *)(v17 + 16);
    v29 = *(_OWORD *)(v17 + 32);
    v30 = *(_OWORD *)(v17 + 64);
    *(_OWORD *)(v16 + 48) = *(_OWORD *)(v17 + 48);
    *(_OWORD *)(v16 + 64) = v30;
    *(_OWORD *)(v16 + 16) = v28;
    *(_OWORD *)(v16 + 32) = v29;
    v31 = *(_OWORD *)(v17 + 80);
    v32 = *(_OWORD *)(v17 + 96);
    v33 = *(_OWORD *)(v17 + 112);
    *(_QWORD *)(v16 + 128) = *(_QWORD *)(v17 + 128);
    *(_OWORD *)(v16 + 96) = v32;
    *(_OWORD *)(v16 + 112) = v33;
    *(_OWORD *)(v16 + 80) = v31;
  }
  v34 = a3[8];
  v35 = a1 + v34;
  v36 = (__int128 *)(a2 + v34);
  v37 = *(_QWORD *)(a1 + v34 + 16);
  v38 = *(_QWORD *)(a2 + v34 + 16);
  if (v37 == 1)
  {
    if (v38 == 1)
    {
      v39 = *v36;
      *(_QWORD *)(v35 + 16) = *((_QWORD *)v36 + 2);
      *(_OWORD *)v35 = v39;
    }
    else
    {
      *(_BYTE *)v35 = *(_BYTE *)v36;
      *(_QWORD *)(v35 + 8) = *((_QWORD *)v36 + 1);
      *(_QWORD *)(v35 + 16) = *((_QWORD *)v36 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v38 == 1)
  {
    sub_1D57D9100(v35);
    v40 = *((_QWORD *)v36 + 2);
    *(_OWORD *)v35 = *v36;
    *(_QWORD *)(v35 + 16) = v40;
  }
  else
  {
    *(_BYTE *)v35 = *(_BYTE *)v36;
    *(_QWORD *)(v35 + 8) = *((_QWORD *)v36 + 1);
    *(_QWORD *)(v35 + 16) = *((_QWORD *)v36 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v41 = a3[9];
  v42 = a1 + v41;
  v43 = a2 + v41;
  *(_BYTE *)v42 = *(_BYTE *)(a2 + v41);
  *(_QWORD *)(v42 + 8) = *(_QWORD *)(a2 + v41 + 8);
  *(_QWORD *)(v42 + 16) = *(_QWORD *)(a2 + v41 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44 = *(_DWORD *)(v43 + 24);
  *(_BYTE *)(v42 + 28) = *(_BYTE *)(v43 + 28);
  *(_DWORD *)(v42 + 24) = v44;
  v45 = a3[10];
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_QWORD *)v46 = *(_QWORD *)(a2 + v45);
  *(_QWORD *)(v46 + 8) = *(_QWORD *)(a2 + v45 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v46 + 16) = *(_BYTE *)(v47 + 16);
  *(_BYTE *)(v46 + 17) = *(_BYTE *)(v47 + 17);
  v48 = a3[11];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (_QWORD *)(a2 + v48);
  v51 = *(_QWORD *)(a1 + v48 + 8);
  v52 = *(_QWORD *)(a2 + v48 + 8);
  if (v51)
  {
    if (v52)
    {
      *v49 = *v50;
      v49[1] = v50[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v49[2] = v50[2];
      v49[3] = v50[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v49[4] = v50[4];
      v49[5] = v50[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v49[6] = v50[6];
      v49[7] = v50[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE448((uint64_t)v49);
      v53 = *((_OWORD *)v50 + 3);
      v55 = *(_OWORD *)v50;
      v54 = *((_OWORD *)v50 + 1);
      *((_OWORD *)v49 + 2) = *((_OWORD *)v50 + 2);
      *((_OWORD *)v49 + 3) = v53;
      *(_OWORD *)v49 = v55;
      *((_OWORD *)v49 + 1) = v54;
    }
  }
  else if (v52)
  {
    *v49 = *v50;
    v49[1] = v50[1];
    v49[2] = v50[2];
    v49[3] = v50[3];
    v49[4] = v50[4];
    v49[5] = v50[5];
    v49[6] = v50[6];
    v49[7] = v50[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v56 = *(_OWORD *)v50;
    v57 = *((_OWORD *)v50 + 1);
    v58 = *((_OWORD *)v50 + 3);
    *((_OWORD *)v49 + 2) = *((_OWORD *)v50 + 2);
    *((_OWORD *)v49 + 3) = v58;
    *(_OWORD *)v49 = v56;
    *((_OWORD *)v49 + 1) = v57;
  }
  v59 = a3[12];
  v60 = a1 + v59;
  v61 = a2 + v59;
  *(_QWORD *)v60 = *(_QWORD *)v61;
  *(_BYTE *)(v60 + 8) = *(_BYTE *)(v61 + 8);
  v62 = a3[13];
  v63 = a1 + v62;
  v64 = a2 + v62;
  *(_BYTE *)v63 = *(_BYTE *)(a2 + v62);
  *(_QWORD *)(v63 + 8) = *(_QWORD *)(a2 + v62 + 8);
  *(_QWORD *)(v63 + 16) = *(_QWORD *)(a2 + v62 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v63 + 24) = *(_BYTE *)(v64 + 24);
  *(_BYTE *)(v63 + 25) = *(_BYTE *)(v64 + 25);
  *(_QWORD *)(v63 + 32) = *(_QWORD *)(v64 + 32);
  *(_QWORD *)(v63 + 40) = *(_QWORD *)(v64 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v63 + 48) = *(_BYTE *)(v64 + 48);
  v65 = a3[14];
  v66 = a1 + v65;
  v67 = a2 + v65;
  v68 = *(_QWORD *)(a1 + v65 + 8);
  v69 = *(_QWORD *)(a2 + v65 + 8);
  if (v68)
  {
    if (v69)
    {
      *(_QWORD *)v66 = *(_QWORD *)v67;
      *(_QWORD *)(v66 + 8) = *(_QWORD *)(v67 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v66 + 16) = *(_BYTE *)(v67 + 16);
      *(_BYTE *)(v66 + 17) = *(_BYTE *)(v67 + 17);
      *(_QWORD *)(v66 + 24) = *(_QWORD *)(v67 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE47C(v66);
      v70 = *(_OWORD *)(v67 + 16);
      *(_OWORD *)v66 = *(_OWORD *)v67;
      *(_OWORD *)(v66 + 16) = v70;
    }
  }
  else if (v69)
  {
    *(_QWORD *)v66 = *(_QWORD *)v67;
    *(_QWORD *)(v66 + 8) = *(_QWORD *)(v67 + 8);
    *(_BYTE *)(v66 + 16) = *(_BYTE *)(v67 + 16);
    *(_BYTE *)(v66 + 17) = *(_BYTE *)(v67 + 17);
    *(_QWORD *)(v66 + 24) = *(_QWORD *)(v67 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v71 = *(_OWORD *)(v67 + 16);
    *(_OWORD *)v66 = *(_OWORD *)v67;
    *(_OWORD *)(v66 + 16) = v71;
  }
  v72 = a3[15];
  v73 = (_QWORD *)(a1 + v72);
  v74 = (_QWORD *)(a2 + v72);
  *v73 = *v74;
  v73[1] = v74[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + a3[16]) = *(_WORD *)(a2 + a3[16]);
  v75 = a3[17];
  v76 = a1 + v75;
  v77 = (__int128 *)(a2 + v75);
  v78 = *(_QWORD *)(a1 + v75 + 8);
  v79 = *((_QWORD *)v77 + 1);
  if (v78 == 1)
  {
    if (v79 == 1)
    {
      v80 = *v77;
      v81 = v77[1];
      *(_QWORD *)(v76 + 32) = *((_QWORD *)v77 + 4);
      *(_OWORD *)v76 = v80;
      *(_OWORD *)(v76 + 16) = v81;
    }
    else
    {
      *(_QWORD *)v76 = *(_QWORD *)v77;
      *(_QWORD *)(v76 + 8) = *((_QWORD *)v77 + 1);
      *(_QWORD *)(v76 + 16) = *((_QWORD *)v77 + 2);
      *(_QWORD *)(v76 + 24) = *((_QWORD *)v77 + 3);
      *(_QWORD *)(v76 + 32) = *((_QWORD *)v77 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v79 == 1)
  {
    sub_1D57EE4B0(v76);
    v82 = *((_QWORD *)v77 + 4);
    v83 = v77[1];
    *(_OWORD *)v76 = *v77;
    *(_OWORD *)(v76 + 16) = v83;
    *(_QWORD *)(v76 + 32) = v82;
  }
  else
  {
    *(_QWORD *)v76 = *(_QWORD *)v77;
    *(_QWORD *)(v76 + 8) = *((_QWORD *)v77 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v76 + 16) = *((_QWORD *)v77 + 2);
    *(_QWORD *)(v76 + 24) = *((_QWORD *)v77 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v76 + 32) = *((_QWORD *)v77 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t initializeWithTake for MediaEngageCompleteEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  _OWORD *v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  _OWORD *v48;
  _OWORD *v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  *(_QWORD *)(v9 + 127) = *(_QWORD *)(v10 + 127);
  v12 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v12;
  v13 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v13;
  v14 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v14;
  v15 = a1 + v8;
  v16 = a2 + v8;
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  v18 = a3[7];
  v19 = a3[8];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
  v22 = *(_OWORD *)(v21 + 48);
  *(_OWORD *)(v20 + 32) = *(_OWORD *)(v21 + 32);
  *(_OWORD *)(v20 + 48) = v22;
  v23 = *(_OWORD *)(v21 + 112);
  *(_OWORD *)(v20 + 96) = *(_OWORD *)(v21 + 96);
  *(_OWORD *)(v20 + 112) = v23;
  v24 = *(_OWORD *)(v21 + 80);
  *(_OWORD *)(v20 + 64) = *(_OWORD *)(v21 + 64);
  *(_OWORD *)(v20 + 80) = v24;
  v25 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v25;
  v26 = a1 + v19;
  v27 = a2 + v19;
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_QWORD *)(v26 + 16) = *(_QWORD *)(v27 + 16);
  v28 = a3[9];
  v29 = a3[10];
  v30 = (_OWORD *)(a1 + v28);
  v31 = (_OWORD *)(a2 + v28);
  *v30 = *v31;
  *(_OWORD *)((char *)v30 + 13) = *(_OWORD *)((char *)v31 + 13);
  v32 = a1 + v29;
  v33 = a2 + v29;
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_WORD *)(v32 + 16) = *(_WORD *)(v33 + 16);
  v34 = a3[11];
  v35 = a3[12];
  v36 = (_OWORD *)(a1 + v34);
  v37 = (_OWORD *)(a2 + v34);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  v39 = v37[3];
  v36[2] = v37[2];
  v36[3] = v39;
  v40 = a1 + v35;
  v41 = (uint64_t *)(a2 + v35);
  v42 = *v41;
  *(_BYTE *)(v40 + 8) = *((_BYTE *)v41 + 8);
  *(_QWORD *)v40 = v42;
  v43 = a3[13];
  v44 = a3[14];
  v45 = a1 + v43;
  v46 = a2 + v43;
  v47 = *(_OWORD *)(v46 + 16);
  *(_OWORD *)v45 = *(_OWORD *)v46;
  *(_OWORD *)(v45 + 16) = v47;
  *(_OWORD *)(v45 + 32) = *(_OWORD *)(v46 + 32);
  *(_BYTE *)(v45 + 48) = *(_BYTE *)(v46 + 48);
  v48 = (_OWORD *)(a1 + v44);
  v49 = (_OWORD *)(a2 + v44);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  v51 = a3[16];
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  *(_WORD *)(a1 + v51) = *(_WORD *)(a2 + v51);
  v52 = a3[17];
  v53 = a1 + v52;
  v54 = a2 + v52;
  *(_QWORD *)(v53 + 32) = *(_QWORD *)(v54 + 32);
  v55 = *(_OWORD *)(v54 + 16);
  *(_OWORD *)v53 = *(_OWORD *)v54;
  *(_OWORD *)(v53 + 16) = v55;
  return a1;
}

uint64_t assignWithTake for MediaEngageCompleteEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(a2 + v7 + 8);
  v10 = *(_QWORD *)(a2 + v7 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v11 = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = v11;
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
  *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
  *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
  *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
  *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_BYTE *)(v13 + 17) = *(_BYTE *)(v14 + 17);
  v16 = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 32) = v16;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  if (*(_QWORD *)(a1 + v17 + 16))
  {
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      *(_WORD *)v18 = *(_WORD *)v19;
      *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
      *(_QWORD *)(v18 + 16) = v20;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
      *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 40) = *(_QWORD *)(v19 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 48) = *(_QWORD *)(v19 + 48);
      swift_bridgeObjectRelease();
      v21 = *(_QWORD *)(v19 + 64);
      *(_QWORD *)(v18 + 56) = *(_QWORD *)(v19 + 56);
      *(_QWORD *)(v18 + 64) = v21;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 72) = *(_QWORD *)(v19 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v18 + 80) = *(_BYTE *)(v19 + 80);
      v22 = *(_QWORD *)(v19 + 96);
      *(_QWORD *)(v18 + 88) = *(_QWORD *)(v19 + 88);
      *(_QWORD *)(v18 + 96) = v22;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 104) = *(_QWORD *)(v19 + 104);
      *(_BYTE *)(v18 + 112) = *(_BYTE *)(v19 + 112);
      *(_QWORD *)(v18 + 120) = *(_QWORD *)(v19 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 128) = *(_QWORD *)(v19 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D57E17B8(v18);
  }
  v23 = *(_OWORD *)(v19 + 112);
  *(_OWORD *)(v18 + 96) = *(_OWORD *)(v19 + 96);
  *(_OWORD *)(v18 + 112) = v23;
  *(_QWORD *)(v18 + 128) = *(_QWORD *)(v19 + 128);
  v24 = *(_OWORD *)(v19 + 48);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  *(_OWORD *)(v18 + 48) = v24;
  v25 = *(_OWORD *)(v19 + 80);
  *(_OWORD *)(v18 + 64) = *(_OWORD *)(v19 + 64);
  *(_OWORD *)(v18 + 80) = v25;
  v26 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v26;
LABEL_6:
  v27 = a3[8];
  v28 = a1 + v27;
  v29 = a2 + v27;
  if (*(_QWORD *)(a1 + v27 + 16) == 1)
  {
LABEL_9:
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_QWORD *)(v28 + 16) = *(_QWORD *)(v29 + 16);
    goto LABEL_11;
  }
  v30 = *(_QWORD *)(v29 + 16);
  if (v30 == 1)
  {
    sub_1D57D9100(v28);
    goto LABEL_9;
  }
  *(_BYTE *)v28 = *(_BYTE *)v29;
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
  *(_QWORD *)(v28 + 16) = v30;
  swift_bridgeObjectRelease();
LABEL_11:
  v31 = a3[9];
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_BYTE *)v32 = *(_BYTE *)(a2 + v31);
  v34 = *(_QWORD *)(a2 + v31 + 16);
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(a2 + v31 + 8);
  *(_QWORD *)(v32 + 16) = v34;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v32 + 24) = *(_DWORD *)(v33 + 24);
  *(_BYTE *)(v32 + 28) = *(_BYTE *)(v33 + 28);
  v35 = a3[10];
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = *(_QWORD *)(a2 + v35 + 8);
  *(_QWORD *)v36 = *(_QWORD *)(a2 + v35);
  *(_QWORD *)(v36 + 8) = v38;
  swift_bridgeObjectRelease();
  *(_WORD *)(v36 + 16) = *(_WORD *)(v37 + 16);
  v39 = a3[11];
  v40 = (_QWORD *)(a1 + v39);
  v41 = (_QWORD *)(a2 + v39);
  if (*(_QWORD *)(a1 + v39 + 8))
  {
    v42 = v41[1];
    if (v42)
    {
      *v40 = *v41;
      v40[1] = v42;
      swift_bridgeObjectRelease();
      v43 = v41[3];
      v40[2] = v41[2];
      v40[3] = v43;
      swift_bridgeObjectRelease();
      v44 = v41[5];
      v40[4] = v41[4];
      v40[5] = v44;
      swift_bridgeObjectRelease();
      v45 = v41[7];
      v40[6] = v41[6];
      v40[7] = v45;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1D57EE448((uint64_t)v40);
  }
  v46 = *((_OWORD *)v41 + 1);
  *(_OWORD *)v40 = *(_OWORD *)v41;
  *((_OWORD *)v40 + 1) = v46;
  v47 = *((_OWORD *)v41 + 3);
  *((_OWORD *)v40 + 2) = *((_OWORD *)v41 + 2);
  *((_OWORD *)v40 + 3) = v47;
LABEL_16:
  v48 = a3[12];
  v49 = a3[13];
  v50 = a1 + v48;
  v51 = a2 + v48;
  *(_QWORD *)v50 = *(_QWORD *)v51;
  *(_BYTE *)(v50 + 8) = *(_BYTE *)(v51 + 8);
  v52 = a1 + v49;
  v53 = a2 + v49;
  *(_BYTE *)v52 = *(_BYTE *)(a2 + v49);
  v54 = *(_QWORD *)(a2 + v49 + 8);
  v55 = *(_QWORD *)(a2 + v49 + 16);
  *(_QWORD *)(v52 + 8) = v54;
  *(_QWORD *)(v52 + 16) = v55;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v52 + 24) = *(_BYTE *)(v53 + 24);
  *(_BYTE *)(v52 + 25) = *(_BYTE *)(v53 + 25);
  v56 = *(_QWORD *)(v53 + 40);
  *(_QWORD *)(v52 + 32) = *(_QWORD *)(v53 + 32);
  *(_QWORD *)(v52 + 40) = v56;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v52 + 48) = *(_BYTE *)(v53 + 48);
  v57 = a3[14];
  v58 = a1 + v57;
  v59 = a2 + v57;
  if (*(_QWORD *)(a1 + v57 + 8))
  {
    v60 = *(_QWORD *)(v59 + 8);
    if (v60)
    {
      *(_QWORD *)v58 = *(_QWORD *)v59;
      *(_QWORD *)(v58 + 8) = v60;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v58 + 16) = *(_BYTE *)(v59 + 16);
      *(_BYTE *)(v58 + 17) = *(_BYTE *)(v59 + 17);
      *(_QWORD *)(v58 + 24) = *(_QWORD *)(v59 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1D57EE47C(v58);
  }
  v61 = *(_OWORD *)(v59 + 16);
  *(_OWORD *)v58 = *(_OWORD *)v59;
  *(_OWORD *)(v58 + 16) = v61;
LABEL_21:
  v62 = a3[15];
  v63 = (_QWORD *)(a1 + v62);
  v64 = (uint64_t *)(a2 + v62);
  v66 = *v64;
  v65 = v64[1];
  *v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease();
  v67 = a3[17];
  *(_WORD *)(a1 + a3[16]) = *(_WORD *)(a2 + a3[16]);
  v68 = (_QWORD *)(a1 + v67);
  v69 = (_QWORD *)(a2 + v67);
  if (*(_QWORD *)(a1 + v67 + 8) != 1)
  {
    v70 = v69[1];
    if (v70 != 1)
    {
      *v68 = *v69;
      v68[1] = v70;
      swift_bridgeObjectRelease();
      v72 = v69[3];
      v68[2] = v69[2];
      v68[3] = v72;
      swift_bridgeObjectRelease();
      v68[4] = v69[4];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1D57EE4B0(a1 + v67);
  }
  v71 = *((_OWORD *)v69 + 1);
  *(_OWORD *)v68 = *(_OWORD *)v69;
  *((_OWORD *)v68 + 1) = v71;
  v68[4] = v69[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaEngageCompleteEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59635B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaEngageCompleteEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5963644(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_1D59636C0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MediaEngageCompleteEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1D59637F4 + 4 * byte_1D5ACFA63[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_1D5963828 + 4 * byte_1D5ACFA5E[v4]))();
}

uint64_t sub_1D5963828(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5963830(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5963838);
  return result;
}

uint64_t sub_1D5963844(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D596384CLL);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_1D5963850(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5963858(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaEngageCompleteEvent.Model.CodingKeys()
{
  return &type metadata for MediaEngageCompleteEvent.Model.CodingKeys;
}

unint64_t sub_1D5963878()
{
  unint64_t result;

  result = qword_1EFF4E238;
  if (!qword_1EFF4E238)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACFDC4, &type metadata for MediaEngageCompleteEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E238);
  }
  return result;
}

unint64_t sub_1D59638C0()
{
  unint64_t result;

  result = qword_1EFF4E240;
  if (!qword_1EFF4E240)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACFD34, &type metadata for MediaEngageCompleteEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E240);
  }
  return result;
}

unint64_t sub_1D5963908()
{
  unint64_t result;

  result = qword_1EFF4E248;
  if (!qword_1EFF4E248)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ACFD5C, &type metadata for MediaEngageCompleteEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E248);
  }
  return result;
}

uint64_t sub_1D596394C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746144616964656DLL && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AED300 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D5AF0C10 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6569566575737369 && a2 == 0xED00006174614477 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AED320)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

uint64_t sub_1D5963F4C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CCC30, MEMORY[0x1E0CF8078]);
}

uint64_t static HeadlineExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CCFA8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCC30, a1);
}

uint64_t sub_1D5963F8C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CCFB0, MEMORY[0x1E0CF8380]);
}

uint64_t static HeadlineExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CCFD0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCFB0, a1);
}

uint64_t HeadlineExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t HeadlineExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*HeadlineExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t HeadlineExposureEvent.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for HeadlineExposureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CAA30);
}

uint64_t HeadlineExposureEvent.adData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeadlineExposureEvent.adData.modify())(_QWORD)
{
  type metadata accessor for HeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t HeadlineExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5824B58(type metadata accessor for HeadlineExposureEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t HeadlineExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 24);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeadlineExposureEvent.timedData.modify())(_QWORD)
{
  type metadata accessor for HeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t HeadlineExposureEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HeadlineExposureEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeadlineExposureEvent.articleData.modify())(_QWORD)
{
  type metadata accessor for HeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t HeadlineExposureEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HeadlineExposureEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeadlineExposureEvent.feedPositionData.modify())(_QWORD)
{
  type metadata accessor for HeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t HeadlineExposureEvent.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HeadlineExposureEvent.inGroupPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeadlineExposureEvent.inGroupPositionData.modify())(_QWORD)
{
  type metadata accessor for HeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t HeadlineExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HeadlineExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeadlineExposureEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for HeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t HeadlineExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HeadlineExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeadlineExposureEvent.groupData.modify())(_QWORD)
{
  type metadata accessor for HeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t HeadlineExposureEvent.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HeadlineExposureEvent.articleScienceData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeadlineExposureEvent.articleScienceData.modify())(_QWORD)
{
  type metadata accessor for HeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t HeadlineExposureEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HeadlineExposureEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeadlineExposureEvent.userChannelContextData.modify())(_QWORD)
{
  type metadata accessor for HeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t HeadlineExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 56);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HeadlineExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 56);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeadlineExposureEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for HeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t HeadlineExposureEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HeadlineExposureEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeadlineExposureEvent.issueData.modify())(_QWORD)
{
  type metadata accessor for HeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t HeadlineExposureEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HeadlineExposureEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeadlineExposureEvent.channelData.modify())(_QWORD)
{
  type metadata accessor for HeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t HeadlineExposureEvent.articleExposureContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HeadlineExposureEvent.articleExposureContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeadlineExposureEvent.articleExposureContextData.modify())(_QWORD)
{
  type metadata accessor for HeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t HeadlineExposureEvent.articleViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 72);
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HeadlineExposureEvent.articleViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 72);
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeadlineExposureEvent.articleViewData.modify())(_QWORD)
{
  type metadata accessor for HeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t HeadlineExposureEvent.searchResponseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 76);
  sub_1D579E208(0, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HeadlineExposureEvent.searchResponseData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 76);
  sub_1D579E208(0, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeadlineExposureEvent.searchResponseData.modify())(_QWORD)
{
  type metadata accessor for HeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t HeadlineExposureEvent.shareOriginationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 80);
  sub_1D579E208(0, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HeadlineExposureEvent.shareOriginationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 80);
  sub_1D579E208(0, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeadlineExposureEvent.shareOriginationData.modify())(_QWORD)
{
  type metadata accessor for HeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t HeadlineExposureEvent.auxiliaryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 84);
  sub_1D579E208(0, &qword_1ED9CF140, (void (*)(void))sub_1D588F8C4, (void (*)(void))sub_1D57B5924);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HeadlineExposureEvent.auxiliaryData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 84);
  sub_1D579E208(0, &qword_1ED9CF140, (void (*)(void))sub_1D588F8C4, (void (*)(void))sub_1D57B5924);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeadlineExposureEvent.auxiliaryData.modify())(_QWORD)
{
  type metadata accessor for HeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t HeadlineExposureEvent.recirculationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 88);
  sub_1D579E208(0, &qword_1ED9CF160, (void (*)(void))sub_1D57E70DC, (void (*)(void))sub_1D57E7124);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HeadlineExposureEvent.recirculationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 88);
  sub_1D579E208(0, &qword_1ED9CF160, (void (*)(void))sub_1D57E70DC, (void (*)(void))sub_1D57E7124);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeadlineExposureEvent.recirculationData.modify())(_QWORD)
{
  type metadata accessor for HeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t HeadlineExposureEvent.experimentalScoreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 92);
  sub_1D579E208(0, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HeadlineExposureEvent.experimentalScoreData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 92);
  sub_1D579E208(0, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeadlineExposureEvent.experimentalScoreData.modify())(_QWORD)
{
  type metadata accessor for HeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t HeadlineExposureEvent.offlineModeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 96);
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HeadlineExposureEvent.offlineModeData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent(0) + 96);
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeadlineExposureEvent.offlineModeData.modify())(_QWORD)
{
  type metadata accessor for HeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t HeadlineExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for HeadlineExposureEvent(0);
  v5 = a1 + v4[5];
  v6 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = a1 + v4[6];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v2, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v2, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v6, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v6, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v2, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v6, v27);
  v28 = a1 + v4[16];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v2, v29);
  v30 = a1 + v4[17];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v30, v6, v31);
  v32 = a1 + v4[18];
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v32, v6, v33);
  v34 = a1 + v4[19];
  sub_1D579E208(0, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v34, v6, v35);
  v36 = a1 + v4[20];
  sub_1D579E208(0, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v36, v6, v37);
  v38 = a1 + v4[21];
  sub_1D579E208(0, &qword_1ED9CF140, (void (*)(void))sub_1D588F8C4, (void (*)(void))sub_1D57B5924);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v38, v6, v39);
  v40 = a1 + v4[22];
  sub_1D579E208(0, &qword_1ED9CF160, (void (*)(void))sub_1D57E70DC, (void (*)(void))sub_1D57E7124);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v40, v6, v41);
  v42 = a1 + v4[23];
  sub_1D579E208(0, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v42, v6, v43);
  v44 = a1 + v4[24];
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v44, v2, v45);
}

uint64_t HeadlineExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t HeadlineExposureEvent.Model.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent.Model(0) + 20);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(v3 + 32);
  return sub_1D57E8FE4(v4, v5);
}

uint64_t type metadata accessor for HeadlineExposureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CA948);
}

uint64_t HeadlineExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5824B58(type metadata accessor for HeadlineExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t HeadlineExposureEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent.Model(0) + 28);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t HeadlineExposureEvent.Model.feedPositionData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for HeadlineExposureEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t HeadlineExposureEvent.Model.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for HeadlineExposureEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 36));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t HeadlineExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent.Model(0) + 40);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

_QWORD *HeadlineExposureEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for HeadlineExposureEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 44), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t HeadlineExposureEvent.Model.articleScienceData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  const void *v3;
  _BYTE __dst[280];

  v3 = (const void *)(v1 + *(int *)(type metadata accessor for HeadlineExposureEvent.Model(0) + 48));
  memcpy(__dst, v3, 0x111uLL);
  memcpy(a1, v3, 0x111uLL);
  return sub_1D57D42AC((uint64_t)__dst);
}

uint64_t HeadlineExposureEvent.Model.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = type metadata accessor for HeadlineExposureEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 52));
  v5 = *v4;
  v6 = v4[1];
  LOWORD(v4) = *((_WORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_BYTE *)(a1 + 1) = v6;
  *(_WORD *)(a1 + 2) = (_WORD)v4;
  return result;
}

uint64_t HeadlineExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for HeadlineExposureEvent.Model(0) + 56));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t HeadlineExposureEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for HeadlineExposureEvent.Model(0) + 60));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t HeadlineExposureEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineExposureEvent.Model(0) + 64);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t HeadlineExposureEvent.Model.articleExposureContextData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for HeadlineExposureEvent.Model(0) + 68));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57E90BC(v4, v5);
}

uint64_t HeadlineExposureEvent.Model.articleViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for HeadlineExposureEvent.Model(0) + 72));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t HeadlineExposureEvent.Model.searchResponseData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for HeadlineExposureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 76));
  return result;
}

uint64_t HeadlineExposureEvent.Model.shareOriginationData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for HeadlineExposureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 80));
  return result;
}

uint64_t HeadlineExposureEvent.Model.auxiliaryData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for HeadlineExposureEvent.Model(0) + 84));
  return swift_bridgeObjectRetain();
}

uint64_t HeadlineExposureEvent.Model.recirculationData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for HeadlineExposureEvent.Model(0) + 88));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t HeadlineExposureEvent.Model.experimentalScoreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;

  result = type metadata accessor for HeadlineExposureEvent.Model(0);
  v4 = (uint64_t *)(v1 + *(int *)(result + 92));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 8);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = (_BYTE)v4;
  return result;
}

uint64_t HeadlineExposureEvent.Model.offlineModeData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for HeadlineExposureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 96));
  return result;
}

__n128 HeadlineExposureEvent.Model.init(eventData:adData:timedData:articleData:feedPositionData:inGroupPositionData:feedData:groupData:articleScienceData:userChannelContextData:userBundleSubscriptionContextData:issueData:channelData:articleExposureContextData:articleViewData:searchResponseData:shareOriginationData:auxiliaryData:recirculationData:experimentalScoreData:offlineModeData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, int *a5@<X4>, int *a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, const void *a10, char *a11, char *a12, __int128 *a13, uint64_t *a14, __int128 *a15, uint64_t *a16, char *a17, char *a18, uint64_t *a19, uint64_t *a20,uint64_t *a21,char *a22)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 result;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  int v51;
  char v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  __int16 v57;
  char v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  __int128 v79;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  _BYTE v92[23];
  _BYTE v93[136];
  _BYTE __dst[273];

  v49 = *a2;
  v47 = *((_QWORD *)a2 + 3);
  v48 = *((_QWORD *)a2 + 2);
  v46 = *((_BYTE *)a2 + 32);
  v91 = a4[6];
  *(_OWORD *)v92 = a4[7];
  *(_QWORD *)&v92[15] = *(_QWORD *)((char *)a4 + 127);
  v87 = a4[2];
  v88 = a4[3];
  v89 = a4[4];
  v90 = a4[5];
  v85 = *a4;
  v86 = a4[1];
  v53 = *a6;
  v51 = *a5;
  v52 = *((_BYTE *)a6 + 4);
  v56 = *a7;
  v54 = *((_QWORD *)a7 + 2);
  v55 = *((_QWORD *)a7 + 1);
  sub_1D57DD5B8(a8, (uint64_t)v93);
  memcpy(__dst, a10, sizeof(__dst));
  v58 = a11[1];
  v59 = *a11;
  v57 = *((_WORD *)a11 + 1);
  v67 = *a12;
  v65 = *((_QWORD *)a12 + 2);
  v66 = *((_QWORD *)a12 + 1);
  v63 = a12[25];
  v64 = a12[24];
  v61 = *((_QWORD *)a12 + 5);
  v62 = *((_QWORD *)a12 + 4);
  v60 = a12[48];
  v70 = *a13;
  v68 = *((_QWORD *)a13 + 3);
  v69 = *((_QWORD *)a13 + 2);
  v75 = a14[1];
  v76 = *a14;
  v73 = *((_BYTE *)a14 + 17);
  v74 = *((_BYTE *)a14 + 16);
  v71 = a14[4];
  v72 = a14[3];
  v78 = (__n128)a15[1];
  v79 = *a15;
  v77 = *((_QWORD *)a15 + 4);
  v81 = a16[1];
  v82 = *a16;
  v83 = *a17;
  v84 = *a18;
  v23 = *a19;
  v24 = *a20;
  v25 = a20[1];
  v26 = *a21;
  v27 = *((_BYTE *)a21 + 8);
  v28 = *a22;
  v29 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(a9, a1, v29);
  v30 = (int *)type metadata accessor for HeadlineExposureEvent.Model(0);
  v31 = a9 + v30[5];
  *(_OWORD *)v31 = v49;
  *(_QWORD *)(v31 + 16) = v48;
  *(_QWORD *)(v31 + 24) = v47;
  *(_BYTE *)(v31 + 32) = v46;
  v32 = a9 + v30[6];
  v33 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v32, a3, v33);
  v34 = a9 + v30[7];
  *(_OWORD *)(v34 + 96) = v91;
  *(_OWORD *)(v34 + 112) = *(_OWORD *)v92;
  *(_QWORD *)(v34 + 127) = *(_QWORD *)&v92[15];
  *(_OWORD *)(v34 + 32) = v87;
  *(_OWORD *)(v34 + 48) = v88;
  *(_OWORD *)(v34 + 64) = v89;
  *(_OWORD *)(v34 + 80) = v90;
  *(_OWORD *)v34 = v85;
  *(_OWORD *)(v34 + 16) = v86;
  *(_DWORD *)(a9 + v30[8]) = v51;
  v35 = a9 + v30[9];
  *(_DWORD *)v35 = v53;
  *(_BYTE *)(v35 + 4) = v52;
  v36 = a9 + v30[10];
  *(_BYTE *)v36 = v56;
  *(_QWORD *)(v36 + 8) = v55;
  *(_QWORD *)(v36 + 16) = v54;
  sub_1D57DD5B8((uint64_t)v93, a9 + v30[11]);
  memcpy((void *)(a9 + v30[12]), __dst, 0x111uLL);
  v37 = a9 + v30[13];
  *(_BYTE *)v37 = v59;
  *(_BYTE *)(v37 + 1) = v58;
  *(_WORD *)(v37 + 2) = v57;
  v38 = a9 + v30[14];
  *(_BYTE *)v38 = v67;
  *(_QWORD *)(v38 + 8) = v66;
  *(_QWORD *)(v38 + 16) = v65;
  *(_BYTE *)(v38 + 24) = v64;
  *(_BYTE *)(v38 + 25) = v63;
  *(_QWORD *)(v38 + 32) = v62;
  *(_QWORD *)(v38 + 40) = v61;
  *(_BYTE *)(v38 + 48) = v60;
  v39 = a9 + v30[15];
  *(_OWORD *)v39 = v70;
  *(_QWORD *)(v39 + 16) = v69;
  *(_QWORD *)(v39 + 24) = v68;
  v40 = a9 + v30[16];
  *(_QWORD *)v40 = v76;
  *(_QWORD *)(v40 + 8) = v75;
  *(_BYTE *)(v40 + 16) = v74;
  *(_BYTE *)(v40 + 17) = v73;
  *(_QWORD *)(v40 + 24) = v72;
  *(_QWORD *)(v40 + 32) = v71;
  v41 = a9 + v30[17];
  result = v78;
  *(_OWORD *)v41 = v79;
  *(__n128 *)(v41 + 16) = v78;
  *(_QWORD *)(v41 + 32) = v77;
  v43 = (_QWORD *)(a9 + v30[18]);
  *v43 = v82;
  v43[1] = v81;
  *(_BYTE *)(a9 + v30[19]) = v83;
  *(_BYTE *)(a9 + v30[20]) = v84;
  *(_QWORD *)(a9 + v30[21]) = v23;
  v44 = (_QWORD *)(a9 + v30[22]);
  *v44 = v24;
  v44[1] = v25;
  v45 = a9 + v30[23];
  *(_QWORD *)v45 = v26;
  *(_BYTE *)(v45 + 8) = v27;
  *(_BYTE *)(a9 + v30[24]) = v28;
  return result;
}

uint64_t sub_1D5966268(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59662A0 + 4 * byte_1D5ACFE40[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D59662A0()
{
  return 0x617461446461;
}

uint64_t sub_1D59662B4()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D59662C8()
{
  return 0x44656C6369747261;
}

unint64_t sub_1D59663A8()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1D59663C0()
{
  return 0x56656C6369747261;
}

unint64_t sub_1D5966400()
{
  return 0xD000000000000014;
}

uint64_t sub_1D5966418()
{
  return 0x7261696C69787561;
}

unint64_t sub_1D596643C()
{
  return 0xD000000000000011;
}

void sub_1D5966454()
{
  JUMPOUT(0x1D5966468);
}

uint64_t sub_1D5966474()
{
  return 0x4D656E696C66666FLL;
}

uint64_t sub_1D5966498()
{
  unsigned __int8 *v0;

  return sub_1D5966268(*v0);
}

uint64_t sub_1D59664A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D596D3B4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D59664C4(_BYTE *a1@<X8>)
{
  *a1 = 21;
}

uint64_t sub_1D59664D0()
{
  sub_1D5966CA0();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59664F8()
{
  sub_1D5966CA0();
  return sub_1D5AAEEE0();
}

uint64_t HeadlineExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  int *v19;
  int v20;
  uint64_t v21;
  char *v22;
  char v23;
  char v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  _OWORD *v29;
  __int128 v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t *v41;
  uint64_t v42;
  _OWORD v44[18];
  uint64_t v45;
  _BYTE v46[144];
  __int128 v47;
  char v48;
  char v49;
  char v50;
  char v51;

  v3 = v1;
  sub_1D5967AB0(0, &qword_1EFF4E250, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v44 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5966CA0();
  sub_1D5AAEEC8();
  LOBYTE(v44[0]) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for HeadlineExposureEvent.Model(0);
    v11 = v3 + v10[5];
    v12 = *(_BYTE *)(v11 + 32);
    v13 = *(_OWORD *)(v11 + 16);
    v44[0] = *(_OWORD *)v11;
    v44[1] = v13;
    LOBYTE(v44[2]) = v12;
    v46[0] = 1;
    sub_1D57C690C();
    sub_1D5AAED18();
    v51 = 2;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v14 = v3 + v10[7];
    v15 = *(_OWORD *)(v14 + 112);
    v44[6] = *(_OWORD *)(v14 + 96);
    v44[7] = v15;
    *(_QWORD *)((char *)&v44[7] + 15) = *(_QWORD *)(v14 + 127);
    v16 = *(_OWORD *)(v14 + 48);
    v44[2] = *(_OWORD *)(v14 + 32);
    v44[3] = v16;
    v17 = *(_OWORD *)(v14 + 80);
    v44[4] = *(_OWORD *)(v14 + 64);
    v44[5] = v17;
    v18 = *(_OWORD *)(v14 + 16);
    v44[0] = *(_OWORD *)v14;
    v44[1] = v18;
    v46[0] = 3;
    sub_1D57CB940();
    sub_1D5AAED6C();
    LODWORD(v44[0]) = *(_DWORD *)(v3 + v10[8]);
    v46[0] = 4;
    sub_1D57C9C4C();
    sub_1D5AAED6C();
    v19 = (int *)(v3 + v10[9]);
    v20 = *v19;
    LOBYTE(v19) = *((_BYTE *)v19 + 4);
    LODWORD(v44[0]) = v20;
    BYTE4(v44[0]) = (_BYTE)v19;
    v46[0] = 5;
    sub_1D57C8B9C();
    sub_1D5AAED18();
    v21 = v3 + v10[10];
    v46[136] = *(_BYTE *)v21;
    v47 = *(_OWORD *)(v21 + 8);
    v50 = 6;
    sub_1D57C65D4();
    sub_1D5AAED6C();
    sub_1D57DD5B8(v3 + v10[11], (uint64_t)v46);
    sub_1D57DD5B8((uint64_t)v46, (uint64_t)&v45);
    v49 = 7;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    memcpy(v44, (const void *)(v3 + v10[12]), 0x111uLL);
    v48 = 8;
    sub_1D57CB7A8();
    sub_1D5AAED6C();
    v22 = (char *)(v3 + v10[13]);
    v23 = *v22;
    v24 = v22[1];
    LOWORD(v22) = *((_WORD *)v22 + 1);
    LOBYTE(v44[0]) = v23;
    BYTE1(v44[0]) = v24;
    WORD1(v44[0]) = (_WORD)v22;
    v48 = 9;
    sub_1D57C7B24();
    sub_1D5AAED6C();
    v25 = v3 + v10[14];
    v26 = *(_BYTE *)(v25 + 24);
    v27 = *(_BYTE *)(v25 + 25);
    v28 = *(_BYTE *)(v25 + 48);
    LOBYTE(v44[0]) = *(_BYTE *)v25;
    *(_OWORD *)((char *)v44 + 8) = *(_OWORD *)(v25 + 8);
    BYTE8(v44[1]) = v26;
    BYTE9(v44[1]) = v27;
    v44[2] = *(_OWORD *)(v25 + 32);
    LOBYTE(v44[3]) = v28;
    v48 = 10;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v29 = (_OWORD *)(v3 + v10[15]);
    v30 = v29[1];
    v44[0] = *v29;
    v44[1] = v30;
    v48 = 11;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    v31 = (uint64_t *)(v3 + v10[16]);
    v32 = *v31;
    v33 = v31[1];
    v34 = *((_BYTE *)v31 + 16);
    v35 = *((_BYTE *)v31 + 17);
    v37 = v31[3];
    v36 = v31[4];
    *(_QWORD *)&v44[0] = v32;
    *((_QWORD *)&v44[0] + 1) = v33;
    LOBYTE(v44[1]) = v34;
    BYTE1(v44[1]) = v35;
    *((_QWORD *)&v44[1] + 1) = v37;
    *(_QWORD *)&v44[2] = v36;
    v48 = 12;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v38 = v3 + v10[17];
    v39 = *(_QWORD *)(v38 + 32);
    v40 = *(_OWORD *)(v38 + 16);
    v44[0] = *(_OWORD *)v38;
    v44[1] = v40;
    *(_QWORD *)&v44[2] = v39;
    v48 = 13;
    sub_1D57C71C4();
    sub_1D5AAED18();
    v44[0] = *(_OWORD *)(v3 + v10[18]);
    v48 = 14;
    sub_1D57CA658();
    sub_1D5AAED18();
    LOBYTE(v44[0]) = *(_BYTE *)(v3 + v10[19]);
    v48 = 15;
    sub_1D57C9018();
    sub_1D5AAED18();
    LOBYTE(v44[0]) = *(_BYTE *)(v3 + v10[20]);
    v48 = 16;
    sub_1D57C852C();
    sub_1D5AAED18();
    *(_QWORD *)&v44[0] = *(_QWORD *)(v3 + v10[21]);
    v48 = 17;
    sub_1D57B5924();
    sub_1D5AAED18();
    v44[0] = *(_OWORD *)(v3 + v10[22]);
    v48 = 18;
    sub_1D57E7124();
    sub_1D5AAED18();
    v41 = (uint64_t *)(v3 + v10[23]);
    v42 = *v41;
    LOBYTE(v41) = *((_BYTE *)v41 + 8);
    *(_QWORD *)&v44[0] = v42;
    BYTE8(v44[0]) = (_BYTE)v41;
    v48 = 19;
    sub_1D57C5E94();
    sub_1D5AAED18();
    LOBYTE(v44[0]) = *(_BYTE *)(v3 + v10[24]);
    v48 = 20;
    sub_1D57CE05C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5966CA0()
{
  unint64_t result;

  result = qword_1ED9CA928;
  if (!qword_1ED9CA928)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD02A4, &type metadata for HeadlineExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CA928);
  }
  return result;
}

uint64_t HeadlineExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  char *v17;
  uint64_t result;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int *v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  char *v30;
  char v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  int *v35;
  char *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  char v41;
  char *v42;
  char *v43;
  char v44;
  __int16 v45;
  char *v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  char *v51;
  uint64_t v52;
  char *v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _BOOL4 v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  _OWORD v90[2];
  __int128 v91;
  char v92;
  char v93;
  char v94;
  _BYTE v95[144];
  _BYTE v96[144];
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  _BYTE v104[23];
  _OWORD v105[19];
  int *v106;

  v83 = a2;
  v3 = sub_1D5AADFB0();
  v78 = *(_QWORD *)(v3 - 8);
  v79 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D5AADF98();
  v80 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5967AB0(0, &qword_1ED9CC820, MEMORY[0x1E0DED048]);
  v84 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v76 - v11;
  v106 = (int *)type metadata accessor for HeadlineExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v106);
  v89 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v86 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1D5966CA0();
  v87 = v12;
  v15 = v88;
  sub_1D5AAEEB0();
  v77 = v6;
  if (v15)
  {
    v88 = v15;
    LODWORD(v87) = 0;
    v16 = 0;
  }
  else
  {
    v82 = v10;
    LOBYTE(v105[0]) = 0;
    sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
    sub_1D5AAECD0();
    v30 = v89;
    (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v89, v8, v6);
    v96[0] = 1;
    sub_1D57C68C8();
    sub_1D5AAEC7C();
    v31 = v105[2];
    v32 = &v30[v106[5]];
    v33 = v105[1];
    *(_OWORD *)v32 = v105[0];
    *((_OWORD *)v32 + 1) = v33;
    v32[32] = v31;
    LOBYTE(v105[0]) = 2;
    sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
    v34 = v79;
    sub_1D5AAECD0();
    v35 = v106;
    (*(void (**)(char *, char *, uint64_t))(v78 + 32))(&v30[v106[6]], v5, v34);
    v96[143] = 3;
    sub_1D57CB8FC();
    sub_1D5AAECD0();
    v36 = &v30[v35[7]];
    v37 = *(_OWORD *)v104;
    *((_OWORD *)v36 + 6) = v103;
    *((_OWORD *)v36 + 7) = v37;
    *(_QWORD *)(v36 + 127) = *(_QWORD *)&v104[15];
    v38 = v100;
    *((_OWORD *)v36 + 2) = v99;
    *((_OWORD *)v36 + 3) = v38;
    v39 = v102;
    *((_OWORD *)v36 + 4) = v101;
    *((_OWORD *)v36 + 5) = v39;
    v40 = v98;
    *(_OWORD *)v36 = v97;
    *((_OWORD *)v36 + 1) = v40;
    v96[0] = 4;
    sub_1D57C9C08();
    sub_1D5AAECD0();
    *(_DWORD *)&v30[v35[8]] = v105[0];
    v96[0] = 5;
    sub_1D57C8B58();
    sub_1D5AAEC7C();
    v41 = BYTE4(v105[0]);
    v42 = &v30[v35[9]];
    *(_DWORD *)v42 = v105[0];
    v42[4] = v41;
    v96[0] = 6;
    sub_1D57C6590();
    sub_1D5AAECD0();
    v43 = &v30[v35[10]];
    *v43 = v105[0];
    *(_OWORD *)(v43 + 8) = *(_OWORD *)((char *)v105 + 8);
    v95[143] = 7;
    sub_1D57C5FA8();
    sub_1D5AAEC7C();
    sub_1D57DD5B8((uint64_t)v96, (uint64_t)v95);
    sub_1D57DD5B8((uint64_t)v95, (uint64_t)&v30[v35[11]]);
    v94 = 8;
    sub_1D57CB764();
    sub_1D5AAECD0();
    memcpy(&v30[v106[12]], v105, 0x111uLL);
    v93 = 9;
    sub_1D57C7AE0();
    sub_1D5AAECD0();
    v88 = 0;
    v44 = BYTE1(v90[0]);
    v45 = WORD1(v90[0]);
    v46 = &v89[v106[13]];
    *v46 = v90[0];
    v46[1] = v44;
    *((_WORD *)v46 + 1) = v45;
    v93 = 10;
    sub_1D57C6AF8();
    v47 = v88;
    sub_1D5AAECD0();
    v88 = v47;
    if (v47)
    {
      (*(void (**)(char *, uint64_t))(v82 + 8))(v87, v84);
      LODWORD(v87) = 0;
      v16 = 463;
    }
    else
    {
      v48 = BYTE8(v90[1]);
      v49 = BYTE9(v90[1]);
      v50 = v92;
      v51 = &v89[v106[14]];
      *v51 = v90[0];
      *(_OWORD *)(v51 + 8) = *(_OWORD *)((char *)v90 + 8);
      v51[24] = v48;
      v51[25] = v49;
      *((_OWORD *)v51 + 2) = v91;
      v51[48] = v50;
      v93 = 11;
      sub_1D57C5ED8();
      v52 = v88;
      sub_1D5AAEC7C();
      v88 = v52;
      if (v52)
      {
        (*(void (**)(char *, uint64_t))(v82 + 8))(v87, v84);
        LODWORD(v87) = 0;
        v16 = 1487;
      }
      else
      {
        v53 = &v89[v106[15]];
        v54 = v90[1];
        *(_OWORD *)v53 = v90[0];
        *((_OWORD *)v53 + 1) = v54;
        v93 = 12;
        sub_1D57CB874();
        v55 = v88;
        sub_1D5AAECD0();
        v88 = v55;
        if (v55)
        {
          (*(void (**)(char *, uint64_t))(v82 + 8))(v87, v84);
          LODWORD(v87) = 0;
          v16 = 3535;
        }
        else
        {
          v56 = *((_QWORD *)&v90[0] + 1);
          v57 = v90[1];
          v58 = BYTE1(v90[1]);
          v59 = *((_QWORD *)&v90[1] + 1);
          v60 = v91;
          v61 = &v89[v106[16]];
          *(_QWORD *)v61 = *(_QWORD *)&v90[0];
          *((_QWORD *)v61 + 1) = v56;
          v61[16] = v57;
          v61[17] = v58;
          *((_QWORD *)v61 + 3) = v59;
          *((_QWORD *)v61 + 4) = v60;
          v93 = 13;
          sub_1D57C7180();
          v62 = v88;
          sub_1D5AAEC7C();
          v88 = v62;
          if (v62)
          {
            (*(void (**)(char *, uint64_t))(v82 + 8))(v87, v84);
            LODWORD(v87) = 0;
            v16 = 7631;
          }
          else
          {
            v63 = v91;
            v64 = &v89[v106[17]];
            v65 = v90[1];
            *(_OWORD *)v64 = v90[0];
            *((_OWORD *)v64 + 1) = v65;
            *((_QWORD *)v64 + 4) = v63;
            v93 = 14;
            sub_1D57CA614();
            v66 = v88;
            sub_1D5AAEC7C();
            v88 = v66;
            if (v66)
            {
              (*(void (**)(char *, uint64_t))(v82 + 8))(v87, v84);
              LODWORD(v87) = 0;
              v16 = 15823;
            }
            else
            {
              *(_OWORD *)&v89[v106[18]] = v90[0];
              v93 = 15;
              sub_1D57C8FD4();
              v67 = v88;
              sub_1D5AAEC7C();
              v88 = v67;
              if (!v67)
              {
                v89[v106[19]] = v90[0];
                v93 = 16;
                sub_1D57C84E8();
                v68 = v88;
                sub_1D5AAEC7C();
                v88 = v68;
                if (!v68)
                {
                  v89[v106[20]] = v90[0];
                  v93 = 17;
                  sub_1D588F8C4();
                  v69 = v88;
                  sub_1D5AAEC7C();
                  v85 = v69 == 0;
                  v88 = v69;
                  if (v69
                    || (*(_QWORD *)&v89[v106[21]] = *(_QWORD *)&v90[0],
                        v93 = 18,
                        sub_1D57E70DC(),
                        v70 = v88,
                        sub_1D5AAEC7C(),
                        (v88 = v70) != 0))
                  {
                    (*(void (**)(char *, uint64_t))(v82 + 8))(v87, v84);
                    __swift_destroy_boxed_opaque_existential_1(v86);
                    LODWORD(v86) = 0;
                  }
                  else
                  {
                    *(_OWORD *)&v89[v106[22]] = v90[0];
                    v93 = 19;
                    sub_1D57C5E50();
                    v71 = v88;
                    sub_1D5AAEC7C();
                    v88 = v71;
                    if (!v71)
                    {
                      v72 = BYTE8(v90[0]);
                      v73 = &v89[v106[23]];
                      *(_QWORD *)v73 = *(_QWORD *)&v90[0];
                      v73[8] = v72;
                      v93 = 20;
                      sub_1D57CE014();
                      v74 = v88;
                      sub_1D5AAECD0();
                      v88 = v74;
                      if (!v74)
                      {
                        (*(void (**)(char *, uint64_t))(v82 + 8))(v87, v84);
                        v75 = (uint64_t)v89;
                        v89[v106[24]] = v90[0];
                        sub_1D5967B4C(v75, v83);
                        __swift_destroy_boxed_opaque_existential_1(v86);
                        return sub_1D5967B90(v75);
                      }
                    }
                    (*(void (**)(char *, uint64_t))(v82 + 8))(v87, v84);
                    __swift_destroy_boxed_opaque_existential_1(v86);
                    LODWORD(v86) = 1;
                  }
                  v17 = v89;
                  (*(void (**)(char *, uint64_t))(v80 + 8))(v89, v77);
                  LODWORD(v87) = 1;
                  LODWORD(v84) = 1;
                  LODWORD(v83) = 1;
                  v81 = 1;
                  LODWORD(v82) = 1;
                  v23 = 1;
                  v22 = 1;
                  v21 = 1;
                  v20 = 1;
                  LOBYTE(v19) = 1;
                  v24 = v106;
                  goto LABEL_21;
                }
              }
              (*(void (**)(char *, uint64_t))(v82 + 8))(v87, v84);
              v16 = 32207;
              LODWORD(v87) = 1;
            }
          }
        }
      }
    }
  }
  v17 = v89;
  result = __swift_destroy_boxed_opaque_existential_1(v86);
  v19 = (v16 >> 2) & 1;
  v20 = (v16 >> 3) & 1;
  v21 = (v16 >> 6) & 1;
  v22 = (v16 >> 7) & 1;
  v23 = (v16 >> 8) & 1;
  v81 = (v16 >> 10) & 1;
  LODWORD(v82) = (v16 >> 11) & 1;
  LODWORD(v83) = (v16 >> 12) & 1;
  LODWORD(v84) = (v16 >> 13) & 1;
  if ((v16 & 1) != 0)
    result = (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v17, v77);
  v24 = v106;
  if ((v16 & 2) == 0)
  {
    v85 = 0;
    LODWORD(v86) = 0;
    if ((v16 & 4) == 0)
      goto LABEL_8;
    goto LABEL_22;
  }
  v85 = 0;
  LODWORD(v86) = 0;
LABEL_21:
  result = sub_1D57EA700(*(_QWORD *)&v17[v24[5]], *(_QWORD *)&v17[v24[5] + 8]);
  if ((v19 & 1) == 0)
  {
LABEL_8:
    if (v20)
      goto LABEL_9;
    goto LABEL_23;
  }
LABEL_22:
  result = (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(&v17[v24[6]], v79);
  if ((v20 & 1) != 0)
  {
LABEL_9:
    v25 = &v17[v24[7]];
    v26 = *((_OWORD *)v25 + 7);
    v105[6] = *((_OWORD *)v25 + 6);
    v105[7] = v26;
    *(_QWORD *)((char *)&v105[7] + 15) = *(_QWORD *)(v25 + 127);
    v27 = *((_OWORD *)v25 + 3);
    v105[2] = *((_OWORD *)v25 + 2);
    v105[3] = v27;
    v28 = *((_OWORD *)v25 + 5);
    v105[4] = *((_OWORD *)v25 + 4);
    v105[5] = v28;
    v29 = *((_OWORD *)v25 + 1);
    v105[0] = *(_OWORD *)v25;
    v105[1] = v29;
    result = sub_1D57D5AE0((uint64_t)v105);
    if ((v21 & 1) == 0)
      goto LABEL_10;
    goto LABEL_24;
  }
LABEL_23:
  if (!v21)
  {
LABEL_10:
    if (v22)
      goto LABEL_11;
    goto LABEL_25;
  }
LABEL_24:
  result = swift_bridgeObjectRelease();
  if ((v22 & 1) != 0)
  {
LABEL_11:
    sub_1D57DD5B8((uint64_t)&v17[v24[11]], (uint64_t)v105);
    result = (uint64_t)sub_1D57DE9C8(v105, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DEA24);
    if ((v23 & 1) == 0)
      goto LABEL_12;
    goto LABEL_26;
  }
LABEL_25:
  if (!v23)
  {
LABEL_12:
    if (v81)
      goto LABEL_13;
    goto LABEL_27;
  }
LABEL_26:
  memcpy(v105, &v17[v24[12]], 0x111uLL);
  result = sub_1D57D5AB8((uint64_t)v105);
  if ((v81 & 1) != 0)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v82 & 1) == 0)
      goto LABEL_14;
    goto LABEL_28;
  }
LABEL_27:
  if (!(_DWORD)v82)
  {
LABEL_14:
    if ((_DWORD)v83)
      goto LABEL_15;
    goto LABEL_29;
  }
LABEL_28:
  result = sub_1D57EA700(*(_QWORD *)&v17[v24[15]], *(_QWORD *)&v17[v24[15] + 8]);
  if ((v83 & 1) != 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v84 & 1) == 0)
      goto LABEL_16;
    goto LABEL_30;
  }
LABEL_29:
  if (!(_DWORD)v84)
  {
LABEL_16:
    if ((_DWORD)v87)
      goto LABEL_17;
    goto LABEL_31;
  }
LABEL_30:
  result = sub_1D5967B0C(*(_QWORD *)&v17[v24[17]], *(_QWORD *)&v17[v24[17] + 8]);
  if ((v87 & 1) != 0)
  {
LABEL_17:
    result = swift_bridgeObjectRelease();
    if (!v85)
      goto LABEL_18;
LABEL_32:
    result = swift_bridgeObjectRelease();
    if ((v86 & 1) == 0)
      return result;
    return swift_bridgeObjectRelease();
  }
LABEL_31:
  if (v85)
    goto LABEL_32;
LABEL_18:
  if (!(_DWORD)v86)
    return result;
  return swift_bridgeObjectRelease();
}

void sub_1D5967AB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5966CA0();
    v7 = a3(a1, &type metadata for HeadlineExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5967B0C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D5967B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HeadlineExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5967B90(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HeadlineExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5967BCC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return HeadlineExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5967BE0(_QWORD *a1)
{
  return HeadlineExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5967BF4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CCFA8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCC30, a1);
}

uint64_t sub_1D5967C18@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CCFD0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCFB0, a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for HeadlineExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v88 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v88 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
    v56 = a3[17];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
    v60 = a3[18];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
    v64 = a3[19];
    v65 = (char *)a1 + v64;
    v66 = (char *)a2 + v64;
    sub_1D579E208(0, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
    v68 = a3[20];
    v69 = (char *)a1 + v68;
    v70 = (char *)a2 + v68;
    sub_1D579E208(0, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v69, v70, v71);
    v72 = a3[21];
    v73 = (char *)a1 + v72;
    v74 = (char *)a2 + v72;
    sub_1D579E208(0, &qword_1ED9CF140, (void (*)(void))sub_1D588F8C4, (void (*)(void))sub_1D57B5924);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v73, v74, v75);
    v76 = a3[22];
    v77 = (char *)a1 + v76;
    v78 = (char *)a2 + v76;
    sub_1D579E208(0, &qword_1ED9CF160, (void (*)(void))sub_1D57E70DC, (void (*)(void))sub_1D57E7124);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v77, v78, v79);
    v80 = a3[23];
    v81 = (char *)a1 + v80;
    v82 = (char *)a2 + v80;
    sub_1D579E208(0, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v81, v82, v83);
    v84 = a3[24];
    v85 = (char *)a1 + v84;
    v86 = (char *)a2 + v84;
    sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v85, v86, v87);
  }
  return a1;
}

uint64_t destroy for HeadlineExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  v29 = a1 + a2[17];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
  v31 = a1 + a2[18];
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
  v33 = a1 + a2[19];
  sub_1D579E208(0, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
  v35 = a1 + a2[20];
  sub_1D579E208(0, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
  v37 = a1 + a2[21];
  sub_1D579E208(0, &qword_1ED9CF140, (void (*)(void))sub_1D588F8C4, (void (*)(void))sub_1D57B5924);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
  v39 = a1 + a2[22];
  sub_1D579E208(0, &qword_1ED9CF160, (void (*)(void))sub_1D57E70DC, (void (*)(void))sub_1D57E7124);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
  v41 = a1 + a2[23];
  sub_1D579E208(0, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
  v43 = a1 + a2[24];
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
}

uint64_t initializeWithCopy for HeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1D579E208(0, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v64, v65, v66);
  v67 = a3[20];
  v68 = a1 + v67;
  v69 = a2 + v67;
  sub_1D579E208(0, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v68, v69, v70);
  v71 = a3[21];
  v72 = a1 + v71;
  v73 = a2 + v71;
  sub_1D579E208(0, &qword_1ED9CF140, (void (*)(void))sub_1D588F8C4, (void (*)(void))sub_1D57B5924);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v72, v73, v74);
  v75 = a3[22];
  v76 = a1 + v75;
  v77 = a2 + v75;
  sub_1D579E208(0, &qword_1ED9CF160, (void (*)(void))sub_1D57E70DC, (void (*)(void))sub_1D57E7124);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v76, v77, v78);
  v79 = a3[23];
  v80 = a1 + v79;
  v81 = a2 + v79;
  sub_1D579E208(0, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v80, v81, v82);
  v83 = a3[24];
  v84 = a1 + v83;
  v85 = a2 + v83;
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v84, v85, v86);
  return a1;
}

uint64_t assignWithCopy for HeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1D579E208(0, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 24))(v64, v65, v66);
  v67 = a3[20];
  v68 = a1 + v67;
  v69 = a2 + v67;
  sub_1D579E208(0, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 24))(v68, v69, v70);
  v71 = a3[21];
  v72 = a1 + v71;
  v73 = a2 + v71;
  sub_1D579E208(0, &qword_1ED9CF140, (void (*)(void))sub_1D588F8C4, (void (*)(void))sub_1D57B5924);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 24))(v72, v73, v74);
  v75 = a3[22];
  v76 = a1 + v75;
  v77 = a2 + v75;
  sub_1D579E208(0, &qword_1ED9CF160, (void (*)(void))sub_1D57E70DC, (void (*)(void))sub_1D57E7124);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 24))(v76, v77, v78);
  v79 = a3[23];
  v80 = a1 + v79;
  v81 = a2 + v79;
  sub_1D579E208(0, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 24))(v80, v81, v82);
  v83 = a3[24];
  v84 = a1 + v83;
  v85 = a2 + v83;
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 24))(v84, v85, v86);
  return a1;
}

uint64_t initializeWithTake for HeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1D579E208(0, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v64, v65, v66);
  v67 = a3[20];
  v68 = a1 + v67;
  v69 = a2 + v67;
  sub_1D579E208(0, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v68, v69, v70);
  v71 = a3[21];
  v72 = a1 + v71;
  v73 = a2 + v71;
  sub_1D579E208(0, &qword_1ED9CF140, (void (*)(void))sub_1D588F8C4, (void (*)(void))sub_1D57B5924);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v72, v73, v74);
  v75 = a3[22];
  v76 = a1 + v75;
  v77 = a2 + v75;
  sub_1D579E208(0, &qword_1ED9CF160, (void (*)(void))sub_1D57E70DC, (void (*)(void))sub_1D57E7124);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v76, v77, v78);
  v79 = a3[23];
  v80 = a1 + v79;
  v81 = a2 + v79;
  sub_1D579E208(0, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v80, v81, v82);
  v83 = a3[24];
  v84 = a1 + v83;
  v85 = a2 + v83;
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(v84, v85, v86);
  return a1;
}

uint64_t assignWithTake for HeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 40))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1D579E208(0, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 40))(v64, v65, v66);
  v67 = a3[20];
  v68 = a1 + v67;
  v69 = a2 + v67;
  sub_1D579E208(0, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 40))(v68, v69, v70);
  v71 = a3[21];
  v72 = a1 + v71;
  v73 = a2 + v71;
  sub_1D579E208(0, &qword_1ED9CF140, (void (*)(void))sub_1D588F8C4, (void (*)(void))sub_1D57B5924);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 40))(v72, v73, v74);
  v75 = a3[22];
  v76 = a1 + v75;
  v77 = a2 + v75;
  sub_1D579E208(0, &qword_1ED9CF160, (void (*)(void))sub_1D57E70DC, (void (*)(void))sub_1D57E7124);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 40))(v76, v77, v78);
  v79 = a3[23];
  v80 = a1 + v79;
  v81 = a2 + v79;
  sub_1D579E208(0, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 40))(v80, v81, v82);
  v83 = a3[24];
  v84 = a1 + v83;
  v85 = a2 + v83;
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 40))(v84, v85, v86);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadlineExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D596A0B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D57A8C9C();
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                          v12 = *(_QWORD *)(v24 - 8);
                          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                          {
                            v8 = v24;
                            v13 = a3[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                            v12 = *(_QWORD *)(v25 - 8);
                            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                            {
                              v8 = v25;
                              v13 = a3[17];
                            }
                            else
                            {
                              sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
                              v12 = *(_QWORD *)(v26 - 8);
                              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                              {
                                v8 = v26;
                                v13 = a3[18];
                              }
                              else
                              {
                                sub_1D579E208(0, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
                                v12 = *(_QWORD *)(v27 - 8);
                                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                {
                                  v8 = v27;
                                  v13 = a3[19];
                                }
                                else
                                {
                                  sub_1D579E208(0, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
                                  v12 = *(_QWORD *)(v28 - 8);
                                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                  {
                                    v8 = v28;
                                    v13 = a3[20];
                                  }
                                  else
                                  {
                                    sub_1D579E208(0, &qword_1ED9CF140, (void (*)(void))sub_1D588F8C4, (void (*)(void))sub_1D57B5924);
                                    v12 = *(_QWORD *)(v29 - 8);
                                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                    {
                                      v8 = v29;
                                      v13 = a3[21];
                                    }
                                    else
                                    {
                                      sub_1D579E208(0, &qword_1ED9CF160, (void (*)(void))sub_1D57E70DC, (void (*)(void))sub_1D57E7124);
                                      v12 = *(_QWORD *)(v30 - 8);
                                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                      {
                                        v8 = v30;
                                        v13 = a3[22];
                                      }
                                      else
                                      {
                                        sub_1D579E208(0, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
                                        v12 = *(_QWORD *)(v31 - 8);
                                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                        {
                                          v8 = v31;
                                          v13 = a3[23];
                                        }
                                        else
                                        {
                                          sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
                                          v8 = v32;
                                          v12 = *(_QWORD *)(v32 - 8);
                                          v13 = a3[24];
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for HeadlineExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D596A63C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D57A8C9C();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                          v14 = *(_QWORD *)(v26 - 8);
                          if (*(_DWORD *)(v14 + 84) == a3)
                          {
                            v10 = v26;
                            v15 = a4[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                            v14 = *(_QWORD *)(v27 - 8);
                            if (*(_DWORD *)(v14 + 84) == a3)
                            {
                              v10 = v27;
                              v15 = a4[17];
                            }
                            else
                            {
                              sub_1D579E208(0, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
                              v14 = *(_QWORD *)(v28 - 8);
                              if (*(_DWORD *)(v14 + 84) == a3)
                              {
                                v10 = v28;
                                v15 = a4[18];
                              }
                              else
                              {
                                sub_1D579E208(0, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
                                v14 = *(_QWORD *)(v29 - 8);
                                if (*(_DWORD *)(v14 + 84) == a3)
                                {
                                  v10 = v29;
                                  v15 = a4[19];
                                }
                                else
                                {
                                  sub_1D579E208(0, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
                                  v14 = *(_QWORD *)(v30 - 8);
                                  if (*(_DWORD *)(v14 + 84) == a3)
                                  {
                                    v10 = v30;
                                    v15 = a4[20];
                                  }
                                  else
                                  {
                                    sub_1D579E208(0, &qword_1ED9CF140, (void (*)(void))sub_1D588F8C4, (void (*)(void))sub_1D57B5924);
                                    v14 = *(_QWORD *)(v31 - 8);
                                    if (*(_DWORD *)(v14 + 84) == a3)
                                    {
                                      v10 = v31;
                                      v15 = a4[21];
                                    }
                                    else
                                    {
                                      sub_1D579E208(0, &qword_1ED9CF160, (void (*)(void))sub_1D57E70DC, (void (*)(void))sub_1D57E7124);
                                      v14 = *(_QWORD *)(v32 - 8);
                                      if (*(_DWORD *)(v14 + 84) == a3)
                                      {
                                        v10 = v32;
                                        v15 = a4[22];
                                      }
                                      else
                                      {
                                        sub_1D579E208(0, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
                                        v14 = *(_QWORD *)(v33 - 8);
                                        if (*(_DWORD *)(v14 + 84) == a3)
                                        {
                                          v10 = v33;
                                          v15 = a4[23];
                                        }
                                        else
                                        {
                                          sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
                                          v10 = v34;
                                          v14 = *(_QWORD *)(v34 - 8);
                                          v15 = a4[24];
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D596ABC4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
    if (v1 <= 0x3F)
    {
      sub_1D57A8C9C();
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                      if (v10 <= 0x3F)
                      {
                        sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                        if (v11 <= 0x3F)
                        {
                          sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                          if (v12 <= 0x3F)
                          {
                            sub_1D579E208(319, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                            if (v13 <= 0x3F)
                            {
                              sub_1D579E208(319, &qword_1ED9C7178, (void (*)(void))sub_1D57CA614, (void (*)(void))sub_1D57CA658);
                              if (v14 <= 0x3F)
                              {
                                sub_1D579E208(319, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
                                if (v15 <= 0x3F)
                                {
                                  sub_1D579E208(319, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
                                  if (v16 <= 0x3F)
                                  {
                                    sub_1D579E208(319, &qword_1ED9CF140, (void (*)(void))sub_1D588F8C4, (void (*)(void))sub_1D57B5924);
                                    if (v17 <= 0x3F)
                                    {
                                      sub_1D579E208(319, &qword_1ED9CF160, (void (*)(void))sub_1D57E70DC, (void (*)(void))sub_1D57E7124);
                                      if (v18 <= 0x3F)
                                      {
                                        sub_1D579E208(319, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
                                        if (v19 <= 0x3F)
                                        {
                                          sub_1D579E208(319, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
                                          if (v20 <= 0x3F)
                                            swift_initStructMetadata();
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for HeadlineExposureEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  char *v89;
  char *v90;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 1);
    if (v11)
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v11;
      v12 = *((_QWORD *)v10 + 3);
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v12;
      v9[32] = v10[32];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v14 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v14;
      v9[32] = v10[32];
    }
    v15 = a3[6];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    v19 = a3[7];
    v20 = a3[8];
    v21 = (char *)a1 + v19;
    v22 = (char *)a2 + v19;
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v23 = *((_QWORD *)v22 + 3);
    *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
    *((_QWORD *)v21 + 3) = v23;
    v21[32] = v22[32];
    v24 = *((_QWORD *)v22 + 6);
    *((_QWORD *)v21 + 5) = *((_QWORD *)v22 + 5);
    *((_QWORD *)v21 + 6) = v24;
    v21[56] = v22[56];
    v21[57] = v22[57];
    v25 = *((_QWORD *)v22 + 9);
    *((_QWORD *)v21 + 8) = *((_QWORD *)v22 + 8);
    *((_QWORD *)v21 + 9) = v25;
    v21[80] = v22[80];
    *(_OWORD *)(v21 + 88) = *(_OWORD *)(v22 + 88);
    *((_QWORD *)v21 + 13) = *((_QWORD *)v22 + 13);
    v21[112] = v22[112];
    *((_QWORD *)v21 + 15) = *((_QWORD *)v22 + 15);
    *((_DWORD *)v21 + 32) = *((_DWORD *)v22 + 32);
    v21[132] = v22[132];
    *(_WORD *)(v21 + 133) = *(_WORD *)(v22 + 133);
    *(_DWORD *)((char *)a1 + v20) = *(_DWORD *)((char *)a2 + v20);
    v26 = a3[9];
    v27 = a3[10];
    v28 = (char *)a1 + v26;
    v29 = (char *)a2 + v26;
    *(_DWORD *)v28 = *(_DWORD *)v29;
    v28[4] = v29[4];
    v30 = (char *)a1 + v27;
    v31 = (char *)a2 + v27;
    *v30 = *v31;
    v32 = *((_QWORD *)v31 + 2);
    *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
    *((_QWORD *)v30 + 2) = v32;
    v33 = a3[11];
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    v36 = *(_QWORD *)((char *)a2 + v33 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v36)
    {
      *(_WORD *)v34 = *(_WORD *)v35;
      *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
      *((_QWORD *)v34 + 2) = v36;
      *((_QWORD *)v34 + 3) = *((_QWORD *)v35 + 3);
      v37 = *((_QWORD *)v35 + 5);
      *((_QWORD *)v34 + 4) = *((_QWORD *)v35 + 4);
      *((_QWORD *)v34 + 5) = v37;
      v38 = *((_QWORD *)v35 + 7);
      *((_QWORD *)v34 + 6) = *((_QWORD *)v35 + 6);
      *((_QWORD *)v34 + 7) = v38;
      v39 = *((_QWORD *)v35 + 9);
      *((_QWORD *)v34 + 8) = *((_QWORD *)v35 + 8);
      *((_QWORD *)v34 + 9) = v39;
      v34[80] = v35[80];
      v40 = *((_QWORD *)v35 + 12);
      *((_QWORD *)v34 + 11) = *((_QWORD *)v35 + 11);
      *((_QWORD *)v34 + 12) = v40;
      *((_QWORD *)v34 + 13) = *((_QWORD *)v35 + 13);
      v34[112] = v35[112];
      v41 = *((_QWORD *)v35 + 15);
      v42 = *((_QWORD *)v35 + 16);
      *((_QWORD *)v34 + 15) = v41;
      *((_QWORD *)v34 + 16) = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v43 = *((_OWORD *)v35 + 7);
      *((_OWORD *)v34 + 6) = *((_OWORD *)v35 + 6);
      *((_OWORD *)v34 + 7) = v43;
      *((_QWORD *)v34 + 16) = *((_QWORD *)v35 + 16);
      v44 = *((_OWORD *)v35 + 3);
      *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
      *((_OWORD *)v34 + 3) = v44;
      v45 = *((_OWORD *)v35 + 5);
      *((_OWORD *)v34 + 4) = *((_OWORD *)v35 + 4);
      *((_OWORD *)v34 + 5) = v45;
      v46 = *((_OWORD *)v35 + 1);
      *(_OWORD *)v34 = *(_OWORD *)v35;
      *((_OWORD *)v34 + 1) = v46;
    }
    v47 = a3[12];
    v48 = a3[13];
    v49 = (char *)a1 + v47;
    v50 = (char *)a2 + v47;
    v51 = *((_OWORD *)v50 + 1);
    *(_OWORD *)v49 = *(_OWORD *)v50;
    *((_OWORD *)v49 + 1) = v51;
    v52 = *((_OWORD *)v50 + 3);
    *((_OWORD *)v49 + 2) = *((_OWORD *)v50 + 2);
    *((_OWORD *)v49 + 3) = v52;
    v53 = *((_OWORD *)v50 + 5);
    *((_OWORD *)v49 + 4) = *((_OWORD *)v50 + 4);
    *((_OWORD *)v49 + 5) = v53;
    *((_OWORD *)v49 + 6) = *((_OWORD *)v50 + 6);
    v54 = *((_QWORD *)v50 + 14);
    v55 = *((_QWORD *)v50 + 15);
    v49[128] = v50[128];
    *((_QWORD *)v49 + 14) = v54;
    *((_QWORD *)v49 + 15) = v55;
    *((_QWORD *)v49 + 17) = *((_QWORD *)v50 + 17);
    v49[144] = v50[144];
    *((_QWORD *)v49 + 19) = *((_QWORD *)v50 + 19);
    v49[160] = v50[160];
    *((_QWORD *)v49 + 21) = *((_QWORD *)v50 + 21);
    v49[176] = v50[176];
    v49[192] = v50[192];
    *((_QWORD *)v49 + 23) = *((_QWORD *)v50 + 23);
    v49[208] = v50[208];
    *((_QWORD *)v49 + 25) = *((_QWORD *)v50 + 25);
    v49[224] = v50[224];
    *((_QWORD *)v49 + 27) = *((_QWORD *)v50 + 27);
    v49[240] = v50[240];
    *((_QWORD *)v49 + 29) = *((_QWORD *)v50 + 29);
    v49[256] = v50[256];
    *((_QWORD *)v49 + 31) = *((_QWORD *)v50 + 31);
    v56 = *((_QWORD *)v50 + 33);
    v49[272] = v50[272];
    *((_QWORD *)v49 + 33) = v56;
    *(_DWORD *)((char *)a1 + v48) = *(_DWORD *)((char *)a2 + v48);
    v57 = a3[14];
    v58 = a3[15];
    v59 = (char *)a1 + v57;
    v60 = (char *)a2 + v57;
    *v59 = *v60;
    v61 = *((_QWORD *)v60 + 2);
    *((_QWORD *)v59 + 1) = *((_QWORD *)v60 + 1);
    *((_QWORD *)v59 + 2) = v61;
    v59[24] = v60[24];
    v59[25] = v60[25];
    v62 = *((_QWORD *)v60 + 5);
    *((_QWORD *)v59 + 4) = *((_QWORD *)v60 + 4);
    *((_QWORD *)v59 + 5) = v62;
    v59[48] = v60[48];
    v63 = (char *)a1 + v58;
    v64 = (char *)a2 + v58;
    v65 = *(_QWORD *)((char *)a2 + v58 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v65)
    {
      *(_QWORD *)v63 = *(_QWORD *)v64;
      *((_QWORD *)v63 + 1) = v65;
      *((_WORD *)v63 + 8) = *((_WORD *)v64 + 8);
      *((_QWORD *)v63 + 3) = *((_QWORD *)v64 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v66 = *((_OWORD *)v64 + 1);
      *(_OWORD *)v63 = *(_OWORD *)v64;
      *((_OWORD *)v63 + 1) = v66;
    }
    v67 = a3[16];
    v68 = a3[17];
    v69 = (char *)a1 + v67;
    v70 = (char *)a2 + v67;
    v71 = *((_QWORD *)v70 + 1);
    *(_QWORD *)v69 = *(_QWORD *)v70;
    *((_QWORD *)v69 + 1) = v71;
    *((_WORD *)v69 + 8) = *((_WORD *)v70 + 8);
    v72 = *((_QWORD *)v70 + 4);
    *((_QWORD *)v69 + 3) = *((_QWORD *)v70 + 3);
    *((_QWORD *)v69 + 4) = v72;
    v73 = (char *)a1 + v68;
    v74 = (char *)a2 + v68;
    v75 = *(_QWORD *)((char *)a2 + v68 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v75 == 1)
    {
      v76 = *((_OWORD *)v74 + 1);
      *(_OWORD *)v73 = *(_OWORD *)v74;
      *((_OWORD *)v73 + 1) = v76;
      *((_QWORD *)v73 + 4) = *((_QWORD *)v74 + 4);
    }
    else
    {
      *(_QWORD *)v73 = *(_QWORD *)v74;
      *((_QWORD *)v73 + 1) = v75;
      v77 = *((_QWORD *)v74 + 3);
      *((_QWORD *)v73 + 2) = *((_QWORD *)v74 + 2);
      *((_QWORD *)v73 + 3) = v77;
      *((_QWORD *)v73 + 4) = *((_QWORD *)v74 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v78 = a3[18];
    v79 = a3[19];
    v80 = (_QWORD *)((char *)a1 + v78);
    v81 = (_QWORD *)((char *)a2 + v78);
    v82 = v81[1];
    *v80 = *v81;
    v80[1] = v82;
    *((_BYTE *)a1 + v79) = *((_BYTE *)a2 + v79);
    v83 = a3[21];
    *((_BYTE *)a1 + a3[20]) = *((_BYTE *)a2 + a3[20]);
    *(_QWORD *)((char *)a1 + v83) = *(_QWORD *)((char *)a2 + v83);
    v84 = a3[22];
    v85 = a3[23];
    v86 = (_QWORD *)((char *)a1 + v84);
    v87 = (_QWORD *)((char *)a2 + v84);
    v88 = v87[1];
    *v86 = *v87;
    v86[1] = v88;
    v89 = (char *)a1 + v85;
    v90 = (char *)a2 + v85;
    *(_QWORD *)v89 = *(_QWORD *)v90;
    v89[8] = v90[8];
    *((_BYTE *)a1 + a3[24]) = *((_BYTE *)a2 + a3[24]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for HeadlineExposureEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  if (*(_QWORD *)(a1 + a2[5] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v5 = a1 + a2[6];
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[11] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[15] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[17] + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 8);
  if (v10)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = v10;
    v11 = *(_QWORD *)(v9 + 24);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = v11;
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v12;
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  }
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = a3[7];
  v18 = a3[8];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  v21 = *(_QWORD *)(v20 + 24);
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  *(_QWORD *)(v19 + 24) = v21;
  *(_BYTE *)(v19 + 32) = *(_BYTE *)(v20 + 32);
  v22 = *(_QWORD *)(v20 + 48);
  *(_QWORD *)(v19 + 40) = *(_QWORD *)(v20 + 40);
  *(_QWORD *)(v19 + 48) = v22;
  *(_BYTE *)(v19 + 56) = *(_BYTE *)(v20 + 56);
  *(_BYTE *)(v19 + 57) = *(_BYTE *)(v20 + 57);
  v23 = *(_QWORD *)(v20 + 72);
  *(_QWORD *)(v19 + 64) = *(_QWORD *)(v20 + 64);
  *(_QWORD *)(v19 + 72) = v23;
  *(_BYTE *)(v19 + 80) = *(_BYTE *)(v20 + 80);
  *(_OWORD *)(v19 + 88) = *(_OWORD *)(v20 + 88);
  *(_QWORD *)(v19 + 104) = *(_QWORD *)(v20 + 104);
  *(_BYTE *)(v19 + 112) = *(_BYTE *)(v20 + 112);
  *(_QWORD *)(v19 + 120) = *(_QWORD *)(v20 + 120);
  *(_DWORD *)(v19 + 128) = *(_DWORD *)(v20 + 128);
  *(_BYTE *)(v19 + 132) = *(_BYTE *)(v20 + 132);
  *(_WORD *)(v19 + 133) = *(_WORD *)(v20 + 133);
  *(_DWORD *)(a1 + v18) = *(_DWORD *)(a2 + v18);
  v24 = a3[9];
  v25 = a3[10];
  v26 = a1 + v24;
  v27 = a2 + v24;
  *(_DWORD *)v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  v28 = a1 + v25;
  v29 = a2 + v25;
  *(_BYTE *)v28 = *(_BYTE *)v29;
  v30 = *(_QWORD *)(v29 + 16);
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
  *(_QWORD *)(v28 + 16) = v30;
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_QWORD *)(a2 + v31 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v34)
  {
    *(_WORD *)v32 = *(_WORD *)v33;
    *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
    *(_QWORD *)(v32 + 16) = v34;
    *(_QWORD *)(v32 + 24) = *(_QWORD *)(v33 + 24);
    v35 = *(_QWORD *)(v33 + 40);
    *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
    *(_QWORD *)(v32 + 40) = v35;
    v36 = *(_QWORD *)(v33 + 56);
    *(_QWORD *)(v32 + 48) = *(_QWORD *)(v33 + 48);
    *(_QWORD *)(v32 + 56) = v36;
    v37 = *(_QWORD *)(v33 + 72);
    *(_QWORD *)(v32 + 64) = *(_QWORD *)(v33 + 64);
    *(_QWORD *)(v32 + 72) = v37;
    *(_BYTE *)(v32 + 80) = *(_BYTE *)(v33 + 80);
    v38 = *(_QWORD *)(v33 + 96);
    *(_QWORD *)(v32 + 88) = *(_QWORD *)(v33 + 88);
    *(_QWORD *)(v32 + 96) = v38;
    *(_QWORD *)(v32 + 104) = *(_QWORD *)(v33 + 104);
    *(_BYTE *)(v32 + 112) = *(_BYTE *)(v33 + 112);
    v39 = *(_QWORD *)(v33 + 120);
    v40 = *(_QWORD *)(v33 + 128);
    *(_QWORD *)(v32 + 120) = v39;
    *(_QWORD *)(v32 + 128) = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v41 = *(_OWORD *)(v33 + 112);
    *(_OWORD *)(v32 + 96) = *(_OWORD *)(v33 + 96);
    *(_OWORD *)(v32 + 112) = v41;
    *(_QWORD *)(v32 + 128) = *(_QWORD *)(v33 + 128);
    v42 = *(_OWORD *)(v33 + 48);
    *(_OWORD *)(v32 + 32) = *(_OWORD *)(v33 + 32);
    *(_OWORD *)(v32 + 48) = v42;
    v43 = *(_OWORD *)(v33 + 80);
    *(_OWORD *)(v32 + 64) = *(_OWORD *)(v33 + 64);
    *(_OWORD *)(v32 + 80) = v43;
    v44 = *(_OWORD *)(v33 + 16);
    *(_OWORD *)v32 = *(_OWORD *)v33;
    *(_OWORD *)(v32 + 16) = v44;
  }
  v45 = a3[12];
  v46 = a3[13];
  v47 = a1 + v45;
  v48 = a2 + v45;
  v49 = *(_OWORD *)(v48 + 16);
  *(_OWORD *)v47 = *(_OWORD *)v48;
  *(_OWORD *)(v47 + 16) = v49;
  v50 = *(_OWORD *)(v48 + 48);
  *(_OWORD *)(v47 + 32) = *(_OWORD *)(v48 + 32);
  *(_OWORD *)(v47 + 48) = v50;
  v51 = *(_OWORD *)(v48 + 80);
  *(_OWORD *)(v47 + 64) = *(_OWORD *)(v48 + 64);
  *(_OWORD *)(v47 + 80) = v51;
  *(_OWORD *)(v47 + 96) = *(_OWORD *)(v48 + 96);
  v52 = *(_QWORD *)(v48 + 112);
  v53 = *(_QWORD *)(v48 + 120);
  *(_BYTE *)(v47 + 128) = *(_BYTE *)(v48 + 128);
  *(_QWORD *)(v47 + 112) = v52;
  *(_QWORD *)(v47 + 120) = v53;
  *(_QWORD *)(v47 + 136) = *(_QWORD *)(v48 + 136);
  *(_BYTE *)(v47 + 144) = *(_BYTE *)(v48 + 144);
  *(_QWORD *)(v47 + 152) = *(_QWORD *)(v48 + 152);
  *(_BYTE *)(v47 + 160) = *(_BYTE *)(v48 + 160);
  *(_QWORD *)(v47 + 168) = *(_QWORD *)(v48 + 168);
  *(_BYTE *)(v47 + 176) = *(_BYTE *)(v48 + 176);
  *(_BYTE *)(v47 + 192) = *(_BYTE *)(v48 + 192);
  *(_QWORD *)(v47 + 184) = *(_QWORD *)(v48 + 184);
  *(_BYTE *)(v47 + 208) = *(_BYTE *)(v48 + 208);
  *(_QWORD *)(v47 + 200) = *(_QWORD *)(v48 + 200);
  *(_BYTE *)(v47 + 224) = *(_BYTE *)(v48 + 224);
  *(_QWORD *)(v47 + 216) = *(_QWORD *)(v48 + 216);
  *(_BYTE *)(v47 + 240) = *(_BYTE *)(v48 + 240);
  *(_QWORD *)(v47 + 232) = *(_QWORD *)(v48 + 232);
  *(_BYTE *)(v47 + 256) = *(_BYTE *)(v48 + 256);
  *(_QWORD *)(v47 + 248) = *(_QWORD *)(v48 + 248);
  v54 = *(_QWORD *)(v48 + 264);
  *(_BYTE *)(v47 + 272) = *(_BYTE *)(v48 + 272);
  *(_QWORD *)(v47 + 264) = v54;
  *(_DWORD *)(a1 + v46) = *(_DWORD *)(a2 + v46);
  v55 = a3[14];
  v56 = a3[15];
  v57 = a1 + v55;
  v58 = a2 + v55;
  *(_BYTE *)v57 = *(_BYTE *)v58;
  v59 = *(_QWORD *)(v58 + 16);
  *(_QWORD *)(v57 + 8) = *(_QWORD *)(v58 + 8);
  *(_QWORD *)(v57 + 16) = v59;
  *(_BYTE *)(v57 + 24) = *(_BYTE *)(v58 + 24);
  *(_BYTE *)(v57 + 25) = *(_BYTE *)(v58 + 25);
  v60 = *(_QWORD *)(v58 + 40);
  *(_QWORD *)(v57 + 32) = *(_QWORD *)(v58 + 32);
  *(_QWORD *)(v57 + 40) = v60;
  *(_BYTE *)(v57 + 48) = *(_BYTE *)(v58 + 48);
  v61 = a1 + v56;
  v62 = a2 + v56;
  v63 = *(_QWORD *)(a2 + v56 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v63)
  {
    *(_QWORD *)v61 = *(_QWORD *)v62;
    *(_QWORD *)(v61 + 8) = v63;
    *(_WORD *)(v61 + 16) = *(_WORD *)(v62 + 16);
    *(_QWORD *)(v61 + 24) = *(_QWORD *)(v62 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v64 = *(_OWORD *)(v62 + 16);
    *(_OWORD *)v61 = *(_OWORD *)v62;
    *(_OWORD *)(v61 + 16) = v64;
  }
  v65 = a3[16];
  v66 = a3[17];
  v67 = a1 + v65;
  v68 = a2 + v65;
  v69 = *(_QWORD *)(v68 + 8);
  *(_QWORD *)v67 = *(_QWORD *)v68;
  *(_QWORD *)(v67 + 8) = v69;
  *(_WORD *)(v67 + 16) = *(_WORD *)(v68 + 16);
  v70 = *(_QWORD *)(v68 + 32);
  *(_QWORD *)(v67 + 24) = *(_QWORD *)(v68 + 24);
  *(_QWORD *)(v67 + 32) = v70;
  v71 = a1 + v66;
  v72 = a2 + v66;
  v73 = *(_QWORD *)(a2 + v66 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v73 == 1)
  {
    v74 = *(_OWORD *)(v72 + 16);
    *(_OWORD *)v71 = *(_OWORD *)v72;
    *(_OWORD *)(v71 + 16) = v74;
    *(_QWORD *)(v71 + 32) = *(_QWORD *)(v72 + 32);
  }
  else
  {
    *(_QWORD *)v71 = *(_QWORD *)v72;
    *(_QWORD *)(v71 + 8) = v73;
    v75 = *(_QWORD *)(v72 + 24);
    *(_QWORD *)(v71 + 16) = *(_QWORD *)(v72 + 16);
    *(_QWORD *)(v71 + 24) = v75;
    *(_QWORD *)(v71 + 32) = *(_QWORD *)(v72 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v76 = a3[18];
  v77 = a3[19];
  v78 = (_QWORD *)(a1 + v76);
  v79 = (_QWORD *)(a2 + v76);
  v80 = v79[1];
  *v78 = *v79;
  v78[1] = v80;
  *(_BYTE *)(a1 + v77) = *(_BYTE *)(a2 + v77);
  v81 = a3[21];
  *(_BYTE *)(a1 + a3[20]) = *(_BYTE *)(a2 + a3[20]);
  *(_QWORD *)(a1 + v81) = *(_QWORD *)(a2 + v81);
  v82 = a3[22];
  v83 = a3[23];
  v84 = (_QWORD *)(a1 + v82);
  v85 = (_QWORD *)(a2 + v82);
  v86 = v85[1];
  *v84 = *v85;
  v84[1] = v86;
  v87 = a1 + v83;
  v88 = a2 + v83;
  *(_QWORD *)v87 = *(_QWORD *)v88;
  *(_BYTE *)(v87 + 8) = *(_BYTE *)(v88 + 8);
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 *v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (__int128 *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7 + 8);
  v11 = *(_QWORD *)(a2 + v7 + 8);
  if (v10)
  {
    if (v11)
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
      *(_QWORD *)(v8 + 24) = *((_QWORD *)v9 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 32) = *((_BYTE *)v9 + 32);
    }
    else
    {
      sub_1D5801194(v8);
      v12 = *((_BYTE *)v9 + 32);
      v13 = v9[1];
      *(_OWORD *)v8 = *v9;
      *(_OWORD *)(v8 + 16) = v13;
      *(_BYTE *)(v8 + 32) = v12;
    }
  }
  else if (v11)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
    *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
    *(_QWORD *)(v8 + 24) = *((_QWORD *)v9 + 3);
    *(_BYTE *)(v8 + 32) = *((_BYTE *)v9 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = *v9;
    v15 = v9[1];
    *(_BYTE *)(v8 + 32) = *((_BYTE *)v9 + 32);
    *(_OWORD *)v8 = v14;
    *(_OWORD *)(v8 + 16) = v15;
  }
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v20 = a3[7];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)v21 = *(_BYTE *)(a2 + v20);
  *(_DWORD *)(v21 + 4) = *(_DWORD *)(a2 + v20 + 4);
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(a2 + v20 + 8);
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(a2 + v20 + 16);
  *(_QWORD *)(v21 + 24) = *(_QWORD *)(a2 + v20 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v21 + 32) = *(_BYTE *)(v22 + 32);
  *(_QWORD *)(v21 + 40) = *(_QWORD *)(v22 + 40);
  v23 = *(_QWORD *)(v22 + 48);
  *(_BYTE *)(v21 + 56) = *(_BYTE *)(v22 + 56);
  *(_QWORD *)(v21 + 48) = v23;
  *(_BYTE *)(v21 + 57) = *(_BYTE *)(v22 + 57);
  *(_QWORD *)(v21 + 64) = *(_QWORD *)(v22 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(v22 + 72);
  *(_BYTE *)(v21 + 80) = *(_BYTE *)(v22 + 80);
  *(_QWORD *)(v21 + 72) = v24;
  *(_QWORD *)(v21 + 88) = *(_QWORD *)(v22 + 88);
  *(_QWORD *)(v21 + 96) = *(_QWORD *)(v22 + 96);
  *(_QWORD *)(v21 + 104) = *(_QWORD *)(v22 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v21 + 112) = *(_BYTE *)(v22 + 112);
  *(_QWORD *)(v21 + 120) = *(_QWORD *)(v22 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v21 + 128) = *(_BYTE *)(v22 + 128);
  *(_BYTE *)(v21 + 129) = *(_BYTE *)(v22 + 129);
  *(_BYTE *)(v21 + 130) = *(_BYTE *)(v22 + 130);
  *(_BYTE *)(v21 + 131) = *(_BYTE *)(v22 + 131);
  *(_BYTE *)(v21 + 132) = *(_BYTE *)(v22 + 132);
  *(_BYTE *)(v21 + 133) = *(_BYTE *)(v22 + 133);
  *(_BYTE *)(v21 + 134) = *(_BYTE *)(v22 + 134);
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  v25 = a3[9];
  v26 = a1 + v25;
  v27 = (int *)(a2 + v25);
  v28 = *v27;
  *(_BYTE *)(v26 + 4) = *((_BYTE *)v27 + 4);
  *(_DWORD *)v26 = v28;
  v29 = a3[10];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_BYTE *)v30 = *(_BYTE *)v31;
  *(_QWORD *)(v30 + 8) = *(_QWORD *)(v31 + 8);
  *(_QWORD *)(v30 + 16) = *(_QWORD *)(v31 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = a3[11];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_QWORD *)(a1 + v32 + 16);
  v36 = *(_QWORD *)(a2 + v32 + 16);
  if (v35)
  {
    if (v36)
    {
      *(_BYTE *)v33 = *(_BYTE *)v34;
      *(_BYTE *)(v33 + 1) = *(_BYTE *)(v34 + 1);
      *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
      *(_QWORD *)(v33 + 16) = *(_QWORD *)(v34 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v33 + 24) = *(_DWORD *)(v34 + 24);
      *(_DWORD *)(v33 + 28) = *(_DWORD *)(v34 + 28);
      *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v33 + 40) = *(_QWORD *)(v34 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v33 + 48) = *(_QWORD *)(v34 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v33 + 56) = *(_QWORD *)(v34 + 56);
      *(_QWORD *)(v33 + 64) = *(_QWORD *)(v34 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v33 + 72) = *(_QWORD *)(v34 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v33 + 80) = *(_BYTE *)(v34 + 80);
      *(_QWORD *)(v33 + 88) = *(_QWORD *)(v34 + 88);
      *(_QWORD *)(v33 + 96) = *(_QWORD *)(v34 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v37 = *(_QWORD *)(v34 + 104);
      *(_BYTE *)(v33 + 112) = *(_BYTE *)(v34 + 112);
      *(_QWORD *)(v33 + 104) = v37;
      *(_QWORD *)(v33 + 120) = *(_QWORD *)(v34 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v33 + 128) = *(_QWORD *)(v34 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v33);
      *(_OWORD *)v33 = *(_OWORD *)v34;
      v39 = *(_OWORD *)(v34 + 64);
      v41 = *(_OWORD *)(v34 + 16);
      v40 = *(_OWORD *)(v34 + 32);
      *(_OWORD *)(v33 + 48) = *(_OWORD *)(v34 + 48);
      *(_OWORD *)(v33 + 64) = v39;
      *(_OWORD *)(v33 + 16) = v41;
      *(_OWORD *)(v33 + 32) = v40;
      v43 = *(_OWORD *)(v34 + 96);
      v42 = *(_OWORD *)(v34 + 112);
      v44 = *(_OWORD *)(v34 + 80);
      *(_QWORD *)(v33 + 128) = *(_QWORD *)(v34 + 128);
      *(_OWORD *)(v33 + 96) = v43;
      *(_OWORD *)(v33 + 112) = v42;
      *(_OWORD *)(v33 + 80) = v44;
    }
  }
  else if (v36)
  {
    *(_BYTE *)v33 = *(_BYTE *)v34;
    *(_BYTE *)(v33 + 1) = *(_BYTE *)(v34 + 1);
    *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
    *(_QWORD *)(v33 + 16) = *(_QWORD *)(v34 + 16);
    *(_DWORD *)(v33 + 24) = *(_DWORD *)(v34 + 24);
    *(_DWORD *)(v33 + 28) = *(_DWORD *)(v34 + 28);
    *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
    *(_QWORD *)(v33 + 40) = *(_QWORD *)(v34 + 40);
    *(_QWORD *)(v33 + 48) = *(_QWORD *)(v34 + 48);
    *(_QWORD *)(v33 + 56) = *(_QWORD *)(v34 + 56);
    *(_QWORD *)(v33 + 64) = *(_QWORD *)(v34 + 64);
    *(_QWORD *)(v33 + 72) = *(_QWORD *)(v34 + 72);
    *(_BYTE *)(v33 + 80) = *(_BYTE *)(v34 + 80);
    *(_QWORD *)(v33 + 88) = *(_QWORD *)(v34 + 88);
    *(_QWORD *)(v33 + 96) = *(_QWORD *)(v34 + 96);
    v38 = *(_QWORD *)(v34 + 104);
    *(_BYTE *)(v33 + 112) = *(_BYTE *)(v34 + 112);
    *(_QWORD *)(v33 + 104) = v38;
    *(_QWORD *)(v33 + 120) = *(_QWORD *)(v34 + 120);
    *(_QWORD *)(v33 + 128) = *(_QWORD *)(v34 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v33 = *(_OWORD *)v34;
    v45 = *(_OWORD *)(v34 + 16);
    v46 = *(_OWORD *)(v34 + 32);
    v47 = *(_OWORD *)(v34 + 64);
    *(_OWORD *)(v33 + 48) = *(_OWORD *)(v34 + 48);
    *(_OWORD *)(v33 + 64) = v47;
    *(_OWORD *)(v33 + 16) = v45;
    *(_OWORD *)(v33 + 32) = v46;
    v48 = *(_OWORD *)(v34 + 80);
    v49 = *(_OWORD *)(v34 + 96);
    v50 = *(_OWORD *)(v34 + 112);
    *(_QWORD *)(v33 + 128) = *(_QWORD *)(v34 + 128);
    *(_OWORD *)(v33 + 96) = v49;
    *(_OWORD *)(v33 + 112) = v50;
    *(_OWORD *)(v33 + 80) = v48;
  }
  v51 = a3[12];
  v52 = a1 + v51;
  v53 = a2 + v51;
  *(_QWORD *)v52 = *(_QWORD *)(a2 + v51);
  *(_QWORD *)(v52 + 8) = *(_QWORD *)(a2 + v51 + 8);
  *(_QWORD *)(v52 + 16) = *(_QWORD *)(a2 + v51 + 16);
  *(_QWORD *)(v52 + 24) = *(_QWORD *)(a2 + v51 + 24);
  *(_QWORD *)(v52 + 32) = *(_QWORD *)(a2 + v51 + 32);
  *(_QWORD *)(v52 + 40) = *(_QWORD *)(a2 + v51 + 40);
  *(_QWORD *)(v52 + 48) = *(_QWORD *)(a2 + v51 + 48);
  *(_QWORD *)(v52 + 56) = *(_QWORD *)(a2 + v51 + 56);
  *(_QWORD *)(v52 + 64) = *(_QWORD *)(a2 + v51 + 64);
  *(_QWORD *)(v52 + 72) = *(_QWORD *)(a2 + v51 + 72);
  *(_QWORD *)(v52 + 80) = *(_QWORD *)(a2 + v51 + 80);
  *(_QWORD *)(v52 + 88) = *(_QWORD *)(a2 + v51 + 88);
  *(_QWORD *)(v52 + 96) = *(_QWORD *)(a2 + v51 + 96);
  *(_QWORD *)(v52 + 104) = *(_QWORD *)(a2 + v51 + 104);
  *(_QWORD *)(v52 + 112) = *(_QWORD *)(a2 + v51 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v54 = *(_QWORD *)(v53 + 120);
  *(_BYTE *)(v52 + 128) = *(_BYTE *)(v53 + 128);
  *(_QWORD *)(v52 + 120) = v54;
  v55 = *(_QWORD *)(v53 + 136);
  *(_BYTE *)(v52 + 144) = *(_BYTE *)(v53 + 144);
  *(_QWORD *)(v52 + 136) = v55;
  v56 = *(_QWORD *)(v53 + 152);
  *(_BYTE *)(v52 + 160) = *(_BYTE *)(v53 + 160);
  *(_QWORD *)(v52 + 152) = v56;
  v57 = *(_QWORD *)(v53 + 168);
  *(_BYTE *)(v52 + 176) = *(_BYTE *)(v53 + 176);
  *(_QWORD *)(v52 + 168) = v57;
  v58 = *(_QWORD *)(v53 + 184);
  *(_BYTE *)(v52 + 192) = *(_BYTE *)(v53 + 192);
  *(_QWORD *)(v52 + 184) = v58;
  v59 = *(_QWORD *)(v53 + 200);
  *(_BYTE *)(v52 + 208) = *(_BYTE *)(v53 + 208);
  *(_QWORD *)(v52 + 200) = v59;
  v60 = *(_QWORD *)(v53 + 216);
  *(_BYTE *)(v52 + 224) = *(_BYTE *)(v53 + 224);
  *(_QWORD *)(v52 + 216) = v60;
  v61 = *(_QWORD *)(v53 + 232);
  *(_BYTE *)(v52 + 240) = *(_BYTE *)(v53 + 240);
  *(_QWORD *)(v52 + 232) = v61;
  v62 = *(_QWORD *)(v53 + 248);
  *(_BYTE *)(v52 + 256) = *(_BYTE *)(v53 + 256);
  *(_QWORD *)(v52 + 248) = v62;
  v63 = *(_QWORD *)(v53 + 264);
  *(_BYTE *)(v52 + 272) = *(_BYTE *)(v53 + 272);
  *(_QWORD *)(v52 + 264) = v63;
  v64 = a3[13];
  v65 = (_BYTE *)(a1 + v64);
  v66 = (_BYTE *)(a2 + v64);
  *v65 = *v66;
  v65[1] = v66[1];
  v65[2] = v66[2];
  v65[3] = v66[3];
  v67 = a3[14];
  v68 = a1 + v67;
  v69 = a2 + v67;
  *(_BYTE *)v68 = *(_BYTE *)(a2 + v67);
  *(_QWORD *)(v68 + 8) = *(_QWORD *)(a2 + v67 + 8);
  *(_QWORD *)(v68 + 16) = *(_QWORD *)(a2 + v67 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v68 + 24) = *(_BYTE *)(v69 + 24);
  *(_BYTE *)(v68 + 25) = *(_BYTE *)(v69 + 25);
  *(_QWORD *)(v68 + 32) = *(_QWORD *)(v69 + 32);
  *(_QWORD *)(v68 + 40) = *(_QWORD *)(v69 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v68 + 48) = *(_BYTE *)(v69 + 48);
  v70 = a3[15];
  v71 = a1 + v70;
  v72 = a2 + v70;
  v73 = *(_QWORD *)(a1 + v70 + 8);
  v74 = *(_QWORD *)(a2 + v70 + 8);
  if (v73)
  {
    if (v74)
    {
      *(_QWORD *)v71 = *(_QWORD *)v72;
      *(_QWORD *)(v71 + 8) = *(_QWORD *)(v72 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v71 + 16) = *(_BYTE *)(v72 + 16);
      *(_BYTE *)(v71 + 17) = *(_BYTE *)(v72 + 17);
      *(_QWORD *)(v71 + 24) = *(_QWORD *)(v72 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE47C(v71);
      v75 = *(_OWORD *)(v72 + 16);
      *(_OWORD *)v71 = *(_OWORD *)v72;
      *(_OWORD *)(v71 + 16) = v75;
    }
  }
  else if (v74)
  {
    *(_QWORD *)v71 = *(_QWORD *)v72;
    *(_QWORD *)(v71 + 8) = *(_QWORD *)(v72 + 8);
    *(_BYTE *)(v71 + 16) = *(_BYTE *)(v72 + 16);
    *(_BYTE *)(v71 + 17) = *(_BYTE *)(v72 + 17);
    *(_QWORD *)(v71 + 24) = *(_QWORD *)(v72 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v76 = *(_OWORD *)(v72 + 16);
    *(_OWORD *)v71 = *(_OWORD *)v72;
    *(_OWORD *)(v71 + 16) = v76;
  }
  v77 = a3[16];
  v78 = a1 + v77;
  v79 = a2 + v77;
  *(_QWORD *)v78 = *(_QWORD *)(a2 + v77);
  *(_QWORD *)(v78 + 8) = *(_QWORD *)(a2 + v77 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v78 + 16) = *(_BYTE *)(v79 + 16);
  *(_BYTE *)(v78 + 17) = *(_BYTE *)(v79 + 17);
  *(_QWORD *)(v78 + 24) = *(_QWORD *)(v79 + 24);
  *(_QWORD *)(v78 + 32) = *(_QWORD *)(v79 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v80 = a3[17];
  v81 = a1 + v80;
  v82 = (__int128 *)(a2 + v80);
  v83 = *(_QWORD *)(a1 + v80 + 8);
  v84 = *(_QWORD *)(a2 + v80 + 8);
  if (v83 == 1)
  {
    if (v84 == 1)
    {
      v85 = *v82;
      v86 = v82[1];
      *(_QWORD *)(v81 + 32) = *((_QWORD *)v82 + 4);
      *(_OWORD *)v81 = v85;
      *(_OWORD *)(v81 + 16) = v86;
    }
    else
    {
      *(_QWORD *)v81 = *(_QWORD *)v82;
      *(_QWORD *)(v81 + 8) = *((_QWORD *)v82 + 1);
      *(_QWORD *)(v81 + 16) = *((_QWORD *)v82 + 2);
      *(_QWORD *)(v81 + 24) = *((_QWORD *)v82 + 3);
      *(_QWORD *)(v81 + 32) = *((_QWORD *)v82 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v84 == 1)
  {
    sub_1D57EE4B0(v81);
    v87 = *((_QWORD *)v82 + 4);
    v88 = v82[1];
    *(_OWORD *)v81 = *v82;
    *(_OWORD *)(v81 + 16) = v88;
    *(_QWORD *)(v81 + 32) = v87;
  }
  else
  {
    *(_QWORD *)v81 = *(_QWORD *)v82;
    *(_QWORD *)(v81 + 8) = *((_QWORD *)v82 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v81 + 16) = *((_QWORD *)v82 + 2);
    *(_QWORD *)(v81 + 24) = *((_QWORD *)v82 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v81 + 32) = *((_QWORD *)v82 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v89 = a3[18];
  v90 = (_QWORD *)(a1 + v89);
  v91 = (_QWORD *)(a2 + v89);
  *v90 = *v91;
  v90[1] = v91[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  *(_BYTE *)(a1 + a3[20]) = *(_BYTE *)(a2 + a3[20]);
  *(_QWORD *)(a1 + a3[21]) = *(_QWORD *)(a2 + a3[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v92 = a3[22];
  v93 = (_QWORD *)(a1 + v92);
  v94 = (_QWORD *)(a2 + v92);
  *v93 = *v94;
  v93[1] = v94[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v95 = a3[23];
  v96 = a1 + v95;
  v97 = (uint64_t *)(a2 + v95);
  v98 = *v97;
  *(_BYTE *)(v96 + 8) = *((_BYTE *)v97 + 8);
  *(_QWORD *)v96 = v98;
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  return a1;
}

uint64_t initializeWithTake for HeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  _OWORD *v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 *v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  v19 = *(_OWORD *)(v18 + 48);
  *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
  *(_OWORD *)(v17 + 48) = v19;
  *(_QWORD *)(v17 + 127) = *(_QWORD *)(v18 + 127);
  v20 = *(_OWORD *)(v18 + 112);
  *(_OWORD *)(v17 + 96) = *(_OWORD *)(v18 + 96);
  *(_OWORD *)(v17 + 112) = v20;
  v21 = *(_OWORD *)(v18 + 80);
  *(_OWORD *)(v17 + 64) = *(_OWORD *)(v18 + 64);
  *(_OWORD *)(v17 + 80) = v21;
  v22 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v22;
  *(_DWORD *)(a1 + v16) = *(_DWORD *)(a2 + v16);
  v23 = a3[9];
  v24 = a3[10];
  v25 = a1 + v23;
  v26 = a2 + v23;
  *(_DWORD *)v25 = *(_DWORD *)v26;
  *(_BYTE *)(v25 + 4) = *(_BYTE *)(v26 + 4);
  v27 = a1 + v24;
  v28 = a2 + v24;
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
  v29 = a3[11];
  v30 = a3[12];
  v31 = a1 + v29;
  v32 = a2 + v29;
  *(_QWORD *)(v31 + 128) = *(_QWORD *)(v32 + 128);
  v33 = *(_OWORD *)(v32 + 112);
  *(_OWORD *)(v31 + 96) = *(_OWORD *)(v32 + 96);
  *(_OWORD *)(v31 + 112) = v33;
  v34 = *(_OWORD *)(v32 + 48);
  *(_OWORD *)(v31 + 32) = *(_OWORD *)(v32 + 32);
  *(_OWORD *)(v31 + 48) = v34;
  v35 = *(_OWORD *)(v32 + 80);
  *(_OWORD *)(v31 + 64) = *(_OWORD *)(v32 + 64);
  *(_OWORD *)(v31 + 80) = v35;
  v36 = *(_OWORD *)(v32 + 16);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v36;
  memcpy((void *)(a1 + v30), (const void *)(a2 + v30), 0x111uLL);
  v37 = a3[14];
  *(_DWORD *)(a1 + a3[13]) = *(_DWORD *)(a2 + a3[13]);
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = *(_OWORD *)(v39 + 16);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v40;
  *(_OWORD *)(v38 + 32) = *(_OWORD *)(v39 + 32);
  *(_BYTE *)(v38 + 48) = *(_BYTE *)(v39 + 48);
  v41 = a3[15];
  v42 = a3[16];
  v43 = (_OWORD *)(a1 + v41);
  v44 = (_OWORD *)(a2 + v41);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  v46 = a1 + v42;
  v47 = a2 + v42;
  *(_QWORD *)(v46 + 32) = *(_QWORD *)(v47 + 32);
  v48 = *(_OWORD *)(v47 + 16);
  *(_OWORD *)v46 = *(_OWORD *)v47;
  *(_OWORD *)(v46 + 16) = v48;
  v49 = a3[17];
  v50 = a3[18];
  v51 = a1 + v49;
  v52 = (__int128 *)(a2 + v49);
  v53 = *v52;
  v54 = v52[1];
  *(_QWORD *)(v51 + 32) = *((_QWORD *)v52 + 4);
  *(_OWORD *)v51 = v53;
  *(_OWORD *)(v51 + 16) = v54;
  *(_OWORD *)(a1 + v50) = *(_OWORD *)(a2 + v50);
  v55 = a3[20];
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  *(_BYTE *)(a1 + v55) = *(_BYTE *)(a2 + v55);
  v56 = a3[22];
  *(_QWORD *)(a1 + a3[21]) = *(_QWORD *)(a2 + a3[21]);
  *(_OWORD *)(a1 + v56) = *(_OWORD *)(a2 + v56);
  v57 = a3[23];
  v58 = a3[24];
  v59 = a1 + v57;
  v60 = a2 + v57;
  *(_QWORD *)v59 = *(_QWORD *)v60;
  *(_BYTE *)(v59 + 8) = *(_BYTE *)(v60 + 8);
  *(_BYTE *)(a1 + v58) = *(_BYTE *)(a2 + v58);
  return a1;
}

uint64_t assignWithTake for HeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (*(_QWORD *)(a1 + v7 + 8))
  {
    v10 = *(_QWORD *)(v9 + 8);
    if (v10)
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_QWORD *)(v8 + 8) = v10;
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(v9 + 24);
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = v11;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D5801194(v8);
  }
  v12 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v12;
LABEL_6:
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_BYTE *)v18 = *(_BYTE *)(a2 + v17);
  *(_DWORD *)(v18 + 4) = *(_DWORD *)(a2 + v17 + 4);
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(a2 + v17 + 8);
  v20 = *(_QWORD *)(a2 + v17 + 24);
  *(_QWORD *)(v18 + 16) = *(_QWORD *)(a2 + v17 + 16);
  *(_QWORD *)(v18 + 24) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v18 + 32) = *(_BYTE *)(v19 + 32);
  v21 = *(_QWORD *)(v19 + 48);
  *(_QWORD *)(v18 + 40) = *(_QWORD *)(v19 + 40);
  *(_QWORD *)(v18 + 48) = v21;
  *(_BYTE *)(v18 + 56) = *(_BYTE *)(v19 + 56);
  *(_BYTE *)(v18 + 57) = *(_BYTE *)(v19 + 57);
  *(_QWORD *)(v18 + 64) = *(_QWORD *)(v19 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v18 + 72) = *(_QWORD *)(v19 + 72);
  *(_BYTE *)(v18 + 80) = *(_BYTE *)(v19 + 80);
  *(_OWORD *)(v18 + 88) = *(_OWORD *)(v19 + 88);
  *(_QWORD *)(v18 + 104) = *(_QWORD *)(v19 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v18 + 112) = *(_BYTE *)(v19 + 112);
  *(_QWORD *)(v18 + 120) = *(_QWORD *)(v19 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v18 + 128) = *(_BYTE *)(v19 + 128);
  *(_BYTE *)(v18 + 129) = *(_BYTE *)(v19 + 129);
  *(_BYTE *)(v18 + 130) = *(_BYTE *)(v19 + 130);
  *(_BYTE *)(v18 + 131) = *(_BYTE *)(v19 + 131);
  *(_BYTE *)(v18 + 132) = *(_BYTE *)(v19 + 132);
  *(_BYTE *)(v18 + 133) = *(_BYTE *)(v19 + 133);
  *(_BYTE *)(v18 + 134) = *(_BYTE *)(v19 + 134);
  v22 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_DWORD *)v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  v25 = a3[10];
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_BYTE *)v26 = *(_BYTE *)v27;
  v29 = *(_QWORD *)(v27 + 8);
  v28 = *(_QWORD *)(v27 + 16);
  *(_QWORD *)(v26 + 8) = v29;
  *(_QWORD *)(v26 + 16) = v28;
  swift_bridgeObjectRelease();
  v30 = a3[11];
  v31 = a1 + v30;
  v32 = a2 + v30;
  if (*(_QWORD *)(a1 + v30 + 16))
  {
    v33 = *(_QWORD *)(v32 + 16);
    if (v33)
    {
      *(_WORD *)v31 = *(_WORD *)v32;
      *(_QWORD *)(v31 + 8) = *(_QWORD *)(v32 + 8);
      *(_QWORD *)(v31 + 16) = v33;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 24) = *(_QWORD *)(v32 + 24);
      *(_QWORD *)(v31 + 32) = *(_QWORD *)(v32 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 40) = *(_QWORD *)(v32 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 48) = *(_QWORD *)(v32 + 48);
      swift_bridgeObjectRelease();
      v34 = *(_QWORD *)(v32 + 64);
      *(_QWORD *)(v31 + 56) = *(_QWORD *)(v32 + 56);
      *(_QWORD *)(v31 + 64) = v34;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 72) = *(_QWORD *)(v32 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v31 + 80) = *(_BYTE *)(v32 + 80);
      v35 = *(_QWORD *)(v32 + 96);
      *(_QWORD *)(v31 + 88) = *(_QWORD *)(v32 + 88);
      *(_QWORD *)(v31 + 96) = v35;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 104) = *(_QWORD *)(v32 + 104);
      *(_BYTE *)(v31 + 112) = *(_BYTE *)(v32 + 112);
      *(_QWORD *)(v31 + 120) = *(_QWORD *)(v32 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 128) = *(_QWORD *)(v32 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D57E17B8(v31);
  }
  v36 = *(_OWORD *)(v32 + 112);
  *(_OWORD *)(v31 + 96) = *(_OWORD *)(v32 + 96);
  *(_OWORD *)(v31 + 112) = v36;
  *(_QWORD *)(v31 + 128) = *(_QWORD *)(v32 + 128);
  v37 = *(_OWORD *)(v32 + 48);
  *(_OWORD *)(v31 + 32) = *(_OWORD *)(v32 + 32);
  *(_OWORD *)(v31 + 48) = v37;
  v38 = *(_OWORD *)(v32 + 80);
  *(_OWORD *)(v31 + 64) = *(_OWORD *)(v32 + 64);
  *(_OWORD *)(v31 + 80) = v38;
  v39 = *(_OWORD *)(v32 + 16);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v39;
LABEL_11:
  v40 = a3[12];
  v41 = a1 + v40;
  v42 = a2 + v40;
  v43 = *(_OWORD *)(a2 + v40 + 16);
  *(_OWORD *)v41 = *(_OWORD *)(a2 + v40);
  *(_OWORD *)(v41 + 16) = v43;
  v44 = *(_OWORD *)(a2 + v40 + 48);
  *(_OWORD *)(v41 + 32) = *(_OWORD *)(a2 + v40 + 32);
  *(_OWORD *)(v41 + 48) = v44;
  v45 = *(_OWORD *)(a2 + v40 + 80);
  *(_OWORD *)(v41 + 64) = *(_OWORD *)(a2 + v40 + 64);
  *(_OWORD *)(v41 + 80) = v45;
  *(_OWORD *)(v41 + 96) = *(_OWORD *)(a2 + v40 + 96);
  *(_QWORD *)(v41 + 112) = *(_QWORD *)(a2 + v40 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v41 + 120) = *(_QWORD *)(v42 + 120);
  *(_BYTE *)(v41 + 128) = *(_BYTE *)(v42 + 128);
  *(_QWORD *)(v41 + 136) = *(_QWORD *)(v42 + 136);
  *(_BYTE *)(v41 + 144) = *(_BYTE *)(v42 + 144);
  *(_QWORD *)(v41 + 152) = *(_QWORD *)(v42 + 152);
  *(_BYTE *)(v41 + 160) = *(_BYTE *)(v42 + 160);
  *(_BYTE *)(v41 + 176) = *(_BYTE *)(v42 + 176);
  *(_QWORD *)(v41 + 168) = *(_QWORD *)(v42 + 168);
  v46 = *(_QWORD *)(v42 + 184);
  *(_BYTE *)(v41 + 192) = *(_BYTE *)(v42 + 192);
  *(_QWORD *)(v41 + 184) = v46;
  *(_QWORD *)(v41 + 200) = *(_QWORD *)(v42 + 200);
  *(_BYTE *)(v41 + 208) = *(_BYTE *)(v42 + 208);
  *(_QWORD *)(v41 + 216) = *(_QWORD *)(v42 + 216);
  *(_BYTE *)(v41 + 224) = *(_BYTE *)(v42 + 224);
  *(_QWORD *)(v41 + 232) = *(_QWORD *)(v42 + 232);
  *(_BYTE *)(v41 + 240) = *(_BYTE *)(v42 + 240);
  *(_BYTE *)(v41 + 256) = *(_BYTE *)(v42 + 256);
  *(_QWORD *)(v41 + 248) = *(_QWORD *)(v42 + 248);
  *(_BYTE *)(v41 + 272) = *(_BYTE *)(v42 + 272);
  *(_QWORD *)(v41 + 264) = *(_QWORD *)(v42 + 264);
  v47 = a3[13];
  v48 = a3[14];
  v49 = a1 + v47;
  v50 = a2 + v47;
  *(_BYTE *)v49 = *(_BYTE *)v50;
  *(_BYTE *)(v49 + 1) = *(_BYTE *)(v50 + 1);
  *(_WORD *)(v49 + 2) = *(_WORD *)(v50 + 2);
  v51 = a1 + v48;
  v52 = a2 + v48;
  *(_BYTE *)v51 = *(_BYTE *)(a2 + v48);
  v53 = *(_QWORD *)(a2 + v48 + 8);
  v54 = *(_QWORD *)(a2 + v48 + 16);
  *(_QWORD *)(v51 + 8) = v53;
  *(_QWORD *)(v51 + 16) = v54;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v51 + 24) = *(_BYTE *)(v52 + 24);
  *(_BYTE *)(v51 + 25) = *(_BYTE *)(v52 + 25);
  v55 = *(_QWORD *)(v52 + 40);
  *(_QWORD *)(v51 + 32) = *(_QWORD *)(v52 + 32);
  *(_QWORD *)(v51 + 40) = v55;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v51 + 48) = *(_BYTE *)(v52 + 48);
  v56 = a3[15];
  v57 = a1 + v56;
  v58 = a2 + v56;
  if (*(_QWORD *)(a1 + v56 + 8))
  {
    v59 = *(_QWORD *)(v58 + 8);
    if (v59)
    {
      *(_QWORD *)v57 = *(_QWORD *)v58;
      *(_QWORD *)(v57 + 8) = v59;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v57 + 16) = *(_BYTE *)(v58 + 16);
      *(_BYTE *)(v57 + 17) = *(_BYTE *)(v58 + 17);
      *(_QWORD *)(v57 + 24) = *(_QWORD *)(v58 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1D57EE47C(v57);
  }
  v60 = *(_OWORD *)(v58 + 16);
  *(_OWORD *)v57 = *(_OWORD *)v58;
  *(_OWORD *)(v57 + 16) = v60;
LABEL_16:
  v61 = a3[16];
  v62 = a1 + v61;
  v63 = a2 + v61;
  v64 = *(_QWORD *)(a2 + v61 + 8);
  *(_QWORD *)v62 = *(_QWORD *)(a2 + v61);
  *(_QWORD *)(v62 + 8) = v64;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v62 + 16) = *(_BYTE *)(v63 + 16);
  *(_BYTE *)(v62 + 17) = *(_BYTE *)(v63 + 17);
  v65 = *(_QWORD *)(v63 + 32);
  *(_QWORD *)(v62 + 24) = *(_QWORD *)(v63 + 24);
  *(_QWORD *)(v62 + 32) = v65;
  swift_bridgeObjectRelease();
  v66 = a3[17];
  v67 = (_QWORD *)(a1 + v66);
  v68 = (_QWORD *)(a2 + v66);
  if (*(_QWORD *)(a1 + v66 + 8) != 1)
  {
    v69 = v68[1];
    if (v69 != 1)
    {
      *v67 = *v68;
      v67[1] = v69;
      swift_bridgeObjectRelease();
      v71 = v68[3];
      v67[2] = v68[2];
      v67[3] = v71;
      swift_bridgeObjectRelease();
      v67[4] = v68[4];
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1D57EE4B0((uint64_t)v67);
  }
  v70 = *((_OWORD *)v68 + 1);
  *(_OWORD *)v67 = *(_OWORD *)v68;
  *((_OWORD *)v67 + 1) = v70;
  v67[4] = v68[4];
LABEL_21:
  v72 = a3[18];
  v73 = (_QWORD *)(a1 + v72);
  v74 = (uint64_t *)(a2 + v72);
  v76 = *v74;
  v75 = v74[1];
  *v73 = v76;
  v73[1] = v75;
  swift_bridgeObjectRelease();
  v77 = a3[20];
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  *(_BYTE *)(a1 + v77) = *(_BYTE *)(a2 + v77);
  *(_QWORD *)(a1 + a3[21]) = *(_QWORD *)(a2 + a3[21]);
  swift_bridgeObjectRelease();
  v78 = a3[22];
  v79 = (_QWORD *)(a1 + v78);
  v80 = (uint64_t *)(a2 + v78);
  v82 = *v80;
  v81 = v80[1];
  *v79 = v82;
  v79[1] = v81;
  swift_bridgeObjectRelease();
  v83 = a3[23];
  v84 = a3[24];
  v85 = a1 + v83;
  v86 = a2 + v83;
  *(_QWORD *)v85 = *(_QWORD *)v86;
  *(_BYTE *)(v85 + 8) = *(_BYTE *)(v86 + 8);
  *(_BYTE *)(a1 + v84) = *(_BYTE *)(a2 + v84);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadlineExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D596CEEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadlineExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D596CFA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_1D596D04C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for HeadlineExposureEvent.Model.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEC)
    goto LABEL_17;
  if (a2 + 20 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 20) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 20;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 20;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 20;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x15;
  v8 = v6 - 21;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadlineExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 20 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 20) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEB)
    return ((uint64_t (*)(void))((char *)&loc_1D596D25C + 4 * byte_1D5ACFE5A[v4]))();
  *a1 = a2 + 20;
  return ((uint64_t (*)(void))((char *)sub_1D596D290 + 4 * byte_1D5ACFE55[v4]))();
}

uint64_t sub_1D596D290(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D596D298(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D596D2A0);
  return result;
}

uint64_t sub_1D596D2AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D596D2B4);
  *(_BYTE *)result = a2 + 20;
  return result;
}

uint64_t sub_1D596D2B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D596D2C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadlineExposureEvent.Model.CodingKeys()
{
  return &type metadata for HeadlineExposureEvent.Model.CodingKeys;
}

unint64_t sub_1D596D2E0()
{
  unint64_t result;

  result = qword_1EFF4E258;
  if (!qword_1EFF4E258)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD027C, &type metadata for HeadlineExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E258);
  }
  return result;
}

unint64_t sub_1D596D328()
{
  unint64_t result;

  result = qword_1ED9CA938;
  if (!qword_1ED9CA938)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD01EC, &type metadata for HeadlineExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CA938);
  }
  return result;
}

unint64_t sub_1D596D370()
{
  unint64_t result;

  result = qword_1ED9CA930;
  if (!qword_1ED9CA930)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD0214, &type metadata for HeadlineExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CA930);
  }
  return result;
}

uint64_t sub_1D596D3B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461446461 && a2 == 0xE600000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AECA50 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AEDC30 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AEC9D0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEC9F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AED320 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x56656C6369747261 && a2 == 0xEF61746144776569 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AF0C30 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AF0C50 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x7261696C69787561 && a2 == 0xED00006174614479 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AF0C70 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AEFFE0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x4D656E696C66666FLL && a2 == 0xEF6174614465646FLL)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 20;
    else
      return 21;
  }
}

uint64_t sub_1D596DC48(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4E260, MEMORY[0x1E0CF8078]);
}

uint64_t static LiveActivitySubscribeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF472A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4E260, a1);
}

uint64_t sub_1D596DC88(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4E278, MEMORY[0x1E0CF8380]);
}

uint64_t static LiveActivitySubscribeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF472B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4E278, a1);
}

uint64_t LiveActivitySubscribeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t LiveActivitySubscribeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*LiveActivitySubscribeEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t LiveActivitySubscribeEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscribeEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for LiveActivitySubscribeEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4E300);
}

uint64_t LiveActivitySubscribeEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscribeEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*LiveActivitySubscribeEvent.groupData.modify())(_QWORD)
{
  type metadata accessor for LiveActivitySubscribeEvent(0);
  return nullsub_1;
}

uint64_t LiveActivitySubscribeEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscribeEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t LiveActivitySubscribeEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscribeEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*LiveActivitySubscribeEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for LiveActivitySubscribeEvent(0);
  return nullsub_1;
}

uint64_t LiveActivitySubscribeEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscribeEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t LiveActivitySubscribeEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscribeEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*LiveActivitySubscribeEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for LiveActivitySubscribeEvent(0);
  return nullsub_1;
}

uint64_t LiveActivitySubscribeEvent.liveActivityData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscribeEvent(0) + 32);
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t LiveActivitySubscribeEvent.liveActivityData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscribeEvent(0) + 32);
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*LiveActivitySubscribeEvent.liveActivityData.modify())(_QWORD)
{
  type metadata accessor for LiveActivitySubscribeEvent(0);
  return nullsub_1;
}

uint64_t LiveActivitySubscribeEvent.liveActivityOriginationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscribeEvent(0) + 36);
  sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t LiveActivitySubscribeEvent.liveActivityOriginationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscribeEvent(0) + 36);
  sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*LiveActivitySubscribeEvent.liveActivityOriginationData.modify())(_QWORD)
{
  type metadata accessor for LiveActivitySubscribeEvent(0);
  return nullsub_1;
}

uint64_t LiveActivitySubscribeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for LiveActivitySubscribeEvent(0);
  v5 = a1 + v4[5];
  v6 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = a1 + v4[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v6, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v2, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
}

uint64_t LiveActivitySubscribeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

_QWORD *LiveActivitySubscribeEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for LiveActivitySubscribeEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 20), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t type metadata accessor for LiveActivitySubscribeEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4E3A0);
}

uint64_t LiveActivitySubscribeEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for LiveActivitySubscribeEvent.Model(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t LiveActivitySubscribeEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for LiveActivitySubscribeEvent.Model(0) + 28));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t LiveActivitySubscribeEvent.Model.liveActivityData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for LiveActivitySubscribeEvent.Model(0) + 32));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t LiveActivitySubscribeEvent.Model.liveActivityOriginationData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for LiveActivitySubscribeEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

__n128 LiveActivitySubscribeEvent.Model.init(eventData:groupData:feedData:userBundleSubscriptionContextData:liveActivityData:liveActivityOriginationData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  __n128 *v22;
  __n128 result;
  uint64_t v24;
  _QWORD *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  _BYTE v32[144];

  sub_1D57DD5B8(a2, (uint64_t)v32);
  v26 = *a3;
  v13 = a3[1].n128_u64[0];
  v14 = *a4;
  v15 = *((_QWORD *)a4 + 1);
  v16 = *((_QWORD *)a4 + 2);
  v17 = a4[24];
  v29 = a4[25];
  v27 = *((_QWORD *)a4 + 5);
  v28 = *((_QWORD *)a4 + 4);
  LOBYTE(a4) = a4[48];
  v18 = *a5;
  v19 = a5[1];
  v30 = v18;
  v31 = *a6;
  v20 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a7, a1, v20);
  v21 = (int *)type metadata accessor for LiveActivitySubscribeEvent.Model(0);
  sub_1D57DD5B8((uint64_t)v32, a7 + v21[5]);
  v22 = (__n128 *)(a7 + v21[6]);
  result = v26;
  *v22 = v26;
  v22[1].n128_u64[0] = v13;
  v24 = a7 + v21[7];
  *(_BYTE *)v24 = v14;
  *(_QWORD *)(v24 + 8) = v15;
  *(_QWORD *)(v24 + 16) = v16;
  *(_BYTE *)(v24 + 24) = v17;
  *(_BYTE *)(v24 + 25) = v29;
  *(_QWORD *)(v24 + 32) = v28;
  *(_QWORD *)(v24 + 40) = v27;
  *(_BYTE *)(v24 + 48) = (_BYTE)a4;
  v25 = (_QWORD *)(a7 + v21[8]);
  *v25 = v30;
  v25[1] = v19;
  *(_BYTE *)(a7 + v21[9]) = v31;
  return result;
}

uint64_t sub_1D596E698(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D596E6D0 + 4 * byte_1D5AD0300[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D596E6D0()
{
  return 0x74614470756F7267;
}

uint64_t sub_1D596E6E4()
{
  return 0x6174614464656566;
}

unint64_t sub_1D596E6FC()
{
  return 0xD000000000000021;
}

uint64_t sub_1D596E754()
{
  unsigned __int8 *v0;

  return sub_1D596E698(*v0);
}

uint64_t sub_1D596E75C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5970608(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D596E780()
{
  sub_1D596EAA4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D596E7A8()
{
  sub_1D596EAA4();
  return sub_1D5AAEEE0();
}

uint64_t LiveActivitySubscribeEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[24];
  char v22;
  char v23;
  __int128 v24;
  char v25;
  _BYTE v26[144];
  char v27;
  char v28;

  v3 = v1;
  sub_1D596EFC0(0, &qword_1EFF4E290, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v21[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D596EAA4();
  sub_1D5AAEEC8();
  v28 = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for LiveActivitySubscribeEvent.Model(0);
    sub_1D57DD5B8(v3 + v10[5], (uint64_t)v26);
    sub_1D57DD5B8((uint64_t)v26, (uint64_t)v21);
    v27 = 1;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v11 = v3 + v10[6];
    v12 = *(_QWORD *)(v11 + 16);
    *(_OWORD *)v21 = *(_OWORD *)v11;
    *(_QWORD *)&v21[16] = v12;
    v27 = 2;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v13 = v3 + v10[7];
    v14 = *(_BYTE *)(v13 + 24);
    v15 = *(_BYTE *)(v13 + 25);
    v16 = *(_BYTE *)(v13 + 48);
    v21[0] = *(_BYTE *)v13;
    *(_OWORD *)&v21[8] = *(_OWORD *)(v13 + 8);
    v22 = v14;
    v23 = v15;
    v24 = *(_OWORD *)(v13 + 32);
    v25 = v16;
    v27 = 3;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v17 = (uint64_t *)(v3 + v10[8]);
    v19 = *v17;
    v18 = v17[1];
    *(_QWORD *)v21 = v19;
    *(_QWORD *)&v21[8] = v18;
    v27 = 4;
    sub_1D5820FF0();
    sub_1D5AAED6C();
    v21[0] = *(_BYTE *)(v3 + v10[9]);
    v27 = 5;
    sub_1D58213E8();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D596EAA4()
{
  unint64_t result;

  result = qword_1EFF4E298;
  if (!qword_1EFF4E298)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD0564, &type metadata for LiveActivitySubscribeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E298);
  }
  return result;
}

uint64_t LiveActivitySubscribeEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  char v19;
  char v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _BYTE v33[24];
  char v34;
  char v35;
  __int128 v36;
  char v37;
  _BYTE v38[136];
  char v39[144];
  char v40;
  char v41;

  v26 = a2;
  v3 = sub_1D5AADF98();
  v27 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v28 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D596EFC0(0, &qword_1EFF4E2A0, MEMORY[0x1E0DED048]);
  v30 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - v7;
  v9 = (int *)type metadata accessor for LiveActivitySubscribeEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v31 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1D596EAA4();
  v29 = v8;
  v13 = v32;
  sub_1D5AAEEB0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  v14 = v6;
  v15 = v27;
  v39[0] = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v11, v28, v3);
  v41 = 1;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  sub_1D57DD5B8((uint64_t)v39, (uint64_t)v38);
  sub_1D57DD5B8((uint64_t)v38, (uint64_t)&v11[v9[5]]);
  v40 = 2;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v16 = *(_QWORD *)&v33[16];
  v17 = &v11[v9[6]];
  *(_OWORD *)v17 = *(_OWORD *)v33;
  *((_QWORD *)v17 + 2) = v16;
  v40 = 3;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v18 = v34;
  v19 = v35;
  v20 = v37;
  v21 = &v11[v9[7]];
  *v21 = v33[0];
  *(_OWORD *)(v21 + 8) = *(_OWORD *)&v33[8];
  v21[24] = v18;
  v21[25] = v19;
  *((_OWORD *)v21 + 2) = v36;
  v21[48] = v20;
  v40 = 4;
  sub_1D5820FAC();
  sub_1D5AAECD0();
  v22 = *(_QWORD *)&v33[8];
  v23 = &v11[MEMORY[0x20]];
  *(_QWORD *)v23 = *(_QWORD *)v33;
  *((_QWORD *)v23 + 1) = v22;
  v40 = 5;
  sub_1D58213A4();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v29, v30);
  v11[MEMORY[0x24]] = v33[0];
  sub_1D596F01C((uint64_t)v11, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return sub_1D596F060((uint64_t)v11);
}

void sub_1D596EFC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D596EAA4();
    v7 = a3(a1, &type metadata for LiveActivitySubscribeEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D596F01C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LiveActivitySubscribeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D596F060(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LiveActivitySubscribeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D596F09C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LiveActivitySubscribeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D596F0B0(_QWORD *a1)
{
  return LiveActivitySubscribeEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D596F0C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF472A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4E260, a1);
}

uint64_t sub_1D596F0E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF472B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4E278, a1);
}

uint64_t sub_1D596F10C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  v7 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  v9 = a2 + a1[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v7, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v4, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for LiveActivitySubscribeEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for LiveActivitySubscribeEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

uint64_t initializeWithCopy for LiveActivitySubscribeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for LiveActivitySubscribeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for LiveActivitySubscribeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for LiveActivitySubscribeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveActivitySubscribeEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D596FDC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for LiveActivitySubscribeEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D596FF78(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5970124()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1EFF48A08, (void (*)(void))sub_1D5820FAC, (void (*)(void))sub_1D5820FF0);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1EFF48A38, (void (*)(void))sub_1D58213A4, (void (*)(void))sub_1D58213E8);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for LiveActivitySubscribeEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59702C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for LiveActivitySubscribeEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5970350(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D59703CC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LiveActivitySubscribeEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D59704B0 + 4 * byte_1D5AD030B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D59704E4 + 4 * byte_1D5AD0306[v4]))();
}

uint64_t sub_1D59704E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59704EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59704F4);
  return result;
}

uint64_t sub_1D5970500(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5970508);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D597050C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5970514(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LiveActivitySubscribeEvent.Model.CodingKeys()
{
  return &type metadata for LiveActivitySubscribeEvent.Model.CodingKeys;
}

unint64_t sub_1D5970534()
{
  unint64_t result;

  result = qword_1EFF4E3E8;
  if (!qword_1EFF4E3E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD053C, &type metadata for LiveActivitySubscribeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E3E8);
  }
  return result;
}

unint64_t sub_1D597057C()
{
  unint64_t result;

  result = qword_1EFF4E3F0;
  if (!qword_1EFF4E3F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD04AC, &type metadata for LiveActivitySubscribeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E3F0);
  }
  return result;
}

unint64_t sub_1D59705C4()
{
  unint64_t result;

  result = qword_1EFF4E3F8;
  if (!qword_1EFF4E3F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD04D4, &type metadata for LiveActivitySubscribeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E3F8);
  }
  return result;
}

uint64_t sub_1D5970608(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AED610 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001D5AED630)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

void ContentEnvironmentData.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *ContentEnvironmentData.type.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*ContentEnvironmentData.type.modify())()
{
  return nullsub_1;
}

NewsAnalytics::ContentEnvironmentData __swiftcall ContentEnvironmentData.init(type:)(NewsAnalytics::ContentEnvironmentData type)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)type.type;
  return type;
}

uint64_t sub_1D59708B4()
{
  sub_1D57AB878();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59708DC()
{
  sub_1D57AB878();
  return sub_1D5AAEEE0();
}

uint64_t ContentEnvironmentData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D57AB7D8(0, &qword_1ED9CD6B0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AB878();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5970A3C();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1D5970A3C()
{
  unint64_t result;

  result = qword_1ED9CD4D8[0];
  if (!qword_1ED9CD4D8[0])
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ContentEnvironmentType, &type metadata for ContentEnvironmentType);
    atomic_store(result, qword_1ED9CD4D8);
  }
  return result;
}

uint64_t sub_1D5970A80@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ContentEnvironmentData.init(from:)(a1, a2);
}

uint64_t storeEnumTagSinglePayload for ContentEnvironmentData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D5970AE0 + 4 * byte_1D5AD05C5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5970B14 + 4 * byte_1D5AD05C0[v4]))();
}

uint64_t sub_1D5970B14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5970B1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5970B24);
  return result;
}

uint64_t sub_1D5970B30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5970B38);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5970B3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5970B44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContentEnvironmentData.CodingKeys()
{
  return &type metadata for ContentEnvironmentData.CodingKeys;
}

unint64_t sub_1D5970B64()
{
  unint64_t result;

  result = qword_1EFF4E400;
  if (!qword_1EFF4E400)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD0724, &type metadata for ContentEnvironmentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E400);
  }
  return result;
}

uint64_t destroy for Session(_QWORD *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[11])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[17])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[27] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[37])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[41])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[48])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Session(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    v7 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v7;
    v8 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v8;
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v6;
    v9 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v9;
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
    *(_BYTE *)(a1 + 124) = *(_BYTE *)(a2 + 124);
    *(_WORD *)(a1 + 125) = *(_WORD *)(a2 + 125);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = *(_QWORD *)(a2 + 136);
    if (v10)
    {
LABEL_3:
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = v10;
      *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      v11 = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v12;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 111) = *(_OWORD *)(a2 + 111);
    v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
    v10 = *(_QWORD *)(a2 + 136);
    if (v10)
      goto LABEL_3;
  }
  v14 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v14;
  v15 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v15;
LABEL_6:
  *(_WORD *)(a1 + 192) = *(_WORD *)(a2 + 192);
  v16 = *(_QWORD *)(a2 + 216);
  if (v16 == 1)
  {
    v17 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v17;
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  }
  else
  {
    *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = v16;
    *(_WORD *)(a1 + 224) = *(_WORD *)(a2 + 224);
    v18 = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 240) = v18;
    *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  v19 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = v19;
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  v20 = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20)
  {
    *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
    *(_QWORD *)(a1 + 296) = v20;
    v21 = *(_QWORD *)(a2 + 312);
    *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 312) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = *(_QWORD *)(a2 + 328);
    if (v22)
      goto LABEL_11;
LABEL_14:
    v31 = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 336) = v31;
    *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
    *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
    v25 = *(_QWORD *)(a2 + 384);
    if (v25)
      goto LABEL_12;
LABEL_15:
    v32 = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 392) = v32;
    *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
    *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
    goto LABEL_16;
  }
  v30 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v30;
  v22 = *(_QWORD *)(a2 + 328);
  if (!v22)
    goto LABEL_14;
LABEL_11:
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = v22;
  *(_WORD *)(a1 + 336) = *(_WORD *)(a2 + 336);
  v23 = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = v23;
  v24 = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25 = *(_QWORD *)(a2 + 384);
  if (!v25)
    goto LABEL_15;
LABEL_12:
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  v26 = *(_QWORD *)(a2 + 392);
  v27 = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 384) = v25;
  *(_QWORD *)(a1 + 392) = v26;
  v28 = *(_QWORD *)(a2 + 408);
  v29 = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 400) = v27;
  *(_QWORD *)(a1 + 408) = v28;
  *(_QWORD *)(a1 + 416) = v29;
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_16:
  *(_DWORD *)(a1 + 432) = *(_DWORD *)(a2 + 432);
  *(_WORD *)(a1 + 436) = *(_WORD *)(a2 + 436);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_DWORD *)(a1 + 448) = *(_DWORD *)(a2 + 448);
  *(_BYTE *)(a1 + 452) = *(_BYTE *)(a2 + 452);
  *(_WORD *)(a1 + 453) = *(_WORD *)(a2 + 453);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Session(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  __int128 *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _OWORD *v24;
  __int128 *v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _OWORD *v33;
  _OWORD *v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  _OWORD *v38;
  __int128 *v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _OWORD *v47;
  __int128 *v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  int v56;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 32);
  v5 = (_OWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88))
  {
    if (v6)
    {
      *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
      *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
      *(_BYTE *)(a1 + 122) = *(_BYTE *)(a2 + 122);
      *(_BYTE *)(a1 + 123) = *(_BYTE *)(a2 + 123);
      *(_BYTE *)(a1 + 124) = *(_BYTE *)(a2 + 124);
      *(_BYTE *)(a1 + 125) = *(_BYTE *)(a2 + 125);
      *(_BYTE *)(a1 + 126) = *(_BYTE *)(a2 + 126);
    }
    else
    {
      sub_1D59718DC(a1 + 32);
      v7 = *(_OWORD *)(a2 + 48);
      *v4 = *v5;
      *(_OWORD *)(a1 + 48) = v7;
      v9 = *(_OWORD *)(a2 + 80);
      v8 = *(_OWORD *)(a2 + 96);
      v10 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 111) = *(_OWORD *)(a2 + 111);
      *(_OWORD *)(a1 + 80) = v9;
      *(_OWORD *)(a1 + 96) = v8;
      *(_OWORD *)(a1 + 64) = v10;
    }
  }
  else if (v6)
  {
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
    *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
    *(_BYTE *)(a1 + 122) = *(_BYTE *)(a2 + 122);
    *(_BYTE *)(a1 + 123) = *(_BYTE *)(a2 + 123);
    *(_BYTE *)(a1 + 124) = *(_BYTE *)(a2 + 124);
    *(_BYTE *)(a1 + 125) = *(_BYTE *)(a2 + 125);
    *(_BYTE *)(a1 + 126) = *(_BYTE *)(a2 + 126);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 48);
    *v4 = *v5;
    *(_OWORD *)(a1 + 48) = v11;
    v12 = *(_OWORD *)(a2 + 64);
    v13 = *(_OWORD *)(a2 + 80);
    v14 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 111) = *(_OWORD *)(a2 + 111);
    *(_OWORD *)(a1 + 80) = v13;
    *(_OWORD *)(a1 + 96) = v14;
    *(_OWORD *)(a1 + 64) = v12;
  }
  v15 = (_OWORD *)(a1 + 128);
  v16 = (__int128 *)(a2 + 128);
  v17 = *(_QWORD *)(a2 + 136);
  if (*(_QWORD *)(a1 + 136))
  {
    if (v17)
    {
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      *(_BYTE *)(a1 + 145) = *(_BYTE *)(a2 + 145);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
      *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
      *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
      *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D5971910(a1 + 128);
      v18 = *(_OWORD *)(a2 + 176);
      v20 = *v16;
      v19 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = v18;
      *v15 = v20;
      *(_OWORD *)(a1 + 144) = v19;
    }
  }
  else if (v17)
  {
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    *(_BYTE *)(a1 + 145) = *(_BYTE *)(a2 + 145);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
    *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
    *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
    *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *v16;
    v22 = *(_OWORD *)(a2 + 144);
    v23 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v23;
    *v15 = v21;
    *(_OWORD *)(a1 + 144) = v22;
  }
  *(_WORD *)(a1 + 192) = *(_WORD *)(a2 + 192);
  v24 = (_OWORD *)(a1 + 200);
  v25 = (__int128 *)(a2 + 200);
  v26 = *(_QWORD *)(a2 + 216);
  if (*(_QWORD *)(a1 + 216) == 1)
  {
    if (v26 == 1)
    {
      v27 = *v25;
      v28 = *(_OWORD *)(a2 + 216);
      v29 = *(_OWORD *)(a2 + 232);
      *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
      *(_OWORD *)(a1 + 216) = v28;
      *(_OWORD *)(a1 + 232) = v29;
      *v24 = v27;
    }
    else
    {
      *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
      *(_BYTE *)(a1 + 225) = *(_BYTE *)(a2 + 225);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v26 == 1)
  {
    sub_1D5971944(a1 + 200);
    v31 = *(_OWORD *)(a2 + 216);
    v30 = *(_OWORD *)(a2 + 232);
    v32 = *v25;
    *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
    *(_OWORD *)(a1 + 216) = v31;
    *(_OWORD *)(a1 + 232) = v30;
    *v24 = v32;
  }
  else
  {
    *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
    *(_BYTE *)(a1 + 225) = *(_BYTE *)(a2 + 225);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  }
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33 = (_OWORD *)(a1 + 288);
  v34 = (_OWORD *)(a2 + 288);
  v35 = *(_QWORD *)(a2 + 296);
  if (*(_QWORD *)(a1 + 296))
  {
    if (v35)
    {
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D5971978(a1 + 288);
      v36 = *(_OWORD *)(a2 + 304);
      *v33 = *v34;
      *(_OWORD *)(a1 + 304) = v36;
    }
  }
  else if (v35)
  {
    *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
    *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
    *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v37 = *(_OWORD *)(a2 + 304);
    *v33 = *v34;
    *(_OWORD *)(a1 + 304) = v37;
  }
  v38 = (_OWORD *)(a1 + 320);
  v39 = (__int128 *)(a2 + 320);
  v40 = *(_QWORD *)(a2 + 328);
  if (*(_QWORD *)(a1 + 328))
  {
    if (v40)
    {
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
      *(_BYTE *)(a1 + 337) = *(_BYTE *)(a2 + 337);
      *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D59719AC(a1 + 320);
      v42 = *(_OWORD *)(a2 + 336);
      v41 = *(_OWORD *)(a2 + 352);
      v43 = *v39;
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      *(_OWORD *)(a1 + 336) = v42;
      *(_OWORD *)(a1 + 352) = v41;
      *v38 = v43;
    }
  }
  else if (v40)
  {
    *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
    *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
    *(_BYTE *)(a1 + 337) = *(_BYTE *)(a2 + 337);
    *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
    *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
    *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
    *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v44 = *v39;
    v45 = *(_OWORD *)(a2 + 336);
    v46 = *(_OWORD *)(a2 + 352);
    *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 336) = v45;
    *(_OWORD *)(a1 + 352) = v46;
    *v38 = v44;
  }
  v47 = (_OWORD *)(a1 + 376);
  v48 = (__int128 *)(a2 + 376);
  v49 = *(_QWORD *)(a2 + 384);
  if (*(_QWORD *)(a1 + 384))
  {
    if (v49)
    {
      *(_DWORD *)(a1 + 376) = *(_DWORD *)(a2 + 376);
      *(_DWORD *)(a1 + 380) = *(_DWORD *)(a2 + 380);
      *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 424) = *(_DWORD *)(a2 + 424);
      *(_DWORD *)(a1 + 428) = *(_DWORD *)(a2 + 428);
    }
    else
    {
      sub_1D59719E0(a1 + 376);
      v51 = *(_OWORD *)(a2 + 392);
      v50 = *(_OWORD *)(a2 + 408);
      v52 = *v48;
      *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
      *(_OWORD *)(a1 + 392) = v51;
      *(_OWORD *)(a1 + 408) = v50;
      *v47 = v52;
    }
  }
  else if (v49)
  {
    *(_DWORD *)(a1 + 376) = *(_DWORD *)(a2 + 376);
    *(_DWORD *)(a1 + 380) = *(_DWORD *)(a2 + 380);
    *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
    *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
    *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
    *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
    *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
    *(_DWORD *)(a1 + 424) = *(_DWORD *)(a2 + 424);
    *(_DWORD *)(a1 + 428) = *(_DWORD *)(a2 + 428);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v53 = *v48;
    v54 = *(_OWORD *)(a2 + 392);
    v55 = *(_OWORD *)(a2 + 408);
    *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 392) = v54;
    *(_OWORD *)(a1 + 408) = v55;
    *v47 = v53;
  }
  v56 = *(_DWORD *)(a2 + 432);
  *(_BYTE *)(a1 + 436) = *(_BYTE *)(a2 + 436);
  *(_DWORD *)(a1 + 432) = v56;
  *(_BYTE *)(a1 + 437) = *(_BYTE *)(a2 + 437);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 448) = *(_BYTE *)(a2 + 448);
  *(_BYTE *)(a1 + 449) = *(_BYTE *)(a2 + 449);
  *(_BYTE *)(a1 + 450) = *(_BYTE *)(a2 + 450);
  *(_BYTE *)(a1 + 451) = *(_BYTE *)(a2 + 451);
  *(_BYTE *)(a1 + 452) = *(_BYTE *)(a2 + 452);
  *(_BYTE *)(a1 + 453) = *(_BYTE *)(a2 + 453);
  *(_BYTE *)(a1 + 454) = *(_BYTE *)(a2 + 454);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D59718DC(uint64_t a1)
{
  destroy for SessionData();
  return a1;
}

uint64_t sub_1D5971910(uint64_t a1)
{
  destroy for UserData();
  return a1;
}

uint64_t sub_1D5971944(uint64_t a1)
{
  destroy for UserBundleSubscriptionContextData();
  return a1;
}

uint64_t sub_1D5971978(uint64_t a1)
{
  destroy for IssueData();
  return a1;
}

uint64_t sub_1D59719AC(uint64_t a1)
{
  destroy for DeviceData();
  return a1;
}

uint64_t sub_1D59719E0(uint64_t a1)
{
  destroy for SubscriptionData();
  return a1;
}

void *__swift_memcpy464_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1D0uLL);
}

uint64_t assignWithTake for Session(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 88))
  {
    if (*(_QWORD *)(a2 + 88))
    {
      *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
      v6 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v6;
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v7;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      v8 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v8;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
      *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
      *(_BYTE *)(a1 + 122) = *(_BYTE *)(a2 + 122);
      *(_BYTE *)(a1 + 123) = *(_BYTE *)(a2 + 123);
      *(_BYTE *)(a1 + 124) = *(_BYTE *)(a2 + 124);
      *(_BYTE *)(a1 + 125) = *(_BYTE *)(a2 + 125);
      *(_BYTE *)(a1 + 126) = *(_BYTE *)(a2 + 126);
      goto LABEL_6;
    }
    sub_1D59718DC(a1 + 32);
  }
  v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v9;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 111) = *(_OWORD *)(a2 + 111);
  v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
LABEL_6:
  if (*(_QWORD *)(a1 + 136))
  {
    v11 = *(_QWORD *)(a2 + 136);
    if (v11)
    {
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = v11;
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
      *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
      *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
      *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
      v12 = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = v12;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D5971910(a1 + 128);
  }
  v13 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v13;
  v14 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v14;
LABEL_11:
  *(_WORD *)(a1 + 192) = *(_WORD *)(a2 + 192);
  if (*(_QWORD *)(a1 + 216) == 1)
  {
LABEL_14:
    v16 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v16;
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
    goto LABEL_16;
  }
  v15 = *(_QWORD *)(a2 + 216);
  if (v15 == 1)
  {
    sub_1D5971944(a1 + 200);
    goto LABEL_14;
  }
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_BYTE *)(a1 + 225) = *(_BYTE *)(a2 + 225);
  v17 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v17;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
LABEL_16:
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v18;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 296))
  {
    v19 = *(_QWORD *)(a2 + 296);
    if (v19)
    {
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 296) = v19;
      swift_bridgeObjectRelease();
      v20 = *(_QWORD *)(a2 + 312);
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      *(_QWORD *)(a1 + 312) = v20;
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1D5971978(a1 + 288);
  }
  v21 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v21;
LABEL_21:
  if (*(_QWORD *)(a1 + 328))
  {
    v22 = *(_QWORD *)(a2 + 328);
    if (v22)
    {
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      *(_QWORD *)(a1 + 328) = v22;
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 336) = *(_WORD *)(a2 + 336);
      v23 = *(_QWORD *)(a2 + 352);
      *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
      *(_QWORD *)(a1 + 352) = v23;
      swift_bridgeObjectRelease();
      v24 = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
      *(_QWORD *)(a1 + 368) = v24;
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_1D59719AC(a1 + 320);
  }
  v25 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v25;
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
LABEL_26:
  if (!*(_QWORD *)(a1 + 384))
  {
LABEL_30:
    v27 = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 392) = v27;
    *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
    *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
    goto LABEL_31;
  }
  v26 = *(_QWORD *)(a2 + 384);
  if (!v26)
  {
    sub_1D59719E0(a1 + 376);
    goto LABEL_30;
  }
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = v26;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
LABEL_31:
  *(_DWORD *)(a1 + 432) = *(_DWORD *)(a2 + 432);
  *(_WORD *)(a1 + 436) = *(_WORD *)(a2 + 436);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 448) = *(_BYTE *)(a2 + 448);
  *(_BYTE *)(a1 + 449) = *(_BYTE *)(a2 + 449);
  *(_BYTE *)(a1 + 450) = *(_BYTE *)(a2 + 450);
  *(_BYTE *)(a1 + 451) = *(_BYTE *)(a2 + 451);
  *(_BYTE *)(a1 + 452) = *(_BYTE *)(a2 + 452);
  *(_WORD *)(a1 + 453) = *(_WORD *)(a2 + 453);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Session(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 464))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Session(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 456) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 464) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 464) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Session()
{
  return &type metadata for Session;
}

uint64_t sub_1D5971F54(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5971F8C + 4 * byte_1D5AD079C[a1]))(0x496E6F6973736573, 0xE900000000000044);
}

uint64_t sub_1D5971F8C()
{
  return 0x6973736553707061;
}

uint64_t sub_1D5971FAC()
{
  return 0x446E6F6973736573;
}

uint64_t sub_1D5971FCC()
{
  return 0x6174614472657375;
}

uint64_t sub_1D5971FE4()
{
  return 0x7461746E6569726FLL;
}

unint64_t sub_1D5972008()
{
  return 0xD000000000000021;
}

unint64_t sub_1D59720CC()
{
  return 0xD000000000000018;
}

uint64_t sub_1D59720F4(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  __int16 v94;
  char v95;
  int v96;
  char v97;

  sub_1D5974324(0, &qword_1EFF4E408, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v19 - v6;
  v8 = *v1;
  v79 = v1[1];
  v80 = v8;
  v9 = v1[2];
  v77 = v1[3];
  v78 = v9;
  v10 = v1[4];
  v75 = v1[5];
  v76 = v10;
  v11 = v1[6];
  v73 = v1[7];
  v74 = v11;
  v72 = v1[8];
  v71 = v1[9];
  v70 = v1[10];
  v69 = v1[11];
  v68 = v1[12];
  v67 = v1[13];
  v66 = v1[14];
  v96 = *((unsigned __int8 *)v1 + 126);
  v64 = *((unsigned __int16 *)v1 + 62);
  v65 = *((unsigned int *)v1 + 30);
  v56 = v1[16];
  v57 = v1[17];
  v63 = v1[18];
  v62 = v1[19];
  v61 = v1[20];
  v60 = v1[21];
  v59 = v1[22];
  v58 = v1[23];
  v55 = *((unsigned __int16 *)v1 + 96);
  v48 = v1[25];
  v49 = v1[26];
  v54 = v1[27];
  v53 = v1[28];
  v52 = v1[29];
  v51 = v1[30];
  v50 = *((unsigned __int8 *)v1 + 248);
  v46 = v1[32];
  v47 = v1[33];
  v44 = v1[34];
  v45 = v1[35];
  v40 = v1[36];
  v43 = v1[37];
  v42 = v1[38];
  v41 = v1[39];
  v33 = v1[40];
  v39 = v1[41];
  v38 = v1[42];
  v37 = v1[43];
  v36 = v1[44];
  v35 = v1[45];
  v34 = v1[46];
  v26 = v1[47];
  v32 = v1[48];
  v31 = v1[49];
  v30 = v1[50];
  v29 = v1[51];
  v28 = v1[52];
  v27 = v1[53];
  v24 = *((_DWORD *)v1 + 108);
  v25 = *((unsigned __int8 *)v1 + 436);
  v23 = *((unsigned __int8 *)v1 + 437);
  v20 = v1[55];
  v22 = *((unsigned __int8 *)v1 + 454);
  v21 = *((unsigned __int16 *)v1 + 226);
  v12 = *((unsigned int *)v1 + 112);
  v13 = v1[57];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5973FE4();
  v14 = v4;
  sub_1D5AAEEC8();
  LOBYTE(v82) = 0;
  v15 = v81;
  sub_1D5AAED3C();
  if (v15)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v16 = v75;
  v17 = v76;
  v81 = v12;
  LOBYTE(v82) = 1;
  sub_1D5AAECF4();
  v82 = v17;
  v83 = v16;
  v84 = v74;
  v85 = v73;
  v86 = v72;
  v87 = v71;
  v88 = v70;
  v89 = v69;
  v90 = v68;
  v91 = v67;
  v92 = v66;
  v93 = v65;
  v95 = (v65 | ((unint64_t)(v64 | (v96 << 16)) << 32)) >> 48;
  v94 = (v65 | ((unint64_t)(v64 | (v96 << 16)) << 32)) >> 32;
  v97 = 2;
  sub_1D5889CF4();
  sub_1D5AAED18();
  v82 = v56;
  v83 = v57;
  v84 = v63;
  v85 = v62;
  v86 = v61;
  v87 = v60;
  v88 = v59;
  v89 = v58;
  v97 = 3;
  sub_1D57C63EC();
  sub_1D5AAED18();
  LOWORD(v82) = v55;
  v97 = 4;
  sub_1D57CA4E4();
  sub_1D5AAED18();
  v82 = v48;
  v83 = v49;
  v84 = v54;
  v85 = v53;
  v86 = v52;
  v87 = v51;
  LOBYTE(v88) = v50;
  v97 = 5;
  sub_1D57C6B3C();
  sub_1D5AAED18();
  v82 = v46;
  v83 = v47;
  v97 = 6;
  sub_1D57C6EB4();
  sub_1D5AAED18();
  v82 = v44;
  v83 = v45;
  v97 = 7;
  sub_1D57CB9C8();
  sub_1D5AAED18();
  v82 = v40;
  v83 = v43;
  v84 = v42;
  v85 = v41;
  v97 = 8;
  sub_1D57C67EC();
  sub_1D5AAED18();
  v82 = v33;
  v83 = v39;
  v84 = v38;
  v85 = v37;
  v86 = v36;
  v87 = v35;
  v88 = v34;
  v97 = 9;
  sub_1D57CBDBC();
  sub_1D5AAED18();
  v82 = v26;
  v83 = v32;
  v84 = v31;
  v85 = v30;
  v86 = v29;
  v87 = v28;
  v88 = v27;
  v97 = 10;
  sub_1D57C9680();
  sub_1D5AAED18();
  LODWORD(v82) = v24;
  BYTE4(v82) = v25;
  v97 = 11;
  sub_1D57C91F0();
  sub_1D5AAED18();
  LOBYTE(v82) = v23;
  v97 = 12;
  sub_1D57C7CC8();
  sub_1D5AAED18();
  v82 = v20;
  BYTE6(v83) = (v81 | ((unint64_t)(v21 | (v22 << 16)) << 32)) >> 48;
  WORD2(v83) = (v81 | ((unint64_t)(v21 | (v22 << 16)) << 32)) >> 32;
  LODWORD(v83) = v81;
  v97 = 13;
  sub_1D57C771C();
  sub_1D5AAED18();
  v82 = v13;
  v97 = 14;
  sub_1D57C7538();
  sub_1D5AAED18();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

_QWORD *sub_1D5972A48@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  int v48;
  unint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD v105[58];
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  __int16 v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  __int16 v132;
  int v133;
  __int16 v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  _BYTE v142[7];
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int v165;
  char v166;
  char v167;
  uint64_t v168;
  int v169;
  __int16 v170;
  char v171;
  uint64_t v172;
  char v173;
  uint64_t v174;
  char v175;
  _BYTE v176[11];
  __int16 v177;
  _QWORD *v178;

  sub_1D5974324(0, &qword_1ED9CC858, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v40 - v8;
  v10 = a1[3];
  v178 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1D5973FE4();
  sub_1D5AAEEB0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v178);
    return (_QWORD *)v88;
  }
  else
  {
    v65 = a2;
    LOBYTE(v106) = 0;
    v11 = sub_1D5AAECA0();
    LOBYTE(v106) = 1;
    v13 = v12;
    swift_bridgeObjectRetain();
    v14 = sub_1D5AAEC58();
    v87 = v13;
    v64 = v14;
    LOBYTE(v105[0]) = 2;
    v16 = v15;
    sub_1D57E6BE4();
    swift_bridgeObjectRetain();
    sub_1D5AAEC7C();
    v86 = v16;
    v60 = v11;
    v17 = v116;
    v18 = v117 | ((unint64_t)(WORD2(v117) | (BYTE6(v117) << 16)) << 32);
    LOBYTE(v105[0]) = 3;
    v85 = v115;
    v104 = v114;
    v81 = v106;
    v82 = v108;
    v83 = v107;
    v84 = v109;
    v61 = v110;
    v62 = v111;
    v63 = v112;
    v19 = v113;
    sub_1D5974028(v106, v107, v108, v109, v110, v111, v112, v113);
    sub_1D57C63A8();
    sub_1D5AAEC7C();
    v79 = v19;
    v80 = v18;
    v103 = v17;
    v20 = v109;
    v21 = v112;
    v22 = v113;
    LOBYTE(v105[0]) = 4;
    v74 = v106;
    v75 = v107;
    v76 = v108;
    v77 = v110;
    v78 = v111;
    sub_1D5974094(v106, v107);
    sub_1D57CA4A0();
    sub_1D5AAEC7C();
    v72 = v21;
    v73 = v22;
    v71 = v20;
    LODWORD(v20) = (unsigned __int16)v106;
    LOBYTE(v105[0]) = 5;
    sub_1D57C6AF8();
    sub_1D5AAEC7C();
    v59 = v20;
    v23 = v106;
    v24 = v111;
    LODWORD(v21) = v112;
    LOBYTE(v105[0]) = 6;
    v70 = v107;
    v100 = v108;
    v101 = v109;
    v102 = v110;
    sub_1D58D9DD8(v106, v107, v108);
    sub_1D57C6E70();
    sub_1D5AAEC7C();
    v99 = v21;
    v98 = v24;
    v69 = v23;
    v25 = v106;
    v26 = v107;
    LOBYTE(v105[0]) = 7;
    sub_1D57CB984();
    swift_bridgeObjectRetain();
    sub_1D5AAEC7C();
    v68 = v26;
    v57 = v106;
    v58 = v25;
    v27 = v107;
    LOBYTE(v105[0]) = 8;
    sub_1D57C67A8();
    swift_bridgeObjectRetain();
    sub_1D5AAEC7C();
    v97 = v27;
    LOBYTE(v105[0]) = 9;
    v66 = v106;
    v67 = v107;
    v95 = v108;
    v96 = v109;
    sub_1D57E8FE4(v106, v107);
    sub_1D57CBD78();
    sub_1D5AAEC7C();
    LOBYTE(v105[0]) = 10;
    v88 = v106;
    v89 = v107;
    v90 = v108;
    v91 = v109;
    v92 = v110;
    v93 = v111;
    v94 = v112;
    sub_1D59740C4(v106, v107);
    sub_1D57C963C();
    sub_1D5AAEC7C();
    LOBYTE(v105[0]) = 11;
    v28 = v106;
    v29 = v107;
    v55 = v109;
    v56 = v108;
    v53 = v111;
    v54 = v110;
    v52 = v112;
    sub_1D58DA048(v106, v107);
    sub_1D57C91AC();
    sub_1D5AAEC7C();
    v50 = v106;
    LODWORD(v49) = BYTE4(v106);
    v175 = BYTE4(v106);
    LOBYTE(v105[0]) = 12;
    sub_1D57C7C84();
    sub_1D5AAEC7C();
    v48 = v106;
    LOBYTE(v105[0]) = 13;
    sub_1D57C76D8();
    sub_1D5AAEC7C();
    v30 = v106;
    LODWORD(v47) = BYTE6(v107);
    LODWORD(v46) = WORD2(v107);
    v31 = v107;
    v173 = 14;
    sub_1D57C74F4();
    v51 = v30;
    swift_bridgeObjectRetain();
    sub_1D5AAEC7C();
    v32 = v31 | ((unint64_t)(v46 | ((_DWORD)v47 << 16)) << 32);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v43 = v174;
    v105[0] = v60;
    v105[1] = v87;
    v105[2] = v64;
    v105[3] = v86;
    v105[4] = v81;
    v105[5] = v83;
    v105[6] = v82;
    v105[7] = v84;
    v105[8] = v61;
    v105[9] = v62;
    v105[10] = v63;
    v105[11] = v79;
    v105[12] = v104;
    v105[13] = v85;
    v105[14] = v103;
    v44 = HIWORD(v80);
    BYTE6(v105[15]) = BYTE6(v80);
    BYTE4(v105[54]) = v49;
    v49 = HIWORD(v32);
    BYTE6(v105[56]) = BYTE6(v32);
    v46 = v32;
    v47 = HIDWORD(v32);
    WORD2(v105[56]) = WORD2(v32);
    LODWORD(v105[56]) = v32;
    v42 = HIDWORD(v80);
    WORD2(v105[15]) = WORD2(v80);
    LODWORD(v105[15]) = v80;
    v105[16] = v74;
    v105[17] = v75;
    v105[18] = v76;
    v105[19] = v71;
    v105[20] = v77;
    v105[21] = v78;
    v105[22] = v72;
    v105[23] = v73;
    LOWORD(v105[24]) = v59;
    v105[25] = v69;
    v105[26] = v70;
    v105[27] = v100;
    v105[28] = v101;
    v105[29] = v102;
    v105[30] = v98;
    LOBYTE(v105[31]) = v99;
    v105[32] = v58;
    v105[33] = v68;
    v105[34] = v57;
    v105[35] = v97;
    v105[36] = v66;
    v105[37] = v67;
    v105[38] = v95;
    v105[39] = v96;
    v105[40] = v88;
    v105[41] = v89;
    v105[42] = v90;
    v105[43] = v91;
    v105[44] = v92;
    v105[45] = v93;
    v105[46] = v94;
    v105[47] = v28;
    v41 = v28;
    v45 = v29;
    v105[48] = v29;
    v105[49] = v56;
    v105[50] = v55;
    v105[51] = v54;
    v105[52] = v53;
    v105[53] = v52;
    LODWORD(v105[54]) = v50;
    BYTE5(v105[54]) = v48;
    v105[55] = v51;
    v105[57] = v174;
    sub_1D5974100(v105);
    swift_bridgeObjectRelease();
    sub_1D58D9D7C(v28, v45);
    sub_1D58D9D40(v88, v89);
    sub_1D57EA700(v66, v67);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D58D9D0C(v69, v70, v100);
    sub_1D58D9CDC(v74, v75);
    LODWORD(v32) = v80;
    v33 = v81;
    v34 = v82;
    v36 = v61;
    v35 = v62;
    sub_1D58D9C70(v81, v83, v82, v84, v61, v62, v63, v79);
    v37 = v87;
    swift_bridgeObjectRelease();
    v38 = v86;
    swift_bridgeObjectRelease();
    memcpy(v65, v105, 0x1D0uLL);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v178);
    v106 = v60;
    v107 = v37;
    v108 = v64;
    v109 = v38;
    v110 = v33;
    v111 = v83;
    v112 = v34;
    v113 = v84;
    v114 = v36;
    v115 = v35;
    v116 = v63;
    v117 = v79;
    v118 = v104;
    v119 = v85;
    v120 = v103;
    v123 = v44;
    v122 = v42;
    v121 = v32;
    v124 = v74;
    v125 = v75;
    v126 = v76;
    v127 = v71;
    v128 = v77;
    v129 = v78;
    v130 = v72;
    v131 = v73;
    v132 = v59;
    v135 = v69;
    v136 = v70;
    v137 = v100;
    v138 = v101;
    v139 = v102;
    v140 = v98;
    v141 = v99;
    v133 = *(_DWORD *)&v176[7];
    *(_DWORD *)v142 = *(_DWORD *)v176;
    v134 = v177;
    *(_DWORD *)&v142[3] = *(_DWORD *)&v176[3];
    v143 = v58;
    v144 = v68;
    v145 = v57;
    v146 = v97;
    v147 = v66;
    v148 = v67;
    v149 = v95;
    v150 = v96;
    v151 = v88;
    v152 = v89;
    v153 = v90;
    v154 = v91;
    v155 = v92;
    v156 = v93;
    v157 = v94;
    v158 = v41;
    v159 = v45;
    v160 = v56;
    v161 = v55;
    v162 = v54;
    v163 = v53;
    v164 = v52;
    v165 = v50;
    v166 = v175;
    v167 = v48;
    v168 = v51;
    v171 = v49;
    v170 = v47;
    v169 = v46;
    v172 = v43;
    return sub_1D58D9A54(&v106);
  }
}

uint64_t sub_1D5973F40()
{
  unsigned __int8 *v0;

  return sub_1D5971F54(*v0);
}

uint64_t sub_1D5973F48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5974524(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5973F6C()
{
  sub_1D5973FE4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5973F94()
{
  sub_1D5973FE4();
  return sub_1D5AAEEE0();
}

_QWORD *sub_1D5973FBC@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return sub_1D5972A48(a1, a2);
}

uint64_t sub_1D5973FD0(_QWORD *a1)
{
  return sub_1D59720F4(a1);
}

unint64_t sub_1D5973FE4()
{
  unint64_t result;

  result = qword_1ED9CC3E0;
  if (!qword_1ED9CC3E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD08D4, &type metadata for Session.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC3E0);
  }
  return result;
}

uint64_t sub_1D5974028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;

  if (a8)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D5974094(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D59740C4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

_QWORD *sub_1D5974100(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v14 = a1[5];
  v15 = a1[4];
  v12 = a1[7];
  v13 = a1[6];
  v10 = a1[9];
  v11 = a1[8];
  v8 = a1[11];
  v9 = a1[10];
  v2 = a1[16];
  v3 = a1[17];
  v6 = a1[26];
  v7 = a1[25];
  v5 = a1[27];
  v16 = a1[37];
  v17 = a1[36];
  v18 = a1[41];
  v19 = a1[40];
  v20 = a1[48];
  v21 = a1[47];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D5974028(v15, v14, v13, v12, v11, v10, v9, v8);
  sub_1D5974094(v2, v3);
  sub_1D58D9DD8(v7, v6, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D57E8FE4(v17, v16);
  sub_1D59740C4(v19, v18);
  sub_1D58DA048(v21, v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1D5974324(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5973FE4();
    v7 = a3(a1, &type metadata for Session.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for Session.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1D59743CC + 4 * byte_1D5AD07B0[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1D5974400 + 4 * byte_1D5AD07AB[v4]))();
}

uint64_t sub_1D5974400(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5974408(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5974410);
  return result;
}

uint64_t sub_1D597441C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5974424);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1D5974428(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5974430(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Session.CodingKeys()
{
  return &type metadata for Session.CodingKeys;
}

unint64_t sub_1D5974450()
{
  unint64_t result;

  result = qword_1EFF4E410;
  if (!qword_1EFF4E410)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD08AC, &type metadata for Session.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E410);
  }
  return result;
}

unint64_t sub_1D5974498()
{
  unint64_t result;

  result = qword_1ED9CC3F0;
  if (!qword_1ED9CC3F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD081C, &type metadata for Session.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC3F0);
  }
  return result;
}

unint64_t sub_1D59744E0()
{
  unint64_t result;

  result = qword_1ED9CC3E8;
  if (!qword_1ED9CC3E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD0844, &type metadata for Session.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CC3E8);
  }
  return result;
}

uint64_t sub_1D5974524(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x496E6F6973736573 && a2 == 0xE900000000000044;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6973736553707061 && a2 == 0xEC00000044496E6FLL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446E6F6973736573 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614472657375 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001D5AF0C90 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6144776F646E6977 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x61746144707061 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6144656369766564 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AEE9B0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AEEA10 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEE060 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5AEE9F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5AEEA50)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 14;
    else
      return 15;
  }
}

uint64_t static AppSessionStartEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CCED8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCBD0, a1);
}

uint64_t static AppSessionStartEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CCF00, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCEE0, a1);
}

uint64_t AppSessionStartEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t AppSessionStartEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AppSessionStartEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AppSessionStartEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionStartEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionStartEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for AppSessionStartEvent(0);
  return nullsub_1;
}

uint64_t AppSessionStartEvent.subscriptionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionStartEvent.subscriptionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionStartEvent.subscriptionData.modify())(_QWORD)
{
  type metadata accessor for AppSessionStartEvent(0);
  return nullsub_1;
}

uint64_t AppSessionStartEvent.referralData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionStartEvent.referralData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionStartEvent.referralData.modify())(_QWORD)
{
  type metadata accessor for AppSessionStartEvent(0);
  return nullsub_1;
}

uint64_t AppSessionStartEvent.campaignData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionStartEvent.campaignData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionStartEvent.campaignData.modify())(_QWORD)
{
  type metadata accessor for AppSessionStartEvent(0);
  return nullsub_1;
}

uint64_t AppSessionStartEvent.notificationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionStartEvent.notificationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionStartEvent.notificationData.modify())(_QWORD)
{
  type metadata accessor for AppSessionStartEvent(0);
  return nullsub_1;
}

uint64_t AppSessionStartEvent.notificationSettingsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionStartEvent.notificationSettingsData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionStartEvent.notificationSettingsData.modify())(_QWORD)
{
  type metadata accessor for AppSessionStartEvent(0);
  return nullsub_1;
}

uint64_t AppSessionStartEvent.widgetEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionStartEvent.widgetEngagementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionStartEvent.widgetEngagementData.modify())(_QWORD)
{
  type metadata accessor for AppSessionStartEvent(0);
  return nullsub_1;
}

uint64_t AppSessionStartEvent.autoSubscribedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionStartEvent.autoSubscribedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionStartEvent.autoSubscribedData.modify())(_QWORD)
{
  type metadata accessor for AppSessionStartEvent(0);
  return nullsub_1;
}

uint64_t AppSessionStartEvent.subscribedSportsListData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionStartEvent.subscribedSportsListData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionStartEvent.subscribedSportsListData.modify())(_QWORD)
{
  type metadata accessor for AppSessionStartEvent(0);
  return nullsub_1;
}

uint64_t AppSessionStartEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *started;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  started = (int *)type metadata accessor for AppSessionStartEvent(0);
  v5 = a1 + started[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + started[6];
  sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + started[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + started[8];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + started[9];
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v10, v15);
  v16 = a1 + started[10];
  sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + started[11];
  sub_1D579E208(0, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v10, v19);
  v20 = a1 + started[12];
  sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + started[13];
  sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v10, v23);
}

uint64_t AppSessionStartEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AppSessionStartEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for AppSessionStartEvent.Model(0) + 20));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t AppSessionStartEvent.Model.referralData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AppSessionStartEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1D5828094(v4, v5);
}

uint64_t AppSessionStartEvent.Model.campaignData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AppSessionStartEvent.Model(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1D5828094(v4, v5);
}

uint64_t AppSessionStartEvent.Model.notificationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent.Model(0) + 36);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  v11 = *(_QWORD *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  LOWORD(v3) = *(_WORD *)(v3 + 72);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_WORD *)(a1 + 72) = v3;
  return sub_1D58AEDC8(v4, v5);
}

uint64_t AppSessionStartEvent.Model.widgetEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t started;
  _BYTE v5[456];

  started = type metadata accessor for AppSessionStartEvent.Model(0);
  sub_1D5975960(v1 + *(int *)(started + 44), (uint64_t)v5);
  sub_1D5975960((uint64_t)v5, a1);
  return sub_1D5976328((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D59759F8);
}

uint64_t sub_1D5975960(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D59759A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D59759A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C6A60)
  {
    v0 = sub_1D5AAEACC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C6A60);
  }
}

uint64_t sub_1D59759F8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t AppSessionStartEvent.Model.autoSubscribedData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AppSessionStartEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t AppSessionStartEvent.Model.subscribedSportsListData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for AppSessionStartEvent.Model(0) + 52));
  return swift_bridgeObjectRetain();
}

uint64_t AppSessionStartEvent.Model.init(eventData:userBundleSubscriptionContextData:subscriptionData:referralData:campaignData:notificationData:notificationSettingsData:widgetEngagementData:autoSubscribedData:subscribedSportsListData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, __int128 *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, int *a10, uint64_t *a11)
{
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *started;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  __int128 v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int16 v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int16 v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  uint64_t v58;
  _BYTE v59[456];

  v36 = *a2;
  v14 = *((_QWORD *)a2 + 2);
  v35 = *((_QWORD *)a2 + 1);
  v15 = a2[24];
  v16 = a2[25];
  v17 = *((_QWORD *)a2 + 4);
  v18 = *((_QWORD *)a2 + 5);
  v34 = a2[48];
  v40 = a4[1];
  v41 = *a4;
  v39 = *((_QWORD *)a4 + 4);
  v37 = a3[5];
  v38 = *((_QWORD *)a4 + 5);
  v44 = a5[1];
  v45 = *a5;
  v42 = *((_QWORD *)a5 + 5);
  v43 = *((_QWORD *)a5 + 4);
  v50 = a6[1];
  v51 = *a6;
  v48 = a6[3];
  v49 = a6[2];
  v47 = *((_QWORD *)a6 + 8);
  v46 = *((_WORD *)a6 + 36);
  v58 = *a7;
  v57 = *((_BYTE *)a7 + 8);
  v56 = *((_BYTE *)a7 + 9);
  v55 = *((_BYTE *)a7 + 10);
  v53 = *((_BYTE *)a7 + 12);
  v54 = *((_BYTE *)a7 + 11);
  v52 = *(_WORD *)((char *)a7 + 13);
  sub_1D5975960(a8, (uint64_t)v59);
  v19 = *a10;
  v20 = *a11;
  v21 = sub_1D5AADF98();
  v32 = *(_OWORD *)(a3 + 3);
  v33 = *(_OWORD *)(a3 + 1);
  v22 = *a3;
  v23 = a3[6];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a9, a1, v21);
  started = (int *)type metadata accessor for AppSessionStartEvent.Model(0);
  v25 = a9 + started[5];
  *(_BYTE *)v25 = v36;
  *(_QWORD *)(v25 + 8) = v35;
  *(_QWORD *)(v25 + 16) = v14;
  *(_BYTE *)(v25 + 24) = v15;
  *(_BYTE *)(v25 + 25) = v16;
  *(_QWORD *)(v25 + 32) = v17;
  *(_QWORD *)(v25 + 40) = v18;
  *(_BYTE *)(v25 + 48) = v34;
  v26 = a9 + started[6];
  *(_QWORD *)v26 = v22;
  *(_OWORD *)(v26 + 8) = v33;
  *(_OWORD *)(v26 + 24) = v32;
  *(_QWORD *)(v26 + 40) = v37;
  *(_QWORD *)(v26 + 48) = v23;
  v27 = a9 + started[7];
  *(_OWORD *)v27 = v41;
  *(_OWORD *)(v27 + 16) = v40;
  *(_QWORD *)(v27 + 32) = v39;
  *(_QWORD *)(v27 + 40) = v38;
  v28 = a9 + started[8];
  *(_OWORD *)v28 = v45;
  *(_OWORD *)(v28 + 16) = v44;
  *(_QWORD *)(v28 + 32) = v43;
  *(_QWORD *)(v28 + 40) = v42;
  v29 = a9 + started[9];
  *(_OWORD *)v29 = v51;
  *(_OWORD *)(v29 + 16) = v50;
  *(_OWORD *)(v29 + 32) = v49;
  *(_OWORD *)(v29 + 48) = v48;
  *(_QWORD *)(v29 + 64) = v47;
  *(_WORD *)(v29 + 72) = v46;
  v30 = a9 + started[10];
  *(_QWORD *)v30 = v58;
  *(_BYTE *)(v30 + 8) = v57;
  *(_BYTE *)(v30 + 9) = v56;
  *(_BYTE *)(v30 + 10) = v55;
  *(_BYTE *)(v30 + 11) = v54;
  *(_BYTE *)(v30 + 12) = v53;
  *(_WORD *)(v30 + 13) = v52;
  result = sub_1D5975960((uint64_t)v59, a9 + started[11]);
  *(_DWORD *)(a9 + started[12]) = v19;
  *(_QWORD *)(a9 + started[13]) = v20;
  return result;
}

uint64_t sub_1D5975E50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59796A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5975E74()
{
  sub_1D57C8A74();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5975E9C()
{
  sub_1D57C8A74();
  return sub_1D5AAEEE0();
}

uint64_t AppSessionStartEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *started;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  __int128 v24;
  __int128 v25;
  uint64_t *v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  uint64_t v34;
  char v35;
  _QWORD v36[56];
  _OWORD v37[3];
  __int128 v38;
  uint64_t v39;
  __int16 v40;
  char v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  __int16 v48;

  v3 = v1;
  sub_1D57C5724(0, &qword_1EFF4E418, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v34 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57C8A74();
  sub_1D5AAEEC8();
  LOBYTE(v37[0]) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    started = (int *)type metadata accessor for AppSessionStartEvent.Model(0);
    v11 = v3 + started[5];
    v12 = *(_BYTE *)(v11 + 24);
    v13 = *(_BYTE *)(v11 + 25);
    v14 = *(_BYTE *)(v11 + 48);
    LOBYTE(v37[0]) = *(_BYTE *)v11;
    *(_OWORD *)((char *)v37 + 8) = *(_OWORD *)(v11 + 8);
    BYTE8(v37[1]) = v12;
    BYTE9(v37[1]) = v13;
    v37[2] = *(_OWORD *)(v11 + 32);
    LOBYTE(v38) = v14;
    LOBYTE(v36[0]) = 1;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v15 = v3 + started[6];
    v16 = *(_QWORD *)(v15 + 40);
    *(_QWORD *)&v37[0] = *(_QWORD *)v15;
    *(_OWORD *)((char *)v37 + 8) = *(_OWORD *)(v15 + 8);
    *(_OWORD *)((char *)&v37[1] + 8) = *(_OWORD *)(v15 + 24);
    *((_QWORD *)&v37[2] + 1) = v16;
    *(_QWORD *)&v38 = *(_QWORD *)(v15 + 48);
    LOBYTE(v36[0]) = 2;
    sub_1D57C9680();
    sub_1D5AAED6C();
    v17 = (_OWORD *)(v3 + started[7]);
    v18 = v17[1];
    v37[0] = *v17;
    v37[1] = v18;
    v37[2] = v17[2];
    LOBYTE(v36[0]) = 3;
    sub_1D57CB330();
    sub_1D5AAED18();
    v19 = (_OWORD *)(v3 + started[8]);
    v20 = v19[1];
    v37[0] = *v19;
    v37[1] = v20;
    v37[2] = v19[2];
    LOBYTE(v36[0]) = 4;
    sub_1D57CB460();
    sub_1D5AAED18();
    v21 = v3 + started[9];
    v22 = *(_QWORD *)(v21 + 64);
    v23 = *(_WORD *)(v21 + 72);
    v24 = *(_OWORD *)(v21 + 16);
    v37[0] = *(_OWORD *)v21;
    v37[1] = v24;
    v25 = *(_OWORD *)(v21 + 48);
    v37[2] = *(_OWORD *)(v21 + 32);
    v38 = v25;
    v39 = v22;
    v40 = v23;
    LOBYTE(v36[0]) = 5;
    sub_1D57C99E4();
    sub_1D5AAED18();
    v26 = (uint64_t *)(v3 + started[10]);
    v27 = *v26;
    v28 = *((_BYTE *)v26 + 8);
    v29 = *((_BYTE *)v26 + 9);
    v30 = *((_BYTE *)v26 + 10);
    v31 = *((_BYTE *)v26 + 11);
    v32 = *((_BYTE *)v26 + 12);
    LOWORD(v26) = *(_WORD *)((char *)v26 + 13);
    v42 = v27;
    v43 = v28;
    v44 = v29;
    v45 = v30;
    v46 = v31;
    v47 = v32;
    v48 = (__int16)v26;
    v41 = 6;
    sub_1D57C771C();
    sub_1D5AAED6C();
    sub_1D5975960(v3 + started[11], (uint64_t)v37);
    sub_1D5975960((uint64_t)v37, (uint64_t)v36);
    v35 = 7;
    sub_1D57C8314();
    sub_1D5AAED18();
    LODWORD(v36[0]) = *(_DWORD *)(v3 + started[12]);
    v35 = 8;
    sub_1D57C91F0();
    sub_1D5AAED6C();
    v36[0] = *(_QWORD *)(v3 + started[13]);
    v35 = 9;
    sub_1D57C7538();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1D5976328(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v15 = *(_OWORD *)(a1 + 400);
  v16 = *(_OWORD *)(a1 + 416);
  v13 = *(_OWORD *)(a1 + 368);
  v14 = *(_OWORD *)(a1 + 384);
  v11 = *(_OWORD *)(a1 + 336);
  v12 = *(_OWORD *)(a1 + 352);
  v9 = *(_OWORD *)(a1 + 304);
  v10 = *(_OWORD *)(a1 + 320);
  v7 = *(_OWORD *)(a1 + 272);
  v8 = *(_OWORD *)(a1 + 288);
  v5 = *(_OWORD *)(a1 + 240);
  v6 = *(_OWORD *)(a1 + 256);
  v4 = *(_OWORD *)(a1 + 208);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v4,
    *((_QWORD *)&v4 + 1),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    v8,
    *((_QWORD *)&v8 + 1),
    v9,
    *((_QWORD *)&v9 + 1),
    v10,
    *((_QWORD *)&v10 + 1),
    v11,
    *((_QWORD *)&v11 + 1),
    v12,
    *((_QWORD *)&v12 + 1),
    v13,
    *((_QWORD *)&v13 + 1),
    v14,
    *((_QWORD *)&v14 + 1),
    v15,
    *((_QWORD *)&v15 + 1),
    v16,
    *((_QWORD *)&v16 + 1),
    *(_QWORD *)(a1 + 432),
    *(_QWORD *)(a1 + 440));
  return a1;
}

uint64_t sub_1D59763D4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D5976548(_QWORD *a1)
{
  return AppSessionStartEvent.Model.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for AppSessionStartEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for AppSessionStartEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
}

uint64_t initializeWithCopy for AppSessionStartEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for AppSessionStartEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for AppSessionStartEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for AppSessionStartEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionStartEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D597774C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
                    v8 = v21;
                    v12 = *(_QWORD *)(v21 - 8);
                    v13 = a3[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AppSessionStartEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5977A0C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C71B8, (void (*)(void))sub_1D57C963C, (void (*)(void))sub_1D57C9680);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7238, (void (*)(void))sub_1D57C76D8, (void (*)(void))sub_1D57C771C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C71D0, (void (*)(void))sub_1D57C91AC, (void (*)(void))sub_1D57C91F0);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9CE538, (void (*)(void))sub_1D57C74F4, (void (*)(void))sub_1D57C7538);
                    v10 = v23;
                    v14 = *(_QWORD *)(v23 - 8);
                    v15 = a4[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

_QWORD *initializeBufferWithCopyOfBuffer for AppSessionStartEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  int *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  int *v71;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    *((_WORD *)v10 + 12) = *((_WORD *)v11 + 12);
    v13 = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
    *((_QWORD *)v10 + 5) = v13;
    v10[48] = v11[48];
    v14 = (_QWORD *)((char *)a1 + v9);
    v15 = (_QWORD *)((char *)a2 + v9);
    *v14 = *v15;
    v16 = v15[2];
    v14[1] = v15[1];
    v14[2] = v16;
    v17 = v15[4];
    v14[3] = v15[3];
    v14[4] = v17;
    v14[5] = v15[5];
    v14[6] = v15[6];
    v70 = a2;
    v71 = a3;
    v18 = a3[7];
    v19 = (_QWORD *)((char *)a1 + v18);
    v20 = (_QWORD *)((char *)a2 + v18);
    v21 = v20[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21)
    {
      *v19 = *v20;
      v19[1] = v21;
      v22 = v20[3];
      v19[2] = v20[2];
      v19[3] = v22;
      v23 = v20[5];
      v19[4] = v20[4];
      v19[5] = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v25 = *((_OWORD *)v20 + 1);
      *(_OWORD *)v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v25;
      *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
    }
    v26 = v71;
    v27 = v71[8];
    v28 = (_QWORD *)((char *)a1 + v27);
    v29 = (_QWORD *)((char *)v70 + v27);
    v30 = v29[1];
    if (v30)
    {
      *v28 = *v29;
      v28[1] = v30;
      v31 = v29[3];
      v28[2] = v29[2];
      v28[3] = v31;
      v32 = v29[5];
      v28[4] = v29[4];
      v28[5] = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v33 = *((_OWORD *)v29 + 1);
      *(_OWORD *)v28 = *(_OWORD *)v29;
      *((_OWORD *)v28 + 1) = v33;
      *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
    }
    v34 = v71[9];
    v35 = (char *)a1 + v34;
    v36 = (char *)v70 + v34;
    v37 = *((_QWORD *)v36 + 1);
    if (v37 == 1)
    {
      v38 = *((_OWORD *)v36 + 3);
      *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
      *((_OWORD *)v35 + 3) = v38;
      *(_OWORD *)(v35 + 58) = *(_OWORD *)(v36 + 58);
      v39 = *((_OWORD *)v36 + 1);
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *((_OWORD *)v35 + 1) = v39;
    }
    else
    {
      *(_QWORD *)v35 = *(_QWORD *)v36;
      *((_QWORD *)v35 + 1) = v37;
      v35[16] = v36[16];
      v40 = *((_QWORD *)v36 + 4);
      *((_QWORD *)v35 + 3) = *((_QWORD *)v36 + 3);
      *((_QWORD *)v35 + 4) = v40;
      v41 = *((_QWORD *)v36 + 6);
      *((_QWORD *)v35 + 5) = *((_QWORD *)v36 + 5);
      *((_QWORD *)v35 + 6) = v41;
      v42 = *((_QWORD *)v36 + 8);
      *((_QWORD *)v35 + 7) = *((_QWORD *)v36 + 7);
      *((_QWORD *)v35 + 8) = v42;
      v35[72] = v36[72];
      v35[73] = v36[73];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v43 = v71[10];
    v44 = v71[11];
    v45 = (char *)a1 + v43;
    v46 = (char *)v70 + v43;
    *(_QWORD *)v45 = *(_QWORD *)v46;
    *((_DWORD *)v45 + 2) = *((_DWORD *)v46 + 2);
    v45[12] = v46[12];
    *(_WORD *)(v45 + 13) = *(_WORD *)(v46 + 13);
    v47 = (char *)a1 + v44;
    v48 = (char *)v70 + v44;
    v49 = *(_QWORD *)((char *)v70 + v44 + 8);
    swift_bridgeObjectRetain();
    if (v49)
    {
      *(_QWORD *)v47 = *(_QWORD *)v48;
      *((_QWORD *)v47 + 1) = v49;
      v47[16] = v48[16];
      v50 = *((_QWORD *)v48 + 4);
      *((_QWORD *)v47 + 3) = *((_QWORD *)v48 + 3);
      *((_QWORD *)v47 + 4) = v50;
      *((_QWORD *)v47 + 5) = *((_QWORD *)v48 + 5);
      v47[48] = v48[48];
      v69 = *((_QWORD *)v48 + 8);
      *((_QWORD *)v47 + 7) = *((_QWORD *)v48 + 7);
      *((_QWORD *)v47 + 8) = v69;
      v47[72] = v48[72];
      v51 = *((_QWORD *)v48 + 11);
      *((_QWORD *)v47 + 10) = *((_QWORD *)v48 + 10);
      *((_QWORD *)v47 + 11) = v51;
      *((_WORD *)v47 + 48) = *((_WORD *)v48 + 48);
      v52 = *((_QWORD *)v48 + 14);
      *((_QWORD *)v47 + 13) = *((_QWORD *)v48 + 13);
      *((_QWORD *)v47 + 14) = v52;
      v47[120] = v48[120];
      *((_OWORD *)v47 + 8) = *((_OWORD *)v48 + 8);
      *((_QWORD *)v47 + 18) = *((_QWORD *)v48 + 18);
      v47[152] = v48[152];
      *((_QWORD *)v47 + 20) = *((_QWORD *)v48 + 20);
      *((_DWORD *)v47 + 42) = *((_DWORD *)v48 + 42);
      v47[172] = v48[172];
      *(_WORD *)(v47 + 173) = *(_WORD *)(v48 + 173);
      *((_WORD *)v47 + 88) = *((_WORD *)v48 + 88);
      v53 = *((_QWORD *)v48 + 24);
      *((_QWORD *)v47 + 23) = *((_QWORD *)v48 + 23);
      *((_QWORD *)v47 + 24) = v53;
      *((_QWORD *)v47 + 25) = *((_QWORD *)v48 + 25);
      v54 = *((_QWORD *)v48 + 27);
      *((_QWORD *)v47 + 26) = *((_QWORD *)v48 + 26);
      *((_QWORD *)v47 + 27) = v54;
      v55 = *((_QWORD *)v48 + 29);
      *((_QWORD *)v47 + 28) = *((_QWORD *)v48 + 28);
      *((_QWORD *)v47 + 29) = v55;
      v68 = *((_QWORD *)v48 + 31);
      *((_QWORD *)v47 + 30) = *((_QWORD *)v48 + 30);
      *((_QWORD *)v47 + 31) = v68;
      v47[256] = v48[256];
      v56 = *((_QWORD *)v48 + 34);
      *((_QWORD *)v47 + 33) = *((_QWORD *)v48 + 33);
      *((_QWORD *)v47 + 34) = v56;
      v47[288] = v48[288];
      *((_QWORD *)v47 + 35) = *((_QWORD *)v48 + 35);
      v67 = *((_QWORD *)v48 + 38);
      *((_QWORD *)v47 + 37) = *((_QWORD *)v48 + 37);
      *((_QWORD *)v47 + 38) = v67;
      v57 = *((_QWORD *)v48 + 40);
      *((_QWORD *)v47 + 39) = *((_QWORD *)v48 + 39);
      *((_QWORD *)v47 + 40) = v57;
      *((_QWORD *)v47 + 41) = *((_QWORD *)v48 + 41);
      v47[336] = v48[336];
      v58 = *((_QWORD *)v48 + 44);
      *((_QWORD *)v47 + 43) = *((_QWORD *)v48 + 43);
      *((_QWORD *)v47 + 44) = v58;
      v59 = *((_QWORD *)v48 + 46);
      *((_QWORD *)v47 + 45) = *((_QWORD *)v48 + 45);
      *((_QWORD *)v47 + 46) = v59;
      v60 = *((_QWORD *)v48 + 48);
      *((_QWORD *)v47 + 47) = *((_QWORD *)v48 + 47);
      *((_QWORD *)v47 + 48) = v60;
      v47[392] = v48[392];
      v47[393] = v48[393];
      v61 = *((_QWORD *)v48 + 51);
      *((_QWORD *)v47 + 50) = *((_QWORD *)v48 + 50);
      *((_QWORD *)v47 + 51) = v61;
      v62 = *((_QWORD *)v48 + 53);
      *((_QWORD *)v47 + 52) = *((_QWORD *)v48 + 52);
      *((_QWORD *)v47 + 53) = v62;
      v63 = *((_QWORD *)v48 + 54);
      v64 = *((_QWORD *)v48 + 55);
      *((_QWORD *)v47 + 54) = v63;
      *((_QWORD *)v47 + 55) = v64;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26 = v71;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy(v47, v48, 0x1C0uLL);
    }
    v65 = v26[13];
    *(_DWORD *)((char *)a1 + v26[12]) = *(_DWORD *)((char *)v70 + v26[12]);
    *(_QWORD *)((char *)a1 + v65) = *(_QWORD *)((char *)v70 + v65);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_DWORD *)v11 = *(_DWORD *)(a2 + v10);
  *(_DWORD *)(v11 + 4) = *(_DWORD *)(a2 + v10 + 4);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 24) = *(_QWORD *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 40) = *(_QWORD *)(v12 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v11 + 48) = *(_DWORD *)(v12 + 48);
  *(_DWORD *)(v11 + 52) = *(_DWORD *)(v12 + 52);
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = *(_QWORD *)(a1 + v13 + 8);
  v17 = *(_QWORD *)(a2 + v13 + 8);
  if (v16)
  {
    if (v17)
    {
      *v14 = *v15;
      v14[1] = v15[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v14[2] = v15[2];
      v14[3] = v15[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v14[4] = v15[4];
      v14[5] = v15[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D59315F8((uint64_t)v14);
      v19 = *((_OWORD *)v15 + 1);
      v18 = *((_OWORD *)v15 + 2);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v19;
      *((_OWORD *)v14 + 2) = v18;
    }
  }
  else if (v17)
  {
    *v14 = *v15;
    v14[1] = v15[1];
    v14[2] = v15[2];
    v14[3] = v15[3];
    v14[4] = v15[4];
    v14[5] = v15[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *(_OWORD *)v15;
    v21 = *((_OWORD *)v15 + 2);
    *((_OWORD *)v14 + 1) = *((_OWORD *)v15 + 1);
    *((_OWORD *)v14 + 2) = v21;
    *(_OWORD *)v14 = v20;
  }
  v22 = a3[8];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  v25 = *(_QWORD *)(a1 + v22 + 8);
  v26 = *(_QWORD *)(a2 + v22 + 8);
  if (v25)
  {
    if (v26)
    {
      *v23 = *v24;
      v23[1] = v24[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v23[2] = v24[2];
      v23[3] = v24[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v23[4] = v24[4];
      v23[5] = v24[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D5829E98((uint64_t)v23);
      v28 = *((_OWORD *)v24 + 1);
      v27 = *((_OWORD *)v24 + 2);
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v28;
      *((_OWORD *)v23 + 2) = v27;
    }
  }
  else if (v26)
  {
    *v23 = *v24;
    v23[1] = v24[1];
    v23[2] = v24[2];
    v23[3] = v24[3];
    v23[4] = v24[4];
    v23[5] = v24[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v29 = *(_OWORD *)v24;
    v30 = *((_OWORD *)v24 + 2);
    *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
    *((_OWORD *)v23 + 2) = v30;
    *(_OWORD *)v23 = v29;
  }
  v31 = a3[9];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_QWORD *)(a1 + v31 + 8);
  v35 = *(_QWORD *)(a2 + v31 + 8);
  if (v34 == 1)
  {
    if (v35 == 1)
    {
      *(_OWORD *)v32 = *(_OWORD *)v33;
      v36 = *(_OWORD *)(v33 + 16);
      v37 = *(_OWORD *)(v33 + 32);
      v38 = *(_OWORD *)(v33 + 48);
      *(_OWORD *)(v32 + 58) = *(_OWORD *)(v33 + 58);
      *(_OWORD *)(v32 + 32) = v37;
      *(_OWORD *)(v32 + 48) = v38;
      *(_OWORD *)(v32 + 16) = v36;
    }
    else
    {
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
      *(_BYTE *)(v32 + 16) = *(_BYTE *)(v33 + 16);
      *(_QWORD *)(v32 + 24) = *(_QWORD *)(v33 + 24);
      *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
      *(_QWORD *)(v32 + 40) = *(_QWORD *)(v33 + 40);
      *(_QWORD *)(v32 + 48) = *(_QWORD *)(v33 + 48);
      *(_QWORD *)(v32 + 56) = *(_QWORD *)(v33 + 56);
      *(_QWORD *)(v32 + 64) = *(_QWORD *)(v33 + 64);
      *(_BYTE *)(v32 + 72) = *(_BYTE *)(v33 + 72);
      *(_BYTE *)(v32 + 73) = *(_BYTE *)(v33 + 73);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v35 == 1)
  {
    sub_1D58B3718(v32);
    *(_OWORD *)v32 = *(_OWORD *)v33;
    v40 = *(_OWORD *)(v33 + 32);
    v39 = *(_OWORD *)(v33 + 48);
    v41 = *(_OWORD *)(v33 + 16);
    *(_OWORD *)(v32 + 58) = *(_OWORD *)(v33 + 58);
    *(_OWORD *)(v32 + 32) = v40;
    *(_OWORD *)(v32 + 48) = v39;
    *(_OWORD *)(v32 + 16) = v41;
  }
  else
  {
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v32 + 16) = *(_BYTE *)(v33 + 16);
    *(_QWORD *)(v32 + 24) = *(_QWORD *)(v33 + 24);
    *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v32 + 40) = *(_QWORD *)(v33 + 40);
    *(_QWORD *)(v32 + 48) = *(_QWORD *)(v33 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v32 + 56) = *(_QWORD *)(v33 + 56);
    *(_QWORD *)(v32 + 64) = *(_QWORD *)(v33 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v32 + 72) = *(_BYTE *)(v33 + 72);
    *(_BYTE *)(v32 + 73) = *(_BYTE *)(v33 + 73);
  }
  v42 = a3[10];
  v43 = (_BYTE *)(a1 + v42);
  v44 = (_BYTE *)(a2 + v42);
  *(_QWORD *)(a1 + v42) = *(_QWORD *)(a2 + v42);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v43[8] = v44[8];
  v43[9] = v44[9];
  v43[10] = v44[10];
  v43[11] = v44[11];
  v43[12] = v44[12];
  v43[13] = v44[13];
  v43[14] = v44[14];
  v45 = a3[11];
  v46 = a1 + v45;
  v47 = a2 + v45;
  v48 = *(_QWORD *)(a1 + v45 + 8);
  v49 = *(_QWORD *)(a2 + v45 + 8);
  if (!v48)
  {
    if (v49)
    {
      *(_QWORD *)v46 = *(_QWORD *)v47;
      *(_QWORD *)(v46 + 8) = *(_QWORD *)(v47 + 8);
      *(_BYTE *)(v46 + 16) = *(_BYTE *)(v47 + 16);
      *(_QWORD *)(v46 + 24) = *(_QWORD *)(v47 + 24);
      *(_QWORD *)(v46 + 32) = *(_QWORD *)(v47 + 32);
      *(_QWORD *)(v46 + 40) = *(_QWORD *)(v47 + 40);
      *(_BYTE *)(v46 + 48) = *(_BYTE *)(v47 + 48);
      *(_QWORD *)(v46 + 56) = *(_QWORD *)(v47 + 56);
      *(_QWORD *)(v46 + 64) = *(_QWORD *)(v47 + 64);
      *(_BYTE *)(v46 + 72) = *(_BYTE *)(v47 + 72);
      *(_QWORD *)(v46 + 80) = *(_QWORD *)(v47 + 80);
      v53 = *(_QWORD *)(v47 + 88);
      *(_BYTE *)(v46 + 96) = *(_BYTE *)(v47 + 96);
      *(_QWORD *)(v46 + 88) = v53;
      *(_BYTE *)(v46 + 97) = *(_BYTE *)(v47 + 97);
      *(_QWORD *)(v46 + 104) = *(_QWORD *)(v47 + 104);
      v54 = *(_QWORD *)(v47 + 112);
      *(_BYTE *)(v46 + 120) = *(_BYTE *)(v47 + 120);
      *(_QWORD *)(v46 + 112) = v54;
      *(_QWORD *)(v46 + 128) = *(_QWORD *)(v47 + 128);
      *(_QWORD *)(v46 + 136) = *(_QWORD *)(v47 + 136);
      *(_QWORD *)(v46 + 144) = *(_QWORD *)(v47 + 144);
      *(_BYTE *)(v46 + 152) = *(_BYTE *)(v47 + 152);
      *(_QWORD *)(v46 + 160) = *(_QWORD *)(v47 + 160);
      *(_BYTE *)(v46 + 168) = *(_BYTE *)(v47 + 168);
      *(_BYTE *)(v46 + 169) = *(_BYTE *)(v47 + 169);
      *(_BYTE *)(v46 + 170) = *(_BYTE *)(v47 + 170);
      *(_BYTE *)(v46 + 171) = *(_BYTE *)(v47 + 171);
      *(_BYTE *)(v46 + 172) = *(_BYTE *)(v47 + 172);
      *(_BYTE *)(v46 + 173) = *(_BYTE *)(v47 + 173);
      *(_BYTE *)(v46 + 174) = *(_BYTE *)(v47 + 174);
      *(_BYTE *)(v46 + 176) = *(_BYTE *)(v47 + 176);
      *(_BYTE *)(v46 + 177) = *(_BYTE *)(v47 + 177);
      *(_QWORD *)(v46 + 184) = *(_QWORD *)(v47 + 184);
      *(_QWORD *)(v46 + 192) = *(_QWORD *)(v47 + 192);
      *(_DWORD *)(v46 + 200) = *(_DWORD *)(v47 + 200);
      *(_DWORD *)(v46 + 204) = *(_DWORD *)(v47 + 204);
      *(_QWORD *)(v46 + 208) = *(_QWORD *)(v47 + 208);
      *(_QWORD *)(v46 + 216) = *(_QWORD *)(v47 + 216);
      *(_QWORD *)(v46 + 224) = *(_QWORD *)(v47 + 224);
      *(_QWORD *)(v46 + 232) = *(_QWORD *)(v47 + 232);
      *(_QWORD *)(v46 + 240) = *(_QWORD *)(v47 + 240);
      *(_QWORD *)(v46 + 248) = *(_QWORD *)(v47 + 248);
      *(_BYTE *)(v46 + 256) = *(_BYTE *)(v47 + 256);
      *(_QWORD *)(v46 + 264) = *(_QWORD *)(v47 + 264);
      *(_QWORD *)(v46 + 272) = *(_QWORD *)(v47 + 272);
      v55 = *(_QWORD *)(v47 + 280);
      *(_BYTE *)(v46 + 288) = *(_BYTE *)(v47 + 288);
      *(_QWORD *)(v46 + 280) = v55;
      *(_QWORD *)(v46 + 296) = *(_QWORD *)(v47 + 296);
      *(_QWORD *)(v46 + 304) = *(_QWORD *)(v47 + 304);
      *(_QWORD *)(v46 + 312) = *(_QWORD *)(v47 + 312);
      *(_QWORD *)(v46 + 320) = *(_QWORD *)(v47 + 320);
      *(_QWORD *)(v46 + 328) = *(_QWORD *)(v47 + 328);
      *(_BYTE *)(v46 + 336) = *(_BYTE *)(v47 + 336);
      *(_QWORD *)(v46 + 344) = *(_QWORD *)(v47 + 344);
      *(_QWORD *)(v46 + 352) = *(_QWORD *)(v47 + 352);
      *(_QWORD *)(v46 + 360) = *(_QWORD *)(v47 + 360);
      *(_QWORD *)(v46 + 368) = *(_QWORD *)(v47 + 368);
      *(_QWORD *)(v46 + 376) = *(_QWORD *)(v47 + 376);
      *(_QWORD *)(v46 + 384) = *(_QWORD *)(v47 + 384);
      *(_BYTE *)(v46 + 392) = *(_BYTE *)(v47 + 392);
      *(_BYTE *)(v46 + 393) = *(_BYTE *)(v47 + 393);
      *(_QWORD *)(v46 + 400) = *(_QWORD *)(v47 + 400);
      *(_QWORD *)(v46 + 408) = *(_QWORD *)(v47 + 408);
      *(_QWORD *)(v46 + 416) = *(_QWORD *)(v47 + 416);
      *(_QWORD *)(v46 + 424) = *(_QWORD *)(v47 + 424);
      *(_QWORD *)(v46 + 432) = *(_QWORD *)(v47 + 432);
      *(_QWORD *)(v46 + 440) = *(_QWORD *)(v47 + 440);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_29;
    }
LABEL_28:
    memcpy((void *)v46, (const void *)v47, 0x1C0uLL);
    goto LABEL_29;
  }
  if (!v49)
  {
    sub_1D5978DF0(v46);
    goto LABEL_28;
  }
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *(_QWORD *)(v46 + 8) = *(_QWORD *)(v47 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v46 + 16) = *(_BYTE *)(v47 + 16);
  *(_QWORD *)(v46 + 24) = *(_QWORD *)(v47 + 24);
  *(_QWORD *)(v46 + 32) = *(_QWORD *)(v47 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v46 + 40) = *(_BYTE *)(v47 + 40);
  *(_DWORD *)(v46 + 44) = *(_DWORD *)(v47 + 44);
  *(_BYTE *)(v46 + 48) = *(_BYTE *)(v47 + 48);
  *(_QWORD *)(v46 + 56) = *(_QWORD *)(v47 + 56);
  *(_QWORD *)(v46 + 64) = *(_QWORD *)(v47 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v46 + 72) = *(_BYTE *)(v47 + 72);
  *(_QWORD *)(v46 + 80) = *(_QWORD *)(v47 + 80);
  v50 = *(_QWORD *)(v47 + 88);
  *(_BYTE *)(v46 + 96) = *(_BYTE *)(v47 + 96);
  *(_QWORD *)(v46 + 88) = v50;
  *(_BYTE *)(v46 + 97) = *(_BYTE *)(v47 + 97);
  *(_QWORD *)(v46 + 104) = *(_QWORD *)(v47 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v51 = *(_QWORD *)(v47 + 112);
  *(_BYTE *)(v46 + 120) = *(_BYTE *)(v47 + 120);
  *(_QWORD *)(v46 + 112) = v51;
  *(_QWORD *)(v46 + 128) = *(_QWORD *)(v47 + 128);
  *(_QWORD *)(v46 + 136) = *(_QWORD *)(v47 + 136);
  *(_QWORD *)(v46 + 144) = *(_QWORD *)(v47 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v46 + 152) = *(_BYTE *)(v47 + 152);
  *(_QWORD *)(v46 + 160) = *(_QWORD *)(v47 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v46 + 168) = *(_BYTE *)(v47 + 168);
  *(_BYTE *)(v46 + 169) = *(_BYTE *)(v47 + 169);
  *(_BYTE *)(v46 + 170) = *(_BYTE *)(v47 + 170);
  *(_BYTE *)(v46 + 171) = *(_BYTE *)(v47 + 171);
  *(_BYTE *)(v46 + 172) = *(_BYTE *)(v47 + 172);
  *(_BYTE *)(v46 + 173) = *(_BYTE *)(v47 + 173);
  *(_BYTE *)(v46 + 174) = *(_BYTE *)(v47 + 174);
  *(_BYTE *)(v46 + 176) = *(_BYTE *)(v47 + 176);
  *(_BYTE *)(v46 + 177) = *(_BYTE *)(v47 + 177);
  *(_QWORD *)(v46 + 184) = *(_QWORD *)(v47 + 184);
  *(_QWORD *)(v46 + 192) = *(_QWORD *)(v47 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v46 + 200) = *(_DWORD *)(v47 + 200);
  *(_DWORD *)(v46 + 204) = *(_DWORD *)(v47 + 204);
  *(_QWORD *)(v46 + 208) = *(_QWORD *)(v47 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v46 + 216) = *(_QWORD *)(v47 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v46 + 224) = *(_QWORD *)(v47 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v46 + 232) = *(_QWORD *)(v47 + 232);
  *(_QWORD *)(v46 + 240) = *(_QWORD *)(v47 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v46 + 248) = *(_QWORD *)(v47 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v46 + 256) = *(_BYTE *)(v47 + 256);
  *(_QWORD *)(v46 + 264) = *(_QWORD *)(v47 + 264);
  *(_QWORD *)(v46 + 272) = *(_QWORD *)(v47 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v52 = *(_QWORD *)(v47 + 280);
  *(_BYTE *)(v46 + 288) = *(_BYTE *)(v47 + 288);
  *(_QWORD *)(v46 + 280) = v52;
  *(_QWORD *)(v46 + 296) = *(_QWORD *)(v47 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v46 + 304) = *(_QWORD *)(v47 + 304);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v46 + 312) = *(_QWORD *)(v47 + 312);
  *(_QWORD *)(v46 + 320) = *(_QWORD *)(v47 + 320);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v46 + 328) = *(_QWORD *)(v47 + 328);
  *(_BYTE *)(v46 + 336) = *(_BYTE *)(v47 + 336);
  *(_QWORD *)(v46 + 344) = *(_QWORD *)(v47 + 344);
  *(_QWORD *)(v46 + 352) = *(_QWORD *)(v47 + 352);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v46 + 360) = *(_QWORD *)(v47 + 360);
  *(_QWORD *)(v46 + 368) = *(_QWORD *)(v47 + 368);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v46 + 376) = *(_QWORD *)(v47 + 376);
  *(_QWORD *)(v46 + 384) = *(_QWORD *)(v47 + 384);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v46 + 392) = *(_BYTE *)(v47 + 392);
  *(_BYTE *)(v46 + 393) = *(_BYTE *)(v47 + 393);
  *(_QWORD *)(v46 + 400) = *(_QWORD *)(v47 + 400);
  *(_QWORD *)(v46 + 408) = *(_QWORD *)(v47 + 408);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v46 + 416) = *(_QWORD *)(v47 + 416);
  *(_QWORD *)(v46 + 424) = *(_QWORD *)(v47 + 424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v46 + 432) = *(_QWORD *)(v47 + 432);
  *(_QWORD *)(v46 + 440) = *(_QWORD *)(v47 + 440);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_29:
  *(_DWORD *)(a1 + a3[12]) = *(_DWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D5978DF0(uint64_t a1)
{
  destroy for WidgetEngagementData();
  return a1;
}

uint64_t initializeWithTake for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  _OWORD *v20;
  __int128 *v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_OWORD *)(a1 + v15);
  v18 = (_OWORD *)(a2 + v15);
  v19 = v18[2];
  v17[1] = v18[1];
  v17[2] = v19;
  *v17 = *v18;
  v20 = (_OWORD *)(a1 + v16);
  v21 = (__int128 *)(a2 + v16);
  v22 = *v21;
  v23 = v21[2];
  v20[1] = v21[1];
  v20[2] = v23;
  *v20 = v22;
  v24 = a3[9];
  v25 = a3[10];
  v26 = (_OWORD *)(a1 + v24);
  v27 = (_OWORD *)(a2 + v24);
  *(_OWORD *)((char *)v26 + 58) = *(_OWORD *)((char *)v27 + 58);
  v28 = v27[3];
  v26[2] = v27[2];
  v26[3] = v28;
  v29 = v27[1];
  *v26 = *v27;
  v26[1] = v29;
  v30 = (_QWORD *)(a1 + v25);
  v31 = (_QWORD *)(a2 + v25);
  *(_QWORD *)((char *)v30 + 7) = *(_QWORD *)((char *)v31 + 7);
  *v30 = *v31;
  memcpy((void *)(a1 + a3[11]), (const void *)(a2 + a3[11]), 0x1C0uLL);
  v32 = a3[13];
  *(_DWORD *)(a1 + a3[12]) = *(_DWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v32) = *(_QWORD *)(a2 + v32);
  return a1;
}

uint64_t assignWithTake for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  v11 = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *(_QWORD *)(a2 + v12);
  v13[1] = *(_QWORD *)(a2 + v12 + 8);
  swift_bridgeObjectRelease();
  v13[2] = v14[2];
  swift_bridgeObjectRelease();
  v13[3] = v14[3];
  swift_bridgeObjectRelease();
  v13[4] = v14[4];
  swift_bridgeObjectRelease();
  v13[5] = v14[5];
  swift_bridgeObjectRelease();
  v13[6] = v14[6];
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  if (*(_QWORD *)(a1 + v15 + 8))
  {
    v18 = v17[1];
    if (v18)
    {
      *v16 = *v17;
      v16[1] = v18;
      swift_bridgeObjectRelease();
      v19 = v17[3];
      v16[2] = v17[2];
      v16[3] = v19;
      swift_bridgeObjectRelease();
      v20 = v17[5];
      v16[4] = v17[4];
      v16[5] = v20;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D59315F8((uint64_t)v16);
  }
  v21 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v21;
  *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
LABEL_6:
  v22 = a3[8];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  if (*(_QWORD *)(a1 + v22 + 8))
  {
    v25 = v24[1];
    if (v25)
    {
      *v23 = *v24;
      v23[1] = v25;
      swift_bridgeObjectRelease();
      v26 = v24[3];
      v23[2] = v24[2];
      v23[3] = v26;
      swift_bridgeObjectRelease();
      v27 = v24[5];
      v23[4] = v24[4];
      v23[5] = v27;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D5829E98((uint64_t)v23);
  }
  v28 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v28;
  *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
LABEL_11:
  v29 = a3[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  if (*(_QWORD *)(a1 + v29 + 8) == 1)
  {
LABEL_14:
    v33 = *(_OWORD *)(v31 + 48);
    *(_OWORD *)(v30 + 32) = *(_OWORD *)(v31 + 32);
    *(_OWORD *)(v30 + 48) = v33;
    *(_OWORD *)(v30 + 58) = *(_OWORD *)(v31 + 58);
    v34 = *(_OWORD *)(v31 + 16);
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *(_OWORD *)(v30 + 16) = v34;
    goto LABEL_16;
  }
  v32 = *(_QWORD *)(v31 + 8);
  if (v32 == 1)
  {
    sub_1D58B3718(v30);
    goto LABEL_14;
  }
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_QWORD *)(v30 + 8) = v32;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v30 + 16) = *(_BYTE *)(v31 + 16);
  v35 = *(_QWORD *)(v31 + 32);
  *(_QWORD *)(v30 + 24) = *(_QWORD *)(v31 + 24);
  *(_QWORD *)(v30 + 32) = v35;
  swift_bridgeObjectRelease();
  v36 = *(_QWORD *)(v31 + 48);
  *(_QWORD *)(v30 + 40) = *(_QWORD *)(v31 + 40);
  *(_QWORD *)(v30 + 48) = v36;
  swift_bridgeObjectRelease();
  v37 = *(_QWORD *)(v31 + 64);
  *(_QWORD *)(v30 + 56) = *(_QWORD *)(v31 + 56);
  *(_QWORD *)(v30 + 64) = v37;
  swift_bridgeObjectRelease();
  *(_WORD *)(v30 + 72) = *(_WORD *)(v31 + 72);
LABEL_16:
  v38 = a3[10];
  v39 = a1 + v38;
  v40 = a2 + v38;
  *(_QWORD *)(a1 + v38) = *(_QWORD *)(a2 + v38);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v39 + 8) = *(_BYTE *)(v40 + 8);
  *(_BYTE *)(v39 + 9) = *(_BYTE *)(v40 + 9);
  *(_BYTE *)(v39 + 10) = *(_BYTE *)(v40 + 10);
  *(_BYTE *)(v39 + 11) = *(_BYTE *)(v40 + 11);
  *(_BYTE *)(v39 + 12) = *(_BYTE *)(v40 + 12);
  *(_WORD *)(v39 + 13) = *(_WORD *)(v40 + 13);
  v41 = a3[11];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (_QWORD *)(a2 + v41);
  if (!*(_QWORD *)(a1 + v41 + 8))
  {
LABEL_20:
    memcpy(v42, v43, 0x1C0uLL);
    goto LABEL_21;
  }
  v44 = v43[1];
  if (!v44)
  {
    sub_1D5978DF0((uint64_t)v42);
    goto LABEL_20;
  }
  *v42 = *v43;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  *((_BYTE *)v42 + 16) = *((_BYTE *)v43 + 16);
  v45 = v43[4];
  v42[3] = v43[3];
  v42[4] = v45;
  swift_bridgeObjectRelease();
  *((_BYTE *)v42 + 40) = *((_BYTE *)v43 + 40);
  *((_DWORD *)v42 + 11) = *((_DWORD *)v43 + 11);
  *((_BYTE *)v42 + 48) = *((_BYTE *)v43 + 48);
  v46 = v43[8];
  v42[7] = v43[7];
  v42[8] = v46;
  swift_bridgeObjectRelease();
  *((_BYTE *)v42 + 72) = *((_BYTE *)v43 + 72);
  v47 = v43[11];
  v42[10] = v43[10];
  v42[11] = v47;
  *((_BYTE *)v42 + 96) = *((_BYTE *)v43 + 96);
  *((_BYTE *)v42 + 97) = *((_BYTE *)v43 + 97);
  v42[13] = v43[13];
  swift_bridgeObjectRelease();
  v42[14] = v43[14];
  *((_BYTE *)v42 + 120) = *((_BYTE *)v43 + 120);
  *((_OWORD *)v42 + 8) = *((_OWORD *)v43 + 8);
  v42[18] = v43[18];
  swift_bridgeObjectRelease();
  *((_BYTE *)v42 + 152) = *((_BYTE *)v43 + 152);
  v42[20] = v43[20];
  swift_bridgeObjectRelease();
  *((_BYTE *)v42 + 168) = *((_BYTE *)v43 + 168);
  *((_BYTE *)v42 + 169) = *((_BYTE *)v43 + 169);
  *((_BYTE *)v42 + 170) = *((_BYTE *)v43 + 170);
  *((_BYTE *)v42 + 171) = *((_BYTE *)v43 + 171);
  *((_BYTE *)v42 + 172) = *((_BYTE *)v43 + 172);
  *((_BYTE *)v42 + 173) = *((_BYTE *)v43 + 173);
  *((_BYTE *)v42 + 174) = *((_BYTE *)v43 + 174);
  *((_WORD *)v42 + 88) = *((_WORD *)v43 + 88);
  v48 = v43[24];
  v42[23] = v43[23];
  v42[24] = v48;
  swift_bridgeObjectRelease();
  v42[25] = v43[25];
  v42[26] = v43[26];
  swift_bridgeObjectRelease();
  v42[27] = v43[27];
  swift_bridgeObjectRelease();
  v42[28] = v43[28];
  swift_bridgeObjectRelease();
  v49 = v43[30];
  v42[29] = v43[29];
  v42[30] = v49;
  swift_bridgeObjectRelease();
  v42[31] = v43[31];
  swift_bridgeObjectRelease();
  *((_BYTE *)v42 + 256) = *((_BYTE *)v43 + 256);
  v50 = v43[34];
  v42[33] = v43[33];
  v42[34] = v50;
  swift_bridgeObjectRelease();
  v42[35] = v43[35];
  *((_BYTE *)v42 + 288) = *((_BYTE *)v43 + 288);
  v42[37] = v43[37];
  swift_bridgeObjectRelease();
  v42[38] = v43[38];
  swift_bridgeObjectRelease();
  v51 = v43[40];
  v42[39] = v43[39];
  v42[40] = v51;
  swift_bridgeObjectRelease();
  v42[41] = v43[41];
  *((_BYTE *)v42 + 336) = *((_BYTE *)v43 + 336);
  v52 = v43[44];
  v42[43] = v43[43];
  v42[44] = v52;
  swift_bridgeObjectRelease();
  v53 = v43[46];
  v42[45] = v43[45];
  v42[46] = v53;
  swift_bridgeObjectRelease();
  v54 = v43[48];
  v42[47] = v43[47];
  v42[48] = v54;
  swift_bridgeObjectRelease();
  *((_WORD *)v42 + 196) = *((_WORD *)v43 + 196);
  v55 = v43[51];
  v42[50] = v43[50];
  v42[51] = v55;
  swift_bridgeObjectRelease();
  v56 = v43[53];
  v42[52] = v43[52];
  v42[53] = v56;
  swift_bridgeObjectRelease();
  v57 = v43[55];
  v42[54] = v43[54];
  v42[55] = v57;
  swift_bridgeObjectRelease();
LABEL_21:
  v58 = a3[13];
  *(_DWORD *)(a1 + a3[12]) = *(_DWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v58) = *(_QWORD *)(a2 + v58);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D5979490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1D5979510(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for AppSessionStartEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1D59795D8 + 4 * byte_1D5AD093F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1D597960C + 4 * byte_1D5AD093A[v4]))();
}

uint64_t sub_1D597960C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5979614(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D597961CLL);
  return result;
}

uint64_t sub_1D5979628(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5979630);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1D5979634(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D597963C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppSessionStartEvent.Model.CodingKeys()
{
  return &type metadata for AppSessionStartEvent.Model.CodingKeys;
}

unint64_t sub_1D597965C()
{
  unint64_t result;

  result = qword_1EFF4E420;
  if (!qword_1EFF4E420)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD0BD4, &type metadata for AppSessionStartEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E420);
  }
  return result;
}

uint64_t sub_1D59796A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AEE9B0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C61727265666572 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E676961706D6163 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AEE9D0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5AEE9F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AF0CB0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AEEA10 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5AEEA50)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

float ScrollEndData.scrollYPosition.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void ScrollEndData.scrollYPosition.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t (*ScrollEndData.scrollYPosition.modify())()
{
  return nullsub_1;
}

float ScrollEndData.scrollVelocity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 4);
}

void ScrollEndData.scrollVelocity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 4) = a1;
}

uint64_t (*ScrollEndData.scrollVelocity.modify())()
{
  return nullsub_1;
}

NewsAnalytics::ScrollEndData __swiftcall ScrollEndData.init(scrollYPosition:scrollVelocity:)(Swift::Float scrollYPosition, Swift::Float scrollVelocity)
{
  Swift::Float *v2;
  NewsAnalytics::ScrollEndData result;

  *v2 = scrollYPosition;
  v2[1] = scrollVelocity;
  result.scrollVelocity = scrollVelocity;
  result.scrollYPosition = scrollYPosition;
  return result;
}

uint64_t sub_1D5979AE4()
{
  _BYTE *v0;

  if (*v0)
    return 0x65566C6C6F726373;
  else
    return 0x50596C6C6F726373;
}

uint64_t sub_1D5979B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D597A134(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5979B5C()
{
  sub_1D5979CD0();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5979B84()
{
  sub_1D5979CD0();
  return sub_1D5AAEEE0();
}

uint64_t ScrollEndData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1D5979E6C(0, &qword_1ED9C6EF8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5979CD0();
  sub_1D5AAEEC8();
  v9[15] = 0;
  sub_1D5AAED60();
  if (!v1)
  {
    v9[14] = 1;
    sub_1D5AAED60();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5979CD0()
{
  unint64_t result;

  result = qword_1ED9C68E8;
  if (!qword_1ED9C68E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD0DC4, &type metadata for ScrollEndData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C68E8);
  }
  return result;
}

uint64_t ScrollEndData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  int v13;
  int v14;
  uint64_t v15;
  char v16;
  char v17;

  sub_1D5979E6C(0, &qword_1ED9D0CD8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5979CD0();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v17 = 0;
    sub_1D5AAECC4();
    v11 = v10;
    v16 = 1;
    sub_1D5AAECC4();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11;
    a2[1] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5979E6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5979CD0();
    v7 = a3(a1, &type metadata for ScrollEndData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5979ECC()
{
  unint64_t result;

  result = qword_1ED9C7BD0;
  if (!qword_1ED9C7BD0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ScrollEndData, &type metadata for ScrollEndData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7BD0);
  }
  return result;
}

unint64_t sub_1D5979F14()
{
  unint64_t result;

  result = qword_1ED9C7BC8;
  if (!qword_1ED9C7BC8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ScrollEndData, &type metadata for ScrollEndData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7BC8);
  }
  return result;
}

uint64_t sub_1D5979F58@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return ScrollEndData.init(from:)(a1, a2);
}

uint64_t sub_1D5979F6C(_QWORD *a1)
{
  return ScrollEndData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for ScrollEndData()
{
  return &type metadata for ScrollEndData;
}

uint64_t storeEnumTagSinglePayload for ScrollEndData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5979FDC + 4 * byte_1D5AD0C51[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D597A010 + 4 * byte_1D5AD0C4C[v4]))();
}

uint64_t sub_1D597A010(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D597A018(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D597A020);
  return result;
}

uint64_t sub_1D597A02C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D597A034);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D597A038(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D597A040(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScrollEndData.CodingKeys()
{
  return &type metadata for ScrollEndData.CodingKeys;
}

unint64_t sub_1D597A060()
{
  unint64_t result;

  result = qword_1EFF4E428;
  if (!qword_1EFF4E428)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD0D9C, &type metadata for ScrollEndData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E428);
  }
  return result;
}

unint64_t sub_1D597A0A8()
{
  unint64_t result;

  result = qword_1ED9C68F8;
  if (!qword_1ED9C68F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD0D0C, &type metadata for ScrollEndData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C68F8);
  }
  return result;
}

unint64_t sub_1D597A0F0()
{
  unint64_t result;

  result = qword_1ED9C68F0;
  if (!qword_1ED9C68F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD0D34, &type metadata for ScrollEndData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C68F0);
  }
  return result;
}

uint64_t sub_1D597A134(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x50596C6C6F726373 && a2 == 0xEF6E6F697469736FLL;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65566C6C6F726373 && a2 == 0xEE00797469636F6CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D597A26C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4E430, MEMORY[0x1E0CF8078]);
}

uint64_t static WidgetHeadlineExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF472B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4E430, a1);
}

uint64_t sub_1D597A2AC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4E448, MEMORY[0x1E0CF8380]);
}

uint64_t static WidgetHeadlineExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF472C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4E448, a1);
}

uint64_t WidgetHeadlineExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t WidgetHeadlineExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*WidgetHeadlineExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t WidgetHeadlineExposureEvent.widgetData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent(0) + 20);
  sub_1D579E208(0, &qword_1EFF4E460, (void (*)(void))sub_1D57FBFE4, (void (*)(void))sub_1D57FC02C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for WidgetHeadlineExposureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4E4E0);
}

uint64_t WidgetHeadlineExposureEvent.widgetData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent(0) + 20);
  sub_1D579E208(0, &qword_1EFF4E460, (void (*)(void))sub_1D57FBFE4, (void (*)(void))sub_1D57FC02C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetHeadlineExposureEvent.widgetData.modify())(_QWORD)
{
  type metadata accessor for WidgetHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t WidgetHeadlineExposureEvent.alternateHeadlineData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF4E468, (void (*)(void))sub_1D5904D00, (void (*)(void))sub_1D5904334);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WidgetHeadlineExposureEvent.alternateHeadlineData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF4E468, (void (*)(void))sub_1D5904D00, (void (*)(void))sub_1D5904334);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetHeadlineExposureEvent.alternateHeadlineData.modify())(_QWORD)
{
  type metadata accessor for WidgetHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t WidgetHeadlineExposureEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WidgetHeadlineExposureEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetHeadlineExposureEvent.articleData.modify())(_QWORD)
{
  type metadata accessor for WidgetHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t WidgetHeadlineExposureEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WidgetHeadlineExposureEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetHeadlineExposureEvent.feedPositionData.modify())(_QWORD)
{
  type metadata accessor for WidgetHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t WidgetHeadlineExposureEvent.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WidgetHeadlineExposureEvent.inGroupPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetHeadlineExposureEvent.inGroupPositionData.modify())(_QWORD)
{
  type metadata accessor for WidgetHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t WidgetHeadlineExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WidgetHeadlineExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetHeadlineExposureEvent.groupData.modify())(_QWORD)
{
  type metadata accessor for WidgetHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t WidgetHeadlineExposureEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WidgetHeadlineExposureEvent.tagData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetHeadlineExposureEvent.tagData.modify())(_QWORD)
{
  type metadata accessor for WidgetHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t WidgetHeadlineExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WidgetHeadlineExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetHeadlineExposureEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for WidgetHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t WidgetHeadlineExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D597B380(type metadata accessor for WidgetHeadlineExposureEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t WidgetHeadlineExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent(0) + 52);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetHeadlineExposureEvent.timedData.modify())(_QWORD)
{
  type metadata accessor for WidgetHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t WidgetHeadlineExposureEvent.typeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent(0) + 56);
  sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WidgetHeadlineExposureEvent.typeData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent(0) + 56);
  sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetHeadlineExposureEvent.typeData.modify())(_QWORD)
{
  type metadata accessor for WidgetHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t WidgetHeadlineExposureEvent.locationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent(0) + 60);
  sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WidgetHeadlineExposureEvent.locationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent(0) + 60);
  sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetHeadlineExposureEvent.locationData.modify())(_QWORD)
{
  type metadata accessor for WidgetHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t WidgetHeadlineExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for WidgetHeadlineExposureEvent(0);
  v5 = a1 + v4[5];
  v6 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1EFF4E460, (void (*)(void))sub_1D57FBFE4, (void (*)(void))sub_1D57FC02C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = a1 + v4[6];
  sub_1D579E208(0, &qword_1EFF4E468, (void (*)(void))sub_1D5904D00, (void (*)(void))sub_1D5904334);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v2, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v2, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v2, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v2, v27);
}

uint64_t WidgetHeadlineExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t WidgetHeadlineExposureEvent.Model.widgetData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent.Model(0) + 20));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for WidgetHeadlineExposureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4E598);
}

uint64_t WidgetHeadlineExposureEvent.Model.alternateHeadlineData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;

  result = type metadata accessor for WidgetHeadlineExposureEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 24));
  v5 = *v4;
  LODWORD(v4) = *((_DWORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_DWORD *)(a1 + 4) = (_DWORD)v4;
  return result;
}

uint64_t WidgetHeadlineExposureEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent.Model(0) + 28);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t WidgetHeadlineExposureEvent.Model.feedPositionData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WidgetHeadlineExposureEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t WidgetHeadlineExposureEvent.Model.inGroupPositionData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WidgetHeadlineExposureEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t WidgetHeadlineExposureEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v3 = v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent.Model(0) + 40);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22 = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  v23 = *(_QWORD *)(v3 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(v3 + 128);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D5802B14((uint64_t)v16);
}

uint64_t WidgetHeadlineExposureEvent.Model.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent.Model(0) + 44));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t WidgetHeadlineExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for WidgetHeadlineExposureEvent.Model(0) + 48));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t WidgetHeadlineExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D597B380(type metadata accessor for WidgetHeadlineExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t sub_1D597B380@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 + *(int *)(a1(0) + 52);
  v7 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t WidgetHeadlineExposureEvent.Model.typeData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WidgetHeadlineExposureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 56));
  return result;
}

uint64_t WidgetHeadlineExposureEvent.Model.locationData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WidgetHeadlineExposureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 60));
  return result;
}

uint64_t WidgetHeadlineExposureEvent.Model.init(eventData:widgetData:alternateHeadlineData:articleData:feedPositionData:inGroupPositionData:groupData:tagData:viewData:timedData:typeData:locationData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, __int128 *a4@<X3>, int *a5@<X4>, int *a6@<X5>, __int128 *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, uint64_t a11, char *a12, char *a13)
{
  uint64_t v15;
  uint64_t v16;
  char v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  __int16 v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _BYTE v46[23];
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;

  v15 = *a2;
  v16 = a2[1];
  v17 = *a3;
  v18 = *((_DWORD *)a3 + 1);
  v45 = a4[6];
  *(_OWORD *)v46 = a4[7];
  *(_QWORD *)&v46[15] = *(_QWORD *)((char *)a4 + 127);
  v41 = a4[2];
  v42 = a4[3];
  v43 = a4[4];
  v44 = a4[5];
  v39 = *a4;
  v40 = a4[1];
  v19 = *a5;
  v20 = *a6;
  v53 = a7[6];
  v54 = a7[7];
  v55 = *((_QWORD *)a7 + 16);
  v49 = a7[2];
  v50 = a7[3];
  v51 = a7[4];
  v52 = a7[5];
  v47 = *a7;
  v48 = a7[1];
  v21 = *a8;
  v22 = a8[1];
  v36 = *a10;
  v35 = a10[1];
  v34 = *((_WORD *)a10 + 8);
  v37 = *a12;
  v38 = *a13;
  v23 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a9, a1, v23);
  v24 = (int *)type metadata accessor for WidgetHeadlineExposureEvent.Model(0);
  v25 = (_QWORD *)(a9 + v24[5]);
  *v25 = v15;
  v25[1] = v16;
  v26 = a9 + v24[6];
  *(_BYTE *)v26 = v17;
  *(_DWORD *)(v26 + 4) = v18;
  v27 = a9 + v24[7];
  *(_OWORD *)(v27 + 32) = v41;
  *(_OWORD *)(v27 + 48) = v42;
  *(_OWORD *)v27 = v39;
  *(_OWORD *)(v27 + 16) = v40;
  *(_QWORD *)(v27 + 127) = *(_QWORD *)&v46[15];
  *(_OWORD *)(v27 + 96) = v45;
  *(_OWORD *)(v27 + 112) = *(_OWORD *)v46;
  *(_OWORD *)(v27 + 64) = v43;
  *(_OWORD *)(v27 + 80) = v44;
  *(_DWORD *)(a9 + v24[8]) = v19;
  *(_DWORD *)(a9 + v24[9]) = v20;
  v28 = a9 + v24[10];
  *(_OWORD *)(v28 + 96) = v53;
  *(_OWORD *)(v28 + 112) = v54;
  *(_QWORD *)(v28 + 128) = v55;
  *(_OWORD *)(v28 + 32) = v49;
  *(_OWORD *)(v28 + 48) = v50;
  *(_OWORD *)(v28 + 64) = v51;
  *(_OWORD *)(v28 + 80) = v52;
  *(_OWORD *)v28 = v47;
  *(_OWORD *)(v28 + 16) = v48;
  v29 = (_QWORD *)(a9 + v24[11]);
  *v29 = v21;
  v29[1] = v22;
  v30 = a9 + v24[12];
  *(_QWORD *)v30 = v36;
  *(_QWORD *)(v30 + 8) = v35;
  *(_WORD *)(v30 + 16) = v34;
  v31 = a9 + v24[13];
  v32 = sub_1D5AADFB0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v31, a11, v32);
  *(_BYTE *)(a9 + v24[14]) = v37;
  *(_BYTE *)(a9 + v24[15]) = v38;
  return result;
}

uint64_t sub_1D597B63C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D597B674 + 4 * byte_1D5AD0E20[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D597B674()
{
  return 0x6144746567646977;
}

unint64_t sub_1D597B690()
{
  return 0xD000000000000015;
}

uint64_t sub_1D597B708()
{
  return 0x74614470756F7267;
}

uint64_t sub_1D597B71C()
{
  return 0x61746144676174;
}

uint64_t sub_1D597B734()
{
  return 0x6174614477656976;
}

uint64_t sub_1D597B770()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1D597B790()
{
  unsigned __int8 *v0;

  return sub_1D597B63C(*v0);
}

uint64_t sub_1D597B798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D597FA38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D597B7BC()
{
  sub_1D597BCAC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D597B7E4()
{
  sub_1D597BCAC();
  return sub_1D5AAEEE0();
}

uint64_t WidgetHeadlineExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char v12;
  __int128 *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[24];
  char v40;
  int v41;
  char v42;
  char v43;
  int v44;

  v3 = v1;
  sub_1D597C550(0, &qword_1EFF4E470, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v30 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D597BCAC();
  sub_1D5AAEEC8();
  LOBYTE(v32) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for WidgetHeadlineExposureEvent.Model(0);
    v32 = *(_OWORD *)(v3 + v10[5]);
    v43 = 1;
    sub_1D57FC02C();
    sub_1D5AAED18();
    v11 = v3 + v10[6];
    v12 = *(_BYTE *)v11;
    LODWORD(v11) = *(_DWORD *)(v11 + 4);
    v43 = v12;
    v44 = v11;
    v42 = 2;
    sub_1D5904334();
    sub_1D5AAED6C();
    v13 = (__int128 *)(v3 + v10[7]);
    v14 = v13[7];
    v38 = v13[6];
    *(_OWORD *)v39 = v14;
    *(_QWORD *)&v39[15] = *(_QWORD *)((char *)v13 + 127);
    v15 = v13[3];
    v34 = v13[2];
    v35 = v15;
    v16 = v13[5];
    v36 = v13[4];
    v37 = v16;
    v17 = v13[1];
    v32 = *v13;
    v33 = v17;
    LOBYTE(v41) = 3;
    sub_1D57CB940();
    sub_1D5AAED6C();
    LODWORD(v32) = *(_DWORD *)(v3 + v10[8]);
    LOBYTE(v41) = 4;
    sub_1D57C9C4C();
    sub_1D5AAED6C();
    v41 = *(_DWORD *)(v3 + v10[9]);
    v40 = 5;
    sub_1D57C8B9C();
    sub_1D5AAED6C();
    v18 = (__int128 *)(v3 + v10[10]);
    v19 = v18[7];
    v38 = v18[6];
    *(_OWORD *)v39 = v19;
    *(_QWORD *)&v39[16] = *((_QWORD *)v18 + 16);
    v20 = v18[3];
    v34 = v18[2];
    v35 = v20;
    v21 = v18[5];
    v36 = v18[4];
    v37 = v21;
    v22 = v18[1];
    v32 = *v18;
    v33 = v22;
    v31 = 6;
    sub_1D57C5FEC();
    sub_1D5AAED6C();
    v23 = (uint64_t *)(v3 + v10[11]);
    v25 = *v23;
    v24 = v23[1];
    *(_QWORD *)&v32 = v25;
    *((_QWORD *)&v32 + 1) = v24;
    v31 = 7;
    sub_1D57C6738();
    sub_1D5AAED6C();
    v26 = (uint64_t *)(v3 + v10[12]);
    v27 = *v26;
    v28 = v26[1];
    LOWORD(v26) = *((_WORD *)v26 + 8);
    *(_QWORD *)&v32 = v27;
    *((_QWORD *)&v32 + 1) = v28;
    LOWORD(v33) = (_WORD)v26;
    v31 = 8;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    LOBYTE(v32) = 9;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    LOBYTE(v32) = *(_BYTE *)(v3 + v10[14]);
    v31 = 10;
    sub_1D581C4AC();
    sub_1D5AAED6C();
    LOBYTE(v32) = *(_BYTE *)(v3 + v10[15]);
    v31 = 11;
    sub_1D581C62C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D597BCAC()
{
  unint64_t result;

  result = qword_1EFF4E478;
  if (!qword_1EFF4E478)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD112C, &type metadata for WidgetHeadlineExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E478);
  }
  return result;
}

uint64_t WidgetHeadlineExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  int v18;
  char *v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  __int16 v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  __int16 v49;
  char v50;
  char v51;
  char v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _BYTE v60[23];
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  int *v70;

  v38 = a2;
  v41 = sub_1D5AADFB0();
  v39 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D5AADF98();
  v43 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D597C550(0, &qword_1EFF4E480, MEMORY[0x1E0DED048]);
  v42 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v37 - v10;
  v70 = (int *)type metadata accessor for WidgetHeadlineExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v70);
  v46 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v44 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1D597BCAC();
  v40 = v11;
  v14 = v45;
  sub_1D5AAEEB0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  v45 = v9;
  LOBYTE(v61) = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v15 = v5;
  v16 = v46;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v46, v7, v15);
  LOBYTE(v53) = 1;
  sub_1D57FBFE4();
  sub_1D5AAEC7C();
  v17 = v70;
  *(_OWORD *)&v16[v70[5]] = v61;
  LOBYTE(v53) = 2;
  sub_1D5904D00();
  sub_1D5AAECD0();
  v18 = DWORD1(v61);
  v19 = &v16[v17[6]];
  *v19 = v61;
  *((_DWORD *)v19 + 1) = v18;
  v52 = 3;
  sub_1D57CB8FC();
  sub_1D5AAECD0();
  v20 = &v16[v17[7]];
  v21 = *(_OWORD *)v60;
  *((_OWORD *)v20 + 6) = v59;
  *((_OWORD *)v20 + 7) = v21;
  *(_QWORD *)(v20 + 127) = *(_QWORD *)&v60[15];
  v22 = v56;
  *((_OWORD *)v20 + 2) = v55;
  *((_OWORD *)v20 + 3) = v22;
  v23 = v58;
  *((_OWORD *)v20 + 4) = v57;
  *((_OWORD *)v20 + 5) = v23;
  v24 = v54;
  *(_OWORD *)v20 = v53;
  *((_OWORD *)v20 + 1) = v24;
  LOBYTE(v47) = 4;
  sub_1D57C9C08();
  sub_1D5AAECD0();
  *(_DWORD *)&v16[v17[8]] = v61;
  LOBYTE(v47) = 5;
  sub_1D57C8B58();
  sub_1D5AAECD0();
  *(_DWORD *)&v16[v17[9]] = v61;
  v51 = 6;
  sub_1D57C5FA8();
  sub_1D5AAECD0();
  v25 = &v16[v17[10]];
  v26 = v68;
  *((_OWORD *)v25 + 6) = v67;
  *((_OWORD *)v25 + 7) = v26;
  *((_QWORD *)v25 + 16) = v69;
  v27 = v64;
  *((_OWORD *)v25 + 2) = v63;
  *((_OWORD *)v25 + 3) = v27;
  v28 = v66;
  *((_OWORD *)v25 + 4) = v65;
  *((_OWORD *)v25 + 5) = v28;
  v29 = v62;
  *(_OWORD *)v25 = v61;
  *((_OWORD *)v25 + 1) = v29;
  v50 = 7;
  sub_1D57C66F4();
  sub_1D5AAECD0();
  v30 = v48;
  v31 = &v16[v17[11]];
  *(_QWORD *)v31 = v47;
  *((_QWORD *)v31 + 1) = v30;
  v50 = 8;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v32 = v48;
  v33 = v49;
  v34 = &v16[v17[12]];
  *(_QWORD *)v34 = v47;
  *((_QWORD *)v34 + 1) = v32;
  *((_WORD *)v34 + 8) = v33;
  LOBYTE(v47) = 9;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v46[v70[13]], v4, v41);
  v50 = 10;
  sub_1D581C468();
  sub_1D5AAECD0();
  v46[v70[14]] = v47;
  v50 = 11;
  sub_1D581C5E8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v40, v42);
  v35 = (uint64_t)v46;
  v46[v70[15]] = v47;
  sub_1D597C5AC(v35, v38);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  return sub_1D597C5F0(v35);
}

void sub_1D597C550(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D597BCAC();
    v7 = a3(a1, &type metadata for WidgetHeadlineExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D597C5AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetHeadlineExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D597C5F0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WidgetHeadlineExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D597C62C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WidgetHeadlineExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D597C640(_QWORD *a1)
{
  return WidgetHeadlineExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D597C654@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF472B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4E430, a1);
}

uint64_t sub_1D597C678@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF472C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4E448, a1);
}

uint64_t sub_1D597C69C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  v7 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1EFF4E460, (void (*)(void))sub_1D57FBFE4, (void (*)(void))sub_1D57FC02C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  v9 = a2 + a1[6];
  sub_1D579E208(0, &qword_1EFF4E468, (void (*)(void))sub_1D5904D00, (void (*)(void))sub_1D5904334);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v4, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v4, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v4, v26);
  v27 = a2 + a1[15];
  sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v4, v28);
}

uint64_t *initializeBufferWithCopyOfBuffer for WidgetHeadlineExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v52 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v52 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1EFF4E460, (void (*)(void))sub_1D57FBFE4, (void (*)(void))sub_1D57FC02C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1EFF4E468, (void (*)(void))sub_1D5904D00, (void (*)(void))sub_1D5904334);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
  }
  return a1;
}

uint64_t destroy for WidgetHeadlineExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1EFF4E460, (void (*)(void))sub_1D57FBFE4, (void (*)(void))sub_1D57FC02C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1EFF4E468, (void (*)(void))sub_1D5904D00, (void (*)(void))sub_1D5904334);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
}

uint64_t initializeWithCopy for WidgetHeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF4E460, (void (*)(void))sub_1D57FBFE4, (void (*)(void))sub_1D57FC02C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4E468, (void (*)(void))sub_1D5904D00, (void (*)(void))sub_1D5904334);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  return a1;
}

uint64_t assignWithCopy for WidgetHeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF4E460, (void (*)(void))sub_1D57FBFE4, (void (*)(void))sub_1D57FC02C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4E468, (void (*)(void))sub_1D5904D00, (void (*)(void))sub_1D5904334);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  return a1;
}

uint64_t initializeWithTake for WidgetHeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF4E460, (void (*)(void))sub_1D57FBFE4, (void (*)(void))sub_1D57FC02C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4E468, (void (*)(void))sub_1D5904D00, (void (*)(void))sub_1D5904334);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  return a1;
}

uint64_t assignWithTake for WidgetHeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF4E460, (void (*)(void))sub_1D57FBFE4, (void (*)(void))sub_1D57FC02C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4E468, (void (*)(void))sub_1D5904D00, (void (*)(void))sub_1D5904334);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetHeadlineExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D597DEA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1EFF4E460, (void (*)(void))sub_1D57FBFE4, (void (*)(void))sub_1D57FC02C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF4E468, (void (*)(void))sub_1D5904D00, (void (*)(void))sub_1D5904334);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D57A8C9C();
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
                        v8 = v23;
                        v12 = *(_QWORD *)(v23 - 8);
                        v13 = a3[15];
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for WidgetHeadlineExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D597E1D0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1EFF4E460, (void (*)(void))sub_1D57FBFE4, (void (*)(void))sub_1D57FC02C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF4E468, (void (*)(void))sub_1D5904D00, (void (*)(void))sub_1D5904334);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D57A8C9C();
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
                        v10 = v25;
                        v14 = *(_QWORD *)(v25 - 8);
                        v15 = a4[15];
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D597E4F4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1EFF4E460, (void (*)(void))sub_1D57FBFE4, (void (*)(void))sub_1D57FC02C);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1EFF4E468, (void (*)(void))sub_1D5904D00, (void (*)(void))sub_1D5904334);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                  if (v8 <= 0x3F)
                  {
                    sub_1D57A8C9C();
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1EFF48840, (void (*)(void))sub_1D581C468, (void (*)(void))sub_1D581C4AC);
                      if (v10 <= 0x3F)
                      {
                        sub_1D579E208(319, &qword_1EFF48848, (void (*)(void))sub_1D581C5E8, (void (*)(void))sub_1D581C62C);
                        if (v11 <= 0x3F)
                          swift_initStructMetadata();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for WidgetHeadlineExposureEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v39 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v39 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v47 = v11[1];
    *v10 = *v11;
    v10[1] = v47;
    *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
    v12 = a3[7];
    v13 = a3[8];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    v16 = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 3) = v16;
    v14[32] = v15[32];
    v14[56] = v15[56];
    v17 = *((_QWORD *)v15 + 6);
    *((_QWORD *)v14 + 5) = *((_QWORD *)v15 + 5);
    *((_QWORD *)v14 + 6) = v17;
    v14[57] = v15[57];
    v19 = *((_QWORD *)v15 + 8);
    v18 = *((_QWORD *)v15 + 9);
    v14[80] = v15[80];
    *((_QWORD *)v14 + 8) = v19;
    *((_QWORD *)v14 + 9) = v18;
    *(_OWORD *)(v14 + 88) = *(_OWORD *)(v15 + 88);
    *((_QWORD *)v14 + 13) = *((_QWORD *)v15 + 13);
    v14[112] = v15[112];
    *((_QWORD *)v14 + 15) = *((_QWORD *)v15 + 15);
    *((_DWORD *)v14 + 32) = *((_DWORD *)v15 + 32);
    v14[132] = v15[132];
    v14[133] = v15[133];
    v14[134] = v15[134];
    *(_DWORD *)((char *)a1 + v13) = *(_DWORD *)((char *)a2 + v13);
    v20 = a3[10];
    *(_DWORD *)((char *)a1 + a3[9]) = *(_DWORD *)((char *)a2 + a3[9]);
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    *v21 = *v22;
    v21[1] = v22[1];
    v23 = *((_QWORD *)v22 + 2);
    *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
    *((_QWORD *)v21 + 2) = v23;
    *((_QWORD *)v21 + 3) = *((_QWORD *)v22 + 3);
    v24 = *((_QWORD *)v22 + 5);
    *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
    *((_QWORD *)v21 + 5) = v24;
    v25 = *((_QWORD *)v22 + 7);
    *((_QWORD *)v21 + 6) = *((_QWORD *)v22 + 6);
    *((_QWORD *)v21 + 7) = v25;
    v45 = *((_QWORD *)v22 + 9);
    *((_QWORD *)v21 + 8) = *((_QWORD *)v22 + 8);
    *((_QWORD *)v21 + 9) = v45;
    v21[80] = v22[80];
    v26 = *((_QWORD *)v22 + 12);
    *((_QWORD *)v21 + 11) = *((_QWORD *)v22 + 11);
    *((_QWORD *)v21 + 12) = v26;
    v27 = *((_QWORD *)v22 + 13);
    v21[112] = v22[112];
    *((_QWORD *)v21 + 13) = v27;
    v46 = *((_QWORD *)v22 + 16);
    *((_QWORD *)v21 + 15) = *((_QWORD *)v22 + 15);
    *((_QWORD *)v21 + 16) = v46;
    v28 = a3[11];
    v29 = a3[12];
    v30 = (_QWORD *)((char *)a1 + v28);
    v31 = (_QWORD *)((char *)a2 + v28);
    v44 = v31[1];
    *v30 = *v31;
    v30[1] = v44;
    v32 = (char *)a1 + v29;
    v33 = (char *)a2 + v29;
    v34 = *(_QWORD *)v33;
    v35 = *((_QWORD *)v33 + 1);
    v32[16] = v33[16];
    v32[17] = v33[17];
    v36 = a3[13];
    v42 = (char *)a2 + v36;
    v43 = (char *)a1 + v36;
    *(_QWORD *)v32 = v34;
    *((_QWORD *)v32 + 1) = v35;
    v37 = sub_1D5AADFB0();
    v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v41(v43, v42, v37);
    v38 = a3[15];
    *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
    *((_BYTE *)a1 + v38) = *((_BYTE *)a2 + v38);
  }
  return a1;
}

uint64_t destroy for WidgetHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 52);
  v6 = sub_1D5AADFB0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for WidgetHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v45 = v10[1];
  *v9 = *v10;
  v9[1] = v45;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v11 = a3[7];
  v12 = a3[8];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v15;
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
  v16 = *(_QWORD *)(v14 + 48);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v13 + 48) = v16;
  *(_BYTE *)(v13 + 57) = *(_BYTE *)(v14 + 57);
  v18 = *(_QWORD *)(v14 + 64);
  v17 = *(_QWORD *)(v14 + 72);
  *(_BYTE *)(v13 + 80) = *(_BYTE *)(v14 + 80);
  *(_QWORD *)(v13 + 64) = v18;
  *(_QWORD *)(v13 + 72) = v17;
  *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
  *(_QWORD *)(v13 + 104) = *(_QWORD *)(v14 + 104);
  *(_BYTE *)(v13 + 112) = *(_BYTE *)(v14 + 112);
  *(_QWORD *)(v13 + 120) = *(_QWORD *)(v14 + 120);
  *(_DWORD *)(v13 + 128) = *(_DWORD *)(v14 + 128);
  *(_BYTE *)(v13 + 132) = *(_BYTE *)(v14 + 132);
  *(_BYTE *)(v13 + 133) = *(_BYTE *)(v14 + 133);
  *(_BYTE *)(v13 + 134) = *(_BYTE *)(v14 + 134);
  *(_DWORD *)(a1 + v12) = *(_DWORD *)(a2 + v12);
  v19 = a3[10];
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_BYTE *)v20 = *(_BYTE *)v21;
  *(_BYTE *)(v20 + 1) = *(_BYTE *)(v21 + 1);
  v22 = *(_QWORD *)(v21 + 16);
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  *(_QWORD *)(v20 + 16) = v22;
  *(_QWORD *)(v20 + 24) = *(_QWORD *)(v21 + 24);
  v23 = *(_QWORD *)(v21 + 40);
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
  *(_QWORD *)(v20 + 40) = v23;
  v24 = *(_QWORD *)(v21 + 56);
  *(_QWORD *)(v20 + 48) = *(_QWORD *)(v21 + 48);
  *(_QWORD *)(v20 + 56) = v24;
  v43 = *(_QWORD *)(v21 + 72);
  *(_QWORD *)(v20 + 64) = *(_QWORD *)(v21 + 64);
  *(_QWORD *)(v20 + 72) = v43;
  *(_BYTE *)(v20 + 80) = *(_BYTE *)(v21 + 80);
  v25 = *(_QWORD *)(v21 + 96);
  *(_QWORD *)(v20 + 88) = *(_QWORD *)(v21 + 88);
  *(_QWORD *)(v20 + 96) = v25;
  v26 = *(_QWORD *)(v21 + 104);
  *(_BYTE *)(v20 + 112) = *(_BYTE *)(v21 + 112);
  *(_QWORD *)(v20 + 104) = v26;
  v44 = *(_QWORD *)(v21 + 128);
  *(_QWORD *)(v20 + 120) = *(_QWORD *)(v21 + 120);
  *(_QWORD *)(v20 + 128) = v44;
  v27 = a3[11];
  v28 = a3[12];
  v29 = (_QWORD *)(a1 + v27);
  v30 = (_QWORD *)(a2 + v27);
  v42 = v30[1];
  *v29 = *v30;
  v29[1] = v42;
  v31 = a1 + v28;
  v32 = (uint64_t *)(a2 + v28);
  v33 = *v32;
  v34 = v32[1];
  *(_BYTE *)(v31 + 16) = *((_BYTE *)v32 + 16);
  *(_BYTE *)(v31 + 17) = *((_BYTE *)v32 + 17);
  v35 = a3[13];
  v40 = a2 + v35;
  v41 = a1 + v35;
  *(_QWORD *)v31 = v33;
  *(_QWORD *)(v31 + 8) = v34;
  v36 = sub_1D5AADFB0();
  v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v39(v41, v40, v36);
  v37 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_BYTE *)(a1 + v37) = *(_BYTE *)(a2 + v37);
  return a1;
}

uint64_t assignWithCopy for WidgetHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_BYTE *)v11 = *(_BYTE *)v12;
  *(_DWORD *)(v11 + 4) = *(_DWORD *)(v12 + 4);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_BYTE *)v14 = *(_BYTE *)(a2 + v13);
  *(_DWORD *)(v14 + 4) = *(_DWORD *)(a2 + v13 + 4);
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(a2 + v13 + 8);
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(a2 + v13 + 16);
  *(_QWORD *)(v14 + 24) = *(_QWORD *)(a2 + v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 32) = *(_BYTE *)(v15 + 32);
  *(_QWORD *)(v14 + 40) = *(_QWORD *)(v15 + 40);
  v16 = *(_QWORD *)(v15 + 48);
  *(_BYTE *)(v14 + 56) = *(_BYTE *)(v15 + 56);
  *(_QWORD *)(v14 + 48) = v16;
  *(_BYTE *)(v14 + 57) = *(_BYTE *)(v15 + 57);
  *(_QWORD *)(v14 + 64) = *(_QWORD *)(v15 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v15 + 72);
  *(_BYTE *)(v14 + 80) = *(_BYTE *)(v15 + 80);
  *(_QWORD *)(v14 + 72) = v17;
  *(_QWORD *)(v14 + 88) = *(_QWORD *)(v15 + 88);
  *(_QWORD *)(v14 + 96) = *(_QWORD *)(v15 + 96);
  *(_QWORD *)(v14 + 104) = *(_QWORD *)(v15 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 112) = *(_BYTE *)(v15 + 112);
  *(_QWORD *)(v14 + 120) = *(_QWORD *)(v15 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 128) = *(_BYTE *)(v15 + 128);
  *(_BYTE *)(v14 + 129) = *(_BYTE *)(v15 + 129);
  *(_BYTE *)(v14 + 130) = *(_BYTE *)(v15 + 130);
  *(_BYTE *)(v14 + 131) = *(_BYTE *)(v15 + 131);
  *(_BYTE *)(v14 + 132) = *(_BYTE *)(v15 + 132);
  *(_BYTE *)(v14 + 133) = *(_BYTE *)(v15 + 133);
  *(_BYTE *)(v14 + 134) = *(_BYTE *)(v15 + 134);
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  v18 = a3[10];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_BYTE *)v19 = *(_BYTE *)(a2 + v18);
  *(_BYTE *)(v19 + 1) = *(_BYTE *)(a2 + v18 + 1);
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(a2 + v18 + 8);
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(a2 + v18 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v19 + 24) = *(_DWORD *)(v20 + 24);
  *(_DWORD *)(v19 + 28) = *(_DWORD *)(v20 + 28);
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 40) = *(_QWORD *)(v20 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 48) = *(_QWORD *)(v20 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 56) = *(_QWORD *)(v20 + 56);
  *(_QWORD *)(v19 + 64) = *(_QWORD *)(v20 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 72) = *(_QWORD *)(v20 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v19 + 80) = *(_BYTE *)(v20 + 80);
  *(_QWORD *)(v19 + 88) = *(_QWORD *)(v20 + 88);
  *(_QWORD *)(v19 + 96) = *(_QWORD *)(v20 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v20 + 104);
  *(_BYTE *)(v19 + 112) = *(_BYTE *)(v20 + 112);
  *(_QWORD *)(v19 + 104) = v21;
  *(_QWORD *)(v19 + 120) = *(_QWORD *)(v20 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 128) = *(_QWORD *)(v20 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[11];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = a3[12];
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_QWORD *)v26 = *(_QWORD *)(a2 + v25);
  *(_QWORD *)(v26 + 8) = *(_QWORD *)(a2 + v25 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v26 + 16) = *(_BYTE *)(v27 + 16);
  *(_BYTE *)(v26 + 17) = *(_BYTE *)(v27 + 17);
  v28 = a3[13];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 24))(v29, v30, v31);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  return a1;
}

uint64_t initializeWithTake for WidgetHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a3[8];
  v10 = a1 + v8;
  v11 = a2 + v8;
  v12 = *(_OWORD *)(v11 + 48);
  *(_OWORD *)(v10 + 32) = *(_OWORD *)(v11 + 32);
  *(_OWORD *)(v10 + 48) = v12;
  v13 = *(_OWORD *)(v11 + 16);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + 16) = v13;
  *(_QWORD *)(v10 + 127) = *(_QWORD *)(v11 + 127);
  v14 = *(_OWORD *)(v11 + 112);
  *(_OWORD *)(v10 + 96) = *(_OWORD *)(v11 + 96);
  *(_OWORD *)(v10 + 112) = v14;
  v15 = *(_OWORD *)(v11 + 80);
  *(_OWORD *)(v10 + 64) = *(_OWORD *)(v11 + 64);
  *(_OWORD *)(v10 + 80) = v15;
  *(_DWORD *)(a1 + v9) = *(_DWORD *)(a2 + v9);
  v16 = a3[10];
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_OWORD *)(v18 + 48);
  *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
  *(_OWORD *)(v17 + 48) = v19;
  v20 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v20;
  v21 = *(_QWORD *)(v18 + 128);
  v22 = *(_OWORD *)(v18 + 112);
  *(_OWORD *)(v17 + 96) = *(_OWORD *)(v18 + 96);
  *(_OWORD *)(v17 + 112) = v22;
  v23 = *(_OWORD *)(v18 + 80);
  *(_OWORD *)(v17 + 64) = *(_OWORD *)(v18 + 64);
  *(_OWORD *)(v17 + 80) = v23;
  v24 = a3[11];
  v25 = a3[12];
  v26 = *(_OWORD *)(a2 + v24);
  *(_QWORD *)(v17 + 128) = v21;
  *(_OWORD *)(a1 + v24) = v26;
  v27 = a1 + v25;
  v28 = *(_OWORD *)(a2 + v25);
  *(_WORD *)(v27 + 16) = *(_WORD *)(a2 + v25 + 16);
  v29 = a3[13];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_OWORD *)v27 = v28;
  v32 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
  v33 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_BYTE *)(a1 + v33) = *(_BYTE *)(a2 + v33);
  return a1;
}

uint64_t assignWithTake for WidgetHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a3[7];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_BYTE *)v14 = *(_BYTE *)v15;
  *(_DWORD *)(v14 + 4) = *(_DWORD *)(v15 + 4);
  v16 = a1 + v13;
  v17 = a2 + v13;
  *(_BYTE *)v16 = *(_BYTE *)(a2 + v13);
  *(_DWORD *)(v16 + 4) = *(_DWORD *)(a2 + v13 + 4);
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(a2 + v13 + 8);
  v18 = *(_QWORD *)(a2 + v13 + 16);
  v19 = *(_QWORD *)(a2 + v13 + 24);
  *(_QWORD *)(v16 + 16) = v18;
  *(_QWORD *)(v16 + 24) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v16 + 32) = *(_BYTE *)(v17 + 32);
  v20 = *(_QWORD *)(v17 + 48);
  *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
  *(_QWORD *)(v16 + 48) = v20;
  *(_BYTE *)(v16 + 56) = *(_BYTE *)(v17 + 56);
  *(_BYTE *)(v16 + 57) = *(_BYTE *)(v17 + 57);
  *(_QWORD *)(v16 + 64) = *(_QWORD *)(v17 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 72) = *(_QWORD *)(v17 + 72);
  *(_BYTE *)(v16 + 80) = *(_BYTE *)(v17 + 80);
  *(_OWORD *)(v16 + 88) = *(_OWORD *)(v17 + 88);
  *(_QWORD *)(v16 + 104) = *(_QWORD *)(v17 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v16 + 112) = *(_BYTE *)(v17 + 112);
  *(_QWORD *)(v16 + 120) = *(_QWORD *)(v17 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v16 + 128) = *(_BYTE *)(v17 + 128);
  *(_BYTE *)(v16 + 129) = *(_BYTE *)(v17 + 129);
  *(_BYTE *)(v16 + 130) = *(_BYTE *)(v17 + 130);
  *(_BYTE *)(v16 + 131) = *(_BYTE *)(v17 + 131);
  *(_BYTE *)(v16 + 132) = *(_BYTE *)(v17 + 132);
  *(_BYTE *)(v16 + 133) = *(_BYTE *)(v17 + 133);
  *(_BYTE *)(v16 + 134) = *(_BYTE *)(v17 + 134);
  v21 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  *(_DWORD *)(a1 + v21) = *(_DWORD *)(a2 + v21);
  v22 = a3[10];
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_BYTE *)v23 = *(_BYTE *)(a2 + v22);
  *(_BYTE *)(v23 + 1) = *(_BYTE *)(a2 + v22 + 1);
  v25 = *(_QWORD *)(a2 + v22 + 16);
  *(_QWORD *)(v23 + 8) = *(_QWORD *)(a2 + v22 + 8);
  *(_QWORD *)(v23 + 16) = v25;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 24) = *(_QWORD *)(v24 + 24);
  *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 40) = *(_QWORD *)(v24 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 48) = *(_QWORD *)(v24 + 48);
  swift_bridgeObjectRelease();
  v26 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v23 + 56) = *(_QWORD *)(v24 + 56);
  *(_QWORD *)(v23 + 64) = v26;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 72) = *(_QWORD *)(v24 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v23 + 80) = *(_BYTE *)(v24 + 80);
  v27 = *(_QWORD *)(v24 + 96);
  *(_QWORD *)(v23 + 88) = *(_QWORD *)(v24 + 88);
  *(_QWORD *)(v23 + 96) = v27;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 104) = *(_QWORD *)(v24 + 104);
  *(_BYTE *)(v23 + 112) = *(_BYTE *)(v24 + 112);
  *(_QWORD *)(v23 + 120) = *(_QWORD *)(v24 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 128) = *(_QWORD *)(v24 + 128);
  swift_bridgeObjectRelease();
  v28 = a3[11];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (uint64_t *)(a2 + v28);
  v32 = *v30;
  v31 = v30[1];
  *v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  v33 = a3[12];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = *(_QWORD *)(a2 + v33 + 8);
  *(_QWORD *)v34 = *(_QWORD *)(a2 + v33);
  *(_QWORD *)(v34 + 8) = v36;
  swift_bridgeObjectRelease();
  *(_WORD *)(v34 + 16) = *(_WORD *)(v35 + 16);
  v37 = a3[13];
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 40))(v38, v39, v40);
  v41 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_BYTE *)(a1 + v41) = *(_BYTE *)(a2 + v41);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetHeadlineExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D597F650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1D5AADFB0();
    v10 = a1 + *(int *)(a3 + 52);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 24);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetHeadlineExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D597F708(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 28) + 24) = (a2 - 1);
      return result;
    }
    v10 = sub_1D5AADFB0();
    v12 = a1 + *(int *)(a4 + 52);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1D597F7B0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WidgetHeadlineExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1D597F8E0 + 4 * byte_1D5AD0E31[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1D597F914 + 4 * byte_1D5AD0E2C[v4]))();
}

uint64_t sub_1D597F914(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D597F91C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D597F924);
  return result;
}

uint64_t sub_1D597F930(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D597F938);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1D597F93C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D597F944(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetHeadlineExposureEvent.Model.CodingKeys()
{
  return &type metadata for WidgetHeadlineExposureEvent.Model.CodingKeys;
}

unint64_t sub_1D597F964()
{
  unint64_t result;

  result = qword_1EFF4E5F8;
  if (!qword_1EFF4E5F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD1104, &type metadata for WidgetHeadlineExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E5F8);
  }
  return result;
}

unint64_t sub_1D597F9AC()
{
  unint64_t result;

  result = qword_1EFF4E600;
  if (!qword_1EFF4E600)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD1074, &type metadata for WidgetHeadlineExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E600);
  }
  return result;
}

unint64_t sub_1D597F9F4()
{
  unint64_t result;

  result = qword_1EFF4E608;
  if (!qword_1EFF4E608)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD109C, &type metadata for WidgetHeadlineExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E608);
  }
  return result;
}

uint64_t sub_1D597FA38(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144746567646977 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AEFEA0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AECA50 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AEDC30 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x61746144676174 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6174614465707974 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

NewsAnalytics::ContentEnvironmentType_optional __swiftcall ContentEnvironmentType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::ContentEnvironmentType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ContentEnvironmentType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D597FFD0 + 4 * byte_1D5AD1180[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D597FFD0()
{
  return 0x69746375646F7270;
}

uint64_t sub_1D597FFEC()
{
  return 0x676E6967617473;
}

uint64_t sub_1D5980000()
{
  return 24945;
}

uint64_t sub_1D598000C()
{
  return 1953719668;
}

void sub_1D598001C(char *a1)
{
  sub_1D5A382C4(*a1);
}

unint64_t sub_1D598002C()
{
  unint64_t result;

  result = qword_1EFF4E610;
  if (!qword_1EFF4E610)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ContentEnvironmentType, &type metadata for ContentEnvironmentType);
    atomic_store(result, (unint64_t *)&qword_1EFF4E610);
  }
  return result;
}

void sub_1D5980070()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D59800BC()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5980130()
{
  __asm { BR              X10 }
}

uint64_t sub_1D598016C()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D59801CC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5980214()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::ContentEnvironmentType_optional sub_1D5980288(Swift::String *a1)
{
  return ContentEnvironmentType.init(rawValue:)(*a1);
}

uint64_t sub_1D5980294()
{
  sub_1D57A483C();
  return sub_1D5AAE928();
}

uint64_t storeEnumTagSinglePayload for ContentEnvironmentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D598033C + 4 * byte_1D5AD119E[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5980370 + 4 * byte_1D5AD1199[v4]))();
}

uint64_t sub_1D5980370(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5980378(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5980380);
  return result;
}

uint64_t sub_1D598038C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5980394);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5980398(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59803A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContentEnvironmentType()
{
  return &type metadata for ContentEnvironmentType;
}

uint64_t sub_1D59803BC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4E618, MEMORY[0x1E0CF8078]);
}

uint64_t static JourneyMessageLinkTapEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF472C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4E618, a1);
}

uint64_t sub_1D59803FC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4E630, MEMORY[0x1E0CF8380]);
}

uint64_t static JourneyMessageLinkTapEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF472D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4E630, a1);
}

uint64_t JourneyMessageLinkTapEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t JourneyMessageLinkTapEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*JourneyMessageLinkTapEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t JourneyMessageLinkTapEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageLinkTapEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for JourneyMessageLinkTapEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4E6B8);
}

uint64_t JourneyMessageLinkTapEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageLinkTapEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageLinkTapEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for JourneyMessageLinkTapEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageLinkTapEvent.urlData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageLinkTapEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageLinkTapEvent.urlData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageLinkTapEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageLinkTapEvent.urlData.modify())(_QWORD)
{
  type metadata accessor for JourneyMessageLinkTapEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageLinkTapEvent.dialogStyleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageLinkTapEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageLinkTapEvent.dialogStyleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageLinkTapEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageLinkTapEvent.dialogStyleData.modify())(_QWORD)
{
  type metadata accessor for JourneyMessageLinkTapEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageLinkTapEvent.placementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageLinkTapEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageLinkTapEvent.placementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageLinkTapEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageLinkTapEvent.placementData.modify())(_QWORD)
{
  type metadata accessor for JourneyMessageLinkTapEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageLinkTapEvent.engagementPlacementOriginationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageLinkTapEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageLinkTapEvent.engagementPlacementOriginationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageLinkTapEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageLinkTapEvent.engagementPlacementOriginationData.modify())(_QWORD)
{
  type metadata accessor for JourneyMessageLinkTapEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageLinkTapEvent.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageLinkTapEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageLinkTapEvent.purchaseData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageLinkTapEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageLinkTapEvent.purchaseData.modify())(_QWORD)
{
  type metadata accessor for JourneyMessageLinkTapEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageLinkTapEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for JourneyMessageLinkTapEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  v14 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v14, v17);
}

uint64_t JourneyMessageLinkTapEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t JourneyMessageLinkTapEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for JourneyMessageLinkTapEvent.Model(0) + 20));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for JourneyMessageLinkTapEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4E760);
}

uint64_t JourneyMessageLinkTapEvent.Model.urlData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for JourneyMessageLinkTapEvent.Model(0) + 24));
  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t JourneyMessageLinkTapEvent.Model.dialogStyleData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for JourneyMessageLinkTapEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t JourneyMessageLinkTapEvent.Model.placementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageLinkTapEvent.Model(0) + 32);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 24);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t JourneyMessageLinkTapEvent.Model.engagementPlacementOriginationData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for JourneyMessageLinkTapEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t JourneyMessageLinkTapEvent.Model.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for JourneyMessageLinkTapEvent.Model(0) + 40));
  v5 = *v3;
  v4 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

__n128 JourneyMessageLinkTapEvent.Model.init(eventData:userBundleSubscriptionContextData:urlData:dialogStyleData:placementData:engagementPlacementOriginationData:purchaseData:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, __int128 *a3@<X2>, char *a4@<X3>, __int128 *a5@<X4>, char *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X8>)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  __int128 v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;

  v10 = *a2;
  v11 = *((_QWORD *)a2 + 1);
  v12 = *((_QWORD *)a2 + 2);
  v13 = a2[24];
  v14 = a2[25];
  v15 = *((_QWORD *)a2 + 4);
  v16 = *((_QWORD *)a2 + 5);
  v17 = a2[48];
  v27 = *a3;
  v25 = *((_QWORD *)a3 + 3);
  v26 = *((_QWORD *)a3 + 2);
  v28 = *a4;
  v31 = (__n128)a5[1];
  v32 = *a5;
  v29 = *((_QWORD *)a5 + 5);
  v30 = *((_QWORD *)a5 + 4);
  v33 = *a6;
  v35 = a7[1];
  v36 = *a7;
  v34 = *((_BYTE *)a7 + 16);
  v18 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a8, a1, v18);
  v19 = (int *)type metadata accessor for JourneyMessageLinkTapEvent.Model(0);
  v20 = a8 + v19[5];
  *(_BYTE *)v20 = v10;
  *(_QWORD *)(v20 + 8) = v11;
  *(_QWORD *)(v20 + 16) = v12;
  *(_BYTE *)(v20 + 24) = v13;
  *(_BYTE *)(v20 + 25) = v14;
  *(_QWORD *)(v20 + 32) = v15;
  *(_QWORD *)(v20 + 40) = v16;
  *(_BYTE *)(v20 + 48) = v17;
  v21 = a8 + v19[6];
  *(_OWORD *)v21 = v27;
  *(_QWORD *)(v21 + 16) = v26;
  *(_QWORD *)(v21 + 24) = v25;
  *(_BYTE *)(a8 + v19[7]) = v28;
  v22 = a8 + v19[8];
  result = v31;
  *(_OWORD *)v22 = v32;
  *(__n128 *)(v22 + 16) = v31;
  *(_QWORD *)(v22 + 32) = v30;
  *(_QWORD *)(v22 + 40) = v29;
  *(_BYTE *)(a8 + v19[9]) = v33;
  v24 = a8 + v19[10];
  *(_QWORD *)v24 = v36;
  *(_QWORD *)(v24 + 8) = v35;
  *(_BYTE *)(v24 + 16) = v34;
  return result;
}

uint64_t sub_1D5980FB4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5980FEC + 4 * byte_1D5AD12D0[a1]))(0x746144746E657665, 0xE900000000000061);
}

unint64_t sub_1D5980FEC()
{
  return 0xD000000000000021;
}

uint64_t sub_1D5981008()
{
  return 0x617461446C7275;
}

uint64_t sub_1D5981020()
{
  return 0x7453676F6C616964;
}

uint64_t sub_1D5981044()
{
  return 0x6E656D6563616C70;
}

unint64_t sub_1D5981068()
{
  return 0xD000000000000022;
}

uint64_t sub_1D5981088()
{
  return 0x6573616863727570;
}

uint64_t sub_1D59810A8()
{
  unsigned __int8 *v0;

  return sub_1D5980FB4(*v0);
}

uint64_t sub_1D59810B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59839C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59810D4()
{
  sub_1D5981434();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59810FC()
{
  sub_1D5981434();
  return sub_1D5AAEEE0();
}

uint64_t JourneyMessageLinkTapEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  uint64_t v23;
  char v24;
  _BYTE v25[32];
  __int128 v26;
  char v27;

  v3 = v1;
  sub_1D5981990(0, &qword_1EFF4E648, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5981434();
  sub_1D5AAEEC8();
  v25[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for JourneyMessageLinkTapEvent.Model(0);
    v11 = v3 + v10[5];
    v12 = *(_BYTE *)(v11 + 24);
    v13 = *(_BYTE *)(v11 + 25);
    v14 = *(_BYTE *)(v11 + 48);
    v25[0] = *(_BYTE *)v11;
    *(_OWORD *)&v25[8] = *(_OWORD *)(v11 + 8);
    v25[24] = v12;
    v25[25] = v13;
    v26 = *(_OWORD *)(v11 + 32);
    v27 = v14;
    v24 = 1;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v15 = v3 + v10[6];
    v16 = *(_QWORD *)(v15 + 8);
    *(_QWORD *)v25 = *(_QWORD *)v15;
    *(_QWORD *)&v25[8] = v16;
    *(_OWORD *)&v25[16] = *(_OWORD *)(v15 + 16);
    v24 = 2;
    sub_1D58845E4();
    sub_1D5AAED6C();
    v25[0] = *(_BYTE *)(v3 + v10[7]);
    v24 = 3;
    sub_1D580BB8C();
    sub_1D5AAED6C();
    v17 = v3 + v10[8];
    v18 = *(_QWORD *)(v17 + 8);
    *(_QWORD *)v25 = *(_QWORD *)v17;
    *(_QWORD *)&v25[8] = v18;
    v19 = *(_OWORD *)(v17 + 32);
    *(_OWORD *)&v25[16] = *(_OWORD *)(v17 + 16);
    v26 = v19;
    v24 = 4;
    sub_1D57C8654();
    sub_1D5AAED6C();
    v25[0] = *(_BYTE *)(v3 + v10[9]);
    v24 = 5;
    sub_1D580BEFC();
    sub_1D5AAED18();
    v20 = v3 + v10[10];
    v21 = *(_BYTE *)(v20 + 16);
    *(_OWORD *)v25 = *(_OWORD *)v20;
    v25[16] = v21;
    v24 = 6;
    sub_1D580C07C();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5981434()
{
  unint64_t result;

  result = qword_1EFF4E650;
  if (!qword_1EFF4E650)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD155C, &type metadata for JourneyMessageLinkTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E650);
  }
  return result;
}

uint64_t JourneyMessageLinkTapEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  char v24;
  char *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  _BYTE v33[32];
  __int128 v34;
  char v35;
  char v36;

  v27 = a2;
  v3 = sub_1D5AADF98();
  v29 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5981990(0, &qword_1EFF4E658, MEMORY[0x1E0DED048]);
  v28 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - v7;
  v9 = (int *)type metadata accessor for JourneyMessageLinkTapEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5981434();
  v31 = v8;
  v12 = v32;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v14 = v29;
  v33[0] = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v30, v3);
  v36 = 1;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v15 = v33[24];
  v16 = v33[25];
  v17 = v35;
  v18 = &v11[v9[5]];
  *v18 = v33[0];
  *(_OWORD *)(v18 + 8) = *(_OWORD *)&v33[8];
  v18[24] = v15;
  v18[25] = v16;
  *((_OWORD *)v18 + 2) = v34;
  v18[48] = v17;
  v36 = 2;
  sub_1D58845A0();
  sub_1D5AAECD0();
  v19 = *(_QWORD *)&v33[8];
  v20 = &v11[v9[6]];
  *(_QWORD *)v20 = *(_QWORD *)v33;
  *((_QWORD *)v20 + 1) = v19;
  *((_OWORD *)v20 + 1) = *(_OWORD *)&v33[16];
  v36 = 3;
  sub_1D580BB48();
  sub_1D5AAECD0();
  v11[v9[7]] = v33[0];
  v36 = 4;
  sub_1D57C8610();
  sub_1D5AAECD0();
  v21 = *(_QWORD *)&v33[8];
  v22 = &v11[v9[8]];
  *(_QWORD *)v22 = *(_QWORD *)v33;
  *((_QWORD *)v22 + 1) = v21;
  v23 = v34;
  *((_OWORD *)v22 + 1) = *(_OWORD *)&v33[16];
  *((_OWORD *)v22 + 2) = v23;
  v36 = 5;
  sub_1D580BEB8();
  sub_1D5AAEC7C();
  v11[v9[9]] = v33[0];
  v36 = 6;
  sub_1D580C038();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v31, v28);
  v24 = v33[16];
  v25 = &v11[v9[10]];
  *(_OWORD *)v25 = *(_OWORD *)v33;
  v25[16] = v24;
  sub_1D59819EC((uint64_t)v11, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1D5981A30((uint64_t)v11);
}

void sub_1D5981990(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5981434();
    v7 = a3(a1, &type metadata for JourneyMessageLinkTapEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59819EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JourneyMessageLinkTapEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5981A30(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for JourneyMessageLinkTapEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5981A6C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return JourneyMessageLinkTapEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5981A80(_QWORD *a1)
{
  return JourneyMessageLinkTapEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5981A94@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF472C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4E618, a1);
}

uint64_t sub_1D5981AB8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF472D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4E630, a1);
}

uint64_t sub_1D5981ADC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  v15 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v15, v18);
}

uint64_t *initializeBufferWithCopyOfBuffer for JourneyMessageLinkTapEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return a1;
}

uint64_t destroy for JourneyMessageLinkTapEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
}

uint64_t initializeWithCopy for JourneyMessageLinkTapEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

uint64_t assignWithCopy for JourneyMessageLinkTapEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t initializeWithTake for JourneyMessageLinkTapEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for JourneyMessageLinkTapEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for JourneyMessageLinkTapEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5982998(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
              v8 = v18;
              v12 = *(_QWORD *)(v18 - 8);
              v13 = a3[10];
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for JourneyMessageLinkTapEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5982B8C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
              v10 = v20;
              v14 = *(_QWORD *)(v20 - 8);
              v15 = a4[10];
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5982D7C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
              if (v6 <= 0x3F)
                swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for JourneyMessageLinkTapEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    *((_WORD *)v10 + 12) = *((_WORD *)v11 + 12);
    v13 = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
    *((_QWORD *)v10 + 5) = v13;
    v10[48] = v11[48];
    v14 = (_QWORD *)((char *)a1 + v9);
    v15 = (_QWORD *)((char *)a2 + v9);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = v15[3];
    v14[2] = v15[2];
    v14[3] = v17;
    v18 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v19 = (_QWORD *)((char *)a1 + v18);
    v20 = (_QWORD *)((char *)a2 + v18);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = v20[3];
    v19[2] = v20[2];
    v19[3] = v22;
    v23 = v20[5];
    v19[4] = v20[4];
    v19[5] = v23;
    v24 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = *((_QWORD *)v26 + 1);
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_QWORD *)v25 + 1) = v27;
    v25[16] = v26[16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for JourneyMessageLinkTapEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for JourneyMessageLinkTapEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  *(_WORD *)(v9 + 24) = *(_WORD *)(v10 + 24);
  v12 = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v9 + 40) = v12;
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  v13 = (_QWORD *)(a1 + v8);
  v14 = (_QWORD *)(a2 + v8);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = v14[3];
  v13[2] = v14[2];
  v13[3] = v16;
  v17 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = v19[3];
  v18[2] = v19[2];
  v18[3] = v21;
  v22 = v19[5];
  v18[4] = v19[4];
  v18[5] = v22;
  v23 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_QWORD *)(v25 + 8);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_QWORD *)(v24 + 8) = v26;
  *(_BYTE *)(v24 + 16) = *(_BYTE *)(v25 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JourneyMessageLinkTapEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = a2 + v10;
  *v11 = *(_QWORD *)(a2 + v10);
  v11[1] = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[2] = *(_QWORD *)(v12 + 16);
  v11[3] = *(_QWORD *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *(_QWORD *)(a2 + v13);
  v14[1] = *(_QWORD *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[2] = v15[2];
  v14[3] = v15[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[4] = v15[4];
  v14[5] = v15[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v16 = a3[10];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(a2 + v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  return a1;
}

uint64_t initializeWithTake for JourneyMessageLinkTapEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  _OWORD *v12;
  __int128 *v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  v12 = (_OWORD *)(a1 + v8);
  v13 = (__int128 *)(a2 + v8);
  v15 = *v13;
  v14 = v13[1];
  v16 = a3[7];
  v17 = a3[8];
  v18 = *(_BYTE *)(a2 + v16);
  *v12 = v15;
  v12[1] = v14;
  *(_BYTE *)(a1 + v16) = v18;
  v19 = (_OWORD *)(a1 + v17);
  v20 = *(_OWORD *)(a2 + v17 + 16);
  *v19 = *(_OWORD *)(a2 + v17);
  v19[1] = v20;
  v19[2] = *(_OWORD *)(a2 + v17 + 32);
  v21 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_BYTE *)(v22 + 16) = *(_BYTE *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  return a1;
}

uint64_t assignWithTake for JourneyMessageLinkTapEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  v11 = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *v13 = *(_QWORD *)(a2 + v12);
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v14 + 24);
  v13[2] = *(_QWORD *)(v14 + 16);
  v13[3] = v16;
  swift_bridgeObjectRelease();
  v17 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = *(_QWORD *)(a2 + v17);
  v21 = *(_QWORD *)(a2 + v17 + 8);
  *v18 = v20;
  v18[1] = v21;
  swift_bridgeObjectRelease();
  v22 = v19[3];
  v18[2] = v19[2];
  v18[3] = v22;
  swift_bridgeObjectRelease();
  v23 = v19[5];
  v18[4] = v19[4];
  v18[5] = v23;
  swift_bridgeObjectRelease();
  v24 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)(v26 + 8);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_QWORD *)(v25 + 8) = v27;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v25 + 16) = *(_BYTE *)(v26 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for JourneyMessageLinkTapEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5983678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for JourneyMessageLinkTapEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5983704(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5983780()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for JourneyMessageLinkTapEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D5983870 + 4 * byte_1D5AD12DC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D59838A4 + 4 * byte_1D5AD12D7[v4]))();
}

uint64_t sub_1D59838A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59838AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59838B4);
  return result;
}

uint64_t sub_1D59838C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59838C8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D59838CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59838D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JourneyMessageLinkTapEvent.Model.CodingKeys()
{
  return &type metadata for JourneyMessageLinkTapEvent.Model.CodingKeys;
}

unint64_t sub_1D59838F4()
{
  unint64_t result;

  result = qword_1EFF4E7B0;
  if (!qword_1EFF4E7B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD1534, &type metadata for JourneyMessageLinkTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E7B0);
  }
  return result;
}

unint64_t sub_1D598393C()
{
  unint64_t result;

  result = qword_1EFF4E7B8;
  if (!qword_1EFF4E7B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD14A4, &type metadata for JourneyMessageLinkTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E7B8);
  }
  return result;
}

unint64_t sub_1D5983984()
{
  unint64_t result;

  result = qword_1EFF4E7C0;
  if (!qword_1EFF4E7C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD14CC, &type metadata for JourneyMessageLinkTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E7C0);
  }
  return result;
}

uint64_t sub_1D59839C8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x617461446C7275 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7453676F6C616964 && a2 == 0xEF61746144656C79 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E656D6563616C70 && a2 == 0xED00006174614474 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001D5AED470 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

__n128 UserEventStorageData.init(onDiskSize:prunedSessionCount:prunedSessionSize:totalSessionsCount:oldestSessionAge:newestSessionAge:aggregateStoreGenerationTime:aggregateTotalCount:meanCountOfEvents:standardDeviationOfEvents:totalEventsCount:headlineEventCount:headlinesWithValidTitleEmbeddingsEventCount:headlinesWithInvalidTitleEmbeddingsEventCount:headlinesWithValidBodyEmbeddingsEventCount:headlinesWithInvalidBodyEmbeddingsEventCount:eventCounts:aggregateData:)@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, __int128 a13, __int128 a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __n128 result;
  char v26;
  char v27;

  v18 = *(_QWORD *)(a17 + 80);
  v19 = *(_QWORD *)(a18 + 80);
  v20 = *(_WORD *)(a18 + 88);
  v27 = *(_BYTE *)(a17 + 88);
  v26 = *(_BYTE *)(a18 + 90);
  *(_QWORD *)a9 = a1;
  *(_BYTE *)(a9 + 8) = a2 & 1;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = a12;
  *(double *)(a9 + 72) = a10;
  *(double *)(a9 + 80) = a11;
  *(_OWORD *)(a9 + 88) = a13;
  *(_OWORD *)(a9 + 104) = a14;
  *(_QWORD *)(a9 + 120) = a15;
  *(_QWORD *)(a9 + 128) = a16;
  v21 = *(_OWORD *)(a17 + 16);
  *(_OWORD *)(a9 + 136) = *(_OWORD *)a17;
  *(_OWORD *)(a9 + 152) = v21;
  v22 = *(_OWORD *)(a17 + 48);
  *(_OWORD *)(a9 + 168) = *(_OWORD *)(a17 + 32);
  *(_OWORD *)(a9 + 184) = v22;
  *(_OWORD *)(a9 + 200) = *(_OWORD *)(a17 + 64);
  *(_QWORD *)(a9 + 216) = v18;
  *(_BYTE *)(a9 + 224) = v27;
  v23 = *(_OWORD *)(a18 + 16);
  *(_OWORD *)(a9 + 232) = *(_OWORD *)a18;
  *(_OWORD *)(a9 + 248) = v23;
  v24 = *(_OWORD *)(a18 + 48);
  *(_OWORD *)(a9 + 264) = *(_OWORD *)(a18 + 32);
  *(_OWORD *)(a9 + 280) = v24;
  result = *(__n128 *)(a18 + 64);
  *(__n128 *)(a9 + 296) = result;
  *(_QWORD *)(a9 + 312) = v19;
  *(_WORD *)(a9 + 320) = v20;
  *(_BYTE *)(a9 + 322) = v26;
  return result;
}

uint64_t UserEventStorageData.onDiskSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t UserEventStorageData.onDiskSize.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*UserEventStorageData.onDiskSize.modify())()
{
  return nullsub_1;
}

uint64_t UserEventStorageData.prunedSessionCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t UserEventStorageData.prunedSessionCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*UserEventStorageData.prunedSessionCount.modify())()
{
  return nullsub_1;
}

uint64_t UserEventStorageData.prunedSessionSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t UserEventStorageData.prunedSessionSize.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*UserEventStorageData.prunedSessionSize.modify())()
{
  return nullsub_1;
}

uint64_t UserEventStorageData.totalSessionsCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t UserEventStorageData.totalSessionsCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*UserEventStorageData.totalSessionsCount.modify())()
{
  return nullsub_1;
}

uint64_t UserEventStorageData.oldestSessionAge.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t UserEventStorageData.oldestSessionAge.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*UserEventStorageData.oldestSessionAge.modify())()
{
  return nullsub_1;
}

uint64_t UserEventStorageData.newestSessionAge.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t UserEventStorageData.newestSessionAge.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = result;
  return result;
}

uint64_t (*UserEventStorageData.newestSessionAge.modify())()
{
  return nullsub_1;
}

uint64_t UserEventStorageData.aggregateStoreGenerationTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t UserEventStorageData.aggregateStoreGenerationTime.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = result;
  return result;
}

uint64_t (*UserEventStorageData.aggregateStoreGenerationTime.modify())()
{
  return nullsub_1;
}

uint64_t UserEventStorageData.aggregateTotalCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t UserEventStorageData.aggregateTotalCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = result;
  return result;
}

uint64_t (*UserEventStorageData.aggregateTotalCount.modify())()
{
  return nullsub_1;
}

double UserEventStorageData.meanCountOfEvents.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

void UserEventStorageData.meanCountOfEvents.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 72) = a1;
}

uint64_t (*UserEventStorageData.meanCountOfEvents.modify())()
{
  return nullsub_1;
}

double UserEventStorageData.standardDeviationOfEvents.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

void UserEventStorageData.standardDeviationOfEvents.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 80) = a1;
}

uint64_t (*UserEventStorageData.standardDeviationOfEvents.modify())()
{
  return nullsub_1;
}

uint64_t UserEventStorageData.totalEventsCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 88);
}

uint64_t UserEventStorageData.totalEventsCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = result;
  return result;
}

uint64_t (*UserEventStorageData.totalEventsCount.modify())()
{
  return nullsub_1;
}

uint64_t UserEventStorageData.headlineEventCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t UserEventStorageData.headlineEventCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = result;
  return result;
}

uint64_t (*UserEventStorageData.headlineEventCount.modify())()
{
  return nullsub_1;
}

uint64_t UserEventStorageData.headlinesWithValidTitleEmbeddingsEventCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 104);
}

uint64_t UserEventStorageData.headlinesWithValidTitleEmbeddingsEventCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = result;
  return result;
}

uint64_t (*UserEventStorageData.headlinesWithValidTitleEmbeddingsEventCount.modify())()
{
  return nullsub_1;
}

uint64_t UserEventStorageData.headlinesWithInvalidTitleEmbeddingsEventCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

uint64_t UserEventStorageData.headlinesWithInvalidTitleEmbeddingsEventCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = result;
  return result;
}

uint64_t (*UserEventStorageData.headlinesWithInvalidTitleEmbeddingsEventCount.modify())()
{
  return nullsub_1;
}

uint64_t UserEventStorageData.headlinesWithValidBodyEmbeddingsEventCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 120);
}

uint64_t UserEventStorageData.headlinesWithValidBodyEmbeddingsEventCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = result;
  return result;
}

uint64_t (*UserEventStorageData.headlinesWithValidBodyEmbeddingsEventCount.modify())()
{
  return nullsub_1;
}

uint64_t UserEventStorageData.headlinesWithInvalidBodyEmbeddingsEventCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 128);
}

uint64_t UserEventStorageData.headlinesWithInvalidBodyEmbeddingsEventCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = result;
  return result;
}

uint64_t (*UserEventStorageData.headlinesWithInvalidBodyEmbeddingsEventCount.modify())()
{
  return nullsub_1;
}

__n128 UserEventStorageData.eventCounts.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  __int128 v5;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 216);
  v3 = *(_BYTE *)(v1 + 224);
  v4 = *(_OWORD *)(v1 + 152);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 136);
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(v1 + 184);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 168);
  *(_OWORD *)(a1 + 48) = v5;
  result = *(__n128 *)(v1 + 200);
  *(__n128 *)(a1 + 64) = result;
  *(_QWORD *)(a1 + 80) = v2;
  *(_BYTE *)(a1 + 88) = v3;
  return result;
}

__n128 UserEventStorageData.eventCounts.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  char v5;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 136) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 152) = v2;
  v3 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v1 + 168) = *(_OWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_BYTE *)(a1 + 88);
  *(_OWORD *)(v1 + 184) = v3;
  result = *(__n128 *)(a1 + 64);
  *(__n128 *)(v1 + 200) = result;
  *(_QWORD *)(v1 + 216) = v4;
  *(_BYTE *)(v1 + 224) = v5;
  return result;
}

uint64_t (*UserEventStorageData.eventCounts.modify())()
{
  return nullsub_1;
}

__n128 UserEventStorageData.aggregateData.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  char v4;
  __int128 v5;
  __int128 v6;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 312);
  v3 = *(_WORD *)(v1 + 320);
  v4 = *(_BYTE *)(v1 + 322);
  v5 = *(_OWORD *)(v1 + 248);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 232);
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_OWORD *)(v1 + 280);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 264);
  *(_OWORD *)(a1 + 48) = v6;
  result = *(__n128 *)(v1 + 296);
  *(__n128 *)(a1 + 64) = result;
  *(_QWORD *)(a1 + 80) = v2;
  *(_WORD *)(a1 + 88) = v3;
  *(_BYTE *)(a1 + 90) = v4;
  return result;
}

__n128 UserEventStorageData.aggregateData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  char v4;
  __int128 v5;
  __int128 v6;
  __n128 result;

  v2 = *(_QWORD *)(a1 + 80);
  v3 = *(_WORD *)(a1 + 88);
  v4 = *(_BYTE *)(a1 + 90);
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 232) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 248) = v5;
  v6 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v1 + 264) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 280) = v6;
  result = *(__n128 *)(a1 + 64);
  *(__n128 *)(v1 + 296) = result;
  *(_QWORD *)(v1 + 312) = v2;
  *(_WORD *)(v1 + 320) = v3;
  *(_BYTE *)(v1 + 322) = v4;
  return result;
}

uint64_t (*UserEventStorageData.aggregateData.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D59840E8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5984120 + 4 * byte_1D5AD15B0[a1]))(0x69536B7369446E6FLL, 0xEA0000000000657ALL);
}

unint64_t sub_1D5984120()
{
  return 0xD000000000000012;
}

uint64_t sub_1D5984280()
{
  return 0x756F43746E657665;
}

uint64_t sub_1D59842A0()
{
  return 0x7461676572676761;
}

uint64_t sub_1D59842C4()
{
  unsigned __int8 *v0;

  return sub_1D59840E8(*v0);
}

uint64_t sub_1D59842CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5985370(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D59842F0(_BYTE *a1@<X8>)
{
  *a1 = 18;
}

uint64_t sub_1D59842FC()
{
  sub_1D5984A18();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5984324()
{
  sub_1D5984A18();
  return sub_1D5AAEEE0();
}

uint64_t UserEventStorageData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int16 v65;
  char v66;
  int v67;
  char v68;

  sub_1D5985080(0, &qword_1ED9D0D90, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v15 - v6;
  v8 = *v1;
  v67 = *((unsigned __int8 *)v1 + 8);
  v51 = v1[2];
  v52 = v8;
  v9 = v1[3];
  v49 = v1[4];
  v50 = v9;
  v47 = v1[5];
  v46 = v1[6];
  v45 = v1[7];
  v44 = v1[8];
  v43 = v1[11];
  v42 = v1[12];
  v41 = v1[13];
  v40 = v1[14];
  v39 = v1[15];
  v38 = v1[16];
  v37 = v1[17];
  v36 = v1[18];
  v35 = v1[19];
  v34 = v1[20];
  v33 = v1[21];
  v32 = v1[22];
  v31 = v1[23];
  v30 = v1[24];
  v29 = v1[25];
  v28 = v1[26];
  v27 = v1[27];
  v26 = *((unsigned __int8 *)v1 + 224);
  v48 = v1[30];
  v16 = v1[31];
  v25 = v1[32];
  v24 = v1[33];
  v23 = v1[34];
  v22 = v1[35];
  v21 = v1[36];
  v20 = v1[37];
  v19 = v1[38];
  v18 = v1[39];
  v17 = *((unsigned __int16 *)v1 + 160);
  v10 = v1[29];
  v11 = *((unsigned __int8 *)v1 + 322);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5984A18();
  sub_1D5AAEEC8();
  LOBYTE(v54) = 0;
  v12 = v53;
  sub_1D5AAED30();
  if (!v12)
  {
    v52 = v10;
    LODWORD(v53) = v11;
    v13 = v48;
    LOBYTE(v54) = 1;
    sub_1D5AAED84();
    LOBYTE(v54) = 2;
    sub_1D5AAED84();
    LOBYTE(v54) = 3;
    sub_1D5AAED84();
    LOBYTE(v54) = 4;
    sub_1D5AAED84();
    LOBYTE(v54) = 5;
    sub_1D5AAED84();
    LOBYTE(v54) = 6;
    sub_1D5AAED84();
    LOBYTE(v54) = 7;
    sub_1D5AAED84();
    LOBYTE(v54) = 8;
    sub_1D5AAED54();
    LOBYTE(v54) = 9;
    sub_1D5AAED54();
    LOBYTE(v54) = 10;
    sub_1D5AAED84();
    LOBYTE(v54) = 11;
    sub_1D5AAED84();
    LOBYTE(v54) = 12;
    sub_1D5AAED84();
    LOBYTE(v54) = 13;
    sub_1D5AAED84();
    LOBYTE(v54) = 14;
    sub_1D5AAED84();
    LOBYTE(v54) = 15;
    sub_1D5AAED84();
    v54 = v37;
    v55 = v36;
    v56 = v35;
    v57 = v34;
    v58 = v33;
    v59 = v32;
    v60 = v31;
    v61 = v30;
    v62 = v29;
    v63 = v28;
    v64 = v27;
    LOBYTE(v65) = v26;
    v68 = 16;
    sub_1D58880D4();
    sub_1D5AAED18();
    v54 = v52;
    v55 = v13;
    v56 = v16;
    v57 = v25;
    v58 = v24;
    v59 = v23;
    v60 = v22;
    v61 = v21;
    v62 = v20;
    v63 = v19;
    v64 = v18;
    v65 = v17;
    v66 = v53;
    v68 = 17;
    sub_1D5846424();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5984A18()
{
  unint64_t result;

  result = qword_1ED9D01E0;
  if (!qword_1ED9D01E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD1788, &type metadata for UserEventStorageData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D01E0);
  }
  return result;
}

uint64_t UserEventStorageData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE v57[7];
  char v58;
  _BYTE v59[7];
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  __int16 v66;
  char v67;
  char v68;
  char v69;
  char v70;

  sub_1D5985080(0, &qword_1ED9D0D08, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5984A18();
  sub_1D5AAEEB0();
  if (!v2)
  {
    LOBYTE(v60) = 0;
    v10 = sub_1D5AAEC94();
    v12 = v11;
    LOBYTE(v60) = 1;
    v56 = sub_1D5AAECE8();
    LOBYTE(v60) = 2;
    v55 = sub_1D5AAECE8();
    LOBYTE(v60) = 3;
    v54 = sub_1D5AAECE8();
    LOBYTE(v60) = 4;
    v53 = sub_1D5AAECE8();
    LOBYTE(v60) = 5;
    v52 = sub_1D5AAECE8();
    LOBYTE(v60) = 6;
    v51 = sub_1D5AAECE8();
    LOBYTE(v60) = 7;
    v50 = sub_1D5AAECE8();
    LOBYTE(v60) = 8;
    sub_1D5AAECB8();
    v14 = v13;
    LOBYTE(v60) = 9;
    sub_1D5AAECB8();
    v16 = v15;
    LOBYTE(v60) = 10;
    v49 = sub_1D5AAECE8();
    LOBYTE(v60) = 11;
    v48 = sub_1D5AAECE8();
    LOBYTE(v60) = 12;
    v47 = sub_1D5AAECE8();
    LOBYTE(v60) = 13;
    v46 = sub_1D5AAECE8();
    LOBYTE(v60) = 14;
    v45 = sub_1D5AAECE8();
    LOBYTE(v60) = 15;
    v44 = sub_1D5AAECE8();
    v59[0] = 16;
    sub_1D588808C();
    sub_1D5AAEC7C();
    v42 = *((_QWORD *)&v60 + 1);
    v43 = v60;
    v40 = *((_QWORD *)&v61 + 1);
    v41 = v61;
    v38 = *((_QWORD *)&v62 + 1);
    v39 = v62;
    v36 = *((_QWORD *)&v63 + 1);
    v37 = v63;
    v34 = *((_QWORD *)&v64 + 1);
    v35 = v64;
    v33 = v65;
    v32 = v66;
    v70 = 17;
    sub_1D58463DC();
    sub_1D5AAEC7C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v58 = v32;
    v69 = v67;
    *(_QWORD *)a2 = v10;
    v68 = v12 & 1;
    *(_BYTE *)(a2 + 8) = v12 & 1;
    *(_DWORD *)(a2 + 9) = *(_DWORD *)v59;
    *(_DWORD *)(a2 + 12) = *(_DWORD *)&v59[3];
    v18 = v55;
    *(_QWORD *)(a2 + 16) = v56;
    *(_QWORD *)(a2 + 24) = v18;
    v19 = v53;
    *(_QWORD *)(a2 + 32) = v54;
    *(_QWORD *)(a2 + 40) = v19;
    v20 = v51;
    *(_QWORD *)(a2 + 48) = v52;
    *(_QWORD *)(a2 + 56) = v20;
    *(_QWORD *)(a2 + 64) = v50;
    v21 = v48;
    *(_QWORD *)(a2 + 88) = v49;
    *(_QWORD *)(a2 + 96) = v21;
    v22 = v46;
    *(_QWORD *)(a2 + 104) = v47;
    *(_QWORD *)(a2 + 112) = v22;
    v23 = v44;
    *(_QWORD *)(a2 + 120) = v45;
    *(_QWORD *)(a2 + 128) = v23;
    v24 = v42;
    *(_QWORD *)(a2 + 136) = v43;
    *(_QWORD *)(a2 + 144) = v24;
    v25 = v40;
    *(_QWORD *)(a2 + 152) = v41;
    *(_QWORD *)(a2 + 160) = v25;
    v26 = v38;
    *(_QWORD *)(a2 + 168) = v39;
    *(_QWORD *)(a2 + 176) = v26;
    v27 = v36;
    *(_QWORD *)(a2 + 184) = v37;
    *(_QWORD *)(a2 + 192) = v27;
    v28 = v34;
    *(_QWORD *)(a2 + 200) = v35;
    *(_QWORD *)(a2 + 208) = v28;
    *(_QWORD *)(a2 + 216) = v33;
    *(_BYTE *)(a2 + 224) = v58;
    *(_DWORD *)(a2 + 225) = *(_DWORD *)v57;
    *(_DWORD *)(a2 + 228) = *(_DWORD *)&v57[3];
    *(_QWORD *)(a2 + 312) = v65;
    *(_WORD *)(a2 + 320) = v66;
    *(_BYTE *)(a2 + 322) = v69;
    *(_QWORD *)(a2 + 72) = v14;
    *(_QWORD *)(a2 + 80) = v16;
    v29 = v61;
    *(_OWORD *)(a2 + 232) = v60;
    *(_OWORD *)(a2 + 248) = v29;
    v30 = v63;
    *(_OWORD *)(a2 + 264) = v62;
    *(_OWORD *)(a2 + 280) = v30;
    *(_OWORD *)(a2 + 296) = v64;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5985080(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5984A18();
    v7 = a3(a1, &type metadata for UserEventStorageData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59850E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UserEventStorageData.init(from:)(a1, a2);
}

uint64_t sub_1D59850F8(_QWORD *a1)
{
  return UserEventStorageData.encode(to:)(a1);
}

void *__swift_memcpy323_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x143uLL);
}

uint64_t getEnumTagSinglePayload for UserEventStorageData(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 323))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for UserEventStorageData(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 312) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 322) = 0;
    *(_WORD *)(result + 320) = 0;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 323) = v3;
  return result;
}

ValueMetadata *type metadata accessor for UserEventStorageData()
{
  return &type metadata for UserEventStorageData;
}

uint64_t storeEnumTagSinglePayload for UserEventStorageData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_1D5985218 + 4 * byte_1D5AD15C7[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_1D598524C + 4 * byte_1D5AD15C2[v4]))();
}

uint64_t sub_1D598524C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5985254(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D598525CLL);
  return result;
}

uint64_t sub_1D5985268(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5985270);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_1D5985274(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D598527C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserEventStorageData.CodingKeys()
{
  return &type metadata for UserEventStorageData.CodingKeys;
}

unint64_t sub_1D598529C()
{
  unint64_t result;

  result = qword_1EFF4E7C8;
  if (!qword_1EFF4E7C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD1760, &type metadata for UserEventStorageData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E7C8);
  }
  return result;
}

unint64_t sub_1D59852E4()
{
  unint64_t result;

  result = qword_1ED9D01F0;
  if (!qword_1ED9D01F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD16D0, &type metadata for UserEventStorageData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D01F0);
  }
  return result;
}

unint64_t sub_1D598532C()
{
  unint64_t result;

  result = qword_1ED9D01E8;
  if (!qword_1ED9D01E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD16F8, &type metadata for UserEventStorageData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D01E8);
  }
  return result;
}

uint64_t sub_1D5985370(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x69536B7369446E6FLL && a2 == 0xEA0000000000657ALL;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AF0CD0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AF0CF0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AF0D10 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AF0D30 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AF0D50 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D5AF0D70 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AF0D90 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AF0DB0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001D5AF0DD0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AF0DF0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AF0E10 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000002BLL && a2 == 0x80000001D5AF0E30 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000002DLL && a2 == 0x80000001D5AF0E60 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000002ALL && a2 == 0x80000001D5AF0E90 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD00000000000002CLL && a2 == 0x80000001D5AF0EC0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x756F43746E657665 && a2 == 0xEB0000000073746ELL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x7461676572676761 && a2 == 0xED00006174614465)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 17;
    else
      return 18;
  }
}

NewsAnalytics::MediaUserAction_optional __swiftcall MediaUserAction.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::MediaUserAction_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 9;
  if (v3 < 9)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t MediaUserAction.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5985AA8 + 4 * byte_1D5AD17D8[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5985AA8()
{
  return 0x616C506F54706174;
}

uint64_t sub_1D5985AC8()
{
  return 2036427888;
}

uint64_t sub_1D5985AD8()
{
  return 0x6573756170;
}

uint64_t sub_1D5985AEC()
{
  return 0x656D75736572;
}

uint64_t sub_1D5985B00()
{
  return 0x64656C696166;
}

uint64_t sub_1D5985B14()
{
  return 0x6168436465657073;
}

uint64_t sub_1D5985B34()
{
  return 0x636172547478656ELL;
}

uint64_t sub_1D5985B50()
{
  return 0x6B63614270696B73;
}

void sub_1D5985B68(char *a1)
{
  sub_1D5A3BACC(*a1);
}

unint64_t sub_1D5985B78()
{
  unint64_t result;

  result = qword_1EFF4E7D0;
  if (!qword_1EFF4E7D0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MediaUserAction, &type metadata for MediaUserAction);
    atomic_store(result, (unint64_t *)&qword_1EFF4E7D0);
  }
  return result;
}

uint64_t sub_1D5985BBC()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1D5AAEE80();
  sub_1D5AA8964((uint64_t)v3, v1);
  return sub_1D5AAEE98();
}

void sub_1D5985C00(uint64_t a1)
{
  char *v1;

  sub_1D5AA8964(a1, *v1);
}

uint64_t sub_1D5985C08()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1D5AAEE80();
  sub_1D5AA8964((uint64_t)v3, v1);
  return sub_1D5AAEE98();
}

NewsAnalytics::MediaUserAction_optional sub_1D5985C48(Swift::String *a1)
{
  return MediaUserAction.init(rawValue:)(*a1);
}

uint64_t sub_1D5985C54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = MediaUserAction.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D5985C78()
{
  sub_1D5985DDC();
  return sub_1D5AAE928();
}

uint64_t sub_1D5985CD4()
{
  sub_1D5985DDC();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for MediaUserAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1D5985D6C + 4 * byte_1D5AD17E6[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1D5985DA0 + 4 * byte_1D5AD17E1[v4]))();
}

uint64_t sub_1D5985DA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5985DA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5985DB0);
  return result;
}

uint64_t sub_1D5985DBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5985DC4);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1D5985DC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5985DD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1D5985DDC()
{
  unint64_t result;

  result = qword_1EFF4E7D8;
  if (!qword_1EFF4E7D8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MediaUserAction, &type metadata for MediaUserAction);
    atomic_store(result, (unint64_t *)&qword_1EFF4E7D8);
  }
  return result;
}

void MediaData.mediaType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *MediaData.mediaType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*MediaData.mediaType.modify())()
{
  return nullsub_1;
}

uint64_t MediaData.mediaID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaData.mediaID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*MediaData.mediaID.modify())()
{
  return nullsub_1;
}

unint64_t MediaData.mediaDuration.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32);
}

uint64_t MediaData.mediaDuration.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 24) = result;
  *(_BYTE *)(v1 + 28) = BYTE4(result) & 1;
  return result;
}

uint64_t (*MediaData.mediaDuration.modify())()
{
  return nullsub_1;
}

_BYTE *MediaData.init(mediaType:mediaID:mediaDuration:)@<X0>(_BYTE *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_BYTE *)a5 = *result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_DWORD *)(a5 + 24) = a4;
  *(_BYTE *)(a5 + 28) = BYTE4(a4) & 1;
  return result;
}

uint64_t sub_1D5985F14()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x4449616964656DLL;
  if (*v0 != 1)
    v1 = 0x727544616964656DLL;
  if (*v0)
    return v1;
  else
    return 0x707954616964656DLL;
}

uint64_t sub_1D5985F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D598680C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5985FA4()
{
  sub_1D5986180();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5985FCC()
{
  sub_1D5986180();
  return sub_1D5AAEEE0();
}

uint64_t MediaData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  sub_1D59863F0(0, &qword_1ED9CD700, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  v9 = *v1;
  v10 = *((_QWORD *)v1 + 1);
  v15 = *((_QWORD *)v1 + 2);
  v16 = v10;
  v14 = *((unsigned int *)v1 + 6);
  HIDWORD(v13) = v1[28];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5986180();
  sub_1D5AAEEC8();
  v21 = v9;
  v20 = 0;
  sub_1D59861C4();
  sub_1D5AAED6C();
  if (!v2)
  {
    v11 = BYTE4(v13);
    v19 = 1;
    sub_1D5AAED3C();
    v18 = 2;
    v17 = v11;
    sub_1D5AAED24();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D5986180()
{
  unint64_t result;

  result = qword_1ED9CD660;
  if (!qword_1ED9CD660)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD1A90, &type metadata for MediaData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD660);
  }
  return result;
}

unint64_t sub_1D59861C4()
{
  unint64_t result;

  result = qword_1ED9CD050;
  if (!qword_1ED9CD050)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MediaType, &type metadata for MediaType);
    atomic_store(result, (unint64_t *)&qword_1ED9CD050);
  }
  return result;
}

uint64_t MediaData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  int v18;
  char v19;
  char v20;
  char v21;
  unsigned __int8 v22;

  sub_1D59863F0(0, &qword_1EFF4E7E0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5986180();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = 0;
  sub_1D598644C();
  sub_1D5AAECD0();
  v10 = v22;
  v20 = 1;
  v11 = sub_1D5AAECA0();
  v13 = v12;
  v17 = v11;
  v18 = v10;
  v19 = 2;
  swift_bridgeObjectRetain();
  v14 = sub_1D5AAEC88();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_BYTE *)a2 = v18;
  *(_QWORD *)(a2 + 8) = v17;
  *(_QWORD *)(a2 + 16) = v13;
  *(_DWORD *)(a2 + 24) = v14;
  *(_BYTE *)(a2 + 28) = BYTE4(v14) & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1D59863F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5986180();
    v7 = a3(a1, &type metadata for MediaData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D598644C()
{
  unint64_t result;

  result = qword_1EFF4E7E8;
  if (!qword_1EFF4E7E8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MediaType, &type metadata for MediaType);
    atomic_store(result, (unint64_t *)&qword_1EFF4E7E8);
  }
  return result;
}

uint64_t sub_1D5986498@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaData.init(from:)(a1, a2);
}

uint64_t sub_1D59864AC(_QWORD *a1)
{
  return MediaData.encode(to:)(a1);
}

uint64_t initializeWithCopy for MediaData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MediaData(uint64_t a1, uint64_t a2)
{
  int v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = v4;
  return a1;
}

__n128 __swift_memcpy29_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MediaData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 29))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 29) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 29) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaData()
{
  return &type metadata for MediaData;
}

uint64_t storeEnumTagSinglePayload for MediaData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D59866B4 + 4 * byte_1D5AD191D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D59866E8 + 4 * byte_1D5AD1918[v4]))();
}

uint64_t sub_1D59866E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59866F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59866F8);
  return result;
}

uint64_t sub_1D5986704(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D598670CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5986710(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5986718(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaData.CodingKeys()
{
  return &type metadata for MediaData.CodingKeys;
}

unint64_t sub_1D5986738()
{
  unint64_t result;

  result = qword_1EFF4E7F0;
  if (!qword_1EFF4E7F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD1A68, &type metadata for MediaData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E7F0);
  }
  return result;
}

unint64_t sub_1D5986780()
{
  unint64_t result;

  result = qword_1ED9CD670;
  if (!qword_1ED9CD670)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD19D8, &type metadata for MediaData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD670);
  }
  return result;
}

unint64_t sub_1D59867C8()
{
  unint64_t result;

  result = qword_1ED9CD668;
  if (!qword_1ED9CD668)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD1A00, &type metadata for MediaData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD668);
  }
  return result;
}

uint64_t sub_1D598680C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x707954616964656DLL && a2 == 0xE900000000000065;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449616964656DLL && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x727544616964656DLL && a2 == 0xED00006E6F697461)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t SportsAddFavoritesSyncData.addedCount.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t SportsAddFavoritesSyncData.addedCount.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*SportsAddFavoritesSyncData.addedCount.modify())()
{
  return nullsub_1;
}

uint64_t SportsAddFavoritesSyncData.init(addedCount:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1D59869B8()
{
  return 0x756F436465646461;
}

uint64_t sub_1D59869D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x756F436465646461 && a2 == 0xEA0000000000746ELL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5986A74()
{
  sub_1D5986BB4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5986A9C()
{
  sub_1D5986BB4();
  return sub_1D5AAEEE0();
}

uint64_t SportsAddFavoritesSyncData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5986D18(0, &qword_1EFF4E7F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5986BB4();
  sub_1D5AAEEC8();
  sub_1D5AAED78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D5986BB4()
{
  unint64_t result;

  result = qword_1EFF4E800;
  if (!qword_1EFF4E800)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD1C60, &type metadata for SportsAddFavoritesSyncData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E800);
  }
  return result;
}

uint64_t SportsAddFavoritesSyncData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v12;

  sub_1D5986D18(0, &qword_1EFF4E808, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5986BB4();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECDC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5986D18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5986BB4();
    v7 = a3(a1, &type metadata for SportsAddFavoritesSyncData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5986D7C@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return SportsAddFavoritesSyncData.init(from:)(a1, a2);
}

uint64_t sub_1D5986D90(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5986D18(0, &qword_1EFF4E7F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5986BB4();
  sub_1D5AAEEC8();
  sub_1D5AAED78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for SportsAddFavoritesSyncData()
{
  return &type metadata for SportsAddFavoritesSyncData;
}

uint64_t storeEnumTagSinglePayload for SportsAddFavoritesSyncData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5986ED0 + 4 * byte_1D5AD1AE0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5986EF0 + 4 * byte_1D5AD1AE5[v4]))();
}

_BYTE *sub_1D5986ED0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5986EF0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5986EF8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5986F00(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5986F08(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5986F10(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsAddFavoritesSyncData.CodingKeys()
{
  return &type metadata for SportsAddFavoritesSyncData.CodingKeys;
}

unint64_t sub_1D5986F30()
{
  unint64_t result;

  result = qword_1EFF4E810;
  if (!qword_1EFF4E810)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD1C38, &type metadata for SportsAddFavoritesSyncData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E810);
  }
  return result;
}

unint64_t sub_1D5986F78()
{
  unint64_t result;

  result = qword_1EFF4E818;
  if (!qword_1EFF4E818)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD1BA8, &type metadata for SportsAddFavoritesSyncData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E818);
  }
  return result;
}

unint64_t sub_1D5986FC0()
{
  unint64_t result;

  result = qword_1EFF4E820;
  if (!qword_1EFF4E820)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD1BD0, &type metadata for SportsAddFavoritesSyncData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E820);
  }
  return result;
}

NewsAnalytics::DebugData __swiftcall DebugData.init(name:)(NewsAnalytics::DebugData name)
{
  NewsAnalytics::DebugData *v1;

  *v1 = name;
  return name;
}

uint64_t DebugData.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DebugData.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DebugData.name.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D598707C()
{
  return 1701667182;
}

uint64_t sub_1D598708C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5987110()
{
  sub_1D5987254();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5987138()
{
  sub_1D5987254();
  return sub_1D5AAEEE0();
}

uint64_t DebugData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D59873BC(0, &qword_1EFF4E828, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5987254();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D5987254()
{
  unint64_t result;

  result = qword_1EFF4E830;
  if (!qword_1EFF4E830)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD1E20, &type metadata for DebugData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E830);
  }
  return result;
}

uint64_t DebugData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D59873BC(0, &qword_1EFF4E838, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5987254();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECA0();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D59873BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5987254();
    v7 = a3(a1, &type metadata for DebugData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5987418@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return DebugData.init(from:)(a1, a2);
}

uint64_t sub_1D598742C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D59873BC(0, &qword_1EFF4E828, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5987254();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t storeEnumTagSinglePayload for DebugData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5987560 + 4 * byte_1D5AD1CB0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5987580 + 4 * byte_1D5AD1CB5[v4]))();
}

_BYTE *sub_1D5987560(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5987580(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5987588(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5987590(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5987598(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59875A0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DebugData.CodingKeys()
{
  return &type metadata for DebugData.CodingKeys;
}

unint64_t sub_1D59875C0()
{
  unint64_t result;

  result = qword_1EFF4E840;
  if (!qword_1EFF4E840)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD1DF8, &type metadata for DebugData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E840);
  }
  return result;
}

unint64_t sub_1D5987608()
{
  unint64_t result;

  result = qword_1EFF4E848;
  if (!qword_1EFF4E848)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD1D68, &type metadata for DebugData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E848);
  }
  return result;
}

unint64_t sub_1D5987650()
{
  unint64_t result;

  result = qword_1EFF4E850;
  if (!qword_1EFF4E850)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD1D90, &type metadata for DebugData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E850);
  }
  return result;
}

NewsAnalytics::NotificationInterruptionLevel __swiftcall NotificationInterruptionLevel.init(_:)(UNNotificationInterruptionLevel a1)
{
  _BYTE *v1;
  char v2;

  if (a1 < 4)
    v2 = a1 + 1;
  else
    v2 = 0;
  *v1 = v2;
  return (char)a1;
}

NewsAnalytics::NotificationInterruptionLevel __swiftcall NotificationInterruptionLevel.init(_:)(UNNotificationInterruptionLevel_optional a1)
{
  _BYTE *v1;
  char v3;

  if (a1.value < 4 && !a1.is_nil)
    v3 = LOBYTE(a1.value) + 1;
  else
    v3 = 0;
  *v1 = v3;
  return a1.value;
}

uint64_t BannerAdData.isInteractive.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t BannerAdData.isInteractive.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*BannerAdData.isInteractive.modify())()
{
  return nullsub_1;
}

uint64_t BannerAdData.isDownloadable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t BannerAdData.isDownloadable.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*BannerAdData.isDownloadable.modify())()
{
  return nullsub_1;
}

uint64_t BannerAdData.isVideo.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t BannerAdData.isVideo.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*BannerAdData.isVideo.modify())()
{
  return nullsub_1;
}

NewsAnalytics::BannerAdData __swiftcall BannerAdData.init(isInteractive:isDownloadable:isVideo:)(Swift::Bool isInteractive, Swift::Bool isDownloadable, Swift::Bool isVideo)
{
  Swift::Bool *v3;
  NewsAnalytics::BannerAdData result;

  *v3 = isInteractive;
  v3[1] = isDownloadable;
  v3[2] = isVideo;
  result.isInteractive = isInteractive;
  return result;
}

uint64_t sub_1D598772C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6F6C6E776F447369;
  if (*v0 != 1)
    v1 = 0x6F656469567369;
  if (*v0)
    return v1;
  else
    return 0x617265746E497369;
}

uint64_t sub_1D59877A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5987F2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59877C4()
{
  sub_1D5987974();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59877EC()
{
  sub_1D5987974();
  return sub_1D5AAEEE0();
}

uint64_t BannerAdData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _DWORD v10[7];
  char v11;
  char v12;
  char v13;

  sub_1D5987B44(0, qword_1ED9D1650, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v10 - v7;
  v10[6] = *(unsigned __int8 *)(v1 + 1);
  v10[3] = *(unsigned __int8 *)(v1 + 2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5987974();
  sub_1D5AAEEC8();
  v13 = 0;
  sub_1D5AAED48();
  if (!v2)
  {
    v12 = 1;
    sub_1D5AAED48();
    v11 = 2;
    sub_1D5AAED48();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D5987974()
{
  unint64_t result;

  result = qword_1ED9D1628;
  if (!qword_1ED9D1628)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD1FEC, &type metadata for BannerAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D1628);
  }
  return result;
}

uint64_t BannerAdData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v11;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;

  sub_1D5987B44(0, &qword_1EFF4E858, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5987974();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v17 = 0;
    v10 = sub_1D5AAECAC();
    v16 = 1;
    v11 = sub_1D5AAECAC();
    v15 = 2;
    v13 = sub_1D5AAECAC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10 & 1;
    a2[1] = v11 & 1;
    a2[2] = v13 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5987B44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5987974();
    v7 = a3(a1, &type metadata for BannerAdData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5987BA4()
{
  unint64_t result;

  result = qword_1ED9D1648;
  if (!qword_1ED9D1648)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for BannerAdData, &type metadata for BannerAdData);
    atomic_store(result, (unint64_t *)&qword_1ED9D1648);
  }
  return result;
}

unint64_t sub_1D5987BEC()
{
  unint64_t result;

  result = qword_1ED9D1640;
  if (!qword_1ED9D1640)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for BannerAdData, &type metadata for BannerAdData);
    atomic_store(result, (unint64_t *)&qword_1ED9D1640);
  }
  return result;
}

uint64_t sub_1D5987C30@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return BannerAdData.init(from:)(a1, a2);
}

uint64_t sub_1D5987C44(_QWORD *a1)
{
  return BannerAdData.encode(to:)(a1);
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for BannerAdData(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
  }
  v4 = *(unsigned __int8 *)a1;
  v5 = v4 >= 2;
  v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for BannerAdData(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554177) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFE)
    v3 = 0;
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
    *(_BYTE *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)result = a2 + 1;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

ValueMetadata *type metadata accessor for BannerAdData()
{
  return &type metadata for BannerAdData;
}

uint64_t storeEnumTagSinglePayload for BannerAdData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5987DD4 + 4 * byte_1D5AD1E75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5987E08 + 4 * byte_1D5AD1E70[v4]))();
}

uint64_t sub_1D5987E08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5987E10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5987E18);
  return result;
}

uint64_t sub_1D5987E24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5987E2CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5987E30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5987E38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BannerAdData.CodingKeys()
{
  return &type metadata for BannerAdData.CodingKeys;
}

unint64_t sub_1D5987E58()
{
  unint64_t result;

  result = qword_1EFF4E860;
  if (!qword_1EFF4E860)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD1FC4, &type metadata for BannerAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E860);
  }
  return result;
}

unint64_t sub_1D5987EA0()
{
  unint64_t result;

  result = qword_1ED9D1638;
  if (!qword_1ED9D1638)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD1F34, &type metadata for BannerAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D1638);
  }
  return result;
}

unint64_t sub_1D5987EE8()
{
  unint64_t result;

  result = qword_1ED9D1630;
  if (!qword_1ED9D1630)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD1F5C, &type metadata for BannerAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D1630);
  }
  return result;
}

uint64_t sub_1D5987F2C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x617265746E497369 && a2 == 0xED00006576697463;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6C6E776F447369 && a2 == 0xEE00656C62616461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F656469567369 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

NewsAnalytics::EventPath_optional __swiftcall EventPath.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsAnalytics::EventPath_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1D5AAEE08();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 45;
  switch(v3)
  {
    case 0:
      goto LABEL_47;
    case 1:
      v5 = 1;
      goto LABEL_47;
    case 2:
      v5 = 2;
      goto LABEL_47;
    case 3:
      v5 = 3;
      goto LABEL_47;
    case 4:
      v5 = 4;
      goto LABEL_47;
    case 5:
      v5 = 5;
      goto LABEL_47;
    case 6:
      v5 = 6;
      goto LABEL_47;
    case 7:
      v5 = 7;
      goto LABEL_47;
    case 8:
      v5 = 8;
      goto LABEL_47;
    case 9:
      v5 = 9;
      goto LABEL_47;
    case 10:
      v5 = 10;
      goto LABEL_47;
    case 11:
      v5 = 11;
      goto LABEL_47;
    case 12:
      v5 = 12;
      goto LABEL_47;
    case 13:
      v5 = 13;
      goto LABEL_47;
    case 14:
      v5 = 14;
      goto LABEL_47;
    case 15:
      v5 = 15;
      goto LABEL_47;
    case 16:
      v5 = 16;
      goto LABEL_47;
    case 17:
      v5 = 17;
      goto LABEL_47;
    case 18:
      v5 = 18;
      goto LABEL_47;
    case 19:
      v5 = 19;
      goto LABEL_47;
    case 20:
      v5 = 20;
      goto LABEL_47;
    case 21:
      v5 = 21;
      goto LABEL_47;
    case 22:
      v5 = 22;
      goto LABEL_47;
    case 23:
      v5 = 23;
      goto LABEL_47;
    case 24:
      v5 = 24;
      goto LABEL_47;
    case 25:
      v5 = 25;
      goto LABEL_47;
    case 26:
      v5 = 26;
      goto LABEL_47;
    case 27:
      v5 = 27;
      goto LABEL_47;
    case 28:
      v5 = 28;
      goto LABEL_47;
    case 29:
      v5 = 29;
      goto LABEL_47;
    case 30:
      v5 = 30;
      goto LABEL_47;
    case 31:
      v5 = 31;
      goto LABEL_47;
    case 32:
      v5 = 32;
      goto LABEL_47;
    case 33:
      v5 = 33;
      goto LABEL_47;
    case 34:
      v5 = 34;
      goto LABEL_47;
    case 35:
      v5 = 35;
      goto LABEL_47;
    case 36:
      v5 = 36;
      goto LABEL_47;
    case 37:
      v5 = 37;
      goto LABEL_47;
    case 38:
      v5 = 38;
      goto LABEL_47;
    case 39:
      v5 = 39;
      goto LABEL_47;
    case 40:
      v5 = 40;
      goto LABEL_47;
    case 41:
      v5 = 41;
      goto LABEL_47;
    case 42:
      v5 = 42;
      goto LABEL_47;
    case 43:
      v5 = 43;
      goto LABEL_47;
    case 44:
      v5 = 44;
LABEL_47:
      v6 = v5;
      break;
    case 45:
      break;
    case 46:
      v6 = 46;
      break;
    case 47:
      v6 = 47;
      break;
    case 48:
      v6 = 48;
      break;
    case 49:
      v6 = 49;
      break;
    case 50:
      v6 = 50;
      break;
    case 51:
      v6 = 51;
      break;
    case 52:
      v6 = 52;
      break;
    case 53:
      v6 = 53;
      break;
    case 54:
      v6 = 54;
      break;
    case 55:
      v6 = 55;
      break;
    case 56:
      v6 = 56;
      break;
    case 57:
      v6 = 57;
      break;
    case 58:
      v6 = 58;
      break;
    case 59:
      v6 = 59;
      break;
    case 60:
      v6 = 60;
      break;
    case 61:
      v6 = 61;
      break;
    case 62:
      v6 = 62;
      break;
    default:
      v6 = 63;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t sub_1D5988334(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A352D0(*a1, *a2);
}

unint64_t sub_1D5988344()
{
  unint64_t result;

  result = qword_1EFF4E868;
  if (!qword_1EFF4E868)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EventPath, &type metadata for EventPath);
    atomic_store(result, (unint64_t *)&qword_1EFF4E868);
  }
  return result;
}

uint64_t sub_1D5988388()
{
  sub_1D5AAEE80();
  EventPath.rawValue.getter();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D59883EC()
{
  EventPath.rawValue.getter();
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D598843C()
{
  sub_1D5AAEE80();
  EventPath.rawValue.getter();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::EventPath_optional sub_1D598849C(Swift::String *a1)
{
  return EventPath.init(rawValue:)(*a1);
}

uint64_t sub_1D59884A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = EventPath.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D59884CC()
{
  sub_1D59886C0();
  return sub_1D5AAE928();
}

uint64_t sub_1D5988528()
{
  sub_1D59886C0();
  return sub_1D5AAE91C();
}

uint64_t getEnumTagSinglePayload for EventPath(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xC2)
    goto LABEL_17;
  if (a2 + 62 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 62) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 62;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 62;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 62;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x3F;
  v8 = v6 - 63;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EventPath(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 62 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 62) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xC2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xC1)
    return ((uint64_t (*)(void))((char *)&loc_1D5988650 + 4 * byte_1D5AD20FE[v4]))();
  *a1 = a2 + 62;
  return ((uint64_t (*)(void))((char *)sub_1D5988684 + 4 * byte_1D5AD20F9[v4]))();
}

uint64_t sub_1D5988684(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D598868C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5988694);
  return result;
}

uint64_t sub_1D59886A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59886A8);
  *(_BYTE *)result = a2 + 62;
  return result;
}

uint64_t sub_1D59886AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59886B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1D59886C0()
{
  unint64_t result;

  result = qword_1EFF4E870;
  if (!qword_1EFF4E870)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EventPath, &type metadata for EventPath);
    atomic_store(result, (unint64_t *)&qword_1EFF4E870);
  }
  return result;
}

void AudioEngagementOriginationData.audioEngagementOrigin.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AudioEngagementOriginationData.audioEngagementOrigin.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AudioEngagementOriginationData.audioEngagementOrigin.modify())()
{
  return nullsub_1;
}

NewsAnalytics::AudioEngagementOriginationData __swiftcall AudioEngagementOriginationData.init(audioEngagementOrigin:)(NewsAnalytics::AudioEngagementOriginationData audioEngagementOrigin)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)audioEngagementOrigin.audioEngagementOrigin;
  return audioEngagementOrigin;
}

unint64_t sub_1D5988738()
{
  return 0xD000000000000015;
}

uint64_t sub_1D5988754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5988DA0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D598877C()
{
  sub_1D59888D0();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59887A4()
{
  sub_1D59888D0();
  return sub_1D5AAEEE0();
}

uint64_t AudioEngagementOriginationData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D5988A90(0, &qword_1EFF4E878, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59888D0();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D5988914();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D59888D0()
{
  unint64_t result;

  result = qword_1EFF4E880;
  if (!qword_1EFF4E880)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD2494, &type metadata for AudioEngagementOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E880);
  }
  return result;
}

unint64_t sub_1D5988914()
{
  unint64_t result;

  result = qword_1EFF4E888;
  if (!qword_1EFF4E888)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AudioEngagementOrigin, &type metadata for AudioEngagementOrigin);
    atomic_store(result, (unint64_t *)&qword_1EFF4E888);
  }
  return result;
}

uint64_t AudioEngagementOriginationData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D5988A90(0, &qword_1EFF4E890, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59888D0();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5988AEC();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5988A90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59888D0();
    v7 = a3(a1, &type metadata for AudioEngagementOriginationData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5988AEC()
{
  unint64_t result;

  result = qword_1EFF4E898;
  if (!qword_1EFF4E898)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AudioEngagementOrigin, &type metadata for AudioEngagementOrigin);
    atomic_store(result, (unint64_t *)&qword_1EFF4E898);
  }
  return result;
}

uint64_t sub_1D5988B38@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return AudioEngagementOriginationData.init(from:)(a1, a2);
}

uint64_t sub_1D5988B4C(_QWORD *a1)
{
  return AudioEngagementOriginationData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for AudioEngagementOriginationData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1D5988BAC + 4 * byte_1D5AD2305[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1D5988BE0 + 4 * byte_1D5AD2300[v4]))();
}

uint64_t sub_1D5988BE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5988BE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5988BF0);
  return result;
}

uint64_t sub_1D5988BFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5988C04);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1D5988C08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5988C10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementOriginationData()
{
  return &type metadata for AudioEngagementOriginationData;
}

uint64_t storeEnumTagSinglePayload for AudioEngagementOriginationData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5988C6C + 4 * byte_1D5AD230A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5988C8C + 4 * byte_1D5AD230F[v4]))();
}

_BYTE *sub_1D5988C6C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5988C8C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5988C94(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5988C9C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5988CA4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5988CAC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementOriginationData.CodingKeys()
{
  return &type metadata for AudioEngagementOriginationData.CodingKeys;
}

unint64_t sub_1D5988CCC()
{
  unint64_t result;

  result = qword_1EFF4E8A0;
  if (!qword_1EFF4E8A0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD246C, &type metadata for AudioEngagementOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E8A0);
  }
  return result;
}

unint64_t sub_1D5988D14()
{
  unint64_t result;

  result = qword_1EFF4E8A8;
  if (!qword_1EFF4E8A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD23DC, &type metadata for AudioEngagementOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E8A8);
  }
  return result;
}

unint64_t sub_1D5988D5C()
{
  unint64_t result;

  result = qword_1EFF4E8B0;
  if (!qword_1EFF4E8B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD2404, &type metadata for AudioEngagementOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E8B0);
  }
  return result;
}

uint64_t sub_1D5988DA0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AF0EF0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t AdSizeData.width.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t AdSizeData.width.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*AdSizeData.width.modify())()
{
  return nullsub_1;
}

uint64_t AdSizeData.height.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4);
}

uint64_t AdSizeData.height.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*AdSizeData.height.modify())()
{
  return nullsub_1;
}

uint64_t AdSizeData.init(width:height:)@<X0>(uint64_t result@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_1D5988E6C()
{
  _BYTE *v0;

  if (*v0)
    return 0x746867696568;
  else
    return 0x6874646977;
}

uint64_t sub_1D5988EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59893FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5988EC4()
{
  sub_1D5989038();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5988EEC()
{
  sub_1D5989038();
  return sub_1D5AAEEE0();
}

uint64_t AdSizeData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  int v11;
  char v12;
  char v13;

  sub_1D59891CC(0, &qword_1ED9CE178, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v10 - v7;
  v11 = *(_DWORD *)(v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5989038();
  sub_1D5AAEEC8();
  v13 = 0;
  sub_1D5AAED78();
  if (!v2)
  {
    v12 = 1;
    sub_1D5AAED78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D5989038()
{
  unint64_t result;

  result = qword_1ED9CD9F8;
  if (!qword_1ED9CD9F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD2658, &type metadata for AdSizeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD9F8);
  }
  return result;
}

uint64_t AdSizeData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v12;
  uint64_t v13;
  char v14;
  char v15;

  sub_1D59891CC(0, &qword_1EFF4E8B8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5989038();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v15 = 0;
    v10 = sub_1D5AAECDC();
    v14 = 1;
    v12 = sub_1D5AAECDC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D59891CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5989038();
    v7 = a3(a1, &type metadata for AdSizeData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5989230@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return AdSizeData.init(from:)(a1, a2);
}

uint64_t sub_1D5989244(_QWORD *a1)
{
  return AdSizeData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for AdSizeData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D59892A4 + 4 * byte_1D5AD24E9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D59892D8 + 4 * byte_1D5AD24E4[v4]))();
}

uint64_t sub_1D59892D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59892E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59892E8);
  return result;
}

uint64_t sub_1D59892F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59892FCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5989300(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5989308(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdSizeData.CodingKeys()
{
  return &type metadata for AdSizeData.CodingKeys;
}

unint64_t sub_1D5989328()
{
  unint64_t result;

  result = qword_1EFF4E8C0;
  if (!qword_1EFF4E8C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD2630, &type metadata for AdSizeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E8C0);
  }
  return result;
}

unint64_t sub_1D5989370()
{
  unint64_t result;

  result = qword_1ED9CDA08;
  if (!qword_1ED9CDA08)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD25A0, &type metadata for AdSizeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDA08);
  }
  return result;
}

unint64_t sub_1D59893B8()
{
  unint64_t result;

  result = qword_1ED9CDA00;
  if (!qword_1ED9CDA00)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD25C8, &type metadata for AdSizeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDA00);
  }
  return result;
}

uint64_t sub_1D59893FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6874646977 && a2 == 0xE500000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

NewsAnalytics::UserChannelContextData __swiftcall UserChannelContextData.init(isFollowing:isBlocked:paidSubscriptionStatus:paidSubscriptionOrigin:)(Swift::Bool isFollowing, Swift::Bool isBlocked, NewsAnalytics::SubscriptionStatus paidSubscriptionStatus, NewsAnalytics::SubscriptionOrigin paidSubscriptionOrigin)
{
  Swift::Bool *v4;
  char v5;
  char v6;
  NewsAnalytics::UserChannelContextData result;

  v5 = *(_BYTE *)paidSubscriptionStatus;
  v6 = *(_BYTE *)paidSubscriptionOrigin;
  *v4 = isFollowing;
  v4[1] = isBlocked;
  v4[2] = v5;
  v4[3] = v6;
  result.isFollowing = isFollowing;
  return result;
}

uint64_t UserChannelContextData.isFollowing.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t UserChannelContextData.isFollowing.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*UserChannelContextData.isFollowing.modify())()
{
  return nullsub_1;
}

uint64_t UserChannelContextData.isBlocked.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t UserChannelContextData.isBlocked.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*UserChannelContextData.isBlocked.modify())()
{
  return nullsub_1;
}

void UserChannelContextData.paidSubscriptionStatus.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 2);
}

_BYTE *UserChannelContextData.paidSubscriptionStatus.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = *result;
  return result;
}

uint64_t (*UserChannelContextData.paidSubscriptionStatus.modify())()
{
  return nullsub_1;
}

void UserChannelContextData.paidSubscriptionOrigin.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 3);
}

_BYTE *UserChannelContextData.paidSubscriptionOrigin.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = *result;
  return result;
}

uint64_t (*UserChannelContextData.paidSubscriptionOrigin.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5989588()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59895C0 + 4 * byte_1D5AD26B0[*v0]))(0x776F6C6C6F467369, 0xEB00000000676E69);
}

uint64_t sub_1D59895C0()
{
  return 0x656B636F6C427369;
}

unint64_t sub_1D59895DC()
{
  return 0xD000000000000016;
}

uint64_t sub_1D5989604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5989E50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5989628()
{
  sub_1D598982C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5989650()
{
  sub_1D598982C();
  return sub_1D5AAEEE0();
}

uint64_t UserChannelContextData.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  char v10;
  char v11;
  uint64_t v13;
  int v14;
  int v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  sub_1D5989AE8(0, &qword_1ED9CC948, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  v9 = v1[1];
  v14 = v1[2];
  v15 = v9;
  HIDWORD(v13) = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D598982C();
  sub_1D5AAEEC8();
  v21 = 0;
  sub_1D5AAED48();
  if (!v2)
  {
    v11 = BYTE4(v13);
    v10 = v14;
    v20 = 1;
    sub_1D5AAED48();
    v19 = v10;
    v18 = 2;
    sub_1D5989870();
    sub_1D5AAED6C();
    v17 = v11;
    v16 = 3;
    sub_1D59898B4();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D598982C()
{
  unint64_t result;

  result = qword_1ED9CAEF8;
  if (!qword_1ED9CAEF8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD283C, &type metadata for UserChannelContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CAEF8);
  }
  return result;
}

unint64_t sub_1D5989870()
{
  unint64_t result;

  result = qword_1ED9CA1C0;
  if (!qword_1ED9CA1C0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscriptionStatus, &type metadata for SubscriptionStatus);
    atomic_store(result, (unint64_t *)&qword_1ED9CA1C0);
  }
  return result;
}

unint64_t sub_1D59898B4()
{
  unint64_t result;

  result = qword_1ED9CA1A8;
  if (!qword_1ED9CA1A8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscriptionOrigin, &type metadata for SubscriptionOrigin);
    atomic_store(result, (unint64_t *)&qword_1ED9CA1A8);
  }
  return result;
}

uint64_t UserChannelContextData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v11;
  char v13;
  uint64_t v14;
  int v15;
  char v16;
  char v17;
  char v18;
  unsigned __int8 v19;
  char v20;
  char v21;

  sub_1D5989AE8(0, &qword_1ED9CC828, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D598982C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v21 = 0;
    v10 = sub_1D5AAECAC();
    v20 = 1;
    v11 = sub_1D5AAECAC();
    v18 = 2;
    sub_1D5989B44();
    sub_1D5AAECD0();
    v15 = v19;
    v16 = 3;
    sub_1D5989B88();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v13 = v17;
    *a2 = v10 & 1;
    a2[1] = v11 & 1;
    a2[2] = v15;
    a2[3] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5989AE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D598982C();
    v7 = a3(a1, &type metadata for UserChannelContextData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5989B44()
{
  unint64_t result;

  result = qword_1ED9CA1D0;
  if (!qword_1ED9CA1D0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscriptionStatus, &type metadata for SubscriptionStatus);
    atomic_store(result, (unint64_t *)&qword_1ED9CA1D0);
  }
  return result;
}

unint64_t sub_1D5989B88()
{
  unint64_t result;

  result = qword_1ED9CA1B8;
  if (!qword_1ED9CA1B8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscriptionOrigin, &type metadata for SubscriptionOrigin);
    atomic_store(result, (unint64_t *)&qword_1ED9CA1B8);
  }
  return result;
}

uint64_t sub_1D5989BD4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return UserChannelContextData.init(from:)(a1, a2);
}

uint64_t sub_1D5989BE8(_QWORD *a1)
{
  return UserChannelContextData.encode(to:)(a1);
}

_DWORD *__swift_memcpy4_1(_DWORD *result, _DWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for UserChannelContextData(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[4])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for UserChannelContextData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 4) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for UserChannelContextData()
{
  return &type metadata for UserChannelContextData;
}

uint64_t storeEnumTagSinglePayload for UserChannelContextData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D5989CF8 + 4 * byte_1D5AD26B9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D5989D2C + 4 * byte_1D5AD26B4[v4]))();
}

uint64_t sub_1D5989D2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5989D34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5989D3CLL);
  return result;
}

uint64_t sub_1D5989D48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5989D50);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D5989D54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5989D5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserChannelContextData.CodingKeys()
{
  return &type metadata for UserChannelContextData.CodingKeys;
}

unint64_t sub_1D5989D7C()
{
  unint64_t result;

  result = qword_1EFF4E8C8;
  if (!qword_1EFF4E8C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD2814, &type metadata for UserChannelContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E8C8);
  }
  return result;
}

unint64_t sub_1D5989DC4()
{
  unint64_t result;

  result = qword_1ED9CAF08;
  if (!qword_1ED9CAF08)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD2784, &type metadata for UserChannelContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CAF08);
  }
  return result;
}

unint64_t sub_1D5989E0C()
{
  unint64_t result;

  result = qword_1ED9CAF00;
  if (!qword_1ED9CAF00)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD27AC, &type metadata for UserChannelContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CAF00);
  }
  return result;
}

uint64_t sub_1D5989E50(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x776F6C6C6F467369 && a2 == 0xEB00000000676E69;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656B636F6C427369 && a2 == 0xE900000000000064 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AF0F10 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AF0F30)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t type metadata accessor for AppSessionStartEventQueryItemsGenerator()
{
  return objc_opt_self();
}

uint64_t sub_1D598A040(uint64_t a1)
{
  return sub_1D598A05C(a1);
}

uint64_t sub_1D598A05C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  sub_1D598A204();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D5AADAAC();
  MEMORY[0x1E0C80A78](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)v11 - v9, a1, v7);
  if ((swift_dynamicCast() & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1D598A2AC();
    sub_1D5AAD560();
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1D5AB0170;
    sub_1D5AAD53C();
  }
  else
  {
    sub_1D5820DDC();
    swift_allocError();
    swift_willThrow();
  }
  return v3;
}

void sub_1D598A204()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C70B0)
  {
    type metadata accessor for AppSessionStartEvent(255);
    sub_1D598A264();
    v0 = sub_1D5AADAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C70B0);
  }
}

unint64_t sub_1D598A264()
{
  unint64_t result;
  uint64_t started;

  result = qword_1ED9CA3C0;
  if (!qword_1ED9CA3C0)
  {
    started = type metadata accessor for AppSessionStartEvent(255);
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AppSessionStartEvent, started);
    atomic_store(result, (unint64_t *)&qword_1ED9CA3C0);
  }
  return result;
}

void sub_1D598A2AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CC9D0)
  {
    sub_1D5AAD560();
    v0 = sub_1D5AAEDB4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CC9D0);
  }
}

uint64_t sub_1D598A300()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADAB8();
  __swift_allocate_value_buffer(v0, qword_1EFF4E8D0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFF4E8D0);
  *(_QWORD *)v1 = 0x7364612E6D6F63;
  *(_QWORD *)(v1 + 8) = 0xE700000000000000;
  *(_QWORD *)(v1 + 16) = 3;
  *(_BYTE *)(v1 + 24) = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t static VideoAdImpressionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF472D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4E8D0, a1);
}

uint64_t sub_1D598A3A0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADD34();
  __swift_allocate_value_buffer(v0, qword_1EFF4E8E8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFF4E8E8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0CF8378], v0);
}

uint64_t static VideoAdImpressionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF472E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4E8E8, a1);
}

uint64_t VideoAdImpressionEvent.adUserData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t VideoAdImpressionEvent.adUserData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*VideoAdImpressionEvent.adUserData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdImpressionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for VideoAdImpressionEvent, (uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t type metadata accessor for VideoAdImpressionEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4E970);
}

uint64_t VideoAdImpressionEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 20);
  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdImpressionEvent.eventData.modify())(_QWORD)
{
  type metadata accessor for VideoAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t VideoAdImpressionEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdImpressionEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdImpressionEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for VideoAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t VideoAdImpressionEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdImpressionEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdImpressionEvent.channelData.modify())(_QWORD)
{
  type metadata accessor for VideoAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t VideoAdImpressionEvent.videoAdData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 32);
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdImpressionEvent.videoAdData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 32);
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdImpressionEvent.videoAdData.modify())(_QWORD)
{
  type metadata accessor for VideoAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t VideoAdImpressionEvent.adPlacementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdImpressionEvent.adPlacementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdImpressionEvent.adPlacementData.modify())(_QWORD)
{
  type metadata accessor for VideoAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t VideoAdImpressionEvent.adFeedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdImpressionEvent.adFeedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdImpressionEvent.adFeedData.modify())(_QWORD)
{
  type metadata accessor for VideoAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t VideoAdImpressionEvent.adGroupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdImpressionEvent.adGroupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdImpressionEvent.adGroupData.modify())(_QWORD)
{
  type metadata accessor for VideoAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t VideoAdImpressionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for VideoAdImpressionEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v2, v14);
  v15 = a1 + v4[10];
  v16 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v16, v19);
}

uint64_t VideoAdImpressionEvent.Model.adUserData.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdImpressionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for VideoAdImpressionEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t type metadata accessor for VideoAdImpressionEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4EA18);
}

uint64_t VideoAdImpressionEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent.Model(0) + 24));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdImpressionEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdImpressionEvent.Model.videoAdData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent.Model(0) + 32);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_DWORD *)a1 = *(_DWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdImpressionEvent.Model.adPlacementData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent.Model(0) + 36));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdImpressionEvent.Model.adFeedData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for VideoAdImpressionEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t VideoAdImpressionEvent.Model.adGroupData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for VideoAdImpressionEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t VideoAdImpressionEvent.Model.init(adUserData:eventData:userBundleSubscriptionContextData:channelData:videoAdData:adPlacementData:adFeedData:adGroupData:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, int *a5@<X4>, uint64_t *a6@<X5>, char *a7@<X6>, char *a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  int *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;
  _QWORD *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;

  v11 = a1[1];
  v12 = *a3;
  v13 = *((_QWORD *)a3 + 1);
  v14 = *((_QWORD *)a3 + 2);
  v15 = a3[24];
  v16 = a3[25];
  v17 = *((_QWORD *)a3 + 4);
  v26 = a3[48];
  v33 = *a4;
  v32 = a4[1];
  v31 = *((_BYTE *)a4 + 16);
  v30 = *((_BYTE *)a4 + 17);
  v29 = a4[3];
  v27 = *((_QWORD *)a3 + 5);
  v28 = a4[4];
  v36 = *a5;
  v34 = *((_QWORD *)a5 + 2);
  v35 = *((_QWORD *)a5 + 1);
  v37 = a6[1];
  v38 = *a6;
  v39 = *a7;
  v40 = *a8;
  *a9 = *a1;
  a9[1] = v11;
  v18 = (int *)type metadata accessor for VideoAdImpressionEvent.Model(0);
  v19 = (char *)a9 + v18[5];
  v20 = sub_1D5AADF98();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a2, v20);
  v22 = (char *)a9 + v18[6];
  *v22 = v12;
  *((_QWORD *)v22 + 1) = v13;
  *((_QWORD *)v22 + 2) = v14;
  v22[24] = v15;
  v22[25] = v16;
  *((_QWORD *)v22 + 4) = v17;
  *((_QWORD *)v22 + 5) = v27;
  v22[48] = v26;
  v23 = (char *)a9 + v18[7];
  *(_QWORD *)v23 = v33;
  *((_QWORD *)v23 + 1) = v32;
  v23[16] = v31;
  v23[17] = v30;
  *((_QWORD *)v23 + 3) = v29;
  *((_QWORD *)v23 + 4) = v28;
  v24 = (char *)a9 + v18[8];
  *(_DWORD *)v24 = v36;
  *((_QWORD *)v24 + 1) = v35;
  *((_QWORD *)v24 + 2) = v34;
  v25 = (_QWORD *)((char *)a9 + v18[9]);
  *v25 = v38;
  v25[1] = v37;
  *((_BYTE *)a9 + v18[10]) = v39;
  *((_BYTE *)a9 + v18[11]) = v40;
  return result;
}

uint64_t sub_1D598B0F8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D598B130 + 4 * byte_1D5AD28D0[a1]))(0x6144726573556461, 0xEA00000000006174);
}

uint64_t sub_1D598B130()
{
  return 0x746144746E657665;
}

unint64_t sub_1D598B14C()
{
  return 0xD000000000000021;
}

uint64_t sub_1D598B168()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1D598B1E8()
{
  unsigned __int8 *v0;

  return sub_1D598B0F8(*v0);
}

uint64_t sub_1D598B1F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D598DE48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D598B214()
{
  sub_1D598B5C4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D598B23C()
{
  sub_1D598B5C4();
  return sub_1D5AAEEE0();
}

uint64_t VideoAdImpressionEvent.Model.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int *v11;
  char *v12;
  char v13;
  char v14;
  char v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  char v36;
  char v37;

  v3 = v1;
  sub_1D598BBBC(0, &qword_1EFF4E900, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D598B5C4();
  sub_1D5AAEEC8();
  v10 = v3[1];
  v32 = *v3;
  *(_QWORD *)&v33 = v10;
  v37 = 0;
  sub_1D57CBEFC();
  sub_1D5AAED6C();
  if (!v2)
  {
    v11 = (int *)type metadata accessor for VideoAdImpressionEvent.Model(0);
    LOBYTE(v32) = 1;
    sub_1D5AADF98();
    sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
    sub_1D5AAED6C();
    v12 = (char *)v3 + v11[6];
    v13 = v12[24];
    v14 = v12[25];
    v15 = v12[48];
    LOBYTE(v32) = *v12;
    v33 = *(_OWORD *)(v12 + 8);
    LOBYTE(v34) = v13;
    BYTE1(v34) = v14;
    v35 = *((_OWORD *)v12 + 2);
    v36 = v15;
    v37 = 2;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v16 = (char *)v3 + v11[7];
    v17 = *(_QWORD *)v16;
    v18 = *((_QWORD *)v16 + 1);
    v19 = v16[16];
    v20 = v16[17];
    v22 = *((_QWORD *)v16 + 3);
    v21 = *((_QWORD *)v16 + 4);
    v32 = v17;
    *(_QWORD *)&v33 = v18;
    BYTE8(v33) = v19;
    BYTE9(v33) = v20;
    v34 = v22;
    *(_QWORD *)&v35 = v21;
    v37 = 3;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v23 = (char *)v3 + v11[8];
    v24 = *(_DWORD *)v23;
    v26 = *((_QWORD *)v23 + 1);
    v25 = *((_QWORD *)v23 + 2);
    LODWORD(v32) = v24;
    *(_QWORD *)&v33 = v26;
    *((_QWORD *)&v33 + 1) = v25;
    v37 = 4;
    sub_1D58E61F4();
    sub_1D5AAED6C();
    v27 = (_QWORD *)((char *)v3 + v11[9]);
    v29 = *v27;
    v28 = v27[1];
    v32 = v29;
    *(_QWORD *)&v33 = v28;
    v37 = 5;
    sub_1D584FF8C();
    sub_1D5AAED6C();
    LOBYTE(v32) = *((_BYTE *)v3 + v11[10]);
    v37 = 6;
    sub_1D57CBF9C();
    sub_1D5AAED18();
    LOBYTE(v32) = *((_BYTE *)v3 + v11[11]);
    v37 = 7;
    sub_1D5850384();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D598B5C4()
{
  unint64_t result;

  result = qword_1EFF4E908;
  if (!qword_1EFF4E908)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD2B64, &type metadata for VideoAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4E908);
  }
  return result;
}

uint64_t VideoAdImpressionEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  char v19;
  char v20;
  char v21;
  char *v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  __int128 v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  char v46;
  char v47;

  v36 = a2;
  v4 = sub_1D5AADF98();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D598BBBC(0, &qword_1EFF4E910, MEMORY[0x1E0DED048]);
  v37 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v35 - v9;
  v41 = type metadata accessor for VideoAdImpressionEvent.Model(0);
  MEMORY[0x1E0C80A78](v41);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1D598B5C4();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  v47 = 0;
  sub_1D57CBEB8();
  v14 = v37;
  v15 = v10;
  sub_1D5AAECD0();
  v16 = v43;
  *(_QWORD *)v12 = v42;
  *((_QWORD *)v12 + 1) = v16;
  LOBYTE(v42) = 1;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v17 = v39;
  sub_1D5AAECD0();
  v18 = (int *)v41;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v12[*(int *)(v41 + 20)], v6, v17);
  v47 = 2;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v19 = v44;
  v20 = BYTE1(v44);
  v21 = v46;
  v22 = &v12[v18[6]];
  *v22 = v42;
  *(_OWORD *)(v22 + 8) = v43;
  v22[24] = v19;
  v22[25] = v20;
  *((_OWORD *)v22 + 2) = v45;
  v22[48] = v21;
  v47 = 3;
  sub_1D57CB874();
  sub_1D5AAECD0();
  v23 = v43;
  v24 = BYTE8(v43);
  v25 = BYTE9(v43);
  v26 = v44;
  v27 = v45;
  v28 = &v12[v18[7]];
  *(_QWORD *)v28 = v42;
  *((_QWORD *)v28 + 1) = v23;
  v28[16] = v24;
  v28[17] = v25;
  *((_QWORD *)v28 + 3) = v26;
  *((_QWORD *)v28 + 4) = v27;
  v47 = 4;
  sub_1D58E61B0();
  sub_1D5AAECD0();
  v29 = (uint64_t)v40;
  v30 = v43;
  v31 = &v12[v18[8]];
  *(_DWORD *)v31 = v42;
  *(_OWORD *)(v31 + 8) = v30;
  v47 = 5;
  sub_1D584FF48();
  sub_1D5AAECD0();
  v32 = v43;
  v33 = &v12[v18[9]];
  *(_QWORD *)v33 = v42;
  *((_QWORD *)v33 + 1) = v32;
  v47 = 6;
  sub_1D57CBF58();
  sub_1D5AAEC7C();
  v12[v18[10]] = v42;
  v47 = 7;
  sub_1D5850340();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v15, v14);
  v12[v18[11]] = v42;
  sub_1D598BC18((uint64_t)v12, v36);
  __swift_destroy_boxed_opaque_existential_1(v29);
  return sub_1D598BC5C((uint64_t)v12);
}

void sub_1D598BBBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D598B5C4();
    v7 = a3(a1, &type metadata for VideoAdImpressionEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D598BC18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VideoAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D598BC5C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for VideoAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D598BC98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return VideoAdImpressionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D598BCAC(_QWORD *a1)
{
  return VideoAdImpressionEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D598BCC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF472D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4E8D0, a1);
}

uint64_t sub_1D598BCE4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF472E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4E8E8, a1);
}

uint64_t sub_1D598BD08@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v4, v15);
  v16 = a2 + a1[10];
  v17 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v16, v17, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v17, v20);
}

uint64_t *initializeBufferWithCopyOfBuffer for VideoAdImpressionEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8D40();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for VideoAdImpressionEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

uint64_t initializeWithCopy for VideoAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for VideoAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for VideoAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for VideoAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoAdImpressionEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D598CDCC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8D40();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
                v8 = v19;
                v12 = *(_QWORD *)(v19 - 8);
                v13 = a3[11];
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for VideoAdImpressionEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D598D004(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8D40();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
                v10 = v21;
                v14 = *(_QWORD *)(v21 - 8);
                v15 = a4[11];
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D598D238()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1D579E208(319, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  if (v0 <= 0x3F)
  {
    sub_1D57A8D40();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
                if (v7 <= 0x3F)
                  swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for VideoAdImpressionEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADF98();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (char *)v4 + v13;
    v16 = (char *)a2 + v13;
    *v15 = *v16;
    v17 = *((_QWORD *)v16 + 2);
    *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
    *((_QWORD *)v15 + 2) = v17;
    *((_WORD *)v15 + 12) = *((_WORD *)v16 + 12);
    v18 = *((_QWORD *)v16 + 5);
    *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
    *((_QWORD *)v15 + 5) = v18;
    v15[48] = v16[48];
    v19 = (char *)v4 + v14;
    v20 = (char *)a2 + v14;
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    v19[16] = v20[16];
    v19[17] = v20[17];
    v22 = *((_QWORD *)v20 + 4);
    *((_QWORD *)v19 + 3) = *((_QWORD *)v20 + 3);
    *((_QWORD *)v19 + 4) = v22;
    v23 = a3[8];
    v24 = a3[9];
    v25 = (char *)v4 + v23;
    v26 = (char *)a2 + v23;
    *(_DWORD *)v25 = *(_DWORD *)v26;
    v27 = *((_QWORD *)v26 + 2);
    *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
    *((_QWORD *)v25 + 2) = v27;
    v28 = (_QWORD *)((char *)v4 + v24);
    v29 = (_QWORD *)((char *)a2 + v24);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = a3[11];
    *((_BYTE *)v4 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    *((_BYTE *)v4 + v31) = *((_BYTE *)a2 + v31);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

_QWORD *initializeWithCopy for VideoAdImpressionEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D5AADF98();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *v14 = *v15;
  v16 = *((_QWORD *)v15 + 2);
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  *((_QWORD *)v14 + 2) = v16;
  *((_WORD *)v14 + 12) = *((_WORD *)v15 + 12);
  v17 = *((_QWORD *)v15 + 5);
  *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
  *((_QWORD *)v14 + 5) = v17;
  v14[48] = v15[48];
  v18 = (char *)a1 + v13;
  v19 = (char *)a2 + v13;
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v20;
  v18[16] = v19[16];
  v18[17] = v19[17];
  v21 = *((_QWORD *)v19 + 4);
  *((_QWORD *)v18 + 3) = *((_QWORD *)v19 + 3);
  *((_QWORD *)v18 + 4) = v21;
  v22 = a3[8];
  v23 = a3[9];
  v24 = (char *)a1 + v22;
  v25 = (char *)a2 + v22;
  *(_DWORD *)v24 = *(_DWORD *)v25;
  v26 = *((_QWORD *)v25 + 2);
  *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
  *((_QWORD *)v24 + 2) = v26;
  v27 = (_QWORD *)((char *)a1 + v23);
  v28 = (_QWORD *)((char *)a2 + v23);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v30 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + v30) = *((_BYTE *)a2 + v30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for VideoAdImpressionEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D5AADF98();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *v11 = *((_BYTE *)a2 + v10);
  *((_QWORD *)v11 + 1) = *(_QWORD *)((char *)a2 + v10 + 8);
  *((_QWORD *)v11 + 2) = *(_QWORD *)((char *)a2 + v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[24] = v12[24];
  v11[25] = v12[25];
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  *((_QWORD *)v11 + 5) = *((_QWORD *)v12 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[48] = v12[48];
  v13 = a3[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)((char *)a2 + v13);
  *((_QWORD *)v14 + 1) = *(_QWORD *)((char *)a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[16] = v15[16];
  v14[17] = v15[17];
  *((_QWORD *)v14 + 3) = *((_QWORD *)v15 + 3);
  *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[9];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  return a1;
}

_OWORD *initializeWithTake for VideoAdImpressionEvent.Model(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  uint64_t v23;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D5AADF98();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
  v12[48] = v13[48];
  v15 = (char *)a1 + v11;
  v16 = (char *)a2 + v11;
  v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
  v18 = a3[8];
  v19 = a3[9];
  v20 = (char *)a1 + v18;
  v21 = (char *)a2 + v18;
  v22 = *(_OWORD *)v21;
  *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
  *(_OWORD *)v20 = v22;
  *(_OWORD *)((char *)a1 + v19) = *(_OWORD *)((char *)a2 + v19);
  v23 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + v23) = *((_BYTE *)a2 + v23);
  return a1;
}

_QWORD *assignWithTake for VideoAdImpressionEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D5AADF98();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *v12 = *((_BYTE *)a2 + v11);
  v14 = *(_QWORD *)((char *)a2 + v11 + 16);
  *((_QWORD *)v12 + 1) = *(_QWORD *)((char *)a2 + v11 + 8);
  *((_QWORD *)v12 + 2) = v14;
  swift_bridgeObjectRelease();
  v12[24] = v13[24];
  v12[25] = v13[25];
  v15 = *((_QWORD *)v13 + 5);
  *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
  *((_QWORD *)v12 + 5) = v15;
  swift_bridgeObjectRelease();
  v12[48] = v13[48];
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_QWORD *)((char *)a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)((char *)a2 + v16);
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v17[16] = v18[16];
  v17[17] = v18[17];
  v20 = *((_QWORD *)v18 + 4);
  *((_QWORD *)v17 + 3) = *((_QWORD *)v18 + 3);
  *((_QWORD *)v17 + 4) = v20;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  *(_DWORD *)v22 = *(_DWORD *)v23;
  v25 = *((_QWORD *)v23 + 1);
  v24 = *((_QWORD *)v23 + 2);
  *((_QWORD *)v22 + 1) = v25;
  *((_QWORD *)v22 + 2) = v24;
  swift_bridgeObjectRelease();
  v26 = a3[9];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  v31 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + v31) = *((_BYTE *)a2 + v31);
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoAdImpressionEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D598DB00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D5AADF98();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for VideoAdImpressionEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D598DB88(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1D5AADF98();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1D598DBFC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for VideoAdImpressionEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D598DCF0 + 4 * byte_1D5AD28DD[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D598DD24 + 4 * byte_1D5AD28D8[v4]))();
}

uint64_t sub_1D598DD24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D598DD2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D598DD34);
  return result;
}

uint64_t sub_1D598DD40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D598DD48);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D598DD4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D598DD54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoAdImpressionEvent.Model.CodingKeys()
{
  return &type metadata for VideoAdImpressionEvent.Model.CodingKeys;
}

unint64_t sub_1D598DD74()
{
  unint64_t result;

  result = qword_1EFF4EA68;
  if (!qword_1EFF4EA68)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD2B3C, &type metadata for VideoAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EA68);
  }
  return result;
}

unint64_t sub_1D598DDBC()
{
  unint64_t result;

  result = qword_1EFF4EA70;
  if (!qword_1EFF4EA70)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD2AAC, &type metadata for VideoAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EA70);
  }
  return result;
}

unint64_t sub_1D598DE04()
{
  unint64_t result;

  result = qword_1EFF4EA78;
  if (!qword_1EFF4EA78)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD2AD4, &type metadata for VideoAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EA78);
  }
  return result;
}

uint64_t sub_1D598DE48(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6144726573556461 && a2 == 0xEA00000000006174;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4464416F65646976 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D6563616C506461 && a2 == 0xEF61746144746E65 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6144646565466461 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x4470756F72476461 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1D598E200(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CD008, MEMORY[0x1E0CF8078]);
}

uint64_t static ArticleViewResumeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CD4C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CD008, a1);
}

uint64_t sub_1D598E240(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CD020, MEMORY[0x1E0CF8380]);
}

uint64_t static ArticleViewResumeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CD4D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CD020, a1);
}

uint64_t ArticleViewResumeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t ArticleViewResumeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ArticleViewResumeEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleViewResumeEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResumeEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for ArticleViewResumeEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C6C50);
}

uint64_t ArticleViewResumeEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResumeEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewResumeEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewResumeEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewResumeEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResumeEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewResumeEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResumeEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewResumeEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewResumeEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewResumeEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResumeEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewResumeEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResumeEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewResumeEvent.orientationData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewResumeEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewResumeEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResumeEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewResumeEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResumeEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewResumeEvent.articleData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewResumeEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewResumeEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResumeEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewResumeEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResumeEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewResumeEvent.channelData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewResumeEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewResumeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ArticleViewResumeEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v2, v14);
}

uint64_t ArticleViewResumeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ArticleViewResumeEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleViewResumeEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ArticleViewResumeEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C6BB0);
}

uint64_t ArticleViewResumeEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for ArticleViewResumeEvent.Model(0) + 24));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleViewResumeEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ArticleViewResumeEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t ArticleViewResumeEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResumeEvent.Model(0) + 32);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t ArticleViewResumeEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewResumeEvent.Model(0) + 36);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 ArticleViewResumeEvent.Model.init(eventData:viewData:userBundleSubscriptionContextData:orientationData:articleData:channelData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, __int16 *a4@<X3>, __int128 *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 result;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __n128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[23];

  v9 = *a2;
  v10 = a2[1];
  v11 = *((_WORD *)a2 + 8);
  v12 = *a3;
  v25 = *((_QWORD *)a3 + 2);
  v26 = *((_QWORD *)a3 + 1);
  v24 = a3[24];
  v13 = a3[25];
  v14 = *((_QWORD *)a3 + 4);
  v15 = *((_QWORD *)a3 + 5);
  v16 = a3[48];
  v27 = *a4;
  v40 = a5[6];
  *(_OWORD *)v41 = a5[7];
  *(_QWORD *)&v41[15] = *(_QWORD *)((char *)a5 + 127);
  v36 = a5[2];
  v37 = a5[3];
  v38 = a5[4];
  v39 = a5[5];
  v34 = *a5;
  v35 = (__n128)a5[1];
  v32 = a6[1];
  v33 = *a6;
  v30 = *((_BYTE *)a6 + 17);
  v31 = *((_BYTE *)a6 + 16);
  v28 = a6[4];
  v29 = a6[3];
  v17 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a7, a1, v17);
  v18 = (int *)type metadata accessor for ArticleViewResumeEvent.Model(0);
  v19 = a7 + v18[5];
  *(_QWORD *)v19 = v9;
  *(_QWORD *)(v19 + 8) = v10;
  *(_WORD *)(v19 + 16) = v11;
  v20 = a7 + v18[6];
  *(_BYTE *)v20 = v12;
  *(_QWORD *)(v20 + 8) = v26;
  *(_QWORD *)(v20 + 16) = v25;
  *(_BYTE *)(v20 + 24) = v24;
  *(_BYTE *)(v20 + 25) = v13;
  *(_QWORD *)(v20 + 32) = v14;
  *(_QWORD *)(v20 + 40) = v15;
  *(_BYTE *)(v20 + 48) = v16;
  *(_WORD *)(a7 + v18[7]) = v27;
  v21 = a7 + v18[8];
  *(_OWORD *)(v21 + 96) = v40;
  *(_OWORD *)(v21 + 112) = *(_OWORD *)v41;
  *(_QWORD *)(v21 + 127) = *(_QWORD *)&v41[15];
  *(_OWORD *)(v21 + 32) = v36;
  *(_OWORD *)(v21 + 48) = v37;
  *(_OWORD *)(v21 + 64) = v38;
  *(_OWORD *)(v21 + 80) = v39;
  result = v35;
  *(_OWORD *)v21 = v34;
  *(__n128 *)(v21 + 16) = v35;
  v23 = a7 + v18[9];
  *(_QWORD *)v23 = v33;
  *(_QWORD *)(v23 + 8) = v32;
  *(_BYTE *)(v23 + 16) = v31;
  *(_BYTE *)(v23 + 17) = v30;
  *(_QWORD *)(v23 + 24) = v29;
  *(_QWORD *)(v23 + 32) = v28;
  return result;
}

uint64_t sub_1D598ECEC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D598ED20 + 4 * byte_1D5AD2BC0[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D598ED20()
{
  return 0x6174614477656976;
}

unint64_t sub_1D598ED38()
{
  return 0xD000000000000021;
}

uint64_t sub_1D598ED54()
{
  return 0x7461746E6569726FLL;
}

uint64_t sub_1D598ED78()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D598EDAC()
{
  sub_1D598F0F4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D598EDD4()
{
  sub_1D598F0F4();
  return sub_1D5AAEEE0();
}

uint64_t ArticleViewResumeEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char v32;
  _BYTE v33[32];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[23];
  char v40;
  __int16 v41;

  v3 = v1;
  sub_1D598F6FC(0, &qword_1EFF4EA80, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D598F0F4();
  sub_1D5AAEEC8();
  v33[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for ArticleViewResumeEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    *(_QWORD *)v33 = v12;
    *(_QWORD *)&v33[8] = v13;
    *(_WORD *)&v33[16] = (_WORD)v11;
    LOBYTE(v41) = 1;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v14 = v3 + v10[6];
    v15 = *(_BYTE *)(v14 + 24);
    v16 = *(_BYTE *)(v14 + 25);
    v17 = *(_BYTE *)(v14 + 48);
    v33[0] = *(_BYTE *)v14;
    *(_OWORD *)&v33[8] = *(_OWORD *)(v14 + 8);
    v33[24] = v15;
    v33[25] = v16;
    v34 = *(_OWORD *)(v14 + 32);
    LOBYTE(v35) = v17;
    LOBYTE(v41) = 2;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v41 = *(_WORD *)(v3 + v10[7]);
    v40 = 3;
    sub_1D57CA4E4();
    sub_1D5AAED6C();
    v18 = v3 + v10[8];
    v19 = *(_OWORD *)(v18 + 112);
    v38 = *(_OWORD *)(v18 + 96);
    *(_OWORD *)v39 = v19;
    *(_QWORD *)&v39[15] = *(_QWORD *)(v18 + 127);
    v20 = *(_OWORD *)(v18 + 48);
    v34 = *(_OWORD *)(v18 + 32);
    v35 = v20;
    v21 = *(_OWORD *)(v18 + 80);
    v36 = *(_OWORD *)(v18 + 64);
    v37 = v21;
    v22 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)v33 = *(_OWORD *)v18;
    *(_OWORD *)&v33[16] = v22;
    v32 = 4;
    sub_1D57CB940();
    sub_1D5AAED6C();
    v23 = (uint64_t *)(v3 + v10[9]);
    v24 = *v23;
    v25 = v23[1];
    v26 = *((_BYTE *)v23 + 16);
    v27 = *((_BYTE *)v23 + 17);
    v29 = v23[3];
    v28 = v23[4];
    *(_QWORD *)v33 = v24;
    *(_QWORD *)&v33[8] = v25;
    v33[16] = v26;
    v33[17] = v27;
    *(_QWORD *)&v33[24] = v29;
    *(_QWORD *)&v34 = v28;
    v32 = 5;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D598F0F4()
{
  unint64_t result;

  result = qword_1EFF4EA88;
  if (!qword_1EFF4EA88)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD2E1C, &type metadata for ArticleViewResumeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EA88);
  }
  return result;
}

uint64_t ArticleViewResumeEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  _BYTE v49[32];
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  _OWORD v55[3];
  char *v56;

  v36 = a2;
  v3 = sub_1D5AADF98();
  v37 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v39 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D598F6FC(0, &qword_1EFF4EA90, MEMORY[0x1E0DED048]);
  v38 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - v7;
  v9 = (int *)type metadata accessor for ArticleViewResumeEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D598F0F4();
  v40 = v8;
  v12 = v56;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v14 = v37;
  v56 = v11;
  v49[0] = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v15 = v3;
  v16 = (uint64_t)v56;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v56, v39, v15);
  LOBYTE(v42) = 1;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v17 = *(_QWORD *)&v49[8];
  v18 = *(_WORD *)&v49[16];
  v19 = v16 + v9[5];
  *(_QWORD *)v19 = *(_QWORD *)v49;
  *(_QWORD *)(v19 + 8) = v17;
  *(_WORD *)(v19 + 16) = v18;
  LOBYTE(v42) = 2;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v20 = v49[24];
  v21 = v49[25];
  v22 = v51;
  v23 = v16 + v9[6];
  *(_BYTE *)v23 = v49[0];
  *(_OWORD *)(v23 + 8) = *(_OWORD *)&v49[8];
  *(_BYTE *)(v23 + 24) = v20;
  *(_BYTE *)(v23 + 25) = v21;
  *(_OWORD *)(v23 + 32) = v50;
  *(_BYTE *)(v23 + 48) = v22;
  LOBYTE(v42) = 3;
  sub_1D57CA4A0();
  sub_1D5AAECD0();
  *(_WORD *)(v16 + v9[7]) = *(_WORD *)v49;
  v48 = 4;
  sub_1D57CB8FC();
  sub_1D5AAECD0();
  v24 = v16 + MEMORY[0x20];
  v25 = v53;
  v26 = v55[0];
  *(_OWORD *)(v24 + 96) = v54;
  *(_OWORD *)(v24 + 112) = v26;
  *(_QWORD *)(v24 + 127) = *(_QWORD *)((char *)v55 + 15);
  v27 = v51;
  *(_OWORD *)(v24 + 32) = v50;
  *(_OWORD *)(v24 + 48) = v27;
  *(_OWORD *)(v24 + 64) = v52;
  *(_OWORD *)(v24 + 80) = v25;
  v28 = *(_OWORD *)&v49[16];
  *(_OWORD *)v24 = *(_OWORD *)v49;
  *(_OWORD *)(v24 + 16) = v28;
  v41 = 5;
  sub_1D57CB874();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v40, v38);
  v29 = v43;
  v30 = v44;
  v31 = v45;
  v32 = v46;
  v33 = v47;
  v34 = v16 + MEMORY[0x24];
  *(_QWORD *)v34 = v42;
  *(_QWORD *)(v34 + 8) = v29;
  *(_BYTE *)(v34 + 16) = v30;
  *(_BYTE *)(v34 + 17) = v31;
  *(_QWORD *)(v34 + 24) = v32;
  *(_QWORD *)(v34 + 32) = v33;
  sub_1D598F758(v16, v36);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1D598F79C(v16);
}

void sub_1D598F6FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D598F0F4();
    v7 = a3(a1, &type metadata for ArticleViewResumeEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D598F758(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArticleViewResumeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D598F79C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArticleViewResumeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D598F7D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleViewResumeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D598F7EC(_QWORD *a1)
{
  return ArticleViewResumeEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D598F800@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CD4C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CD008, a1);
}

uint64_t sub_1D598F824@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CD4D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CD020, a1);
}

uint64_t getEnumTagSinglePayload for ArticleViewResumeEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D598F854(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ArticleViewResumeEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D598FA04(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for ArticleViewResumeEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D598FBBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleViewResumeEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D598FC48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D598FCC4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ArticleViewResumeEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D598FDA8 + 4 * byte_1D5AD2BCB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D598FDDC + 4 * byte_1D5AD2BC6[v4]))();
}

uint64_t sub_1D598FDDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D598FDE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D598FDECLL);
  return result;
}

uint64_t sub_1D598FDF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D598FE00);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D598FE04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D598FE0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleViewResumeEvent.Model.CodingKeys()
{
  return &type metadata for ArticleViewResumeEvent.Model.CodingKeys;
}

unint64_t sub_1D598FE2C()
{
  unint64_t result;

  result = qword_1EFF4EA98;
  if (!qword_1EFF4EA98)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD2DF4, &type metadata for ArticleViewResumeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EA98);
  }
  return result;
}

unint64_t sub_1D598FE74()
{
  unint64_t result;

  result = qword_1EFF4EAA0;
  if (!qword_1EFF4EAA0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD2D64, &type metadata for ArticleViewResumeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EAA0);
  }
  return result;
}

unint64_t sub_1D598FEBC()
{
  unint64_t result;

  result = qword_1EFF4EAA8;
  if (!qword_1EFF4EAA8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD2D8C, &type metadata for ArticleViewResumeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EAA8);
  }
  return result;
}

void DownloadLocationData.location.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *DownloadLocationData.location.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*DownloadLocationData.location.modify())()
{
  return nullsub_1;
}

NewsAnalytics::DownloadLocationData __swiftcall DownloadLocationData.init(location:)(NewsAnalytics::DownloadLocationData location)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)location.location;
  return location;
}

uint64_t sub_1D598FF34()
{
  sub_1D5990088();
  return sub_1D5AAEED4();
}

uint64_t sub_1D598FF5C()
{
  sub_1D5990088();
  return sub_1D5AAEEE0();
}

uint64_t DownloadLocationData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D5990248(0, &qword_1EFF4EAB0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5990088();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D59900CC();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5990088()
{
  unint64_t result;

  result = qword_1EFF4EAB8;
  if (!qword_1EFF4EAB8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD2FF8, &type metadata for DownloadLocationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EAB8);
  }
  return result;
}

unint64_t sub_1D59900CC()
{
  unint64_t result;

  result = qword_1EFF4EAC0;
  if (!qword_1EFF4EAC0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DownloadLocation, &type metadata for DownloadLocation);
    atomic_store(result, (unint64_t *)&qword_1EFF4EAC0);
  }
  return result;
}

uint64_t DownloadLocationData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D5990248(0, &qword_1EFF4EAC8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5990088();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D59902A4();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5990248(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5990088();
    v7 = a3(a1, &type metadata for DownloadLocationData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D59902A4()
{
  unint64_t result;

  result = qword_1EFF4EAD0;
  if (!qword_1EFF4EAD0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DownloadLocation, &type metadata for DownloadLocation);
    atomic_store(result, (unint64_t *)&qword_1EFF4EAD0);
  }
  return result;
}

unint64_t sub_1D59902EC()
{
  unint64_t result;

  result = qword_1ED9CA480;
  if (!qword_1ED9CA480)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DownloadLocationData, &type metadata for DownloadLocationData);
    atomic_store(result, (unint64_t *)&qword_1ED9CA480);
  }
  return result;
}

unint64_t sub_1D5990334()
{
  unint64_t result;

  result = qword_1ED9CA478;
  if (!qword_1ED9CA478)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DownloadLocationData, &type metadata for DownloadLocationData);
    atomic_store(result, (unint64_t *)&qword_1ED9CA478);
  }
  return result;
}

uint64_t sub_1D5990378@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return DownloadLocationData.init(from:)(a1, a2);
}

uint64_t sub_1D599038C(_QWORD *a1)
{
  return DownloadLocationData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for DownloadLocationData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D59903EC + 4 * byte_1D5AD2E75[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5990420 + 4 * byte_1D5AD2E70[v4]))();
}

uint64_t sub_1D5990420(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5990428(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5990430);
  return result;
}

uint64_t sub_1D599043C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5990444);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5990448(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5990450(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DownloadLocationData()
{
  return &type metadata for DownloadLocationData;
}

uint64_t storeEnumTagSinglePayload for DownloadLocationData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D59904AC + 4 * byte_1D5AD2E7A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D59904CC + 4 * byte_1D5AD2E7F[v4]))();
}

_BYTE *sub_1D59904AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D59904CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59904D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59904DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59904E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59904EC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DownloadLocationData.CodingKeys()
{
  return &type metadata for DownloadLocationData.CodingKeys;
}

unint64_t sub_1D599050C()
{
  unint64_t result;

  result = qword_1EFF4EAD8;
  if (!qword_1EFF4EAD8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD2FD0, &type metadata for DownloadLocationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EAD8);
  }
  return result;
}

unint64_t sub_1D5990554()
{
  unint64_t result;

  result = qword_1EFF4EAE0;
  if (!qword_1EFF4EAE0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD2F40, &type metadata for DownloadLocationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EAE0);
  }
  return result;
}

unint64_t sub_1D599059C()
{
  unint64_t result;

  result = qword_1EFF4EAE8;
  if (!qword_1EFF4EAE8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD2F68, &type metadata for DownloadLocationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EAE8);
  }
  return result;
}

NewsAnalytics::ShareOriginationData __swiftcall ShareOriginationData.init(origin:)(NewsAnalytics::ShareOriginationData origin)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)origin.origin;
  return origin;
}

void ShareOriginationData.origin.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *ShareOriginationData.origin.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*ShareOriginationData.origin.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5990614()
{
  return 0x6E696769726FLL;
}

uint64_t sub_1D5990628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E696769726FLL && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D59906B4()
{
  sub_1D5990808();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59906DC()
{
  sub_1D5990808();
  return sub_1D5AAEEE0();
}

uint64_t ShareOriginationData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D59909C8(0, &qword_1EFF4EAF0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5990808();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D599084C();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5990808()
{
  unint64_t result;

  result = qword_1EFF4EAF8;
  if (!qword_1EFF4EAF8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD31D8, &type metadata for ShareOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EAF8);
  }
  return result;
}

unint64_t sub_1D599084C()
{
  unint64_t result;

  result = qword_1EFF4EB00;
  if (!qword_1EFF4EB00)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for OriginationType, &type metadata for OriginationType);
    atomic_store(result, (unint64_t *)&qword_1EFF4EB00);
  }
  return result;
}

uint64_t ShareOriginationData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D59909C8(0, &qword_1EFF4EB08, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5990808();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5990A24();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D59909C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5990808();
    v7 = a3(a1, &type metadata for ShareOriginationData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5990A24()
{
  unint64_t result;

  result = qword_1EFF4EB10;
  if (!qword_1EFF4EB10)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for OriginationType, &type metadata for OriginationType);
    atomic_store(result, (unint64_t *)&qword_1EFF4EB10);
  }
  return result;
}

uint64_t sub_1D5990A70@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ShareOriginationData.init(from:)(a1, a2);
}

uint64_t sub_1D5990A84(_QWORD *a1)
{
  return ShareOriginationData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for ShareOriginationData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5990AE4 + 4 * byte_1D5AD3055[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D5990B18 + 4 * byte_1D5AD3050[v4]))();
}

uint64_t sub_1D5990B18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5990B20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5990B28);
  return result;
}

uint64_t sub_1D5990B34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5990B3CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5990B40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5990B48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShareOriginationData()
{
  return &type metadata for ShareOriginationData;
}

uint64_t storeEnumTagSinglePayload for ShareOriginationData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5990BA4 + 4 * byte_1D5AD305A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5990BC4 + 4 * byte_1D5AD305F[v4]))();
}

_BYTE *sub_1D5990BA4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5990BC4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5990BCC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5990BD4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5990BDC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5990BE4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ShareOriginationData.CodingKeys()
{
  return &type metadata for ShareOriginationData.CodingKeys;
}

unint64_t sub_1D5990C04()
{
  unint64_t result;

  result = qword_1EFF4EB18;
  if (!qword_1EFF4EB18)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD31B0, &type metadata for ShareOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EB18);
  }
  return result;
}

unint64_t sub_1D5990C4C()
{
  unint64_t result;

  result = qword_1EFF4EB20;
  if (!qword_1EFF4EB20)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD3120, &type metadata for ShareOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EB20);
  }
  return result;
}

unint64_t sub_1D5990C94()
{
  unint64_t result;

  result = qword_1EFF4EB28;
  if (!qword_1EFF4EB28)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD3148, &type metadata for ShareOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EB28);
  }
  return result;
}

BOOL FCUserInfo.isSportsOnboarded.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_sportsOnboardingState) == (id)1;
}

NewsAnalytics::DeviceOrientation_optional __swiftcall DeviceOrientation.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::DeviceOrientation_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1D5990D58(char *a1)
{
  sub_1D5A3A8A8(*a1);
}

unint64_t sub_1D5990D68()
{
  unint64_t result;

  result = qword_1EFF4EB30;
  if (!qword_1EFF4EB30)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DeviceOrientation, &type metadata for DeviceOrientation);
    atomic_store(result, (unint64_t *)&qword_1EFF4EB30);
  }
  return result;
}

void sub_1D5990DAC()
{
  char *v0;

  sub_1D5AA9420(0, *v0);
}

void sub_1D5990DB8(uint64_t a1)
{
  char *v1;

  sub_1D5AA8558(a1, *v1);
}

void sub_1D5990DC0(uint64_t a1)
{
  char *v1;

  sub_1D5AA9420(a1, *v1);
}

NewsAnalytics::DeviceOrientation_optional sub_1D5990DC8(Swift::String *a1)
{
  return DeviceOrientation.init(rawValue:)(*a1);
}

uint64_t sub_1D5990DD4()
{
  sub_1D579F3B8();
  return sub_1D5AAE928();
}

uint64_t storeEnumTagSinglePayload for DeviceOrientation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D5990E7C + 4 * byte_1D5AD325C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D5990EB0 + 4 * byte_1D5AD3257[v4]))();
}

uint64_t sub_1D5990EB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5990EB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5990EC0);
  return result;
}

uint64_t sub_1D5990ECC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5990ED4);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D5990ED8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5990EE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceOrientation()
{
  return &type metadata for DeviceOrientation;
}

void JourneyMessageFailureReasonData.journeyMessageDisplayFailureReason.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *JourneyMessageFailureReasonData.journeyMessageDisplayFailureReason.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*JourneyMessageFailureReasonData.journeyMessageDisplayFailureReason.modify())()
{
  return nullsub_1;
}

uint64_t JourneyMessageFailureReasonData.triggerInactiveErrorDetail.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t JourneyMessageFailureReasonData.triggerInactiveErrorDetail.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*JourneyMessageFailureReasonData.triggerInactiveErrorDetail.modify())()
{
  return nullsub_1;
}

_BYTE *JourneyMessageFailureReasonData.init(journeyMessageDisplayFailureReason:triggerInactiveErrorDetail:)@<X0>(_BYTE *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_BYTE *)a3 = *result;
  *(_QWORD *)(a3 + 8) = a2;
  return result;
}

unint64_t sub_1D5990F74()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001ALL;
  else
    return 0xD000000000000022;
}

uint64_t sub_1D5990FB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59918DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5990FD8()
{
  sub_1D59911A0();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5991000()
{
  sub_1D59911A0();
  return sub_1D5AAEEE0();
}

uint64_t JourneyMessageFailureReasonData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  _QWORD v11[2];
  char v12;
  char v13;
  char v14;

  sub_1D599148C(0, &qword_1ED9D0DD0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v11 - v7;
  v9 = *v1;
  v11[0] = *((_QWORD *)v1 + 1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59911A0();
  sub_1D5AAEEC8();
  v14 = v9;
  v13 = 0;
  sub_1D59911E4();
  sub_1D5AAED6C();
  if (!v2)
  {
    v11[1] = v11[0];
    v12 = 1;
    sub_1D5991228();
    sub_1D599152C((unint64_t *)&unk_1ED9D0CA0, (uint64_t (*)(void))sub_1D599127C, MEMORY[0x1E0DEAF10]);
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D59911A0()
{
  unint64_t result;

  result = qword_1ED9D0AA0;
  if (!qword_1ED9D0AA0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD3524, &type metadata for JourneyMessageFailureReasonData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0AA0);
  }
  return result;
}

unint64_t sub_1D59911E4()
{
  unint64_t result;

  result = qword_1ED9D0AF0;
  if (!qword_1ED9D0AF0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for JourneyMessageDisplayFailureReason, &type metadata for JourneyMessageDisplayFailureReason);
    atomic_store(result, (unint64_t *)&qword_1ED9D0AF0);
  }
  return result;
}

void sub_1D5991228()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CE730)
  {
    v0 = sub_1D5AAE97C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CE730);
  }
}

unint64_t sub_1D599127C()
{
  unint64_t result;

  result = qword_1ED9D0B58;
  if (!qword_1ED9D0B58)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for JourneyTriggerInactiveErrorDetailData, &type metadata for JourneyTriggerInactiveErrorDetailData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0B58);
  }
  return result;
}

uint64_t JourneyMessageFailureReasonData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;
  _QWORD v13[2];
  char v14;
  char v15;
  char v16;

  sub_1D599148C(0, &qword_1EFF4EB38, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59911A0();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v15 = 0;
    sub_1D59914E8();
    sub_1D5AAECD0();
    v10 = v16;
    sub_1D5991228();
    v14 = 1;
    sub_1D599152C(&qword_1EFF4EB48, (uint64_t (*)(void))sub_1D5991590, MEMORY[0x1E0DEAF40]);
    sub_1D5AAEC7C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v13[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v12;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1D599148C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59911A0();
    v7 = a3(a1, &type metadata for JourneyMessageFailureReasonData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D59914E8()
{
  unint64_t result;

  result = qword_1EFF4EB40;
  if (!qword_1EFF4EB40)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for JourneyMessageDisplayFailureReason, &type metadata for JourneyMessageDisplayFailureReason);
    atomic_store(result, (unint64_t *)&qword_1EFF4EB40);
  }
  return result;
}

uint64_t sub_1D599152C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1D5991228();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1D8279680](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D5991590()
{
  unint64_t result;

  result = qword_1EFF4EB50;
  if (!qword_1EFF4EB50)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for JourneyTriggerInactiveErrorDetailData, &type metadata for JourneyTriggerInactiveErrorDetailData);
    atomic_store(result, (unint64_t *)&qword_1EFF4EB50);
  }
  return result;
}

uint64_t sub_1D59915DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return JourneyMessageFailureReasonData.init(from:)(a1, a2);
}

uint64_t sub_1D59915F0(_QWORD *a1)
{
  return JourneyMessageFailureReasonData.encode(to:)(a1);
}

uint64_t assignWithCopy for JourneyMessageFailureReasonData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for JourneyMessageFailureReasonData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JourneyMessageFailureReasonData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JourneyMessageFailureReasonData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for JourneyMessageFailureReasonData()
{
  return &type metadata for JourneyMessageFailureReasonData;
}

uint64_t storeEnumTagSinglePayload for JourneyMessageFailureReasonData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5991784 + 4 * byte_1D5AD3395[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D59917B8 + 4 * byte_1D5AD3390[v4]))();
}

uint64_t sub_1D59917B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59917C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59917C8);
  return result;
}

uint64_t sub_1D59917D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59917DCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D59917E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59917E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JourneyMessageFailureReasonData.CodingKeys()
{
  return &type metadata for JourneyMessageFailureReasonData.CodingKeys;
}

unint64_t sub_1D5991808()
{
  unint64_t result;

  result = qword_1EFF4EB58;
  if (!qword_1EFF4EB58)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD34FC, &type metadata for JourneyMessageFailureReasonData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EB58);
  }
  return result;
}

unint64_t sub_1D5991850()
{
  unint64_t result;

  result = qword_1ED9D0AB0;
  if (!qword_1ED9D0AB0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD346C, &type metadata for JourneyMessageFailureReasonData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0AB0);
  }
  return result;
}

unint64_t sub_1D5991898()
{
  unint64_t result;

  result = qword_1ED9D0AA8;
  if (!qword_1ED9D0AA8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD3494, &type metadata for JourneyMessageFailureReasonData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0AA8);
  }
  return result;
}

uint64_t sub_1D59918DC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000022 && a2 == 0x80000001D5AF0F90 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AF0FC0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

NewsAnalytics::PaywallType_optional __swiftcall PaywallType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::PaywallType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PaywallType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1952870259;
  if (*v0 != 1)
    v1 = 1685217640;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D5991A6C(char *a1, unsigned __int8 *a2)
{
  return sub_1D5A3D654(*a1, *a2);
}

unint64_t sub_1D5991A7C()
{
  unint64_t result;

  result = qword_1EFF4EB60;
  if (!qword_1EFF4EB60)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PaywallType, &type metadata for PaywallType);
    atomic_store(result, (unint64_t *)&qword_1EFF4EB60);
  }
  return result;
}

uint64_t sub_1D5991AC0()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5991B50()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5991BBC()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::PaywallType_optional sub_1D5991C48(Swift::String *a1)
{
  return PaywallType.init(rawValue:)(*a1);
}

void sub_1D5991C54(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 1952870259;
  if (v2 != 1)
    v4 = 1685217640;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 0x6E776F6E6B6E75;
  if (!v5)
    v3 = 0xE400000000000000;
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_1D5991CA4()
{
  sub_1D5991E18();
  return sub_1D5AAE928();
}

uint64_t sub_1D5991D00()
{
  sub_1D5991E18();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for PaywallType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5991D98 + 4 * byte_1D5AD3579[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5991DCC + 4 * byte_1D5AD3574[v4]))();
}

uint64_t sub_1D5991DCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5991DD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5991DDCLL);
  return result;
}

uint64_t sub_1D5991DE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5991DF0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5991DF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5991DFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaywallType()
{
  return &type metadata for PaywallType;
}

unint64_t sub_1D5991E18()
{
  unint64_t result;

  result = qword_1ED9C7718;
  if (!qword_1ED9C7718)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PaywallType, &type metadata for PaywallType);
    atomic_store(result, (unint64_t *)&qword_1ED9C7718);
  }
  return result;
}

void IssueViewContextData.issueViewContext.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *IssueViewContextData.issueViewContext.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*IssueViewContextData.issueViewContext.modify())()
{
  return nullsub_1;
}

NewsAnalytics::IssueViewContextData __swiftcall IssueViewContextData.init(issueViewContext:)(NewsAnalytics::IssueViewContextData issueViewContext)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)issueViewContext.issueViewContext;
  return issueViewContext;
}

unint64_t sub_1D5991E90()
{
  return 0xD000000000000010;
}

uint64_t sub_1D5991EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59924E8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D5991ED4()
{
  sub_1D5992028();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5991EFC()
{
  sub_1D5992028();
  return sub_1D5AAEEE0();
}

uint64_t IssueViewContextData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D59921E8(0, &qword_1ED9CF008, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5992028();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D599206C();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5992028()
{
  unint64_t result;

  result = qword_1ED9CECC8;
  if (!qword_1ED9CECC8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD3818, &type metadata for IssueViewContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CECC8);
  }
  return result;
}

unint64_t sub_1D599206C()
{
  unint64_t result;

  result = qword_1ED9CEC00;
  if (!qword_1ED9CEC00)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for IssueViewContext, &type metadata for IssueViewContext);
    atomic_store(result, (unint64_t *)&qword_1ED9CEC00);
  }
  return result;
}

uint64_t IssueViewContextData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D59921E8(0, &qword_1ED9CEF90, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5992028();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5992244();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D59921E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5992028();
    v7 = a3(a1, &type metadata for IssueViewContextData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5992244()
{
  unint64_t result;

  result = qword_1ED9CEC10;
  if (!qword_1ED9CEC10)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for IssueViewContext, &type metadata for IssueViewContext);
    atomic_store(result, (unint64_t *)&qword_1ED9CEC10);
  }
  return result;
}

uint64_t sub_1D5992290@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return IssueViewContextData.init(from:)(a1, a2);
}

uint64_t sub_1D59922A4(_QWORD *a1)
{
  return IssueViewContextData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for IssueViewContextData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5992304 + 4 * byte_1D5AD3695[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5992338 + 4 * byte_1D5AD3690[v4]))();
}

uint64_t sub_1D5992338(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5992340(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5992348);
  return result;
}

uint64_t sub_1D5992354(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D599235CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5992360(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5992368(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for IssueViewContextData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D59923B4 + 4 * byte_1D5AD369A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D59923D4 + 4 * byte_1D5AD369F[v4]))();
}

_BYTE *sub_1D59923B4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D59923D4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59923DC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59923E4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59923EC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59923F4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IssueViewContextData.CodingKeys()
{
  return &type metadata for IssueViewContextData.CodingKeys;
}

unint64_t sub_1D5992414()
{
  unint64_t result;

  result = qword_1EFF4EB68;
  if (!qword_1EFF4EB68)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD37F0, &type metadata for IssueViewContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EB68);
  }
  return result;
}

unint64_t sub_1D599245C()
{
  unint64_t result;

  result = qword_1ED9CECD8;
  if (!qword_1ED9CECD8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD3760, &type metadata for IssueViewContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CECD8);
  }
  return result;
}

unint64_t sub_1D59924A4()
{
  unint64_t result;

  result = qword_1ED9CECD0;
  if (!qword_1ED9CECD0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD3788, &type metadata for IssueViewContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CECD0);
  }
  return result;
}

uint64_t sub_1D59924E8(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AF0FE0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1D599256C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CCB40, MEMORY[0x1E0CF8078]);
}

uint64_t static ArticleViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CD1C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCB40, a1);
}

uint64_t sub_1D59925AC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CCD98, MEMORY[0x1E0CF8380]);
}

uint64_t static ArticleViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CD1D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCD98, a1);
}

uint64_t ArticleViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t ArticleViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ArticleViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleViewEvent.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.adData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.adData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5824B58(type metadata accessor for ArticleViewEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t ArticleViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 24);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.timedData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.articleData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.feedPositionData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.inGroupPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.inGroupPositionData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.groupData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.articleScienceData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.articleScienceData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.userChannelContextData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.orientationData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.issueData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.issueViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.issueViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.issueViewData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.issueExposureContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 72);
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.issueExposureContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 72);
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.issueExposureContextData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 76);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 76);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 80);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 80);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.channelData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.referralData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 84);
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.referralData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 84);
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.referralData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.paywallData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 88);
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.paywallData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 88);
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.paywallData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.campaignData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 92);
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.campaignData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 92);
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.campaignData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.notificationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 96);
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.notificationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 96);
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.notificationData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.issueViewContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 100);
  sub_1D579E208(0, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.issueViewContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 100);
  sub_1D579E208(0, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.issueViewContextData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.engagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 104);
  sub_1D579E208(0, &qword_1ED9C7168, (void (*)(void))sub_1D57CAC08, (void (*)(void))sub_1D57CAC4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.engagementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 104);
  sub_1D579E208(0, &qword_1ED9C7168, (void (*)(void))sub_1D57CAC08, (void (*)(void))sub_1D57CAC4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.engagementData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.articleExposureContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 108);
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.articleExposureContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 108);
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.articleExposureContextData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.widgetEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 112);
  sub_1D579E208(0, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.widgetEngagementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 112);
  sub_1D579E208(0, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.widgetEngagementData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.referringArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 116);
  sub_1D579E208(0, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.referringArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 116);
  sub_1D579E208(0, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.referringArticleData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.searchData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 120);
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.searchData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 120);
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.searchData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.purchaseOffersData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 124);
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.purchaseOffersData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 124);
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.purchaseOffersData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.stateRestoreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 128);
  sub_1D579E208(0, &qword_1ED9C67E0, (void (*)(void))sub_1D57C8E20, (void (*)(void))sub_1D57C8E64);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.stateRestoreData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 128);
  sub_1D579E208(0, &qword_1ED9C67E0, (void (*)(void))sub_1D57C8E20, (void (*)(void))sub_1D57C8E64);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.stateRestoreData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.searchResponseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 132);
  sub_1D579E208(0, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.searchResponseData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 132);
  sub_1D579E208(0, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.searchResponseData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.placementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 136);
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.placementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 136);
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.placementData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.shareOriginationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 140);
  sub_1D579E208(0, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.shareOriginationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 140);
  sub_1D579E208(0, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.shareOriginationData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.experimentalScoreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 144);
  sub_1D579E208(0, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.experimentalScoreData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 144);
  sub_1D579E208(0, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.experimentalScoreData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.textSizeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 148);
  sub_1D579E208(0, &qword_1ED9CEAA0, (void (*)(void))sub_1D57C8D98, (void (*)(void))sub_1D57C8DDC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleViewEvent.textSizeData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent(0) + 148);
  sub_1D579E208(0, &qword_1ED9CEAA0, (void (*)(void))sub_1D57C8D98, (void (*)(void))sub_1D57C8DDC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleViewEvent.textSizeData.modify())(_QWORD)
{
  type metadata accessor for ArticleViewEvent(0);
  return nullsub_1;
}

uint64_t ArticleViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ArticleViewEvent(0);
  v5 = a1 + v4[5];
  v6 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = a1 + v4[6];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v2, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v2, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v6, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v6, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v6, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v6, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v2, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v2, v27);
  v28 = a1 + v4[16];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v6, v29);
  v30 = a1 + v4[17];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v30, v6, v31);
  v32 = a1 + v4[18];
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v32, v6, v33);
  v34 = a1 + v4[19];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v34, v2, v35);
  v36 = a1 + v4[20];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v36, v2, v37);
  v38 = a1 + v4[21];
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v38, v6, v39);
  v40 = a1 + v4[22];
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v40, v6, v41);
  v42 = a1 + v4[23];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v42, v6, v43);
  v44 = a1 + v4[24];
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v44, v6, v45);
  v46 = a1 + v4[25];
  sub_1D579E208(0, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 104))(v46, v6, v47);
  v48 = a1 + v4[26];
  sub_1D579E208(0, &qword_1ED9C7168, (void (*)(void))sub_1D57CAC08, (void (*)(void))sub_1D57CAC4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 104))(v48, v6, v49);
  v50 = a1 + v4[27];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 104))(v50, v6, v51);
  v52 = a1 + v4[28];
  sub_1D579E208(0, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 104))(v52, v6, v53);
  v54 = a1 + v4[29];
  sub_1D579E208(0, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 104))(v54, v6, v55);
  v56 = a1 + v4[30];
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 104))(v56, v6, v57);
  v58 = a1 + v4[31];
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 104))(v58, v6, v59);
  v60 = a1 + v4[32];
  sub_1D579E208(0, &qword_1ED9C67E0, (void (*)(void))sub_1D57C8E20, (void (*)(void))sub_1D57C8E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 104))(v60, v6, v61);
  v62 = a1 + v4[33];
  sub_1D579E208(0, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 104))(v62, v6, v63);
  v64 = a1 + v4[34];
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 104))(v64, v6, v65);
  v66 = a1 + v4[35];
  sub_1D579E208(0, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 104))(v66, v6, v67);
  v68 = a1 + v4[36];
  sub_1D579E208(0, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 104))(v68, v6, v69);
  v70 = a1 + v4[37];
  sub_1D579E208(0, &qword_1ED9CEAA0, (void (*)(void))sub_1D57C8D98, (void (*)(void))sub_1D57C8DDC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 104))(v70, v2, v71);
}

uint64_t ArticleViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ArticleViewEvent.Model.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent.Model(0) + 20);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(v3 + 32);
  return sub_1D57E8FE4(v4, v5);
}

uint64_t ArticleViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5824B58(type metadata accessor for ArticleViewEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t ArticleViewEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent.Model(0) + 28);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t ArticleViewEvent.Model.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for ArticleViewEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 32));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t ArticleViewEvent.Model.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for ArticleViewEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 36));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t ArticleViewEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleViewEvent.Model(0) + 40));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

_QWORD *ArticleViewEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for ArticleViewEvent.Model(0);
  sub_1D57E4810(v1 + *(int *)(v3 + 44), (uint64_t)v5, (unint64_t *)&qword_1ED9CEEE0);
  sub_1D57E4810((uint64_t)v5, a1, (unint64_t *)&qword_1ED9CEEE0);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t ArticleViewEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleViewEvent.Model(0) + 48));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t ArticleViewEvent.Model.articleScienceData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  const void *v3;
  _BYTE __dst[280];

  v3 = (const void *)(v1 + *(int *)(type metadata accessor for ArticleViewEvent.Model(0) + 52));
  memcpy(__dst, v3, 0x111uLL);
  memcpy(a1, v3, 0x111uLL);
  return sub_1D57D42AC((uint64_t)__dst);
}

uint64_t ArticleViewEvent.Model.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = type metadata accessor for ArticleViewEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 56));
  v5 = *v4;
  v6 = v4[1];
  LOWORD(v4) = *((_WORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_BYTE *)(a1 + 1) = v6;
  *(_WORD *)(a1 + 2) = (_WORD)v4;
  return result;
}

uint64_t ArticleViewEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ArticleViewEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 60));
  return result;
}

uint64_t ArticleViewEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleViewEvent.Model(0) + 64));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t ArticleViewEvent.Model.issueViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ArticleViewEvent.Model(0) + 68));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t ArticleViewEvent.Model.issueExposureContextData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ArticleViewEvent.Model(0) + 72));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t ArticleViewEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for ArticleViewEvent.Model(0) + 76));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleViewEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent.Model(0) + 80);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleViewEvent.Model.referralData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleViewEvent.Model(0) + 84));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1D5828094(v4, v5);
}

uint64_t ArticleViewEvent.Model.paywallData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ArticleViewEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 88));
  return result;
}

uint64_t ArticleViewEvent.Model.campaignData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleViewEvent.Model(0) + 92));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1D5828094(v4, v5);
}

uint64_t ArticleViewEvent.Model.notificationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent.Model(0) + 96);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  v11 = *(_QWORD *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  LOWORD(v3) = *(_WORD *)(v3 + 72);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_WORD *)(a1 + 72) = v3;
  return sub_1D58AEDC8(v4, v5);
}

uint64_t ArticleViewEvent.Model.issueViewContextData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ArticleViewEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 100));
  return result;
}

uint64_t ArticleViewEvent.Model.engagementData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ArticleViewEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 104));
  return result;
}

uint64_t ArticleViewEvent.Model.articleExposureContextData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleViewEvent.Model(0) + 108));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57E90BC(v4, v5);
}

uint64_t ArticleViewEvent.Model.widgetEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[448];

  v3 = type metadata accessor for ArticleViewEvent.Model(0);
  sub_1D57E4810(v1 + *(int *)(v3 + 112), (uint64_t)v5, (unint64_t *)&qword_1ED9C6A60);
  sub_1D57E4810((uint64_t)v5, a1, (unint64_t *)&qword_1ED9C6A60);
  return sub_1D5976328((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D59759F8);
}

uint64_t ArticleViewEvent.Model.referringArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleViewEvent.Model(0) + 116);
  v4 = *(_BYTE *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(_BYTE *)(a1 + 24) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t ArticleViewEvent.Model.searchData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleViewEvent.Model(0) + 120));
  v5 = *v3;
  v4 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t ArticleViewEvent.Model.purchaseOffersData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for ArticleViewEvent.Model(0) + 124));
  return swift_bridgeObjectRetain();
}

uint64_t ArticleViewEvent.Model.stateRestoreData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ArticleViewEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 128));
  return result;
}

uint64_t ArticleViewEvent.Model.searchResponseData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ArticleViewEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 132));
  return result;
}

uint64_t ArticleViewEvent.Model.placementData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleViewEvent.Model(0) + 136));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1D5828094(v4, v5);
}

uint64_t ArticleViewEvent.Model.shareOriginationData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ArticleViewEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 140));
  return result;
}

uint64_t ArticleViewEvent.Model.experimentalScoreData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;

  result = type metadata accessor for ArticleViewEvent.Model(0);
  v4 = (uint64_t *)(v1 + *(int *)(result + 144));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 8);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = (_BYTE)v4;
  return result;
}

uint64_t ArticleViewEvent.Model.textSizeData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ArticleViewEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 148));
  return result;
}

__n128 ArticleViewEvent.Model.init(eventData:adData:timedData:articleData:feedPositionData:inGroupPositionData:feedData:groupData:viewData:articleScienceData:userChannelContextData:orientationData:issueData:issueViewData:issueExposureContextData:userBundleSubscriptionContextData:channelData:referralData:paywallData:campaignData:notificationData:issueViewContextData:engagementData:articleExposureContextData:widgetEngagementData:referringArticleData:searchData:purchaseOffersData:stateRestoreData:searchResponseData:placementData:shareOriginationData:experimentalScoreData:textSizeData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, int *a5@<X4>, int *a6@<X5>, __int128 *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, const void *a11, char *a12, __int16 *a13, __int128 *a14, uint64_t *a15, uint64_t *a16, char *a17, uint64_t *a18, __int128 *a19, __int16 *a20,__int128 *a21,__int128 *a22,char *a23,char *a24,__int128 *a25,uint64_t a26,__int128 *a27,uint64_t *a28,uint64_t *a29,char *a30,char *a31,__int128 *a32,char *a33,uint64_t *a34,__int16 *a35)
{
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  __int16 v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 result;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  char v73;
  int v74;
  char v75;
  int v76;
  uint64_t v77;
  __int128 v78;
  __int16 v79;
  uint64_t v80;
  uint64_t v81;
  __int16 v82;
  char v83;
  __int16 v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  __int128 v109;
  __int16 v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  __int16 v115;
  uint64_t v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  char v121;
  char v122;
  uint64_t v124;
  __int128 v125;
  __int128 v126;
  char v127;
  uint64_t v128;
  __int128 v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  char v135;
  __n128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  _BYTE v145[23];
  _BYTE v146[136];
  _BYTE __dst[273];
  _BYTE v148[456];

  v71 = *a2;
  v69 = *((_QWORD *)a2 + 3);
  v70 = *((_QWORD *)a2 + 2);
  v68 = *((_BYTE *)a2 + 32);
  v144 = a4[6];
  *(_OWORD *)v145 = a4[7];
  *(_QWORD *)&v145[15] = *(_QWORD *)((char *)a4 + 127);
  v140 = a4[2];
  v141 = a4[3];
  v142 = a4[4];
  v143 = a4[5];
  v138 = *a4;
  v139 = a4[1];
  v73 = *((_BYTE *)a5 + 4);
  v74 = *a5;
  v75 = *((_BYTE *)a6 + 4);
  v76 = *a6;
  v78 = *a7;
  v77 = *((_QWORD *)a7 + 2);
  sub_1D57E4810(a8, (uint64_t)v146, (unint64_t *)&qword_1ED9CEEE0);
  v80 = a10[1];
  v81 = *a10;
  v79 = *((_WORD *)a10 + 8);
  memcpy(__dst, a11, sizeof(__dst));
  v36 = *a12;
  v82 = *((_WORD *)a12 + 1);
  v83 = a12[1];
  v84 = *a13;
  v87 = *a14;
  v85 = *((_QWORD *)a14 + 3);
  v86 = *((_QWORD *)a14 + 2);
  v88 = a15[1];
  v89 = *a15;
  v90 = a16[1];
  v91 = *a16;
  v99 = *a17;
  v97 = *((_QWORD *)a17 + 2);
  v98 = *((_QWORD *)a17 + 1);
  v96 = a17[24];
  v95 = a17[25];
  v93 = *((_QWORD *)a17 + 5);
  v94 = *((_QWORD *)a17 + 4);
  v92 = a17[48];
  v104 = a18[1];
  v105 = *a18;
  v103 = *((_BYTE *)a18 + 16);
  v102 = *((_BYTE *)a18 + 17);
  v100 = a18[4];
  v101 = a18[3];
  v108 = a19[1];
  v109 = *a19;
  v106 = *((_QWORD *)a19 + 5);
  v107 = *((_QWORD *)a19 + 4);
  v110 = *a20;
  v113 = a21[1];
  v114 = *a21;
  v111 = *((_QWORD *)a21 + 5);
  v112 = *((_QWORD *)a21 + 4);
  v119 = a22[1];
  v120 = *a22;
  v117 = a22[3];
  v118 = a22[2];
  v116 = *((_QWORD *)a22 + 8);
  v115 = *((_WORD *)a22 + 36);
  v121 = *a23;
  v122 = *a24;
  v125 = a25[1];
  v126 = *a25;
  v124 = *((_QWORD *)a25 + 4);
  sub_1D57E4810(a26, (uint64_t)v148, (unint64_t *)&qword_1ED9C6A60);
  v129 = *a27;
  v128 = *((_QWORD *)a27 + 2);
  v127 = *((_BYTE *)a27 + 24);
  v132 = *a28;
  v131 = a28[1];
  v130 = *((_BYTE *)a28 + 16);
  v133 = *a29;
  v134 = *a30;
  v135 = *a31;
  v136 = (__n128)a32[1];
  v137 = *a32;
  v37 = *((_QWORD *)a32 + 4);
  v38 = *((_QWORD *)a32 + 5);
  v39 = *a33;
  v40 = *a34;
  v41 = *((_BYTE *)a34 + 8);
  v42 = *a35;
  v43 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(a9, a1, v43);
  v44 = (int *)type metadata accessor for ArticleViewEvent.Model(0);
  v45 = a9 + v44[5];
  *(_OWORD *)v45 = v71;
  *(_QWORD *)(v45 + 16) = v70;
  *(_QWORD *)(v45 + 24) = v69;
  *(_BYTE *)(v45 + 32) = v68;
  v46 = a9 + v44[6];
  v47 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v46, a3, v47);
  v48 = a9 + v44[7];
  *(_OWORD *)(v48 + 96) = v144;
  *(_OWORD *)(v48 + 112) = *(_OWORD *)v145;
  *(_QWORD *)(v48 + 127) = *(_QWORD *)&v145[15];
  *(_OWORD *)(v48 + 32) = v140;
  *(_OWORD *)(v48 + 48) = v141;
  *(_OWORD *)(v48 + 64) = v142;
  *(_OWORD *)(v48 + 80) = v143;
  *(_OWORD *)v48 = v138;
  *(_OWORD *)(v48 + 16) = v139;
  v49 = a9 + v44[8];
  *(_DWORD *)v49 = v74;
  *(_BYTE *)(v49 + 4) = v73;
  v50 = a9 + v44[9];
  *(_DWORD *)v50 = v76;
  *(_BYTE *)(v50 + 4) = v75;
  v51 = a9 + v44[10];
  *(_OWORD *)v51 = v78;
  *(_QWORD *)(v51 + 16) = v77;
  sub_1D57E4810((uint64_t)v146, a9 + v44[11], (unint64_t *)&qword_1ED9CEEE0);
  v52 = a9 + v44[12];
  *(_QWORD *)v52 = v81;
  *(_QWORD *)(v52 + 8) = v80;
  *(_WORD *)(v52 + 16) = v79;
  memcpy((void *)(a9 + v44[13]), __dst, 0x111uLL);
  v53 = a9 + v44[14];
  *(_BYTE *)v53 = v36;
  *(_BYTE *)(v53 + 1) = v83;
  *(_WORD *)(v53 + 2) = v82;
  *(_WORD *)(a9 + v44[15]) = v84;
  v54 = a9 + v44[16];
  *(_OWORD *)v54 = v87;
  *(_QWORD *)(v54 + 16) = v86;
  *(_QWORD *)(v54 + 24) = v85;
  v55 = (_QWORD *)(a9 + v44[17]);
  *v55 = v89;
  v55[1] = v88;
  v56 = (_QWORD *)(a9 + v44[18]);
  *v56 = v91;
  v56[1] = v90;
  v57 = a9 + v44[19];
  *(_BYTE *)v57 = v99;
  *(_QWORD *)(v57 + 8) = v98;
  *(_QWORD *)(v57 + 16) = v97;
  *(_BYTE *)(v57 + 24) = v96;
  *(_BYTE *)(v57 + 25) = v95;
  *(_QWORD *)(v57 + 32) = v94;
  *(_QWORD *)(v57 + 40) = v93;
  *(_BYTE *)(v57 + 48) = v92;
  v58 = a9 + v44[20];
  *(_QWORD *)v58 = v105;
  *(_QWORD *)(v58 + 8) = v104;
  *(_BYTE *)(v58 + 16) = v103;
  *(_BYTE *)(v58 + 17) = v102;
  *(_QWORD *)(v58 + 24) = v101;
  *(_QWORD *)(v58 + 32) = v100;
  v59 = a9 + v44[21];
  *(_OWORD *)v59 = v109;
  *(_OWORD *)(v59 + 16) = v108;
  *(_QWORD *)(v59 + 32) = v107;
  *(_QWORD *)(v59 + 40) = v106;
  *(_WORD *)(a9 + v44[22]) = v110;
  v60 = a9 + v44[23];
  *(_OWORD *)v60 = v114;
  *(_OWORD *)(v60 + 16) = v113;
  *(_QWORD *)(v60 + 32) = v112;
  *(_QWORD *)(v60 + 40) = v111;
  v61 = a9 + v44[24];
  *(_OWORD *)v61 = v120;
  *(_OWORD *)(v61 + 16) = v119;
  *(_OWORD *)(v61 + 32) = v118;
  *(_OWORD *)(v61 + 48) = v117;
  *(_QWORD *)(v61 + 64) = v116;
  *(_WORD *)(v61 + 72) = v115;
  *(_BYTE *)(a9 + v44[25]) = v121;
  *(_BYTE *)(a9 + v44[26]) = v122;
  v62 = a9 + v44[27];
  *(_OWORD *)v62 = v126;
  *(_OWORD *)(v62 + 16) = v125;
  *(_QWORD *)(v62 + 32) = v124;
  sub_1D57E4810((uint64_t)v148, a9 + v44[28], (unint64_t *)&qword_1ED9C6A60);
  v63 = a9 + v44[29];
  *(_OWORD *)v63 = v129;
  *(_QWORD *)(v63 + 16) = v128;
  *(_BYTE *)(v63 + 24) = v127;
  v64 = a9 + v44[30];
  *(_QWORD *)v64 = v132;
  *(_QWORD *)(v64 + 8) = v131;
  *(_BYTE *)(v64 + 16) = v130;
  *(_QWORD *)(a9 + v44[31]) = v133;
  *(_BYTE *)(a9 + v44[32]) = v134;
  *(_BYTE *)(a9 + v44[33]) = v135;
  v65 = a9 + v44[34];
  result = v136;
  *(_OWORD *)v65 = v137;
  *(__n128 *)(v65 + 16) = v136;
  *(_QWORD *)(v65 + 32) = v37;
  *(_QWORD *)(v65 + 40) = v38;
  *(_BYTE *)(a9 + v44[35]) = v39;
  v67 = a9 + v44[36];
  *(_QWORD *)v67 = v40;
  *(_BYTE *)(v67 + 8) = v41;
  *(_WORD *)(a9 + v44[37]) = v42;
  return result;
}

uint64_t sub_1D5995F48(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5995F80 + 4 * byte_1D5AD3870[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5995F80()
{
  return 0x617461446461;
}

uint64_t sub_1D5995F94()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D5995FA8()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D599612C()
{
  return 0x6E676961706D6163;
}

unint64_t sub_1D5996140()
{
  return 0xD000000000000010;
}

unint64_t sub_1D5996158()
{
  return 0xD000000000000014;
}

void sub_1D599625C()
{
  JUMPOUT(0x1D5996270);
}

uint64_t sub_1D599629C()
{
  unsigned __int8 *v0;

  return sub_1D5995F48(*v0);
}

uint64_t sub_1D59962A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59A13CC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D59962C8(_BYTE *a1@<X8>)
{
  *a1 = 34;
}

uint64_t sub_1D59962D4()
{
  sub_1D5996F48();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59962FC()
{
  sub_1D5996F48();
  return sub_1D5AAEEE0();
}

uint64_t ArticleViewEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  int *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int *v20;
  int v21;
  int *v22;
  int v23;
  __int128 *v24;
  uint64_t v25;
  int *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char v31;
  char v32;
  _OWORD *v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD *v46;
  __int128 v47;
  _OWORD *v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  __int16 v52;
  __int128 v53;
  __int128 v54;
  __int128 *v55;
  uint64_t v56;
  __int128 v57;
  __int128 *v58;
  uint64_t v59;
  char v60;
  __int128 *v61;
  char v62;
  __int128 *v63;
  __int128 v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v68;
  char v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _OWORD v73[28];
  char v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  __int16 v81;
  _BYTE v82[144];
  __int128 v83;
  uint64_t v84;
  char v85;
  int *v86;

  v3 = v1;
  sub_1D59985B4(0, &qword_1EFF4EB70, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v68 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5996F48();
  sub_1D5AAEEC8();
  LOBYTE(v73[0]) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = type metadata accessor for ArticleViewEvent.Model(0);
    v11 = v3 + *(int *)(v10 + 20);
    v12 = *(_BYTE *)(v11 + 32);
    v13 = *(_OWORD *)(v11 + 16);
    v73[0] = *(_OWORD *)v11;
    v73[1] = v13;
    LOBYTE(v73[2]) = v12;
    LOBYTE(v70) = 1;
    sub_1D57C690C();
    sub_1D5AAED18();
    v86 = (int *)v10;
    v85 = 2;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v14 = v86;
    v15 = v3 + v86[7];
    v16 = *(_OWORD *)(v15 + 112);
    v73[6] = *(_OWORD *)(v15 + 96);
    v73[7] = v16;
    *(_QWORD *)((char *)&v73[7] + 15) = *(_QWORD *)(v15 + 127);
    v17 = *(_OWORD *)(v15 + 48);
    v73[2] = *(_OWORD *)(v15 + 32);
    v73[3] = v17;
    v18 = *(_OWORD *)(v15 + 80);
    v73[4] = *(_OWORD *)(v15 + 64);
    v73[5] = v18;
    v19 = *(_OWORD *)(v15 + 16);
    v73[0] = *(_OWORD *)v15;
    v73[1] = v19;
    LOBYTE(v70) = 3;
    sub_1D57CB940();
    sub_1D5AAED6C();
    v20 = (int *)(v3 + v14[8]);
    v21 = *v20;
    LOBYTE(v20) = *((_BYTE *)v20 + 4);
    LODWORD(v73[0]) = v21;
    BYTE4(v73[0]) = (_BYTE)v20;
    LOBYTE(v70) = 4;
    sub_1D57C9C4C();
    sub_1D5AAED18();
    v22 = (int *)(v3 + v14[9]);
    v23 = *v22;
    LOBYTE(v22) = *((_BYTE *)v22 + 4);
    LODWORD(v73[0]) = v23;
    BYTE4(v73[0]) = (_BYTE)v22;
    LOBYTE(v70) = 5;
    sub_1D57C8B9C();
    sub_1D5AAED18();
    v24 = (__int128 *)(v3 + v14[10]);
    v25 = *((_QWORD *)v24 + 2);
    v83 = *v24;
    v84 = v25;
    v82[143] = 6;
    sub_1D57C65D4();
    sub_1D5AAED18();
    sub_1D57E4810(v3 + v14[11], (uint64_t)v82, (unint64_t *)&qword_1ED9CEEE0);
    sub_1D57E4810((uint64_t)v82, (uint64_t)v73, (unint64_t *)&qword_1ED9CEEE0);
    LOBYTE(v70) = 7;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v26 = v86;
    v27 = (uint64_t *)(v3 + v86[12]);
    v28 = *v27;
    v29 = v27[1];
    LOWORD(v27) = *((_WORD *)v27 + 8);
    v79 = v28;
    v80 = v29;
    v81 = (__int16)v27;
    v78 = 8;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    memcpy(v73, (const void *)(v3 + v26[13]), 0x111uLL);
    LOBYTE(v70) = 9;
    sub_1D57CB7A8();
    sub_1D5AAED6C();
    v30 = (char *)(v3 + v26[14]);
    v31 = *v30;
    v32 = v30[1];
    LOWORD(v30) = *((_WORD *)v30 + 1);
    LOBYTE(v73[0]) = v31;
    BYTE1(v73[0]) = v32;
    WORD1(v73[0]) = (_WORD)v30;
    LOBYTE(v70) = 10;
    sub_1D57C7B24();
    sub_1D5AAED6C();
    LOWORD(v73[0]) = *(_WORD *)(v3 + v86[15]);
    LOBYTE(v70) = 11;
    sub_1D57CA4E4();
    sub_1D5AAED6C();
    v33 = (_OWORD *)(v3 + v86[16]);
    v34 = v33[1];
    v73[0] = *v33;
    v73[1] = v34;
    LOBYTE(v70) = 12;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    v73[0] = *(_OWORD *)(v3 + v86[17]);
    LOBYTE(v70) = 13;
    sub_1D57CAD6C();
    sub_1D5AAED18();
    v73[0] = *(_OWORD *)(v3 + v86[18]);
    LOBYTE(v70) = 14;
    sub_1D57C784C();
    sub_1D5AAED18();
    v35 = v3 + v86[19];
    v36 = *(_BYTE *)(v35 + 24);
    v37 = *(_BYTE *)(v35 + 25);
    v38 = *(_BYTE *)(v35 + 48);
    LOBYTE(v73[0]) = *(_BYTE *)v35;
    *(_OWORD *)((char *)v73 + 8) = *(_OWORD *)(v35 + 8);
    BYTE8(v73[1]) = v36;
    BYTE9(v73[1]) = v37;
    v73[2] = *(_OWORD *)(v35 + 32);
    LOBYTE(v73[3]) = v38;
    LOBYTE(v70) = 15;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v39 = (uint64_t *)(v3 + v86[20]);
    v40 = *v39;
    v41 = v39[1];
    v42 = *((_BYTE *)v39 + 16);
    v43 = *((_BYTE *)v39 + 17);
    v45 = v39[3];
    v44 = v39[4];
    *(_QWORD *)&v73[0] = v40;
    *((_QWORD *)&v73[0] + 1) = v41;
    LOBYTE(v73[1]) = v42;
    BYTE1(v73[1]) = v43;
    *((_QWORD *)&v73[1] + 1) = v45;
    *(_QWORD *)&v73[2] = v44;
    LOBYTE(v70) = 16;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v46 = (_OWORD *)(v3 + v86[21]);
    v47 = v46[1];
    v73[0] = *v46;
    v73[1] = v47;
    v73[2] = v46[2];
    LOBYTE(v70) = 17;
    sub_1D57CB330();
    sub_1D5AAED18();
    LOWORD(v73[0]) = *(_WORD *)(v3 + v86[22]);
    LOBYTE(v70) = 18;
    sub_1D57CB830();
    sub_1D5AAED18();
    v48 = (_OWORD *)(v3 + v86[23]);
    v49 = v48[1];
    v73[0] = *v48;
    v73[1] = v49;
    v73[2] = v48[2];
    LOBYTE(v70) = 19;
    sub_1D57CB460();
    sub_1D5AAED18();
    v50 = v3 + v86[24];
    v51 = *(_QWORD *)(v50 + 64);
    v52 = *(_WORD *)(v50 + 72);
    v53 = *(_OWORD *)(v50 + 16);
    v73[0] = *(_OWORD *)v50;
    v73[1] = v53;
    v54 = *(_OWORD *)(v50 + 48);
    v73[2] = *(_OWORD *)(v50 + 32);
    v73[3] = v54;
    *(_QWORD *)&v73[4] = v51;
    WORD4(v73[4]) = v52;
    LOBYTE(v70) = 20;
    sub_1D57C99E4();
    sub_1D5AAED18();
    LOBYTE(v73[0]) = *(_BYTE *)(v3 + v86[25]);
    LOBYTE(v70) = 21;
    sub_1D57C86EC();
    sub_1D5AAED18();
    LOBYTE(v73[0]) = *(_BYTE *)(v3 + v86[26]);
    LOBYTE(v70) = 22;
    sub_1D57CAC4C();
    sub_1D5AAED18();
    v55 = (__int128 *)(v3 + v86[27]);
    v56 = *((_QWORD *)v55 + 4);
    v57 = v55[1];
    v75 = *v55;
    v76 = v57;
    v77 = v56;
    v74 = 23;
    sub_1D57C71C4();
    sub_1D5AAED18();
    sub_1D57E4810(v3 + v86[28], (uint64_t)v73, (unint64_t *)&qword_1ED9C6A60);
    sub_1D57E4810((uint64_t)v73, (uint64_t)&v70, (unint64_t *)&qword_1ED9C6A60);
    v69 = 24;
    sub_1D57C8314();
    sub_1D5AAED18();
    v58 = (__int128 *)(v3 + v86[29]);
    v59 = *((_QWORD *)v58 + 2);
    v60 = *((_BYTE *)v58 + 24);
    v70 = *v58;
    *(_QWORD *)&v71 = v59;
    BYTE8(v71) = v60;
    v69 = 25;
    sub_1D57C85C4();
    sub_1D5AAED18();
    v61 = (__int128 *)(v3 + v86[30]);
    v62 = *((_BYTE *)v61 + 16);
    v70 = *v61;
    LOBYTE(v71) = v62;
    v69 = 26;
    sub_1D57CBC9C();
    sub_1D5AAED18();
    *(_QWORD *)&v70 = *(_QWORD *)(v3 + v86[31]);
    v69 = 27;
    sub_1D57C90A0();
    sub_1D5AAED18();
    LOBYTE(v70) = *(_BYTE *)(v3 + v86[32]);
    v69 = 28;
    sub_1D57C8E64();
    sub_1D5AAED18();
    LOBYTE(v70) = *(_BYTE *)(v3 + v86[33]);
    v69 = 29;
    sub_1D57C9018();
    sub_1D5AAED18();
    v63 = (__int128 *)(v3 + v86[34]);
    v64 = v63[1];
    v70 = *v63;
    v71 = v64;
    v72 = v63[2];
    v69 = 30;
    sub_1D57C8654();
    sub_1D5AAED18();
    LOBYTE(v70) = *(_BYTE *)(v3 + v86[35]);
    v69 = 31;
    sub_1D57C852C();
    sub_1D5AAED18();
    v65 = (uint64_t *)(v3 + v86[36]);
    v66 = *v65;
    LOBYTE(v65) = *((_BYTE *)v65 + 8);
    *(_QWORD *)&v70 = v66;
    BYTE8(v70) = (_BYTE)v65;
    v69 = 32;
    sub_1D57C5E94();
    sub_1D5AAED18();
    LOWORD(v70) = *(_WORD *)(v3 + v86[37]);
    v69 = 33;
    sub_1D57C8DDC();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5996F48()
{
  unint64_t result;

  result = qword_1ED9C6920;
  if (!qword_1ED9C6920)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD3E84, &type metadata for ArticleViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C6920);
  }
  return result;
}

uint64_t ArticleViewEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  char *v30;
  char v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  int *v35;
  char *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  char v41;
  char *v42;
  char v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  __int16 v48;
  char *v49;
  uint64_t v50;
  char v51;
  __int16 v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  char v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  __int16 v83;
  char *v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  char *v97;
  uint64_t v98;
  char v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _BOOL4 v130;
  char *v131;
  unint64_t v132;
  uint64_t v133;
  char *v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  char v138;
  _BYTE v139[456];
  _BYTE v140[273];
  _BYTE v141[144];
  _BYTE v142[144];
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  _BYTE v150[23];
  _OWORD v151[29];
  int *v152;

  v128 = a2;
  v3 = sub_1D5AADFB0();
  v115 = *(_QWORD *)(v3 - 8);
  v116 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D5AADF98();
  v117 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59985B4(0, &qword_1ED9C6ED0, MEMORY[0x1E0DED048]);
  v129 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v113 - v11;
  v152 = (int *)type metadata accessor for ArticleViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v152);
  v134 = (char *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v132 = (unint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1D5996F48();
  v131 = v12;
  v15 = v133;
  sub_1D5AAEEB0();
  v114 = v6;
  if (v15)
  {
    v133 = v15;
    LODWORD(v131) = 0;
    v16 = 0;
    goto LABEL_4;
  }
  v127 = v10;
  LOBYTE(v151[0]) = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v30 = v134;
  (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v134, v8, v6);
  v139[0] = 1;
  sub_1D57C68C8();
  sub_1D5AAEC7C();
  v31 = v151[2];
  v32 = &v30[v152[5]];
  v33 = v151[1];
  *(_OWORD *)v32 = v151[0];
  *((_OWORD *)v32 + 1) = v33;
  v32[32] = v31;
  LOBYTE(v151[0]) = 2;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v34 = v116;
  sub_1D5AAECD0();
  v35 = v152;
  (*(void (**)(char *, char *, uint64_t))(v115 + 32))(&v30[v152[6]], v5, v34);
  v142[143] = 3;
  sub_1D57CB8FC();
  sub_1D5AAECD0();
  v36 = &v30[v35[7]];
  v37 = *(_OWORD *)v150;
  *((_OWORD *)v36 + 6) = v149;
  *((_OWORD *)v36 + 7) = v37;
  *(_QWORD *)(v36 + 127) = *(_QWORD *)&v150[15];
  v38 = v146;
  *((_OWORD *)v36 + 2) = v145;
  *((_OWORD *)v36 + 3) = v38;
  v39 = v148;
  *((_OWORD *)v36 + 4) = v147;
  *((_OWORD *)v36 + 5) = v39;
  v40 = v144;
  *(_OWORD *)v36 = v143;
  *((_OWORD *)v36 + 1) = v40;
  v139[0] = 4;
  sub_1D57C9C08();
  sub_1D5AAEC7C();
  v41 = BYTE4(v151[0]);
  v42 = &v30[v35[8]];
  *(_DWORD *)v42 = v151[0];
  v42[4] = v41;
  v139[0] = 5;
  sub_1D57C8B58();
  sub_1D5AAEC7C();
  v43 = BYTE4(v151[0]);
  v44 = &v30[v35[9]];
  *(_DWORD *)v44 = v151[0];
  v44[4] = v43;
  v139[0] = 6;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v45 = *(_QWORD *)&v151[1];
  v46 = &v30[v35[10]];
  *(_OWORD *)v46 = v151[0];
  *((_QWORD *)v46 + 2) = v45;
  v141[143] = 7;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  sub_1D57E4810((uint64_t)v142, (uint64_t)v141, (unint64_t *)&qword_1ED9CEEE0);
  sub_1D57E4810((uint64_t)v141, (uint64_t)&v30[v35[11]], (unint64_t *)&qword_1ED9CEEE0);
  v139[0] = 8;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v47 = *((_QWORD *)&v151[0] + 1);
  v48 = v151[1];
  v49 = &v134[v152[12]];
  *(_QWORD *)v49 = *(_QWORD *)&v151[0];
  *((_QWORD *)v49 + 1) = v47;
  *((_WORD *)v49 + 8) = v48;
  v139[455] = 9;
  sub_1D57CB764();
  sub_1D5AAECD0();
  v133 = 0;
  memcpy(&v134[v152[13]], v140, 0x111uLL);
  v139[0] = 10;
  sub_1D57C7AE0();
  v50 = v133;
  sub_1D5AAECD0();
  v133 = v50;
  if (v50)
    goto LABEL_54;
  v51 = BYTE1(v151[0]);
  v52 = WORD1(v151[0]);
  v53 = &v134[v152[14]];
  *v53 = v151[0];
  v53[1] = v51;
  *((_WORD *)v53 + 1) = v52;
  v139[0] = 11;
  sub_1D57CA4A0();
  v54 = v133;
  sub_1D5AAECD0();
  v133 = v54;
  if (v54
    || (*(_WORD *)&v134[v152[15]] = v151[0],
        v139[0] = 12,
        sub_1D57C5ED8(),
        v55 = v133,
        sub_1D5AAEC7C(),
        (v133 = v55) != 0))
  {
LABEL_54:
    (*(void (**)(char *, uint64_t))(v127 + 8))(v131, v129);
    LODWORD(v131) = 0;
    v16 = 975;
    goto LABEL_4;
  }
  v56 = &v134[v152[16]];
  v57 = v151[1];
  *(_OWORD *)v56 = v151[0];
  *((_OWORD *)v56 + 1) = v57;
  v139[0] = 13;
  sub_1D57CAD28();
  v58 = v133;
  sub_1D5AAEC7C();
  v133 = v58;
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v127 + 8))(v131, v129);
    LODWORD(v131) = 0;
    v16 = 5071;
    goto LABEL_4;
  }
  *(_OWORD *)&v134[v152[17]] = v151[0];
  v139[0] = 14;
  sub_1D57C7808();
  v59 = v133;
  sub_1D5AAEC7C();
  v133 = v59;
  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v127 + 8))(v131, v129);
    LODWORD(v131) = 0;
    v16 = 13263;
    goto LABEL_4;
  }
  *(_OWORD *)&v134[v152[18]] = v151[0];
  v139[0] = 15;
  sub_1D57C6AF8();
  v60 = v133;
  sub_1D5AAECD0();
  v133 = v60;
  if (v60)
  {
    (*(void (**)(char *, uint64_t))(v127 + 8))(v131, v129);
    LODWORD(v131) = 0;
    v16 = 29647;
    goto LABEL_4;
  }
  v61 = BYTE8(v151[1]);
  v62 = BYTE9(v151[1]);
  v63 = v151[3];
  v64 = &v134[v152[19]];
  *v64 = v151[0];
  *(_OWORD *)(v64 + 8) = *(_OWORD *)((char *)v151 + 8);
  v64[24] = v61;
  v64[25] = v62;
  *((_OWORD *)v64 + 2) = v151[2];
  v64[48] = v63;
  v139[0] = 16;
  sub_1D57CB874();
  v65 = v133;
  sub_1D5AAECD0();
  v133 = v65;
  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v127 + 8))(v131, v129);
    LODWORD(v131) = 0;
    v16 = 62415;
    goto LABEL_4;
  }
  v66 = *((_QWORD *)&v151[0] + 1);
  v67 = v151[1];
  v68 = BYTE1(v151[1]);
  v69 = *((_QWORD *)&v151[1] + 1);
  v70 = *(_QWORD *)&v151[2];
  v71 = &v134[v152[20]];
  *(_QWORD *)v71 = *(_QWORD *)&v151[0];
  *((_QWORD *)v71 + 1) = v66;
  v71[16] = v67;
  v71[17] = v68;
  *((_QWORD *)v71 + 3) = v69;
  *((_QWORD *)v71 + 4) = v70;
  v139[0] = 17;
  sub_1D57CB2EC();
  v72 = v133;
  sub_1D5AAEC7C();
  v133 = v72;
  if (v72)
  {
    (*(void (**)(char *, uint64_t))(v127 + 8))(v131, v129);
    LODWORD(v131) = 0;
    v73 = 4293263360;
LABEL_68:
    v78 = v73 & 0xFFFF0000FFFFFFFFLL | 0x300000000;
LABEL_69:
    v16 = v78 + 1831887;
    goto LABEL_4;
  }
  v74 = &v134[v152[21]];
  v75 = v151[1];
  *(_OWORD *)v74 = v151[0];
  *((_OWORD *)v74 + 1) = v75;
  *((_OWORD *)v74 + 2) = v151[2];
  v139[0] = 18;
  sub_1D57CB7EC();
  v76 = v133;
  sub_1D5AAEC7C();
  v133 = v76;
  if (v76
    || (*(_WORD *)&v134[v152[22]] = v151[0],
        v139[0] = 19,
        sub_1D57CB41C(),
        v77 = v133,
        sub_1D5AAEC7C(),
        (v133 = v77) != 0))
  {
    (*(void (**)(char *, uint64_t))(v127 + 8))(v131, v129);
    LODWORD(v131) = 0;
    v73 = 4293394432;
    goto LABEL_68;
  }
  v79 = &v134[v152[23]];
  v80 = v151[1];
  *(_OWORD *)v79 = v151[0];
  *((_OWORD *)v79 + 1) = v80;
  *((_OWORD *)v79 + 2) = v151[2];
  v139[0] = 20;
  sub_1D57C99A0();
  v81 = v133;
  sub_1D5AAEC7C();
  v133 = v81;
  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v127 + 8))(v131, v129);
    LODWORD(v131) = 0;
    v78 = 0x3FFF00000;
    goto LABEL_69;
  }
  v82 = *(_QWORD *)&v151[4];
  v83 = WORD4(v151[4]);
  v84 = &v134[v152[24]];
  v85 = v151[1];
  *(_OWORD *)v84 = v151[0];
  *((_OWORD *)v84 + 1) = v85;
  v86 = v151[3];
  *((_OWORD *)v84 + 2) = v151[2];
  *((_OWORD *)v84 + 3) = v86;
  *((_QWORD *)v84 + 8) = v82;
  *((_WORD *)v84 + 36) = v83;
  v139[0] = 21;
  sub_1D57C86A8();
  v87 = v133;
  sub_1D5AAEC7C();
  v133 = v87;
  if (v87)
    goto LABEL_75;
  v134[v152[25]] = v151[0];
  v139[0] = 22;
  sub_1D57CAC08();
  v88 = v133;
  sub_1D5AAEC7C();
  v133 = v88;
  if (v88 || (v134[v152[26]] = v151[0], v139[0] = 23, sub_1D57C7180(), v89 = v133, sub_1D5AAEC7C(), (v133 = v89) != 0))
  {
LABEL_75:
    v16 = 1831887;
    (*(void (**)(char *, uint64_t))(v127 + 8))(v131, v129);
    LODWORD(v131) = 0;
  }
  else
  {
    v90 = *(_QWORD *)&v151[2];
    v91 = &v134[v152[27]];
    v92 = v151[1];
    *(_OWORD *)v91 = v151[0];
    *((_OWORD *)v91 + 1) = v92;
    *((_QWORD *)v91 + 4) = v90;
    v139[454] = 24;
    sub_1D57C82D0();
    v93 = v133;
    sub_1D5AAEC7C();
    v133 = v93;
    if (v93)
    {
      (*(void (**)(char *, uint64_t))(v127 + 8))(v131, v129);
      LODWORD(v131) = 0;
      v16 = 10220495;
    }
    else
    {
      sub_1D57E4810((uint64_t)v151, (uint64_t)v139, (unint64_t *)&qword_1ED9C6A60);
      sub_1D57E4810((uint64_t)v139, (uint64_t)&v134[v152[28]], (unint64_t *)&qword_1ED9C6A60);
      v138 = 25;
      sub_1D57C8580();
      v94 = v133;
      sub_1D5AAEC7C();
      v133 = v94;
      if (v94)
      {
        (*(void (**)(char *, uint64_t))(v127 + 8))(v131, v129);
        LODWORD(v131) = 0;
        v16 = 26997711;
      }
      else
      {
        v95 = v136;
        v96 = BYTE8(v136);
        v97 = &v134[v152[29]];
        *(_OWORD *)v97 = v135;
        *((_QWORD *)v97 + 2) = v95;
        v97[24] = v96;
        v138 = 26;
        sub_1D57CBC58();
        v98 = v133;
        sub_1D5AAEC7C();
        v133 = v98;
        if (v98)
        {
          (*(void (**)(char *, uint64_t))(v127 + 8))(v131, v129);
          LODWORD(v131) = 0;
          v16 = 60552143;
        }
        else
        {
          v99 = v136;
          v100 = &v134[v152[30]];
          *(_OWORD *)v100 = v135;
          v100[16] = v99;
          v138 = 27;
          sub_1D57C905C();
          v101 = v133;
          sub_1D5AAEC7C();
          v133 = v101;
          if (v101)
          {
            (*(void (**)(char *, uint64_t))(v127 + 8))(v131, v129);
            LODWORD(v131) = 0;
            v16 = 127661007;
          }
          else
          {
            *(_QWORD *)&v134[v152[31]] = v135;
            v138 = 28;
            sub_1D57C8E20();
            v102 = v133;
            sub_1D5AAEC7C();
            v133 = v102;
            if (!v102)
            {
              v134[v152[32]] = v135;
              v138 = 29;
              sub_1D57C8FD4();
              v103 = v133;
              sub_1D5AAEC7C();
              v133 = v103;
              if (!v103)
              {
                v134[v152[33]] = v135;
                v138 = 30;
                sub_1D57C8610();
                v104 = v133;
                sub_1D5AAEC7C();
                v130 = v104 == 0;
                v133 = v104;
                if (!v104)
                {
                  v105 = &v134[v152[34]];
                  v106 = v136;
                  *(_OWORD *)v105 = v135;
                  *((_OWORD *)v105 + 1) = v106;
                  *((_OWORD *)v105 + 2) = v137;
                  v138 = 31;
                  sub_1D57C84E8();
                  v107 = v133;
                  sub_1D5AAEC7C();
                  v133 = v107;
                  if (!v107)
                  {
                    v134[v152[35]] = v135;
                    v138 = 32;
                    sub_1D57C5E50();
                    v108 = v133;
                    sub_1D5AAEC7C();
                    v133 = v108;
                    if (!v108)
                    {
                      v109 = BYTE8(v135);
                      v110 = &v134[v152[36]];
                      *(_QWORD *)v110 = v135;
                      v110[8] = v109;
                      v138 = 33;
                      sub_1D57C8D98();
                      v111 = v133;
                      sub_1D5AAECD0();
                      v133 = v111;
                      if (!v111)
                      {
                        (*(void (**)(char *, uint64_t))(v127 + 8))(v131, v129);
                        v112 = (uint64_t)v134;
                        *(_WORD *)&v134[v152[37]] = v135;
                        sub_1D5998610(v112, v128);
                        __swift_destroy_boxed_opaque_existential_1(v132);
                        return sub_1D5998654(v112);
                      }
                    }
                  }
                }
                (*(void (**)(char *, uint64_t))(v127 + 8))(v131, v129);
                __swift_destroy_boxed_opaque_existential_1(v132);
                v17 = v134;
                (*(void (**)(char *, uint64_t))(v117 + 8))(v134, v114);
                LODWORD(v131) = 1;
                v132 = 1;
                v129 = 1;
                v128 = 1;
                v127 = 1;
                v126 = 1;
                v125 = 1;
                v124 = 1;
                v123 = 1;
                v122 = 1;
                v121 = 1;
                v120 = 1;
                v119 = 1;
                v118 = 1;
                LODWORD(v23) = 1;
                LODWORD(v22) = 1;
                LODWORD(v21) = 1;
                LODWORD(v20) = 1;
                LOBYTE(v19) = 1;
                v24 = v152;
                goto LABEL_29;
              }
            }
            v16 = 261878735;
            (*(void (**)(char *, uint64_t))(v127 + 8))(v131, v129);
            LODWORD(v131) = 1;
          }
        }
      }
    }
  }
LABEL_4:
  v17 = v134;
  result = __swift_destroy_boxed_opaque_existential_1(v132);
  v19 = (v16 >> 2) & 1;
  v20 = (v16 >> 3) & 1;
  v21 = (v16 >> 6) & 1;
  v22 = (v16 >> 7) & 1;
  v23 = (v16 >> 8) & 1;
  v118 = (v16 >> 9) & 1;
  v119 = (v16 >> 12) & 1;
  v120 = (v16 >> 13) & 1;
  v121 = (v16 >> 14) & 1;
  v122 = (v16 >> 15) & 1;
  v123 = (v16 >> 16) & 1;
  v124 = (v16 >> 17) & 1;
  v125 = (v16 >> 19) & 1;
  v126 = (v16 >> 20) & 1;
  v127 = (v16 >> 23) & 1;
  v128 = (v16 >> 24) & 1;
  v129 = (v16 >> 25) & 1;
  v132 = (v16 >> 26) & 1;
  if ((v16 & 1) != 0)
    result = (*(uint64_t (**)(char *, uint64_t))(v117 + 8))(v17, v114);
  v24 = v152;
  if ((v16 & 2) == 0)
  {
    v130 = 0;
    if ((v16 & 4) == 0)
      goto LABEL_8;
    goto LABEL_30;
  }
  v130 = 0;
LABEL_29:
  result = sub_1D57EA700(*(_QWORD *)&v17[v24[5]], *(_QWORD *)&v17[v24[5] + 8]);
  if ((v19 & 1) == 0)
  {
LABEL_8:
    if ((_DWORD)v20)
      goto LABEL_9;
    goto LABEL_31;
  }
LABEL_30:
  result = (*(uint64_t (**)(char *, uint64_t))(v115 + 8))(&v17[v24[6]], v116);
  if ((v20 & 1) != 0)
  {
LABEL_9:
    v25 = &v17[v24[7]];
    v26 = *((_OWORD *)v25 + 7);
    v151[6] = *((_OWORD *)v25 + 6);
    v151[7] = v26;
    *(_QWORD *)((char *)&v151[7] + 15) = *(_QWORD *)(v25 + 127);
    v27 = *((_OWORD *)v25 + 3);
    v151[2] = *((_OWORD *)v25 + 2);
    v151[3] = v27;
    v28 = *((_OWORD *)v25 + 4);
    v151[5] = *((_OWORD *)v25 + 5);
    v151[4] = v28;
    v29 = *(_OWORD *)v25;
    v151[1] = *((_OWORD *)v25 + 1);
    v151[0] = v29;
    result = sub_1D57D5AE0((uint64_t)v151);
    if ((v21 & 1) == 0)
      goto LABEL_10;
    goto LABEL_32;
  }
LABEL_31:
  if (!(_DWORD)v21)
  {
LABEL_10:
    if ((_DWORD)v22)
      goto LABEL_11;
    goto LABEL_33;
  }
LABEL_32:
  result = sub_1D57DAEDC(*(_QWORD *)&v17[v24[10]], *(_QWORD *)&v17[v24[10] + 8], *(_QWORD *)&v17[v24[10] + 16]);
  if ((v22 & 1) != 0)
  {
LABEL_11:
    sub_1D57E4810((uint64_t)&v17[v24[11]], (uint64_t)v151, (unint64_t *)&qword_1ED9CEEE0);
    result = (uint64_t)sub_1D57DE9C8(v151, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DEA24);
    if ((v23 & 1) == 0)
      goto LABEL_12;
    goto LABEL_34;
  }
LABEL_33:
  if (!(_DWORD)v23)
  {
LABEL_12:
    if ((_DWORD)v118)
      goto LABEL_13;
    goto LABEL_35;
  }
LABEL_34:
  result = swift_bridgeObjectRelease();
  if ((v118 & 1) != 0)
  {
LABEL_13:
    memcpy(v151, &v17[v24[13]], 0x111uLL);
    result = sub_1D57D5AB8((uint64_t)v151);
    if ((v119 & 1) == 0)
      goto LABEL_14;
    goto LABEL_36;
  }
LABEL_35:
  if (!(_DWORD)v119)
  {
LABEL_14:
    if ((_DWORD)v120)
      goto LABEL_15;
    goto LABEL_37;
  }
LABEL_36:
  result = sub_1D57EA700(*(_QWORD *)&v17[v24[16]], *(_QWORD *)&v17[v24[16] + 8]);
  if ((v120 & 1) != 0)
  {
LABEL_15:
    result = swift_bridgeObjectRelease();
    if ((v121 & 1) == 0)
      goto LABEL_16;
    goto LABEL_38;
  }
LABEL_37:
  if (!(_DWORD)v121)
  {
LABEL_16:
    if ((_DWORD)v122)
      goto LABEL_17;
    goto LABEL_39;
  }
LABEL_38:
  result = swift_bridgeObjectRelease();
  if ((v122 & 1) != 0)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v123 & 1) == 0)
      goto LABEL_18;
    goto LABEL_40;
  }
LABEL_39:
  if (!(_DWORD)v123)
  {
LABEL_18:
    if ((_DWORD)v124)
      goto LABEL_19;
    goto LABEL_41;
  }
LABEL_40:
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v124 & 1) != 0)
  {
LABEL_19:
    result = sub_1D584ABF4(*(_QWORD *)&v17[v24[21]], *(_QWORD *)&v17[v24[21] + 8]);
    if ((v125 & 1) == 0)
      goto LABEL_20;
    goto LABEL_42;
  }
LABEL_41:
  if (!(_DWORD)v125)
  {
LABEL_20:
    if ((_DWORD)v126)
      goto LABEL_21;
    goto LABEL_43;
  }
LABEL_42:
  result = sub_1D584ABF4(*(_QWORD *)&v17[v24[23]], *(_QWORD *)&v17[v24[23] + 8]);
  if ((v126 & 1) != 0)
  {
LABEL_21:
    result = sub_1D58B0710(*(_QWORD *)&v17[v24[24]], *(_QWORD *)&v17[v24[24] + 8]);
    if ((v127 & 1) == 0)
      goto LABEL_22;
    goto LABEL_44;
  }
LABEL_43:
  if (!(_DWORD)v127)
  {
LABEL_22:
    if ((_DWORD)v128)
      goto LABEL_23;
    goto LABEL_45;
  }
LABEL_44:
  result = sub_1D5967B0C(*(_QWORD *)&v17[v24[27]], *(_QWORD *)&v17[v24[27] + 8]);
  if ((v128 & 1) != 0)
  {
LABEL_23:
    sub_1D57E4810((uint64_t)&v17[v24[28]], (uint64_t)v151, (unint64_t *)&qword_1ED9C6A60);
    result = sub_1D5976328((uint64_t)v151, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D59763D4);
    if ((v129 & 1) == 0)
      goto LABEL_24;
    goto LABEL_46;
  }
LABEL_45:
  if (!(_DWORD)v129)
  {
LABEL_24:
    if ((_DWORD)v132)
      goto LABEL_25;
    goto LABEL_47;
  }
LABEL_46:
  result = swift_bridgeObjectRelease();
  if ((v132 & 1) != 0)
  {
LABEL_25:
    result = swift_bridgeObjectRelease();
    if ((v131 & 1) == 0)
      goto LABEL_26;
LABEL_48:
    result = swift_bridgeObjectRelease();
    if (!v130)
      return result;
    return sub_1D584ABF4(*(_QWORD *)&v17[v24[34]], *(_QWORD *)&v17[v24[34] + 8]);
  }
LABEL_47:
  if ((_DWORD)v131)
    goto LABEL_48;
LABEL_26:
  if (!v130)
    return result;
  return sub_1D584ABF4(*(_QWORD *)&v17[v24[34]], *(_QWORD *)&v17[v24[34] + 8]);
}

void sub_1D59985B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5996F48();
    v7 = a3(a1, &type metadata for ArticleViewEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5998610(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArticleViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5998654(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArticleViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5998690@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D59986A4(_QWORD *a1)
{
  return ArticleViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D59986B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CD1C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCB40, a1);
}

uint64_t sub_1D59986DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CD1D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCD98, a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v140 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v140 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
    v56 = a3[17];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
    v60 = a3[18];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
    v64 = a3[19];
    v65 = (char *)a1 + v64;
    v66 = (char *)a2 + v64;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
    v68 = a3[20];
    v69 = (char *)a1 + v68;
    v70 = (char *)a2 + v68;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v69, v70, v71);
    v72 = a3[21];
    v73 = (char *)a1 + v72;
    v74 = (char *)a2 + v72;
    sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v73, v74, v75);
    v76 = a3[22];
    v77 = (char *)a1 + v76;
    v78 = (char *)a2 + v76;
    sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v77, v78, v79);
    v80 = a3[23];
    v81 = (char *)a1 + v80;
    v82 = (char *)a2 + v80;
    sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v81, v82, v83);
    v84 = a3[24];
    v85 = (char *)a1 + v84;
    v86 = (char *)a2 + v84;
    sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v85, v86, v87);
    v88 = a3[25];
    v89 = (char *)a1 + v88;
    v90 = (char *)a2 + v88;
    sub_1D579E208(0, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v89, v90, v91);
    v92 = a3[26];
    v93 = (char *)a1 + v92;
    v94 = (char *)a2 + v92;
    sub_1D579E208(0, &qword_1ED9C7168, (void (*)(void))sub_1D57CAC08, (void (*)(void))sub_1D57CAC4C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v93, v94, v95);
    v96 = a3[27];
    v97 = (char *)a1 + v96;
    v98 = (char *)a2 + v96;
    sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v97, v98, v99);
    v100 = a3[28];
    v101 = (char *)a1 + v100;
    v102 = (char *)a2 + v100;
    sub_1D579E208(0, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v101, v102, v103);
    v104 = a3[29];
    v105 = (char *)a1 + v104;
    v106 = (char *)a2 + v104;
    sub_1D579E208(0, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v105, v106, v107);
    v108 = a3[30];
    v109 = (char *)a1 + v108;
    v110 = (char *)a2 + v108;
    sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 16))(v109, v110, v111);
    v112 = a3[31];
    v113 = (char *)a1 + v112;
    v114 = (char *)a2 + v112;
    sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 16))(v113, v114, v115);
    v116 = a3[32];
    v117 = (char *)a1 + v116;
    v118 = (char *)a2 + v116;
    sub_1D579E208(0, &qword_1ED9C67E0, (void (*)(void))sub_1D57C8E20, (void (*)(void))sub_1D57C8E64);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 16))(v117, v118, v119);
    v120 = a3[33];
    v121 = (char *)a1 + v120;
    v122 = (char *)a2 + v120;
    sub_1D579E208(0, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 16))(v121, v122, v123);
    v124 = a3[34];
    v125 = (char *)a1 + v124;
    v126 = (char *)a2 + v124;
    sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 16))(v125, v126, v127);
    v128 = a3[35];
    v129 = (char *)a1 + v128;
    v130 = (char *)a2 + v128;
    sub_1D579E208(0, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(v129, v130, v131);
    v132 = a3[36];
    v133 = (char *)a1 + v132;
    v134 = (char *)a2 + v132;
    sub_1D579E208(0, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(v133, v134, v135);
    v136 = a3[37];
    v137 = (char *)a1 + v136;
    v138 = (char *)a2 + v136;
    sub_1D579E208(0, &qword_1ED9CEAA0, (void (*)(void))sub_1D57C8D98, (void (*)(void))sub_1D57C8DDC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v139 - 8) + 16))(v137, v138, v139);
  }
  return a1;
}

uint64_t destroy for ArticleViewEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  v29 = a1 + a2[17];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
  v31 = a1 + a2[18];
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
  v33 = a1 + a2[19];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
  v35 = a1 + a2[20];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
  v37 = a1 + a2[21];
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
  v39 = a1 + a2[22];
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
  v41 = a1 + a2[23];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
  v43 = a1 + a2[24];
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
  v45 = a1 + a2[25];
  sub_1D579E208(0, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
  v47 = a1 + a2[26];
  sub_1D579E208(0, &qword_1ED9C7168, (void (*)(void))sub_1D57CAC08, (void (*)(void))sub_1D57CAC4C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v47, v48);
  v49 = a1 + a2[27];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v49, v50);
  v51 = a1 + a2[28];
  sub_1D579E208(0, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
  v53 = a1 + a2[29];
  sub_1D579E208(0, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v53, v54);
  v55 = a1 + a2[30];
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 8))(v55, v56);
  v57 = a1 + a2[31];
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v57, v58);
  v59 = a1 + a2[32];
  sub_1D579E208(0, &qword_1ED9C67E0, (void (*)(void))sub_1D57C8E20, (void (*)(void))sub_1D57C8E64);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v59, v60);
  v61 = a1 + a2[33];
  sub_1D579E208(0, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(v61, v62);
  v63 = a1 + a2[34];
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(v63, v64);
  v65 = a1 + a2[35];
  sub_1D579E208(0, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 8))(v65, v66);
  v67 = a1 + a2[36];
  sub_1D579E208(0, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 8))(v67, v68);
  v69 = a1 + a2[37];
  sub_1D579E208(0, &qword_1ED9CEAA0, (void (*)(void))sub_1D57C8D98, (void (*)(void))sub_1D57C8DDC);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 8))(v69, v70);
}

uint64_t initializeWithCopy for ArticleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v64, v65, v66);
  v67 = a3[20];
  v68 = a1 + v67;
  v69 = a2 + v67;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v68, v69, v70);
  v71 = a3[21];
  v72 = a1 + v71;
  v73 = a2 + v71;
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v72, v73, v74);
  v75 = a3[22];
  v76 = a1 + v75;
  v77 = a2 + v75;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v76, v77, v78);
  v79 = a3[23];
  v80 = a1 + v79;
  v81 = a2 + v79;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v80, v81, v82);
  v83 = a3[24];
  v84 = a1 + v83;
  v85 = a2 + v83;
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v84, v85, v86);
  v87 = a3[25];
  v88 = a1 + v87;
  v89 = a2 + v87;
  sub_1D579E208(0, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v88, v89, v90);
  v91 = a3[26];
  v92 = a1 + v91;
  v93 = a2 + v91;
  sub_1D579E208(0, &qword_1ED9C7168, (void (*)(void))sub_1D57CAC08, (void (*)(void))sub_1D57CAC4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v92, v93, v94);
  v95 = a3[27];
  v96 = a1 + v95;
  v97 = a2 + v95;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v96, v97, v98);
  v99 = a3[28];
  v100 = a1 + v99;
  v101 = a2 + v99;
  sub_1D579E208(0, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v100, v101, v102);
  v103 = a3[29];
  v104 = a1 + v103;
  v105 = a2 + v103;
  sub_1D579E208(0, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v104, v105, v106);
  v107 = a3[30];
  v108 = a1 + v107;
  v109 = a2 + v107;
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 16))(v108, v109, v110);
  v111 = a3[31];
  v112 = a1 + v111;
  v113 = a2 + v111;
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 16))(v112, v113, v114);
  v115 = a3[32];
  v116 = a1 + v115;
  v117 = a2 + v115;
  sub_1D579E208(0, &qword_1ED9C67E0, (void (*)(void))sub_1D57C8E20, (void (*)(void))sub_1D57C8E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 16))(v116, v117, v118);
  v119 = a3[33];
  v120 = a1 + v119;
  v121 = a2 + v119;
  sub_1D579E208(0, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 16))(v120, v121, v122);
  v123 = a3[34];
  v124 = a1 + v123;
  v125 = a2 + v123;
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(v124, v125, v126);
  v127 = a3[35];
  v128 = a1 + v127;
  v129 = a2 + v127;
  sub_1D579E208(0, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v128, v129, v130);
  v131 = a3[36];
  v132 = a1 + v131;
  v133 = a2 + v131;
  sub_1D579E208(0, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(v132, v133, v134);
  v135 = a3[37];
  v136 = a1 + v135;
  v137 = a2 + v135;
  sub_1D579E208(0, &qword_1ED9CEAA0, (void (*)(void))sub_1D57C8D98, (void (*)(void))sub_1D57C8DDC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 16))(v136, v137, v138);
  return a1;
}

uint64_t assignWithCopy for ArticleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 24))(v64, v65, v66);
  v67 = a3[20];
  v68 = a1 + v67;
  v69 = a2 + v67;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 24))(v68, v69, v70);
  v71 = a3[21];
  v72 = a1 + v71;
  v73 = a2 + v71;
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 24))(v72, v73, v74);
  v75 = a3[22];
  v76 = a1 + v75;
  v77 = a2 + v75;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 24))(v76, v77, v78);
  v79 = a3[23];
  v80 = a1 + v79;
  v81 = a2 + v79;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 24))(v80, v81, v82);
  v83 = a3[24];
  v84 = a1 + v83;
  v85 = a2 + v83;
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 24))(v84, v85, v86);
  v87 = a3[25];
  v88 = a1 + v87;
  v89 = a2 + v87;
  sub_1D579E208(0, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 24))(v88, v89, v90);
  v91 = a3[26];
  v92 = a1 + v91;
  v93 = a2 + v91;
  sub_1D579E208(0, &qword_1ED9C7168, (void (*)(void))sub_1D57CAC08, (void (*)(void))sub_1D57CAC4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 24))(v92, v93, v94);
  v95 = a3[27];
  v96 = a1 + v95;
  v97 = a2 + v95;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 24))(v96, v97, v98);
  v99 = a3[28];
  v100 = a1 + v99;
  v101 = a2 + v99;
  sub_1D579E208(0, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 24))(v100, v101, v102);
  v103 = a3[29];
  v104 = a1 + v103;
  v105 = a2 + v103;
  sub_1D579E208(0, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 24))(v104, v105, v106);
  v107 = a3[30];
  v108 = a1 + v107;
  v109 = a2 + v107;
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 24))(v108, v109, v110);
  v111 = a3[31];
  v112 = a1 + v111;
  v113 = a2 + v111;
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 24))(v112, v113, v114);
  v115 = a3[32];
  v116 = a1 + v115;
  v117 = a2 + v115;
  sub_1D579E208(0, &qword_1ED9C67E0, (void (*)(void))sub_1D57C8E20, (void (*)(void))sub_1D57C8E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 24))(v116, v117, v118);
  v119 = a3[33];
  v120 = a1 + v119;
  v121 = a2 + v119;
  sub_1D579E208(0, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 24))(v120, v121, v122);
  v123 = a3[34];
  v124 = a1 + v123;
  v125 = a2 + v123;
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 24))(v124, v125, v126);
  v127 = a3[35];
  v128 = a1 + v127;
  v129 = a2 + v127;
  sub_1D579E208(0, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 24))(v128, v129, v130);
  v131 = a3[36];
  v132 = a1 + v131;
  v133 = a2 + v131;
  sub_1D579E208(0, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 24))(v132, v133, v134);
  v135 = a3[37];
  v136 = a1 + v135;
  v137 = a2 + v135;
  sub_1D579E208(0, &qword_1ED9CEAA0, (void (*)(void))sub_1D57C8D98, (void (*)(void))sub_1D57C8DDC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 24))(v136, v137, v138);
  return a1;
}

uint64_t initializeWithTake for ArticleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v64, v65, v66);
  v67 = a3[20];
  v68 = a1 + v67;
  v69 = a2 + v67;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v68, v69, v70);
  v71 = a3[21];
  v72 = a1 + v71;
  v73 = a2 + v71;
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v72, v73, v74);
  v75 = a3[22];
  v76 = a1 + v75;
  v77 = a2 + v75;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v76, v77, v78);
  v79 = a3[23];
  v80 = a1 + v79;
  v81 = a2 + v79;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v80, v81, v82);
  v83 = a3[24];
  v84 = a1 + v83;
  v85 = a2 + v83;
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(v84, v85, v86);
  v87 = a3[25];
  v88 = a1 + v87;
  v89 = a2 + v87;
  sub_1D579E208(0, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v88, v89, v90);
  v91 = a3[26];
  v92 = a1 + v91;
  v93 = a2 + v91;
  sub_1D579E208(0, &qword_1ED9C7168, (void (*)(void))sub_1D57CAC08, (void (*)(void))sub_1D57CAC4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v92, v93, v94);
  v95 = a3[27];
  v96 = a1 + v95;
  v97 = a2 + v95;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v96, v97, v98);
  v99 = a3[28];
  v100 = a1 + v99;
  v101 = a2 + v99;
  sub_1D579E208(0, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v100, v101, v102);
  v103 = a3[29];
  v104 = a1 + v103;
  v105 = a2 + v103;
  sub_1D579E208(0, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v104, v105, v106);
  v107 = a3[30];
  v108 = a1 + v107;
  v109 = a2 + v107;
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(v108, v109, v110);
  v111 = a3[31];
  v112 = a1 + v111;
  v113 = a2 + v111;
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 32))(v112, v113, v114);
  v115 = a3[32];
  v116 = a1 + v115;
  v117 = a2 + v115;
  sub_1D579E208(0, &qword_1ED9C67E0, (void (*)(void))sub_1D57C8E20, (void (*)(void))sub_1D57C8E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v116, v117, v118);
  v119 = a3[33];
  v120 = a1 + v119;
  v121 = a2 + v119;
  sub_1D579E208(0, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 32))(v120, v121, v122);
  v123 = a3[34];
  v124 = a1 + v123;
  v125 = a2 + v123;
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 32))(v124, v125, v126);
  v127 = a3[35];
  v128 = a1 + v127;
  v129 = a2 + v127;
  sub_1D579E208(0, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 32))(v128, v129, v130);
  v131 = a3[36];
  v132 = a1 + v131;
  v133 = a2 + v131;
  sub_1D579E208(0, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(v132, v133, v134);
  v135 = a3[37];
  v136 = a1 + v135;
  v137 = a2 + v135;
  sub_1D579E208(0, &qword_1ED9CEAA0, (void (*)(void))sub_1D57C8D98, (void (*)(void))sub_1D57C8DDC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 32))(v136, v137, v138);
  return a1;
}

uint64_t assignWithTake for ArticleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 40))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 40))(v64, v65, v66);
  v67 = a3[20];
  v68 = a1 + v67;
  v69 = a2 + v67;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 40))(v68, v69, v70);
  v71 = a3[21];
  v72 = a1 + v71;
  v73 = a2 + v71;
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 40))(v72, v73, v74);
  v75 = a3[22];
  v76 = a1 + v75;
  v77 = a2 + v75;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 40))(v76, v77, v78);
  v79 = a3[23];
  v80 = a1 + v79;
  v81 = a2 + v79;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 40))(v80, v81, v82);
  v83 = a3[24];
  v84 = a1 + v83;
  v85 = a2 + v83;
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 40))(v84, v85, v86);
  v87 = a3[25];
  v88 = a1 + v87;
  v89 = a2 + v87;
  sub_1D579E208(0, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 40))(v88, v89, v90);
  v91 = a3[26];
  v92 = a1 + v91;
  v93 = a2 + v91;
  sub_1D579E208(0, &qword_1ED9C7168, (void (*)(void))sub_1D57CAC08, (void (*)(void))sub_1D57CAC4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 40))(v92, v93, v94);
  v95 = a3[27];
  v96 = a1 + v95;
  v97 = a2 + v95;
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 40))(v96, v97, v98);
  v99 = a3[28];
  v100 = a1 + v99;
  v101 = a2 + v99;
  sub_1D579E208(0, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 40))(v100, v101, v102);
  v103 = a3[29];
  v104 = a1 + v103;
  v105 = a2 + v103;
  sub_1D579E208(0, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 40))(v104, v105, v106);
  v107 = a3[30];
  v108 = a1 + v107;
  v109 = a2 + v107;
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 40))(v108, v109, v110);
  v111 = a3[31];
  v112 = a1 + v111;
  v113 = a2 + v111;
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 40))(v112, v113, v114);
  v115 = a3[32];
  v116 = a1 + v115;
  v117 = a2 + v115;
  sub_1D579E208(0, &qword_1ED9C67E0, (void (*)(void))sub_1D57C8E20, (void (*)(void))sub_1D57C8E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 40))(v116, v117, v118);
  v119 = a3[33];
  v120 = a1 + v119;
  v121 = a2 + v119;
  sub_1D579E208(0, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 40))(v120, v121, v122);
  v123 = a3[34];
  v124 = a1 + v123;
  v125 = a2 + v123;
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 40))(v124, v125, v126);
  v127 = a3[35];
  v128 = a1 + v127;
  v129 = a2 + v127;
  sub_1D579E208(0, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 40))(v128, v129, v130);
  v131 = a3[36];
  v132 = a1 + v131;
  v133 = a2 + v131;
  sub_1D579E208(0, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 40))(v132, v133, v134);
  v135 = a3[37];
  v136 = a1 + v135;
  v137 = a2 + v135;
  sub_1D579E208(0, &qword_1ED9CEAA0, (void (*)(void))sub_1D57C8D98, (void (*)(void))sub_1D57C8DDC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 40))(v136, v137, v138);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleViewEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D599C234(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D57A8C9C();
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                          v12 = *(_QWORD *)(v24 - 8);
                          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                          {
                            v8 = v24;
                            v13 = a3[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                            v12 = *(_QWORD *)(v25 - 8);
                            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                            {
                              v8 = v25;
                              v13 = a3[17];
                            }
                            else
                            {
                              sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
                              v12 = *(_QWORD *)(v26 - 8);
                              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                              {
                                v8 = v26;
                                v13 = a3[18];
                              }
                              else
                              {
                                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                                v12 = *(_QWORD *)(v27 - 8);
                                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                {
                                  v8 = v27;
                                  v13 = a3[19];
                                }
                                else
                                {
                                  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                                  v12 = *(_QWORD *)(v28 - 8);
                                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                  {
                                    v8 = v28;
                                    v13 = a3[20];
                                  }
                                  else
                                  {
                                    sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
                                    v12 = *(_QWORD *)(v29 - 8);
                                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                    {
                                      v8 = v29;
                                      v13 = a3[21];
                                    }
                                    else
                                    {
                                      sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
                                      v12 = *(_QWORD *)(v30 - 8);
                                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                      {
                                        v8 = v30;
                                        v13 = a3[22];
                                      }
                                      else
                                      {
                                        sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
                                        v12 = *(_QWORD *)(v31 - 8);
                                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                        {
                                          v8 = v31;
                                          v13 = a3[23];
                                        }
                                        else
                                        {
                                          sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
                                          v12 = *(_QWORD *)(v32 - 8);
                                          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                          {
                                            v8 = v32;
                                            v13 = a3[24];
                                          }
                                          else
                                          {
                                            sub_1D579E208(0, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
                                            v12 = *(_QWORD *)(v33 - 8);
                                            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                            {
                                              v8 = v33;
                                              v13 = a3[25];
                                            }
                                            else
                                            {
                                              sub_1D579E208(0, &qword_1ED9C7168, (void (*)(void))sub_1D57CAC08, (void (*)(void))sub_1D57CAC4C);
                                              v12 = *(_QWORD *)(v34 - 8);
                                              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                              {
                                                v8 = v34;
                                                v13 = a3[26];
                                              }
                                              else
                                              {
                                                sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                                                v12 = *(_QWORD *)(v35 - 8);
                                                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                                {
                                                  v8 = v35;
                                                  v13 = a3[27];
                                                }
                                                else
                                                {
                                                  sub_1D579E208(0, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
                                                  v12 = *(_QWORD *)(v36 - 8);
                                                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                                  {
                                                    v8 = v36;
                                                    v13 = a3[28];
                                                  }
                                                  else
                                                  {
                                                    sub_1D579E208(0, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
                                                    v12 = *(_QWORD *)(v37 - 8);
                                                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                                    {
                                                      v8 = v37;
                                                      v13 = a3[29];
                                                    }
                                                    else
                                                    {
                                                      sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
                                                      v12 = *(_QWORD *)(v38 - 8);
                                                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                                      {
                                                        v8 = v38;
                                                        v13 = a3[30];
                                                      }
                                                      else
                                                      {
                                                        sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
                                                        v12 = *(_QWORD *)(v39 - 8);
                                                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                                        {
                                                          v8 = v39;
                                                          v13 = a3[31];
                                                        }
                                                        else
                                                        {
                                                          sub_1D579E208(0, &qword_1ED9C67E0, (void (*)(void))sub_1D57C8E20, (void (*)(void))sub_1D57C8E64);
                                                          v12 = *(_QWORD *)(v40 - 8);
                                                          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                                          {
                                                            v8 = v40;
                                                            v13 = a3[32];
                                                          }
                                                          else
                                                          {
                                                            sub_1D579E208(0, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
                                                            v12 = *(_QWORD *)(v41 - 8);
                                                            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                                            {
                                                              v8 = v41;
                                                              v13 = a3[33];
                                                            }
                                                            else
                                                            {
                                                              sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
                                                              v12 = *(_QWORD *)(v42 - 8);
                                                              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                                              {
                                                                v8 = v42;
                                                                v13 = a3[34];
                                                              }
                                                              else
                                                              {
                                                                sub_1D579E208(0, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
                                                                v12 = *(_QWORD *)(v43 - 8);
                                                                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                                                {
                                                                  v8 = v43;
                                                                  v13 = a3[35];
                                                                }
                                                                else
                                                                {
                                                                  sub_1D579E208(0, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
                                                                  v12 = *(_QWORD *)(v44 - 8);
                                                                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                                                  {
                                                                    v8 = v44;
                                                                    v13 = a3[36];
                                                                  }
                                                                  else
                                                                  {
                                                                    sub_1D579E208(0, &qword_1ED9CEAA0, (void (*)(void))sub_1D57C8D98, (void (*)(void))sub_1D57C8DDC);
                                                                    v8 = v45;
                                                                    v12 = *(_QWORD *)(v45 - 8);
                                                                    v13 = a3[37];
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ArticleViewEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D599CB34(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C7280, (void (*)(void))sub_1D57C68C8, (void (*)(void))sub_1D57C690C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D57A8C9C();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                          v14 = *(_QWORD *)(v26 - 8);
                          if (*(_DWORD *)(v14 + 84) == a3)
                          {
                            v10 = v26;
                            v15 = a4[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                            v14 = *(_QWORD *)(v27 - 8);
                            if (*(_DWORD *)(v14 + 84) == a3)
                            {
                              v10 = v27;
                              v15 = a4[17];
                            }
                            else
                            {
                              sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
                              v14 = *(_QWORD *)(v28 - 8);
                              if (*(_DWORD *)(v14 + 84) == a3)
                              {
                                v10 = v28;
                                v15 = a4[18];
                              }
                              else
                              {
                                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                                v14 = *(_QWORD *)(v29 - 8);
                                if (*(_DWORD *)(v14 + 84) == a3)
                                {
                                  v10 = v29;
                                  v15 = a4[19];
                                }
                                else
                                {
                                  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                                  v14 = *(_QWORD *)(v30 - 8);
                                  if (*(_DWORD *)(v14 + 84) == a3)
                                  {
                                    v10 = v30;
                                    v15 = a4[20];
                                  }
                                  else
                                  {
                                    sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
                                    v14 = *(_QWORD *)(v31 - 8);
                                    if (*(_DWORD *)(v14 + 84) == a3)
                                    {
                                      v10 = v31;
                                      v15 = a4[21];
                                    }
                                    else
                                    {
                                      sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
                                      v14 = *(_QWORD *)(v32 - 8);
                                      if (*(_DWORD *)(v14 + 84) == a3)
                                      {
                                        v10 = v32;
                                        v15 = a4[22];
                                      }
                                      else
                                      {
                                        sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
                                        v14 = *(_QWORD *)(v33 - 8);
                                        if (*(_DWORD *)(v14 + 84) == a3)
                                        {
                                          v10 = v33;
                                          v15 = a4[23];
                                        }
                                        else
                                        {
                                          sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
                                          v14 = *(_QWORD *)(v34 - 8);
                                          if (*(_DWORD *)(v14 + 84) == a3)
                                          {
                                            v10 = v34;
                                            v15 = a4[24];
                                          }
                                          else
                                          {
                                            sub_1D579E208(0, &qword_1ED9C7208, (void (*)(void))sub_1D57C86A8, (void (*)(void))sub_1D57C86EC);
                                            v14 = *(_QWORD *)(v35 - 8);
                                            if (*(_DWORD *)(v14 + 84) == a3)
                                            {
                                              v10 = v35;
                                              v15 = a4[25];
                                            }
                                            else
                                            {
                                              sub_1D579E208(0, &qword_1ED9C7168, (void (*)(void))sub_1D57CAC08, (void (*)(void))sub_1D57CAC4C);
                                              v14 = *(_QWORD *)(v36 - 8);
                                              if (*(_DWORD *)(v14 + 84) == a3)
                                              {
                                                v10 = v36;
                                                v15 = a4[26];
                                              }
                                              else
                                              {
                                                sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                                                v14 = *(_QWORD *)(v37 - 8);
                                                if (*(_DWORD *)(v14 + 84) == a3)
                                                {
                                                  v10 = v37;
                                                  v15 = a4[27];
                                                }
                                                else
                                                {
                                                  sub_1D579E208(0, &qword_1ED9C7218, (void (*)(void))sub_1D57C82D0, (void (*)(void))sub_1D57C8314);
                                                  v14 = *(_QWORD *)(v38 - 8);
                                                  if (*(_DWORD *)(v14 + 84) == a3)
                                                  {
                                                    v10 = v38;
                                                    v15 = a4[28];
                                                  }
                                                  else
                                                  {
                                                    sub_1D579E208(0, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
                                                    v14 = *(_QWORD *)(v39 - 8);
                                                    if (*(_DWORD *)(v14 + 84) == a3)
                                                    {
                                                      v10 = v39;
                                                      v15 = a4[29];
                                                    }
                                                    else
                                                    {
                                                      sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
                                                      v14 = *(_QWORD *)(v40 - 8);
                                                      if (*(_DWORD *)(v14 + 84) == a3)
                                                      {
                                                        v10 = v40;
                                                        v15 = a4[30];
                                                      }
                                                      else
                                                      {
                                                        sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
                                                        v14 = *(_QWORD *)(v41 - 8);
                                                        if (*(_DWORD *)(v14 + 84) == a3)
                                                        {
                                                          v10 = v41;
                                                          v15 = a4[31];
                                                        }
                                                        else
                                                        {
                                                          sub_1D579E208(0, &qword_1ED9C67E0, (void (*)(void))sub_1D57C8E20, (void (*)(void))sub_1D57C8E64);
                                                          v14 = *(_QWORD *)(v42 - 8);
                                                          if (*(_DWORD *)(v14 + 84) == a3)
                                                          {
                                                            v10 = v42;
                                                            v15 = a4[32];
                                                          }
                                                          else
                                                          {
                                                            sub_1D579E208(0, &qword_1ED9CCCF0, (void (*)(void))sub_1D57C8FD4, (void (*)(void))sub_1D57C9018);
                                                            v14 = *(_QWORD *)(v43 - 8);
                                                            if (*(_DWORD *)(v14 + 84) == a3)
                                                            {
                                                              v10 = v43;
                                                              v15 = a4[33];
                                                            }
                                                            else
                                                            {
                                                              sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
                                                              v14 = *(_QWORD *)(v44 - 8);
                                                              if (*(_DWORD *)(v14 + 84) == a3)
                                                              {
                                                                v10 = v44;
                                                                v15 = a4[34];
                                                              }
                                                              else
                                                              {
                                                                sub_1D579E208(0, &qword_1ED9CD9A0, (void (*)(void))sub_1D57C84E8, (void (*)(void))sub_1D57C852C);
                                                                v14 = *(_QWORD *)(v45 - 8);
                                                                if (*(_DWORD *)(v14 + 84) == a3)
                                                                {
                                                                  v10 = v45;
                                                                  v15 = a4[35];
                                                                }
                                                                else
                                                                {
                                                                  sub_1D579E208(0, &qword_1ED9CF1C8, (void (*)(void))sub_1D57C5E50, (void (*)(void))sub_1D57C5E94);
                                                                  v14 = *(_QWORD *)(v46 - 8);
                                                                  if (*(_DWORD *)(v14 + 84) == a3)
                                                                  {
                                                                    v10 = v46;
                                                                    v15 = a4[36];
                                                                  }
                                                                  else
                                                                  {
                                                                    sub_1D579E208(0, &qword_1ED9CEAA0, (void (*)(void))sub_1D57C8D98, (void (*)(void))sub_1D57C8DDC);
                                                                    v10 = v47;
                                                                    v14 = *(_QWORD *)(v47 - 8);
                                                                    v15 = a4[37];
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

_QWORD *initializeBufferWithCopyOfBuffer for ArticleViewEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  __int128 v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, v3, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)v3 + v8;
    v11 = *((_QWORD *)v10 + 1);
    if (v11)
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v11;
      v12 = *((_QWORD *)v10 + 3);
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v12;
      v9[32] = v10[32];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v14 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v14;
      v9[32] = v10[32];
    }
    v15 = a3[6];
    v16 = (char *)a1 + v15;
    v17 = (char *)v3 + v15;
    v18 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    v19 = a3[7];
    v20 = a3[8];
    v21 = (char *)a1 + v19;
    v22 = (char *)v3 + v19;
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v23 = *((_QWORD *)v22 + 3);
    *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
    *((_QWORD *)v21 + 3) = v23;
    v21[32] = v22[32];
    v24 = *((_QWORD *)v22 + 6);
    *((_QWORD *)v21 + 5) = *((_QWORD *)v22 + 5);
    *((_QWORD *)v21 + 6) = v24;
    v21[56] = v22[56];
    v21[57] = v22[57];
    v25 = *((_QWORD *)v22 + 9);
    *((_QWORD *)v21 + 8) = *((_QWORD *)v22 + 8);
    *((_QWORD *)v21 + 9) = v25;
    v21[80] = v22[80];
    *(_OWORD *)(v21 + 88) = *(_OWORD *)(v22 + 88);
    *((_QWORD *)v21 + 13) = *((_QWORD *)v22 + 13);
    v21[112] = v22[112];
    *((_QWORD *)v21 + 15) = *((_QWORD *)v22 + 15);
    *((_DWORD *)v21 + 32) = *((_DWORD *)v22 + 32);
    v21[132] = v22[132];
    *(_WORD *)(v21 + 133) = *(_WORD *)(v22 + 133);
    v26 = (char *)a1 + v20;
    v27 = (char *)v3 + v20;
    *(_DWORD *)v26 = *(_DWORD *)v27;
    v26[4] = v27[4];
    v28 = a3[9];
    v29 = a3[10];
    v30 = (char *)a1 + v28;
    v31 = (char *)v3 + v28;
    *(_DWORD *)v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    v32 = (char *)a1 + v29;
    v33 = (char *)v3 + v29;
    v34 = *(_QWORD *)((char *)v3 + v29 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v34 == 1)
    {
      *(_OWORD *)v32 = *(_OWORD *)v33;
      *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
    }
    else
    {
      *v32 = *v33;
      *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
      *((_QWORD *)v32 + 2) = v34;
      swift_bridgeObjectRetain();
    }
    v35 = a3[11];
    v36 = (char *)a1 + v35;
    v37 = (char *)v3 + v35;
    v38 = *((_QWORD *)v37 + 2);
    v166 = v3;
    if (v38)
    {
      *(_WORD *)v36 = *(_WORD *)v37;
      *((_QWORD *)v36 + 1) = *((_QWORD *)v37 + 1);
      *((_QWORD *)v36 + 2) = v38;
      *((_QWORD *)v36 + 3) = *((_QWORD *)v37 + 3);
      v39 = *((_QWORD *)v37 + 5);
      *((_QWORD *)v36 + 4) = *((_QWORD *)v37 + 4);
      *((_QWORD *)v36 + 5) = v39;
      v40 = *((_QWORD *)v37 + 7);
      *((_QWORD *)v36 + 6) = *((_QWORD *)v37 + 6);
      *((_QWORD *)v36 + 7) = v40;
      v41 = *((_QWORD *)v37 + 9);
      *((_QWORD *)v36 + 8) = *((_QWORD *)v37 + 8);
      *((_QWORD *)v36 + 9) = v41;
      v36[80] = v37[80];
      v42 = *((_QWORD *)v37 + 12);
      *((_QWORD *)v36 + 11) = *((_QWORD *)v37 + 11);
      *((_QWORD *)v36 + 12) = v42;
      *((_QWORD *)v36 + 13) = *((_QWORD *)v37 + 13);
      v36[112] = v37[112];
      v43 = *((_QWORD *)v37 + 16);
      *((_QWORD *)v36 + 15) = *((_QWORD *)v37 + 15);
      *((_QWORD *)v36 + 16) = v43;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v3 = v166;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v44 = *((_OWORD *)v37 + 7);
      *((_OWORD *)v36 + 6) = *((_OWORD *)v37 + 6);
      *((_OWORD *)v36 + 7) = v44;
      *((_QWORD *)v36 + 16) = *((_QWORD *)v37 + 16);
      v45 = *((_OWORD *)v37 + 3);
      *((_OWORD *)v36 + 2) = *((_OWORD *)v37 + 2);
      *((_OWORD *)v36 + 3) = v45;
      v46 = *((_OWORD *)v37 + 5);
      *((_OWORD *)v36 + 4) = *((_OWORD *)v37 + 4);
      *((_OWORD *)v36 + 5) = v46;
      v47 = *((_OWORD *)v37 + 1);
      *(_OWORD *)v36 = *(_OWORD *)v37;
      *((_OWORD *)v36 + 1) = v47;
    }
    v48 = a3[12];
    v49 = a3[13];
    v50 = (char *)a1 + v48;
    v51 = (char *)v3 + v48;
    v52 = *((_QWORD *)v51 + 1);
    *(_QWORD *)v50 = *(_QWORD *)v51;
    *((_QWORD *)v50 + 1) = v52;
    *((_WORD *)v50 + 8) = *((_WORD *)v51 + 8);
    v53 = (char *)a1 + v49;
    v54 = (char *)v3 + v49;
    v55 = *((_OWORD *)v54 + 1);
    *(_OWORD *)v53 = *(_OWORD *)v54;
    *((_OWORD *)v53 + 1) = v55;
    v56 = *((_OWORD *)v54 + 3);
    *((_OWORD *)v53 + 2) = *((_OWORD *)v54 + 2);
    *((_OWORD *)v53 + 3) = v56;
    v57 = *((_OWORD *)v54 + 5);
    *((_OWORD *)v53 + 4) = *((_OWORD *)v54 + 4);
    *((_OWORD *)v53 + 5) = v57;
    *((_OWORD *)v53 + 6) = *((_OWORD *)v54 + 6);
    v59 = *((_QWORD *)v54 + 14);
    v58 = *((_QWORD *)v54 + 15);
    v53[128] = v54[128];
    *((_QWORD *)v53 + 14) = v59;
    *((_QWORD *)v53 + 15) = v58;
    v60 = *((_QWORD *)v54 + 17);
    v53[144] = v54[144];
    *((_QWORD *)v53 + 17) = v60;
    v61 = *((_QWORD *)v54 + 19);
    v53[160] = v54[160];
    *((_QWORD *)v53 + 19) = v61;
    v62 = *((_QWORD *)v54 + 21);
    v53[176] = v54[176];
    *((_QWORD *)v53 + 21) = v62;
    v63 = *((_QWORD *)v54 + 23);
    v53[192] = v54[192];
    *((_QWORD *)v53 + 23) = v63;
    v64 = *((_QWORD *)v54 + 25);
    v53[208] = v54[208];
    *((_QWORD *)v53 + 25) = v64;
    v65 = *((_QWORD *)v54 + 27);
    v53[224] = v54[224];
    *((_QWORD *)v53 + 27) = v65;
    v66 = *((_QWORD *)v54 + 29);
    v53[240] = v54[240];
    *((_QWORD *)v53 + 29) = v66;
    v67 = *((_QWORD *)v54 + 31);
    v53[256] = v54[256];
    *((_QWORD *)v53 + 31) = v67;
    v68 = *((_QWORD *)v54 + 33);
    v53[272] = v54[272];
    *((_QWORD *)v53 + 33) = v68;
    v69 = a3[15];
    *(_DWORD *)((char *)a1 + a3[14]) = *(_DWORD *)((char *)v3 + a3[14]);
    *(_WORD *)((char *)a1 + v69) = *(_WORD *)((char *)v3 + v69);
    v70 = a3[16];
    v71 = (char *)a1 + v70;
    v72 = (char *)v3 + v70;
    v73 = *(_QWORD *)((char *)v3 + v70 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v73)
    {
      *(_QWORD *)v71 = *(_QWORD *)v72;
      *((_QWORD *)v71 + 1) = v73;
      *((_WORD *)v71 + 8) = *((_WORD *)v72 + 8);
      *((_QWORD *)v71 + 3) = *((_QWORD *)v72 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v74 = *((_OWORD *)v72 + 1);
      *(_OWORD *)v71 = *(_OWORD *)v72;
      *((_OWORD *)v71 + 1) = v74;
    }
    v75 = a3[17];
    v76 = a3[18];
    v77 = (_QWORD *)((char *)a1 + v75);
    v78 = (_QWORD *)((char *)v3 + v75);
    v79 = v78[1];
    *v77 = *v78;
    v77[1] = v79;
    v80 = (_QWORD *)((char *)a1 + v76);
    v81 = (_QWORD *)((char *)v3 + v76);
    v82 = v81[1];
    *v80 = *v81;
    v80[1] = v82;
    v83 = a3[19];
    v84 = a3[20];
    v85 = (char *)a1 + v83;
    v86 = (char *)v3 + v83;
    *v85 = *v86;
    v87 = *((_QWORD *)v86 + 2);
    *((_QWORD *)v85 + 1) = *((_QWORD *)v86 + 1);
    *((_QWORD *)v85 + 2) = v87;
    v85[24] = v86[24];
    v85[25] = v86[25];
    v88 = *((_QWORD *)v86 + 5);
    *((_QWORD *)v85 + 4) = *((_QWORD *)v86 + 4);
    *((_QWORD *)v85 + 5) = v88;
    v85[48] = v86[48];
    v89 = (char *)a1 + v84;
    v90 = (char *)v3 + v84;
    v91 = *((_QWORD *)v90 + 1);
    *(_QWORD *)v89 = *(_QWORD *)v90;
    *((_QWORD *)v89 + 1) = v91;
    v89[16] = v90[16];
    v89[17] = v90[17];
    v92 = v3;
    v93 = *((_QWORD *)v90 + 4);
    *((_QWORD *)v89 + 3) = *((_QWORD *)v90 + 3);
    *((_QWORD *)v89 + 4) = v93;
    v94 = a3[21];
    v95 = (_QWORD *)((char *)a1 + v94);
    v96 = (_QWORD *)((char *)v92 + v94);
    v97 = *(_QWORD *)((char *)v92 + v94 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v97)
    {
      *v95 = *v96;
      v95[1] = v97;
      v98 = v96[3];
      v95[2] = v96[2];
      v95[3] = v98;
      v99 = v96[5];
      v95[4] = v96[4];
      v95[5] = v99;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v100 = *((_OWORD *)v96 + 1);
      *(_OWORD *)v95 = *(_OWORD *)v96;
      *((_OWORD *)v95 + 1) = v100;
      *((_OWORD *)v95 + 2) = *((_OWORD *)v96 + 2);
    }
    v101 = a3[23];
    v102 = v166;
    *(_WORD *)((char *)a1 + a3[22]) = *(_WORD *)((char *)v166 + a3[22]);
    v103 = (_QWORD *)((char *)a1 + v101);
    v104 = (_QWORD *)((char *)v166 + v101);
    v105 = v104[1];
    if (v105)
    {
      *v103 = *v104;
      v103[1] = v105;
      v106 = v104[3];
      v103[2] = v104[2];
      v103[3] = v106;
      v107 = v104[5];
      v103[4] = v104[4];
      v103[5] = v107;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v108 = *((_OWORD *)v104 + 1);
      *(_OWORD *)v103 = *(_OWORD *)v104;
      *((_OWORD *)v103 + 1) = v108;
      *((_OWORD *)v103 + 2) = *((_OWORD *)v104 + 2);
    }
    v109 = a3[24];
    v110 = (char *)a1 + v109;
    v111 = (uint64_t)v166 + v109;
    v112 = *(_QWORD *)(v111 + 8);
    if (v112 == 1)
    {
      v113 = *(_OWORD *)(v111 + 48);
      *((_OWORD *)v110 + 2) = *(_OWORD *)(v111 + 32);
      *((_OWORD *)v110 + 3) = v113;
      *(_OWORD *)(v110 + 58) = *(_OWORD *)(v111 + 58);
      v114 = *(_OWORD *)(v111 + 16);
      *(_OWORD *)v110 = *(_OWORD *)v111;
      *((_OWORD *)v110 + 1) = v114;
    }
    else
    {
      *(_QWORD *)v110 = *(_QWORD *)v111;
      *((_QWORD *)v110 + 1) = v112;
      v110[16] = *(_BYTE *)(v111 + 16);
      v115 = *(_QWORD *)(v111 + 32);
      *((_QWORD *)v110 + 3) = *(_QWORD *)(v111 + 24);
      *((_QWORD *)v110 + 4) = v115;
      v116 = *(_QWORD *)(v111 + 48);
      *((_QWORD *)v110 + 5) = *(_QWORD *)(v111 + 40);
      *((_QWORD *)v110 + 6) = v116;
      v117 = *(_QWORD *)(v111 + 64);
      *((_QWORD *)v110 + 7) = *(_QWORD *)(v111 + 56);
      *((_QWORD *)v110 + 8) = v117;
      v110[72] = *(_BYTE *)(v111 + 72);
      v110[73] = *(_BYTE *)(v111 + 73);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v118 = a3[26];
    *((_BYTE *)a1 + a3[25]) = *((_BYTE *)v166 + a3[25]);
    *((_BYTE *)a1 + v118) = *((_BYTE *)v166 + v118);
    v119 = a3[27];
    v120 = (char *)a1 + v119;
    v121 = (uint64_t)v166 + v119;
    v122 = *(_QWORD *)(v121 + 8);
    if (v122 == 1)
    {
      v123 = *(_OWORD *)(v121 + 16);
      *(_OWORD *)v120 = *(_OWORD *)v121;
      *((_OWORD *)v120 + 1) = v123;
      *((_QWORD *)v120 + 4) = *(_QWORD *)(v121 + 32);
    }
    else
    {
      *(_QWORD *)v120 = *(_QWORD *)v121;
      *((_QWORD *)v120 + 1) = v122;
      v124 = *(_QWORD *)(v121 + 24);
      *((_QWORD *)v120 + 2) = *(_QWORD *)(v121 + 16);
      *((_QWORD *)v120 + 3) = v124;
      *((_QWORD *)v120 + 4) = *(_QWORD *)(v121 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v125 = a3[28];
    v126 = (char *)a1 + v125;
    v127 = (char *)v166 + v125;
    v128 = *(_QWORD *)((char *)v166 + v125 + 8);
    if (v128)
    {
      *(_QWORD *)v126 = *(_QWORD *)v127;
      *((_QWORD *)v126 + 1) = v128;
      v126[16] = v127[16];
      v129 = *((_QWORD *)v127 + 4);
      *((_QWORD *)v126 + 3) = *((_QWORD *)v127 + 3);
      *((_QWORD *)v126 + 4) = v129;
      *((_QWORD *)v126 + 5) = *((_QWORD *)v127 + 5);
      v126[48] = v127[48];
      v130 = *((_QWORD *)v127 + 8);
      *((_QWORD *)v126 + 7) = *((_QWORD *)v127 + 7);
      *((_QWORD *)v126 + 8) = v130;
      v126[72] = v127[72];
      v131 = *((_QWORD *)v127 + 11);
      *((_QWORD *)v126 + 10) = *((_QWORD *)v127 + 10);
      *((_QWORD *)v126 + 11) = v131;
      *((_WORD *)v126 + 48) = *((_WORD *)v127 + 48);
      v132 = *((_QWORD *)v127 + 14);
      *((_QWORD *)v126 + 13) = *((_QWORD *)v127 + 13);
      *((_QWORD *)v126 + 14) = v132;
      v126[120] = v127[120];
      *((_OWORD *)v126 + 8) = *((_OWORD *)v127 + 8);
      *((_QWORD *)v126 + 18) = *((_QWORD *)v127 + 18);
      v126[152] = v127[152];
      *((_QWORD *)v126 + 20) = *((_QWORD *)v127 + 20);
      *((_DWORD *)v126 + 42) = *((_DWORD *)v127 + 42);
      v126[172] = v127[172];
      *(_WORD *)(v126 + 173) = *(_WORD *)(v127 + 173);
      *((_WORD *)v126 + 88) = *((_WORD *)v127 + 88);
      v133 = *((_QWORD *)v127 + 24);
      *((_QWORD *)v126 + 23) = *((_QWORD *)v127 + 23);
      *((_QWORD *)v126 + 24) = v133;
      *((_QWORD *)v126 + 25) = *((_QWORD *)v127 + 25);
      v134 = *((_QWORD *)v127 + 27);
      *((_QWORD *)v126 + 26) = *((_QWORD *)v127 + 26);
      *((_QWORD *)v126 + 27) = v134;
      v135 = *((_QWORD *)v127 + 29);
      *((_QWORD *)v126 + 28) = *((_QWORD *)v127 + 28);
      *((_QWORD *)v126 + 29) = v135;
      v165 = *((_QWORD *)v127 + 31);
      *((_QWORD *)v126 + 30) = *((_QWORD *)v127 + 30);
      *((_QWORD *)v126 + 31) = v165;
      v126[256] = v127[256];
      v136 = *((_QWORD *)v127 + 34);
      *((_QWORD *)v126 + 33) = *((_QWORD *)v127 + 33);
      *((_QWORD *)v126 + 34) = v136;
      v126[288] = v127[288];
      *((_QWORD *)v126 + 35) = *((_QWORD *)v127 + 35);
      v164 = *((_QWORD *)v127 + 38);
      *((_QWORD *)v126 + 37) = *((_QWORD *)v127 + 37);
      *((_QWORD *)v126 + 38) = v164;
      v137 = *((_QWORD *)v127 + 40);
      *((_QWORD *)v126 + 39) = *((_QWORD *)v127 + 39);
      *((_QWORD *)v126 + 40) = v137;
      *((_QWORD *)v126 + 41) = *((_QWORD *)v127 + 41);
      v126[336] = v127[336];
      v138 = *((_QWORD *)v127 + 44);
      *((_QWORD *)v126 + 43) = *((_QWORD *)v127 + 43);
      *((_QWORD *)v126 + 44) = v138;
      v139 = *((_QWORD *)v127 + 46);
      *((_QWORD *)v126 + 45) = *((_QWORD *)v127 + 45);
      *((_QWORD *)v126 + 46) = v139;
      v140 = *((_QWORD *)v127 + 48);
      *((_QWORD *)v126 + 47) = *((_QWORD *)v127 + 47);
      *((_QWORD *)v126 + 48) = v140;
      v126[392] = v127[392];
      v126[393] = v127[393];
      v141 = *((_QWORD *)v127 + 51);
      *((_QWORD *)v126 + 50) = *((_QWORD *)v127 + 50);
      *((_QWORD *)v126 + 51) = v141;
      v142 = *((_QWORD *)v127 + 53);
      *((_QWORD *)v126 + 52) = *((_QWORD *)v127 + 52);
      *((_QWORD *)v126 + 53) = v142;
      v143 = *((_QWORD *)v127 + 55);
      *((_QWORD *)v126 + 54) = *((_QWORD *)v127 + 54);
      *((_QWORD *)v126 + 55) = v143;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v102 = v166;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy(v126, v127, 0x1C0uLL);
    }
    v144 = a3[29];
    v145 = a3[30];
    v146 = (char *)a1 + v144;
    v147 = (uint64_t)v102 + v144;
    v148 = *(_QWORD *)(v147 + 8);
    *(_QWORD *)v146 = *(_QWORD *)v147;
    *((_QWORD *)v146 + 1) = v148;
    *((_QWORD *)v146 + 2) = *(_QWORD *)(v147 + 16);
    v146[24] = *(_BYTE *)(v147 + 24);
    v149 = (char *)a1 + v145;
    v150 = (uint64_t)v102 + v145;
    v151 = *(_QWORD *)(v150 + 8);
    *(_QWORD *)v149 = *(_QWORD *)v150;
    *((_QWORD *)v149 + 1) = v151;
    v149[16] = *(_BYTE *)(v150 + 16);
    v152 = a3[32];
    *(_QWORD *)((char *)a1 + a3[31]) = *(_QWORD *)((char *)v102 + a3[31]);
    *((_BYTE *)a1 + v152) = *((_BYTE *)v102 + v152);
    v153 = a3[34];
    *((_BYTE *)a1 + a3[33]) = *((_BYTE *)v102 + a3[33]);
    v154 = (_QWORD *)((char *)a1 + v153);
    v155 = (_QWORD *)((char *)v102 + v153);
    v156 = *(_QWORD *)((char *)v102 + v153 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v156)
    {
      *v154 = *v155;
      v154[1] = v156;
      v157 = v155[3];
      v154[2] = v155[2];
      v154[3] = v157;
      v158 = v155[5];
      v154[4] = v155[4];
      v154[5] = v158;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v159 = *((_OWORD *)v155 + 1);
      *(_OWORD *)v154 = *(_OWORD *)v155;
      *((_OWORD *)v154 + 1) = v159;
      *((_OWORD *)v154 + 2) = *((_OWORD *)v155 + 2);
    }
    v160 = a3[36];
    *((_BYTE *)a1 + a3[35]) = *((_BYTE *)v102 + a3[35]);
    v161 = (char *)a1 + v160;
    v162 = (uint64_t)v102 + v160;
    *(_QWORD *)v161 = *(_QWORD *)v162;
    v161[8] = *(_BYTE *)(v162 + 8);
    *(_WORD *)((char *)a1 + a3[37]) = *(_WORD *)((char *)v102 + a3[37]);
  }
  return a1;
}

uint64_t destroy for ArticleViewEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  if (*(_QWORD *)(a1 + a2[5] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v5 = a1 + a2[6];
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[10] + 16) != 1)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[11] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[16] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[21] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[23] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[24] + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[27] + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[28] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + a2[34] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ArticleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  int *v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  __int128 v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v161;
  uint64_t v162;
  int *v163;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 8);
  if (v10)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = v10;
    v11 = *(_QWORD *)(v9 + 24);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = v11;
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v12;
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  }
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = a3[7];
  v18 = a3[8];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  v21 = *(_QWORD *)(v20 + 24);
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  *(_QWORD *)(v19 + 24) = v21;
  *(_BYTE *)(v19 + 32) = *(_BYTE *)(v20 + 32);
  v22 = *(_QWORD *)(v20 + 48);
  *(_QWORD *)(v19 + 40) = *(_QWORD *)(v20 + 40);
  *(_QWORD *)(v19 + 48) = v22;
  *(_BYTE *)(v19 + 56) = *(_BYTE *)(v20 + 56);
  *(_BYTE *)(v19 + 57) = *(_BYTE *)(v20 + 57);
  v23 = *(_QWORD *)(v20 + 72);
  *(_QWORD *)(v19 + 64) = *(_QWORD *)(v20 + 64);
  *(_QWORD *)(v19 + 72) = v23;
  *(_BYTE *)(v19 + 80) = *(_BYTE *)(v20 + 80);
  *(_OWORD *)(v19 + 88) = *(_OWORD *)(v20 + 88);
  *(_QWORD *)(v19 + 104) = *(_QWORD *)(v20 + 104);
  *(_BYTE *)(v19 + 112) = *(_BYTE *)(v20 + 112);
  *(_QWORD *)(v19 + 120) = *(_QWORD *)(v20 + 120);
  *(_DWORD *)(v19 + 128) = *(_DWORD *)(v20 + 128);
  *(_BYTE *)(v19 + 132) = *(_BYTE *)(v20 + 132);
  *(_WORD *)(v19 + 133) = *(_WORD *)(v20 + 133);
  v24 = a1 + v18;
  v25 = a2 + v18;
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  v26 = a3[9];
  v27 = a3[10];
  v28 = a1 + v26;
  v29 = a2 + v26;
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  v30 = a1 + v27;
  v31 = a2 + v27;
  v32 = *(_QWORD *)(a2 + v27 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v32 == 1)
  {
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *(_QWORD *)(v30 + 16) = *(_QWORD *)(v31 + 16);
  }
  else
  {
    *(_BYTE *)v30 = *(_BYTE *)v31;
    *(_QWORD *)(v30 + 8) = *(_QWORD *)(v31 + 8);
    *(_QWORD *)(v30 + 16) = v32;
    swift_bridgeObjectRetain();
  }
  v33 = a3[11];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = *(_QWORD *)(v35 + 16);
  v163 = a3;
  if (v36)
  {
    *(_WORD *)v34 = *(_WORD *)v35;
    *(_QWORD *)(v34 + 8) = *(_QWORD *)(v35 + 8);
    *(_QWORD *)(v34 + 16) = v36;
    *(_QWORD *)(v34 + 24) = *(_QWORD *)(v35 + 24);
    v37 = *(_QWORD *)(v35 + 40);
    *(_QWORD *)(v34 + 32) = *(_QWORD *)(v35 + 32);
    *(_QWORD *)(v34 + 40) = v37;
    v38 = *(_QWORD *)(v35 + 56);
    *(_QWORD *)(v34 + 48) = *(_QWORD *)(v35 + 48);
    *(_QWORD *)(v34 + 56) = v38;
    v39 = *(_QWORD *)(v35 + 72);
    *(_QWORD *)(v34 + 64) = *(_QWORD *)(v35 + 64);
    *(_QWORD *)(v34 + 72) = v39;
    *(_BYTE *)(v34 + 80) = *(_BYTE *)(v35 + 80);
    v40 = *(_QWORD *)(v35 + 96);
    *(_QWORD *)(v34 + 88) = *(_QWORD *)(v35 + 88);
    *(_QWORD *)(v34 + 96) = v40;
    *(_QWORD *)(v34 + 104) = *(_QWORD *)(v35 + 104);
    *(_BYTE *)(v34 + 112) = *(_BYTE *)(v35 + 112);
    v41 = *(_QWORD *)(v35 + 128);
    *(_QWORD *)(v34 + 120) = *(_QWORD *)(v35 + 120);
    *(_QWORD *)(v34 + 128) = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v42 = *(_OWORD *)(v35 + 112);
    *(_OWORD *)(v34 + 96) = *(_OWORD *)(v35 + 96);
    *(_OWORD *)(v34 + 112) = v42;
    *(_QWORD *)(v34 + 128) = *(_QWORD *)(v35 + 128);
    v43 = *(_OWORD *)(v35 + 48);
    *(_OWORD *)(v34 + 32) = *(_OWORD *)(v35 + 32);
    *(_OWORD *)(v34 + 48) = v43;
    v44 = *(_OWORD *)(v35 + 80);
    *(_OWORD *)(v34 + 64) = *(_OWORD *)(v35 + 64);
    *(_OWORD *)(v34 + 80) = v44;
    v45 = *(_OWORD *)(v35 + 16);
    *(_OWORD *)v34 = *(_OWORD *)v35;
    *(_OWORD *)(v34 + 16) = v45;
  }
  v46 = a3[12];
  v47 = a3[13];
  v48 = a1 + v46;
  v49 = a2 + v46;
  v50 = *(_QWORD *)(v49 + 8);
  *(_QWORD *)v48 = *(_QWORD *)v49;
  *(_QWORD *)(v48 + 8) = v50;
  *(_WORD *)(v48 + 16) = *(_WORD *)(v49 + 16);
  v51 = a1 + v47;
  v52 = a2 + v47;
  v53 = *(_OWORD *)(v52 + 16);
  *(_OWORD *)v51 = *(_OWORD *)v52;
  *(_OWORD *)(v51 + 16) = v53;
  v54 = *(_OWORD *)(v52 + 48);
  *(_OWORD *)(v51 + 32) = *(_OWORD *)(v52 + 32);
  *(_OWORD *)(v51 + 48) = v54;
  v55 = *(_OWORD *)(v52 + 80);
  *(_OWORD *)(v51 + 64) = *(_OWORD *)(v52 + 64);
  *(_OWORD *)(v51 + 80) = v55;
  *(_OWORD *)(v51 + 96) = *(_OWORD *)(v52 + 96);
  v57 = *(_QWORD *)(v52 + 112);
  v56 = *(_QWORD *)(v52 + 120);
  *(_BYTE *)(v51 + 128) = *(_BYTE *)(v52 + 128);
  *(_QWORD *)(v51 + 112) = v57;
  *(_QWORD *)(v51 + 120) = v56;
  v58 = *(_QWORD *)(v52 + 136);
  *(_BYTE *)(v51 + 144) = *(_BYTE *)(v52 + 144);
  *(_QWORD *)(v51 + 136) = v58;
  v59 = *(_QWORD *)(v52 + 152);
  *(_BYTE *)(v51 + 160) = *(_BYTE *)(v52 + 160);
  *(_QWORD *)(v51 + 152) = v59;
  v60 = *(_QWORD *)(v52 + 168);
  *(_BYTE *)(v51 + 176) = *(_BYTE *)(v52 + 176);
  *(_QWORD *)(v51 + 168) = v60;
  v61 = *(_QWORD *)(v52 + 184);
  *(_BYTE *)(v51 + 192) = *(_BYTE *)(v52 + 192);
  *(_QWORD *)(v51 + 184) = v61;
  v62 = *(_QWORD *)(v52 + 200);
  *(_BYTE *)(v51 + 208) = *(_BYTE *)(v52 + 208);
  *(_QWORD *)(v51 + 200) = v62;
  v63 = *(_QWORD *)(v52 + 216);
  *(_BYTE *)(v51 + 224) = *(_BYTE *)(v52 + 224);
  *(_QWORD *)(v51 + 216) = v63;
  v64 = *(_QWORD *)(v52 + 232);
  *(_BYTE *)(v51 + 240) = *(_BYTE *)(v52 + 240);
  *(_QWORD *)(v51 + 232) = v64;
  v65 = *(_QWORD *)(v52 + 248);
  *(_BYTE *)(v51 + 256) = *(_BYTE *)(v52 + 256);
  *(_QWORD *)(v51 + 248) = v65;
  v66 = *(_QWORD *)(v52 + 264);
  *(_BYTE *)(v51 + 272) = *(_BYTE *)(v52 + 272);
  *(_QWORD *)(v51 + 264) = v66;
  v67 = a3[15];
  *(_DWORD *)(a1 + a3[14]) = *(_DWORD *)(a2 + a3[14]);
  *(_WORD *)(a1 + v67) = *(_WORD *)(a2 + v67);
  v68 = a3[16];
  v69 = a1 + v68;
  v70 = a2 + v68;
  v71 = *(_QWORD *)(a2 + v68 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v71)
  {
    *(_QWORD *)v69 = *(_QWORD *)v70;
    *(_QWORD *)(v69 + 8) = v71;
    *(_WORD *)(v69 + 16) = *(_WORD *)(v70 + 16);
    *(_QWORD *)(v69 + 24) = *(_QWORD *)(v70 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v72 = *(_OWORD *)(v70 + 16);
    *(_OWORD *)v69 = *(_OWORD *)v70;
    *(_OWORD *)(v69 + 16) = v72;
  }
  v73 = a3[17];
  v74 = a3[18];
  v75 = (_QWORD *)(a1 + v73);
  v76 = (_QWORD *)(a2 + v73);
  v77 = v76[1];
  *v75 = *v76;
  v75[1] = v77;
  v78 = (_QWORD *)(a1 + v74);
  v79 = (_QWORD *)(a2 + v74);
  v80 = v79[1];
  *v78 = *v79;
  v78[1] = v80;
  v81 = a3[19];
  v82 = a3[20];
  v83 = a1 + v81;
  v84 = a2 + v81;
  *(_BYTE *)v83 = *(_BYTE *)v84;
  v85 = *(_QWORD *)(v84 + 16);
  *(_QWORD *)(v83 + 8) = *(_QWORD *)(v84 + 8);
  *(_QWORD *)(v83 + 16) = v85;
  *(_BYTE *)(v83 + 24) = *(_BYTE *)(v84 + 24);
  *(_BYTE *)(v83 + 25) = *(_BYTE *)(v84 + 25);
  v86 = *(_QWORD *)(v84 + 40);
  *(_QWORD *)(v83 + 32) = *(_QWORD *)(v84 + 32);
  *(_QWORD *)(v83 + 40) = v86;
  *(_BYTE *)(v83 + 48) = *(_BYTE *)(v84 + 48);
  v87 = a1 + v82;
  v88 = a2 + v82;
  v89 = *(_QWORD *)(v88 + 8);
  *(_QWORD *)v87 = *(_QWORD *)v88;
  *(_QWORD *)(v87 + 8) = v89;
  *(_BYTE *)(v87 + 16) = *(_BYTE *)(v88 + 16);
  *(_BYTE *)(v87 + 17) = *(_BYTE *)(v88 + 17);
  v90 = *(_QWORD *)(v88 + 32);
  *(_QWORD *)(v87 + 24) = *(_QWORD *)(v88 + 24);
  *(_QWORD *)(v87 + 32) = v90;
  v91 = a3[21];
  v92 = (_QWORD *)(a1 + v91);
  v93 = (_QWORD *)(a2 + v91);
  v94 = *(_QWORD *)(a2 + v91 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v94)
  {
    *v92 = *v93;
    v92[1] = v94;
    v95 = v93[3];
    v92[2] = v93[2];
    v92[3] = v95;
    v96 = v93[5];
    v92[4] = v93[4];
    v92[5] = v96;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v97 = *((_OWORD *)v93 + 1);
    *(_OWORD *)v92 = *(_OWORD *)v93;
    *((_OWORD *)v92 + 1) = v97;
    *((_OWORD *)v92 + 2) = *((_OWORD *)v93 + 2);
  }
  v98 = v163;
  v99 = v163[23];
  *(_WORD *)(a1 + v163[22]) = *(_WORD *)(a2 + v163[22]);
  v100 = (_QWORD *)(a1 + v99);
  v101 = (_QWORD *)(a2 + v99);
  v102 = v101[1];
  if (v102)
  {
    *v100 = *v101;
    v100[1] = v102;
    v103 = v101[3];
    v100[2] = v101[2];
    v100[3] = v103;
    v104 = v101[5];
    v100[4] = v101[4];
    v100[5] = v104;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v105 = *((_OWORD *)v101 + 1);
    *(_OWORD *)v100 = *(_OWORD *)v101;
    *((_OWORD *)v100 + 1) = v105;
    *((_OWORD *)v100 + 2) = *((_OWORD *)v101 + 2);
  }
  v106 = v163[24];
  v107 = a1 + v106;
  v108 = a2 + v106;
  v109 = *(_QWORD *)(v108 + 8);
  if (v109 == 1)
  {
    v110 = *(_OWORD *)(v108 + 48);
    *(_OWORD *)(v107 + 32) = *(_OWORD *)(v108 + 32);
    *(_OWORD *)(v107 + 48) = v110;
    *(_OWORD *)(v107 + 58) = *(_OWORD *)(v108 + 58);
    v111 = *(_OWORD *)(v108 + 16);
    *(_OWORD *)v107 = *(_OWORD *)v108;
    *(_OWORD *)(v107 + 16) = v111;
  }
  else
  {
    *(_QWORD *)v107 = *(_QWORD *)v108;
    *(_QWORD *)(v107 + 8) = v109;
    *(_BYTE *)(v107 + 16) = *(_BYTE *)(v108 + 16);
    v112 = *(_QWORD *)(v108 + 32);
    *(_QWORD *)(v107 + 24) = *(_QWORD *)(v108 + 24);
    *(_QWORD *)(v107 + 32) = v112;
    v113 = *(_QWORD *)(v108 + 48);
    *(_QWORD *)(v107 + 40) = *(_QWORD *)(v108 + 40);
    *(_QWORD *)(v107 + 48) = v113;
    v114 = *(_QWORD *)(v108 + 64);
    *(_QWORD *)(v107 + 56) = *(_QWORD *)(v108 + 56);
    *(_QWORD *)(v107 + 64) = v114;
    *(_BYTE *)(v107 + 72) = *(_BYTE *)(v108 + 72);
    *(_BYTE *)(v107 + 73) = *(_BYTE *)(v108 + 73);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v115 = v163[26];
  *(_BYTE *)(a1 + v163[25]) = *(_BYTE *)(a2 + v163[25]);
  *(_BYTE *)(a1 + v115) = *(_BYTE *)(a2 + v115);
  v116 = v163[27];
  v117 = a1 + v116;
  v118 = a2 + v116;
  v119 = *(_QWORD *)(v118 + 8);
  if (v119 == 1)
  {
    v120 = *(_OWORD *)(v118 + 16);
    *(_OWORD *)v117 = *(_OWORD *)v118;
    *(_OWORD *)(v117 + 16) = v120;
    *(_QWORD *)(v117 + 32) = *(_QWORD *)(v118 + 32);
  }
  else
  {
    *(_QWORD *)v117 = *(_QWORD *)v118;
    *(_QWORD *)(v117 + 8) = v119;
    v121 = *(_QWORD *)(v118 + 24);
    *(_QWORD *)(v117 + 16) = *(_QWORD *)(v118 + 16);
    *(_QWORD *)(v117 + 24) = v121;
    *(_QWORD *)(v117 + 32) = *(_QWORD *)(v118 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v122 = v163[28];
  v123 = (char *)(a1 + v122);
  v124 = (char *)(a2 + v122);
  v125 = *(_QWORD *)(a2 + v122 + 8);
  if (v125)
  {
    *(_QWORD *)v123 = *(_QWORD *)v124;
    *((_QWORD *)v123 + 1) = v125;
    v123[16] = v124[16];
    v126 = *((_QWORD *)v124 + 4);
    *((_QWORD *)v123 + 3) = *((_QWORD *)v124 + 3);
    *((_QWORD *)v123 + 4) = v126;
    *((_QWORD *)v123 + 5) = *((_QWORD *)v124 + 5);
    v123[48] = v124[48];
    v127 = *((_QWORD *)v124 + 8);
    *((_QWORD *)v123 + 7) = *((_QWORD *)v124 + 7);
    *((_QWORD *)v123 + 8) = v127;
    v123[72] = v124[72];
    v128 = *((_QWORD *)v124 + 11);
    *((_QWORD *)v123 + 10) = *((_QWORD *)v124 + 10);
    *((_QWORD *)v123 + 11) = v128;
    *((_WORD *)v123 + 48) = *((_WORD *)v124 + 48);
    v129 = *((_QWORD *)v124 + 14);
    *((_QWORD *)v123 + 13) = *((_QWORD *)v124 + 13);
    *((_QWORD *)v123 + 14) = v129;
    v123[120] = v124[120];
    *((_OWORD *)v123 + 8) = *((_OWORD *)v124 + 8);
    *((_QWORD *)v123 + 18) = *((_QWORD *)v124 + 18);
    v123[152] = v124[152];
    *((_QWORD *)v123 + 20) = *((_QWORD *)v124 + 20);
    *((_DWORD *)v123 + 42) = *((_DWORD *)v124 + 42);
    v123[172] = v124[172];
    *(_WORD *)(v123 + 173) = *(_WORD *)(v124 + 173);
    *((_WORD *)v123 + 88) = *((_WORD *)v124 + 88);
    v130 = *((_QWORD *)v124 + 24);
    *((_QWORD *)v123 + 23) = *((_QWORD *)v124 + 23);
    *((_QWORD *)v123 + 24) = v130;
    *((_QWORD *)v123 + 25) = *((_QWORD *)v124 + 25);
    v131 = *((_QWORD *)v124 + 27);
    *((_QWORD *)v123 + 26) = *((_QWORD *)v124 + 26);
    *((_QWORD *)v123 + 27) = v131;
    v132 = *((_QWORD *)v124 + 29);
    *((_QWORD *)v123 + 28) = *((_QWORD *)v124 + 28);
    *((_QWORD *)v123 + 29) = v132;
    v162 = *((_QWORD *)v124 + 31);
    *((_QWORD *)v123 + 30) = *((_QWORD *)v124 + 30);
    *((_QWORD *)v123 + 31) = v162;
    v123[256] = v124[256];
    v133 = *((_QWORD *)v124 + 34);
    *((_QWORD *)v123 + 33) = *((_QWORD *)v124 + 33);
    *((_QWORD *)v123 + 34) = v133;
    v123[288] = v124[288];
    *((_QWORD *)v123 + 35) = *((_QWORD *)v124 + 35);
    v161 = *((_QWORD *)v124 + 38);
    *((_QWORD *)v123 + 37) = *((_QWORD *)v124 + 37);
    *((_QWORD *)v123 + 38) = v161;
    v134 = *((_QWORD *)v124 + 40);
    *((_QWORD *)v123 + 39) = *((_QWORD *)v124 + 39);
    *((_QWORD *)v123 + 40) = v134;
    *((_QWORD *)v123 + 41) = *((_QWORD *)v124 + 41);
    v123[336] = v124[336];
    v135 = *((_QWORD *)v124 + 44);
    *((_QWORD *)v123 + 43) = *((_QWORD *)v124 + 43);
    *((_QWORD *)v123 + 44) = v135;
    v136 = *((_QWORD *)v124 + 46);
    *((_QWORD *)v123 + 45) = *((_QWORD *)v124 + 45);
    *((_QWORD *)v123 + 46) = v136;
    v137 = *((_QWORD *)v124 + 48);
    *((_QWORD *)v123 + 47) = *((_QWORD *)v124 + 47);
    *((_QWORD *)v123 + 48) = v137;
    v123[392] = v124[392];
    v123[393] = v124[393];
    v138 = *((_QWORD *)v124 + 51);
    *((_QWORD *)v123 + 50) = *((_QWORD *)v124 + 50);
    *((_QWORD *)v123 + 51) = v138;
    v139 = *((_QWORD *)v124 + 53);
    *((_QWORD *)v123 + 52) = *((_QWORD *)v124 + 52);
    *((_QWORD *)v123 + 53) = v139;
    v140 = *((_QWORD *)v124 + 55);
    *((_QWORD *)v123 + 54) = *((_QWORD *)v124 + 54);
    *((_QWORD *)v123 + 55) = v140;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v98 = v163;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(v123, v124, 0x1C0uLL);
  }
  v141 = v98[29];
  v142 = v98[30];
  v143 = a1 + v141;
  v144 = a2 + v141;
  v145 = *(_QWORD *)(v144 + 8);
  *(_QWORD *)v143 = *(_QWORD *)v144;
  *(_QWORD *)(v143 + 8) = v145;
  *(_QWORD *)(v143 + 16) = *(_QWORD *)(v144 + 16);
  *(_BYTE *)(v143 + 24) = *(_BYTE *)(v144 + 24);
  v146 = a1 + v142;
  v147 = a2 + v142;
  v148 = *(_QWORD *)(v147 + 8);
  *(_QWORD *)v146 = *(_QWORD *)v147;
  *(_QWORD *)(v146 + 8) = v148;
  *(_BYTE *)(v146 + 16) = *(_BYTE *)(v147 + 16);
  v149 = v98[32];
  *(_QWORD *)(a1 + v98[31]) = *(_QWORD *)(a2 + v98[31]);
  *(_BYTE *)(a1 + v149) = *(_BYTE *)(a2 + v149);
  v150 = v98[34];
  *(_BYTE *)(a1 + v98[33]) = *(_BYTE *)(a2 + v98[33]);
  v151 = (_QWORD *)(a1 + v150);
  v152 = (_QWORD *)(a2 + v150);
  v153 = *(_QWORD *)(a2 + v150 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v153)
  {
    *v151 = *v152;
    v151[1] = v153;
    v154 = v152[3];
    v151[2] = v152[2];
    v151[3] = v154;
    v155 = v152[5];
    v151[4] = v152[4];
    v151[5] = v155;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v156 = *((_OWORD *)v152 + 1);
    *(_OWORD *)v151 = *(_OWORD *)v152;
    *((_OWORD *)v151 + 1) = v156;
    *((_OWORD *)v151 + 2) = *((_OWORD *)v152 + 2);
  }
  v157 = v98[36];
  *(_BYTE *)(a1 + v98[35]) = *(_BYTE *)(a2 + v98[35]);
  v158 = a1 + v157;
  v159 = a2 + v157;
  *(_QWORD *)v158 = *(_QWORD *)v159;
  *(_BYTE *)(v158 + 8) = *(_BYTE *)(v159 + 8);
  *(_WORD *)(a1 + v98[37]) = *(_WORD *)(a2 + v98[37]);
  return a1;
}

uint64_t assignWithCopy for ArticleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  __int128 *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  _BYTE *v77;
  uint64_t v78;
  _BYTE *v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  uint64_t v129;
  uint64_t v130;
  __int128 *v131;
  uint64_t v132;
  uint64_t v133;
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  __int128 v137;
  uint64_t v138;
  _QWORD *v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t *v166;
  uint64_t v167;
  uint64_t v168;
  _BYTE *v169;
  _BYTE *v170;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (__int128 *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7 + 8);
  v11 = *(_QWORD *)(a2 + v7 + 8);
  if (v10)
  {
    if (v11)
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
      *(_QWORD *)(v8 + 24) = *((_QWORD *)v9 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 32) = *((_BYTE *)v9 + 32);
    }
    else
    {
      sub_1D5801194(v8);
      v12 = *((_BYTE *)v9 + 32);
      v13 = v9[1];
      *(_OWORD *)v8 = *v9;
      *(_OWORD *)(v8 + 16) = v13;
      *(_BYTE *)(v8 + 32) = v12;
    }
  }
  else if (v11)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
    *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
    *(_QWORD *)(v8 + 24) = *((_QWORD *)v9 + 3);
    *(_BYTE *)(v8 + 32) = *((_BYTE *)v9 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = *v9;
    v15 = v9[1];
    *(_BYTE *)(v8 + 32) = *((_BYTE *)v9 + 32);
    *(_OWORD *)v8 = v14;
    *(_OWORD *)(v8 + 16) = v15;
  }
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v20 = a3[7];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)v21 = *(_BYTE *)(a2 + v20);
  *(_DWORD *)(v21 + 4) = *(_DWORD *)(a2 + v20 + 4);
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(a2 + v20 + 8);
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(a2 + v20 + 16);
  *(_QWORD *)(v21 + 24) = *(_QWORD *)(a2 + v20 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v21 + 32) = *(_BYTE *)(v22 + 32);
  *(_QWORD *)(v21 + 40) = *(_QWORD *)(v22 + 40);
  v23 = *(_QWORD *)(v22 + 48);
  *(_BYTE *)(v21 + 56) = *(_BYTE *)(v22 + 56);
  *(_QWORD *)(v21 + 48) = v23;
  *(_BYTE *)(v21 + 57) = *(_BYTE *)(v22 + 57);
  *(_QWORD *)(v21 + 64) = *(_QWORD *)(v22 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(v22 + 72);
  *(_BYTE *)(v21 + 80) = *(_BYTE *)(v22 + 80);
  *(_QWORD *)(v21 + 72) = v24;
  *(_QWORD *)(v21 + 88) = *(_QWORD *)(v22 + 88);
  *(_QWORD *)(v21 + 96) = *(_QWORD *)(v22 + 96);
  *(_QWORD *)(v21 + 104) = *(_QWORD *)(v22 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v21 + 112) = *(_BYTE *)(v22 + 112);
  *(_QWORD *)(v21 + 120) = *(_QWORD *)(v22 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v21 + 128) = *(_BYTE *)(v22 + 128);
  *(_BYTE *)(v21 + 129) = *(_BYTE *)(v22 + 129);
  *(_BYTE *)(v21 + 130) = *(_BYTE *)(v22 + 130);
  *(_BYTE *)(v21 + 131) = *(_BYTE *)(v22 + 131);
  *(_BYTE *)(v21 + 132) = *(_BYTE *)(v22 + 132);
  *(_BYTE *)(v21 + 133) = *(_BYTE *)(v22 + 133);
  *(_BYTE *)(v21 + 134) = *(_BYTE *)(v22 + 134);
  v25 = a3[8];
  v26 = a1 + v25;
  v27 = (int *)(a2 + v25);
  v28 = *v27;
  *(_BYTE *)(v26 + 4) = *((_BYTE *)v27 + 4);
  *(_DWORD *)v26 = v28;
  v29 = a3[9];
  v30 = a1 + v29;
  v31 = (int *)(a2 + v29);
  v32 = *v31;
  *(_BYTE *)(v30 + 4) = *((_BYTE *)v31 + 4);
  *(_DWORD *)v30 = v32;
  v33 = a3[10];
  v34 = a1 + v33;
  v35 = (__int128 *)(a2 + v33);
  v36 = *(_QWORD *)(a1 + v33 + 16);
  v37 = *(_QWORD *)(a2 + v33 + 16);
  if (v36 == 1)
  {
    if (v37 == 1)
    {
      v38 = *v35;
      *(_QWORD *)(v34 + 16) = *((_QWORD *)v35 + 2);
      *(_OWORD *)v34 = v38;
    }
    else
    {
      *(_BYTE *)v34 = *(_BYTE *)v35;
      *(_QWORD *)(v34 + 8) = *((_QWORD *)v35 + 1);
      *(_QWORD *)(v34 + 16) = *((_QWORD *)v35 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v37 == 1)
  {
    sub_1D57D9100(v34);
    v39 = *((_QWORD *)v35 + 2);
    *(_OWORD *)v34 = *v35;
    *(_QWORD *)(v34 + 16) = v39;
  }
  else
  {
    *(_BYTE *)v34 = *(_BYTE *)v35;
    *(_QWORD *)(v34 + 8) = *((_QWORD *)v35 + 1);
    *(_QWORD *)(v34 + 16) = *((_QWORD *)v35 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v40 = a3[11];
  v41 = a1 + v40;
  v42 = a2 + v40;
  v43 = *(_QWORD *)(a1 + v40 + 16);
  v44 = *(_QWORD *)(a2 + v40 + 16);
  if (v43)
  {
    if (v44)
    {
      *(_BYTE *)v41 = *(_BYTE *)v42;
      *(_BYTE *)(v41 + 1) = *(_BYTE *)(v42 + 1);
      *(_QWORD *)(v41 + 8) = *(_QWORD *)(v42 + 8);
      *(_QWORD *)(v41 + 16) = *(_QWORD *)(v42 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v41 + 24) = *(_DWORD *)(v42 + 24);
      *(_DWORD *)(v41 + 28) = *(_DWORD *)(v42 + 28);
      *(_QWORD *)(v41 + 32) = *(_QWORD *)(v42 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v41 + 40) = *(_QWORD *)(v42 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v41 + 48) = *(_QWORD *)(v42 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v41 + 56) = *(_QWORD *)(v42 + 56);
      *(_QWORD *)(v41 + 64) = *(_QWORD *)(v42 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v41 + 72) = *(_QWORD *)(v42 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v41 + 80) = *(_BYTE *)(v42 + 80);
      *(_QWORD *)(v41 + 88) = *(_QWORD *)(v42 + 88);
      *(_QWORD *)(v41 + 96) = *(_QWORD *)(v42 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v45 = *(_QWORD *)(v42 + 104);
      *(_BYTE *)(v41 + 112) = *(_BYTE *)(v42 + 112);
      *(_QWORD *)(v41 + 104) = v45;
      *(_QWORD *)(v41 + 120) = *(_QWORD *)(v42 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v41 + 128) = *(_QWORD *)(v42 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v41);
      *(_OWORD *)v41 = *(_OWORD *)v42;
      v47 = *(_OWORD *)(v42 + 64);
      v49 = *(_OWORD *)(v42 + 16);
      v48 = *(_OWORD *)(v42 + 32);
      *(_OWORD *)(v41 + 48) = *(_OWORD *)(v42 + 48);
      *(_OWORD *)(v41 + 64) = v47;
      *(_OWORD *)(v41 + 16) = v49;
      *(_OWORD *)(v41 + 32) = v48;
      v51 = *(_OWORD *)(v42 + 96);
      v50 = *(_OWORD *)(v42 + 112);
      v52 = *(_OWORD *)(v42 + 80);
      *(_QWORD *)(v41 + 128) = *(_QWORD *)(v42 + 128);
      *(_OWORD *)(v41 + 96) = v51;
      *(_OWORD *)(v41 + 112) = v50;
      *(_OWORD *)(v41 + 80) = v52;
    }
  }
  else if (v44)
  {
    *(_BYTE *)v41 = *(_BYTE *)v42;
    *(_BYTE *)(v41 + 1) = *(_BYTE *)(v42 + 1);
    *(_QWORD *)(v41 + 8) = *(_QWORD *)(v42 + 8);
    *(_QWORD *)(v41 + 16) = *(_QWORD *)(v42 + 16);
    *(_DWORD *)(v41 + 24) = *(_DWORD *)(v42 + 24);
    *(_DWORD *)(v41 + 28) = *(_DWORD *)(v42 + 28);
    *(_QWORD *)(v41 + 32) = *(_QWORD *)(v42 + 32);
    *(_QWORD *)(v41 + 40) = *(_QWORD *)(v42 + 40);
    *(_QWORD *)(v41 + 48) = *(_QWORD *)(v42 + 48);
    *(_QWORD *)(v41 + 56) = *(_QWORD *)(v42 + 56);
    *(_QWORD *)(v41 + 64) = *(_QWORD *)(v42 + 64);
    *(_QWORD *)(v41 + 72) = *(_QWORD *)(v42 + 72);
    *(_BYTE *)(v41 + 80) = *(_BYTE *)(v42 + 80);
    *(_QWORD *)(v41 + 88) = *(_QWORD *)(v42 + 88);
    *(_QWORD *)(v41 + 96) = *(_QWORD *)(v42 + 96);
    v46 = *(_QWORD *)(v42 + 104);
    *(_BYTE *)(v41 + 112) = *(_BYTE *)(v42 + 112);
    *(_QWORD *)(v41 + 104) = v46;
    *(_QWORD *)(v41 + 120) = *(_QWORD *)(v42 + 120);
    *(_QWORD *)(v41 + 128) = *(_QWORD *)(v42 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v41 = *(_OWORD *)v42;
    v53 = *(_OWORD *)(v42 + 16);
    v54 = *(_OWORD *)(v42 + 32);
    v55 = *(_OWORD *)(v42 + 64);
    *(_OWORD *)(v41 + 48) = *(_OWORD *)(v42 + 48);
    *(_OWORD *)(v41 + 64) = v55;
    *(_OWORD *)(v41 + 16) = v53;
    *(_OWORD *)(v41 + 32) = v54;
    v56 = *(_OWORD *)(v42 + 80);
    v57 = *(_OWORD *)(v42 + 96);
    v58 = *(_OWORD *)(v42 + 112);
    *(_QWORD *)(v41 + 128) = *(_QWORD *)(v42 + 128);
    *(_OWORD *)(v41 + 96) = v57;
    *(_OWORD *)(v41 + 112) = v58;
    *(_OWORD *)(v41 + 80) = v56;
  }
  v59 = a3[12];
  v60 = a1 + v59;
  v61 = a2 + v59;
  *(_QWORD *)v60 = *(_QWORD *)(a2 + v59);
  *(_QWORD *)(v60 + 8) = *(_QWORD *)(a2 + v59 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v60 + 16) = *(_BYTE *)(v61 + 16);
  *(_BYTE *)(v60 + 17) = *(_BYTE *)(v61 + 17);
  v62 = a3[13];
  v63 = a1 + v62;
  v64 = a2 + v62;
  *(_QWORD *)v63 = *(_QWORD *)(a2 + v62);
  *(_QWORD *)(v63 + 8) = *(_QWORD *)(a2 + v62 + 8);
  *(_QWORD *)(v63 + 16) = *(_QWORD *)(a2 + v62 + 16);
  *(_QWORD *)(v63 + 24) = *(_QWORD *)(a2 + v62 + 24);
  *(_QWORD *)(v63 + 32) = *(_QWORD *)(a2 + v62 + 32);
  *(_QWORD *)(v63 + 40) = *(_QWORD *)(a2 + v62 + 40);
  *(_QWORD *)(v63 + 48) = *(_QWORD *)(a2 + v62 + 48);
  *(_QWORD *)(v63 + 56) = *(_QWORD *)(a2 + v62 + 56);
  *(_QWORD *)(v63 + 64) = *(_QWORD *)(a2 + v62 + 64);
  *(_QWORD *)(v63 + 72) = *(_QWORD *)(a2 + v62 + 72);
  *(_QWORD *)(v63 + 80) = *(_QWORD *)(a2 + v62 + 80);
  *(_QWORD *)(v63 + 88) = *(_QWORD *)(a2 + v62 + 88);
  *(_QWORD *)(v63 + 96) = *(_QWORD *)(a2 + v62 + 96);
  *(_QWORD *)(v63 + 104) = *(_QWORD *)(a2 + v62 + 104);
  *(_QWORD *)(v63 + 112) = *(_QWORD *)(a2 + v62 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v65 = *(_QWORD *)(v64 + 120);
  *(_BYTE *)(v63 + 128) = *(_BYTE *)(v64 + 128);
  *(_QWORD *)(v63 + 120) = v65;
  v66 = *(_QWORD *)(v64 + 136);
  *(_BYTE *)(v63 + 144) = *(_BYTE *)(v64 + 144);
  *(_QWORD *)(v63 + 136) = v66;
  v67 = *(_QWORD *)(v64 + 152);
  *(_BYTE *)(v63 + 160) = *(_BYTE *)(v64 + 160);
  *(_QWORD *)(v63 + 152) = v67;
  v68 = *(_QWORD *)(v64 + 168);
  *(_BYTE *)(v63 + 176) = *(_BYTE *)(v64 + 176);
  *(_QWORD *)(v63 + 168) = v68;
  v69 = *(_QWORD *)(v64 + 184);
  *(_BYTE *)(v63 + 192) = *(_BYTE *)(v64 + 192);
  *(_QWORD *)(v63 + 184) = v69;
  v70 = *(_QWORD *)(v64 + 200);
  *(_BYTE *)(v63 + 208) = *(_BYTE *)(v64 + 208);
  *(_QWORD *)(v63 + 200) = v70;
  v71 = *(_QWORD *)(v64 + 216);
  *(_BYTE *)(v63 + 224) = *(_BYTE *)(v64 + 224);
  *(_QWORD *)(v63 + 216) = v71;
  v72 = *(_QWORD *)(v64 + 232);
  *(_BYTE *)(v63 + 240) = *(_BYTE *)(v64 + 240);
  *(_QWORD *)(v63 + 232) = v72;
  v73 = *(_QWORD *)(v64 + 248);
  *(_BYTE *)(v63 + 256) = *(_BYTE *)(v64 + 256);
  *(_QWORD *)(v63 + 248) = v73;
  v74 = *(_QWORD *)(v64 + 264);
  *(_BYTE *)(v63 + 272) = *(_BYTE *)(v64 + 272);
  *(_QWORD *)(v63 + 264) = v74;
  v75 = a3[14];
  v76 = (_BYTE *)(a1 + v75);
  v77 = (_BYTE *)(a2 + v75);
  *v76 = *v77;
  v76[1] = v77[1];
  v76[2] = v77[2];
  v76[3] = v77[3];
  v78 = a3[15];
  v79 = (_BYTE *)(a1 + v78);
  v80 = (_BYTE *)(a2 + v78);
  *v79 = *v80;
  v79[1] = v80[1];
  v81 = a3[16];
  v82 = a1 + v81;
  v83 = a2 + v81;
  v84 = *(_QWORD *)(a1 + v81 + 8);
  v85 = *(_QWORD *)(a2 + v81 + 8);
  if (v84)
  {
    if (v85)
    {
      *(_QWORD *)v82 = *(_QWORD *)v83;
      *(_QWORD *)(v82 + 8) = *(_QWORD *)(v83 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v82 + 16) = *(_BYTE *)(v83 + 16);
      *(_BYTE *)(v82 + 17) = *(_BYTE *)(v83 + 17);
      *(_QWORD *)(v82 + 24) = *(_QWORD *)(v83 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE47C(v82);
      v86 = *(_OWORD *)(v83 + 16);
      *(_OWORD *)v82 = *(_OWORD *)v83;
      *(_OWORD *)(v82 + 16) = v86;
    }
  }
  else if (v85)
  {
    *(_QWORD *)v82 = *(_QWORD *)v83;
    *(_QWORD *)(v82 + 8) = *(_QWORD *)(v83 + 8);
    *(_BYTE *)(v82 + 16) = *(_BYTE *)(v83 + 16);
    *(_BYTE *)(v82 + 17) = *(_BYTE *)(v83 + 17);
    *(_QWORD *)(v82 + 24) = *(_QWORD *)(v83 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v87 = *(_OWORD *)(v83 + 16);
    *(_OWORD *)v82 = *(_OWORD *)v83;
    *(_OWORD *)(v82 + 16) = v87;
  }
  v88 = a3[17];
  v89 = (_QWORD *)(a1 + v88);
  v90 = (_QWORD *)(a2 + v88);
  *v89 = *v90;
  v89[1] = v90[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v91 = a3[18];
  v92 = (_QWORD *)(a1 + v91);
  v93 = (_QWORD *)(a2 + v91);
  *v92 = *v93;
  v92[1] = v93[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v94 = a3[19];
  v95 = a1 + v94;
  v96 = a2 + v94;
  *(_BYTE *)v95 = *(_BYTE *)(a2 + v94);
  *(_QWORD *)(v95 + 8) = *(_QWORD *)(a2 + v94 + 8);
  *(_QWORD *)(v95 + 16) = *(_QWORD *)(a2 + v94 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v95 + 24) = *(_BYTE *)(v96 + 24);
  *(_BYTE *)(v95 + 25) = *(_BYTE *)(v96 + 25);
  *(_QWORD *)(v95 + 32) = *(_QWORD *)(v96 + 32);
  *(_QWORD *)(v95 + 40) = *(_QWORD *)(v96 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v95 + 48) = *(_BYTE *)(v96 + 48);
  v97 = a3[20];
  v98 = a1 + v97;
  v99 = a2 + v97;
  *(_QWORD *)v98 = *(_QWORD *)(a2 + v97);
  *(_QWORD *)(v98 + 8) = *(_QWORD *)(a2 + v97 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v98 + 16) = *(_BYTE *)(v99 + 16);
  *(_BYTE *)(v98 + 17) = *(_BYTE *)(v99 + 17);
  *(_QWORD *)(v98 + 24) = *(_QWORD *)(v99 + 24);
  *(_QWORD *)(v98 + 32) = *(_QWORD *)(v99 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v100 = a3[21];
  v101 = (_QWORD *)(a1 + v100);
  v102 = (_QWORD *)(a2 + v100);
  v103 = *(_QWORD *)(a1 + v100 + 8);
  v104 = *(_QWORD *)(a2 + v100 + 8);
  if (v103)
  {
    if (v104)
    {
      *v101 = *v102;
      v101[1] = v102[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v101[2] = v102[2];
      v101[3] = v102[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v101[4] = v102[4];
      v101[5] = v102[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D59315F8((uint64_t)v101);
      v106 = *((_OWORD *)v102 + 1);
      v105 = *((_OWORD *)v102 + 2);
      *(_OWORD *)v101 = *(_OWORD *)v102;
      *((_OWORD *)v101 + 1) = v106;
      *((_OWORD *)v101 + 2) = v105;
    }
  }
  else if (v104)
  {
    *v101 = *v102;
    v101[1] = v102[1];
    v101[2] = v102[2];
    v101[3] = v102[3];
    v101[4] = v102[4];
    v101[5] = v102[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v107 = *(_OWORD *)v102;
    v108 = *((_OWORD *)v102 + 2);
    *((_OWORD *)v101 + 1) = *((_OWORD *)v102 + 1);
    *((_OWORD *)v101 + 2) = v108;
    *(_OWORD *)v101 = v107;
  }
  *(_WORD *)(a1 + a3[22]) = *(_WORD *)(a2 + a3[22]);
  v109 = a3[23];
  v110 = (_QWORD *)(a1 + v109);
  v111 = (_QWORD *)(a2 + v109);
  v112 = *(_QWORD *)(a1 + v109 + 8);
  v113 = *(_QWORD *)(a2 + v109 + 8);
  if (v112)
  {
    if (v113)
    {
      *v110 = *v111;
      v110[1] = v111[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v110[2] = v111[2];
      v110[3] = v111[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v110[4] = v111[4];
      v110[5] = v111[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D5829E98((uint64_t)v110);
      v115 = *((_OWORD *)v111 + 1);
      v114 = *((_OWORD *)v111 + 2);
      *(_OWORD *)v110 = *(_OWORD *)v111;
      *((_OWORD *)v110 + 1) = v115;
      *((_OWORD *)v110 + 2) = v114;
    }
  }
  else if (v113)
  {
    *v110 = *v111;
    v110[1] = v111[1];
    v110[2] = v111[2];
    v110[3] = v111[3];
    v110[4] = v111[4];
    v110[5] = v111[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v116 = *(_OWORD *)v111;
    v117 = *((_OWORD *)v111 + 2);
    *((_OWORD *)v110 + 1) = *((_OWORD *)v111 + 1);
    *((_OWORD *)v110 + 2) = v117;
    *(_OWORD *)v110 = v116;
  }
  v118 = a3[24];
  v119 = a1 + v118;
  v120 = a2 + v118;
  v121 = *(_QWORD *)(a1 + v118 + 8);
  v122 = *(_QWORD *)(a2 + v118 + 8);
  if (v121 == 1)
  {
    if (v122 == 1)
    {
      *(_OWORD *)v119 = *(_OWORD *)v120;
      v123 = *(_OWORD *)(v120 + 16);
      v124 = *(_OWORD *)(v120 + 32);
      v125 = *(_OWORD *)(v120 + 48);
      *(_OWORD *)(v119 + 58) = *(_OWORD *)(v120 + 58);
      *(_OWORD *)(v119 + 32) = v124;
      *(_OWORD *)(v119 + 48) = v125;
      *(_OWORD *)(v119 + 16) = v123;
    }
    else
    {
      *(_QWORD *)v119 = *(_QWORD *)v120;
      *(_QWORD *)(v119 + 8) = *(_QWORD *)(v120 + 8);
      *(_BYTE *)(v119 + 16) = *(_BYTE *)(v120 + 16);
      *(_QWORD *)(v119 + 24) = *(_QWORD *)(v120 + 24);
      *(_QWORD *)(v119 + 32) = *(_QWORD *)(v120 + 32);
      *(_QWORD *)(v119 + 40) = *(_QWORD *)(v120 + 40);
      *(_QWORD *)(v119 + 48) = *(_QWORD *)(v120 + 48);
      *(_QWORD *)(v119 + 56) = *(_QWORD *)(v120 + 56);
      *(_QWORD *)(v119 + 64) = *(_QWORD *)(v120 + 64);
      *(_BYTE *)(v119 + 72) = *(_BYTE *)(v120 + 72);
      *(_BYTE *)(v119 + 73) = *(_BYTE *)(v120 + 73);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v122 == 1)
  {
    sub_1D58B3718(v119);
    *(_OWORD *)v119 = *(_OWORD *)v120;
    v127 = *(_OWORD *)(v120 + 32);
    v126 = *(_OWORD *)(v120 + 48);
    v128 = *(_OWORD *)(v120 + 16);
    *(_OWORD *)(v119 + 58) = *(_OWORD *)(v120 + 58);
    *(_OWORD *)(v119 + 32) = v127;
    *(_OWORD *)(v119 + 48) = v126;
    *(_OWORD *)(v119 + 16) = v128;
  }
  else
  {
    *(_QWORD *)v119 = *(_QWORD *)v120;
    *(_QWORD *)(v119 + 8) = *(_QWORD *)(v120 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v119 + 16) = *(_BYTE *)(v120 + 16);
    *(_QWORD *)(v119 + 24) = *(_QWORD *)(v120 + 24);
    *(_QWORD *)(v119 + 32) = *(_QWORD *)(v120 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v119 + 40) = *(_QWORD *)(v120 + 40);
    *(_QWORD *)(v119 + 48) = *(_QWORD *)(v120 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v119 + 56) = *(_QWORD *)(v120 + 56);
    *(_QWORD *)(v119 + 64) = *(_QWORD *)(v120 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v119 + 72) = *(_BYTE *)(v120 + 72);
    *(_BYTE *)(v119 + 73) = *(_BYTE *)(v120 + 73);
  }
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  *(_BYTE *)(a1 + a3[26]) = *(_BYTE *)(a2 + a3[26]);
  v129 = a3[27];
  v130 = a1 + v129;
  v131 = (__int128 *)(a2 + v129);
  v132 = *(_QWORD *)(a1 + v129 + 8);
  v133 = *(_QWORD *)(a2 + v129 + 8);
  if (v132 == 1)
  {
    if (v133 == 1)
    {
      v134 = *v131;
      v135 = v131[1];
      *(_QWORD *)(v130 + 32) = *((_QWORD *)v131 + 4);
      *(_OWORD *)v130 = v134;
      *(_OWORD *)(v130 + 16) = v135;
    }
    else
    {
      *(_QWORD *)v130 = *(_QWORD *)v131;
      *(_QWORD *)(v130 + 8) = *((_QWORD *)v131 + 1);
      *(_QWORD *)(v130 + 16) = *((_QWORD *)v131 + 2);
      *(_QWORD *)(v130 + 24) = *((_QWORD *)v131 + 3);
      *(_QWORD *)(v130 + 32) = *((_QWORD *)v131 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v133 == 1)
  {
    sub_1D57EE4B0(v130);
    v136 = *((_QWORD *)v131 + 4);
    v137 = v131[1];
    *(_OWORD *)v130 = *v131;
    *(_OWORD *)(v130 + 16) = v137;
    *(_QWORD *)(v130 + 32) = v136;
  }
  else
  {
    *(_QWORD *)v130 = *(_QWORD *)v131;
    *(_QWORD *)(v130 + 8) = *((_QWORD *)v131 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v130 + 16) = *((_QWORD *)v131 + 2);
    *(_QWORD *)(v130 + 24) = *((_QWORD *)v131 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v130 + 32) = *((_QWORD *)v131 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v138 = a3[28];
  v139 = (_QWORD *)(a1 + v138);
  v140 = (_QWORD *)(a2 + v138);
  v141 = *(_QWORD *)(a1 + v138 + 8);
  v142 = *(_QWORD *)(a2 + v138 + 8);
  if (v141)
  {
    if (v142)
    {
      *v139 = *v140;
      v139[1] = v140[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_BYTE *)v139 + 16) = *((_BYTE *)v140 + 16);
      v139[3] = v140[3];
      v139[4] = v140[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_BYTE *)v139 + 40) = *((_BYTE *)v140 + 40);
      *((_DWORD *)v139 + 11) = *((_DWORD *)v140 + 11);
      *((_BYTE *)v139 + 48) = *((_BYTE *)v140 + 48);
      v139[7] = v140[7];
      v139[8] = v140[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_BYTE *)v139 + 72) = *((_BYTE *)v140 + 72);
      v139[10] = v140[10];
      v143 = v140[11];
      *((_BYTE *)v139 + 96) = *((_BYTE *)v140 + 96);
      v139[11] = v143;
      *((_BYTE *)v139 + 97) = *((_BYTE *)v140 + 97);
      v139[13] = v140[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v144 = v140[14];
      *((_BYTE *)v139 + 120) = *((_BYTE *)v140 + 120);
      v139[14] = v144;
      v139[16] = v140[16];
      v139[17] = v140[17];
      v139[18] = v140[18];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_BYTE *)v139 + 152) = *((_BYTE *)v140 + 152);
      v139[20] = v140[20];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_BYTE *)v139 + 168) = *((_BYTE *)v140 + 168);
      *((_BYTE *)v139 + 169) = *((_BYTE *)v140 + 169);
      *((_BYTE *)v139 + 170) = *((_BYTE *)v140 + 170);
      *((_BYTE *)v139 + 171) = *((_BYTE *)v140 + 171);
      *((_BYTE *)v139 + 172) = *((_BYTE *)v140 + 172);
      *((_BYTE *)v139 + 173) = *((_BYTE *)v140 + 173);
      *((_BYTE *)v139 + 174) = *((_BYTE *)v140 + 174);
      *((_BYTE *)v139 + 176) = *((_BYTE *)v140 + 176);
      *((_BYTE *)v139 + 177) = *((_BYTE *)v140 + 177);
      v139[23] = v140[23];
      v139[24] = v140[24];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_DWORD *)v139 + 50) = *((_DWORD *)v140 + 50);
      *((_DWORD *)v139 + 51) = *((_DWORD *)v140 + 51);
      v139[26] = v140[26];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v139[27] = v140[27];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v139[28] = v140[28];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v139[29] = v140[29];
      v139[30] = v140[30];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v139[31] = v140[31];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_BYTE *)v139 + 256) = *((_BYTE *)v140 + 256);
      v139[33] = v140[33];
      v139[34] = v140[34];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v145 = v140[35];
      *((_BYTE *)v139 + 288) = *((_BYTE *)v140 + 288);
      v139[35] = v145;
      v139[37] = v140[37];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v139[38] = v140[38];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v139[39] = v140[39];
      v139[40] = v140[40];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v139[41] = v140[41];
      *((_BYTE *)v139 + 336) = *((_BYTE *)v140 + 336);
      v139[43] = v140[43];
      v139[44] = v140[44];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v139[45] = v140[45];
      v139[46] = v140[46];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v139[47] = v140[47];
      v139[48] = v140[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_BYTE *)v139 + 392) = *((_BYTE *)v140 + 392);
      *((_BYTE *)v139 + 393) = *((_BYTE *)v140 + 393);
      v139[50] = v140[50];
      v139[51] = v140[51];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v139[52] = v140[52];
      v139[53] = v140[53];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v139[54] = v140[54];
      v139[55] = v140[55];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_64;
    }
    sub_1D5978DF0((uint64_t)v139);
  }
  else if (v142)
  {
    *v139 = *v140;
    v139[1] = v140[1];
    *((_BYTE *)v139 + 16) = *((_BYTE *)v140 + 16);
    v139[3] = v140[3];
    v139[4] = v140[4];
    v139[5] = v140[5];
    *((_BYTE *)v139 + 48) = *((_BYTE *)v140 + 48);
    v139[7] = v140[7];
    v139[8] = v140[8];
    *((_BYTE *)v139 + 72) = *((_BYTE *)v140 + 72);
    v139[10] = v140[10];
    v146 = v140[11];
    *((_BYTE *)v139 + 96) = *((_BYTE *)v140 + 96);
    v139[11] = v146;
    *((_BYTE *)v139 + 97) = *((_BYTE *)v140 + 97);
    v139[13] = v140[13];
    v147 = v140[14];
    *((_BYTE *)v139 + 120) = *((_BYTE *)v140 + 120);
    v139[14] = v147;
    v139[16] = v140[16];
    v139[17] = v140[17];
    v139[18] = v140[18];
    *((_BYTE *)v139 + 152) = *((_BYTE *)v140 + 152);
    v139[20] = v140[20];
    *((_BYTE *)v139 + 168) = *((_BYTE *)v140 + 168);
    *((_BYTE *)v139 + 169) = *((_BYTE *)v140 + 169);
    *((_BYTE *)v139 + 170) = *((_BYTE *)v140 + 170);
    *((_BYTE *)v139 + 171) = *((_BYTE *)v140 + 171);
    *((_BYTE *)v139 + 172) = *((_BYTE *)v140 + 172);
    *((_BYTE *)v139 + 173) = *((_BYTE *)v140 + 173);
    *((_BYTE *)v139 + 174) = *((_BYTE *)v140 + 174);
    *((_BYTE *)v139 + 176) = *((_BYTE *)v140 + 176);
    *((_BYTE *)v139 + 177) = *((_BYTE *)v140 + 177);
    v139[23] = v140[23];
    v139[24] = v140[24];
    *((_DWORD *)v139 + 50) = *((_DWORD *)v140 + 50);
    *((_DWORD *)v139 + 51) = *((_DWORD *)v140 + 51);
    v139[26] = v140[26];
    v139[27] = v140[27];
    v139[28] = v140[28];
    v139[29] = v140[29];
    v139[30] = v140[30];
    v139[31] = v140[31];
    *((_BYTE *)v139 + 256) = *((_BYTE *)v140 + 256);
    v139[33] = v140[33];
    v139[34] = v140[34];
    v148 = v140[35];
    *((_BYTE *)v139 + 288) = *((_BYTE *)v140 + 288);
    v139[35] = v148;
    v139[37] = v140[37];
    v139[38] = v140[38];
    v139[39] = v140[39];
    v139[40] = v140[40];
    v139[41] = v140[41];
    *((_BYTE *)v139 + 336) = *((_BYTE *)v140 + 336);
    v139[43] = v140[43];
    v139[44] = v140[44];
    v139[45] = v140[45];
    v139[46] = v140[46];
    v139[47] = v140[47];
    v139[48] = v140[48];
    *((_BYTE *)v139 + 392) = *((_BYTE *)v140 + 392);
    *((_BYTE *)v139 + 393) = *((_BYTE *)v140 + 393);
    v139[50] = v140[50];
    v139[51] = v140[51];
    v139[52] = v140[52];
    v139[53] = v140[53];
    v139[54] = v140[54];
    v139[55] = v140[55];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_64;
  }
  memcpy(v139, v140, 0x1C0uLL);
LABEL_64:
  v149 = a3[29];
  v150 = a1 + v149;
  v151 = a2 + v149;
  *(_QWORD *)v150 = *(_QWORD *)(a2 + v149);
  *(_QWORD *)(v150 + 8) = *(_QWORD *)(a2 + v149 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v150 + 16) = *(_QWORD *)(v151 + 16);
  *(_BYTE *)(v150 + 24) = *(_BYTE *)(v151 + 24);
  v152 = a3[30];
  v153 = a1 + v152;
  v154 = a2 + v152;
  *(_QWORD *)v153 = *(_QWORD *)(a2 + v152);
  *(_QWORD *)(v153 + 8) = *(_QWORD *)(a2 + v152 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v153 + 16) = *(_BYTE *)(v154 + 16);
  *(_QWORD *)(a1 + a3[31]) = *(_QWORD *)(a2 + a3[31]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[32]) = *(_BYTE *)(a2 + a3[32]);
  *(_BYTE *)(a1 + a3[33]) = *(_BYTE *)(a2 + a3[33]);
  v155 = a3[34];
  v156 = (_QWORD *)(a1 + v155);
  v157 = (_QWORD *)(a2 + v155);
  v158 = *(_QWORD *)(a1 + v155 + 8);
  v159 = *(_QWORD *)(a2 + v155 + 8);
  if (v158)
  {
    if (v159)
    {
      *v156 = *v157;
      v156[1] = v157[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v156[2] = v157[2];
      v156[3] = v157[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v156[4] = v157[4];
      v156[5] = v157[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D59A01E4((uint64_t)v156);
      v161 = *((_OWORD *)v157 + 1);
      v160 = *((_OWORD *)v157 + 2);
      *(_OWORD *)v156 = *(_OWORD *)v157;
      *((_OWORD *)v156 + 1) = v161;
      *((_OWORD *)v156 + 2) = v160;
    }
  }
  else if (v159)
  {
    *v156 = *v157;
    v156[1] = v157[1];
    v156[2] = v157[2];
    v156[3] = v157[3];
    v156[4] = v157[4];
    v156[5] = v157[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v162 = *(_OWORD *)v157;
    v163 = *((_OWORD *)v157 + 2);
    *((_OWORD *)v156 + 1) = *((_OWORD *)v157 + 1);
    *((_OWORD *)v156 + 2) = v163;
    *(_OWORD *)v156 = v162;
  }
  *(_BYTE *)(a1 + a3[35]) = *(_BYTE *)(a2 + a3[35]);
  v164 = a3[36];
  v165 = a1 + v164;
  v166 = (uint64_t *)(a2 + v164);
  v167 = *v166;
  *(_BYTE *)(v165 + 8) = *((_BYTE *)v166 + 8);
  *(_QWORD *)v165 = v167;
  v168 = a3[37];
  v169 = (_BYTE *)(a1 + v168);
  v170 = (_BYTE *)(a2 + v168);
  *v169 = *v170;
  v169[1] = v170[1];
  return a1;
}

uint64_t sub_1D59A01E4(uint64_t a1)
{
  destroy for ReferralData();
  return a1;
}

uint64_t initializeWithTake for ArticleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  __int128 *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD *v46;
  _OWORD *v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 *v56;
  __int128 v57;
  __int128 v58;
  _OWORD *v59;
  _OWORD *v60;
  __int128 v61;
  uint64_t v62;
  _OWORD *v63;
  _OWORD *v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  _OWORD *v68;
  _OWORD *v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  _OWORD *v78;
  _OWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _OWORD *v84;
  _OWORD *v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  v19 = *(_OWORD *)(v18 + 48);
  *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
  *(_OWORD *)(v17 + 48) = v19;
  *(_QWORD *)(v17 + 127) = *(_QWORD *)(v18 + 127);
  v20 = *(_OWORD *)(v18 + 112);
  *(_OWORD *)(v17 + 96) = *(_OWORD *)(v18 + 96);
  *(_OWORD *)(v17 + 112) = v20;
  v21 = *(_OWORD *)(v18 + 80);
  *(_OWORD *)(v17 + 64) = *(_OWORD *)(v18 + 64);
  *(_OWORD *)(v17 + 80) = v21;
  v22 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v22;
  v23 = a1 + v16;
  v24 = a2 + v16;
  *(_DWORD *)v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  v25 = a3[9];
  v26 = a3[10];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_DWORD *)v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  v29 = a1 + v26;
  v30 = a2 + v26;
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
  v31 = a3[11];
  v32 = a3[12];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_QWORD *)(v33 + 128) = *(_QWORD *)(v34 + 128);
  v35 = *(_OWORD *)(v34 + 48);
  *(_OWORD *)(v33 + 32) = *(_OWORD *)(v34 + 32);
  *(_OWORD *)(v33 + 48) = v35;
  v36 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v36;
  v37 = *(_OWORD *)(v34 + 112);
  *(_OWORD *)(v33 + 96) = *(_OWORD *)(v34 + 96);
  *(_OWORD *)(v33 + 112) = v37;
  v38 = *(_OWORD *)(v34 + 80);
  *(_OWORD *)(v33 + 64) = *(_OWORD *)(v34 + 64);
  *(_OWORD *)(v33 + 80) = v38;
  v39 = a1 + v32;
  v40 = (__int128 *)(a2 + v32);
  v41 = *v40;
  *(_WORD *)(v39 + 16) = *((_WORD *)v40 + 8);
  v42 = a3[13];
  *(_OWORD *)v39 = v41;
  memcpy((void *)(a1 + v42), (const void *)(a2 + v42), 0x111uLL);
  v43 = a3[15];
  *(_DWORD *)(a1 + a3[14]) = *(_DWORD *)(a2 + a3[14]);
  *(_WORD *)(a1 + v43) = *(_WORD *)(a2 + v43);
  v44 = a3[16];
  v45 = a3[17];
  v46 = (_OWORD *)(a1 + v44);
  v47 = (_OWORD *)(a2 + v44);
  v48 = v47[1];
  *v46 = *v47;
  v46[1] = v48;
  *(_OWORD *)(a1 + v45) = *(_OWORD *)(a2 + v45);
  v49 = a3[19];
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  v50 = a1 + v49;
  v51 = a2 + v49;
  v52 = *(_OWORD *)(v51 + 16);
  *(_OWORD *)v50 = *(_OWORD *)v51;
  *(_OWORD *)(v50 + 16) = v52;
  *(_OWORD *)(v50 + 32) = *(_OWORD *)(v51 + 32);
  *(_BYTE *)(v50 + 48) = *(_BYTE *)(v51 + 48);
  v53 = a3[20];
  v54 = a3[21];
  v55 = a1 + v53;
  v56 = (__int128 *)(a2 + v53);
  v57 = *v56;
  v58 = v56[1];
  *(_QWORD *)(v55 + 32) = *((_QWORD *)v56 + 4);
  *(_OWORD *)v55 = v57;
  *(_OWORD *)(v55 + 16) = v58;
  v59 = (_OWORD *)(a1 + v54);
  v60 = (_OWORD *)(a2 + v54);
  v61 = v60[1];
  *v59 = *v60;
  v59[1] = v61;
  v59[2] = v60[2];
  v62 = a3[23];
  *(_WORD *)(a1 + a3[22]) = *(_WORD *)(a2 + a3[22]);
  v63 = (_OWORD *)(a1 + v62);
  v64 = (_OWORD *)(a2 + v62);
  v65 = v64[1];
  *v63 = *v64;
  v63[1] = v65;
  v63[2] = v64[2];
  v66 = a3[24];
  v67 = a3[25];
  v68 = (_OWORD *)(a1 + v66);
  v69 = (_OWORD *)(a2 + v66);
  *(_OWORD *)((char *)v68 + 58) = *(_OWORD *)((char *)v69 + 58);
  v70 = v69[3];
  v68[2] = v69[2];
  v68[3] = v70;
  v71 = v69[1];
  *v68 = *v69;
  v68[1] = v71;
  *(_BYTE *)(a1 + v67) = *(_BYTE *)(a2 + v67);
  v72 = a3[27];
  *(_BYTE *)(a1 + a3[26]) = *(_BYTE *)(a2 + a3[26]);
  v73 = a1 + v72;
  v74 = a2 + v72;
  v75 = *(_OWORD *)(v74 + 16);
  *(_OWORD *)v73 = *(_OWORD *)v74;
  *(_OWORD *)(v73 + 16) = v75;
  *(_QWORD *)(v73 + 32) = *(_QWORD *)(v74 + 32);
  memcpy((void *)(a1 + a3[28]), (const void *)(a2 + a3[28]), 0x1C0uLL);
  v76 = a3[29];
  v77 = a3[30];
  v78 = (_OWORD *)(a1 + v76);
  v79 = (_OWORD *)(a2 + v76);
  *v78 = *v79;
  *(_OWORD *)((char *)v78 + 9) = *(_OWORD *)((char *)v79 + 9);
  v80 = a1 + v77;
  v81 = a2 + v77;
  *(_OWORD *)v80 = *(_OWORD *)v81;
  *(_BYTE *)(v80 + 16) = *(_BYTE *)(v81 + 16);
  v82 = a3[32];
  *(_QWORD *)(a1 + a3[31]) = *(_QWORD *)(a2 + a3[31]);
  *(_BYTE *)(a1 + v82) = *(_BYTE *)(a2 + v82);
  v83 = a3[34];
  *(_BYTE *)(a1 + a3[33]) = *(_BYTE *)(a2 + a3[33]);
  v84 = (_OWORD *)(a1 + v83);
  v85 = (_OWORD *)(a2 + v83);
  v86 = v85[1];
  *v84 = *v85;
  v84[1] = v86;
  v84[2] = v85[2];
  v87 = a3[36];
  *(_BYTE *)(a1 + a3[35]) = *(_BYTE *)(a2 + a3[35]);
  v88 = a1 + v87;
  v89 = a2 + v87;
  *(_QWORD *)v88 = *(_QWORD *)v89;
  *(_BYTE *)(v88 + 8) = *(_BYTE *)(v89 + 8);
  *(_WORD *)(a1 + a3[37]) = *(_WORD *)(a2 + a3[37]);
  return a1;
}

uint64_t assignWithTake for ArticleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __int128 v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  __int128 v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (*(_QWORD *)(a1 + v7 + 8))
  {
    v10 = *(_QWORD *)(v9 + 8);
    if (v10)
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_QWORD *)(v8 + 8) = v10;
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(v9 + 24);
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = v11;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D5801194(v8);
  }
  v12 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v12;
LABEL_6:
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_BYTE *)v18 = *(_BYTE *)(a2 + v17);
  *(_DWORD *)(v18 + 4) = *(_DWORD *)(a2 + v17 + 4);
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(a2 + v17 + 8);
  v20 = *(_QWORD *)(a2 + v17 + 24);
  *(_QWORD *)(v18 + 16) = *(_QWORD *)(a2 + v17 + 16);
  *(_QWORD *)(v18 + 24) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v18 + 32) = *(_BYTE *)(v19 + 32);
  v21 = *(_QWORD *)(v19 + 48);
  *(_QWORD *)(v18 + 40) = *(_QWORD *)(v19 + 40);
  *(_QWORD *)(v18 + 48) = v21;
  *(_BYTE *)(v18 + 56) = *(_BYTE *)(v19 + 56);
  *(_BYTE *)(v18 + 57) = *(_BYTE *)(v19 + 57);
  *(_QWORD *)(v18 + 64) = *(_QWORD *)(v19 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v18 + 72) = *(_QWORD *)(v19 + 72);
  *(_BYTE *)(v18 + 80) = *(_BYTE *)(v19 + 80);
  *(_OWORD *)(v18 + 88) = *(_OWORD *)(v19 + 88);
  *(_QWORD *)(v18 + 104) = *(_QWORD *)(v19 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v18 + 112) = *(_BYTE *)(v19 + 112);
  *(_QWORD *)(v18 + 120) = *(_QWORD *)(v19 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v18 + 128) = *(_BYTE *)(v19 + 128);
  *(_BYTE *)(v18 + 129) = *(_BYTE *)(v19 + 129);
  *(_BYTE *)(v18 + 130) = *(_BYTE *)(v19 + 130);
  *(_BYTE *)(v18 + 131) = *(_BYTE *)(v19 + 131);
  *(_BYTE *)(v18 + 132) = *(_BYTE *)(v19 + 132);
  *(_BYTE *)(v18 + 133) = *(_BYTE *)(v19 + 133);
  *(_BYTE *)(v18 + 134) = *(_BYTE *)(v19 + 134);
  v22 = a3[8];
  v23 = a3[9];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  v26 = a1 + v23;
  v27 = a2 + v23;
  *(_DWORD *)v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  v28 = a3[10];
  v29 = a1 + v28;
  v30 = a2 + v28;
  if (*(_QWORD *)(a1 + v28 + 16) == 1)
  {
LABEL_9:
    *(_OWORD *)v29 = *(_OWORD *)v30;
    *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
    goto LABEL_11;
  }
  v31 = *(_QWORD *)(v30 + 16);
  if (v31 == 1)
  {
    sub_1D57D9100(v29);
    goto LABEL_9;
  }
  *(_BYTE *)v29 = *(_BYTE *)v30;
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
  *(_QWORD *)(v29 + 16) = v31;
  swift_bridgeObjectRelease();
LABEL_11:
  v32 = a3[11];
  v33 = a1 + v32;
  v34 = a2 + v32;
  if (*(_QWORD *)(a1 + v32 + 16))
  {
    v35 = *(_QWORD *)(v34 + 16);
    if (v35)
    {
      *(_WORD *)v33 = *(_WORD *)v34;
      *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
      *(_QWORD *)(v33 + 16) = v35;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v33 + 24) = *(_QWORD *)(v34 + 24);
      *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v33 + 40) = *(_QWORD *)(v34 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v33 + 48) = *(_QWORD *)(v34 + 48);
      swift_bridgeObjectRelease();
      v36 = *(_QWORD *)(v34 + 64);
      *(_QWORD *)(v33 + 56) = *(_QWORD *)(v34 + 56);
      *(_QWORD *)(v33 + 64) = v36;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v33 + 72) = *(_QWORD *)(v34 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v33 + 80) = *(_BYTE *)(v34 + 80);
      v37 = *(_QWORD *)(v34 + 96);
      *(_QWORD *)(v33 + 88) = *(_QWORD *)(v34 + 88);
      *(_QWORD *)(v33 + 96) = v37;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v33 + 104) = *(_QWORD *)(v34 + 104);
      *(_BYTE *)(v33 + 112) = *(_BYTE *)(v34 + 112);
      *(_QWORD *)(v33 + 120) = *(_QWORD *)(v34 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v33 + 128) = *(_QWORD *)(v34 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1D57E17B8(v33);
  }
  v38 = *(_OWORD *)(v34 + 112);
  *(_OWORD *)(v33 + 96) = *(_OWORD *)(v34 + 96);
  *(_OWORD *)(v33 + 112) = v38;
  *(_QWORD *)(v33 + 128) = *(_QWORD *)(v34 + 128);
  v39 = *(_OWORD *)(v34 + 48);
  *(_OWORD *)(v33 + 32) = *(_OWORD *)(v34 + 32);
  *(_OWORD *)(v33 + 48) = v39;
  v40 = *(_OWORD *)(v34 + 80);
  *(_OWORD *)(v33 + 64) = *(_OWORD *)(v34 + 64);
  *(_OWORD *)(v33 + 80) = v40;
  v41 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v41;
LABEL_16:
  v42 = a3[12];
  v43 = a1 + v42;
  v44 = a2 + v42;
  v45 = *(_QWORD *)(a2 + v42 + 8);
  *(_QWORD *)v43 = *(_QWORD *)(a2 + v42);
  *(_QWORD *)(v43 + 8) = v45;
  swift_bridgeObjectRelease();
  *(_WORD *)(v43 + 16) = *(_WORD *)(v44 + 16);
  v46 = a3[13];
  v47 = a1 + v46;
  v48 = a2 + v46;
  v49 = *(_OWORD *)(a2 + v46 + 16);
  *(_OWORD *)v47 = *(_OWORD *)(a2 + v46);
  *(_OWORD *)(v47 + 16) = v49;
  v50 = *(_OWORD *)(a2 + v46 + 48);
  *(_OWORD *)(v47 + 32) = *(_OWORD *)(a2 + v46 + 32);
  *(_OWORD *)(v47 + 48) = v50;
  v51 = *(_OWORD *)(a2 + v46 + 80);
  *(_OWORD *)(v47 + 64) = *(_OWORD *)(a2 + v46 + 64);
  *(_OWORD *)(v47 + 80) = v51;
  *(_OWORD *)(v47 + 96) = *(_OWORD *)(a2 + v46 + 96);
  *(_QWORD *)(v47 + 112) = *(_QWORD *)(a2 + v46 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v47 + 120) = *(_QWORD *)(v48 + 120);
  *(_BYTE *)(v47 + 128) = *(_BYTE *)(v48 + 128);
  *(_QWORD *)(v47 + 136) = *(_QWORD *)(v48 + 136);
  *(_BYTE *)(v47 + 144) = *(_BYTE *)(v48 + 144);
  *(_QWORD *)(v47 + 152) = *(_QWORD *)(v48 + 152);
  *(_BYTE *)(v47 + 160) = *(_BYTE *)(v48 + 160);
  *(_BYTE *)(v47 + 176) = *(_BYTE *)(v48 + 176);
  *(_QWORD *)(v47 + 168) = *(_QWORD *)(v48 + 168);
  v52 = *(_QWORD *)(v48 + 184);
  *(_BYTE *)(v47 + 192) = *(_BYTE *)(v48 + 192);
  *(_QWORD *)(v47 + 184) = v52;
  *(_QWORD *)(v47 + 200) = *(_QWORD *)(v48 + 200);
  *(_BYTE *)(v47 + 208) = *(_BYTE *)(v48 + 208);
  *(_QWORD *)(v47 + 216) = *(_QWORD *)(v48 + 216);
  *(_BYTE *)(v47 + 224) = *(_BYTE *)(v48 + 224);
  *(_QWORD *)(v47 + 232) = *(_QWORD *)(v48 + 232);
  *(_BYTE *)(v47 + 240) = *(_BYTE *)(v48 + 240);
  *(_BYTE *)(v47 + 256) = *(_BYTE *)(v48 + 256);
  *(_QWORD *)(v47 + 248) = *(_QWORD *)(v48 + 248);
  *(_BYTE *)(v47 + 272) = *(_BYTE *)(v48 + 272);
  *(_QWORD *)(v47 + 264) = *(_QWORD *)(v48 + 264);
  v53 = a3[14];
  v54 = a3[15];
  v55 = a1 + v53;
  v56 = a2 + v53;
  *(_BYTE *)v55 = *(_BYTE *)v56;
  *(_BYTE *)(v55 + 1) = *(_BYTE *)(v56 + 1);
  *(_WORD *)(v55 + 2) = *(_WORD *)(v56 + 2);
  *(_WORD *)(a1 + v54) = *(_WORD *)(a2 + v54);
  v57 = a3[16];
  v58 = a1 + v57;
  v59 = a2 + v57;
  if (*(_QWORD *)(a1 + v57 + 8))
  {
    v60 = *(_QWORD *)(v59 + 8);
    if (v60)
    {
      *(_QWORD *)v58 = *(_QWORD *)v59;
      *(_QWORD *)(v58 + 8) = v60;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v58 + 16) = *(_BYTE *)(v59 + 16);
      *(_BYTE *)(v58 + 17) = *(_BYTE *)(v59 + 17);
      *(_QWORD *)(v58 + 24) = *(_QWORD *)(v59 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1D57EE47C(v58);
  }
  v61 = *(_OWORD *)(v59 + 16);
  *(_OWORD *)v58 = *(_OWORD *)v59;
  *(_OWORD *)(v58 + 16) = v61;
LABEL_21:
  v62 = a3[17];
  v63 = (_QWORD *)(a1 + v62);
  v64 = (uint64_t *)(a2 + v62);
  v66 = *v64;
  v65 = v64[1];
  *v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease();
  v67 = a3[18];
  v68 = (_QWORD *)(a1 + v67);
  v69 = (uint64_t *)(a2 + v67);
  v71 = *v69;
  v70 = v69[1];
  *v68 = v71;
  v68[1] = v70;
  swift_bridgeObjectRelease();
  v72 = a3[19];
  v73 = a1 + v72;
  v74 = a2 + v72;
  *(_BYTE *)v73 = *(_BYTE *)(a2 + v72);
  v75 = *(_QWORD *)(a2 + v72 + 16);
  *(_QWORD *)(v73 + 8) = *(_QWORD *)(a2 + v72 + 8);
  *(_QWORD *)(v73 + 16) = v75;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v73 + 24) = *(_BYTE *)(v74 + 24);
  *(_BYTE *)(v73 + 25) = *(_BYTE *)(v74 + 25);
  v76 = *(_QWORD *)(v74 + 40);
  *(_QWORD *)(v73 + 32) = *(_QWORD *)(v74 + 32);
  *(_QWORD *)(v73 + 40) = v76;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v73 + 48) = *(_BYTE *)(v74 + 48);
  v77 = a3[20];
  v78 = a1 + v77;
  v79 = a2 + v77;
  v80 = *(_QWORD *)(a2 + v77 + 8);
  *(_QWORD *)v78 = *(_QWORD *)(a2 + v77);
  *(_QWORD *)(v78 + 8) = v80;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v78 + 16) = *(_BYTE *)(v79 + 16);
  *(_BYTE *)(v78 + 17) = *(_BYTE *)(v79 + 17);
  v81 = *(_QWORD *)(v79 + 32);
  *(_QWORD *)(v78 + 24) = *(_QWORD *)(v79 + 24);
  *(_QWORD *)(v78 + 32) = v81;
  swift_bridgeObjectRelease();
  v82 = a3[21];
  v83 = (_QWORD *)(a1 + v82);
  v84 = (_QWORD *)(a2 + v82);
  if (*(_QWORD *)(a1 + v82 + 8))
  {
    v85 = v84[1];
    if (v85)
    {
      *v83 = *v84;
      v83[1] = v85;
      swift_bridgeObjectRelease();
      v86 = v84[3];
      v83[2] = v84[2];
      v83[3] = v86;
      swift_bridgeObjectRelease();
      v87 = v84[5];
      v83[4] = v84[4];
      v83[5] = v87;
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_1D59315F8((uint64_t)v83);
  }
  v88 = *((_OWORD *)v84 + 1);
  *(_OWORD *)v83 = *(_OWORD *)v84;
  *((_OWORD *)v83 + 1) = v88;
  *((_OWORD *)v83 + 2) = *((_OWORD *)v84 + 2);
LABEL_26:
  v89 = a3[23];
  *(_WORD *)(a1 + a3[22]) = *(_WORD *)(a2 + a3[22]);
  v90 = (_QWORD *)(a1 + v89);
  v91 = (_QWORD *)(a2 + v89);
  if (*(_QWORD *)(a1 + v89 + 8))
  {
    v92 = v91[1];
    if (v92)
    {
      *v90 = *v91;
      v90[1] = v92;
      swift_bridgeObjectRelease();
      v93 = v91[3];
      v90[2] = v91[2];
      v90[3] = v93;
      swift_bridgeObjectRelease();
      v94 = v91[5];
      v90[4] = v91[4];
      v90[5] = v94;
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    sub_1D5829E98(a1 + v89);
  }
  v95 = *((_OWORD *)v91 + 1);
  *(_OWORD *)v90 = *(_OWORD *)v91;
  *((_OWORD *)v90 + 1) = v95;
  *((_OWORD *)v90 + 2) = *((_OWORD *)v91 + 2);
LABEL_31:
  v96 = a3[24];
  v97 = a1 + v96;
  v98 = a2 + v96;
  if (*(_QWORD *)(a1 + v96 + 8) == 1)
  {
LABEL_34:
    v100 = *(_OWORD *)(v98 + 48);
    *(_OWORD *)(v97 + 32) = *(_OWORD *)(v98 + 32);
    *(_OWORD *)(v97 + 48) = v100;
    *(_OWORD *)(v97 + 58) = *(_OWORD *)(v98 + 58);
    v101 = *(_OWORD *)(v98 + 16);
    *(_OWORD *)v97 = *(_OWORD *)v98;
    *(_OWORD *)(v97 + 16) = v101;
    goto LABEL_36;
  }
  v99 = *(_QWORD *)(v98 + 8);
  if (v99 == 1)
  {
    sub_1D58B3718(v97);
    goto LABEL_34;
  }
  *(_QWORD *)v97 = *(_QWORD *)v98;
  *(_QWORD *)(v97 + 8) = v99;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v97 + 16) = *(_BYTE *)(v98 + 16);
  v102 = *(_QWORD *)(v98 + 32);
  *(_QWORD *)(v97 + 24) = *(_QWORD *)(v98 + 24);
  *(_QWORD *)(v97 + 32) = v102;
  swift_bridgeObjectRelease();
  v103 = *(_QWORD *)(v98 + 48);
  *(_QWORD *)(v97 + 40) = *(_QWORD *)(v98 + 40);
  *(_QWORD *)(v97 + 48) = v103;
  swift_bridgeObjectRelease();
  v104 = *(_QWORD *)(v98 + 64);
  *(_QWORD *)(v97 + 56) = *(_QWORD *)(v98 + 56);
  *(_QWORD *)(v97 + 64) = v104;
  swift_bridgeObjectRelease();
  *(_WORD *)(v97 + 72) = *(_WORD *)(v98 + 72);
LABEL_36:
  v105 = a3[26];
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  *(_BYTE *)(a1 + v105) = *(_BYTE *)(a2 + v105);
  v106 = a3[27];
  v107 = a1 + v106;
  v108 = a2 + v106;
  if (*(_QWORD *)(a1 + v106 + 8) == 1)
  {
LABEL_39:
    v110 = *(_OWORD *)(v108 + 16);
    *(_OWORD *)v107 = *(_OWORD *)v108;
    *(_OWORD *)(v107 + 16) = v110;
    *(_QWORD *)(v107 + 32) = *(_QWORD *)(v108 + 32);
    goto LABEL_41;
  }
  v109 = *(_QWORD *)(v108 + 8);
  if (v109 == 1)
  {
    sub_1D57EE4B0(v107);
    goto LABEL_39;
  }
  *(_QWORD *)v107 = *(_QWORD *)v108;
  *(_QWORD *)(v107 + 8) = v109;
  swift_bridgeObjectRelease();
  v111 = *(_QWORD *)(v108 + 24);
  *(_QWORD *)(v107 + 16) = *(_QWORD *)(v108 + 16);
  *(_QWORD *)(v107 + 24) = v111;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v107 + 32) = *(_QWORD *)(v108 + 32);
  swift_bridgeObjectRelease();
LABEL_41:
  v112 = a3[28];
  v113 = (_QWORD *)(a1 + v112);
  v114 = (_QWORD *)(a2 + v112);
  if (*(_QWORD *)(a1 + v112 + 8))
  {
    v115 = v114[1];
    if (v115)
    {
      *v113 = *v114;
      v113[1] = v115;
      swift_bridgeObjectRelease();
      *((_BYTE *)v113 + 16) = *((_BYTE *)v114 + 16);
      v116 = v114[4];
      v113[3] = v114[3];
      v113[4] = v116;
      swift_bridgeObjectRelease();
      *((_BYTE *)v113 + 40) = *((_BYTE *)v114 + 40);
      *((_DWORD *)v113 + 11) = *((_DWORD *)v114 + 11);
      *((_BYTE *)v113 + 48) = *((_BYTE *)v114 + 48);
      v117 = v114[8];
      v113[7] = v114[7];
      v113[8] = v117;
      swift_bridgeObjectRelease();
      *((_BYTE *)v113 + 72) = *((_BYTE *)v114 + 72);
      v118 = v114[11];
      v113[10] = v114[10];
      v113[11] = v118;
      *((_BYTE *)v113 + 96) = *((_BYTE *)v114 + 96);
      *((_BYTE *)v113 + 97) = *((_BYTE *)v114 + 97);
      v113[13] = v114[13];
      swift_bridgeObjectRelease();
      v113[14] = v114[14];
      *((_BYTE *)v113 + 120) = *((_BYTE *)v114 + 120);
      *((_OWORD *)v113 + 8) = *((_OWORD *)v114 + 8);
      v113[18] = v114[18];
      swift_bridgeObjectRelease();
      *((_BYTE *)v113 + 152) = *((_BYTE *)v114 + 152);
      v113[20] = v114[20];
      swift_bridgeObjectRelease();
      *((_BYTE *)v113 + 168) = *((_BYTE *)v114 + 168);
      *((_BYTE *)v113 + 169) = *((_BYTE *)v114 + 169);
      *((_BYTE *)v113 + 170) = *((_BYTE *)v114 + 170);
      *((_BYTE *)v113 + 171) = *((_BYTE *)v114 + 171);
      *((_BYTE *)v113 + 172) = *((_BYTE *)v114 + 172);
      *((_BYTE *)v113 + 173) = *((_BYTE *)v114 + 173);
      *((_BYTE *)v113 + 174) = *((_BYTE *)v114 + 174);
      *((_WORD *)v113 + 88) = *((_WORD *)v114 + 88);
      v119 = v114[24];
      v113[23] = v114[23];
      v113[24] = v119;
      swift_bridgeObjectRelease();
      v113[25] = v114[25];
      v113[26] = v114[26];
      swift_bridgeObjectRelease();
      v113[27] = v114[27];
      swift_bridgeObjectRelease();
      v113[28] = v114[28];
      swift_bridgeObjectRelease();
      v120 = v114[30];
      v113[29] = v114[29];
      v113[30] = v120;
      swift_bridgeObjectRelease();
      v113[31] = v114[31];
      swift_bridgeObjectRelease();
      *((_BYTE *)v113 + 256) = *((_BYTE *)v114 + 256);
      v121 = v114[34];
      v113[33] = v114[33];
      v113[34] = v121;
      swift_bridgeObjectRelease();
      v113[35] = v114[35];
      *((_BYTE *)v113 + 288) = *((_BYTE *)v114 + 288);
      v113[37] = v114[37];
      swift_bridgeObjectRelease();
      v113[38] = v114[38];
      swift_bridgeObjectRelease();
      v122 = v114[40];
      v113[39] = v114[39];
      v113[40] = v122;
      swift_bridgeObjectRelease();
      v113[41] = v114[41];
      *((_BYTE *)v113 + 336) = *((_BYTE *)v114 + 336);
      v123 = v114[44];
      v113[43] = v114[43];
      v113[44] = v123;
      swift_bridgeObjectRelease();
      v124 = v114[46];
      v113[45] = v114[45];
      v113[46] = v124;
      swift_bridgeObjectRelease();
      v125 = v114[48];
      v113[47] = v114[47];
      v113[48] = v125;
      swift_bridgeObjectRelease();
      *((_WORD *)v113 + 196) = *((_WORD *)v114 + 196);
      v126 = v114[51];
      v113[50] = v114[50];
      v113[51] = v126;
      swift_bridgeObjectRelease();
      v127 = v114[53];
      v113[52] = v114[52];
      v113[53] = v127;
      swift_bridgeObjectRelease();
      v128 = v114[55];
      v113[54] = v114[54];
      v113[55] = v128;
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    sub_1D5978DF0((uint64_t)v113);
  }
  memcpy(v113, v114, 0x1C0uLL);
LABEL_46:
  v129 = a3[29];
  v130 = a1 + v129;
  v131 = a2 + v129;
  v132 = *(_QWORD *)(a2 + v129 + 8);
  *(_QWORD *)v130 = *(_QWORD *)(a2 + v129);
  *(_QWORD *)(v130 + 8) = v132;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v130 + 16) = *(_QWORD *)(v131 + 16);
  *(_BYTE *)(v130 + 24) = *(_BYTE *)(v131 + 24);
  v133 = a3[30];
  v134 = a1 + v133;
  v135 = a2 + v133;
  v136 = *(_QWORD *)(a2 + v133 + 8);
  *(_QWORD *)v134 = *(_QWORD *)(a2 + v133);
  *(_QWORD *)(v134 + 8) = v136;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v134 + 16) = *(_BYTE *)(v135 + 16);
  *(_QWORD *)(a1 + a3[31]) = *(_QWORD *)(a2 + a3[31]);
  swift_bridgeObjectRelease();
  v137 = a3[33];
  *(_BYTE *)(a1 + a3[32]) = *(_BYTE *)(a2 + a3[32]);
  *(_BYTE *)(a1 + v137) = *(_BYTE *)(a2 + v137);
  v138 = a3[34];
  v139 = a1 + v138;
  v140 = a2 + v138;
  if (!*(_QWORD *)(a1 + v138 + 8))
  {
LABEL_50:
    v144 = *(_OWORD *)(v140 + 16);
    *(_OWORD *)v139 = *(_OWORD *)v140;
    *(_OWORD *)(v139 + 16) = v144;
    *(_OWORD *)(v139 + 32) = *(_OWORD *)(v140 + 32);
    goto LABEL_51;
  }
  v141 = *(_QWORD *)(v140 + 8);
  if (!v141)
  {
    sub_1D59A01E4(v139);
    goto LABEL_50;
  }
  *(_QWORD *)v139 = *(_QWORD *)v140;
  *(_QWORD *)(v139 + 8) = v141;
  swift_bridgeObjectRelease();
  v142 = *(_QWORD *)(v140 + 24);
  *(_QWORD *)(v139 + 16) = *(_QWORD *)(v140 + 16);
  *(_QWORD *)(v139 + 24) = v142;
  swift_bridgeObjectRelease();
  v143 = *(_QWORD *)(v140 + 40);
  *(_QWORD *)(v139 + 32) = *(_QWORD *)(v140 + 32);
  *(_QWORD *)(v139 + 40) = v143;
  swift_bridgeObjectRelease();
LABEL_51:
  v145 = a3[36];
  *(_BYTE *)(a1 + a3[35]) = *(_BYTE *)(a2 + a3[35]);
  v146 = a1 + v145;
  v147 = a2 + v145;
  *(_QWORD *)v146 = *(_QWORD *)v147;
  *(_BYTE *)(v146 + 8) = *(_BYTE *)(v147 + 8);
  *(_WORD *)(a1 + a3[37]) = *(_WORD *)(a2 + a3[37]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleViewEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59A1038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleViewEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59A10F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 24) = (a2 - 1);
  return result;
}

uint64_t getEnumTagSinglePayload for ArticleViewEvent.Model.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xDF)
    goto LABEL_17;
  if (a2 + 33 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 33) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 33;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 33;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 33;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x22;
  v8 = v6 - 34;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleViewEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 33 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 33) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xDF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xDE)
    return ((uint64_t (*)(void))((char *)&loc_1D59A1274 + 4 * byte_1D5AD3897[v4]))();
  *a1 = a2 + 33;
  return ((uint64_t (*)(void))((char *)sub_1D59A12A8 + 4 * byte_1D5AD3892[v4]))();
}

uint64_t sub_1D59A12A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59A12B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59A12B8);
  return result;
}

uint64_t sub_1D59A12C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59A12CCLL);
  *(_BYTE *)result = a2 + 33;
  return result;
}

uint64_t sub_1D59A12D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59A12D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleViewEvent.Model.CodingKeys()
{
  return &type metadata for ArticleViewEvent.Model.CodingKeys;
}

unint64_t sub_1D59A12F8()
{
  unint64_t result;

  result = qword_1EFF4EB78;
  if (!qword_1EFF4EB78)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD3E5C, &type metadata for ArticleViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EB78);
  }
  return result;
}

unint64_t sub_1D59A1340()
{
  unint64_t result;

  result = qword_1ED9C6930;
  if (!qword_1ED9C6930)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD3DCC, &type metadata for ArticleViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C6930);
  }
  return result;
}

unint64_t sub_1D59A1388()
{
  unint64_t result;

  result = qword_1ED9C6928;
  if (!qword_1ED9C6928)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD3DF4, &type metadata for ArticleViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C6928);
  }
  return result;
}

uint64_t sub_1D59A13CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461446461 && a2 == 0xE600000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AECA50 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AEDC30 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AEC9D0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEC9F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6569566575737369 && a2 == 0xED00006174614477 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5AECA10 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6C61727265666572 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x446C6C6177796170 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x6E676961706D6163 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AEE9D0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AECA30 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x656D656761676E65 && a2 == 0xEE0061746144746ELL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AED320 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AF0CB0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AF1000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x6144686372616573 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AF1020 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AF1040 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AF0C30 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0x6E656D6563616C70 && a2 == 0xED00006174614474 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AF0C50 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AEFFE0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0x657A695374786574 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 33;
    else
      return 34;
  }
}

uint64_t sub_1D59A2158(char **a1)
{
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1D59A2C74((uint64_t)v2);
  v3 = *((_QWORD *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  result = sub_1D59A21C0(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1D59A21C0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  int v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  unint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  char v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  unint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;

  v3 = a1[1];
  result = sub_1D5AAED9C();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_1D59A2864(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_151;
  v101 = result;
  v98 = a1;
  if (v3 <= 1)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    v104 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v10 = MEMORY[0x1E0DEE9D8];
LABEL_117:
      result = v10;
      v100 = v7;
      if (v11 >= 2)
      {
        v91 = *v98;
        do
        {
          v92 = v11 - 2;
          if (v11 < 2)
            goto LABEL_146;
          if (!v91)
            goto LABEL_159;
          v93 = result;
          v94 = *(_QWORD *)(result + 32 + 16 * v92);
          v95 = *(_QWORD *)(result + 32 + 16 * (v11 - 1) + 8);
          result = sub_1D59A2930((char *)(v91 + 16 * v94), (char *)(v91 + 16 * *(_QWORD *)(result + 32 + 16 * (v11 - 1))), v91 + 16 * v95, v104);
          if (v1)
            break;
          if (v95 < v94)
            goto LABEL_147;
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1D59A2C60(v93);
            v93 = result;
          }
          if (v92 >= *(_QWORD *)(v93 + 16))
            goto LABEL_148;
          v96 = (_QWORD *)(v93 + 32 + 16 * v92);
          *v96 = v94;
          v96[1] = v95;
          v97 = *(_QWORD *)(v93 + 16);
          if (v11 > v97)
            goto LABEL_149;
          memmove((void *)(v93 + 32 + 16 * (v11 - 1)), (const void *)(v93 + 32 + 16 * v11), 16 * (v97 - v11));
          result = v93;
          *(_QWORD *)(v93 + 16) = v97 - 1;
          v11 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v100 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v100 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    result = sub_1D5AAE970();
    *(_QWORD *)(result + 16) = v6;
    v100 = result;
    v104 = (char *)(result + 32);
  }
  v8 = 0;
  v9 = *a1;
  v99 = v9 + 8;
  v10 = MEMORY[0x1E0DEE9D8];
  v102 = v3;
  while (1)
  {
    v12 = v8++;
    if (v8 >= v3)
      goto LABEL_45;
    v13 = (uint64_t *)(v9 + 16 * v8);
    result = *v13;
    v14 = v13[1];
    v15 = (_QWORD *)(v9 + 16 * v12);
    if (result == *v15 && v14 == v15[1])
    {
      v18 = v12 + 2;
      if (v12 + 2 >= v3)
        goto LABEL_44;
      v17 = 0;
    }
    else
    {
      result = sub_1D5AAEDE4();
      v17 = result;
      v18 = v12 + 2;
      if (v12 + 2 >= v3)
        goto LABEL_36;
    }
    v19 = (_QWORD *)(v99 + 16 * v18);
    do
    {
      result = *(v19 - 1);
      v21 = (_QWORD *)(v9 + 16 * v8);
      if (result == *v21 && *v19 == v21[1])
      {
        if ((v17 & 1) != 0)
          goto LABEL_37;
      }
      else
      {
        result = sub_1D5AAEDE4();
        if (((v17 ^ result) & 1) != 0)
          goto LABEL_36;
      }
      v19 += 2;
      v20 = v18 + 1;
      v8 = v18;
      v18 = v20;
    }
    while (v20 < v3);
    v18 = v20;
LABEL_36:
    v8 = v18;
    if ((v17 & 1) != 0)
    {
LABEL_37:
      if (v18 < v12)
        goto LABEL_155;
      if (v12 < v18)
      {
        v23 = 16 * v18;
        v24 = 16 * v12;
        v25 = v18;
        v26 = v12;
        do
        {
          if (v26 != --v25)
          {
            if (!v9)
              goto LABEL_158;
            v27 = v9 + v23;
            v28 = *(_QWORD *)(v9 + v24);
            v29 = *(_QWORD *)(v9 + v24 + 8);
            *(_OWORD *)(v9 + v24) = *(_OWORD *)(v9 + v23 - 16);
            *(_QWORD *)(v27 - 16) = v28;
            *(_QWORD *)(v27 - 8) = v29;
          }
          ++v26;
          v23 -= 16;
          v24 += 16;
        }
        while (v26 < v25);
      }
LABEL_44:
      v8 = v18;
    }
LABEL_45:
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v12))
        goto LABEL_150;
      if (v8 - v12 < v101)
        break;
    }
LABEL_66:
    if (v8 < v12)
      goto LABEL_145;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1D59A2B5C(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
      v10 = result;
    }
    v38 = *(_QWORD *)(v10 + 16);
    v37 = *(_QWORD *)(v10 + 24);
    v11 = v38 + 1;
    if (v38 >= v37 >> 1)
    {
      result = (uint64_t)sub_1D59A2B5C((char *)(v37 > 1), v38 + 1, 1, (char *)v10);
      v10 = result;
    }
    *(_QWORD *)(v10 + 16) = v11;
    v39 = v10 + 32;
    v40 = (uint64_t *)(v10 + 32 + 16 * v38);
    *v40 = v12;
    v40[1] = v8;
    if (v38)
    {
      v103 = v8;
      while (1)
      {
        v41 = v11 - 1;
        if (v11 >= 4)
        {
          v46 = v39 + 16 * v11;
          v47 = *(_QWORD *)(v46 - 64);
          v48 = *(_QWORD *)(v46 - 56);
          v52 = __OFSUB__(v48, v47);
          v49 = v48 - v47;
          if (v52)
            goto LABEL_134;
          v51 = *(_QWORD *)(v46 - 48);
          v50 = *(_QWORD *)(v46 - 40);
          v52 = __OFSUB__(v50, v51);
          v44 = v50 - v51;
          v45 = v52;
          if (v52)
            goto LABEL_135;
          v53 = v11 - 2;
          v54 = (uint64_t *)(v39 + 16 * (v11 - 2));
          v56 = *v54;
          v55 = v54[1];
          v52 = __OFSUB__(v55, v56);
          v57 = v55 - v56;
          if (v52)
            goto LABEL_136;
          v52 = __OFADD__(v44, v57);
          v58 = v44 + v57;
          if (v52)
            goto LABEL_138;
          if (v58 >= v49)
          {
            v76 = (uint64_t *)(v39 + 16 * v41);
            v78 = *v76;
            v77 = v76[1];
            v52 = __OFSUB__(v77, v78);
            v79 = v77 - v78;
            if (v52)
              goto LABEL_144;
            v69 = v44 < v79;
            goto LABEL_104;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v70 = *(_QWORD *)(v10 + 32);
            v71 = *(_QWORD *)(v10 + 40);
            v52 = __OFSUB__(v71, v70);
            v63 = v71 - v70;
            v64 = v52;
            goto LABEL_98;
          }
          v43 = *(_QWORD *)(v10 + 32);
          v42 = *(_QWORD *)(v10 + 40);
          v52 = __OFSUB__(v42, v43);
          v44 = v42 - v43;
          v45 = v52;
        }
        if ((v45 & 1) != 0)
          goto LABEL_137;
        v53 = v11 - 2;
        v59 = (uint64_t *)(v39 + 16 * (v11 - 2));
        v61 = *v59;
        v60 = v59[1];
        v62 = __OFSUB__(v60, v61);
        v63 = v60 - v61;
        v64 = v62;
        if (v62)
          goto LABEL_139;
        v65 = (uint64_t *)(v39 + 16 * v41);
        v67 = *v65;
        v66 = v65[1];
        v52 = __OFSUB__(v66, v67);
        v68 = v66 - v67;
        if (v52)
          goto LABEL_141;
        if (__OFADD__(v63, v68))
          goto LABEL_143;
        if (v63 + v68 >= v44)
        {
          v69 = v44 < v68;
LABEL_104:
          if (v69)
            v41 = v53;
          goto LABEL_106;
        }
LABEL_98:
        if ((v64 & 1) != 0)
          goto LABEL_140;
        v72 = (uint64_t *)(v39 + 16 * v41);
        v74 = *v72;
        v73 = v72[1];
        v52 = __OFSUB__(v73, v74);
        v75 = v73 - v74;
        if (v52)
          goto LABEL_142;
        if (v75 < v63)
          goto LABEL_15;
LABEL_106:
        v80 = v41 - 1;
        if (v41 - 1 >= v11)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v81 = v9;
        if (!v9)
          goto LABEL_157;
        v82 = v10;
        v83 = (uint64_t *)(v39 + 16 * v80);
        v84 = *v83;
        v85 = v39;
        v86 = v41;
        v87 = (_QWORD *)(v39 + 16 * v41);
        v88 = v87[1];
        v89 = v81;
        result = sub_1D59A2930((char *)(v81 + 16 * *v83), (char *)(v81 + 16 * *v87), v81 + 16 * v88, v104);
        if (v1)
          goto LABEL_114;
        if (v88 < v84)
          goto LABEL_131;
        if (v86 > *(_QWORD *)(v82 + 16))
          goto LABEL_132;
        *v83 = v84;
        *(_QWORD *)(v85 + 16 * v80 + 8) = v88;
        v90 = *(_QWORD *)(v82 + 16);
        if (v86 >= v90)
          goto LABEL_133;
        v10 = v82;
        v11 = v90 - 1;
        result = (uint64_t)memmove(v87, v87 + 2, 16 * (v90 - 1 - v86));
        v39 = v85;
        *(_QWORD *)(v82 + 16) = v90 - 1;
        v9 = v89;
        v8 = v103;
        if (v90 <= 2)
          goto LABEL_15;
      }
    }
    v11 = 1;
LABEL_15:
    v3 = v102;
    if (v8 >= v102)
    {
      v7 = v100;
      goto LABEL_117;
    }
  }
  if (__OFADD__(v12, v101))
    goto LABEL_153;
  if (v12 + v101 >= v3)
    v30 = v3;
  else
    v30 = v12 + v101;
  if (v30 >= v12)
  {
    if (v8 != v30)
    {
      v31 = (uint64_t *)(v9 + 16 * v8);
      do
      {
        v32 = (uint64_t *)(v9 + 16 * v8);
        result = *v32;
        v33 = v32[1];
        v34 = v12;
        v35 = v31;
        do
        {
          if (result == *(v35 - 2) && v33 == *(v35 - 1))
            break;
          result = sub_1D5AAEDE4();
          if ((result & 1) == 0)
            break;
          if (!v9)
            goto LABEL_156;
          result = *v35;
          v33 = v35[1];
          *(_OWORD *)v35 = *((_OWORD *)v35 - 1);
          *(v35 - 1) = v33;
          *(v35 - 2) = result;
          v35 -= 2;
          ++v34;
        }
        while (v8 != v34);
        ++v8;
        v31 += 2;
      }
      while (v8 != v30);
      v8 = v30;
    }
    goto LABEL_66;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
  return result;
}

uint64_t sub_1D59A2864(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_1D5AAEDE4(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1D59A2930(char *__dst, char *__src, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  BOOL v20;
  BOOL v21;

  v4 = a4;
  v6 = __src;
  v7 = __dst;
  v8 = __src - __dst;
  v9 = __src - __dst + 15;
  if (__src - __dst >= 0)
    v9 = __src - __dst;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)__src;
  v12 = a3 - (_QWORD)__src + 15;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v12 = a3 - (_QWORD)__src;
  v13 = v12 >> 4;
  if (v10 >= v12 >> 4)
  {
    if (a4 != __src || &__src[16 * v13] <= a4)
      memmove(a4, __src, 16 * v13);
    v14 = &v4[16 * v13];
    if (v7 >= v6 || v11 < 16)
      goto LABEL_48;
    v17 = (char *)(a3 - 16);
    while (1)
    {
      v18 = v17 + 16;
      v19 = v6 - 16;
      v20 = *((_QWORD *)v14 - 2) == *((_QWORD *)v6 - 2) && *((_QWORD *)v14 - 1) == *((_QWORD *)v6 - 1);
      if (v20 || (sub_1D5AAEDE4() & 1) == 0)
      {
        v19 = v14 - 16;
        if (v18 != v14)
        {
          v14 -= 16;
LABEL_45:
          *(_OWORD *)v17 = *(_OWORD *)v19;
          goto LABEL_46;
        }
        v21 = v17 >= v14;
        v14 -= 16;
        if (v21)
          goto LABEL_45;
      }
      else
      {
        if (v18 != v6)
        {
          v6 -= 16;
          goto LABEL_45;
        }
        v21 = v17 >= v6;
        v6 -= 16;
        if (v21)
          goto LABEL_45;
      }
LABEL_46:
      if (v6 > v7)
      {
        v17 -= 16;
        if (v14 > v4)
          continue;
      }
      goto LABEL_48;
    }
  }
  if (a4 != __dst || &__dst[16 * v10] <= a4)
    memmove(a4, __dst, 16 * v10);
  v14 = &v4[16 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
      if (v15 || (sub_1D5AAEDE4() & 1) == 0)
        break;
      v16 = v6;
      v15 = v7 == v6;
      v6 += 16;
      if (!v15)
        goto LABEL_20;
LABEL_21:
      v7 += 16;
      if (v4 >= v14 || (unint64_t)v6 >= a3)
        goto LABEL_23;
    }
    v16 = v4;
    v15 = v7 == v4;
    v4 += 16;
    if (v15)
      goto LABEL_21;
LABEL_20:
    *(_OWORD *)v7 = *(_OWORD *)v16;
    goto LABEL_21;
  }
LABEL_23:
  v6 = v7;
LABEL_48:
  if (v6 != v4 || v6 >= &v4[(v14 - v4 + (v14 - v4 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0])
    memmove(v6, v4, 16 * ((v14 - v4) / 16));
  return 1;
}

char *sub_1D59A2B5C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1D57B5C60(0, &qword_1EFF4EB80, (void (*)(uint64_t))sub_1D59A2C88);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1D59A2C60(uint64_t a1)
{
  return sub_1D59A2B5C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_1D59A2C74(uint64_t a1)
{
  return sub_1D57C0B18(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_1D59A2C88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFF4EB88)
  {
    v0 = sub_1D5AAE9E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFF4EB88);
  }
}

NewsAnalytics::BannerAdPlacementType_optional __swiftcall BannerAdPlacementType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::BannerAdPlacementType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t BannerAdPlacementType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C6369747261;
  if (*v0 != 1)
    v1 = 1684366694;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D59A2D90(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A38A10(*a1, *a2);
}

unint64_t sub_1D59A2DA0()
{
  unint64_t result;

  result = qword_1EFF4EB90;
  if (!qword_1EFF4EB90)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for BannerAdPlacementType, &type metadata for BannerAdPlacementType);
    atomic_store(result, (unint64_t *)&qword_1EFF4EB90);
  }
  return result;
}

uint64_t sub_1D59A2DE4()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D59A2E7C()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D59A2EF0()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::BannerAdPlacementType_optional sub_1D59A2F84(Swift::String *a1)
{
  return BannerAdPlacementType.init(rawValue:)(*a1);
}

void sub_1D59A2F90(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x656C6369747261;
  if (v2 != 1)
  {
    v5 = 1684366694;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D59A2FE8()
{
  sub_1D59A315C();
  return sub_1D5AAE928();
}

uint64_t sub_1D59A3044()
{
  sub_1D59A315C();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for BannerAdPlacementType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D59A30DC + 4 * byte_1D5AD3EE5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D59A3110 + 4 * byte_1D5AD3EE0[v4]))();
}

uint64_t sub_1D59A3110(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59A3118(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59A3120);
  return result;
}

uint64_t sub_1D59A312C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59A3134);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D59A3138(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59A3140(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BannerAdPlacementType()
{
  return &type metadata for BannerAdPlacementType;
}

unint64_t sub_1D59A315C()
{
  unint64_t result;

  result = qword_1EFF4EB98;
  if (!qword_1EFF4EB98)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for BannerAdPlacementType, &type metadata for BannerAdPlacementType);
    atomic_store(result, (unint64_t *)&qword_1EFF4EB98);
  }
  return result;
}

NewsAnalytics::StartMethod_optional __swiftcall StartMethod.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::StartMethod_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 12;
  if (v3 < 0xC)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t StartMethod.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59A3228 + 4 * byte_1D5AD4004[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D59A3228()
{
  return 0x6469577961646F74;
}

uint64_t sub_1D59A3248()
{
  return 0x6C616E7265747865;
}

unint64_t sub_1D59A3268()
{
  return 0xD000000000000011;
}

unint64_t sub_1D59A32B4()
{
  return 0xD000000000000020;
}

uint64_t sub_1D59A32D4()
{
  return 0x6867696C746F7073;
}

uint64_t sub_1D59A32F0()
{
  return 0x66666F646E6168;
}

uint64_t sub_1D59A3304()
{
  return 0x6163696669746F6ELL;
}

uint64_t sub_1D59A3324()
{
  return 0x636573726170;
}

uint64_t sub_1D59A3338()
{
  return 0x6553697261666173;
}

uint64_t sub_1D59A3358(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A3D648(*a1, *a2);
}

unint64_t sub_1D59A3368()
{
  unint64_t result;

  result = qword_1EFF4EBA0;
  if (!qword_1EFF4EBA0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for StartMethod, &type metadata for StartMethod);
    atomic_store(result, (unint64_t *)&qword_1EFF4EBA0);
  }
  return result;
}

uint64_t sub_1D59A33AC()
{
  sub_1D5AAEE80();
  StartMethod.rawValue.getter();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D59A3410()
{
  StartMethod.rawValue.getter();
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D59A3460()
{
  sub_1D5AAEE80();
  StartMethod.rawValue.getter();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::StartMethod_optional sub_1D59A34C0(Swift::String *a1)
{
  return StartMethod.init(rawValue:)(*a1);
}

uint64_t sub_1D59A34CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = StartMethod.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D59A34F0()
{
  sub_1D59A3664();
  return sub_1D5AAE928();
}

uint64_t sub_1D59A354C()
{
  sub_1D59A3664();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for StartMethod(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1D59A35E4 + 4 * byte_1D5AD4015[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1D59A3618 + 4 * byte_1D5AD4010[v4]))();
}

uint64_t sub_1D59A3618(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59A3620(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59A3628);
  return result;
}

uint64_t sub_1D59A3634(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59A363CLL);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1D59A3640(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59A3648(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StartMethod()
{
  return &type metadata for StartMethod;
}

unint64_t sub_1D59A3664()
{
  unint64_t result;

  result = qword_1ED9CD098;
  if (!qword_1ED9CD098)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for StartMethod, &type metadata for StartMethod);
    atomic_store(result, (unint64_t *)&qword_1ED9CD098);
  }
  return result;
}

uint64_t sub_1D59A36A8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4EBA8, MEMORY[0x1E0CF8078]);
}

uint64_t static FeedLoadFailureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF472E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4EBA8, a1);
}

uint64_t sub_1D59A36E8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4EBC0, MEMORY[0x1E0CF8380]);
}

uint64_t static FeedLoadFailureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF472F0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4EBC0, a1);
}

uint64_t FeedLoadFailureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t FeedLoadFailureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*FeedLoadFailureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t FeedLoadFailureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadFailureEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedLoadFailureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadFailureEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedLoadFailureEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for FeedLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t FeedLoadFailureEvent.feedConfigData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadFailureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedLoadFailureEvent.feedConfigData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadFailureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedLoadFailureEvent.feedConfigData.modify())(_QWORD)
{
  type metadata accessor for FeedLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t FeedLoadFailureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D58D1A7C(type metadata accessor for FeedLoadFailureEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t FeedLoadFailureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadFailureEvent(0) + 28);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedLoadFailureEvent.timedData.modify())(_QWORD)
{
  type metadata accessor for FeedLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t FeedLoadFailureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadFailureEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedLoadFailureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadFailureEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedLoadFailureEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for FeedLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t FeedLoadFailureEvent.errorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadFailureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedLoadFailureEvent.errorData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadFailureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedLoadFailureEvent.errorData.modify())(_QWORD)
{
  type metadata accessor for FeedLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t FeedLoadFailureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *FailureEvent;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  FailureEvent = (int *)type metadata accessor for FeedLoadFailureEvent(0);
  v5 = a1 + FailureEvent[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + FailureEvent[6];
  v8 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = a1 + FailureEvent[7];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v2, v11);
  v12 = a1 + FailureEvent[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + FailureEvent[9];
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
}

uint64_t FeedLoadFailureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t FeedLoadFailureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadFailureEvent.Model(0) + 20);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FeedLoadFailureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4EC48);
}

uint64_t FeedLoadFailureEvent.Model.feedConfigData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedLoadFailureEvent.Model(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1D59A3E34(v4, v5);
}

uint64_t sub_1D59A3E34(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t FeedLoadFailureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D58D1A7C(type metadata accessor for FeedLoadFailureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t FeedLoadFailureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedLoadFailureEvent.Model(0) + 32));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t FeedLoadFailureEvent.Model.errorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadFailureEvent.Model(0) + 36);
  v5 = *(_QWORD *)(v3 + 24);
  v4 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 FeedLoadFailureEvent.Model.init(eventData:feedData:feedConfigData:timedData:viewData:errorData:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, __int128 *a6@<X5>, uint64_t a7@<X8>)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  int *Failure;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 result;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __n128 v29;
  __int128 v30;

  v9 = *a2;
  v10 = *((_QWORD *)a2 + 1);
  v11 = *((_QWORD *)a2 + 2);
  v26 = a3[1];
  v27 = *a3;
  v12 = *((_QWORD *)a3 + 4);
  v13 = *((_QWORD *)a3 + 5);
  v14 = *a5;
  v15 = a5[1];
  v16 = *((_WORD *)a5 + 8);
  v29 = (__n128)a6[1];
  v30 = *a6;
  v28 = *((_QWORD *)a6 + 4);
  v17 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a7, a1, v17);
  Failure = (int *)type metadata accessor for FeedLoadFailureEvent.Model(0);
  v19 = a7 + Failure[5];
  *(_BYTE *)v19 = v9;
  *(_QWORD *)(v19 + 8) = v10;
  *(_QWORD *)(v19 + 16) = v11;
  v20 = a7 + Failure[6];
  *(_OWORD *)v20 = v27;
  *(_OWORD *)(v20 + 16) = v26;
  *(_QWORD *)(v20 + 32) = v12;
  *(_QWORD *)(v20 + 40) = v13;
  v21 = a7 + Failure[7];
  v22 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, a4, v22);
  v23 = a7 + Failure[8];
  *(_QWORD *)v23 = v14;
  *(_QWORD *)(v23 + 8) = v15;
  *(_WORD *)(v23 + 16) = v16;
  v24 = a7 + Failure[9];
  result = v29;
  *(_OWORD *)v24 = v30;
  *(__n128 *)(v24 + 16) = v29;
  *(_QWORD *)(v24 + 32) = v28;
  return result;
}

uint64_t sub_1D59A4018()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59A404C + 4 * byte_1D5AD4150[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D59A404C()
{
  return 0x6174614464656566;
}

uint64_t sub_1D59A40AC()
{
  return 0x746144726F727265;
}

uint64_t sub_1D59A40C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59A65DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59A40E4()
{
  sub_1D59A4404();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59A410C()
{
  sub_1D59A4404();
  return sub_1D5AAEEE0();
}

uint64_t FeedLoadFailureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *Failure;
  uint64_t v11;
  _OWORD *v12;
  __int128 v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  _BYTE v21[32];
  __int128 v22;
  char v23;

  v3 = v1;
  sub_1D59A4994(0, &qword_1EFF4EBD8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v21[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59A4404();
  sub_1D5AAEEC8();
  v21[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    Failure = (int *)type metadata accessor for FeedLoadFailureEvent.Model(0);
    v11 = v3 + Failure[5];
    v21[0] = *(_BYTE *)v11;
    *(_OWORD *)&v21[8] = *(_OWORD *)(v11 + 8);
    v23 = 1;
    sub_1D57C65D4();
    sub_1D5AAED6C();
    v12 = (_OWORD *)(v3 + Failure[6]);
    v13 = v12[1];
    *(_OWORD *)v21 = *v12;
    *(_OWORD *)&v21[16] = v13;
    v22 = v12[2];
    v23 = 2;
    sub_1D57CAA2C();
    sub_1D5AAED18();
    v21[0] = 3;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v14 = (uint64_t *)(v3 + Failure[8]);
    v15 = *v14;
    v16 = v14[1];
    LOWORD(v14) = *((_WORD *)v14 + 8);
    *(_QWORD *)v21 = v15;
    *(_QWORD *)&v21[8] = v16;
    *(_WORD *)&v21[16] = (_WORD)v14;
    v23 = 4;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v17 = v3 + Failure[9];
    v18 = *(_QWORD *)(v17 + 32);
    v19 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)v21 = *(_OWORD *)v17;
    *(_OWORD *)&v21[16] = v19;
    *(_QWORD *)&v22 = v18;
    v23 = 5;
    sub_1D57C6128();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D59A4404()
{
  unint64_t result;

  result = qword_1EFF4EBE0;
  if (!qword_1EFF4EBE0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD4394, &type metadata for FeedLoadFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EBE0);
  }
  return result;
}

uint64_t FeedLoadFailureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Failure;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  __int128 v24;
  char *v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  _BYTE v43[32];
  __int128 v44;
  char v45;

  v34 = a2;
  v3 = sub_1D5AADFB0();
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  MEMORY[0x1E0C80A78](v3);
  v35 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1D5AADF98();
  v5 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v39 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59A4994(0, &qword_1EFF4EBE8, MEMORY[0x1E0DED048]);
  v40 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v33 - v9;
  Failure = type metadata accessor for FeedLoadFailureEvent.Model(0);
  MEMORY[0x1E0C80A78](Failure);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59A4404();
  v41 = v10;
  v14 = (uint64_t)v42;
  sub_1D5AAEEB0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v15 = v8;
  v33 = v5;
  v42 = a1;
  v16 = (uint64_t)v13;
  v17 = v37;
  v43[0] = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v19 = v38;
  v18 = v39;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v16, v18, v19);
  v45 = 1;
  sub_1D57C6590();
  sub_1D5AAECD0();
  v20 = (int *)Failure;
  v21 = v16 + *(int *)(Failure + 20);
  *(_BYTE *)v21 = v43[0];
  *(_OWORD *)(v21 + 8) = *(_OWORD *)&v43[8];
  v45 = 2;
  sub_1D57CA9E8();
  v22 = v40;
  sub_1D5AAEC7C();
  v23 = (_OWORD *)(v16 + *(int *)(Failure + 24));
  v24 = *(_OWORD *)&v43[16];
  *v23 = *(_OWORD *)v43;
  v23[1] = v24;
  v23[2] = v44;
  v43[0] = 3;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v25 = v35;
  v39 = 0;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v16 + v20[7], v25, v17);
  v45 = 4;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v26 = *(_QWORD *)&v43[8];
  v27 = *(_WORD *)&v43[16];
  v28 = v16 + v20[8];
  *(_QWORD *)v28 = *(_QWORD *)v43;
  *(_QWORD *)(v28 + 8) = v26;
  *(_WORD *)(v28 + 16) = v27;
  v45 = 5;
  sub_1D57C60E4();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v41, v22);
  v29 = v44;
  v30 = v16 + v20[9];
  v31 = *(_OWORD *)&v43[16];
  *(_OWORD *)v30 = *(_OWORD *)v43;
  *(_OWORD *)(v30 + 16) = v31;
  *(_QWORD *)(v30 + 32) = v29;
  sub_1D59A4A04(v16, v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  return sub_1D59A4A48(v16);
}

void sub_1D59A4994(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59A4404();
    v7 = a3(a1, &type metadata for FeedLoadFailureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59A49F0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D59A4A04(uint64_t a1, uint64_t a2)
{
  uint64_t Failure;

  Failure = type metadata accessor for FeedLoadFailureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(Failure - 8) + 16))(a2, a1, Failure);
  return a2;
}

uint64_t sub_1D59A4A48(uint64_t a1)
{
  uint64_t Failure;

  Failure = type metadata accessor for FeedLoadFailureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(Failure - 8) + 8))(a1, Failure);
  return a1;
}

uint64_t sub_1D59A4A84@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedLoadFailureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D59A4A98(_QWORD *a1)
{
  return FeedLoadFailureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D59A4AAC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF472E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4EBA8, a1);
}

uint64_t sub_1D59A4AD0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF472F0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4EBC0, a1);
}

uint64_t sub_1D59A4AF4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  v9 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = a2 + a1[7];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v4, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedLoadFailureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for FeedLoadFailureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

uint64_t initializeWithCopy for FeedLoadFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for FeedLoadFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for FeedLoadFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for FeedLoadFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedLoadFailureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59A56D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D57A8C9C();
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for FeedLoadFailureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59A5860(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D57A8C9C();
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedLoadFailureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = *(uint64_t *)((char *)a2 + v9 + 8);
    swift_bridgeObjectRetain();
    if (v15 == 1)
    {
      v16 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v16;
      *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
    }
    else
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *((_QWORD *)v13 + 1) = v15;
      v13[16] = v14[16];
      *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
      *((_QWORD *)v13 + 5) = *((_QWORD *)v14 + 5);
      swift_bridgeObjectRetain();
    }
    v18 = a3[7];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v22 = a3[8];
    v23 = a3[9];
    v24 = (char *)a1 + v22;
    v25 = (char *)a2 + v22;
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    *((_WORD *)v24 + 8) = *((_WORD *)v25 + 8);
    v27 = (uint64_t *)((char *)a1 + v23);
    v28 = (uint64_t *)((char *)a2 + v23);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = v28[3];
    v27[2] = v28[2];
    v27[3] = v30;
    v27[4] = v28[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FeedLoadFailureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 24) + 8) != 1)
    swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 28);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedLoadFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_QWORD *)(a2 + v8 + 8);
  swift_bridgeObjectRetain();
  if (v14 == 1)
  {
    v15 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v15;
    *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  }
  else
  {
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *(_QWORD *)(v12 + 8) = v14;
    *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
    *(_OWORD *)(v12 + 24) = *(_OWORD *)(v13 + 24);
    *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
    swift_bridgeObjectRetain();
  }
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = a3[8];
  v21 = a3[9];
  v22 = a1 + v20;
  v23 = a2 + v20;
  v24 = *(_QWORD *)(v23 + 8);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_QWORD *)(v22 + 8) = v24;
  *(_WORD *)(v22 + 16) = *(_WORD *)(v23 + 16);
  v25 = (_QWORD *)(a1 + v21);
  v26 = (_QWORD *)(a2 + v21);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = v26[3];
  v25[2] = v26[2];
  v25[3] = v28;
  v25[4] = v26[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedLoadFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = (__int128 *)(a2 + v10);
  v13 = *(_QWORD *)(a1 + v10 + 8);
  v14 = *(_QWORD *)(a2 + v10 + 8);
  if (v13 == 1)
  {
    if (v14 == 1)
    {
      v15 = *v12;
      v16 = v12[2];
      *(_OWORD *)(v11 + 16) = v12[1];
      *(_OWORD *)(v11 + 32) = v16;
      *(_OWORD *)v11 = v15;
    }
    else
    {
      *(_QWORD *)v11 = *(_QWORD *)v12;
      *(_QWORD *)(v11 + 8) = *((_QWORD *)v12 + 1);
      *(_BYTE *)(v11 + 16) = *((_BYTE *)v12 + 16);
      *(_QWORD *)(v11 + 24) = *((_QWORD *)v12 + 3);
      *(_QWORD *)(v11 + 32) = *((_QWORD *)v12 + 4);
      *(_QWORD *)(v11 + 40) = *((_QWORD *)v12 + 5);
      swift_bridgeObjectRetain();
    }
  }
  else if (v14 == 1)
  {
    sub_1D59A5F94(v11);
    v18 = v12[1];
    v17 = v12[2];
    *(_OWORD *)v11 = *v12;
    *(_OWORD *)(v11 + 16) = v18;
    *(_OWORD *)(v11 + 32) = v17;
  }
  else
  {
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *(_QWORD *)(v11 + 8) = *((_QWORD *)v12 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v11 + 16) = *((_BYTE *)v12 + 16);
    *(_QWORD *)(v11 + 24) = *((_QWORD *)v12 + 3);
    *(_QWORD *)(v11 + 32) = *((_QWORD *)v12 + 4);
    *(_QWORD *)(v11 + 40) = *((_QWORD *)v12 + 5);
  }
  v19 = a3[7];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_QWORD *)v24 = *(_QWORD *)(a2 + v23);
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(a2 + v23 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v24 + 16) = *(_BYTE *)(v25 + 16);
  *(_BYTE *)(v24 + 17) = *(_BYTE *)(v25 + 17);
  v26 = a3[9];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  *v27 = *(_QWORD *)(a2 + v26);
  v27[1] = *(_QWORD *)(a2 + v26 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27[2] = v28[2];
  v27[3] = v28[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27[4] = v28[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D59A5F94(uint64_t a1)
{
  destroy for StartMethodData();
  return a1;
}

uint64_t initializeWithTake for FeedLoadFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = (__int128 *)(a2 + v7);
  v11 = *v10;
  *(_QWORD *)(v9 + 16) = *((_QWORD *)v10 + 2);
  *(_OWORD *)v9 = v11;
  v12 = (_OWORD *)(a1 + v8);
  v13 = (_OWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v12[2] = v13[2];
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a3[9];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_WORD *)(v21 + 16) = *(_WORD *)(v22 + 16);
  v23 = a1 + v20;
  v24 = a2 + v20;
  v25 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v25;
  *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
  return a1;
}

uint64_t assignWithTake for FeedLoadFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = v11;
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  if (*(_QWORD *)(a1 + v12 + 8) != 1)
  {
    v15 = *(_QWORD *)(v14 + 8);
    if (v15 != 1)
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_QWORD *)(v13 + 8) = v15;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
      *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
      *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
      goto LABEL_6;
    }
    sub_1D59A5F94(v13);
  }
  v16 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v16;
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
LABEL_6:
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(_QWORD *)(a2 + v21 + 8);
  *(_QWORD *)v22 = *(_QWORD *)(a2 + v21);
  *(_QWORD *)(v22 + 8) = v24;
  swift_bridgeObjectRelease();
  *(_WORD *)(v22 + 16) = *(_WORD *)(v23 + 16);
  v25 = a3[9];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  v29 = v27[3];
  v26[2] = v27[2];
  v26[3] = v29;
  swift_bridgeObjectRelease();
  v26[4] = v27[4];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedLoadFailureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59A622C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedLoadFailureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59A62E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D59A638C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedLoadFailureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D59A6484 + 4 * byte_1D5AD415B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D59A64B8 + 4 * byte_1D5AD4156[v4]))();
}

uint64_t sub_1D59A64B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59A64C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59A64C8);
  return result;
}

uint64_t sub_1D59A64D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59A64DCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D59A64E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59A64E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedLoadFailureEvent.Model.CodingKeys()
{
  return &type metadata for FeedLoadFailureEvent.Model.CodingKeys;
}

unint64_t sub_1D59A6508()
{
  unint64_t result;

  result = qword_1EFF4EC90;
  if (!qword_1EFF4EC90)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD436C, &type metadata for FeedLoadFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EC90);
  }
  return result;
}

unint64_t sub_1D59A6550()
{
  unint64_t result;

  result = qword_1EFF4EC98;
  if (!qword_1EFF4EC98)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD42DC, &type metadata for FeedLoadFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EC98);
  }
  return result;
}

unint64_t sub_1D59A6598()
{
  unint64_t result;

  result = qword_1EFF4ECA0;
  if (!qword_1EFF4ECA0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD4304, &type metadata for FeedLoadFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4ECA0);
  }
  return result;
}

uint64_t sub_1D59A65DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x666E6F4364656566 && a2 == 0xEE00617461446769 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746144726F727265 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1D59A689C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9D0368, MEMORY[0x1E0CF8078]);
}

uint64_t static FeedGapExpansionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9D0388, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9D0368, a1);
}

uint64_t sub_1D59A68DC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9D0390, MEMORY[0x1E0CF8380]);
}

uint64_t static FeedGapExpansionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9D03B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9D0390, a1);
}

uint64_t FeedGapExpansionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t FeedGapExpansionEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*FeedGapExpansionEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t FeedGapExpansionEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for FeedGapExpansionEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t FeedGapExpansionEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGapExpansionEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedGapExpansionEvent.timedData.modify())(_QWORD)
{
  type metadata accessor for FeedGapExpansionEvent(0);
  return nullsub_1;
}

uint64_t FeedGapExpansionEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGapExpansionEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedGapExpansionEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGapExpansionEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedGapExpansionEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for FeedGapExpansionEvent(0);
  return nullsub_1;
}

uint64_t FeedGapExpansionEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGapExpansionEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedGapExpansionEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGapExpansionEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedGapExpansionEvent.groupData.modify())(_QWORD)
{
  type metadata accessor for FeedGapExpansionEvent(0);
  return nullsub_1;
}

uint64_t FeedGapExpansionEvent.feedJournalEntryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGapExpansionEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9CF188, (void (*)(void))sub_1D589C944, (void (*)(void))sub_1D589C98C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedGapExpansionEvent.feedJournalEntryData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGapExpansionEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9CF188, (void (*)(void))sub_1D589C944, (void (*)(void))sub_1D589C98C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedGapExpansionEvent.feedJournalEntryData.modify())(_QWORD)
{
  type metadata accessor for FeedGapExpansionEvent(0);
  return nullsub_1;
}

uint64_t FeedGapExpansionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for FeedGapExpansionEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9CF188, (void (*)(void))sub_1D589C944, (void (*)(void))sub_1D589C98C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
}

uint64_t FeedGapExpansionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t FeedGapExpansionEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for FeedGapExpansionEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for FeedGapExpansionEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4ED18);
}

uint64_t FeedGapExpansionEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for FeedGapExpansionEvent.Model(0) + 24);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t FeedGapExpansionEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v3 = v1 + *(int *)(type metadata accessor for FeedGapExpansionEvent.Model(0) + 28);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22 = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  v23 = *(_QWORD *)(v3 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(v3 + 128);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D5802B14((uint64_t)v16);
}

uint64_t FeedGapExpansionEvent.Model.feedJournalEntryData.getter@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_OWORD *)(v1 + *(int *)(type metadata accessor for FeedGapExpansionEvent.Model(0) + 32));
  return swift_bridgeObjectRetain();
}

__n128 FeedGapExpansionEvent.Model.init(eventData:timedData:feedData:groupData:feedJournalEntryData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, __int128 *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 result;
  _QWORD *v21;
  __int128 v22;
  __n128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  v9 = *a3;
  v10 = *((_QWORD *)a3 + 1);
  v11 = *((_QWORD *)a3 + 2);
  v28 = a4[6];
  v29 = a4[7];
  v30 = *((_QWORD *)a4 + 16);
  v24 = a4[2];
  v25 = a4[3];
  v26 = a4[4];
  v27 = a4[5];
  v22 = *a4;
  v23 = (__n128)a4[1];
  v12 = *a5;
  v13 = a5[1];
  v14 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a6, a1, v14);
  v15 = (int *)type metadata accessor for FeedGapExpansionEvent.Model(0);
  v16 = a6 + v15[5];
  v17 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16, a2, v17);
  v18 = a6 + v15[6];
  *(_BYTE *)v18 = v9;
  *(_QWORD *)(v18 + 8) = v10;
  *(_QWORD *)(v18 + 16) = v11;
  v19 = a6 + v15[7];
  *(_OWORD *)(v19 + 96) = v28;
  *(_OWORD *)(v19 + 112) = v29;
  *(_QWORD *)(v19 + 128) = v30;
  *(_OWORD *)(v19 + 32) = v24;
  *(_OWORD *)(v19 + 48) = v25;
  *(_OWORD *)(v19 + 64) = v26;
  *(_OWORD *)(v19 + 80) = v27;
  result = v23;
  *(_OWORD *)v19 = v22;
  *(__n128 *)(v19 + 16) = v23;
  v21 = (_QWORD *)(a6 + v15[8]);
  *v21 = v12;
  v21[1] = v13;
  return result;
}

uint64_t sub_1D59A7094()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59A70C8 + 4 * byte_1D5AD43F0[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D59A70C8()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D59A70DC()
{
  return 0x6174614464656566;
}

uint64_t sub_1D59A70F4()
{
  return 0x74614470756F7267;
}

unint64_t sub_1D59A7108()
{
  return 0xD000000000000014;
}

uint64_t sub_1D59A7124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59A94FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59A7148()
{
  sub_1D59A7438();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59A7170()
{
  sub_1D59A7438();
  return sub_1D5AAEEE0();
}

uint64_t FeedGapExpansionEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  char *v11;
  __int128 *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v18;
  char v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  char v29;
  char v30;
  __int128 v31;

  v3 = v1;
  sub_1D59A7A20(0, &qword_1EFF4ECA8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59A7438();
  sub_1D5AAEEC8();
  LOBYTE(v20) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for FeedGapExpansionEvent.Model(0);
    LOBYTE(v20) = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = (char *)(v3 + v10[6]);
    v30 = *v11;
    v31 = *(_OWORD *)(v11 + 8);
    v29 = 2;
    sub_1D57C65D4();
    sub_1D5AAED6C();
    v12 = (__int128 *)(v3 + v10[7]);
    v13 = v12[7];
    v26 = v12[6];
    v27 = v13;
    v28 = *((_QWORD *)v12 + 16);
    v14 = v12[3];
    v22 = v12[2];
    v23 = v14;
    v15 = v12[5];
    v24 = v12[4];
    v25 = v15;
    v16 = v12[1];
    v20 = *v12;
    v21 = v16;
    v19 = 3;
    sub_1D57C5FEC();
    sub_1D5AAED6C();
    v20 = *(_OWORD *)(v3 + v10[8]);
    v19 = 4;
    sub_1D589C98C();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D59A7438()
{
  unint64_t result;

  result = qword_1EFF4ECB0;
  if (!qword_1EFF4ECB0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD460C, &type metadata for FeedGapExpansionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4ECB0);
  }
  return result;
}

uint64_t FeedGapExpansionEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char v38;
  __int128 v39;
  char v40;
  _BYTE v41[32];
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  _QWORD *v49;

  v30 = a2;
  v33 = sub_1D5AADFB0();
  v31 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v32 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1D5AADF98();
  v4 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v34 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59A7A20(0, &qword_1EFF4ECB8, MEMORY[0x1E0DED048]);
  v35 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - v8;
  v10 = (int *)type metadata accessor for FeedGapExpansionEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59A7438();
  v37 = v9;
  v13 = (uint64_t)v49;
  sub_1D5AAEEB0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v14 = v32;
  v29 = v7;
  v28 = v4;
  v49 = a1;
  v15 = (uint64_t)v12;
  v16 = v33;
  v41[0] = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v17 = v34;
  v18 = v36;
  v19 = v35;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v15, v17, v18);
  v41[0] = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v15 + v10[5], v14, v16);
  LOBYTE(v39) = 2;
  sub_1D57C6590();
  sub_1D5AAECD0();
  v20 = v15 + v10[6];
  *(_BYTE *)v20 = v41[0];
  *(_OWORD *)(v20 + 8) = *(_OWORD *)&v41[8];
  v40 = 3;
  sub_1D57C5FA8();
  sub_1D5AAECD0();
  v21 = v15 + v10[7];
  v22 = v47;
  *(_OWORD *)(v21 + 96) = v46;
  *(_OWORD *)(v21 + 112) = v22;
  *(_QWORD *)(v21 + 128) = v48;
  v23 = v43;
  *(_OWORD *)(v21 + 32) = v42;
  *(_OWORD *)(v21 + 48) = v23;
  v24 = v45;
  *(_OWORD *)(v21 + 64) = v44;
  *(_OWORD *)(v21 + 80) = v24;
  v25 = *(_OWORD *)&v41[16];
  *(_OWORD *)v21 = *(_OWORD *)v41;
  *(_OWORD *)(v21 + 16) = v25;
  v38 = 4;
  sub_1D589C944();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v37, v19);
  *(_OWORD *)(v15 + v10[8]) = v39;
  sub_1D59A7A7C(v15, v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  return sub_1D59A7AC0(v15);
}

void sub_1D59A7A20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59A7438();
    v7 = a3(a1, &type metadata for FeedGapExpansionEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59A7A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedGapExpansionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D59A7AC0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedGapExpansionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D59A7AFC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedGapExpansionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D59A7B10(_QWORD *a1)
{
  return FeedGapExpansionEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D59A7B24@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  v13 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9CF188, (void (*)(void))sub_1D589C944, (void (*)(void))sub_1D589C98C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedGapExpansionEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9CF188, (void (*)(void))sub_1D589C944, (void (*)(void))sub_1D589C98C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for FeedGapExpansionEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9CF188, (void (*)(void))sub_1D589C944, (void (*)(void))sub_1D589C98C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t initializeWithCopy for FeedGapExpansionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CF188, (void (*)(void))sub_1D589C944, (void (*)(void))sub_1D589C98C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for FeedGapExpansionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CF188, (void (*)(void))sub_1D589C944, (void (*)(void))sub_1D589C98C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for FeedGapExpansionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CF188, (void (*)(void))sub_1D589C944, (void (*)(void))sub_1D589C98C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for FeedGapExpansionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CF188, (void (*)(void))sub_1D589C944, (void (*)(void))sub_1D589C98C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedGapExpansionEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59A84F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9CF188, (void (*)(void))sub_1D589C944, (void (*)(void))sub_1D589C98C);
          v8 = v16;
          v12 = *(_QWORD *)(v16 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for FeedGapExpansionEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59A863C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9CF188, (void (*)(void))sub_1D589C944, (void (*)(void))sub_1D589C98C);
          v10 = v18;
          v14 = *(_QWORD *)(v18 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D59A8784()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9CF188, (void (*)(void))sub_1D589C944, (void (*)(void))sub_1D589C98C);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedGapExpansionEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *v14 = *v15;
    v16 = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
    *((_QWORD *)v14 + 2) = v16;
    v17 = (char *)a1 + v13;
    v18 = (char *)a2 + v13;
    *(_WORD *)v17 = *(_WORD *)v18;
    v19 = *((_QWORD *)v18 + 2);
    *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
    *((_QWORD *)v17 + 2) = v19;
    *((_QWORD *)v17 + 3) = *((_QWORD *)v18 + 3);
    v20 = *((_QWORD *)v18 + 5);
    *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
    *((_QWORD *)v17 + 5) = v20;
    v21 = *((_QWORD *)v18 + 7);
    *((_QWORD *)v17 + 6) = *((_QWORD *)v18 + 6);
    *((_QWORD *)v17 + 7) = v21;
    v22 = *((_QWORD *)v18 + 9);
    *((_QWORD *)v17 + 8) = *((_QWORD *)v18 + 8);
    *((_QWORD *)v17 + 9) = v22;
    v17[80] = v18[80];
    v23 = *((_QWORD *)v18 + 12);
    *((_QWORD *)v17 + 11) = *((_QWORD *)v18 + 11);
    *((_QWORD *)v17 + 12) = v23;
    v24 = *((_QWORD *)v18 + 13);
    v17[112] = v18[112];
    *((_QWORD *)v17 + 13) = v24;
    v32 = *((_QWORD *)v18 + 16);
    *((_QWORD *)v17 + 15) = *((_QWORD *)v18 + 15);
    *((_QWORD *)v17 + 16) = v32;
    v25 = a3[8];
    v26 = (uint64_t *)((char *)a1 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    v29 = *v27;
    v28 = v27[1];
    *v26 = v29;
    v26[1] = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FeedGapExpansionEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedGapExpansionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_BYTE *)v13 = *(_BYTE *)v14;
  v15 = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 16) = v15;
  v16 = a1 + v12;
  v17 = a2 + v12;
  *(_WORD *)v16 = *(_WORD *)v17;
  v18 = *(_QWORD *)(v17 + 16);
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
  *(_QWORD *)(v16 + 16) = v18;
  *(_QWORD *)(v16 + 24) = *(_QWORD *)(v17 + 24);
  v19 = *(_QWORD *)(v17 + 40);
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  *(_QWORD *)(v16 + 40) = v19;
  v20 = *(_QWORD *)(v17 + 56);
  *(_QWORD *)(v16 + 48) = *(_QWORD *)(v17 + 48);
  *(_QWORD *)(v16 + 56) = v20;
  v21 = *(_QWORD *)(v17 + 72);
  *(_QWORD *)(v16 + 64) = *(_QWORD *)(v17 + 64);
  *(_QWORD *)(v16 + 72) = v21;
  *(_BYTE *)(v16 + 80) = *(_BYTE *)(v17 + 80);
  v22 = *(_QWORD *)(v17 + 96);
  *(_QWORD *)(v16 + 88) = *(_QWORD *)(v17 + 88);
  *(_QWORD *)(v16 + 96) = v22;
  v23 = *(_QWORD *)(v17 + 104);
  *(_BYTE *)(v16 + 112) = *(_BYTE *)(v17 + 112);
  *(_QWORD *)(v16 + 104) = v23;
  v30 = *(_QWORD *)(v17 + 128);
  *(_QWORD *)(v16 + 120) = *(_QWORD *)(v17 + 120);
  *(_QWORD *)(v16 + 128) = v30;
  v24 = a3[8];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (uint64_t *)(a2 + v24);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedGapExpansionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_BYTE *)v15 = *(_BYTE *)(a2 + v14);
  *(_BYTE *)(v15 + 1) = *(_BYTE *)(a2 + v14 + 1);
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(a2 + v14 + 8);
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(a2 + v14 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v15 + 24) = *(_DWORD *)(v16 + 24);
  *(_DWORD *)(v15 + 28) = *(_DWORD *)(v16 + 28);
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 40) = *(_QWORD *)(v16 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 48) = *(_QWORD *)(v16 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 56) = *(_QWORD *)(v16 + 56);
  *(_QWORD *)(v15 + 64) = *(_QWORD *)(v16 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 72) = *(_QWORD *)(v16 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v15 + 80) = *(_BYTE *)(v16 + 80);
  *(_QWORD *)(v15 + 88) = *(_QWORD *)(v16 + 88);
  *(_QWORD *)(v15 + 96) = *(_QWORD *)(v16 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v16 + 104);
  *(_BYTE *)(v15 + 112) = *(_BYTE *)(v16 + 112);
  *(_QWORD *)(v15 + 104) = v17;
  *(_QWORD *)(v15 + 120) = *(_QWORD *)(v16 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 128) = *(_QWORD *)(v16 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  return a1;
}

uint64_t initializeWithTake for FeedGapExpansionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  v15 = a1 + v12;
  v16 = a2 + v12;
  v17 = *(_OWORD *)(v16 + 48);
  *(_OWORD *)(v15 + 32) = *(_OWORD *)(v16 + 32);
  *(_OWORD *)(v15 + 48) = v17;
  v18 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v18;
  *(_QWORD *)(v15 + 128) = *(_QWORD *)(v16 + 128);
  v19 = *(_OWORD *)(v16 + 112);
  *(_OWORD *)(v15 + 96) = *(_OWORD *)(v16 + 96);
  *(_OWORD *)(v15 + 112) = v19;
  v20 = *(_OWORD *)(v16 + 80);
  *(_OWORD *)(v15 + 64) = *(_OWORD *)(v16 + 64);
  *(_OWORD *)(v15 + 80) = v20;
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for FeedGapExpansionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  v15 = *(_QWORD *)(v13 + 8);
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 8) = v15;
  *(_QWORD *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_WORD *)v17 = *(_WORD *)(a2 + v16);
  v19 = *(_QWORD *)(a2 + v16 + 16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)(v17 + 16) = v19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v17 + 40) = *(_QWORD *)(v18 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v17 + 48) = *(_QWORD *)(v18 + 48);
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v18 + 64);
  *(_QWORD *)(v17 + 56) = *(_QWORD *)(v18 + 56);
  *(_QWORD *)(v17 + 64) = v20;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v17 + 72) = *(_QWORD *)(v18 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 80) = *(_BYTE *)(v18 + 80);
  v21 = *(_QWORD *)(v18 + 96);
  *(_QWORD *)(v17 + 88) = *(_QWORD *)(v18 + 88);
  *(_QWORD *)(v17 + 96) = v21;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v17 + 104) = *(_QWORD *)(v18 + 104);
  *(_BYTE *)(v17 + 112) = *(_BYTE *)(v18 + 112);
  *(_QWORD *)(v17 + 120) = *(_QWORD *)(v18 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v17 + 128) = *(_QWORD *)(v18 + 128);
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = (_QWORD *)(a2 + v22);
  *(_QWORD *)(a1 + v22) = *v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 8) = v24[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedGapExpansionEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59A9158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 16);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedGapExpansionEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59A9210(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 16) = (a2 - 1);
  return result;
}

uint64_t sub_1D59A92B8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedGapExpansionEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D59A93A4 + 4 * byte_1D5AD43FA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D59A93D8 + 4 * byte_1D5AD43F5[v4]))();
}

uint64_t sub_1D59A93D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59A93E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59A93E8);
  return result;
}

uint64_t sub_1D59A93F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59A93FCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D59A9400(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59A9408(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedGapExpansionEvent.Model.CodingKeys()
{
  return &type metadata for FeedGapExpansionEvent.Model.CodingKeys;
}

unint64_t sub_1D59A9428()
{
  unint64_t result;

  result = qword_1EFF4ED60;
  if (!qword_1EFF4ED60)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD45E4, &type metadata for FeedGapExpansionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4ED60);
  }
  return result;
}

unint64_t sub_1D59A9470()
{
  unint64_t result;

  result = qword_1EFF4ED68;
  if (!qword_1EFF4ED68)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD4554, &type metadata for FeedGapExpansionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4ED68);
  }
  return result;
}

unint64_t sub_1D59A94B8()
{
  unint64_t result;

  result = qword_1EFF4ED70;
  if (!qword_1EFF4ED70)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD457C, &type metadata for FeedGapExpansionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4ED70);
  }
  return result;
}

uint64_t sub_1D59A94FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AF10E0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1D59A9730(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4ED78, MEMORY[0x1E0CF8078]);
}

uint64_t static PictureInPictureStopped.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF472F8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4ED78, a1);
}

uint64_t sub_1D59A9770(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4ED90, MEMORY[0x1E0CF8380]);
}

uint64_t static PictureInPictureStopped.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47300, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4ED90, a1);
}

uint64_t PictureInPictureStopped.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t PictureInPictureStopped.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*PictureInPictureStopped.eventData.modify())()
{
  return nullsub_1;
}

uint64_t PictureInPictureStopped.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStopped(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for PictureInPictureStopped(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4EE18);
}

uint64_t PictureInPictureStopped.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStopped(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PictureInPictureStopped.articleData.modify())(_QWORD)
{
  type metadata accessor for PictureInPictureStopped(0);
  return nullsub_1;
}

uint64_t PictureInPictureStopped.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStopped(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PictureInPictureStopped.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStopped(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PictureInPictureStopped.channelData.modify())(_QWORD)
{
  type metadata accessor for PictureInPictureStopped(0);
  return nullsub_1;
}

uint64_t PictureInPictureStopped.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStopped(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PictureInPictureStopped.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStopped(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PictureInPictureStopped.feedData.modify())(_QWORD)
{
  type metadata accessor for PictureInPictureStopped(0);
  return nullsub_1;
}

uint64_t PictureInPictureStopped.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStopped(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PictureInPictureStopped.mediaData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStopped(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PictureInPictureStopped.mediaData.modify())(_QWORD)
{
  type metadata accessor for PictureInPictureStopped(0);
  return nullsub_1;
}

uint64_t PictureInPictureStopped.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStopped(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PictureInPictureStopped.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStopped(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PictureInPictureStopped.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for PictureInPictureStopped(0);
  return nullsub_1;
}

uint64_t PictureInPictureStopped.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStopped(0) + 40);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PictureInPictureStopped.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PictureInPictureStopped(0) + 40);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PictureInPictureStopped.groupData.modify())(_QWORD)
{
  type metadata accessor for PictureInPictureStopped(0);
  return nullsub_1;
}

uint64_t PictureInPictureStopped.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for PictureInPictureStopped(0);
  v5 = a1 + v4[5];
  v6 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v6, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v6, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v6, v17);
}

uint64_t PictureInPictureStopped.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t PictureInPictureStopped.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[136];

  v3 = type metadata accessor for PictureInPictureStopped.Model(0);
  sub_1D57E4810(v1 + *(int *)(v3 + 20), (uint64_t)v5, (unint64_t *)&qword_1ED9CE420);
  sub_1D57E4810((uint64_t)v5, a1, (unint64_t *)&qword_1ED9CE420);
  return sub_1D580D964((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1D580C5CC);
}

uint64_t type metadata accessor for PictureInPictureStopped.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4EEC0);
}

uint64_t PictureInPictureStopped.Model.channelData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PictureInPictureStopped.Model(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57DD4CC(v4, v5);
}

uint64_t PictureInPictureStopped.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PictureInPictureStopped.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t PictureInPictureStopped.Model.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for PictureInPictureStopped.Model(0) + 32));
  v4 = *v3;
  v6 = *((_QWORD *)v3 + 1);
  v5 = *((_QWORD *)v3 + 2);
  v7 = *((_DWORD *)v3 + 6);
  LOBYTE(v3) = v3[28];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 28) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t PictureInPictureStopped.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for PictureInPictureStopped.Model(0) + 36));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t *PictureInPictureStopped.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5[17];

  v3 = type metadata accessor for PictureInPictureStopped.Model(0);
  sub_1D57E4810(v1 + *(int *)(v3 + 40), (uint64_t)v5, (unint64_t *)&qword_1ED9CEEE0);
  sub_1D57E4810((uint64_t)v5, a1, (unint64_t *)&qword_1ED9CEEE0);
  return sub_1D582B584(v5);
}

uint64_t PictureInPictureStopped.Model.init(eventData:articleData:channelData:feedData:mediaData:userBundleSubscriptionContextData:groupData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, char *a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _BYTE v37[136];
  _BYTE v38[144];

  sub_1D57E4810(a2, (uint64_t)v37, (unint64_t *)&qword_1ED9CE420);
  v26 = a3[1];
  v27 = *a3;
  v15 = *((_QWORD *)a3 + 4);
  v28 = *a4;
  v16 = *((_QWORD *)a4 + 2);
  v29 = *a5;
  v17 = *((_QWORD *)a5 + 1);
  v18 = *((_QWORD *)a5 + 2);
  LODWORD(a3) = *((_DWORD *)a5 + 6);
  LOBYTE(a5) = a5[28];
  v36 = *a6;
  v34 = *((_QWORD *)a6 + 2);
  v35 = *((_QWORD *)a6 + 1);
  v32 = a6[25];
  v33 = a6[24];
  v30 = *((_QWORD *)a6 + 5);
  v31 = *((_QWORD *)a6 + 4);
  LOBYTE(a6) = a6[48];
  sub_1D57E4810(a7, (uint64_t)v38, (unint64_t *)&qword_1ED9CEEE0);
  v19 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a8, a1, v19);
  v20 = (int *)type metadata accessor for PictureInPictureStopped.Model(0);
  sub_1D57E4810((uint64_t)v37, a8 + v20[5], (unint64_t *)&qword_1ED9CE420);
  v21 = a8 + v20[6];
  *(_OWORD *)v21 = v27;
  *(_OWORD *)(v21 + 16) = v26;
  *(_QWORD *)(v21 + 32) = v15;
  v22 = a8 + v20[7];
  *(_OWORD *)v22 = v28;
  *(_QWORD *)(v22 + 16) = v16;
  v23 = a8 + v20[8];
  *(_BYTE *)v23 = v29;
  *(_QWORD *)(v23 + 8) = v17;
  *(_QWORD *)(v23 + 16) = v18;
  *(_DWORD *)(v23 + 24) = (_DWORD)a3;
  *(_BYTE *)(v23 + 28) = (_BYTE)a5;
  v24 = a8 + v20[9];
  *(_BYTE *)v24 = v36;
  *(_QWORD *)(v24 + 8) = v35;
  *(_QWORD *)(v24 + 16) = v34;
  *(_BYTE *)(v24 + 24) = v33;
  *(_BYTE *)(v24 + 25) = v32;
  *(_QWORD *)(v24 + 32) = v31;
  *(_QWORD *)(v24 + 40) = v30;
  *(_BYTE *)(v24 + 48) = (_BYTE)a6;
  return sub_1D57E4810((uint64_t)v38, a8 + v20[10], (unint64_t *)&qword_1ED9CEEE0);
}

uint64_t sub_1D59AA434(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59AA46C + 4 * byte_1D5AD4660[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D59AA46C()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D59AA4A0()
{
  return 0x6174614464656566;
}

uint64_t sub_1D59AA4B8()
{
  return 0x746144616964656DLL;
}

unint64_t sub_1D59AA4CC()
{
  return 0xD000000000000021;
}

uint64_t sub_1D59AA4E8()
{
  return 0x74614470756F7267;
}

uint64_t sub_1D59AA4FC()
{
  unsigned __int8 *v0;

  return sub_1D59AA434(*v0);
}

uint64_t sub_1D59AA504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59ADCA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59AA528()
{
  sub_1D59AA900();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59AA550()
{
  sub_1D59AA900();
  return sub_1D5AAEEE0();
}

uint64_t PictureInPictureStopped.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  __int128 *v11;
  uint64_t v12;
  __int128 v13;
  __int128 *v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char *v21;
  char v22;
  char v23;
  char v24;
  _BYTE v26[8];
  char v27[136];
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  char v32;
  __int128 v33;
  char v34;
  char v35;
  __int128 v36;
  char v37;
  _BYTE v38[152];

  v3 = v1;
  sub_1D59AAF5C(0, &qword_1EFF4EDA8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v26[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59AA900();
  sub_1D5AAEEC8();
  v38[135] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for PictureInPictureStopped.Model(0);
    sub_1D57E4810(v3 + v10[5], (uint64_t)v38, (unint64_t *)&qword_1ED9CE420);
    sub_1D57E4810((uint64_t)v38, (uint64_t)&v28, (unint64_t *)&qword_1ED9CE420);
    v27[0] = 1;
    sub_1D57CB940();
    sub_1D5AAED18();
    v11 = (__int128 *)(v3 + v10[6]);
    v12 = *((_QWORD *)v11 + 4);
    v13 = v11[1];
    v28 = *v11;
    v29 = v13;
    v30 = v12;
    v27[0] = 2;
    sub_1D57CB8B8();
    sub_1D5AAED18();
    v14 = (__int128 *)(v3 + v10[7]);
    v15 = *((_QWORD *)v14 + 2);
    v28 = *v14;
    *(_QWORD *)&v29 = v15;
    v27[0] = 3;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v16 = (char *)(v3 + v10[8]);
    v17 = *v16;
    v18 = *((_QWORD *)v16 + 1);
    v19 = *((_QWORD *)v16 + 2);
    v20 = *((_DWORD *)v16 + 6);
    LOBYTE(v16) = v16[28];
    LOBYTE(v28) = v17;
    *((_QWORD *)&v28 + 1) = v18;
    *(_QWORD *)&v29 = v19;
    DWORD2(v29) = v20;
    BYTE12(v29) = (_BYTE)v16;
    v27[0] = 4;
    sub_1D57E7E7C();
    sub_1D5AAED6C();
    v21 = (char *)(v3 + v10[9]);
    v22 = v21[24];
    v23 = v21[25];
    v24 = v21[48];
    v32 = *v21;
    v33 = *(_OWORD *)(v21 + 8);
    v34 = v22;
    v35 = v23;
    v36 = *((_OWORD *)v21 + 2);
    v37 = v24;
    v31 = 5;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    sub_1D57E4810(v3 + v10[10], (uint64_t)&v28, (unint64_t *)&qword_1ED9CEEE0);
    sub_1D57E4810((uint64_t)&v28, (uint64_t)v27, (unint64_t *)&qword_1ED9CEEE0);
    v26[7] = 6;
    sub_1D57C5FEC();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D59AA900()
{
  unint64_t result;

  result = qword_1EFF4EDB0;
  if (!qword_1EFF4EDB0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD48E4, &type metadata for PictureInPictureStopped.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EDB0);
  }
  return result;
}

uint64_t PictureInPictureStopped.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char v24;
  char *v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char *v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _BYTE v39[136];
  _OWORD v40[2];
  __int128 v41;
  char v42;
  _BYTE v43[136];
  _BYTE v44[160];

  v32 = a2;
  v35 = sub_1D5AADF98();
  v33 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v34 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59AAF5C(0, &qword_1EFF4EDB8, MEMORY[0x1E0DED048]);
  v36 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - v6;
  v8 = (int *)type metadata accessor for PictureInPictureStopped.Model(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59AA900();
  v37 = v7;
  v11 = v38;
  sub_1D5AAEEB0();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v38 = v5;
  v12 = a1;
  LOBYTE(v40[0]) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v13 = v34;
  v14 = v35;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v10, v13, v14);
  v44[159] = 1;
  sub_1D57CB8FC();
  sub_1D5AAEC7C();
  sub_1D57E4810((uint64_t)v44, (uint64_t)v43, (unint64_t *)&qword_1ED9CE420);
  sub_1D57E4810((uint64_t)v43, (uint64_t)&v10[v8[5]], (unint64_t *)&qword_1ED9CE420);
  v39[0] = 2;
  sub_1D57CB874();
  sub_1D5AAEC7C();
  v15 = v41;
  v16 = &v10[v8[6]];
  v17 = v40[1];
  *(_OWORD *)v16 = v40[0];
  *((_OWORD *)v16 + 1) = v17;
  *((_QWORD *)v16 + 4) = v15;
  v39[0] = 3;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v18 = *(_QWORD *)&v40[1];
  v19 = &v10[v8[7]];
  *(_OWORD *)v19 = v40[0];
  *((_QWORD *)v19 + 2) = v18;
  v39[0] = 4;
  sub_1D57E7E38();
  sub_1D5AAECD0();
  v20 = (uint64_t)v12;
  v21 = *((_QWORD *)&v40[0] + 1);
  v22 = *(_QWORD *)&v40[1];
  v23 = DWORD2(v40[1]);
  v24 = BYTE12(v40[1]);
  v25 = &v10[v8[8]];
  *v25 = v40[0];
  *((_QWORD *)v25 + 1) = v21;
  *((_QWORD *)v25 + 2) = v22;
  *((_DWORD *)v25 + 6) = v23;
  v25[28] = v24;
  v39[0] = 5;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v26 = v38;
  v27 = BYTE8(v40[1]);
  v28 = BYTE9(v40[1]);
  v29 = v42;
  v30 = &v10[v8[9]];
  *v30 = v40[0];
  *(_OWORD *)(v30 + 8) = *(_OWORD *)((char *)v40 + 8);
  v30[24] = v27;
  v30[25] = v28;
  *((_OWORD *)v30 + 2) = v41;
  v30[48] = v29;
  v44[158] = 6;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v37, v36);
  sub_1D57E4810((uint64_t)v40, (uint64_t)v39, (unint64_t *)&qword_1ED9CEEE0);
  sub_1D57E4810((uint64_t)v39, (uint64_t)&v10[v8[10]], (unint64_t *)&qword_1ED9CEEE0);
  sub_1D59AAFB8((uint64_t)v10, v32);
  __swift_destroy_boxed_opaque_existential_1(v20);
  return sub_1D59AAFFC((uint64_t)v10);
}

void sub_1D59AAF5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59AA900();
    v7 = a3(a1, &type metadata for PictureInPictureStopped.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59AAFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PictureInPictureStopped.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D59AAFFC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PictureInPictureStopped.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D59AB038@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PictureInPictureStopped.Model.init(from:)(a1, a2);
}

uint64_t sub_1D59AB04C(_QWORD *a1)
{
  return PictureInPictureStopped.Model.encode(to:)(a1);
}

uint64_t sub_1D59AB060@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF472F8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4ED78, a1);
}

uint64_t sub_1D59AB084@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47300, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4ED90, a1);
}

uint64_t sub_1D59AB0A8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  v7 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  v9 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v7, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v7, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v7, v18);
}

uint64_t *initializeBufferWithCopyOfBuffer for PictureInPictureStopped(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return a1;
}

uint64_t destroy for PictureInPictureStopped(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
}

uint64_t initializeWithCopy for PictureInPictureStopped(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

uint64_t assignWithCopy for PictureInPictureStopped(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t initializeWithTake for PictureInPictureStopped(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for PictureInPictureStopped(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for PictureInPictureStopped()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59ABF6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
              v8 = v18;
              v12 = *(_QWORD *)(v18 - 8);
              v13 = a3[10];
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for PictureInPictureStopped()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59AC160(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
              v10 = v20;
              v14 = *(_QWORD *)(v20 - 8);
              v15 = a4[10];
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D59AC350()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C72B8, (void (*)(void))sub_1D57E7E38, (void (*)(void))sub_1D57E7E7C);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
              if (v6 <= 0x3F)
                swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for PictureInPictureStopped.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 3);
    if (v11)
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      v9[8] = v10[8];
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v11;
      v9[32] = v10[32];
      v12 = *((_QWORD *)v10 + 6);
      *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
      *((_QWORD *)v9 + 6) = v12;
      *((_WORD *)v9 + 28) = *((_WORD *)v10 + 28);
      v14 = *((_QWORD *)v10 + 8);
      v13 = *((_QWORD *)v10 + 9);
      v9[80] = v10[80];
      *((_QWORD *)v9 + 8) = v14;
      *((_QWORD *)v9 + 9) = v13;
      *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
      *((_QWORD *)v9 + 13) = *((_QWORD *)v10 + 13);
      v9[112] = v10[112];
      *((_QWORD *)v9 + 15) = *((_QWORD *)v10 + 15);
      *((_DWORD *)v9 + 32) = *((_DWORD *)v10 + 32);
      v9[132] = v10[132];
      *(_WORD *)(v9 + 133) = *(_WORD *)(v10 + 133);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v16 = *((_OWORD *)v10 + 7);
      *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
      *((_OWORD *)v9 + 7) = v16;
      *(_QWORD *)(v9 + 127) = *(_QWORD *)(v10 + 127);
      v17 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v17;
      v18 = *((_OWORD *)v10 + 5);
      *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
      *((_OWORD *)v9 + 5) = v18;
      v19 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v19;
    }
    v20 = a3[6];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = *((_QWORD *)v22 + 1);
    if (v23)
    {
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = v23;
      *((_WORD *)v21 + 8) = *((_WORD *)v22 + 8);
      v24 = *((_QWORD *)v22 + 4);
      *((_QWORD *)v21 + 3) = *((_QWORD *)v22 + 3);
      *((_QWORD *)v21 + 4) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v25 = *((_OWORD *)v22 + 1);
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v25;
      *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
    }
    v26 = a3[7];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = *((_QWORD *)v28 + 2);
    if (v29 == 1)
    {
      *(_OWORD *)v27 = *(_OWORD *)v28;
      *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
    }
    else
    {
      *v27 = *v28;
      *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
      *((_QWORD *)v27 + 2) = v29;
      swift_bridgeObjectRetain();
    }
    v30 = a3[8];
    v31 = a3[9];
    v32 = (char *)a1 + v30;
    v33 = (char *)a2 + v30;
    *v32 = *v33;
    v34 = *((_QWORD *)v33 + 2);
    *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
    *((_QWORD *)v32 + 2) = v34;
    *((_DWORD *)v32 + 6) = *((_DWORD *)v33 + 6);
    v32[28] = v33[28];
    v35 = (char *)a1 + v31;
    v36 = (char *)a2 + v31;
    *v35 = *v36;
    v37 = *((_QWORD *)v36 + 2);
    *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
    *((_QWORD *)v35 + 2) = v37;
    v35[24] = v36[24];
    v35[25] = v36[25];
    v38 = *((_QWORD *)v36 + 5);
    *((_QWORD *)v35 + 4) = *((_QWORD *)v36 + 4);
    *((_QWORD *)v35 + 5) = v38;
    v35[48] = v36[48];
    v39 = a3[10];
    v40 = (char *)a1 + v39;
    v41 = (char *)a2 + v39;
    v42 = *(uint64_t *)((char *)a2 + v39 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v42)
    {
      *(_WORD *)v40 = *(_WORD *)v41;
      *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
      *((_QWORD *)v40 + 2) = v42;
      *((_QWORD *)v40 + 3) = *((_QWORD *)v41 + 3);
      v43 = *((_QWORD *)v41 + 5);
      *((_QWORD *)v40 + 4) = *((_QWORD *)v41 + 4);
      *((_QWORD *)v40 + 5) = v43;
      v44 = *((_QWORD *)v41 + 7);
      *((_QWORD *)v40 + 6) = *((_QWORD *)v41 + 6);
      *((_QWORD *)v40 + 7) = v44;
      v45 = *((_QWORD *)v41 + 9);
      *((_QWORD *)v40 + 8) = *((_QWORD *)v41 + 8);
      *((_QWORD *)v40 + 9) = v45;
      v40[80] = v41[80];
      v46 = *((_QWORD *)v41 + 12);
      *((_QWORD *)v40 + 11) = *((_QWORD *)v41 + 11);
      *((_QWORD *)v40 + 12) = v46;
      *((_QWORD *)v40 + 13) = *((_QWORD *)v41 + 13);
      v40[112] = v41[112];
      v47 = *((_QWORD *)v41 + 15);
      v48 = *((_QWORD *)v41 + 16);
      *((_QWORD *)v40 + 15) = v47;
      *((_QWORD *)v40 + 16) = v48;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v49 = *((_OWORD *)v41 + 7);
      *((_OWORD *)v40 + 6) = *((_OWORD *)v41 + 6);
      *((_OWORD *)v40 + 7) = v49;
      *((_QWORD *)v40 + 16) = *((_QWORD *)v41 + 16);
      v50 = *((_OWORD *)v41 + 3);
      *((_OWORD *)v40 + 2) = *((_OWORD *)v41 + 2);
      *((_OWORD *)v40 + 3) = v50;
      v51 = *((_OWORD *)v41 + 5);
      *((_OWORD *)v40 + 4) = *((_OWORD *)v41 + 4);
      *((_OWORD *)v40 + 5) = v51;
      v52 = *((_OWORD *)v41 + 1);
      *(_OWORD *)v40 = *(_OWORD *)v41;
      *((_OWORD *)v40 + 1) = v52;
    }
  }
  return a1;
}

uint64_t destroy for PictureInPictureStopped.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  if (*(_QWORD *)(a1 + a2[5] + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[6] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[7] + 16) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + a2[10] + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PictureInPictureStopped.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v52;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 24);
  if (v10)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = v10;
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
    v11 = *(_QWORD *)(v9 + 48);
    *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
    *(_QWORD *)(v8 + 48) = v11;
    *(_WORD *)(v8 + 56) = *(_WORD *)(v9 + 56);
    v13 = *(_QWORD *)(v9 + 64);
    v12 = *(_QWORD *)(v9 + 72);
    *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
    *(_QWORD *)(v8 + 64) = v13;
    *(_QWORD *)(v8 + 72) = v12;
    *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
    *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
    *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
    *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
    *(_DWORD *)(v8 + 128) = *(_DWORD *)(v9 + 128);
    *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
    *(_WORD *)(v8 + 133) = *(_WORD *)(v9 + 133);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = *(_OWORD *)(v9 + 112);
    *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
    *(_OWORD *)(v8 + 112) = v14;
    *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
    v15 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 48) = v15;
    v16 = *(_OWORD *)(v9 + 80);
    *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 80) = v16;
    v17 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v17;
  }
  v18 = a3[6];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)(v20 + 8);
  if (v21)
  {
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *(_QWORD *)(v19 + 8) = v21;
    *(_WORD *)(v19 + 16) = *(_WORD *)(v20 + 16);
    v22 = *(_QWORD *)(v20 + 32);
    *(_QWORD *)(v19 + 24) = *(_QWORD *)(v20 + 24);
    *(_QWORD *)(v19 + 32) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v23 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 16) = v23;
    *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  }
  v24 = a3[7];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)(v26 + 16);
  if (v27 == 1)
  {
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
  }
  else
  {
    *(_BYTE *)v25 = *(_BYTE *)v26;
    *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
    *(_QWORD *)(v25 + 16) = v27;
    swift_bridgeObjectRetain();
  }
  v28 = a3[8];
  v29 = a3[9];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_BYTE *)v30 = *(_BYTE *)v31;
  v32 = *(_QWORD *)(v31 + 16);
  *(_QWORD *)(v30 + 8) = *(_QWORD *)(v31 + 8);
  *(_QWORD *)(v30 + 16) = v32;
  *(_DWORD *)(v30 + 24) = *(_DWORD *)(v31 + 24);
  *(_BYTE *)(v30 + 28) = *(_BYTE *)(v31 + 28);
  v33 = a1 + v29;
  v34 = a2 + v29;
  *(_BYTE *)v33 = *(_BYTE *)v34;
  v35 = *(_QWORD *)(v34 + 16);
  *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
  *(_QWORD *)(v33 + 16) = v35;
  *(_BYTE *)(v33 + 24) = *(_BYTE *)(v34 + 24);
  *(_BYTE *)(v33 + 25) = *(_BYTE *)(v34 + 25);
  v36 = *(_QWORD *)(v34 + 40);
  *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
  *(_QWORD *)(v33 + 40) = v36;
  *(_BYTE *)(v33 + 48) = *(_BYTE *)(v34 + 48);
  v37 = a3[10];
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = *(_QWORD *)(a2 + v37 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v40)
  {
    *(_WORD *)v38 = *(_WORD *)v39;
    *(_QWORD *)(v38 + 8) = *(_QWORD *)(v39 + 8);
    *(_QWORD *)(v38 + 16) = v40;
    *(_QWORD *)(v38 + 24) = *(_QWORD *)(v39 + 24);
    v41 = *(_QWORD *)(v39 + 40);
    *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
    *(_QWORD *)(v38 + 40) = v41;
    v42 = *(_QWORD *)(v39 + 56);
    *(_QWORD *)(v38 + 48) = *(_QWORD *)(v39 + 48);
    *(_QWORD *)(v38 + 56) = v42;
    v52 = a1;
    v43 = *(_QWORD *)(v39 + 72);
    *(_QWORD *)(v38 + 64) = *(_QWORD *)(v39 + 64);
    *(_QWORD *)(v38 + 72) = v43;
    *(_BYTE *)(v38 + 80) = *(_BYTE *)(v39 + 80);
    v44 = *(_QWORD *)(v39 + 96);
    *(_QWORD *)(v38 + 88) = *(_QWORD *)(v39 + 88);
    *(_QWORD *)(v38 + 96) = v44;
    *(_QWORD *)(v38 + 104) = *(_QWORD *)(v39 + 104);
    *(_BYTE *)(v38 + 112) = *(_BYTE *)(v39 + 112);
    v45 = *(_QWORD *)(v39 + 120);
    v46 = *(_QWORD *)(v39 + 128);
    *(_QWORD *)(v38 + 120) = v45;
    *(_QWORD *)(v38 + 128) = v46;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a1 = v52;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v47 = *(_OWORD *)(v39 + 112);
    *(_OWORD *)(v38 + 96) = *(_OWORD *)(v39 + 96);
    *(_OWORD *)(v38 + 112) = v47;
    *(_QWORD *)(v38 + 128) = *(_QWORD *)(v39 + 128);
    v48 = *(_OWORD *)(v39 + 48);
    *(_OWORD *)(v38 + 32) = *(_OWORD *)(v39 + 32);
    *(_OWORD *)(v38 + 48) = v48;
    v49 = *(_OWORD *)(v39 + 80);
    *(_OWORD *)(v38 + 64) = *(_OWORD *)(v39 + 64);
    *(_OWORD *)(v38 + 80) = v49;
    v50 = *(_OWORD *)(v39 + 16);
    *(_OWORD *)v38 = *(_OWORD *)v39;
    *(_OWORD *)(v38 + 16) = v50;
  }
  return a1;
}

uint64_t assignWithCopy for PictureInPictureStopped.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7 + 24);
  v11 = *(_QWORD *)(a2 + v7 + 24);
  if (v10)
  {
    if (v11)
    {
      *(_BYTE *)v8 = *(_BYTE *)v9;
      *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
      *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
      *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
      v12 = *(_QWORD *)(v9 + 48);
      *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
      *(_QWORD *)(v8 + 48) = v12;
      *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
      *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v9 + 72);
      *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
      *(_QWORD *)(v8 + 72) = v13;
      *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
      *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
      *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
      *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
      *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
      *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
      *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
      *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
      *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
      *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
    }
    else
    {
      sub_1D5810518(v8);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      v16 = *(_OWORD *)(v9 + 64);
      v18 = *(_OWORD *)(v9 + 16);
      v17 = *(_OWORD *)(v9 + 32);
      *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 48);
      *(_OWORD *)(v8 + 64) = v16;
      *(_OWORD *)(v8 + 16) = v18;
      *(_OWORD *)(v8 + 32) = v17;
      v20 = *(_OWORD *)(v9 + 96);
      v19 = *(_OWORD *)(v9 + 112);
      v21 = *(_OWORD *)(v9 + 80);
      *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
      *(_OWORD *)(v8 + 96) = v20;
      *(_OWORD *)(v8 + 112) = v19;
      *(_OWORD *)(v8 + 80) = v21;
    }
  }
  else if (v11)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
    *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
    v14 = *(_QWORD *)(v9 + 48);
    *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
    *(_QWORD *)(v8 + 48) = v14;
    *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
    *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
    v15 = *(_QWORD *)(v9 + 72);
    *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
    *(_QWORD *)(v8 + 72) = v15;
    *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
    *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
    *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
    *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
    *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
    *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
    *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
    *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
    *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
    *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
    *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
    *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v22 = *(_OWORD *)(v9 + 16);
    v23 = *(_OWORD *)(v9 + 32);
    v24 = *(_OWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 64) = v24;
    *(_OWORD *)(v8 + 16) = v22;
    *(_OWORD *)(v8 + 32) = v23;
    v25 = *(_OWORD *)(v9 + 80);
    v26 = *(_OWORD *)(v9 + 96);
    v27 = *(_OWORD *)(v9 + 112);
    *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
    *(_OWORD *)(v8 + 96) = v26;
    *(_OWORD *)(v8 + 112) = v27;
    *(_OWORD *)(v8 + 80) = v25;
  }
  v28 = a3[6];
  v29 = a1 + v28;
  v30 = (__int128 *)(a2 + v28);
  v31 = *(_QWORD *)(a1 + v28 + 8);
  v32 = *(_QWORD *)(a2 + v28 + 8);
  if (v31)
  {
    if (v32)
    {
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *(_QWORD *)(v29 + 8) = *((_QWORD *)v30 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v29 + 16) = *((_BYTE *)v30 + 16);
      *(_BYTE *)(v29 + 17) = *((_BYTE *)v30 + 17);
      *(_QWORD *)(v29 + 24) = *((_QWORD *)v30 + 3);
      *(_QWORD *)(v29 + 32) = *((_QWORD *)v30 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E1784(v29);
      v33 = *((_QWORD *)v30 + 4);
      v34 = v30[1];
      *(_OWORD *)v29 = *v30;
      *(_OWORD *)(v29 + 16) = v34;
      *(_QWORD *)(v29 + 32) = v33;
    }
  }
  else if (v32)
  {
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *(_QWORD *)(v29 + 8) = *((_QWORD *)v30 + 1);
    *(_BYTE *)(v29 + 16) = *((_BYTE *)v30 + 16);
    *(_BYTE *)(v29 + 17) = *((_BYTE *)v30 + 17);
    *(_QWORD *)(v29 + 24) = *((_QWORD *)v30 + 3);
    *(_QWORD *)(v29 + 32) = *((_QWORD *)v30 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v35 = *v30;
    v36 = v30[1];
    *(_QWORD *)(v29 + 32) = *((_QWORD *)v30 + 4);
    *(_OWORD *)v29 = v35;
    *(_OWORD *)(v29 + 16) = v36;
  }
  v37 = a3[7];
  v38 = a1 + v37;
  v39 = (__int128 *)(a2 + v37);
  v40 = *(_QWORD *)(a1 + v37 + 16);
  v41 = *(_QWORD *)(a2 + v37 + 16);
  if (v40 == 1)
  {
    if (v41 == 1)
    {
      v42 = *v39;
      *(_QWORD *)(v38 + 16) = *((_QWORD *)v39 + 2);
      *(_OWORD *)v38 = v42;
    }
    else
    {
      *(_BYTE *)v38 = *(_BYTE *)v39;
      *(_QWORD *)(v38 + 8) = *((_QWORD *)v39 + 1);
      *(_QWORD *)(v38 + 16) = *((_QWORD *)v39 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v41 == 1)
  {
    sub_1D57D9100(v38);
    v43 = *((_QWORD *)v39 + 2);
    *(_OWORD *)v38 = *v39;
    *(_QWORD *)(v38 + 16) = v43;
  }
  else
  {
    *(_BYTE *)v38 = *(_BYTE *)v39;
    *(_QWORD *)(v38 + 8) = *((_QWORD *)v39 + 1);
    *(_QWORD *)(v38 + 16) = *((_QWORD *)v39 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v44 = a3[8];
  v45 = a1 + v44;
  v46 = a2 + v44;
  *(_BYTE *)v45 = *(_BYTE *)(a2 + v44);
  *(_QWORD *)(v45 + 8) = *(_QWORD *)(a2 + v44 + 8);
  *(_QWORD *)(v45 + 16) = *(_QWORD *)(a2 + v44 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v47 = *(_DWORD *)(v46 + 24);
  *(_BYTE *)(v45 + 28) = *(_BYTE *)(v46 + 28);
  *(_DWORD *)(v45 + 24) = v47;
  v48 = a3[9];
  v49 = a1 + v48;
  v50 = a2 + v48;
  *(_BYTE *)v49 = *(_BYTE *)(a2 + v48);
  *(_QWORD *)(v49 + 8) = *(_QWORD *)(a2 + v48 + 8);
  *(_QWORD *)(v49 + 16) = *(_QWORD *)(a2 + v48 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v49 + 24) = *(_BYTE *)(v50 + 24);
  *(_BYTE *)(v49 + 25) = *(_BYTE *)(v50 + 25);
  *(_QWORD *)(v49 + 32) = *(_QWORD *)(v50 + 32);
  *(_QWORD *)(v49 + 40) = *(_QWORD *)(v50 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v49 + 48) = *(_BYTE *)(v50 + 48);
  v51 = a3[10];
  v52 = a1 + v51;
  v53 = a2 + v51;
  v54 = *(_QWORD *)(a1 + v51 + 16);
  v55 = *(_QWORD *)(v53 + 16);
  if (v54)
  {
    if (v55)
    {
      *(_BYTE *)v52 = *(_BYTE *)v53;
      *(_BYTE *)(v52 + 1) = *(_BYTE *)(v53 + 1);
      *(_QWORD *)(v52 + 8) = *(_QWORD *)(v53 + 8);
      *(_QWORD *)(v52 + 16) = *(_QWORD *)(v53 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v52 + 24) = *(_DWORD *)(v53 + 24);
      *(_DWORD *)(v52 + 28) = *(_DWORD *)(v53 + 28);
      *(_QWORD *)(v52 + 32) = *(_QWORD *)(v53 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v52 + 40) = *(_QWORD *)(v53 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v52 + 48) = *(_QWORD *)(v53 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v52 + 56) = *(_QWORD *)(v53 + 56);
      *(_QWORD *)(v52 + 64) = *(_QWORD *)(v53 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v52 + 72) = *(_QWORD *)(v53 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v52 + 80) = *(_BYTE *)(v53 + 80);
      *(_QWORD *)(v52 + 88) = *(_QWORD *)(v53 + 88);
      *(_QWORD *)(v52 + 96) = *(_QWORD *)(v53 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v56 = *(_QWORD *)(v53 + 104);
      *(_BYTE *)(v52 + 112) = *(_BYTE *)(v53 + 112);
      *(_QWORD *)(v52 + 104) = v56;
      *(_QWORD *)(v52 + 120) = *(_QWORD *)(v53 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v52 + 128) = *(_QWORD *)(v53 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v52);
      *(_OWORD *)v52 = *(_OWORD *)v53;
      v58 = *(_OWORD *)(v53 + 64);
      v60 = *(_OWORD *)(v53 + 16);
      v59 = *(_OWORD *)(v53 + 32);
      *(_OWORD *)(v52 + 48) = *(_OWORD *)(v53 + 48);
      *(_OWORD *)(v52 + 64) = v58;
      *(_OWORD *)(v52 + 16) = v60;
      *(_OWORD *)(v52 + 32) = v59;
      v62 = *(_OWORD *)(v53 + 96);
      v61 = *(_OWORD *)(v53 + 112);
      v63 = *(_OWORD *)(v53 + 80);
      *(_QWORD *)(v52 + 128) = *(_QWORD *)(v53 + 128);
      *(_OWORD *)(v52 + 96) = v62;
      *(_OWORD *)(v52 + 112) = v61;
      *(_OWORD *)(v52 + 80) = v63;
    }
  }
  else if (v55)
  {
    *(_BYTE *)v52 = *(_BYTE *)v53;
    *(_BYTE *)(v52 + 1) = *(_BYTE *)(v53 + 1);
    *(_QWORD *)(v52 + 8) = *(_QWORD *)(v53 + 8);
    *(_QWORD *)(v52 + 16) = *(_QWORD *)(v53 + 16);
    *(_DWORD *)(v52 + 24) = *(_DWORD *)(v53 + 24);
    *(_DWORD *)(v52 + 28) = *(_DWORD *)(v53 + 28);
    *(_QWORD *)(v52 + 32) = *(_QWORD *)(v53 + 32);
    *(_QWORD *)(v52 + 40) = *(_QWORD *)(v53 + 40);
    *(_QWORD *)(v52 + 48) = *(_QWORD *)(v53 + 48);
    *(_QWORD *)(v52 + 56) = *(_QWORD *)(v53 + 56);
    *(_QWORD *)(v52 + 64) = *(_QWORD *)(v53 + 64);
    *(_QWORD *)(v52 + 72) = *(_QWORD *)(v53 + 72);
    *(_BYTE *)(v52 + 80) = *(_BYTE *)(v53 + 80);
    *(_QWORD *)(v52 + 88) = *(_QWORD *)(v53 + 88);
    *(_QWORD *)(v52 + 96) = *(_QWORD *)(v53 + 96);
    v57 = *(_QWORD *)(v53 + 104);
    *(_BYTE *)(v52 + 112) = *(_BYTE *)(v53 + 112);
    *(_QWORD *)(v52 + 104) = v57;
    *(_QWORD *)(v52 + 120) = *(_QWORD *)(v53 + 120);
    *(_QWORD *)(v52 + 128) = *(_QWORD *)(v53 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v52 = *(_OWORD *)v53;
    v64 = *(_OWORD *)(v53 + 16);
    v65 = *(_OWORD *)(v53 + 32);
    v66 = *(_OWORD *)(v53 + 64);
    *(_OWORD *)(v52 + 48) = *(_OWORD *)(v53 + 48);
    *(_OWORD *)(v52 + 64) = v66;
    *(_OWORD *)(v52 + 16) = v64;
    *(_OWORD *)(v52 + 32) = v65;
    v67 = *(_OWORD *)(v53 + 80);
    v68 = *(_OWORD *)(v53 + 96);
    v69 = *(_OWORD *)(v53 + 112);
    *(_QWORD *)(v52 + 128) = *(_QWORD *)(v53 + 128);
    *(_OWORD *)(v52 + 96) = v68;
    *(_OWORD *)(v52 + 112) = v69;
    *(_OWORD *)(v52 + 80) = v67;
  }
  return a1;
}

uint64_t initializeWithTake for PictureInPictureStopped.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)(v9 + 127) = *(_QWORD *)(v10 + 127);
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  v12 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v12;
  v13 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v13;
  v14 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v14;
  v15 = a1 + v8;
  v16 = a2 + v8;
  v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  v18 = a3[7];
  v19 = a3[8];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  v22 = (_OWORD *)(a1 + v19);
  v23 = (_OWORD *)(a2 + v19);
  *v22 = *v23;
  *(_OWORD *)((char *)v22 + 13) = *(_OWORD *)((char *)v23 + 13);
  v24 = a3[9];
  v25 = a3[10];
  v26 = a1 + v24;
  v27 = a2 + v24;
  v28 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v28;
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  *(_BYTE *)(v26 + 48) = *(_BYTE *)(v27 + 48);
  v29 = a1 + v25;
  v30 = (__int128 *)(a2 + v25);
  v31 = *v30;
  v32 = v30[1];
  v33 = v30[3];
  *(_OWORD *)(v29 + 32) = v30[2];
  *(_OWORD *)(v29 + 48) = v33;
  *(_OWORD *)v29 = v31;
  *(_OWORD *)(v29 + 16) = v32;
  v34 = v30[4];
  v35 = v30[5];
  v36 = v30[6];
  v37 = v30[7];
  *(_QWORD *)(v29 + 128) = *((_QWORD *)v30 + 16);
  *(_OWORD *)(v29 + 96) = v36;
  *(_OWORD *)(v29 + 112) = v37;
  *(_OWORD *)(v29 + 64) = v34;
  *(_OWORD *)(v29 + 80) = v35;
  return a1;
}

uint64_t assignWithTake for PictureInPictureStopped.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (*(_QWORD *)(a1 + v7 + 24))
  {
    v10 = *(_QWORD *)(v9 + 24);
    if (v10)
    {
      *(_BYTE *)v8 = *(_BYTE *)v9;
      *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
      *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = v10;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
      v11 = *(_QWORD *)(v9 + 48);
      *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
      *(_QWORD *)(v8 + 48) = v11;
      *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
      *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
      *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
      *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
      *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
      *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
      *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
      *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
      *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
      *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
      *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
      *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
      *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
      goto LABEL_6;
    }
    sub_1D5810518(v8);
  }
  v12 = *(_OWORD *)(v9 + 112);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 112) = v12;
  *(_QWORD *)(v8 + 127) = *(_QWORD *)(v9 + 127);
  v13 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v13;
  v14 = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(_OWORD *)(v8 + 80) = v14;
  v15 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v15;
LABEL_6:
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  if (*(_QWORD *)(a1 + v16 + 8))
  {
    v19 = *(_QWORD *)(v18 + 8);
    if (v19)
    {
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *(_QWORD *)(v17 + 8) = v19;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
      *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
      v20 = *(_QWORD *)(v18 + 32);
      *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
      *(_QWORD *)(v17 + 32) = v20;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D57E1784(v17);
  }
  v21 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v21;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
LABEL_11:
  v22 = a3[7];
  v23 = a1 + v22;
  v24 = a2 + v22;
  if (*(_QWORD *)(a1 + v22 + 16) == 1)
  {
LABEL_14:
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
    goto LABEL_16;
  }
  v25 = *(_QWORD *)(v24 + 16);
  if (v25 == 1)
  {
    sub_1D57D9100(v23);
    goto LABEL_14;
  }
  *(_BYTE *)v23 = *(_BYTE *)v24;
  *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
  *(_QWORD *)(v23 + 16) = v25;
  swift_bridgeObjectRelease();
LABEL_16:
  v26 = a3[8];
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_BYTE *)v27 = *(_BYTE *)(a2 + v26);
  v29 = *(_QWORD *)(a2 + v26 + 16);
  *(_QWORD *)(v27 + 8) = *(_QWORD *)(a2 + v26 + 8);
  *(_QWORD *)(v27 + 16) = v29;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v27 + 24) = *(_DWORD *)(v28 + 24);
  *(_BYTE *)(v27 + 28) = *(_BYTE *)(v28 + 28);
  v30 = a3[9];
  v31 = a1 + v30;
  v32 = a2 + v30;
  *(_BYTE *)v31 = *(_BYTE *)(a2 + v30);
  v33 = *(_QWORD *)(a2 + v30 + 16);
  *(_QWORD *)(v31 + 8) = *(_QWORD *)(a2 + v30 + 8);
  *(_QWORD *)(v31 + 16) = v33;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v31 + 24) = *(_BYTE *)(v32 + 24);
  *(_BYTE *)(v31 + 25) = *(_BYTE *)(v32 + 25);
  v34 = *(_QWORD *)(v32 + 40);
  *(_QWORD *)(v31 + 32) = *(_QWORD *)(v32 + 32);
  *(_QWORD *)(v31 + 40) = v34;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v31 + 48) = *(_BYTE *)(v32 + 48);
  v35 = a3[10];
  v36 = a1 + v35;
  v37 = a2 + v35;
  if (!*(_QWORD *)(a1 + v35 + 16))
  {
LABEL_20:
    v41 = *(_OWORD *)(v37 + 112);
    *(_OWORD *)(v36 + 96) = *(_OWORD *)(v37 + 96);
    *(_OWORD *)(v36 + 112) = v41;
    *(_QWORD *)(v36 + 128) = *(_QWORD *)(v37 + 128);
    v42 = *(_OWORD *)(v37 + 48);
    *(_OWORD *)(v36 + 32) = *(_OWORD *)(v37 + 32);
    *(_OWORD *)(v36 + 48) = v42;
    v43 = *(_OWORD *)(v37 + 80);
    *(_OWORD *)(v36 + 64) = *(_OWORD *)(v37 + 64);
    *(_OWORD *)(v36 + 80) = v43;
    v44 = *(_OWORD *)(v37 + 16);
    *(_OWORD *)v36 = *(_OWORD *)v37;
    *(_OWORD *)(v36 + 16) = v44;
    return a1;
  }
  v38 = *(_QWORD *)(v37 + 16);
  if (!v38)
  {
    sub_1D57E17B8(v36);
    goto LABEL_20;
  }
  *(_WORD *)v36 = *(_WORD *)v37;
  *(_QWORD *)(v36 + 8) = *(_QWORD *)(v37 + 8);
  *(_QWORD *)(v36 + 16) = v38;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v36 + 24) = *(_QWORD *)(v37 + 24);
  *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v36 + 40) = *(_QWORD *)(v37 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v36 + 48) = *(_QWORD *)(v37 + 48);
  swift_bridgeObjectRelease();
  v39 = *(_QWORD *)(v37 + 64);
  *(_QWORD *)(v36 + 56) = *(_QWORD *)(v37 + 56);
  *(_QWORD *)(v36 + 64) = v39;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v36 + 72) = *(_QWORD *)(v37 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v36 + 80) = *(_BYTE *)(v37 + 80);
  v40 = *(_QWORD *)(v37 + 96);
  *(_QWORD *)(v36 + 88) = *(_QWORD *)(v37 + 88);
  *(_QWORD *)(v36 + 96) = v40;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v36 + 104) = *(_QWORD *)(v37 + 104);
  *(_BYTE *)(v36 + 112) = *(_BYTE *)(v37 + 112);
  *(_QWORD *)(v36 + 120) = *(_QWORD *)(v37 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v36 + 128) = *(_QWORD *)(v37 + 128);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PictureInPictureStopped.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59AD950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for PictureInPictureStopped.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59AD9DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 16) = (a2 - 1);
  return result;
}

uint64_t sub_1D59ADA58()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PictureInPictureStopped.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D59ADB48 + 4 * byte_1D5AD466C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D59ADB7C + 4 * byte_1D5AD4667[v4]))();
}

uint64_t sub_1D59ADB7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59ADB84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59ADB8CLL);
  return result;
}

uint64_t sub_1D59ADB98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59ADBA0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D59ADBA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59ADBAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PictureInPictureStopped.Model.CodingKeys()
{
  return &type metadata for PictureInPictureStopped.Model.CodingKeys;
}

unint64_t sub_1D59ADBCC()
{
  unint64_t result;

  result = qword_1EFF4EF10;
  if (!qword_1EFF4EF10)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD48BC, &type metadata for PictureInPictureStopped.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EF10);
  }
  return result;
}

unint64_t sub_1D59ADC14()
{
  unint64_t result;

  result = qword_1EFF4EF18;
  if (!qword_1EFF4EF18)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD482C, &type metadata for PictureInPictureStopped.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EF18);
  }
  return result;
}

unint64_t sub_1D59ADC5C()
{
  unint64_t result;

  result = qword_1EFF4EF20;
  if (!qword_1EFF4EF20)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD4854, &type metadata for PictureInPictureStopped.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EF20);
  }
  return result;
}

uint64_t sub_1D59ADCA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144616964656DLL && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t AudioUpsellVariantData.preferredUpsellVariantID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AudioUpsellVariantData.preferredUpsellVariantID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AudioUpsellVariantData.preferredUpsellVariantID.modify())()
{
  return nullsub_1;
}

NewsAnalytics::AudioUpsellVariantData __swiftcall AudioUpsellVariantData.init(preferredUpsellVariantID:)(NewsAnalytics::AudioUpsellVariantData preferredUpsellVariantID)
{
  NewsAnalytics::AudioUpsellVariantData *v1;

  *v1 = preferredUpsellVariantID;
  return preferredUpsellVariantID;
}

unint64_t sub_1D59AE034()
{
  return 0xD000000000000018;
}

uint64_t sub_1D59AE050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59AE69C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D59AE078()
{
  sub_1D59AE1BC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59AE0A0()
{
  sub_1D59AE1BC();
  return sub_1D5AAEEE0();
}

uint64_t AudioUpsellVariantData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D59AE324(0, &qword_1EFF4EF28, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59AE1BC();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D59AE1BC()
{
  unint64_t result;

  result = qword_1EFF4EF30;
  if (!qword_1EFF4EF30)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD4ABC, &type metadata for AudioUpsellVariantData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EF30);
  }
  return result;
}

uint64_t AudioUpsellVariantData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D59AE324(0, &qword_1EFF4EF38, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59AE1BC();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECA0();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D59AE324(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59AE1BC();
    v7 = a3(a1, &type metadata for AudioUpsellVariantData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D59AE384()
{
  unint64_t result;

  result = qword_1EFF4EF40;
  if (!qword_1EFF4EF40)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AudioUpsellVariantData, &type metadata for AudioUpsellVariantData);
    atomic_store(result, (unint64_t *)&qword_1EFF4EF40);
  }
  return result;
}

unint64_t sub_1D59AE3CC()
{
  unint64_t result;

  result = qword_1EFF4EF48;
  if (!qword_1EFF4EF48)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AudioUpsellVariantData, &type metadata for AudioUpsellVariantData);
    atomic_store(result, (unint64_t *)&qword_1EFF4EF48);
  }
  return result;
}

uint64_t sub_1D59AE410@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return AudioUpsellVariantData.init(from:)(a1, a2);
}

uint64_t sub_1D59AE424(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D59AE324(0, &qword_1EFF4EF28, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59AE1BC();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for AudioUpsellVariantData()
{
  return &type metadata for AudioUpsellVariantData;
}

uint64_t storeEnumTagSinglePayload for AudioUpsellVariantData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D59AE568 + 4 * byte_1D5AD4940[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D59AE588 + 4 * byte_1D5AD4945[v4]))();
}

_BYTE *sub_1D59AE568(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D59AE588(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59AE590(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59AE598(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59AE5A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59AE5A8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AudioUpsellVariantData.CodingKeys()
{
  return &type metadata for AudioUpsellVariantData.CodingKeys;
}

unint64_t sub_1D59AE5C8()
{
  unint64_t result;

  result = qword_1EFF4EF50;
  if (!qword_1EFF4EF50)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD4A94, &type metadata for AudioUpsellVariantData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EF50);
  }
  return result;
}

unint64_t sub_1D59AE610()
{
  unint64_t result;

  result = qword_1EFF4EF58;
  if (!qword_1EFF4EF58)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD4A04, &type metadata for AudioUpsellVariantData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EF58);
  }
  return result;
}

unint64_t sub_1D59AE658()
{
  unint64_t result;

  result = qword_1EFF4EF60;
  if (!qword_1EFF4EF60)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD4A2C, &type metadata for AudioUpsellVariantData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EF60);
  }
  return result;
}

uint64_t sub_1D59AE69C(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000018 && a2 == 0x80000001D5AF1100)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t ArticleExposureContextData.init(surfacedByTopicID:surfacedByChannelID:surfacedByArticleListIDs:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t ArticleExposureContextData.surfacedByTopicID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArticleExposureContextData.surfacedByTopicID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ArticleExposureContextData.surfacedByTopicID.modify())()
{
  return nullsub_1;
}

uint64_t ArticleExposureContextData.surfacedByChannelID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArticleExposureContextData.surfacedByChannelID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ArticleExposureContextData.surfacedByChannelID.modify())()
{
  return nullsub_1;
}

uint64_t ArticleExposureContextData.surfacedByArticleListIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ArticleExposureContextData.surfacedByArticleListIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*ArticleExposureContextData.surfacedByArticleListIDs.modify())()
{
  return nullsub_1;
}

unint64_t sub_1D59AE850(char a1)
{
  unint64_t result;

  result = 0xD000000000000011;
  if (a1)
  {
    if (a1 == 1)
      return 0xD000000000000013;
    else
      return 0xD000000000000018;
  }
  return result;
}

unint64_t sub_1D59AE8B0()
{
  char *v0;

  return sub_1D59AE850(*v0);
}

uint64_t sub_1D59AE8B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59AF068(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59AE8DC()
{
  sub_1D59AEACC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59AE904()
{
  sub_1D59AEACC();
  return sub_1D5AAEEE0();
}

uint64_t ArticleExposureContextData.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;

  sub_1D59AED70(0, &qword_1ED9CC970, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v12 - v6;
  v8 = v1[2];
  v14 = v1[3];
  v15 = v8;
  v13 = v1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59AEACC();
  sub_1D5AAEEC8();
  v20 = 0;
  v9 = v16;
  sub_1D5AAECF4();
  if (!v9)
  {
    v10 = v13;
    v19 = 1;
    sub_1D5AAECF4();
    v17 = v10;
    v18 = 2;
    sub_1D57B4558();
    sub_1D57B5638((unint64_t *)&qword_1ED9CC6B8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D59AEACC()
{
  unint64_t result;

  result = qword_1ED9CB600;
  if (!qword_1ED9CB600)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD4CA0, &type metadata for ArticleExposureContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CB600);
  }
  return result;
}

uint64_t ArticleExposureContextData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;

  sub_1D59AED70(0, &qword_1ED9CC830, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59AEACC();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v24 = 0;
    v10 = sub_1D5AAEC58();
    v13 = v12;
    v20 = v10;
    v23 = 1;
    swift_bridgeObjectRetain();
    v14 = sub_1D5AAEC58();
    v16 = v15;
    v19 = v14;
    sub_1D57B4558();
    v22 = 2;
    sub_1D57B5638((unint64_t *)&qword_1ED9CC6C0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    swift_bridgeObjectRetain();
    sub_1D5AAEC7C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v17 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v20;
    a2[1] = v13;
    a2[2] = v19;
    a2[3] = v16;
    a2[4] = v17;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D59AED70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59AEACC();
    v7 = a3(a1, &type metadata for ArticleExposureContextData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59AEDD4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ArticleExposureContextData.init(from:)(a1, a2);
}

uint64_t sub_1D59AEDE8(_QWORD *a1)
{
  return ArticleExposureContextData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for ArticleExposureContextData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleExposureContextData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleExposureContextData()
{
  return &type metadata for ArticleExposureContextData;
}

uint64_t storeEnumTagSinglePayload for ArticleExposureContextData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D59AEF10 + 4 * byte_1D5AD4B15[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D59AEF44 + 4 * byte_1D5AD4B10[v4]))();
}

uint64_t sub_1D59AEF44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59AEF4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59AEF54);
  return result;
}

uint64_t sub_1D59AEF60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59AEF68);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D59AEF6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59AEF74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleExposureContextData.CodingKeys()
{
  return &type metadata for ArticleExposureContextData.CodingKeys;
}

unint64_t sub_1D59AEF94()
{
  unint64_t result;

  result = qword_1EFF4EF68;
  if (!qword_1EFF4EF68)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD4C78, &type metadata for ArticleExposureContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EF68);
  }
  return result;
}

unint64_t sub_1D59AEFDC()
{
  unint64_t result;

  result = qword_1ED9CB610;
  if (!qword_1ED9CB610)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD4BE8, &type metadata for ArticleExposureContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CB610);
  }
  return result;
}

unint64_t sub_1D59AF024()
{
  unint64_t result;

  result = qword_1ED9CB608;
  if (!qword_1ED9CB608)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD4C10, &type metadata for ArticleExposureContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CB608);
  }
  return result;
}

uint64_t sub_1D59AF068(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AF1120 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AEF720 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5AF1140)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t FeedType.supportsFeedView.getter()
{
  _BYTE *v0;

  return (*v0 < 0x13uLL) & (0x400C0u >> *v0);
}

NewsAnalytics::BadgeOriginationType_optional __swiftcall BadgeOriginationType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::BadgeOriginationType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t BadgeOriginationType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1937204590;
  if (*v0 != 1)
    v1 = 0x7972756372656DLL;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D59AF274(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A39658(*a1, *a2);
}

unint64_t sub_1D59AF284()
{
  unint64_t result;

  result = qword_1EFF4EF70;
  if (!qword_1EFF4EF70)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for BadgeOriginationType, &type metadata for BadgeOriginationType);
    atomic_store(result, (unint64_t *)&qword_1EFF4EF70);
  }
  return result;
}

uint64_t sub_1D59AF2C8()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D59AF360()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D59AF3D4()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::BadgeOriginationType_optional sub_1D59AF468(Swift::String *a1)
{
  return BadgeOriginationType.init(rawValue:)(*a1);
}

uint64_t sub_1D59AF474()
{
  sub_1D579E4C8();
  return sub_1D5AAE928();
}

uint64_t storeEnumTagSinglePayload for BadgeOriginationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D59AF51C + 4 * byte_1D5AD4D05[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D59AF550 + 4 * byte_1D5AD4D00[v4]))();
}

uint64_t sub_1D59AF550(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59AF558(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59AF560);
  return result;
}

uint64_t sub_1D59AF56C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59AF574);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D59AF578(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59AF580(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BadgeOriginationType()
{
  return &type metadata for BadgeOriginationType;
}

NewsAnalytics::WindowData __swiftcall WindowData.init(frame:)(NewsAnalytics::WindowData frame)
{
  NewsAnalytics::WindowData *v1;

  *v1 = frame;
  return frame;
}

uint64_t WindowData.frame.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WindowData.frame.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*WindowData.frame.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D59AF614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x656D617266 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D59AF6A0()
{
  sub_1D57CBAB0();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59AF6C8()
{
  sub_1D57CBAB0();
  return sub_1D5AAEEE0();
}

uint64_t WindowData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D57C5894(0, &qword_1ED9CC8A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57CBAB0();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t WindowData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D57C5894(0, &qword_1ED9CC7C0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57CBAB0();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECA0();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D59AF908@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return WindowData.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for WindowData()
{
  return &type metadata for WindowData;
}

uint64_t storeEnumTagSinglePayload for WindowData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D59AF96C + 4 * byte_1D5AD4E24[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D59AF98C + 4 * byte_1D5AD4E29[v4]))();
}

_BYTE *sub_1D59AF96C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D59AF98C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59AF994(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59AF99C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59AF9A4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59AF9AC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WindowData.CodingKeys()
{
  return &type metadata for WindowData.CodingKeys;
}

unint64_t sub_1D59AF9CC()
{
  unint64_t result;

  result = qword_1EFF4EF78;
  if (!qword_1EFF4EF78)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD4F6C, &type metadata for WindowData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EF78);
  }
  return result;
}

uint64_t MediaEngagementCompletedData.mediaTimePlayed.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t MediaEngagementCompletedData.mediaTimePlayed.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*MediaEngagementCompletedData.mediaTimePlayed.modify())()
{
  return nullsub_1;
}

void MediaEngagementCompletedData.mediaPlayLocation.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

_BYTE *MediaEngagementCompletedData.mediaPlayLocation.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = *result;
  return result;
}

uint64_t (*MediaEngagementCompletedData.mediaPlayLocation.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngagementCompletedData.init(mediaTimePlayed:mediaPlayLocation:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3;

  v3 = *a2;
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = v3;
  return result;
}

uint64_t sub_1D59AFA68()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0x6D6954616964656DLL;
}

uint64_t sub_1D59AFAB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59B0168(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59AFAD8()
{
  sub_1D59AFC68();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59AFB00()
{
  sub_1D59AFC68();
  return sub_1D5AAEEE0();
}

uint64_t MediaEngagementCompletedData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  int v11;
  char v12;
  char v13;
  char v14;

  sub_1D59AFE5C(0, &qword_1EFF4EF80, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v10 - v7;
  v11 = *(unsigned __int8 *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59AFC68();
  sub_1D5AAEEC8();
  v14 = 0;
  sub_1D5AAED84();
  if (!v2)
  {
    v13 = v11;
    v12 = 1;
    sub_1D59AFCAC();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D59AFC68()
{
  unint64_t result;

  result = qword_1EFF4EF88;
  if (!qword_1EFF4EF88)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD5180, &type metadata for MediaEngagementCompletedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EF88);
  }
  return result;
}

unint64_t sub_1D59AFCAC()
{
  unint64_t result;

  result = qword_1EFF4EF90;
  if (!qword_1EFF4EF90)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MediaPlayLocation, &type metadata for MediaPlayLocation);
    atomic_store(result, (unint64_t *)&qword_1EFF4EF90);
  }
  return result;
}

uint64_t MediaEngagementCompletedData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;

  sub_1D59AFE5C(0, &qword_1EFF4EF98, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59AFC68();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v16 = 0;
    v10 = sub_1D5AAECE8();
    v14 = 1;
    sub_1D59AFEB8();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
    *(_QWORD *)a2 = v10;
    *(_BYTE *)(a2 + 8) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D59AFE5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59AFC68();
    v7 = a3(a1, &type metadata for MediaEngagementCompletedData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D59AFEB8()
{
  unint64_t result;

  result = qword_1EFF4EFA0;
  if (!qword_1EFF4EFA0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MediaPlayLocation, &type metadata for MediaPlayLocation);
    atomic_store(result, (unint64_t *)&qword_1EFF4EFA0);
  }
  return result;
}

uint64_t sub_1D59AFF04@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaEngagementCompletedData.init(from:)(a1, a2);
}

uint64_t sub_1D59AFF18(_QWORD *a1)
{
  return MediaEngagementCompletedData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for MediaEngagementCompletedData(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaEngagementCompletedData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaEngagementCompletedData()
{
  return &type metadata for MediaEngagementCompletedData;
}

uint64_t storeEnumTagSinglePayload for MediaEngagementCompletedData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D59B0010 + 4 * byte_1D5AD4FF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D59B0044 + 4 * byte_1D5AD4FF0[v4]))();
}

uint64_t sub_1D59B0044(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59B004C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59B0054);
  return result;
}

uint64_t sub_1D59B0060(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59B0068);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D59B006C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59B0074(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaEngagementCompletedData.CodingKeys()
{
  return &type metadata for MediaEngagementCompletedData.CodingKeys;
}

unint64_t sub_1D59B0094()
{
  unint64_t result;

  result = qword_1EFF4EFA8;
  if (!qword_1EFF4EFA8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD5158, &type metadata for MediaEngagementCompletedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EFA8);
  }
  return result;
}

unint64_t sub_1D59B00DC()
{
  unint64_t result;

  result = qword_1EFF4EFB0;
  if (!qword_1EFF4EFB0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD50C8, &type metadata for MediaEngagementCompletedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EFB0);
  }
  return result;
}

unint64_t sub_1D59B0124()
{
  unint64_t result;

  result = qword_1EFF4EFB8;
  if (!qword_1EFF4EFB8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD50F0, &type metadata for MediaEngagementCompletedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4EFB8);
  }
  return result;
}

uint64_t sub_1D59B0168(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D6954616964656DLL && a2 == 0xEF646579616C5065;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AF1160)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D59B0278(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4EFC0, MEMORY[0x1E0CF8078]);
}

uint64_t static ReportAConcernEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47308, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4EFC0, a1);
}

uint64_t sub_1D59B02B8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4EFD8, MEMORY[0x1E0CF8380]);
}

uint64_t static ReportAConcernEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47310, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4EFD8, a1);
}

uint64_t ReportAConcernEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t ReportAConcernEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ReportAConcernEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ReportAConcernEvent.concernData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReportAConcernEvent(0) + 20);
  sub_1D579E208(0, &qword_1EFF4EFF0, (void (*)(void))sub_1D59B03C8, (void (*)(void))sub_1D59B040C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for ReportAConcernEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4F078);
}

unint64_t sub_1D59B03C8()
{
  unint64_t result;

  result = qword_1EFF4EFF8;
  if (!qword_1EFF4EFF8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ConcernData, &type metadata for ConcernData);
    atomic_store(result, (unint64_t *)&qword_1EFF4EFF8);
  }
  return result;
}

unint64_t sub_1D59B040C()
{
  unint64_t result;

  result = qword_1EFF4F000;
  if (!qword_1EFF4F000)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ConcernData, &type metadata for ConcernData);
    atomic_store(result, (unint64_t *)&qword_1EFF4F000);
  }
  return result;
}

uint64_t ReportAConcernEvent.concernData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReportAConcernEvent(0) + 20);
  sub_1D579E208(0, &qword_1EFF4EFF0, (void (*)(void))sub_1D59B03C8, (void (*)(void))sub_1D59B040C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ReportAConcernEvent.concernData.modify())(_QWORD)
{
  type metadata accessor for ReportAConcernEvent(0);
  return nullsub_1;
}

uint64_t ReportAConcernEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReportAConcernEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ReportAConcernEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReportAConcernEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ReportAConcernEvent.articleData.modify())(_QWORD)
{
  type metadata accessor for ReportAConcernEvent(0);
  return nullsub_1;
}

uint64_t ReportAConcernEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = type metadata accessor for ReportAConcernEvent(0);
  v5 = a1 + *(int *)(v4 + 20);
  sub_1D579E208(0, &qword_1EFF4EFF0, (void (*)(void))sub_1D59B03C8, (void (*)(void))sub_1D59B040C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + *(int *)(v4 + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
}

uint64_t ReportAConcernEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ReportAConcernEvent.Model.concernData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for ReportAConcernEvent.Model(0) + 20);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ReportAConcernEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4F110);
}

uint64_t ReportAConcernEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for ReportAConcernEvent.Model(0) + 24);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

__n128 ReportAConcernEvent.Model.init(eventData:concernData:articleData:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 result;
  __int128 v14;
  __n128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[23];

  v6 = *a2;
  v7 = *((_QWORD *)a2 + 1);
  v8 = *((_QWORD *)a2 + 2);
  v20 = a3[6];
  *(_OWORD *)v21 = a3[7];
  *(_QWORD *)&v21[15] = *(_QWORD *)((char *)a3 + 127);
  v16 = a3[2];
  v17 = a3[3];
  v18 = a3[4];
  v19 = a3[5];
  v14 = *a3;
  v15 = (__n128)a3[1];
  v9 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a4, a1, v9);
  v10 = type metadata accessor for ReportAConcernEvent.Model(0);
  v11 = a4 + *(int *)(v10 + 20);
  *(_BYTE *)v11 = v6;
  *(_QWORD *)(v11 + 8) = v7;
  *(_QWORD *)(v11 + 16) = v8;
  v12 = a4 + *(int *)(v10 + 24);
  *(_OWORD *)(v12 + 96) = v20;
  *(_OWORD *)(v12 + 112) = *(_OWORD *)v21;
  *(_QWORD *)(v12 + 127) = *(_QWORD *)&v21[15];
  *(_OWORD *)(v12 + 32) = v16;
  *(_OWORD *)(v12 + 48) = v17;
  *(_OWORD *)(v12 + 64) = v18;
  *(_OWORD *)(v12 + 80) = v19;
  result = v15;
  *(_OWORD *)v12 = v14;
  *(__n128 *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_1D59B087C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x446E7265636E6F63;
  if (*v0 != 1)
    v1 = 0x44656C6369747261;
  if (*v0)
    return v1;
  else
    return 0x746144746E657665;
}

uint64_t sub_1D59B08EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59B22E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59B0910()
{
  sub_1D59B0B44();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59B0938()
{
  sub_1D59B0B44();
  return sub_1D5AAEEE0();
}

uint64_t ReportAConcernEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;
  __int128 *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v18[16];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[23];
  char v27;
  char v28;
  __int128 v29;

  v3 = v1;
  sub_1D59B0EC0(0, &qword_1EFF4F008, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v18[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59B0B44();
  sub_1D5AAEEC8();
  LOBYTE(v19) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = type metadata accessor for ReportAConcernEvent.Model(0);
    v11 = (char *)(v3 + *(int *)(v10 + 20));
    v28 = *v11;
    v29 = *(_OWORD *)(v11 + 8);
    v27 = 1;
    sub_1D59B040C();
    sub_1D5AAED6C();
    v12 = (__int128 *)(v3 + *(int *)(v10 + 24));
    v13 = v12[7];
    v25 = v12[6];
    *(_OWORD *)v26 = v13;
    *(_QWORD *)&v26[15] = *(_QWORD *)((char *)v12 + 127);
    v14 = v12[3];
    v21 = v12[2];
    v22 = v14;
    v15 = v12[5];
    v23 = v12[4];
    v24 = v15;
    v16 = v12[1];
    v19 = *v12;
    v20 = v16;
    v18[15] = 2;
    sub_1D57CB940();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D59B0B44()
{
  unint64_t result;

  result = qword_1EFF4F010;
  if (!qword_1EFF4F010)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD53B4, &type metadata for ReportAConcernEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F010);
  }
  return result;
}

uint64_t ReportAConcernEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _BYTE v28[32];
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[2];
  char v35;

  v22 = a2;
  v3 = sub_1D5AADF98();
  v23 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v24 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59B0EC0(0, &qword_1EFF4F018, MEMORY[0x1E0DED048]);
  v25 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - v7;
  v9 = type metadata accessor for ReportAConcernEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59B0B44();
  v26 = v8;
  v12 = v27;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = v9;
  v13 = v23;
  v28[0] = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v24, v3);
  v35 = 1;
  sub_1D59B03C8();
  sub_1D5AAECD0();
  v14 = v27;
  v15 = &v11[*(int *)(v27 + 20)];
  *v15 = v28[0];
  *(_OWORD *)(v15 + 8) = *(_OWORD *)&v28[8];
  v35 = 2;
  sub_1D57CB8FC();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v26, v25);
  v16 = &v11[*(int *)(v14 + 24)];
  v17 = v34[0];
  *((_OWORD *)v16 + 6) = v33;
  *((_OWORD *)v16 + 7) = v17;
  *(_QWORD *)(v16 + 127) = *(_QWORD *)((char *)v34 + 15);
  v18 = v30;
  *((_OWORD *)v16 + 2) = v29;
  *((_OWORD *)v16 + 3) = v18;
  v19 = v32;
  *((_OWORD *)v16 + 4) = v31;
  *((_OWORD *)v16 + 5) = v19;
  v20 = *(_OWORD *)&v28[16];
  *(_OWORD *)v16 = *(_OWORD *)v28;
  *((_OWORD *)v16 + 1) = v20;
  sub_1D59B0F1C((uint64_t)v11, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1D59B0F60((uint64_t)v11);
}

void sub_1D59B0EC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59B0B44();
    v7 = a3(a1, &type metadata for ReportAConcernEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59B0F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReportAConcernEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D59B0F60(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ReportAConcernEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D59B0F9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ReportAConcernEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D59B0FB0(_QWORD *a1)
{
  return ReportAConcernEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D59B0FC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47308, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4EFC0, a1);
}

uint64_t sub_1D59B0FE8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47310, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4EFD8, a1);
}

uint64_t sub_1D59B100C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1D579E208(0, &qword_1EFF4EFF0, (void (*)(void))sub_1D59B03C8, (void (*)(void))sub_1D59B040C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + *(int *)(a1 + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for ReportAConcernEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1EFF4EFF0, (void (*)(void))sub_1D59B03C8, (void (*)(void))sub_1D59B040C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for ReportAConcernEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1D579E208(0, &qword_1EFF4EFF0, (void (*)(void))sub_1D59B03C8, (void (*)(void))sub_1D59B040C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for ReportAConcernEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF4EFF0, (void (*)(void))sub_1D59B03C8, (void (*)(void))sub_1D59B040C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for ReportAConcernEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF4EFF0, (void (*)(void))sub_1D59B03C8, (void (*)(void))sub_1D59B040C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for ReportAConcernEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF4EFF0, (void (*)(void))sub_1D59B03C8, (void (*)(void))sub_1D59B040C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for ReportAConcernEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF4EFF0, (void (*)(void))sub_1D59B03C8, (void (*)(void))sub_1D59B040C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReportAConcernEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59B169C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1EFF4EFF0, (void (*)(void))sub_1D59B03C8, (void (*)(void))sub_1D59B040C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ReportAConcernEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59B1780(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1EFF4EFF0, (void (*)(void))sub_1D59B03C8, (void (*)(void))sub_1D59B040C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D59B1860()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1EFF4EFF0, (void (*)(void))sub_1D59B03C8, (void (*)(void))sub_1D59B040C);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ReportAConcernEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v13[8] = v14[8];
    v15 = *((_QWORD *)v14 + 3);
    *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 3) = v15;
    v13[32] = v14[32];
    v16 = *((_QWORD *)v14 + 6);
    *((_QWORD *)v13 + 5) = *((_QWORD *)v14 + 5);
    *((_QWORD *)v13 + 6) = v16;
    v13[56] = v14[56];
    v13[57] = v14[57];
    v18 = *((_QWORD *)v14 + 8);
    v17 = *((_QWORD *)v14 + 9);
    v13[80] = v14[80];
    *((_QWORD *)v13 + 8) = v18;
    *((_QWORD *)v13 + 9) = v17;
    *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
    *((_QWORD *)v13 + 13) = *((_QWORD *)v14 + 13);
    v13[112] = v14[112];
    *((_QWORD *)v13 + 15) = *((_QWORD *)v14 + 15);
    *((_DWORD *)v13 + 32) = *((_DWORD *)v14 + 32);
    v13[132] = v14[132];
    v13[133] = v14[133];
    v13[134] = v14[134];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ReportAConcernEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ReportAConcernEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  v14 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v14;
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  v15 = *(_QWORD *)(v13 + 48);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 48) = v15;
  *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
  *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
  v17 = *(_QWORD *)(v13 + 64);
  v16 = *(_QWORD *)(v13 + 72);
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  *(_QWORD *)(v12 + 64) = v17;
  *(_QWORD *)(v12 + 72) = v16;
  *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  *(_DWORD *)(v12 + 128) = *(_DWORD *)(v13 + 128);
  *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
  *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
  *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReportAConcernEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_BYTE *)v11 = *(_BYTE *)v12;
  *(_DWORD *)(v11 + 4) = *(_DWORD *)(v12 + 4);
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
  *(_QWORD *)(v11 + 24) = *(_QWORD *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 32) = *(_BYTE *)(v12 + 32);
  *(_QWORD *)(v11 + 40) = *(_QWORD *)(v12 + 40);
  v13 = *(_QWORD *)(v12 + 48);
  *(_BYTE *)(v11 + 56) = *(_BYTE *)(v12 + 56);
  *(_QWORD *)(v11 + 48) = v13;
  *(_BYTE *)(v11 + 57) = *(_BYTE *)(v12 + 57);
  *(_QWORD *)(v11 + 64) = *(_QWORD *)(v12 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v12 + 72);
  *(_BYTE *)(v11 + 80) = *(_BYTE *)(v12 + 80);
  *(_QWORD *)(v11 + 72) = v14;
  *(_QWORD *)(v11 + 88) = *(_QWORD *)(v12 + 88);
  *(_QWORD *)(v11 + 96) = *(_QWORD *)(v12 + 96);
  *(_QWORD *)(v11 + 104) = *(_QWORD *)(v12 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 112) = *(_BYTE *)(v12 + 112);
  *(_QWORD *)(v11 + 120) = *(_QWORD *)(v12 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 128) = *(_BYTE *)(v12 + 128);
  *(_BYTE *)(v11 + 129) = *(_BYTE *)(v12 + 129);
  *(_BYTE *)(v11 + 130) = *(_BYTE *)(v12 + 130);
  *(_BYTE *)(v11 + 131) = *(_BYTE *)(v12 + 131);
  *(_BYTE *)(v11 + 132) = *(_BYTE *)(v12 + 132);
  *(_BYTE *)(v11 + 133) = *(_BYTE *)(v12 + 133);
  *(_BYTE *)(v11 + 134) = *(_BYTE *)(v12 + 134);
  return a1;
}

uint64_t initializeWithTake for ReportAConcernEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  v11 = a1 + v8;
  v12 = a2 + v8;
  v13 = *(_OWORD *)(v12 + 112);
  *(_OWORD *)(v11 + 96) = *(_OWORD *)(v12 + 96);
  *(_OWORD *)(v11 + 112) = v13;
  *(_QWORD *)(v11 + 127) = *(_QWORD *)(v12 + 127);
  v14 = *(_OWORD *)(v12 + 48);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v12 + 32);
  *(_OWORD *)(v11 + 48) = v14;
  v15 = *(_OWORD *)(v12 + 80);
  *(_OWORD *)(v11 + 64) = *(_OWORD *)(v12 + 64);
  *(_OWORD *)(v11 + 80) = v15;
  v16 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v16;
  return a1;
}

uint64_t assignWithTake for ReportAConcernEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = v11;
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_BYTE *)v13 = *(_BYTE *)v14;
  *(_DWORD *)(v13 + 4) = *(_DWORD *)(v14 + 4);
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  v16 = *(_QWORD *)(v14 + 48);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v13 + 48) = v16;
  *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
  *(_BYTE *)(v13 + 57) = *(_BYTE *)(v14 + 57);
  *(_QWORD *)(v13 + 64) = *(_QWORD *)(v14 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 72) = *(_QWORD *)(v14 + 72);
  *(_BYTE *)(v13 + 80) = *(_BYTE *)(v14 + 80);
  *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
  *(_QWORD *)(v13 + 104) = *(_QWORD *)(v14 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 112) = *(_BYTE *)(v14 + 112);
  *(_QWORD *)(v13 + 120) = *(_QWORD *)(v14 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 128) = *(_BYTE *)(v14 + 128);
  *(_BYTE *)(v13 + 129) = *(_BYTE *)(v14 + 129);
  *(_BYTE *)(v13 + 130) = *(_BYTE *)(v14 + 130);
  *(_BYTE *)(v13 + 131) = *(_BYTE *)(v14 + 131);
  *(_BYTE *)(v13 + 132) = *(_BYTE *)(v14 + 132);
  *(_BYTE *)(v13 + 133) = *(_BYTE *)(v14 + 133);
  *(_BYTE *)(v13 + 134) = *(_BYTE *)(v14 + 134);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReportAConcernEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59B1FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ReportAConcernEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59B2048(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_1D59B20C4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ReportAConcernEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D59B218C + 4 * byte_1D5AD51D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D59B21C0 + 4 * byte_1D5AD51D0[v4]))();
}

uint64_t sub_1D59B21C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59B21C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59B21D0);
  return result;
}

uint64_t sub_1D59B21DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59B21E4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D59B21E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59B21F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReportAConcernEvent.Model.CodingKeys()
{
  return &type metadata for ReportAConcernEvent.Model.CodingKeys;
}

unint64_t sub_1D59B2210()
{
  unint64_t result;

  result = qword_1EFF4F150;
  if (!qword_1EFF4F150)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD538C, &type metadata for ReportAConcernEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F150);
  }
  return result;
}

unint64_t sub_1D59B2258()
{
  unint64_t result;

  result = qword_1EFF4F158;
  if (!qword_1EFF4F158)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD52FC, &type metadata for ReportAConcernEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F158);
  }
  return result;
}

unint64_t sub_1D59B22A0()
{
  unint64_t result;

  result = qword_1EFF4F160;
  if (!qword_1EFF4F160)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD5324, &type metadata for ReportAConcernEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F160);
  }
  return result;
}

uint64_t sub_1D59B22E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x446E7265636E6F63 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void EmailShareUserActionData.userAction.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *EmailShareUserActionData.userAction.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*EmailShareUserActionData.userAction.modify())()
{
  return nullsub_1;
}

NewsAnalytics::EmailShareUserActionData __swiftcall EmailShareUserActionData.init(userAction:)(NewsAnalytics::EmailShareUserActionData userAction)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)userAction.userAction;
  return userAction;
}

uint64_t sub_1D59B24A4()
{
  sub_1D59B25F8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59B24CC()
{
  sub_1D59B25F8();
  return sub_1D5AAEEE0();
}

uint64_t EmailShareUserActionData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D59B27B8(0, &qword_1EFF4F168, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59B25F8();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D59B263C();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D59B25F8()
{
  unint64_t result;

  result = qword_1EFF4F170;
  if (!qword_1EFF4F170)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD559C, &type metadata for EmailShareUserActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F170);
  }
  return result;
}

unint64_t sub_1D59B263C()
{
  unint64_t result;

  result = qword_1EFF4F178;
  if (!qword_1EFF4F178)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EmailShareUserActionType, &type metadata for EmailShareUserActionType);
    atomic_store(result, (unint64_t *)&qword_1EFF4F178);
  }
  return result;
}

uint64_t EmailShareUserActionData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D59B27B8(0, &qword_1EFF4F180, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59B25F8();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D59B2814();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D59B27B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59B25F8();
    v7 = a3(a1, &type metadata for EmailShareUserActionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D59B2814()
{
  unint64_t result;

  result = qword_1EFF4F188;
  if (!qword_1EFF4F188)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EmailShareUserActionType, &type metadata for EmailShareUserActionType);
    atomic_store(result, (unint64_t *)&qword_1EFF4F188);
  }
  return result;
}

unint64_t sub_1D59B285C()
{
  unint64_t result;

  result = qword_1EFF4F190;
  if (!qword_1EFF4F190)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EmailShareUserActionData, &type metadata for EmailShareUserActionData);
    atomic_store(result, (unint64_t *)&qword_1EFF4F190);
  }
  return result;
}

unint64_t sub_1D59B28A4()
{
  unint64_t result;

  result = qword_1EFF4F198;
  if (!qword_1EFF4F198)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EmailShareUserActionData, &type metadata for EmailShareUserActionData);
    atomic_store(result, (unint64_t *)&qword_1EFF4F198);
  }
  return result;
}

uint64_t sub_1D59B28E8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return EmailShareUserActionData.init(from:)(a1, a2);
}

uint64_t sub_1D59B28FC(_QWORD *a1)
{
  return EmailShareUserActionData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for EmailShareUserActionData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D59B295C + 4 * byte_1D5AD5415[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D59B2990 + 4 * byte_1D5AD5410[v4]))();
}

uint64_t sub_1D59B2990(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59B2998(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59B29A0);
  return result;
}

uint64_t sub_1D59B29AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59B29B4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D59B29B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59B29C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmailShareUserActionData()
{
  return &type metadata for EmailShareUserActionData;
}

uint64_t storeEnumTagSinglePayload for EmailShareUserActionData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D59B2A1C + 4 * byte_1D5AD541A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D59B2A3C + 4 * byte_1D5AD541F[v4]))();
}

_BYTE *sub_1D59B2A1C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D59B2A3C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59B2A44(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59B2A4C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59B2A54(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59B2A5C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EmailShareUserActionData.CodingKeys()
{
  return &type metadata for EmailShareUserActionData.CodingKeys;
}

unint64_t sub_1D59B2A7C()
{
  unint64_t result;

  result = qword_1EFF4F1A0;
  if (!qword_1EFF4F1A0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD5574, &type metadata for EmailShareUserActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F1A0);
  }
  return result;
}

unint64_t sub_1D59B2AC4()
{
  unint64_t result;

  result = qword_1EFF4F1A8;
  if (!qword_1EFF4F1A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD54E4, &type metadata for EmailShareUserActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F1A8);
  }
  return result;
}

unint64_t sub_1D59B2B0C()
{
  unint64_t result;

  result = qword_1EFF4F1B0;
  if (!qword_1EFF4F1B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD550C, &type metadata for EmailShareUserActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F1B0);
  }
  return result;
}

NewsAnalytics::SubscriptionOrigin_optional __swiftcall SubscriptionOrigin.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::SubscriptionOrigin_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SubscriptionOrigin.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59B2BD8 + 4 * byte_1D5AD55F0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D59B2BD8()
{
  return 1937204590;
}

uint64_t sub_1D59B2BE8()
{
  return 0x65726F7473707061;
}

uint64_t sub_1D59B2C00()
{
  return 6448503;
}

void sub_1D59B2C10(char *a1)
{
  sub_1D5A39FD8(*a1);
}

unint64_t sub_1D59B2C20()
{
  unint64_t result;

  result = qword_1EFF4F1B8;
  if (!qword_1EFF4F1B8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscriptionOrigin, &type metadata for SubscriptionOrigin);
    atomic_store(result, (unint64_t *)&qword_1EFF4F1B8);
  }
  return result;
}

void sub_1D59B2C64()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D59B2CB0()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D59B2D10()
{
  __asm { BR              X10 }
}

uint64_t sub_1D59B2D4C()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D59B2D98()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D59B2DE0()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::SubscriptionOrigin_optional sub_1D59B2E40(Swift::String *a1)
{
  return SubscriptionOrigin.init(rawValue:)(*a1);
}

uint64_t sub_1D59B2E4C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D59B2E7C + 4 * byte_1D5AD5600[*v0]))();
}

void sub_1D59B2E7C(_QWORD *a1@<X8>)
{
  *a1 = 1937204590;
  a1[1] = 0xE400000000000000;
}

void sub_1D59B2E90(_QWORD *a1@<X8>)
{
  *a1 = 0x65726F7473707061;
  a1[1] = 0xE800000000000000;
}

void sub_1D59B2EAC(_QWORD *a1@<X8>)
{
  *a1 = 6448503;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1D59B2EC0()
{
  sub_1D59B3034();
  return sub_1D5AAE928();
}

uint64_t sub_1D59B2F1C()
{
  sub_1D59B3034();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for SubscriptionOrigin(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D59B2FB4 + 4 * byte_1D5AD5609[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D59B2FE8 + 4 * byte_1D5AD5604[v4]))();
}

uint64_t sub_1D59B2FE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59B2FF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59B2FF8);
  return result;
}

uint64_t sub_1D59B3004(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59B300CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D59B3010(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59B3018(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionOrigin()
{
  return &type metadata for SubscriptionOrigin;
}

unint64_t sub_1D59B3034()
{
  unint64_t result;

  result = qword_1ED9CA1B0;
  if (!qword_1ED9CA1B0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscriptionOrigin, &type metadata for SubscriptionOrigin);
    atomic_store(result, (unint64_t *)&qword_1ED9CA1B0);
  }
  return result;
}

uint64_t type metadata accessor for ArticleViewEventQueryItemsGenerator()
{
  return objc_opt_self();
}

void sub_1D59B3098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D59B3638(a1, a2, a3);
}

char *sub_1D59B30B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v45 = a5;
  v41 = a3;
  v42 = a4;
  v46 = sub_1D5AAD560();
  v6 = *(_QWORD *)(v46 - 8);
  v7 = MEMORY[0x1E0C80A78](v46);
  v44 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v40 = (char *)&v39 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v39 = (char *)&v39 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v39 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v39 - v16;
  v19 = *(_QWORD *)(a1 + 16);
  v18 = *(_QWORD *)(a1 + 24);
  v43 = a1;
  v47 = v19;
  v48 = v18;
  swift_bridgeObjectRetain();
  sub_1D5AAE898();
  sub_1D5AAE850();
  swift_bridgeObjectRelease();
  sub_1D5AAD53C();
  swift_bridgeObjectRelease();
  v20 = (char *)sub_1D5873060(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v22 = *((_QWORD *)v20 + 2);
  v21 = *((_QWORD *)v20 + 3);
  if (v22 >= v21 >> 1)
    v20 = (char *)sub_1D5873060(v21 > 1, v22 + 1, 1, v20);
  *((_QWORD *)v20 + 2) = v22 + 1;
  v23 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v24 = *(_QWORD *)(v6 + 72);
  v25 = &v20[v23 + v24 * v22];
  v26 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v27 = v46;
  v26(v25, v17, v46);
  sub_1D5AAD53C();
  v29 = *((_QWORD *)v20 + 2);
  v28 = *((_QWORD *)v20 + 3);
  if (v29 >= v28 >> 1)
    v20 = (char *)sub_1D5873060(v28 > 1, v29 + 1, 1, v20);
  *((_QWORD *)v20 + 2) = v29 + 1;
  v26(&v20[v23 + v29 * v24], v15, v27);
  if (v45 == 1)
  {
    v31 = v43;
    v30 = v44;
  }
  else
  {
    sub_1D59B3464(v41);
    v31 = v43;
    v30 = v44;
    if (v32)
    {
      v33 = v39;
      sub_1D5AAD53C();
      swift_bridgeObjectRelease();
      v35 = *((_QWORD *)v20 + 2);
      v34 = *((_QWORD *)v20 + 3);
      if (v35 >= v34 >> 1)
        v20 = (char *)sub_1D5873060(v34 > 1, v35 + 1, 1, v20);
      *((_QWORD *)v20 + 2) = v35 + 1;
      v26(&v20[v23 + v35 * v24], v33, v27);
    }
  }
  if (*(_BYTE *)(v31 + 32))
  {
    if (*(_BYTE *)(v31 + 32) == 1)
      v30 = v40;
    sub_1D5AAD53C();
    v37 = *((_QWORD *)v20 + 2);
    v36 = *((_QWORD *)v20 + 3);
    if (v37 >= v36 >> 1)
      v20 = (char *)sub_1D5873060(v36 > 1, v37 + 1, 1, v20);
    *((_QWORD *)v20 + 2) = v37 + 1;
    v26(&v20[v23 + v37 * v24], v30, v27);
  }
  return v20;
}

uint64_t sub_1D59B3464(unsigned __int8 a1)
{
  return ((uint64_t (*)(_QWORD, _QWORD))((char *)sub_1D59B348C + 4 * byte_1D5AD5740[a1]))(0, 0);
}

uint64_t sub_1D59B348C()
{
  return 0x2B7377654ELL;
}

uint64_t sub_1D59B34A0()
{
  return 0x7961646F54;
}

uint64_t sub_1D59B34B4()
{
  return 0x747241664F646E45;
}

uint64_t sub_1D59B34D4()
{
  return 0x6F69647541;
}

uint64_t sub_1D59B34E8()
{
  return 0x7369486F69647541;
}

uint64_t sub_1D59B3508()
{
  return 0x616C506F69647541;
}

uint64_t sub_1D59B352C()
{
  return 0x6465766153;
}

uint64_t sub_1D59B3540()
{
  return 0x79726F74736948;
}

uint64_t sub_1D59B3558()
{
  return 0x686372616553;
}

uint64_t sub_1D59B356C()
{
  return 0x6F48686372616553;
}

uint64_t sub_1D59B3588()
{
  return 0x6957646572616853;
}

uint64_t sub_1D59B35AC()
{
  return 0x7374726F7053;
}

uint64_t sub_1D59B35C0()
{
  return 0x76457374726F7053;
}

uint64_t sub_1D59B35E0()
{
  return 0x7548656C7A7A7550;
}

uint64_t sub_1D59B35FC()
{
  return 0x7954656C7A7A7550;
}

unint64_t sub_1D59B361C()
{
  return 0xD000000000000011;
}

void sub_1D59B3638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  size_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  int *v52;
  _QWORD *v53;
  _OWORD v54[7];
  _OWORD v55[2];
  _OWORD v56[2];
  uint64_t v57;
  uint64_t v58;

  v50 = a3;
  v49 = a2;
  v48 = sub_1D5AAD560();
  v47 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v51 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = (int *)type metadata accessor for ArticleViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v52);
  v58 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59B3B60();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D5AADAAC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v44 - v12;
  sub_1D59B3BB4();
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  v19 = swift_dynamicCast();
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  if (v19)
  {
    v20(v9, 0, 1, v15);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v9, v15);
    v21 = (void *)sub_1D5AADA7C();
    v22 = sub_1D5AADE3C();
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);

    }
    else
    {
      v24 = v22;
      v25 = v23;

      sub_1D5AAD4B8();
      swift_allocObject();
      sub_1D5AAD4AC();
      sub_1D57A8DE4((unint64_t *)&unk_1ED9C6938, type metadata accessor for ArticleViewEvent.Model, (uint64_t)&protocol conformance descriptor for ArticleViewEvent.Model);
      v26 = v58;
      sub_1D5AAD4A0();
      v46 = v25;
      swift_release();
      sub_1D5AAD53C();
      v27 = (_QWORD *)sub_1D5873060(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v29 = v27[2];
      v28 = v27[3];
      v30 = v29 + 1;
      if (v29 >= v28 >> 1)
      {
        v45 = v29 + 1;
        v43 = sub_1D5873060(v28 > 1, v29 + 1, 1, v27);
        v30 = v45;
        v27 = (_QWORD *)v43;
      }
      v27[2] = v30;
      (*(void (**)(unint64_t, char *, uint64_t))(v47 + 32))((unint64_t)v27+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(_QWORD *)(v47 + 72) * v29, v51, v48);
      v53 = v27;
      v31 = v26 + v52[7];
      *(_QWORD *)((char *)v55 + 15) = *(_QWORD *)(v31 + 127);
      v32 = *(_OWORD *)(v31 + 112);
      v54[6] = *(_OWORD *)(v31 + 96);
      v55[0] = v32;
      v33 = *(_OWORD *)(v31 + 80);
      v54[4] = *(_OWORD *)(v31 + 64);
      v54[5] = v33;
      v34 = *(_OWORD *)(v31 + 48);
      v54[2] = *(_OWORD *)(v31 + 32);
      v54[3] = v34;
      v35 = *(_OWORD *)v31;
      v54[1] = *(_OWORD *)(v31 + 16);
      v54[0] = v35;
      v36 = v26 + v52[20];
      v37 = *(_OWORD *)(v36 + 16);
      v56[0] = *(_OWORD *)v36;
      v56[1] = v37;
      v57 = *(_QWORD *)(v36 + 32);
      v38 = (uint64_t *)(v26 + v52[10]);
      v40 = *v38;
      v39 = v38[1];
      v41 = v38[2];
      sub_1D57D41B8((uint64_t)v54);
      sub_1D59B3C2C((uint64_t)v56);
      sub_1D57D4528(v40, v39, v41);
      v42 = sub_1D59B30B0((uint64_t)v54, (uint64_t)v56, v40, v39, v41);
      sub_1D57DAEDC(v40, v39, v41);
      sub_1D59B3C60((uint64_t)v56);
      sub_1D57D5AE0((uint64_t)v54);
      sub_1D5820354((size_t)v42);
      sub_1D57E69C4(v24, v46);
      sub_1D5820E20(v58, type metadata accessor for ArticleViewEvent.Model);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    }
  }
  else
  {
    v20(v9, 1, 1, v15);
    sub_1D5820E20((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1D59B3B60);
    sub_1D5820DDC();
    swift_allocError();
    swift_willThrow();
  }
}

void sub_1D59B3B60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C67D8)
  {
    sub_1D59B3BB4();
    v0 = sub_1D5AAEACC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C67D8);
  }
}

void sub_1D59B3BB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C7030)
  {
    type metadata accessor for ArticleViewEvent(255);
    sub_1D57A8DE4(&qword_1ED9C8788, type metadata accessor for ArticleViewEvent, (uint64_t)&protocol conformance descriptor for ArticleViewEvent);
    v0 = sub_1D5AADAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C7030);
  }
}

uint64_t sub_1D59B3C2C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D59B3C60(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t dispatch thunk of UserEmbeddingDataProviderType.getUserEmbeddingData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void AdFeedData.feedType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AdFeedData.feedType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AdFeedData.feedType.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D59B3CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6570795464656566 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D59B3D58()
{
  sub_1D57A9F8C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59B3D80()
{
  sub_1D57A9F8C();
  return sub_1D5AAEEE0();
}

uint64_t AdFeedData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D57A9F30(0, &qword_1EFF4F1C0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A9F8C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D588C178();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D59B3EE0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return AdFeedData.init(from:)(a1, a2);
}

uint64_t storeEnumTagSinglePayload for AdFeedData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 22 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 22) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE9)
    return ((uint64_t (*)(void))((char *)&loc_1D59B3F40 + 4 * byte_1D5AD57C5[v4]))();
  *a1 = a2 + 22;
  return ((uint64_t (*)(void))((char *)sub_1D59B3F74 + 4 * byte_1D5AD57C0[v4]))();
}

uint64_t sub_1D59B3F74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59B3F7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59B3F84);
  return result;
}

uint64_t sub_1D59B3F90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59B3F98);
  *(_BYTE *)result = a2 + 22;
  return result;
}

uint64_t sub_1D59B3F9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59B3FA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdFeedData.CodingKeys()
{
  return &type metadata for AdFeedData.CodingKeys;
}

unint64_t sub_1D59B3FC4()
{
  unint64_t result;

  result = qword_1EFF4F1C8;
  if (!qword_1EFF4F1C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD5910, &type metadata for AdFeedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F1C8);
  }
  return result;
}

unint64_t sub_1D59B400C()
{
  unint64_t result;

  result = qword_1ED9CD9E0;
  if (!qword_1ED9CD9E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD5880, &type metadata for AdFeedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD9E0);
  }
  return result;
}

unint64_t sub_1D59B4054()
{
  unint64_t result;

  result = qword_1ED9CD9D8;
  if (!qword_1ED9CD9D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD58A8, &type metadata for AdFeedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD9D8);
  }
  return result;
}

uint64_t ANFComponentData.metadata.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ANFComponentData.metadata.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ANFComponentData.metadata.modify())()
{
  return nullsub_1;
}

uint64_t ANFComponentData.type.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ANFComponentData.type.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ANFComponentData.type.modify())()
{
  return nullsub_1;
}

uint64_t ANFComponentData.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ANFComponentData.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ANFComponentData.id.modify())()
{
  return nullsub_1;
}

uint64_t ANFComponentData.role.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ANFComponentData.role.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*ANFComponentData.role.modify())()
{
  return nullsub_1;
}

void __swiftcall ANFComponentData.init(metadata:type:id:role:)(NewsAnalytics::ANFComponentData *__return_ptr retstr, Swift::String metadata, Swift::String type, Swift::String id, Swift::String role)
{
  retstr->metadata = metadata;
  retstr->type = type;
  retstr->id = id;
  retstr->role = role;
}

uint64_t sub_1D59B426C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59B429C + 4 * byte_1D5AD5990[*v0]))(0x617461646174656DLL, 0xE800000000000000);
}

uint64_t sub_1D59B429C()
{
  return 1701869940;
}

uint64_t sub_1D59B42AC()
{
  return 25705;
}

uint64_t sub_1D59B42B8()
{
  return 1701605234;
}

uint64_t sub_1D59B42C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59B4BF4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59B42EC()
{
  sub_1D59B44EC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59B4314()
{
  sub_1D59B44EC();
  return sub_1D5AAEEE0();
}

uint64_t ANFComponentData.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[8];
  char v14;
  char v15;
  char v16;
  char v17;

  sub_1D59B4808(0, &qword_1ED9D1600, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v13 - v6;
  v8 = v1[2];
  v13[5] = v1[3];
  v13[6] = v8;
  v9 = v1[4];
  v13[3] = v1[5];
  v13[4] = v9;
  v10 = v1[6];
  v13[1] = v1[7];
  v13[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59B44EC();
  sub_1D5AAEEC8();
  v17 = 0;
  v11 = v13[7];
  sub_1D5AAED3C();
  if (!v11)
  {
    v16 = 1;
    sub_1D5AAED3C();
    v15 = 2;
    sub_1D5AAED3C();
    v14 = 3;
    sub_1D5AAED3C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D59B44EC()
{
  unint64_t result;

  result = qword_1ED9D14C0;
  if (!qword_1ED9D14C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD5B14, &type metadata for ANFComponentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D14C0);
  }
  return result;
}

uint64_t ANFComponentData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;

  sub_1D59B4808(0, &qword_1EFF4F1D0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59B44EC();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v33 = 0;
  v10 = sub_1D5AAECA0();
  v12 = v11;
  v28 = v10;
  v32 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1D5AAECA0();
  v29 = v14;
  v27 = v13;
  v31 = 2;
  swift_bridgeObjectRetain();
  v25 = sub_1D5AAECA0();
  v26 = v15;
  v30 = 3;
  swift_bridgeObjectRetain();
  v16 = sub_1D5AAECA0();
  v19 = v18;
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v21 = v16;
  v20(v9, v6);
  swift_bridgeObjectRetain();
  v22 = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v28;
  a2[1] = v12;
  v23 = v26;
  a2[2] = v27;
  a2[3] = v22;
  a2[4] = v25;
  a2[5] = v23;
  a2[6] = v21;
  a2[7] = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D59B4808(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59B44EC();
    v7 = a3(a1, &type metadata for ANFComponentData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59B486C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ANFComponentData.init(from:)(a1, a2);
}

uint64_t sub_1D59B4880(_QWORD *a1)
{
  return ANFComponentData.encode(to:)(a1);
}

uint64_t destroy for ANFComponentData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ANFComponentData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ANFComponentData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for ANFComponentData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ANFComponentData()
{
  return &type metadata for ANFComponentData;
}

uint64_t storeEnumTagSinglePayload for ANFComponentData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D59B4A9C + 4 * byte_1D5AD5999[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D59B4AD0 + 4 * byte_1D5AD5994[v4]))();
}

uint64_t sub_1D59B4AD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59B4AD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59B4AE0);
  return result;
}

uint64_t sub_1D59B4AEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59B4AF4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D59B4AF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59B4B00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ANFComponentData.CodingKeys()
{
  return &type metadata for ANFComponentData.CodingKeys;
}

unint64_t sub_1D59B4B20()
{
  unint64_t result;

  result = qword_1EFF4F1D8;
  if (!qword_1EFF4F1D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD5AEC, &type metadata for ANFComponentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F1D8);
  }
  return result;
}

unint64_t sub_1D59B4B68()
{
  unint64_t result;

  result = qword_1ED9D14D0;
  if (!qword_1ED9D14D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD5A5C, &type metadata for ANFComponentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D14D0);
  }
  return result;
}

unint64_t sub_1D59B4BB0()
{
  unint64_t result;

  result = qword_1ED9D14C8;
  if (!qword_1ED9D14C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD5A84, &type metadata for ANFComponentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D14C8);
  }
  return result;
}

uint64_t sub_1D59B4BF4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1D59B4D74()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADAB8();
  __swift_allocate_value_buffer(v0, qword_1EFF4F1E0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFF4F1E0);
  *(_QWORD *)v1 = 0x7364612E6D6F63;
  *(_QWORD *)(v1 + 8) = 0xE700000000000000;
  *(_QWORD *)(v1 + 16) = 3;
  *(_BYTE *)(v1 + 24) = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t static InterstitialAdImpressionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47318, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4F1E0, a1);
}

uint64_t sub_1D59B4E14()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADD34();
  __swift_allocate_value_buffer(v0, qword_1EFF4F1F8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFF4F1F8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0CF8378], v0);
}

uint64_t static InterstitialAdImpressionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47320, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4F1F8, a1);
}

uint64_t InterstitialAdImpressionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t InterstitialAdImpressionEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*InterstitialAdImpressionEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t InterstitialAdImpressionEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for InterstitialAdImpressionEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for InterstitialAdImpressionEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4F280);
}

uint64_t InterstitialAdImpressionEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*InterstitialAdImpressionEvent.timedData.modify())(_QWORD)
{
  type metadata accessor for InterstitialAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t InterstitialAdImpressionEvent.adUserData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t InterstitialAdImpressionEvent.adUserData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*InterstitialAdImpressionEvent.adUserData.modify())(_QWORD)
{
  type metadata accessor for InterstitialAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t InterstitialAdImpressionEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t InterstitialAdImpressionEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*InterstitialAdImpressionEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for InterstitialAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t InterstitialAdImpressionEvent.adPlacementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t InterstitialAdImpressionEvent.adPlacementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*InterstitialAdImpressionEvent.adPlacementData.modify())(_QWORD)
{
  type metadata accessor for InterstitialAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t InterstitialAdImpressionEvent.adFeedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t InterstitialAdImpressionEvent.adFeedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*InterstitialAdImpressionEvent.adFeedData.modify())(_QWORD)
{
  type metadata accessor for InterstitialAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t InterstitialAdImpressionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for InterstitialAdImpressionEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  v14 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
}

uint64_t InterstitialAdImpressionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t InterstitialAdImpressionEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for InterstitialAdImpressionEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for InterstitialAdImpressionEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4F320);
}

uint64_t InterstitialAdImpressionEvent.Model.adUserData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent.Model(0) + 24));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t InterstitialAdImpressionEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent.Model(0) + 28));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t InterstitialAdImpressionEvent.Model.adPlacementData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent.Model(0) + 32));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t InterstitialAdImpressionEvent.Model.adFeedData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for InterstitialAdImpressionEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t InterstitialAdImpressionEvent.Model.init(eventData:timedData:adUserData:userBundleSubscriptionContextData:adPlacementData:adFeedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v10 = *a3;
  v11 = a3[1];
  v12 = *a4;
  v13 = *((_QWORD *)a4 + 1);
  v14 = *((_QWORD *)a4 + 2);
  v15 = a4[24];
  v27 = a4[25];
  v25 = *((_QWORD *)a4 + 5);
  v26 = *((_QWORD *)a4 + 4);
  v24 = a4[48];
  v28 = a5[1];
  v29 = *a5;
  v30 = *a6;
  v16 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a7, a1, v16);
  v17 = (int *)type metadata accessor for InterstitialAdImpressionEvent.Model(0);
  v18 = a7 + v17[5];
  v19 = sub_1D5AADFB0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18, a2, v19);
  v21 = (_QWORD *)(a7 + v17[6]);
  *v21 = v10;
  v21[1] = v11;
  v22 = a7 + v17[7];
  *(_BYTE *)v22 = v12;
  *(_QWORD *)(v22 + 8) = v13;
  *(_QWORD *)(v22 + 16) = v14;
  *(_BYTE *)(v22 + 24) = v15;
  *(_BYTE *)(v22 + 25) = v27;
  *(_QWORD *)(v22 + 32) = v26;
  *(_QWORD *)(v22 + 40) = v25;
  *(_BYTE *)(v22 + 48) = v24;
  v23 = (_QWORD *)(a7 + v17[8]);
  *v23 = v29;
  v23[1] = v28;
  *(_BYTE *)(a7 + v17[9]) = v30;
  return result;
}

uint64_t sub_1D59B5774()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59B57A8 + 4 * byte_1D5AD5B70[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D59B57A8()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D59B57BC()
{
  return 0x6144726573556461;
}

uint64_t sub_1D59B5828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D59B7C3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D59B584C()
{
  sub_1D59B5B70();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59B5874()
{
  sub_1D59B5B70();
  return sub_1D5AAEEE0();
}

uint64_t InterstitialAdImpressionEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  char v25;
  char v26;
  __int128 v27;
  char v28;
  char v29;

  v3 = v1;
  sub_1D59B60E4(0, &qword_1EFF4F210, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59B5B70();
  sub_1D5AAEEC8();
  LOBYTE(v23) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for InterstitialAdImpressionEvent.Model(0);
    LOBYTE(v23) = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = (uint64_t *)(v3 + v10[6]);
    v13 = *v11;
    v12 = v11[1];
    v23 = v13;
    *(_QWORD *)&v24 = v12;
    v29 = 2;
    sub_1D57CBEFC();
    sub_1D5AAED6C();
    v14 = v3 + v10[7];
    v15 = *(_BYTE *)(v14 + 24);
    v16 = *(_BYTE *)(v14 + 25);
    v17 = *(_BYTE *)(v14 + 48);
    LOBYTE(v23) = *(_BYTE *)v14;
    v24 = *(_OWORD *)(v14 + 8);
    v25 = v15;
    v26 = v16;
    v27 = *(_OWORD *)(v14 + 32);
    v28 = v17;
    v29 = 3;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v18 = (uint64_t *)(v3 + v10[8]);
    v20 = *v18;
    v19 = v18[1];
    v23 = v20;
    *(_QWORD *)&v24 = v19;
    v29 = 4;
    sub_1D584FF8C();
    sub_1D5AAED6C();
    LOBYTE(v23) = *(_BYTE *)(v3 + v10[9]);
    v29 = 5;
    sub_1D57CBF9C();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D59B5B70()
{
  unint64_t result;

  result = qword_1EFF4F218;
  if (!qword_1EFF4F218)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD5DA4, &type metadata for InterstitialAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F218);
  }
  return result;
}

uint64_t InterstitialAdImpressionEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  char v44;
  char v45;
  __int128 v46;
  char v47;
  char v48;

  v33 = a2;
  v35 = sub_1D5AADFB0();
  v37 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v34 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1D5AADF98();
  v4 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59B60E4(0, &qword_1EFF4F220, MEMORY[0x1E0DED048]);
  v40 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - v8;
  v10 = (int *)type metadata accessor for InterstitialAdImpressionEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59B5B70();
  v39 = v9;
  v13 = v41;
  sub_1D5AAEEB0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v41 = v7;
  v31 = v4;
  v32 = a1;
  v14 = v37;
  v16 = v34;
  v15 = v35;
  LOBYTE(v42) = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v17 = v36;
  sub_1D5AAECD0();
  v18 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  v30 = v12;
  v18(v12, v38, v17);
  LOBYTE(v42) = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1D5AAECD0();
  v19 = (uint64_t)v30;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v30[v10[5]], v16, v15);
  v48 = 2;
  sub_1D57CBEB8();
  sub_1D5AAECD0();
  v20 = v43;
  v21 = (_QWORD *)(v19 + v10[6]);
  *v21 = v42;
  v21[1] = v20;
  v48 = 3;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v22 = v44;
  v23 = v45;
  v24 = v47;
  v25 = v19 + v10[7];
  *(_BYTE *)v25 = v42;
  *(_OWORD *)(v25 + 8) = v43;
  *(_BYTE *)(v25 + 24) = v22;
  *(_BYTE *)(v25 + 25) = v23;
  *(_OWORD *)(v25 + 32) = v46;
  *(_BYTE *)(v25 + 48) = v24;
  v48 = 4;
  sub_1D584FF48();
  sub_1D5AAECD0();
  v26 = v43;
  v27 = (_QWORD *)(v19 + v10[8]);
  *v27 = v42;
  v27[1] = v26;
  v48 = 5;
  sub_1D57CBF58();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v40);
  *(_BYTE *)(v19 + v10[9]) = v42;
  sub_1D59B6140(v19, v33);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return sub_1D59B6184(v19);
}

void sub_1D59B60E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59B5B70();
    v7 = a3(a1, &type metadata for InterstitialAdImpressionEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D59B6140(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InterstitialAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D59B6184(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for InterstitialAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D59B61C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return InterstitialAdImpressionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D59B61D4(_QWORD *a1)
{
  return InterstitialAdImpressionEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D59B61E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47318, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4F1E0, a1);
}

uint64_t sub_1D59B620C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47320, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4F1F8, a1);
}

uint64_t sub_1D59B6230@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  v15 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for InterstitialAdImpressionEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for InterstitialAdImpressionEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

uint64_t initializeWithCopy for InterstitialAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for InterstitialAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for InterstitialAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for InterstitialAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for InterstitialAdImpressionEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59B6E04(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for InterstitialAdImpressionEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59B6F94(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D59B7120()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for InterstitialAdImpressionEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (_QWORD *)((char *)a1 + v12);
    v15 = (_QWORD *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = (char *)a1 + v13;
    v18 = (char *)a2 + v13;
    *v17 = *v18;
    v19 = *((_QWORD *)v18 + 2);
    *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
    *((_QWORD *)v17 + 2) = v19;
    *((_WORD *)v17 + 12) = *((_WORD *)v18 + 12);
    v20 = *((_QWORD *)v18 + 5);
    *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
    *((_QWORD *)v17 + 5) = v20;
    v17[48] = v18[48];
    v21 = a3[8];
    v22 = a3[9];
    v23 = (_QWORD *)((char *)a1 + v21);
    v24 = (_QWORD *)((char *)a2 + v21);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    *((_BYTE *)a1 + v22) = *((_BYTE *)a2 + v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for InterstitialAdImpressionEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InterstitialAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = a1 + v12;
  v17 = a2 + v12;
  *(_BYTE *)v16 = *(_BYTE *)v17;
  v18 = *(_QWORD *)(v17 + 16);
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
  *(_QWORD *)(v16 + 16) = v18;
  *(_WORD *)(v16 + 24) = *(_WORD *)(v17 + 24);
  v19 = *(_QWORD *)(v17 + 40);
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  *(_QWORD *)(v16 + 40) = v19;
  *(_BYTE *)(v16 + 48) = *(_BYTE *)(v17 + 48);
  v20 = a3[8];
  v21 = a3[9];
  v22 = (_QWORD *)(a1 + v20);
  v23 = (_QWORD *)(a2 + v20);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InterstitialAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_BYTE *)v15 = *(_BYTE *)(a2 + v14);
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(a2 + v14 + 8);
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(a2 + v14 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v15 + 24) = *(_BYTE *)(v16 + 24);
  *(_BYTE *)(v15 + 25) = *(_BYTE *)(v16 + 25);
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  *(_QWORD *)(v15 + 40) = *(_QWORD *)(v16 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v15 + 48) = *(_BYTE *)(v16 + 48);
  v17 = a3[8];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for InterstitialAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  v12 = a1 + v11;
  v13 = (__int128 *)(a2 + v11);
  *(_BYTE *)(v12 + 48) = *((_BYTE *)v13 + 48);
  v14 = v13[2];
  v15 = *v13;
  *(_OWORD *)(v12 + 16) = v13[1];
  *(_OWORD *)(v12 + 32) = v14;
  *(_OWORD *)v12 = v15;
  v16 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  return a1;
}

uint64_t assignWithTake for InterstitialAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_BYTE *)v17 = *(_BYTE *)(a2 + v16);
  v19 = *(_QWORD *)(a2 + v16 + 16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)(v17 + 16) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 24) = *(_BYTE *)(v18 + 24);
  *(_BYTE *)(v17 + 25) = *(_BYTE *)(v18 + 25);
  v20 = *(_QWORD *)(v18 + 40);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 40) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 48) = *(_BYTE *)(v18 + 48);
  v21 = a3[8];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for InterstitialAdImpressionEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59B7894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for InterstitialAdImpressionEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D59B794C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D59B79F4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for InterstitialAdImpressionEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D59B7AE4 + 4 * byte_1D5AD5B7B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D59B7B18 + 4 * byte_1D5AD5B76[v4]))();
}

uint64_t sub_1D59B7B18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59B7B20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59B7B28);
  return result;
}

uint64_t sub_1D59B7B34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59B7B3CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D59B7B40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59B7B48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InterstitialAdImpressionEvent.Model.CodingKeys()
{
  return &type metadata for InterstitialAdImpressionEvent.Model.CodingKeys;
}

unint64_t sub_1D59B7B68()
{
  unint64_t result;

  result = qword_1EFF4F368;
  if (!qword_1EFF4F368)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD5D7C, &type metadata for InterstitialAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F368);
  }
  return result;
}

unint64_t sub_1D59B7BB0()
{
  unint64_t result;

  result = qword_1EFF4F370;
  if (!qword_1EFF4F370)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD5CEC, &type metadata for InterstitialAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F370);
  }
  return result;
}

unint64_t sub_1D59B7BF8()
{
  unint64_t result;

  result = qword_1EFF4F378;
  if (!qword_1EFF4F378)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD5D14, &type metadata for InterstitialAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F378);
  }
  return result;
}

uint64_t sub_1D59B7C3C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6144726573556461 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D6563616C506461 && a2 == 0xEF61746144746E65 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6144646565466461 && a2 == 0xEA00000000006174)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

void PuzzleLayoutData.puzzleLayout.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *PuzzleLayoutData.puzzleLayout.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*PuzzleLayoutData.puzzleLayout.modify())()
{
  return nullsub_1;
}

NewsAnalytics::PuzzleLayoutData __swiftcall PuzzleLayoutData.init(puzzleLayout:)(NewsAnalytics::PuzzleLayoutData puzzleLayout)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)puzzleLayout.puzzleLayout;
  return puzzleLayout;
}

uint64_t sub_1D59B7F34()
{
  return 0x614C656C7A7A7570;
}

uint64_t sub_1D59B7F54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x614C656C7A7A7570 && a2 == 0xEC00000074756F79)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D59B8000()
{
  sub_1D59B8154();
  return sub_1D5AAEED4();
}

uint64_t sub_1D59B8028()
{
  sub_1D59B8154();
  return sub_1D5AAEEE0();
}

uint64_t PuzzleLayoutData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D59B8314(0, &qword_1EFF4F380, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59B8154();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D59B8198();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D59B8154()
{
  unint64_t result;

  result = qword_1EFF4F388;
  if (!qword_1EFF4F388)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD5F84, &type metadata for PuzzleLayoutData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F388);
  }
  return result;
}

unint64_t sub_1D59B8198()
{
  unint64_t result;

  result = qword_1EFF4F390;
  if (!qword_1EFF4F390)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PuzzleLayout, &type metadata for PuzzleLayout);
    atomic_store(result, (unint64_t *)&qword_1EFF4F390);
  }
  return result;
}

uint64_t PuzzleLayoutData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D59B8314(0, &qword_1EFF4F398, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59B8154();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D59B8370();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D59B8314(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D59B8154();
    v7 = a3(a1, &type metadata for PuzzleLayoutData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D59B8370()
{
  unint64_t result;

  result = qword_1EFF4F3A0;
  if (!qword_1EFF4F3A0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PuzzleLayout, &type metadata for PuzzleLayout);
    atomic_store(result, (unint64_t *)&qword_1EFF4F3A0);
  }
  return result;
}

uint64_t sub_1D59B83BC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return PuzzleLayoutData.init(from:)(a1, a2);
}

uint64_t sub_1D59B83D0(_QWORD *a1)
{
  return PuzzleLayoutData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for PuzzleLayoutData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D59B8430 + 4 * byte_1D5AD5E05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D59B8464 + 4 * byte_1D5AD5E00[v4]))();
}

uint64_t sub_1D59B8464(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59B846C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59B8474);
  return result;
}

uint64_t sub_1D59B8480(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59B8488);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D59B848C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59B8494(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleLayoutData()
{
  return &type metadata for PuzzleLayoutData;
}

uint64_t storeEnumTagSinglePayload for PuzzleLayoutData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D59B84F0 + 4 * byte_1D5AD5E0A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D59B8510 + 4 * byte_1D5AD5E0F[v4]))();
}

_BYTE *sub_1D59B84F0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D59B8510(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59B8518(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59B8520(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D59B8528(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D59B8530(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleLayoutData.CodingKeys()
{
  return &type metadata for PuzzleLayoutData.CodingKeys;
}

unint64_t sub_1D59B8550()
{
  unint64_t result;

  result = qword_1EFF4F3A8;
  if (!qword_1EFF4F3A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD5F5C, &type metadata for PuzzleLayoutData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F3A8);
  }
  return result;
}

unint64_t sub_1D59B8598()
{
  unint64_t result;

  result = qword_1EFF4F3B0;
  if (!qword_1EFF4F3B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD5ECC, &type metadata for PuzzleLayoutData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F3B0);
  }
  return result;
}

unint64_t sub_1D59B85E0()
{
  unint64_t result;

  result = qword_1EFF4F3B8;
  if (!qword_1EFF4F3B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AD5EF4, &type metadata for PuzzleLayoutData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4F3B8);
  }
  return result;
}

NewsAnalytics::NewsletterSubscriptionType_optional __swiftcall NewsletterSubscriptionType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::NewsletterSubscriptionType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t NewsletterSubscriptionType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D59B86AC + 4 * byte_1D5AD6010[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D59B86AC()
{
  return 1701736302;
}

uint64_t sub_1D59B86BC()
{
  return 0x7474656C7377656ELL;
}

unint64_t sub_1D59B86D8()
{
  return 0xD000000000000016;
}

void sub_1D59B86F4(char *a1)
{
  sub_1D5A36E14(*a1);
}

unint64_t sub_1D59B8704()
{
  unint64_t result;

  result = qword_1EFF4F3C0;
  if (!qword_1EFF4F3C0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NewsletterSubscriptionType, &type metadata for NewsletterSubscriptionType);
    atomic_store(result, (unint64_t *)&qword_1EFF4F3C0);
  }
  return result;
}

void sub_1D59B8748()
{
  char *v0;

  sub_1D5A80EA4(*v0);
}

void sub_1D59B8750()
{
  __asm { BR              X10 }
}

uint64_t sub_1D59B878C()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D59B87E8(uint64_t a1)
{
  char *v1;

  sub_1D5AA9DB8(a1, *v1);
}

NewsAnalytics::NewsletterSubscriptionType_optional sub_1D59B87F0(Swift::String *a1)
{
  return NewsletterSubscriptionType.init(rawValue:)(*a1);
}

uint64_t sub_1D59B87FC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D59B882C + 4 * byte_1D5AD6018[*v0]))();
}

void sub_1D59B882C(_QWORD *a1@<X8>)
{
  *a1 = 1701736302;
  a1[1] = 0xE400000000000000;
}

void sub_1D59B8840(_QWORD *a1@<X8>)
{
  *a1 = 0x7474656C7377656ELL;
  a1[1] = 0xEA00000000007265;
}

void sub_1D59B8860(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x80000001D5AEBA40;
}

uint64_t sub_1D59B8880()
{
  sub_1D59B89E4();
  return sub_1D5AAE928();
}

uint64_t sub_1D59B88DC()
{
  sub_1D59B89E4();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for NewsletterSubscriptionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D59B8974 + 4 * byte_1D5AD6021[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D59B89A8 + 4 * byte_1D5AD601C[v4]))();
}

uint64_t sub_1D59B89A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59B89B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D59B89B8);
  return result;
}

uint64_t sub_1D59B89C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D59B89CCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D59B89D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59B89D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1D59B89E4()
{
  unint64_t result;

  result = qword_1ED9CB658;
  if (!qword_1ED9CB658)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NewsletterSubscriptionType, &type metadata for NewsletterSubscriptionType);
    atomic_store(result, (unint64_t *)&qword_1ED9CB658);
  }
  return result;
}

uint64_t dispatch thunk of SportsSyncEventPrivacySamplerType.canRecord.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void sub_1D59B8A30()
{
  if (qword_1ED9D10C0 != -1)
    swift_once();
  sub_1D59B8D20();
  sub_1D5AAD7F4();
  __asm { BR              X10 }
}

uint64_t sub_1D59B8CD0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t sub_1D59B8CFC()
{
  char v0;

  sub_1D59B8A30();
  return v0 & 1;
}

unint64_t sub_1D59B8D20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED9D10F8;
  if (!qword_1ED9D10F8)
  {
    v1 = type metadata accessor for SportsSyncEventPrivacySampler();
    result = MEMORY[0x1D8279680](&unk_1D5AD61B8, v1);
    atomic_store(result, (unint64_t *)&qword_1ED9D10F8);
  }
  return result;
}

uint64_t sub_1D59B8D64(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CCBA0, MEMORY[0x1E0CF8078]);
}

uint64_t static IssueExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CCE68, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCBA0, a1);
}

uint64_t sub_1D59B8DA4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CCBB8, MEMORY[0x1E0CF8380]);
}

uint64_t static IssueExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CCE70, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCBB8, a1);
}

uint64_t IssueExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t IssueExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*IssueExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t IssueExposureEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueExposureEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for IssueExposureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C9EC0);
}

uint64_t IssueExposureEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueExposureEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueExposureEvent.issueData.modify())(_QWORD)
{
  type metadata accessor for IssueExposureEvent(0);
  return nullsub_1;
}

uint64_t IssueExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5824B58(type metadata accessor for IssueExposureEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t IssueExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueExposureEvent(0) + 24);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueExposureEvent.timedData.modify())(_QWORD)
{
  type metadata accessor for IssueExposureEvent(0);
  return nullsub_1;
}

uint64_t IssueExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueExposureEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueExposureEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueExposureEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for IssueExposureEvent(0);
  return nullsub_1;
}

uint64_t IssueExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueExposureEvent.groupData.modify())(_QWORD)
{
  type metadata accessor for IssueExposureEvent(0);
  return nullsub_1;
}

uint64_t IssueExposureEvent.issueScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueExposureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueExposureEvent.issueScienceData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueExposureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueExposureEvent.issueScienceData.modify())(_QWORD)
{
  type metadata accessor for IssueExposureEvent(0);
  return nullsub_1;
}

uint64_t IssueExposureEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueExposureEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueExposureEvent.channelData.modify())(_QWORD)
{
  type metadata accessor for IssueExposureEvent(0);
  return nullsub_1;
}

uint64_t IssueExposureEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueExposureEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueExposureEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueExposureEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueExposureEvent.userChannelContextData.modify())(_QWORD)
{
  type metadata accessor for IssueExposureEvent(0);
  return nullsub_1;
}

uint64_t IssueExposureEvent.issueExposureContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueExposureEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueExposureEvent.issueExposureContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueExposureEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueExposureEvent.issueExposureContextData.modify())(_QWORD)
{
  type metadata accessor for IssueExposureEvent(0);
  return nullsub_1;
}

uint64_t IssueExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueExposureEvent(0) + 52);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueExposureEvent(0) + 52);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueExposureEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for IssueExposureEvent(0);
  return nullsub_1;
}

uint64_t IssueExposureEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueExposureEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueExposureEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueExposureEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueExposureEvent.feedPositionData.modify())(_QWORD)
{
  type metadata accessor for IssueExposureEvent(0);
  return nullsub_1;
}

uint64_t IssueExposureEvent.offlineModeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueExposureEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IssueExposureEvent.offlineModeData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IssueExposureEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IssueExposureEvent.offlineModeData.modify())(_QWORD)
{
  type metadata accessor for IssueExposureEvent(0);
  return nullsub_1;
}

uint64_t IssueExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for IssueExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C7230, (void (*)(void))sub_1D57C7808, (void (*)(void))sub_1D57C784C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v10, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v2, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, &qword_1ED9CEA88, (void (*)(void))sub_1D57CE014, (void (*)(void))sub_1D57CE05C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v2, v27);
}

