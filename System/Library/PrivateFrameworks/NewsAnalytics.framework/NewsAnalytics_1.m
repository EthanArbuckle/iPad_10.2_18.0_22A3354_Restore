uint64_t assignWithTake for GroupLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (*(_QWORD *)(a1 + v7 + 16) != 1)
  {
    v10 = *(_QWORD *)(v9 + 16);
    if (v10 != 1)
    {
      *(_BYTE *)v8 = *(_BYTE *)v9;
      *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
      *(_QWORD *)(v8 + 16) = v10;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D57D9100(v8);
  }
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
LABEL_6:
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_WORD *)v16 = *(_WORD *)(a2 + v15);
  v18 = *(_QWORD *)(a2 + v15 + 16);
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(a2 + v15 + 8);
  *(_QWORD *)(v16 + 16) = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 24) = *(_QWORD *)(v17 + 24);
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 48) = *(_QWORD *)(v17 + 48);
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v17 + 64);
  *(_QWORD *)(v16 + 56) = *(_QWORD *)(v17 + 56);
  *(_QWORD *)(v16 + 64) = v19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 72) = *(_QWORD *)(v17 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v16 + 80) = *(_BYTE *)(v17 + 80);
  v20 = *(_QWORD *)(v17 + 96);
  *(_QWORD *)(v16 + 88) = *(_QWORD *)(v17 + 88);
  *(_QWORD *)(v16 + 96) = v20;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 104) = *(_QWORD *)(v17 + 104);
  *(_BYTE *)(v16 + 112) = *(_BYTE *)(v17 + 112);
  *(_QWORD *)(v16 + 120) = *(_QWORD *)(v17 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 128) = *(_QWORD *)(v17 + 128);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupLoadEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5826E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 16);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupLoadEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5826F30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 16) = (a2 - 1);
  return result;
}

uint64_t sub_1D5826FD8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for GroupLoadEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D58270C4 + 4 * byte_1D5AB58AA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D58270F8 + 4 * byte_1D5AB58A5[v4]))();
}

uint64_t sub_1D58270F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5827100(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5827108);
  return result;
}

uint64_t sub_1D5827114(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D582711CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5827120(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5827128(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GroupLoadEvent.Model.CodingKeys()
{
  return &type metadata for GroupLoadEvent.Model.CodingKeys;
}

unint64_t sub_1D5827148()
{
  unint64_t result;

  result = qword_1EFF48D80;
  if (!qword_1EFF48D80)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB5A8C, &type metadata for GroupLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48D80);
  }
  return result;
}

unint64_t sub_1D5827190()
{
  unint64_t result;

  result = qword_1EFF48D88;
  if (!qword_1EFF48D88)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB59FC, &type metadata for GroupLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48D88);
  }
  return result;
}

unint64_t sub_1D58271D8()
{
  unint64_t result;

  result = qword_1EFF48D90;
  if (!qword_1EFF48D90)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB5A24, &type metadata for GroupLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48D90);
  }
  return result;
}

uint64_t sub_1D582721C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AED6A0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

NewsAnalytics::NotificationStatus_optional __swiftcall NotificationStatus.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::NotificationStatus_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t NotificationStatus.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6564726163736964;
  if (*v0 != 1)
    v1 = 0x6465766965636572;
  if (*v0)
    return v1;
  else
    return 0x6465766F6D6572;
}

uint64_t sub_1D5827508(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A3A3A4(*a1, *a2);
}

unint64_t sub_1D5827518()
{
  unint64_t result;

  result = qword_1EFF48D98;
  if (!qword_1EFF48D98)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationStatus, &type metadata for NotificationStatus);
    atomic_store(result, (unint64_t *)&qword_1EFF48D98);
  }
  return result;
}

uint64_t sub_1D582755C()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5827600()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5827680()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::NotificationStatus_optional sub_1D5827720(Swift::String *a1)
{
  return NotificationStatus.init(rawValue:)(*a1);
}

void sub_1D582772C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE900000000000064;
  v5 = 0x6564726163736964;
  if (v2 != 1)
  {
    v5 = 0x6465766965636572;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6465766F6D6572;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D5827790()
{
  sub_1D5827904();
  return sub_1D5AAE928();
}

uint64_t sub_1D58277EC()
{
  sub_1D5827904();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for NotificationStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5827884 + 4 * byte_1D5AB5B15[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D58278B8 + 4 * byte_1D5AB5B10[v4]))();
}

uint64_t sub_1D58278B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58278C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58278C8);
  return result;
}

uint64_t sub_1D58278D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58278DCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D58278E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58278E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationStatus()
{
  return &type metadata for NotificationStatus;
}

unint64_t sub_1D5827904()
{
  unint64_t result;

  result = qword_1EFF48DA0;
  if (!qword_1EFF48DA0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationStatus, &type metadata for NotificationStatus);
    atomic_store(result, (unint64_t *)&qword_1EFF48DA0);
  }
  return result;
}

uint64_t sub_1D5827948(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF48DA8, MEMORY[0x1E0CF8078]);
}

uint64_t static SportsSyncSheetEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46F80, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF48DA8, a1);
}

uint64_t sub_1D5827988(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF48DC0, MEMORY[0x1E0CF8378]);
}

uint64_t static SportsSyncSheetEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46F88, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF48DC0, a1);
}

uint64_t SportsSyncSheetEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t SportsSyncSheetEngagementEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SportsSyncSheetEngagementEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SportsSyncSheetEngagementEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for SportsSyncSheetEngagementEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for SportsSyncSheetEngagementEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF48E60);
}

uint64_t SportsSyncSheetEngagementEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsSyncSheetEngagementEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SportsSyncSheetEngagementEvent.timedData.modify())()
{
  type metadata accessor for SportsSyncSheetEngagementEvent(0);
  return nullsub_1;
}

uint64_t SportsSyncSheetEngagementEvent.userSelectionSportsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsSyncSheetEngagementEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF48DD8, (void (*)(void))sub_1D5827B1C, (void (*)(void))sub_1D5827B60);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D5827B1C()
{
  unint64_t result;

  result = qword_1EFF48DE0;
  if (!qword_1EFF48DE0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserSelectionData, &type metadata for UserSelectionData);
    atomic_store(result, (unint64_t *)&qword_1EFF48DE0);
  }
  return result;
}

unint64_t sub_1D5827B60()
{
  unint64_t result;

  result = qword_1EFF48DE8;
  if (!qword_1EFF48DE8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserSelectionData, &type metadata for UserSelectionData);
    atomic_store(result, (unint64_t *)&qword_1EFF48DE8);
  }
  return result;
}

uint64_t SportsSyncSheetEngagementEvent.userSelectionSportsData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsSyncSheetEngagementEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF48DD8, (void (*)(void))sub_1D5827B1C, (void (*)(void))sub_1D5827B60);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SportsSyncSheetEngagementEvent.userSelectionSportsData.modify())()
{
  type metadata accessor for SportsSyncSheetEngagementEvent(0);
  return nullsub_1;
}

uint64_t SportsSyncSheetEngagementEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsSyncSheetEngagementEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SportsSyncSheetEngagementEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsSyncSheetEngagementEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SportsSyncSheetEngagementEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for SportsSyncSheetEngagementEvent(0);
  return nullsub_1;
}

uint64_t SportsSyncSheetEngagementEvent.campaignData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsSyncSheetEngagementEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SportsSyncSheetEngagementEvent.campaignData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsSyncSheetEngagementEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SportsSyncSheetEngagementEvent.campaignData.modify())()
{
  type metadata accessor for SportsSyncSheetEngagementEvent(0);
  return nullsub_1;
}

uint64_t SportsSyncSheetEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for SportsSyncSheetEngagementEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1EFF48DD8, (void (*)(void))sub_1D5827B1C, (void (*)(void))sub_1D5827B60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
}

uint64_t SportsSyncSheetEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SportsSyncSheetEngagementEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for SportsSyncSheetEngagementEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for SportsSyncSheetEngagementEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF48F00);
}

uint64_t SportsSyncSheetEngagementEvent.Model.userSelectionSportsData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SportsSyncSheetEngagementEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t SportsSyncSheetEngagementEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for SportsSyncSheetEngagementEvent.Model(0) + 28));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SportsSyncSheetEngagementEvent.Model.campaignData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SportsSyncSheetEngagementEvent.Model(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1D5828094(v4, v5);
}

uint64_t sub_1D5828094(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 SportsSyncSheetEngagementEvent.Model.init(eventData:timedData:userSelectionSportsData:userBundleSubscriptionContextData:campaignData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, __int128 *a5@<X4>, uint64_t a6@<X8>)
{
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 result;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  __int128 v28;

  v9 = *a3;
  v10 = *a4;
  v11 = *((_QWORD *)a4 + 1);
  v12 = *((_QWORD *)a4 + 2);
  v13 = a4[24];
  v14 = a4[25];
  v23 = *((_QWORD *)a4 + 5);
  v24 = *((_QWORD *)a4 + 4);
  v22 = a4[48];
  v27 = (__n128)a5[1];
  v28 = *a5;
  v25 = *((_QWORD *)a5 + 5);
  v26 = *((_QWORD *)a5 + 4);
  v15 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a6, a1, v15);
  v16 = (int *)type metadata accessor for SportsSyncSheetEngagementEvent.Model(0);
  v17 = a6 + v16[5];
  v18 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a2, v18);
  *(_BYTE *)(a6 + v16[6]) = v9;
  v19 = a6 + v16[7];
  *(_BYTE *)v19 = v10;
  *(_QWORD *)(v19 + 8) = v11;
  *(_QWORD *)(v19 + 16) = v12;
  *(_BYTE *)(v19 + 24) = v13;
  *(_BYTE *)(v19 + 25) = v14;
  *(_QWORD *)(v19 + 32) = v24;
  *(_QWORD *)(v19 + 40) = v23;
  *(_BYTE *)(v19 + 48) = v22;
  v20 = a6 + v16[8];
  result = v27;
  *(_OWORD *)v20 = v28;
  *(__n128 *)(v20 + 16) = v27;
  *(_QWORD *)(v20 + 32) = v26;
  *(_QWORD *)(v20 + 40) = v25;
  return result;
}

uint64_t sub_1D5828204(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D582823C + 4 * byte_1D5AB5C30[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D582823C()
{
  return 0x74614464656D6974;
}

unint64_t sub_1D5828250()
{
  return 0xD000000000000017;
}

unint64_t sub_1D582826C()
{
  return 0xD000000000000021;
}

uint64_t sub_1D582828C()
{
  return 0x6E676961706D6163;
}

uint64_t sub_1D58282AC()
{
  unsigned __int8 *v0;

  return sub_1D5828204(*v0);
}

uint64_t sub_1D58282B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D582A490(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58282D8()
{
  sub_1D58285BC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5828300()
{
  sub_1D58285BC();
  return sub_1D5AAEEE0();
}

uint64_t SportsSyncSheetEngagementEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  _OWORD *v15;
  __int128 v16;
  _BYTE v18[32];
  __int128 v19;
  char v20;
  char v21;

  v3 = v1;
  sub_1D5828AA0(0, &qword_1EFF48DF0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v18[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58285BC();
  sub_1D5AAEEC8();
  v18[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for SportsSyncSheetEngagementEvent.Model(0);
    v18[0] = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v18[0] = *(_BYTE *)(v3 + v10[6]);
    v21 = 2;
    sub_1D5827B60();
    sub_1D5AAED6C();
    v11 = v3 + v10[7];
    v12 = *(_BYTE *)(v11 + 24);
    v13 = *(_BYTE *)(v11 + 25);
    v14 = *(_BYTE *)(v11 + 48);
    v18[0] = *(_BYTE *)v11;
    *(_OWORD *)&v18[8] = *(_OWORD *)(v11 + 8);
    v18[24] = v12;
    v18[25] = v13;
    v19 = *(_OWORD *)(v11 + 32);
    v20 = v14;
    v21 = 3;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v15 = (_OWORD *)(v3 + v10[8]);
    v16 = v15[1];
    *(_OWORD *)v18 = *v15;
    *(_OWORD *)&v18[16] = v16;
    v19 = v15[2];
    v21 = 4;
    sub_1D57CB460();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D58285BC()
{
  unint64_t result;

  result = qword_1EFF48DF8;
  if (!qword_1EFF48DF8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB5E54, &type metadata for SportsSyncSheetEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48DF8);
  }
  return result;
}

uint64_t SportsSyncSheetEngagementEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  _OWORD *v27;
  __int128 v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _BYTE v42[32];
  __int128 v43;
  char v44;
  char v45;

  v33 = a2;
  v3 = sub_1D5AADFB0();
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1D5AADF98();
  v5 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v37 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5828AA0(0, &qword_1EFF48E00, MEMORY[0x1E0DED048]);
  v38 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v30 - v9;
  v11 = type metadata accessor for SportsSyncSheetEngagementEvent.Model(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58285BC();
  v40 = v10;
  v14 = v41;
  sub_1D5AAEEB0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v41 = v8;
  v31 = v11;
  v32 = v5;
  v15 = (uint64_t)v13;
  v16 = (uint64_t)a1;
  v17 = v35;
  v18 = v36;
  v42[0] = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v19 = v37;
  v20 = v39;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v15, v19, v20);
  v42[0] = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v21 = v34;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v15 + *(int *)(v31 + 20), v21, v18);
  v45 = 2;
  sub_1D5827B1C();
  sub_1D5AAECD0();
  v22 = v31;
  *(_BYTE *)(v15 + *(int *)(v31 + 24)) = v42[0];
  v45 = 3;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v23 = v42[24];
  v24 = v42[25];
  v25 = v44;
  v26 = v15 + *(int *)(v22 + 28);
  *(_BYTE *)v26 = v42[0];
  *(_OWORD *)(v26 + 8) = *(_OWORD *)&v42[8];
  *(_BYTE *)(v26 + 24) = v23;
  *(_BYTE *)(v26 + 25) = v24;
  *(_OWORD *)(v26 + 32) = v43;
  *(_BYTE *)(v26 + 48) = v25;
  v45 = 4;
  sub_1D57CB41C();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v40, v38);
  v27 = (_OWORD *)(v15 + *(int *)(v22 + 32));
  v28 = *(_OWORD *)&v42[16];
  *v27 = *(_OWORD *)v42;
  v27[1] = v28;
  v27[2] = v43;
  sub_1D5828AFC(v15, v33);
  __swift_destroy_boxed_opaque_existential_1(v16);
  return sub_1D5828B40(v15);
}

void sub_1D5828AA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58285BC();
    v7 = a3(a1, &type metadata for SportsSyncSheetEngagementEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5828AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SportsSyncSheetEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5828B40(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SportsSyncSheetEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5828B7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SportsSyncSheetEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5828B90(_QWORD *a1)
{
  return SportsSyncSheetEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5828BA4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46F80, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF48DA8, a1);
}

uint64_t sub_1D5828BC8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46F88, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF48DC0, a1);
}

uint64_t sub_1D5828BEC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1EFF48DD8, (void (*)(void))sub_1D5827B1C, (void (*)(void))sub_1D5827B60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  v13 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for SportsSyncSheetEngagementEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1EFF48DD8, (void (*)(void))sub_1D5827B1C, (void (*)(void))sub_1D5827B60);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for SportsSyncSheetEngagementEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1EFF48DD8, (void (*)(void))sub_1D5827B1C, (void (*)(void))sub_1D5827B60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t initializeWithCopy for SportsSyncSheetEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF48DD8, (void (*)(void))sub_1D5827B1C, (void (*)(void))sub_1D5827B60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for SportsSyncSheetEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF48DD8, (void (*)(void))sub_1D5827B1C, (void (*)(void))sub_1D5827B60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for SportsSyncSheetEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF48DD8, (void (*)(void))sub_1D5827B1C, (void (*)(void))sub_1D5827B60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for SportsSyncSheetEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF48DD8, (void (*)(void))sub_1D5827B1C, (void (*)(void))sub_1D5827B60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsSyncSheetEngagementEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58295B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF48DD8, (void (*)(void))sub_1D5827B1C, (void (*)(void))sub_1D5827B60);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
          v8 = v16;
          v12 = *(_QWORD *)(v16 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SportsSyncSheetEngagementEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5829704(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF48DD8, (void (*)(void))sub_1D5827B1C, (void (*)(void))sub_1D5827B60);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
          v10 = v18;
          v14 = *(_QWORD *)(v18 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D582984C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1EFF48DD8, (void (*)(void))sub_1D5827B1C, (void (*)(void))sub_1D5827B60);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for SportsSyncSheetEngagementEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    *v13 = *v14;
    v15 = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
    *((_QWORD *)v13 + 2) = v15;
    *((_WORD *)v13 + 12) = *((_WORD *)v14 + 12);
    v16 = *((_QWORD *)v14 + 5);
    *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
    *((_QWORD *)v13 + 5) = v16;
    v13[48] = v14[48];
    v17 = a3[8];
    v18 = (_QWORD *)((char *)a1 + v17);
    v19 = (_QWORD *)((char *)a2 + v17);
    v20 = *(_QWORD *)((char *)a2 + v17 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20)
    {
      *v18 = *v19;
      v18[1] = v20;
      v21 = v19[3];
      v18[2] = v19[2];
      v18[3] = v21;
      v22 = v19[5];
      v18[4] = v19[4];
      v18[5] = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v24 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v24;
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
    }
  }
  return a1;
}

uint64_t destroy for SportsSyncSheetEngagementEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + *(int *)(a2 + 32) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SportsSyncSheetEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = v14;
  *(_WORD *)(v12 + 24) = *(_WORD *)(v13 + 24);
  v15 = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = v15;
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  v19 = *(_QWORD *)(a2 + v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19)
  {
    *v17 = *v18;
    v17[1] = v19;
    v20 = v18[3];
    v17[2] = v18[2];
    v17[3] = v20;
    v21 = v18[5];
    v17[4] = v18[4];
    v17[5] = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v22 = *((_OWORD *)v18 + 1);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v22;
    *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
  }
  return a1;
}

uint64_t assignWithCopy for SportsSyncSheetEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 24) = *(_BYTE *)(v13 + 24);
  *(_BYTE *)(v12 + 25) = *(_BYTE *)(v13 + 25);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  v14 = a3[8];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = *(_QWORD *)(a1 + v14 + 8);
  v18 = v16[1];
  if (v17)
  {
    if (v18)
    {
      *v15 = *v16;
      v15[1] = v16[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v15[2] = v16[2];
      v15[3] = v16[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v15[4] = v16[4];
      v15[5] = v16[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D5829E98((uint64_t)v15);
      v20 = *((_OWORD *)v16 + 1);
      v19 = *((_OWORD *)v16 + 2);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v20;
      *((_OWORD *)v15 + 2) = v19;
    }
  }
  else if (v18)
  {
    *v15 = *v16;
    v15[1] = v16[1];
    v15[2] = v16[2];
    v15[3] = v16[3];
    v15[4] = v16[4];
    v15[5] = v16[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *(_OWORD *)v16;
    v22 = *((_OWORD *)v16 + 2);
    *((_OWORD *)v15 + 1) = *((_OWORD *)v16 + 1);
    *((_OWORD *)v15 + 2) = v22;
    *(_OWORD *)v15 = v21;
  }
  return a1;
}

uint64_t sub_1D5829E98(uint64_t a1)
{
  destroy for ReferralData();
  return a1;
}

uint64_t initializeWithTake for SportsSyncSheetEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  v15 = a3[8];
  v16 = (_OWORD *)(a1 + v15);
  v17 = (_OWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v16[2] = v17[2];
  return a1;
}

uint64_t assignWithTake for SportsSyncSheetEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  v14 = *(_QWORD *)(a2 + v11 + 8);
  v15 = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 8) = v14;
  *(_QWORD *)(v12 + 16) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 24) = *(_BYTE *)(v13 + 24);
  *(_BYTE *)(v12 + 25) = *(_BYTE *)(v13 + 25);
  v16 = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  if (!*(_QWORD *)(a1 + v17 + 8))
    goto LABEL_5;
  v20 = *(_QWORD *)(v19 + 8);
  if (!v20)
  {
    sub_1D5829E98(v18);
LABEL_5:
    v23 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v23;
    *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
    return a1;
  }
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(v18 + 8) = v20;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v19 + 24);
  *(_QWORD *)(v18 + 16) = *(_QWORD *)(v19 + 16);
  *(_QWORD *)(v18 + 24) = v21;
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v19 + 40);
  *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  *(_QWORD *)(v18 + 40) = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsSyncSheetEngagementEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D582A0E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 16);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsSyncSheetEngagementEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D582A1A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 16) = a2;
  return result;
}

uint64_t sub_1D582A24C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SportsSyncSheetEngagementEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D582A338 + 4 * byte_1D5AB5C3A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D582A36C + 4 * byte_1D5AB5C35[v4]))();
}

uint64_t sub_1D582A36C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D582A374(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D582A37CLL);
  return result;
}

uint64_t sub_1D582A388(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D582A390);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D582A394(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D582A39C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsSyncSheetEngagementEvent.Model.CodingKeys()
{
  return &type metadata for SportsSyncSheetEngagementEvent.Model.CodingKeys;
}

unint64_t sub_1D582A3BC()
{
  unint64_t result;

  result = qword_1EFF48F48;
  if (!qword_1EFF48F48)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB5E2C, &type metadata for SportsSyncSheetEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48F48);
  }
  return result;
}

unint64_t sub_1D582A404()
{
  unint64_t result;

  result = qword_1EFF48F50;
  if (!qword_1EFF48F50)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB5D9C, &type metadata for SportsSyncSheetEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48F50);
  }
  return result;
}

unint64_t sub_1D582A44C()
{
  unint64_t result;

  result = qword_1EFF48F58;
  if (!qword_1EFF48F58)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB5DC4, &type metadata for SportsSyncSheetEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48F58);
  }
  return result;
}

uint64_t sub_1D582A490(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D5AED6C0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E676961706D6163 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1D582A6C8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CFB28, MEMORY[0x1E0CF8078]);
}

uint64_t static TagExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CE590, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CFB28, a1);
}

uint64_t sub_1D582A708(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CFB40, MEMORY[0x1E0CF8380]);
}

uint64_t static TagExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CFB58, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CFB40, a1);
}

uint64_t TagExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t TagExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*TagExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t TagExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for TagExposureEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for TagExposureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C9040);
}

uint64_t TagExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TagExposureEvent.timedData.modify())()
{
  type metadata accessor for TagExposureEvent(0);
  return nullsub_1;
}

uint64_t TagExposureEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TagExposureEvent.tagData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TagExposureEvent.tagData.modify())()
{
  type metadata accessor for TagExposureEvent(0);
  return nullsub_1;
}

uint64_t TagExposureEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TagExposureEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TagExposureEvent.feedPositionData.modify())()
{
  type metadata accessor for TagExposureEvent(0);
  return nullsub_1;
}

uint64_t TagExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TagExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TagExposureEvent.viewData.modify())()
{
  type metadata accessor for TagExposureEvent(0);
  return nullsub_1;
}

uint64_t TagExposureEvent.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TagExposureEvent.sectionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TagExposureEvent.sectionData.modify())()
{
  type metadata accessor for TagExposureEvent(0);
  return nullsub_1;
}

uint64_t TagExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TagExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TagExposureEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for TagExposureEvent(0);
  return nullsub_1;
}

uint64_t TagExposureEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TagExposureEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TagExposureEvent.articleData.modify())()
{
  type metadata accessor for TagExposureEvent(0);
  return nullsub_1;
}

uint64_t TagExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TagExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TagExposureEvent.feedData.modify())()
{
  type metadata accessor for TagExposureEvent(0);
  return nullsub_1;
}

uint64_t TagExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TagExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TagExposureEvent.groupData.modify())()
{
  type metadata accessor for TagExposureEvent(0);
  return nullsub_1;
}

uint64_t TagExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for TagExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v10, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v10, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v10, v23);
}

uint64_t TagExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t TagExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for TagExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for TagExposureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C8F90);
}

uint64_t TagExposureEvent.Model.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for TagExposureEvent.Model(0) + 24));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t TagExposureEvent.Model.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for TagExposureEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 28));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t TagExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for TagExposureEvent.Model(0) + 32));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t TagExposureEvent.Model.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for TagExposureEvent.Model(0) + 36));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  LOBYTE(v3) = *((_BYTE *)v3 + 24);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t TagExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for TagExposureEvent.Model(0) + 40));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t TagExposureEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[136];

  v3 = type metadata accessor for TagExposureEvent.Model(0);
  sub_1D57E4810(v1 + *(int *)(v3 + 44), (uint64_t)v5, (unint64_t *)&qword_1ED9CE420);
  sub_1D57E4810((uint64_t)v5, a1, (unint64_t *)&qword_1ED9CE420);
  return sub_1D580D964((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1D580C5CC);
}

uint64_t TagExposureEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for TagExposureEvent.Model(0) + 48));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t *TagExposureEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5[17];

  v3 = type metadata accessor for TagExposureEvent.Model(0);
  sub_1D57E4810(v1 + *(int *)(v3 + 52), (uint64_t)v5, (unint64_t *)&qword_1ED9CEEE0);
  sub_1D57E4810((uint64_t)v5, a1, (unint64_t *)&qword_1ED9CEEE0);
  return sub_1D582B584(v5);
}

uint64_t *sub_1D582B584(uint64_t *a1)
{
  sub_1D57DD650(*a1, a1[1], a1[2]);
  return a1;
}

uint64_t TagExposureEvent.Model.init(eventData:timedData:tagData:feedPositionData:viewData:sectionData:userBundleSubscriptionContextData:articleData:feedData:groupData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, int *a4@<X3>, uint64_t *a5@<X4>, __int128 *a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 *a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  __int16 v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  __int128 v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  __int128 v44;
  _BYTE v45[136];
  _BYTE v46[144];

  v14 = *a3;
  v15 = a3[1];
  v16 = *a4;
  v17 = *((_BYTE *)a4 + 4);
  v30 = a5[1];
  v31 = *a5;
  v18 = *((_WORD *)a5 + 8);
  v34 = *a6;
  v33 = *((_QWORD *)a6 + 2);
  v32 = *((_BYTE *)a6 + 24);
  v42 = *a7;
  v40 = *((_QWORD *)a7 + 2);
  v41 = *((_QWORD *)a7 + 1);
  v38 = a7[25];
  v39 = a7[24];
  v36 = *((_QWORD *)a7 + 5);
  v37 = *((_QWORD *)a7 + 4);
  v35 = a7[48];
  sub_1D57E4810(a8, (uint64_t)v45, (unint64_t *)&qword_1ED9CE420);
  v44 = *a10;
  v43 = *((_QWORD *)a10 + 2);
  sub_1D57E4810(a11, (uint64_t)v46, (unint64_t *)&qword_1ED9CEEE0);
  v19 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a9, a1, v19);
  v20 = (int *)type metadata accessor for TagExposureEvent.Model(0);
  v21 = a9 + v20[5];
  v22 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, a2, v22);
  v23 = (_QWORD *)(a9 + v20[6]);
  *v23 = v14;
  v23[1] = v15;
  v24 = a9 + v20[7];
  *(_DWORD *)v24 = v16;
  *(_BYTE *)(v24 + 4) = v17;
  v25 = a9 + v20[8];
  *(_QWORD *)v25 = v31;
  *(_QWORD *)(v25 + 8) = v30;
  *(_WORD *)(v25 + 16) = v18;
  v26 = a9 + v20[9];
  *(_OWORD *)v26 = v34;
  *(_QWORD *)(v26 + 16) = v33;
  *(_BYTE *)(v26 + 24) = v32;
  v27 = a9 + v20[10];
  *(_BYTE *)v27 = v42;
  *(_QWORD *)(v27 + 8) = v41;
  *(_QWORD *)(v27 + 16) = v40;
  *(_BYTE *)(v27 + 24) = v39;
  *(_BYTE *)(v27 + 25) = v38;
  *(_QWORD *)(v27 + 32) = v37;
  *(_QWORD *)(v27 + 40) = v36;
  *(_BYTE *)(v27 + 48) = v35;
  sub_1D57E4810((uint64_t)v45, a9 + v20[11], (unint64_t *)&qword_1ED9CE420);
  v28 = a9 + v20[12];
  *(_OWORD *)v28 = v44;
  *(_QWORD *)(v28 + 16) = v43;
  return sub_1D57E4810((uint64_t)v46, a9 + v20[13], (unint64_t *)&qword_1ED9CEEE0);
}

uint64_t sub_1D582B81C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D582B854 + 4 * byte_1D5AB5EB0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D582B854()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D582B868()
{
  return 0x61746144676174;
}

unint64_t sub_1D582B880()
{
  return 0xD000000000000010;
}

uint64_t sub_1D582B89C()
{
  return 0x6174614477656976;
}

uint64_t sub_1D582B918()
{
  return 0x74614470756F7267;
}

uint64_t sub_1D582B92C()
{
  unsigned __int8 *v0;

  return sub_1D582B81C(*v0);
}

uint64_t sub_1D582B934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D582FCDC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D582B958(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1D582B964()
{
  sub_1D582BE38();
  return sub_1D5AAEED4();
}

uint64_t sub_1D582B98C()
{
  sub_1D582BE38();
  return sub_1D5AAEEE0();
}

uint64_t TagExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  int v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  __int128 *v26;
  uint64_t v27;
  _BYTE v29[8];
  char v30[136];
  __int128 v31;
  uint64_t v32;
  char v33;
  char v34;
  __int128 v35;
  uint64_t v36;
  _BYTE v37[144];
  __int128 v38;
  char v39;
  char v40;
  __int128 v41;
  char v42;

  v3 = v1;
  sub_1D582C6AC(0, &qword_1EFF48F60, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v29[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D582BE38();
  sub_1D5AAEEC8();
  LOBYTE(v31) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for TagExposureEvent.Model(0);
    LOBYTE(v31) = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = (uint64_t *)(v3 + v10[6]);
    v13 = *v11;
    v12 = v11[1];
    *(_QWORD *)&v31 = v13;
    *((_QWORD *)&v31 + 1) = v12;
    v30[0] = 2;
    sub_1D57C6738();
    sub_1D5AAED6C();
    v14 = (int *)(v3 + v10[7]);
    v15 = *v14;
    LOBYTE(v14) = *((_BYTE *)v14 + 4);
    LODWORD(v31) = v15;
    BYTE4(v31) = (_BYTE)v14;
    v30[0] = 3;
    sub_1D57C9C4C();
    sub_1D5AAED18();
    v16 = (uint64_t *)(v3 + v10[8]);
    v17 = *v16;
    v18 = v16[1];
    LOWORD(v16) = *((_WORD *)v16 + 8);
    *(_QWORD *)&v31 = v17;
    *((_QWORD *)&v31 + 1) = v18;
    LOWORD(v32) = (_WORD)v16;
    v30[0] = 4;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v19 = (__int128 *)(v3 + v10[9]);
    v20 = *v19;
    v21 = *((_QWORD *)v19 + 2);
    LOBYTE(v19) = *((_BYTE *)v19 + 24);
    v31 = v20;
    v32 = v21;
    v33 = (char)v19;
    v30[0] = 5;
    sub_1D57CB720();
    sub_1D5AAED6C();
    v22 = v3 + v10[10];
    v23 = *(_BYTE *)(v22 + 24);
    v24 = *(_BYTE *)(v22 + 25);
    v25 = *(_BYTE *)(v22 + 48);
    v37[136] = *(_BYTE *)v22;
    v38 = *(_OWORD *)(v22 + 8);
    v39 = v23;
    v40 = v24;
    v41 = *(_OWORD *)(v22 + 32);
    v42 = v25;
    v37[135] = 6;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    sub_1D57E4810(v3 + v10[11], (uint64_t)v37, (unint64_t *)&qword_1ED9CE420);
    sub_1D57E4810((uint64_t)v37, (uint64_t)&v31, (unint64_t *)&qword_1ED9CE420);
    v30[0] = 7;
    sub_1D57CB940();
    sub_1D5AAED18();
    v26 = (__int128 *)(v3 + v10[12]);
    v27 = *((_QWORD *)v26 + 2);
    v35 = *v26;
    v36 = v27;
    v34 = 8;
    sub_1D57C65D4();
    sub_1D5AAED18();
    sub_1D57E4810(v3 + v10[13], (uint64_t)&v31, (unint64_t *)&qword_1ED9CEEE0);
    sub_1D57E4810((uint64_t)&v31, (uint64_t)v30, (unint64_t *)&qword_1ED9CEEE0);
    v29[7] = 9;
    sub_1D57C5FEC();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D582BE38()
{
  unint64_t result;

  result = qword_1ED9CFB60;
  if (!qword_1ED9CFB60)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB618C, &type metadata for TagExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CFB60);
  }
  return result;
}

uint64_t TagExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char v20;
  char *v21;
  uint64_t v22;
  __int16 v23;
  char *v24;
  uint64_t v25;
  char v26;
  char *v27;
  char v28;
  char v29;
  char v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _BYTE v47[136];
  _BYTE v48[24];
  char v49;
  char v50;
  __int128 v51;
  char v52;
  _BYTE v53[136];
  _BYTE v54[160];

  v36 = a2;
  v42 = sub_1D5AADFB0();
  v40 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D5AADF98();
  v41 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D582C6AC(0, &qword_1ED9CE740, MEMORY[0x1E0DED048]);
  v37 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v36 - v10;
  v45 = type metadata accessor for TagExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v45);
  v46 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1D582BE38();
  v39 = v11;
  v14 = v44;
  sub_1D5AAEEB0();
  v38 = v5;
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  v44 = v9;
  v48[0] = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v15 = v46;
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v46, v7, v5);
  v48[0] = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v16 = v42;
  sub_1D5AAECD0();
  v17 = (int *)v45;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(&v15[*(int *)(v45 + 20)], v4, v16);
  v47[0] = 2;
  sub_1D57C66F4();
  sub_1D5AAECD0();
  v18 = *(_QWORD *)&v48[8];
  v19 = &v15[v17[6]];
  *(_QWORD *)v19 = *(_QWORD *)v48;
  *((_QWORD *)v19 + 1) = v18;
  v47[0] = 3;
  sub_1D57C9C08();
  sub_1D5AAEC7C();
  v20 = v48[4];
  v21 = &v15[v17[7]];
  *(_DWORD *)v21 = *(_DWORD *)v48;
  v21[4] = v20;
  v47[0] = 4;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v22 = *(_QWORD *)&v48[8];
  v23 = *(_WORD *)&v48[16];
  v24 = &v15[v17[8]];
  *(_QWORD *)v24 = *(_QWORD *)v48;
  *((_QWORD *)v24 + 1) = v22;
  *((_WORD *)v24 + 8) = v23;
  v47[0] = 5;
  sub_1D57CB6DC();
  sub_1D5AAECD0();
  v25 = *(_QWORD *)&v48[16];
  v26 = v49;
  v27 = &v15[v17[9]];
  *(_OWORD *)v27 = *(_OWORD *)v48;
  *((_QWORD *)v27 + 2) = v25;
  v27[24] = v26;
  v47[0] = 6;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v28 = v49;
  v29 = v50;
  v30 = v52;
  v31 = &v15[v17[10]];
  *v31 = v48[0];
  *(_OWORD *)(v31 + 8) = *(_OWORD *)&v48[8];
  v31[24] = v28;
  v31[25] = v29;
  *((_OWORD *)v31 + 2) = v51;
  v31[48] = v30;
  v54[159] = 7;
  sub_1D57CB8FC();
  sub_1D5AAEC7C();
  sub_1D57E4810((uint64_t)v54, (uint64_t)v53, (unint64_t *)&qword_1ED9CE420);
  sub_1D57E4810((uint64_t)v53, (uint64_t)&v15[v17[11]], (unint64_t *)&qword_1ED9CE420);
  v47[0] = 8;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v32 = *(_QWORD *)&v48[16];
  v33 = &v15[v17[12]];
  *(_OWORD *)v33 = *(_OWORD *)v48;
  *((_QWORD *)v33 + 2) = v32;
  v54[158] = 9;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v39, v37);
  sub_1D57E4810((uint64_t)v48, (uint64_t)v47, (unint64_t *)&qword_1ED9CEEE0);
  v34 = (uint64_t)v46;
  sub_1D57E4810((uint64_t)v47, (uint64_t)&v46[*(int *)(v45 + 52)], (unint64_t *)&qword_1ED9CEEE0);
  sub_1D582C708(v34, v36);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  return sub_1D582C74C(v34);
}

void sub_1D582C6AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D582BE38();
    v7 = a3(a1, &type metadata for TagExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D582C708(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TagExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D582C74C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TagExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D582C788@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TagExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D582C79C(_QWORD *a1)
{
  return TagExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D582C7B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CE590, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CFB28, a1);
}

uint64_t sub_1D582C7D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CFB58, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CFB40, a1);
}

uint64_t sub_1D582C7F8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v11, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v11, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v11, v24);
}

uint64_t *initializeBufferWithCopyOfBuffer for TagExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for TagExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
}

uint64_t initializeWithCopy for TagExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for TagExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for TagExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for TagExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for TagExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D582DBF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
                    v8 = v21;
                    v12 = *(_QWORD *)(v21 - 8);
                    v13 = a3[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for TagExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D582DE94(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
                    v10 = v23;
                    v14 = *(_QWORD *)(v23 - 8);
                    v15 = a4[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D582E130()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
                    if (v9 <= 0x3F)
                      swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TagExposureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v39 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v39 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (uint64_t *)((char *)a1 + v12);
    v15 = (uint64_t *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = (char *)a1 + v13;
    v18 = (char *)a2 + v13;
    *(_DWORD *)v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    v19 = a3[8];
    v20 = a3[9];
    v21 = (char *)a1 + v19;
    v22 = (char *)a2 + v19;
    v23 = *((_QWORD *)v22 + 1);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = v23;
    v21[16] = v22[16];
    v21[17] = v22[17];
    v24 = (char *)a1 + v20;
    v25 = (char *)a2 + v20;
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
    v24[24] = v25[24];
    v27 = a3[10];
    v28 = a3[11];
    v29 = (char *)a1 + v27;
    v30 = (char *)a2 + v27;
    *v29 = *v30;
    v31 = *((_QWORD *)v30 + 2);
    *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
    *((_QWORD *)v29 + 2) = v31;
    v29[24] = v30[24];
    v29[25] = v30[25];
    v32 = *((_QWORD *)v30 + 5);
    *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
    *((_QWORD *)v29 + 5) = v32;
    v29[48] = v30[48];
    v33 = (char *)a1 + v28;
    v34 = (char *)a2 + v28;
    v35 = *(uint64_t *)((char *)a2 + v28 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v35)
    {
      *(_QWORD *)v33 = *(_QWORD *)v34;
      v33[8] = v34[8];
      *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
      *((_QWORD *)v33 + 3) = v35;
      v33[32] = v34[32];
      v36 = *((_QWORD *)v34 + 6);
      *((_QWORD *)v33 + 5) = *((_QWORD *)v34 + 5);
      *((_QWORD *)v33 + 6) = v36;
      *((_WORD *)v33 + 28) = *((_WORD *)v34 + 28);
      v38 = *((_QWORD *)v34 + 8);
      v37 = *((_QWORD *)v34 + 9);
      v33[80] = v34[80];
      *((_QWORD *)v33 + 8) = v38;
      *((_QWORD *)v33 + 9) = v37;
      *(_OWORD *)(v33 + 88) = *(_OWORD *)(v34 + 88);
      *((_QWORD *)v33 + 13) = *((_QWORD *)v34 + 13);
      v33[112] = v34[112];
      *((_QWORD *)v33 + 15) = *((_QWORD *)v34 + 15);
      *((_DWORD *)v33 + 32) = *((_DWORD *)v34 + 32);
      v33[132] = v34[132];
      *(_WORD *)(v33 + 133) = *(_WORD *)(v34 + 133);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v40 = *((_OWORD *)v34 + 7);
      *((_OWORD *)v33 + 6) = *((_OWORD *)v34 + 6);
      *((_OWORD *)v33 + 7) = v40;
      *(_QWORD *)(v33 + 127) = *(_QWORD *)(v34 + 127);
      v41 = *((_OWORD *)v34 + 3);
      *((_OWORD *)v33 + 2) = *((_OWORD *)v34 + 2);
      *((_OWORD *)v33 + 3) = v41;
      v42 = *((_OWORD *)v34 + 5);
      *((_OWORD *)v33 + 4) = *((_OWORD *)v34 + 4);
      *((_OWORD *)v33 + 5) = v42;
      v43 = *((_OWORD *)v34 + 1);
      *(_OWORD *)v33 = *(_OWORD *)v34;
      *((_OWORD *)v33 + 1) = v43;
    }
    v44 = a3[12];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    v47 = *((_QWORD *)v46 + 2);
    if (v47 == 1)
    {
      *(_OWORD *)v45 = *(_OWORD *)v46;
      *((_QWORD *)v45 + 2) = *((_QWORD *)v46 + 2);
    }
    else
    {
      *v45 = *v46;
      *((_QWORD *)v45 + 1) = *((_QWORD *)v46 + 1);
      *((_QWORD *)v45 + 2) = v47;
      swift_bridgeObjectRetain();
    }
    v48 = a3[13];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    v51 = *((_QWORD *)v50 + 2);
    if (v51)
    {
      *(_WORD *)v49 = *(_WORD *)v50;
      *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
      *((_QWORD *)v49 + 2) = v51;
      *((_QWORD *)v49 + 3) = *((_QWORD *)v50 + 3);
      v52 = *((_QWORD *)v50 + 5);
      *((_QWORD *)v49 + 4) = *((_QWORD *)v50 + 4);
      *((_QWORD *)v49 + 5) = v52;
      v53 = *((_QWORD *)v50 + 7);
      *((_QWORD *)v49 + 6) = *((_QWORD *)v50 + 6);
      *((_QWORD *)v49 + 7) = v53;
      v54 = *((_QWORD *)v50 + 9);
      *((_QWORD *)v49 + 8) = *((_QWORD *)v50 + 8);
      *((_QWORD *)v49 + 9) = v54;
      v49[80] = v50[80];
      v55 = *((_QWORD *)v50 + 12);
      *((_QWORD *)v49 + 11) = *((_QWORD *)v50 + 11);
      *((_QWORD *)v49 + 12) = v55;
      *((_QWORD *)v49 + 13) = *((_QWORD *)v50 + 13);
      v49[112] = v50[112];
      v56 = *((_QWORD *)v50 + 16);
      *((_QWORD *)v49 + 15) = *((_QWORD *)v50 + 15);
      *((_QWORD *)v49 + 16) = v56;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v57 = *((_OWORD *)v50 + 7);
      *((_OWORD *)v49 + 6) = *((_OWORD *)v50 + 6);
      *((_OWORD *)v49 + 7) = v57;
      *((_QWORD *)v49 + 16) = *((_QWORD *)v50 + 16);
      v58 = *((_OWORD *)v50 + 3);
      *((_OWORD *)v49 + 2) = *((_OWORD *)v50 + 2);
      *((_OWORD *)v49 + 3) = v58;
      v59 = *((_OWORD *)v50 + 5);
      *((_OWORD *)v49 + 4) = *((_OWORD *)v50 + 4);
      *((_OWORD *)v49 + 5) = v59;
      v60 = *((_OWORD *)v50 + 1);
      *(_OWORD *)v49 = *(_OWORD *)v50;
      *((_OWORD *)v49 + 1) = v60;
    }
  }
  return a1;
}

uint64_t destroy for TagExposureEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[11] + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[12] + 16) != 1)
    swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + a2[13] + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for TagExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = a1 + v12;
  v17 = a2 + v12;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  v18 = a3[8];
  v19 = a3[9];
  v20 = a1 + v18;
  v21 = a2 + v18;
  v22 = *(_QWORD *)(v21 + 8);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_QWORD *)(v20 + 8) = v22;
  *(_BYTE *)(v20 + 16) = *(_BYTE *)(v21 + 16);
  *(_BYTE *)(v20 + 17) = *(_BYTE *)(v21 + 17);
  v23 = a1 + v19;
  v24 = a2 + v19;
  v25 = *(_QWORD *)(v24 + 8);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_QWORD *)(v23 + 8) = v25;
  *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
  *(_BYTE *)(v23 + 24) = *(_BYTE *)(v24 + 24);
  v26 = a3[10];
  v27 = a3[11];
  v28 = a1 + v26;
  v29 = a2 + v26;
  *(_BYTE *)v28 = *(_BYTE *)v29;
  v30 = *(_QWORD *)(v29 + 16);
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
  *(_QWORD *)(v28 + 16) = v30;
  *(_BYTE *)(v28 + 24) = *(_BYTE *)(v29 + 24);
  *(_BYTE *)(v28 + 25) = *(_BYTE *)(v29 + 25);
  v31 = *(_QWORD *)(v29 + 40);
  *(_QWORD *)(v28 + 32) = *(_QWORD *)(v29 + 32);
  *(_QWORD *)(v28 + 40) = v31;
  *(_BYTE *)(v28 + 48) = *(_BYTE *)(v29 + 48);
  v32 = a1 + v27;
  v33 = a2 + v27;
  v34 = *(_QWORD *)(a2 + v27 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v34)
  {
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *(_BYTE *)(v32 + 8) = *(_BYTE *)(v33 + 8);
    *(_QWORD *)(v32 + 16) = *(_QWORD *)(v33 + 16);
    *(_QWORD *)(v32 + 24) = v34;
    *(_BYTE *)(v32 + 32) = *(_BYTE *)(v33 + 32);
    v35 = *(_QWORD *)(v33 + 48);
    *(_QWORD *)(v32 + 40) = *(_QWORD *)(v33 + 40);
    *(_QWORD *)(v32 + 48) = v35;
    *(_WORD *)(v32 + 56) = *(_WORD *)(v33 + 56);
    v37 = *(_QWORD *)(v33 + 64);
    v36 = *(_QWORD *)(v33 + 72);
    *(_BYTE *)(v32 + 80) = *(_BYTE *)(v33 + 80);
    *(_QWORD *)(v32 + 64) = v37;
    *(_QWORD *)(v32 + 72) = v36;
    *(_OWORD *)(v32 + 88) = *(_OWORD *)(v33 + 88);
    *(_QWORD *)(v32 + 104) = *(_QWORD *)(v33 + 104);
    *(_BYTE *)(v32 + 112) = *(_BYTE *)(v33 + 112);
    *(_QWORD *)(v32 + 120) = *(_QWORD *)(v33 + 120);
    *(_DWORD *)(v32 + 128) = *(_DWORD *)(v33 + 128);
    *(_BYTE *)(v32 + 132) = *(_BYTE *)(v33 + 132);
    *(_WORD *)(v32 + 133) = *(_WORD *)(v33 + 133);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v38 = *(_OWORD *)(v33 + 112);
    *(_OWORD *)(v32 + 96) = *(_OWORD *)(v33 + 96);
    *(_OWORD *)(v32 + 112) = v38;
    *(_QWORD *)(v32 + 127) = *(_QWORD *)(v33 + 127);
    v39 = *(_OWORD *)(v33 + 48);
    *(_OWORD *)(v32 + 32) = *(_OWORD *)(v33 + 32);
    *(_OWORD *)(v32 + 48) = v39;
    v40 = *(_OWORD *)(v33 + 80);
    *(_OWORD *)(v32 + 64) = *(_OWORD *)(v33 + 64);
    *(_OWORD *)(v32 + 80) = v40;
    v41 = *(_OWORD *)(v33 + 16);
    *(_OWORD *)v32 = *(_OWORD *)v33;
    *(_OWORD *)(v32 + 16) = v41;
  }
  v42 = a3[12];
  v43 = a1 + v42;
  v44 = a2 + v42;
  v45 = *(_QWORD *)(v44 + 16);
  if (v45 == 1)
  {
    *(_OWORD *)v43 = *(_OWORD *)v44;
    *(_QWORD *)(v43 + 16) = *(_QWORD *)(v44 + 16);
  }
  else
  {
    *(_BYTE *)v43 = *(_BYTE *)v44;
    *(_QWORD *)(v43 + 8) = *(_QWORD *)(v44 + 8);
    *(_QWORD *)(v43 + 16) = v45;
    swift_bridgeObjectRetain();
  }
  v46 = a3[13];
  v47 = a1 + v46;
  v48 = a2 + v46;
  v49 = *(_QWORD *)(v48 + 16);
  if (v49)
  {
    *(_WORD *)v47 = *(_WORD *)v48;
    *(_QWORD *)(v47 + 8) = *(_QWORD *)(v48 + 8);
    *(_QWORD *)(v47 + 16) = v49;
    *(_QWORD *)(v47 + 24) = *(_QWORD *)(v48 + 24);
    v50 = *(_QWORD *)(v48 + 40);
    *(_QWORD *)(v47 + 32) = *(_QWORD *)(v48 + 32);
    *(_QWORD *)(v47 + 40) = v50;
    v51 = *(_QWORD *)(v48 + 56);
    *(_QWORD *)(v47 + 48) = *(_QWORD *)(v48 + 48);
    *(_QWORD *)(v47 + 56) = v51;
    v52 = *(_QWORD *)(v48 + 72);
    *(_QWORD *)(v47 + 64) = *(_QWORD *)(v48 + 64);
    *(_QWORD *)(v47 + 72) = v52;
    *(_BYTE *)(v47 + 80) = *(_BYTE *)(v48 + 80);
    v53 = *(_QWORD *)(v48 + 96);
    *(_QWORD *)(v47 + 88) = *(_QWORD *)(v48 + 88);
    *(_QWORD *)(v47 + 96) = v53;
    *(_QWORD *)(v47 + 104) = *(_QWORD *)(v48 + 104);
    *(_BYTE *)(v47 + 112) = *(_BYTE *)(v48 + 112);
    v54 = *(_QWORD *)(v48 + 128);
    *(_QWORD *)(v47 + 120) = *(_QWORD *)(v48 + 120);
    *(_QWORD *)(v47 + 128) = v54;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v55 = *(_OWORD *)(v48 + 112);
    *(_OWORD *)(v47 + 96) = *(_OWORD *)(v48 + 96);
    *(_OWORD *)(v47 + 112) = v55;
    *(_QWORD *)(v47 + 128) = *(_QWORD *)(v48 + 128);
    v56 = *(_OWORD *)(v48 + 48);
    *(_OWORD *)(v47 + 32) = *(_OWORD *)(v48 + 32);
    *(_OWORD *)(v47 + 48) = v56;
    v57 = *(_OWORD *)(v48 + 80);
    *(_OWORD *)(v47 + 64) = *(_OWORD *)(v48 + 64);
    *(_OWORD *)(v47 + 80) = v57;
    v58 = *(_OWORD *)(v48 + 16);
    *(_OWORD *)v47 = *(_OWORD *)v48;
    *(_OWORD *)(v47 + 16) = v58;
  }
  return a1;
}

uint64_t assignWithCopy for TagExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  __int128 *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = (int *)(a2 + v14);
  v17 = *v16;
  *(_BYTE *)(v15 + 4) = *((_BYTE *)v16 + 4);
  *(_DWORD *)v15 = v17;
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_QWORD *)v19 = *(_QWORD *)(a2 + v18);
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(a2 + v18 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v19 + 16) = *(_BYTE *)(v20 + 16);
  *(_BYTE *)(v19 + 17) = *(_BYTE *)(v20 + 17);
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_QWORD *)v22 = *(_QWORD *)(a2 + v21);
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(a2 + v21 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(v23 + 16);
  *(_BYTE *)(v22 + 24) = *(_BYTE *)(v23 + 24);
  *(_QWORD *)(v22 + 16) = v24;
  v25 = a3[10];
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_BYTE *)v26 = *(_BYTE *)(a2 + v25);
  *(_QWORD *)(v26 + 8) = *(_QWORD *)(a2 + v25 + 8);
  *(_QWORD *)(v26 + 16) = *(_QWORD *)(a2 + v25 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v26 + 24) = *(_BYTE *)(v27 + 24);
  *(_BYTE *)(v26 + 25) = *(_BYTE *)(v27 + 25);
  *(_QWORD *)(v26 + 32) = *(_QWORD *)(v27 + 32);
  *(_QWORD *)(v26 + 40) = *(_QWORD *)(v27 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v26 + 48) = *(_BYTE *)(v27 + 48);
  v28 = a3[11];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = *(_QWORD *)(a1 + v28 + 24);
  v32 = *(_QWORD *)(a2 + v28 + 24);
  if (v31)
  {
    if (v32)
    {
      *(_BYTE *)v29 = *(_BYTE *)v30;
      *(_DWORD *)(v29 + 4) = *(_DWORD *)(v30 + 4);
      *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
      *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
      *(_QWORD *)(v29 + 24) = *(_QWORD *)(v30 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v29 + 32) = *(_BYTE *)(v30 + 32);
      *(_QWORD *)(v29 + 40) = *(_QWORD *)(v30 + 40);
      v33 = *(_QWORD *)(v30 + 48);
      *(_BYTE *)(v29 + 56) = *(_BYTE *)(v30 + 56);
      *(_QWORD *)(v29 + 48) = v33;
      *(_BYTE *)(v29 + 57) = *(_BYTE *)(v30 + 57);
      *(_QWORD *)(v29 + 64) = *(_QWORD *)(v30 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v34 = *(_QWORD *)(v30 + 72);
      *(_BYTE *)(v29 + 80) = *(_BYTE *)(v30 + 80);
      *(_QWORD *)(v29 + 72) = v34;
      *(_QWORD *)(v29 + 88) = *(_QWORD *)(v30 + 88);
      *(_QWORD *)(v29 + 96) = *(_QWORD *)(v30 + 96);
      *(_QWORD *)(v29 + 104) = *(_QWORD *)(v30 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v29 + 112) = *(_BYTE *)(v30 + 112);
      *(_QWORD *)(v29 + 120) = *(_QWORD *)(v30 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v29 + 128) = *(_BYTE *)(v30 + 128);
      *(_BYTE *)(v29 + 129) = *(_BYTE *)(v30 + 129);
      *(_BYTE *)(v29 + 130) = *(_BYTE *)(v30 + 130);
      *(_BYTE *)(v29 + 131) = *(_BYTE *)(v30 + 131);
      *(_BYTE *)(v29 + 132) = *(_BYTE *)(v30 + 132);
      *(_BYTE *)(v29 + 133) = *(_BYTE *)(v30 + 133);
      *(_BYTE *)(v29 + 134) = *(_BYTE *)(v30 + 134);
    }
    else
    {
      sub_1D5810518(v29);
      *(_OWORD *)v29 = *(_OWORD *)v30;
      v37 = *(_OWORD *)(v30 + 64);
      v39 = *(_OWORD *)(v30 + 16);
      v38 = *(_OWORD *)(v30 + 32);
      *(_OWORD *)(v29 + 48) = *(_OWORD *)(v30 + 48);
      *(_OWORD *)(v29 + 64) = v37;
      *(_OWORD *)(v29 + 16) = v39;
      *(_OWORD *)(v29 + 32) = v38;
      v41 = *(_OWORD *)(v30 + 96);
      v40 = *(_OWORD *)(v30 + 112);
      v42 = *(_OWORD *)(v30 + 80);
      *(_QWORD *)(v29 + 127) = *(_QWORD *)(v30 + 127);
      *(_OWORD *)(v29 + 96) = v41;
      *(_OWORD *)(v29 + 112) = v40;
      *(_OWORD *)(v29 + 80) = v42;
    }
  }
  else if (v32)
  {
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
    *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
    *(_QWORD *)(v29 + 24) = *(_QWORD *)(v30 + 24);
    *(_BYTE *)(v29 + 32) = *(_BYTE *)(v30 + 32);
    *(_QWORD *)(v29 + 40) = *(_QWORD *)(v30 + 40);
    v35 = *(_QWORD *)(v30 + 48);
    *(_BYTE *)(v29 + 56) = *(_BYTE *)(v30 + 56);
    *(_QWORD *)(v29 + 48) = v35;
    *(_BYTE *)(v29 + 57) = *(_BYTE *)(v30 + 57);
    *(_QWORD *)(v29 + 64) = *(_QWORD *)(v30 + 64);
    v36 = *(_QWORD *)(v30 + 72);
    *(_BYTE *)(v29 + 80) = *(_BYTE *)(v30 + 80);
    *(_QWORD *)(v29 + 72) = v36;
    *(_QWORD *)(v29 + 88) = *(_QWORD *)(v30 + 88);
    *(_QWORD *)(v29 + 96) = *(_QWORD *)(v30 + 96);
    *(_QWORD *)(v29 + 104) = *(_QWORD *)(v30 + 104);
    *(_BYTE *)(v29 + 112) = *(_BYTE *)(v30 + 112);
    *(_QWORD *)(v29 + 120) = *(_QWORD *)(v30 + 120);
    *(_BYTE *)(v29 + 128) = *(_BYTE *)(v30 + 128);
    *(_BYTE *)(v29 + 129) = *(_BYTE *)(v30 + 129);
    *(_BYTE *)(v29 + 130) = *(_BYTE *)(v30 + 130);
    *(_BYTE *)(v29 + 131) = *(_BYTE *)(v30 + 131);
    *(_BYTE *)(v29 + 132) = *(_BYTE *)(v30 + 132);
    *(_BYTE *)(v29 + 133) = *(_BYTE *)(v30 + 133);
    *(_BYTE *)(v29 + 134) = *(_BYTE *)(v30 + 134);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v29 = *(_OWORD *)v30;
    v43 = *(_OWORD *)(v30 + 16);
    v44 = *(_OWORD *)(v30 + 32);
    v45 = *(_OWORD *)(v30 + 64);
    *(_OWORD *)(v29 + 48) = *(_OWORD *)(v30 + 48);
    *(_OWORD *)(v29 + 64) = v45;
    *(_OWORD *)(v29 + 16) = v43;
    *(_OWORD *)(v29 + 32) = v44;
    v46 = *(_OWORD *)(v30 + 80);
    v47 = *(_OWORD *)(v30 + 96);
    v48 = *(_OWORD *)(v30 + 112);
    *(_QWORD *)(v29 + 127) = *(_QWORD *)(v30 + 127);
    *(_OWORD *)(v29 + 96) = v47;
    *(_OWORD *)(v29 + 112) = v48;
    *(_OWORD *)(v29 + 80) = v46;
  }
  v49 = a3[12];
  v50 = a1 + v49;
  v51 = (__int128 *)(a2 + v49);
  v52 = *(_QWORD *)(a1 + v49 + 16);
  v53 = *(_QWORD *)(a2 + v49 + 16);
  if (v52 == 1)
  {
    if (v53 == 1)
    {
      v54 = *v51;
      *(_QWORD *)(v50 + 16) = *((_QWORD *)v51 + 2);
      *(_OWORD *)v50 = v54;
    }
    else
    {
      *(_BYTE *)v50 = *(_BYTE *)v51;
      *(_QWORD *)(v50 + 8) = *((_QWORD *)v51 + 1);
      *(_QWORD *)(v50 + 16) = *((_QWORD *)v51 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v53 == 1)
  {
    sub_1D57D9100(v50);
    v55 = *((_QWORD *)v51 + 2);
    *(_OWORD *)v50 = *v51;
    *(_QWORD *)(v50 + 16) = v55;
  }
  else
  {
    *(_BYTE *)v50 = *(_BYTE *)v51;
    *(_QWORD *)(v50 + 8) = *((_QWORD *)v51 + 1);
    *(_QWORD *)(v50 + 16) = *((_QWORD *)v51 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v56 = a3[13];
  v57 = a1 + v56;
  v58 = a2 + v56;
  v59 = *(_QWORD *)(a1 + v56 + 16);
  v60 = *(_QWORD *)(v58 + 16);
  if (v59)
  {
    if (v60)
    {
      *(_BYTE *)v57 = *(_BYTE *)v58;
      *(_BYTE *)(v57 + 1) = *(_BYTE *)(v58 + 1);
      *(_QWORD *)(v57 + 8) = *(_QWORD *)(v58 + 8);
      *(_QWORD *)(v57 + 16) = *(_QWORD *)(v58 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v57 + 24) = *(_DWORD *)(v58 + 24);
      *(_DWORD *)(v57 + 28) = *(_DWORD *)(v58 + 28);
      *(_QWORD *)(v57 + 32) = *(_QWORD *)(v58 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v57 + 40) = *(_QWORD *)(v58 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v57 + 48) = *(_QWORD *)(v58 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v57 + 56) = *(_QWORD *)(v58 + 56);
      *(_QWORD *)(v57 + 64) = *(_QWORD *)(v58 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v57 + 72) = *(_QWORD *)(v58 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v57 + 80) = *(_BYTE *)(v58 + 80);
      *(_QWORD *)(v57 + 88) = *(_QWORD *)(v58 + 88);
      *(_QWORD *)(v57 + 96) = *(_QWORD *)(v58 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v61 = *(_QWORD *)(v58 + 104);
      *(_BYTE *)(v57 + 112) = *(_BYTE *)(v58 + 112);
      *(_QWORD *)(v57 + 104) = v61;
      *(_QWORD *)(v57 + 120) = *(_QWORD *)(v58 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v57 + 128) = *(_QWORD *)(v58 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v57);
      *(_OWORD *)v57 = *(_OWORD *)v58;
      v63 = *(_OWORD *)(v58 + 64);
      v65 = *(_OWORD *)(v58 + 16);
      v64 = *(_OWORD *)(v58 + 32);
      *(_OWORD *)(v57 + 48) = *(_OWORD *)(v58 + 48);
      *(_OWORD *)(v57 + 64) = v63;
      *(_OWORD *)(v57 + 16) = v65;
      *(_OWORD *)(v57 + 32) = v64;
      v67 = *(_OWORD *)(v58 + 96);
      v66 = *(_OWORD *)(v58 + 112);
      v68 = *(_OWORD *)(v58 + 80);
      *(_QWORD *)(v57 + 128) = *(_QWORD *)(v58 + 128);
      *(_OWORD *)(v57 + 96) = v67;
      *(_OWORD *)(v57 + 112) = v66;
      *(_OWORD *)(v57 + 80) = v68;
    }
  }
  else if (v60)
  {
    *(_BYTE *)v57 = *(_BYTE *)v58;
    *(_BYTE *)(v57 + 1) = *(_BYTE *)(v58 + 1);
    *(_QWORD *)(v57 + 8) = *(_QWORD *)(v58 + 8);
    *(_QWORD *)(v57 + 16) = *(_QWORD *)(v58 + 16);
    *(_DWORD *)(v57 + 24) = *(_DWORD *)(v58 + 24);
    *(_DWORD *)(v57 + 28) = *(_DWORD *)(v58 + 28);
    *(_QWORD *)(v57 + 32) = *(_QWORD *)(v58 + 32);
    *(_QWORD *)(v57 + 40) = *(_QWORD *)(v58 + 40);
    *(_QWORD *)(v57 + 48) = *(_QWORD *)(v58 + 48);
    *(_QWORD *)(v57 + 56) = *(_QWORD *)(v58 + 56);
    *(_QWORD *)(v57 + 64) = *(_QWORD *)(v58 + 64);
    *(_QWORD *)(v57 + 72) = *(_QWORD *)(v58 + 72);
    *(_BYTE *)(v57 + 80) = *(_BYTE *)(v58 + 80);
    *(_QWORD *)(v57 + 88) = *(_QWORD *)(v58 + 88);
    *(_QWORD *)(v57 + 96) = *(_QWORD *)(v58 + 96);
    v62 = *(_QWORD *)(v58 + 104);
    *(_BYTE *)(v57 + 112) = *(_BYTE *)(v58 + 112);
    *(_QWORD *)(v57 + 104) = v62;
    *(_QWORD *)(v57 + 120) = *(_QWORD *)(v58 + 120);
    *(_QWORD *)(v57 + 128) = *(_QWORD *)(v58 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v57 = *(_OWORD *)v58;
    v69 = *(_OWORD *)(v58 + 16);
    v70 = *(_OWORD *)(v58 + 32);
    v71 = *(_OWORD *)(v58 + 64);
    *(_OWORD *)(v57 + 48) = *(_OWORD *)(v58 + 48);
    *(_OWORD *)(v57 + 64) = v71;
    *(_OWORD *)(v57 + 16) = v69;
    *(_OWORD *)(v57 + 32) = v70;
    v72 = *(_OWORD *)(v58 + 80);
    v73 = *(_OWORD *)(v58 + 96);
    v74 = *(_OWORD *)(v58 + 112);
    *(_QWORD *)(v57 + 128) = *(_QWORD *)(v58 + 128);
    *(_OWORD *)(v57 + 96) = v73;
    *(_OWORD *)(v57 + 112) = v74;
    *(_OWORD *)(v57 + 80) = v72;
  }
  return a1;
}

uint64_t initializeWithTake for TagExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v14 = a3[8];
  v15 = a3[9];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_WORD *)(v16 + 16) = *(_WORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  v18 = (_OWORD *)(a1 + v15);
  v19 = (_OWORD *)(a2 + v15);
  *v18 = *v19;
  *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)v19 + 9);
  v20 = a3[10];
  v21 = a3[11];
  v22 = a1 + v20;
  v23 = (__int128 *)(a2 + v20);
  v24 = *v23;
  v25 = v23[1];
  v26 = v23[2];
  *(_BYTE *)(v22 + 48) = *((_BYTE *)v23 + 48);
  *(_OWORD *)(v22 + 16) = v25;
  *(_OWORD *)(v22 + 32) = v26;
  *(_OWORD *)v22 = v24;
  v27 = a1 + v21;
  v28 = a2 + v21;
  *(_QWORD *)(v27 + 127) = *(_QWORD *)(v28 + 127);
  v29 = *(_OWORD *)(v28 + 112);
  *(_OWORD *)(v27 + 96) = *(_OWORD *)(v28 + 96);
  *(_OWORD *)(v27 + 112) = v29;
  v30 = *(_OWORD *)(v28 + 80);
  *(_OWORD *)(v27 + 64) = *(_OWORD *)(v28 + 64);
  *(_OWORD *)(v27 + 80) = v30;
  v31 = *(_OWORD *)(v28 + 48);
  *(_OWORD *)(v27 + 32) = *(_OWORD *)(v28 + 32);
  *(_OWORD *)(v27 + 48) = v31;
  v32 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v32;
  v33 = a3[12];
  v34 = a3[13];
  v35 = a1 + v33;
  v36 = a2 + v33;
  *(_QWORD *)(v35 + 16) = *(_QWORD *)(v36 + 16);
  *(_OWORD *)v35 = *(_OWORD *)v36;
  v37 = a1 + v34;
  v38 = a2 + v34;
  v39 = *(_OWORD *)(v38 + 112);
  *(_OWORD *)(v37 + 96) = *(_OWORD *)(v38 + 96);
  *(_OWORD *)(v37 + 112) = v39;
  *(_QWORD *)(v37 + 128) = *(_QWORD *)(v38 + 128);
  v40 = *(_OWORD *)(v38 + 48);
  *(_OWORD *)(v37 + 32) = *(_OWORD *)(v38 + 32);
  *(_OWORD *)(v37 + 48) = v40;
  v41 = *(_OWORD *)(v38 + 80);
  *(_OWORD *)(v37 + 64) = *(_OWORD *)(v38 + 64);
  *(_OWORD *)(v37 + 80) = v41;
  v42 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v42;
  return a1;
}

uint64_t assignWithTake for TagExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = a3[8];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  v20 = a1 + v17;
  v21 = a2 + v17;
  v22 = *(_QWORD *)(a2 + v17);
  v23 = *(_QWORD *)(a2 + v17 + 8);
  *(_QWORD *)v20 = v22;
  *(_QWORD *)(v20 + 8) = v23;
  swift_bridgeObjectRelease();
  *(_WORD *)(v20 + 16) = *(_WORD *)(v21 + 16);
  v24 = a3[9];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)(a2 + v24 + 8);
  *(_QWORD *)v25 = *(_QWORD *)(a2 + v24);
  *(_QWORD *)(v25 + 8) = v27;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
  *(_BYTE *)(v25 + 24) = *(_BYTE *)(v26 + 24);
  v28 = a3[10];
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_BYTE *)v29 = *(_BYTE *)(a2 + v28);
  v31 = *(_QWORD *)(a2 + v28 + 16);
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(a2 + v28 + 8);
  *(_QWORD *)(v29 + 16) = v31;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v29 + 24) = *(_BYTE *)(v30 + 24);
  *(_BYTE *)(v29 + 25) = *(_BYTE *)(v30 + 25);
  v32 = *(_QWORD *)(v30 + 40);
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
  *(_QWORD *)(v29 + 40) = v32;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v29 + 48) = *(_BYTE *)(v30 + 48);
  v33 = a3[11];
  v34 = a1 + v33;
  v35 = a2 + v33;
  if (*(_QWORD *)(a1 + v33 + 24))
  {
    v36 = *(_QWORD *)(v35 + 24);
    if (v36)
    {
      *(_BYTE *)v34 = *(_BYTE *)v35;
      *(_DWORD *)(v34 + 4) = *(_DWORD *)(v35 + 4);
      *(_BYTE *)(v34 + 8) = *(_BYTE *)(v35 + 8);
      *(_QWORD *)(v34 + 16) = *(_QWORD *)(v35 + 16);
      *(_QWORD *)(v34 + 24) = v36;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v34 + 32) = *(_BYTE *)(v35 + 32);
      v37 = *(_QWORD *)(v35 + 48);
      *(_QWORD *)(v34 + 40) = *(_QWORD *)(v35 + 40);
      *(_QWORD *)(v34 + 48) = v37;
      *(_BYTE *)(v34 + 56) = *(_BYTE *)(v35 + 56);
      *(_BYTE *)(v34 + 57) = *(_BYTE *)(v35 + 57);
      *(_QWORD *)(v34 + 64) = *(_QWORD *)(v35 + 64);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v34 + 72) = *(_QWORD *)(v35 + 72);
      *(_BYTE *)(v34 + 80) = *(_BYTE *)(v35 + 80);
      *(_OWORD *)(v34 + 88) = *(_OWORD *)(v35 + 88);
      *(_QWORD *)(v34 + 104) = *(_QWORD *)(v35 + 104);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v34 + 112) = *(_BYTE *)(v35 + 112);
      *(_QWORD *)(v34 + 120) = *(_QWORD *)(v35 + 120);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v34 + 128) = *(_BYTE *)(v35 + 128);
      *(_BYTE *)(v34 + 129) = *(_BYTE *)(v35 + 129);
      *(_BYTE *)(v34 + 130) = *(_BYTE *)(v35 + 130);
      *(_BYTE *)(v34 + 131) = *(_BYTE *)(v35 + 131);
      *(_BYTE *)(v34 + 132) = *(_BYTE *)(v35 + 132);
      *(_BYTE *)(v34 + 133) = *(_BYTE *)(v35 + 133);
      *(_BYTE *)(v34 + 134) = *(_BYTE *)(v35 + 134);
      goto LABEL_6;
    }
    sub_1D5810518(v34);
  }
  v38 = *(_OWORD *)(v35 + 112);
  *(_OWORD *)(v34 + 96) = *(_OWORD *)(v35 + 96);
  *(_OWORD *)(v34 + 112) = v38;
  *(_QWORD *)(v34 + 127) = *(_QWORD *)(v35 + 127);
  v39 = *(_OWORD *)(v35 + 48);
  *(_OWORD *)(v34 + 32) = *(_OWORD *)(v35 + 32);
  *(_OWORD *)(v34 + 48) = v39;
  v40 = *(_OWORD *)(v35 + 80);
  *(_OWORD *)(v34 + 64) = *(_OWORD *)(v35 + 64);
  *(_OWORD *)(v34 + 80) = v40;
  v41 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v41;
LABEL_6:
  v42 = a3[12];
  v43 = a1 + v42;
  v44 = a2 + v42;
  if (*(_QWORD *)(a1 + v42 + 16) == 1)
  {
LABEL_9:
    *(_OWORD *)v43 = *(_OWORD *)v44;
    *(_QWORD *)(v43 + 16) = *(_QWORD *)(v44 + 16);
    goto LABEL_11;
  }
  v45 = *(_QWORD *)(v44 + 16);
  if (v45 == 1)
  {
    sub_1D57D9100(v43);
    goto LABEL_9;
  }
  *(_BYTE *)v43 = *(_BYTE *)v44;
  *(_QWORD *)(v43 + 8) = *(_QWORD *)(v44 + 8);
  *(_QWORD *)(v43 + 16) = v45;
  swift_bridgeObjectRelease();
LABEL_11:
  v46 = a3[13];
  v47 = a1 + v46;
  v48 = a2 + v46;
  if (!*(_QWORD *)(a1 + v46 + 16))
  {
LABEL_15:
    v52 = *(_OWORD *)(v48 + 112);
    *(_OWORD *)(v47 + 96) = *(_OWORD *)(v48 + 96);
    *(_OWORD *)(v47 + 112) = v52;
    *(_QWORD *)(v47 + 128) = *(_QWORD *)(v48 + 128);
    v53 = *(_OWORD *)(v48 + 48);
    *(_OWORD *)(v47 + 32) = *(_OWORD *)(v48 + 32);
    *(_OWORD *)(v47 + 48) = v53;
    v54 = *(_OWORD *)(v48 + 80);
    *(_OWORD *)(v47 + 64) = *(_OWORD *)(v48 + 64);
    *(_OWORD *)(v47 + 80) = v54;
    v55 = *(_OWORD *)(v48 + 16);
    *(_OWORD *)v47 = *(_OWORD *)v48;
    *(_OWORD *)(v47 + 16) = v55;
    return a1;
  }
  v49 = *(_QWORD *)(v48 + 16);
  if (!v49)
  {
    sub_1D57E17B8(v47);
    goto LABEL_15;
  }
  *(_WORD *)v47 = *(_WORD *)v48;
  *(_QWORD *)(v47 + 8) = *(_QWORD *)(v48 + 8);
  *(_QWORD *)(v47 + 16) = v49;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v47 + 24) = *(_QWORD *)(v48 + 24);
  *(_QWORD *)(v47 + 32) = *(_QWORD *)(v48 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v47 + 40) = *(_QWORD *)(v48 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v47 + 48) = *(_QWORD *)(v48 + 48);
  swift_bridgeObjectRelease();
  v50 = *(_QWORD *)(v48 + 64);
  *(_QWORD *)(v47 + 56) = *(_QWORD *)(v48 + 56);
  *(_QWORD *)(v47 + 64) = v50;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v47 + 72) = *(_QWORD *)(v48 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v47 + 80) = *(_BYTE *)(v48 + 80);
  v51 = *(_QWORD *)(v48 + 96);
  *(_QWORD *)(v47 + 88) = *(_QWORD *)(v48 + 88);
  *(_QWORD *)(v47 + 96) = v51;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v47 + 104) = *(_QWORD *)(v48 + 104);
  *(_BYTE *)(v47 + 112) = *(_BYTE *)(v48 + 112);
  *(_QWORD *)(v47 + 120) = *(_QWORD *)(v48 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v47 + 128) = *(_QWORD *)(v48 + 128);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TagExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D582F874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for TagExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D582F92C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D582F9D4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TagExposureEvent.Model.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TagExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1D582FB84 + 4 * byte_1D5AB5EBF[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1D582FBB8 + 4 * byte_1D5AB5EBA[v4]))();
}

uint64_t sub_1D582FBB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D582FBC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D582FBC8);
  return result;
}

uint64_t sub_1D582FBD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D582FBDCLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1D582FBE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D582FBE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TagExposureEvent.Model.CodingKeys()
{
  return &type metadata for TagExposureEvent.Model.CodingKeys;
}

unint64_t sub_1D582FC08()
{
  unint64_t result;

  result = qword_1EFF48F68;
  if (!qword_1EFF48F68)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB6164, &type metadata for TagExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48F68);
  }
  return result;
}

unint64_t sub_1D582FC50()
{
  unint64_t result;

  result = qword_1ED9CFB70;
  if (!qword_1ED9CFB70)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB60D4, &type metadata for TagExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CFB70);
  }
  return result;
}

unint64_t sub_1D582FC98()
{
  unint64_t result;

  result = qword_1ED9CFB68;
  if (!qword_1ED9CFB68)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB60FC, &type metadata for TagExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CFB68);
  }
  return result;
}

uint64_t sub_1D582FCDC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61746144676174 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AECA50 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

NewsAnalytics::AppLaunchTakeoverTriggerResult_optional __swiftcall AppLaunchTakeoverTriggerResult.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::AppLaunchTakeoverTriggerResult_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEE08();
  result.value = swift_bridgeObjectRelease();
  v5 = 18;
  if (v3 < 0x12)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AppLaunchTakeoverTriggerResult.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58301B0 + 4 * byte_1D5AB61E0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D58301B0()
{
  return 0x73736563637573;
}

unint64_t sub_1D58301C4()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1D58302C4()
{
  return 0xD000000000000014;
}

uint64_t sub_1D58302DC()
{
  return 0x664F656369766564;
}

unint64_t sub_1D5830300()
{
  return 0xD000000000000019;
}

void sub_1D5830318()
{
  JUMPOUT(0x1D583032CLL);
}

uint64_t sub_1D5830338()
{
  return 0x52636972656E6567;
}

uint64_t sub_1D583035C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A36318(*a1, *a2);
}

unint64_t sub_1D583036C()
{
  unint64_t result;

  result = qword_1EFF48F70;
  if (!qword_1EFF48F70)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AppLaunchTakeoverTriggerResult, &type metadata for AppLaunchTakeoverTriggerResult);
    atomic_store(result, (unint64_t *)&qword_1EFF48F70);
  }
  return result;
}

uint64_t sub_1D58303B0()
{
  sub_1D5AAEE80();
  AppLaunchTakeoverTriggerResult.rawValue.getter();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5830414()
{
  AppLaunchTakeoverTriggerResult.rawValue.getter();
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5830464()
{
  sub_1D5AAEE80();
  AppLaunchTakeoverTriggerResult.rawValue.getter();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::AppLaunchTakeoverTriggerResult_optional sub_1D58304C4(Swift::String *a1)
{
  return AppLaunchTakeoverTriggerResult.init(rawValue:)(*a1);
}

uint64_t sub_1D58304D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = AppLaunchTakeoverTriggerResult.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D58304F4()
{
  sub_1D58306F8();
  return sub_1D5AAE928();
}

uint64_t sub_1D5830550()
{
  sub_1D58306F8();
  return sub_1D5AAE91C();
}

uint64_t getEnumTagSinglePayload for ViewAction(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEF)
    goto LABEL_17;
  if (a2 + 17 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 17) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 17;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 17;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 17;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x12;
  v8 = v6 - 18;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AppLaunchTakeoverTriggerResult(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_1D5830678 + 4 * byte_1D5AB61F7[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_1D58306AC + 4 * byte_1D5AB61F2[v4]))();
}

uint64_t sub_1D58306AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58306B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58306BCLL);
  return result;
}

uint64_t sub_1D58306C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58306D0);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_1D58306D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58306DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppLaunchTakeoverTriggerResult()
{
  return &type metadata for AppLaunchTakeoverTriggerResult;
}

unint64_t sub_1D58306F8()
{
  unint64_t result;

  result = qword_1ED9D15D0;
  if (!qword_1ED9D15D0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AppLaunchTakeoverTriggerResult, &type metadata for AppLaunchTakeoverTriggerResult);
    atomic_store(result, (unint64_t *)&qword_1ED9D15D0);
  }
  return result;
}

uint64_t ActionMethod.init(_:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v10;
  uint64_t result;
  uint64_t v12;

  sub_1D5830918();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D5AAE388();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, 1, v7) != 1)
  {
    sub_1D58309A8(a1, (uint64_t)v6);
    v9 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v6, v7);
    if (v9 != *MEMORY[0x1E0DB9F20])
    {
      if (v9 == *MEMORY[0x1E0DB9EE0])
      {
        v10 = 3;
        goto LABEL_4;
      }
      if (v9 == *MEMORY[0x1E0DB9ED8])
      {
        v10 = 2;
        goto LABEL_4;
      }
      if (v9 == *MEMORY[0x1E0DB9F08])
      {
        v10 = 1;
        goto LABEL_4;
      }
      if (v9 == *MEMORY[0x1E0DB9F18])
      {
        v10 = 4;
        goto LABEL_4;
      }
      if (v9 == *MEMORY[0x1E0DB9F10])
      {
        v10 = 5;
        goto LABEL_4;
      }
      if (v9 == *MEMORY[0x1E0DB9EF8])
      {
        v10 = 6;
        goto LABEL_4;
      }
      if (v9 != *MEMORY[0x1E0DB9F00])
      {
        if (v9 == *MEMORY[0x1E0DB9ED0])
        {
          v10 = 7;
          goto LABEL_4;
        }
        if (v9 == *MEMORY[0x1E0DB9F28])
        {
          v10 = 8;
          goto LABEL_4;
        }
        (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
      }
    }
  }
  v10 = 0;
LABEL_4:
  result = sub_1D583096C(a1);
  *a2 = v10;
  return result;
}

void sub_1D5830918()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFF48F78)
  {
    sub_1D5AAE388();
    v0 = sub_1D5AAEACC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFF48F78);
  }
}

uint64_t sub_1D583096C(uint64_t a1)
{
  uint64_t v2;

  sub_1D5830918();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58309A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5830918();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

NewsAnalytics::ViewAction_optional __swiftcall ViewAction.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::ViewAction_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEE08();
  result.value = swift_bridgeObjectRelease();
  v5 = 18;
  if (v3 < 0x12)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1D5830A4C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A3DC1C(*a1, *a2);
}

unint64_t sub_1D5830A5C()
{
  unint64_t result;

  result = qword_1EFF48F80;
  if (!qword_1EFF48F80)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ViewAction, &type metadata for ViewAction);
    atomic_store(result, (unint64_t *)&qword_1EFF48F80);
  }
  return result;
}

uint64_t sub_1D5830AA0()
{
  sub_1D5AAEE80();
  ViewAction.rawValue.getter();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5830B04()
{
  ViewAction.rawValue.getter();
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5830B54()
{
  sub_1D5AAEE80();
  ViewAction.rawValue.getter();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::ViewAction_optional sub_1D5830BB4(Swift::String *a1)
{
  return ViewAction.init(rawValue:)(*a1);
}

uint64_t sub_1D5830BC0()
{
  sub_1D57A09D8();
  return sub_1D5AAE928();
}

uint64_t storeEnumTagSinglePayload for ViewAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_1D5830C68 + 4 * byte_1D5AB636F[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_1D5830C9C + 4 * byte_1D5AB636A[v4]))();
}

uint64_t sub_1D5830C9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5830CA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5830CACLL);
  return result;
}

uint64_t sub_1D5830CB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5830CC0);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_1D5830CC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5830CCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t LiveActivityCountData.countOfLiveActivitiesFollowed.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t LiveActivityCountData.countOfLiveActivitiesFollowed.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*LiveActivityCountData.countOfLiveActivitiesFollowed.modify())()
{
  return nullsub_1;
}

uint64_t LiveActivityCountData.init(countOfLiveActivitiesFollowed:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t sub_1D5830D00()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1D5830D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58312D4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D5830D44()
{
  sub_1D5830E84();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5830D6C()
{
  sub_1D5830E84();
  return sub_1D5AAEEE0();
}

uint64_t LiveActivityCountData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5830FE8(0, &qword_1ED9D0DA8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5830E84();
  sub_1D5AAEEC8();
  sub_1D5AAED78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D5830E84()
{
  unint64_t result;

  result = qword_1ED9D04A0;
  if (!qword_1ED9D04A0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB663C, &type metadata for LiveActivityCountData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D04A0);
  }
  return result;
}

uint64_t LiveActivityCountData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v12;

  sub_1D5830FE8(0, &qword_1ED9D0D10, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5830E84();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECDC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5830FE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5830E84();
    v7 = a3(a1, &type metadata for LiveActivityCountData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D583104C@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return LiveActivityCountData.init(from:)(a1, a2);
}

uint64_t sub_1D5831060(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5830FE8(0, &qword_1ED9D0DA8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5830E84();
  sub_1D5AAEEC8();
  sub_1D5AAED78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for LiveActivityCountData()
{
  return &type metadata for LiveActivityCountData;
}

uint64_t storeEnumTagSinglePayload for LiveActivityCountData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D58311A0 + 4 * byte_1D5AB64C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D58311C0 + 4 * byte_1D5AB64C5[v4]))();
}

_BYTE *sub_1D58311A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D58311C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58311C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58311D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58311D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58311E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityCountData.CodingKeys()
{
  return &type metadata for LiveActivityCountData.CodingKeys;
}

unint64_t sub_1D5831200()
{
  unint64_t result;

  result = qword_1EFF48F88;
  if (!qword_1EFF48F88)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB6614, &type metadata for LiveActivityCountData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48F88);
  }
  return result;
}

unint64_t sub_1D5831248()
{
  unint64_t result;

  result = qword_1ED9D04B0;
  if (!qword_1ED9D04B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB6584, &type metadata for LiveActivityCountData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D04B0);
  }
  return result;
}

unint64_t sub_1D5831290()
{
  unint64_t result;

  result = qword_1ED9D04A8;
  if (!qword_1ED9D04A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB65AC, &type metadata for LiveActivityCountData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D04A8);
  }
  return result;
}

uint64_t sub_1D58312D4(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD00000000000001DLL && a2 == 0x80000001D5AED6E0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void DownloadData.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *DownloadData.type.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*DownloadData.type.modify())()
{
  return nullsub_1;
}

NewsAnalytics::DownloadData __swiftcall DownloadData.init(type:)(NewsAnalytics::DownloadData type)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)type.type;
  return type;
}

uint64_t sub_1D583138C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5831410()
{
  sub_1D5831564();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5831438()
{
  sub_1D5831564();
  return sub_1D5AAEEE0();
}

uint64_t DownloadData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D5831724(0, &qword_1EFF48F90, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5831564();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D58315A8();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5831564()
{
  unint64_t result;

  result = qword_1EFF48F98;
  if (!qword_1EFF48F98)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB6808, &type metadata for DownloadData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48F98);
  }
  return result;
}

unint64_t sub_1D58315A8()
{
  unint64_t result;

  result = qword_1EFF48FA0;
  if (!qword_1EFF48FA0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DownloadType, &type metadata for DownloadType);
    atomic_store(result, (unint64_t *)&qword_1EFF48FA0);
  }
  return result;
}

uint64_t DownloadData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D5831724(0, &qword_1EFF48FA8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5831564();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5831780();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5831724(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5831564();
    v7 = a3(a1, &type metadata for DownloadData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5831780()
{
  unint64_t result;

  result = qword_1EFF48FB0;
  if (!qword_1EFF48FB0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DownloadType, &type metadata for DownloadType);
    atomic_store(result, (unint64_t *)&qword_1EFF48FB0);
  }
  return result;
}

unint64_t sub_1D58317C8()
{
  unint64_t result;

  result = qword_1ED9C7808;
  if (!qword_1ED9C7808)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DownloadData, &type metadata for DownloadData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7808);
  }
  return result;
}

unint64_t sub_1D5831810()
{
  unint64_t result;

  result = qword_1ED9C7800;
  if (!qword_1ED9C7800)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DownloadData, &type metadata for DownloadData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7800);
  }
  return result;
}

uint64_t sub_1D5831854@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return DownloadData.init(from:)(a1, a2);
}

uint64_t sub_1D5831868(_QWORD *a1)
{
  return DownloadData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for DownloadData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D58318C8 + 4 * byte_1D5AB6691[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D58318FC + 4 * byte_1D5AB668C[v4]))();
}

uint64_t sub_1D58318FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5831904(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D583190CLL);
  return result;
}

uint64_t sub_1D5831918(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5831920);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5831924(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D583192C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DownloadData()
{
  return &type metadata for DownloadData;
}

uint64_t storeEnumTagSinglePayload for DownloadData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5831988 + 4 * byte_1D5AB6696[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D58319A8 + 4 * byte_1D5AB669B[v4]))();
}

_BYTE *sub_1D5831988(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D58319A8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58319B0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58319B8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58319C0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58319C8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DownloadData.CodingKeys()
{
  return &type metadata for DownloadData.CodingKeys;
}

unint64_t sub_1D58319E8()
{
  unint64_t result;

  result = qword_1EFF48FB8;
  if (!qword_1EFF48FB8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB67E0, &type metadata for DownloadData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48FB8);
  }
  return result;
}

unint64_t sub_1D5831A30()
{
  unint64_t result;

  result = qword_1EFF48FC0;
  if (!qword_1EFF48FC0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB6750, &type metadata for DownloadData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48FC0);
  }
  return result;
}

unint64_t sub_1D5831A78()
{
  unint64_t result;

  result = qword_1EFF48FC8;
  if (!qword_1EFF48FC8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB6778, &type metadata for DownloadData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF48FC8);
  }
  return result;
}

uint64_t sub_1D5831ABC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF48FD0, MEMORY[0x1E0CF8078]);
}

uint64_t static SubscribeButtonExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46F90, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF48FD0, a1);
}

uint64_t sub_1D5831AFC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF48FE8, MEMORY[0x1E0CF8380]);
}

uint64_t static SubscribeButtonExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(qword_1EFF46F98, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF48FE8, a1);
}

uint64_t SubscribeButtonExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t SubscribeButtonExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SubscribeButtonExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for SubscribeButtonExposureEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for SubscribeButtonExposureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF49070);
}

uint64_t SubscribeButtonExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.timedData.modify())()
{
  type metadata accessor for SubscribeButtonExposureEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonExposureEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.articleData.modify())()
{
  type metadata accessor for SubscribeButtonExposureEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonExposureEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.channelData.modify())()
{
  type metadata accessor for SubscribeButtonExposureEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.feedData.modify())()
{
  type metadata accessor for SubscribeButtonExposureEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.groupData.modify())()
{
  type metadata accessor for SubscribeButtonExposureEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.paywallData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonExposureEvent.paywallData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.paywallData.modify())()
{
  type metadata accessor for SubscribeButtonExposureEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonExposureEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.issueData.modify())()
{
  type metadata accessor for SubscribeButtonExposureEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonExposureEvent.purchaseData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.purchaseData.modify())()
{
  type metadata accessor for SubscribeButtonExposureEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.purchaseSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D5832358()
{
  unint64_t result;

  result = qword_1ED9CA3B8;
  if (!qword_1ED9CA3B8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PurchaseSessionData, &type metadata for PurchaseSessionData);
    atomic_store(result, (unint64_t *)&qword_1ED9CA3B8);
  }
  return result;
}

unint64_t sub_1D583239C()
{
  unint64_t result;

  result = qword_1ED9CA3B0;
  if (!qword_1ED9CA3B0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PurchaseSessionData, &type metadata for PurchaseSessionData);
    atomic_store(result, (unint64_t *)&qword_1ED9CA3B0);
  }
  return result;
}

uint64_t SubscribeButtonExposureEvent.purchaseSessionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.purchaseSessionData.modify())()
{
  type metadata accessor for SubscribeButtonExposureEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonExposureEvent.sectionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.sectionData.modify())()
{
  type metadata accessor for SubscribeButtonExposureEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 60);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 60);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.viewData.modify())()
{
  type metadata accessor for SubscribeButtonExposureEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.subscribeButtonContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D58326C8()
{
  unint64_t result;

  result = qword_1ED9CB7C8;
  if (!qword_1ED9CB7C8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscribeButtonContextData, &type metadata for SubscribeButtonContextData);
    atomic_store(result, (unint64_t *)&qword_1ED9CB7C8);
  }
  return result;
}

unint64_t sub_1D583270C()
{
  unint64_t result;

  result = qword_1ED9CB7C0;
  if (!qword_1ED9CB7C0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscribeButtonContextData, &type metadata for SubscribeButtonContextData);
    atomic_store(result, (unint64_t *)&qword_1ED9CB7C0);
  }
  return result;
}

uint64_t SubscribeButtonExposureEvent.subscribeButtonContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.subscribeButtonContextData.modify())()
{
  type metadata accessor for SubscribeButtonExposureEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 68);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 68);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for SubscribeButtonExposureEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.puzzleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 72);
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonExposureEvent.puzzleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 72);
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.puzzleData.modify())()
{
  type metadata accessor for SubscribeButtonExposureEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for SubscribeButtonExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  v8 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v8, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v8, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v8, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v8, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v8, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v8, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v2, v27);
  v28 = a1 + v4[16];
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v2, v29);
  v30 = a1 + v4[17];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v30, v2, v31);
  v32 = a1 + v4[18];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v32, v8, v33);
}

uint64_t SubscribeButtonExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SubscribeButtonExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for SubscribeButtonExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for SubscribeButtonExposureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF49138);
}

uint64_t SubscribeButtonExposureEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[136];

  v3 = type metadata accessor for SubscribeButtonExposureEvent.Model(0);
  sub_1D57E4810(v1 + *(int *)(v3 + 24), (uint64_t)v5, (unint64_t *)&qword_1ED9CE420);
  sub_1D57E4810((uint64_t)v5, a1, (unint64_t *)&qword_1ED9CE420);
  return sub_1D580D964((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1D580C5CC);
}

uint64_t SubscribeButtonExposureEvent.Model.channelData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57DD4CC(v4, v5);
}

uint64_t SubscribeButtonExposureEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent.Model(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

_QWORD *SubscribeButtonExposureEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for SubscribeButtonExposureEvent.Model(0);
  sub_1D57E4810(v1 + *(int *)(v3 + 36), (uint64_t)v5, (unint64_t *)&qword_1ED9CEEE0);
  sub_1D57E4810((uint64_t)v5, a1, (unint64_t *)&qword_1ED9CEEE0);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t SubscribeButtonExposureEvent.Model.paywallData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SubscribeButtonExposureEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t SubscribeButtonExposureEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent.Model(0) + 44));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t SubscribeButtonExposureEvent.Model.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent.Model(0) + 48));
  v5 = *v3;
  v4 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t SubscribeButtonExposureEvent.Model.purchaseSessionData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent.Model(0) + 52));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t SubscribeButtonExposureEvent.Model.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent.Model(0) + 56);
  v4 = *(_BYTE *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(_BYTE *)(a1 + 24) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t SubscribeButtonExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent.Model(0) + 60));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t SubscribeButtonExposureEvent.Model.subscribeButtonContextData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SubscribeButtonExposureEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t SubscribeButtonExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent.Model(0) + 68));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SubscribeButtonExposureEvent.Model.puzzleData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent.Model(0) + 72));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v13 = v3[8];
  v12 = v3[9];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v13;
  a1[9] = v12;
  return sub_1D57E8FE4(v4, v5);
}

__n128 SubscribeButtonExposureEvent.Model.init(eventData:timedData:articleData:channelData:feedData:groupData:paywallData:issueData:purchaseData:purchaseSessionData:sectionData:viewData:subscribeButtonContextData:userBundleSubscriptionContextData:puzzleData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, uint64_t a6@<X5>, __int16 *a7@<X6>, __int128 *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, uint64_t *a11, __int128 *a12, uint64_t *a13, __int16 *a14, char *a15, __int128 *a16)
{
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 result;
  __int128 v42;
  __int128 v43;
  __int16 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  __int128 v57;
  __int16 v58;
  uint64_t v59;
  uint64_t v60;
  __int16 v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  __n128 v67;
  __int128 v69;
  __int128 v71;
  __int128 v72;
  _BYTE v73[136];
  _BYTE v74[144];

  sub_1D57E4810(a3, (uint64_t)v73, (unint64_t *)&qword_1ED9CE420);
  v42 = a4[1];
  v43 = *a4;
  v20 = *((_QWORD *)a4 + 4);
  v45 = *a5;
  v21 = *((_QWORD *)a5 + 2);
  sub_1D57E4810(a6, (uint64_t)v74, (unint64_t *)&qword_1ED9CEEE0);
  v44 = *a7;
  v48 = *a8;
  v46 = *((_QWORD *)a8 + 3);
  v47 = *((_QWORD *)a8 + 2);
  v51 = a10[1];
  v52 = *a10;
  v50 = *((_BYTE *)a10 + 16);
  v53 = a11[1];
  v54 = *a11;
  v57 = *a12;
  v56 = *((_QWORD *)a12 + 2);
  v55 = *((_BYTE *)a12 + 24);
  v59 = a13[1];
  v60 = *a13;
  v58 = *((_WORD *)a13 + 8);
  v22 = *a15;
  v23 = *((_QWORD *)a15 + 1);
  v24 = *((_QWORD *)a15 + 2);
  v65 = a15[25];
  v66 = a15[24];
  v63 = *((_QWORD *)a15 + 5);
  v64 = *((_QWORD *)a15 + 4);
  v61 = *a14;
  v62 = a15[48];
  v71 = a16[1];
  v72 = *a16;
  v67 = (__n128)a16[3];
  v69 = a16[2];
  v26 = *((_QWORD *)a16 + 8);
  v25 = *((_QWORD *)a16 + 9);
  v27 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(a9, a1, v27);
  v28 = (int *)type metadata accessor for SubscribeButtonExposureEvent.Model(0);
  v29 = a9 + v28[5];
  v30 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v29, a2, v30);
  sub_1D57E4810((uint64_t)v73, a9 + v28[6], (unint64_t *)&qword_1ED9CE420);
  v31 = a9 + v28[7];
  *(_OWORD *)v31 = v43;
  *(_OWORD *)(v31 + 16) = v42;
  *(_QWORD *)(v31 + 32) = v20;
  v32 = a9 + v28[8];
  *(_OWORD *)v32 = v45;
  *(_QWORD *)(v32 + 16) = v21;
  sub_1D57E4810((uint64_t)v74, a9 + v28[9], (unint64_t *)&qword_1ED9CEEE0);
  *(_WORD *)(a9 + v28[10]) = v44;
  v33 = a9 + v28[11];
  *(_OWORD *)v33 = v48;
  *(_QWORD *)(v33 + 16) = v47;
  *(_QWORD *)(v33 + 24) = v46;
  v34 = a9 + v28[12];
  *(_QWORD *)v34 = v52;
  *(_QWORD *)(v34 + 8) = v51;
  *(_BYTE *)(v34 + 16) = v50;
  v35 = (_QWORD *)(a9 + v28[13]);
  *v35 = v54;
  v35[1] = v53;
  v36 = a9 + v28[14];
  *(_OWORD *)v36 = v57;
  *(_QWORD *)(v36 + 16) = v56;
  *(_BYTE *)(v36 + 24) = v55;
  v37 = a9 + v28[15];
  *(_QWORD *)v37 = v60;
  *(_QWORD *)(v37 + 8) = v59;
  *(_WORD *)(v37 + 16) = v58;
  *(_WORD *)(a9 + v28[16]) = v61;
  v38 = a9 + v28[17];
  *(_BYTE *)v38 = v22;
  *(_QWORD *)(v38 + 8) = v23;
  *(_QWORD *)(v38 + 16) = v24;
  *(_BYTE *)(v38 + 24) = v66;
  *(_BYTE *)(v38 + 25) = v65;
  *(_QWORD *)(v38 + 32) = v64;
  *(_QWORD *)(v38 + 40) = v63;
  *(_BYTE *)(v38 + 48) = v62;
  v39 = a9 + v28[18];
  *(_OWORD *)v39 = v72;
  *(_OWORD *)(v39 + 16) = v71;
  result = v67;
  *(_OWORD *)(v39 + 32) = v69;
  *(__n128 *)(v39 + 48) = v67;
  *(_QWORD *)(v39 + 64) = v26;
  *(_QWORD *)(v39 + 72) = v25;
  return result;
}

uint64_t sub_1D5833554(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D583358C + 4 * byte_1D5AB6860[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D583358C()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D58335A0()
{
  return 0x44656C6369747261;
}

void sub_1D583366C()
{
  JUMPOUT(0x1D5833678);
}

unint64_t sub_1D5833684()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1D58336BC()
{
  return 0x6144656C7A7A7570;
}

uint64_t sub_1D58336D8()
{
  unsigned __int8 *v0;

  return sub_1D5833554(*v0);
}

uint64_t sub_1D58336E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D583945C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D5833704(_BYTE *a1@<X8>)
{
  *a1 = 15;
}

uint64_t sub_1D5833710()
{
  sub_1D5833D58();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5833738()
{
  sub_1D5833D58();
  return sub_1D5AAEEE0();
}

uint64_t SubscribeButtonExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 *v14;
  uint64_t v15;
  _OWORD *v16;
  __int128 v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  _OWORD *v34;
  __int128 v35;
  __int128 v36;
  uint64_t v38;
  char v39;
  _OWORD v40[2];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _OWORD v44[2];
  uint64_t v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  _BYTE v49[152];

  v3 = v1;
  sub_1D58348E0(0, &qword_1EFF49000, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v38 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5833D58();
  sub_1D5AAEEC8();
  LOBYTE(v44[0]) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for SubscribeButtonExposureEvent.Model(0);
    v49[135] = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    sub_1D57E4810(v3 + v10[6], (uint64_t)v49, (unint64_t *)&qword_1ED9CE420);
    sub_1D57E4810((uint64_t)v49, (uint64_t)v44, (unint64_t *)&qword_1ED9CE420);
    LOBYTE(v40[0]) = 2;
    sub_1D57CB940();
    sub_1D5AAED18();
    v11 = v3 + v10[7];
    v12 = *(_QWORD *)(v11 + 32);
    v13 = *(_OWORD *)(v11 + 16);
    v44[0] = *(_OWORD *)v11;
    v44[1] = v13;
    v45 = v12;
    LOBYTE(v40[0]) = 3;
    sub_1D57CB8B8();
    sub_1D5AAED18();
    v14 = (__int128 *)(v3 + v10[8]);
    v15 = *((_QWORD *)v14 + 2);
    v47 = *v14;
    v48 = v15;
    v46 = 4;
    sub_1D57C65D4();
    sub_1D5AAED18();
    sub_1D57E4810(v3 + v10[9], (uint64_t)v44, (unint64_t *)&qword_1ED9CEEE0);
    sub_1D57E4810((uint64_t)v44, (uint64_t)v40, (unint64_t *)&qword_1ED9CEEE0);
    v39 = 5;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    LOWORD(v40[0]) = *(_WORD *)(v3 + v10[10]);
    v39 = 6;
    sub_1D57CB830();
    sub_1D5AAED18();
    v16 = (_OWORD *)(v3 + v10[11]);
    v17 = v16[1];
    v40[0] = *v16;
    v40[1] = v17;
    v39 = 7;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    v18 = (uint64_t *)(v3 + v10[12]);
    v19 = *v18;
    v20 = v18[1];
    LOBYTE(v18) = *((_BYTE *)v18 + 16);
    *(_QWORD *)&v40[0] = v19;
    *((_QWORD *)&v40[0] + 1) = v20;
    LOBYTE(v40[1]) = (_BYTE)v18;
    v39 = 8;
    sub_1D580C07C();
    sub_1D5AAED6C();
    v21 = (uint64_t *)(v3 + v10[13]);
    v23 = *v21;
    v22 = v21[1];
    *(_QWORD *)&v40[0] = v23;
    *((_QWORD *)&v40[0] + 1) = v22;
    v39 = 9;
    sub_1D583239C();
    sub_1D5AAED6C();
    v24 = v3 + v10[14];
    v25 = *(_QWORD *)(v24 + 16);
    v26 = *(_BYTE *)(v24 + 24);
    v40[0] = *(_OWORD *)v24;
    *(_QWORD *)&v40[1] = v25;
    BYTE8(v40[1]) = v26;
    v39 = 10;
    sub_1D57CB720();
    sub_1D5AAED18();
    v27 = (uint64_t *)(v3 + v10[15]);
    v28 = *v27;
    v29 = v27[1];
    LOWORD(v27) = *((_WORD *)v27 + 8);
    *(_QWORD *)&v40[0] = v28;
    *((_QWORD *)&v40[0] + 1) = v29;
    LOWORD(v40[1]) = (_WORD)v27;
    v39 = 11;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    LOWORD(v40[0]) = *(_WORD *)(v3 + v10[16]);
    v39 = 12;
    sub_1D583270C();
    sub_1D5AAED6C();
    v30 = v3 + v10[17];
    v31 = *(_BYTE *)(v30 + 24);
    v32 = *(_BYTE *)(v30 + 25);
    v33 = *(_BYTE *)(v30 + 48);
    LOBYTE(v40[0]) = *(_BYTE *)v30;
    *(_OWORD *)((char *)v40 + 8) = *(_OWORD *)(v30 + 8);
    BYTE8(v40[1]) = v31;
    BYTE9(v40[1]) = v32;
    v41 = *(_OWORD *)(v30 + 32);
    LOBYTE(v42) = v33;
    v39 = 13;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v34 = (_OWORD *)(v3 + v10[18]);
    v35 = v34[1];
    v40[0] = *v34;
    v40[1] = v35;
    v36 = v34[3];
    v41 = v34[2];
    v42 = v36;
    v43 = v34[4];
    v39 = 14;
    sub_1D57CBD34();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5833D58()
{
  unint64_t result;

  result = qword_1EFF49008;
  if (!qword_1EFF49008)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB6C24, &type metadata for SubscribeButtonExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49008);
  }
  return result;
}

uint64_t SubscribeButtonExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  char *v16;
  uint64_t result;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int *v24;
  char *v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  __int16 v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  char v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  int *v70;
  _OWORD v71[2];
  __int128 v72;
  __int128 v73;
  __int128 v74;
  _BYTE v75[136];
  _BYTE v76[136];
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  _BOOL4 v81;
  char v82;
  char v83;
  char v84;

  v60 = a2;
  v65 = sub_1D5AADFB0();
  v63 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v4 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D5AADF98();
  v64 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58348E0(0, &qword_1EFF49010, MEMORY[0x1E0DED048]);
  v61 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v59 - v10;
  v70 = (int *)type metadata accessor for SubscribeButtonExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v70);
  v69 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v67 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1D5833D58();
  v66 = v11;
  v14 = v68;
  sub_1D5AAEEB0();
  v62 = v5;
  if (v14)
  {
    v68 = v14;
    LODWORD(v66) = 0;
    v15 = 0;
  }
  else
  {
    v59 = v9;
    LOBYTE(v78) = 0;
    sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
    sub_1D5AAECD0();
    v25 = v69;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v69, v7, v5);
    LOBYTE(v78) = 1;
    sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
    v26 = v65;
    sub_1D5AAECD0();
    v27 = v70;
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(&v25[v70[5]], v4, v26);
    v84 = 2;
    sub_1D57CB8FC();
    sub_1D5AAEC7C();
    sub_1D57E4810((uint64_t)&v77, (uint64_t)v76, (unint64_t *)&qword_1ED9CE420);
    sub_1D57E4810((uint64_t)v76, (uint64_t)&v25[v27[6]], (unint64_t *)&qword_1ED9CE420);
    v75[0] = 3;
    sub_1D57CB874();
    sub_1D5AAEC7C();
    v28 = v80;
    v29 = &v25[v27[7]];
    v30 = v79;
    *(_OWORD *)v29 = v78;
    *((_OWORD *)v29 + 1) = v30;
    *((_QWORD *)v29 + 4) = v28;
    v75[0] = 4;
    sub_1D57C6590();
    sub_1D5AAEC7C();
    v31 = v79;
    v32 = &v25[v27[8]];
    *(_OWORD *)v32 = v78;
    *((_QWORD *)v32 + 2) = v31;
    v83 = 5;
    sub_1D57C5FA8();
    sub_1D5AAEC7C();
    sub_1D57E4810((uint64_t)&v78, (uint64_t)v75, (unint64_t *)&qword_1ED9CEEE0);
    sub_1D57E4810((uint64_t)v75, (uint64_t)&v25[v27[9]], (unint64_t *)&qword_1ED9CEEE0);
    v82 = 6;
    sub_1D57CB7EC();
    sub_1D5AAEC7C();
    *(_WORD *)&v25[v27[10]] = v71[0];
    v82 = 7;
    sub_1D57C5ED8();
    sub_1D5AAEC7C();
    v33 = &v25[v27[11]];
    v34 = v71[1];
    *(_OWORD *)v33 = v71[0];
    *((_OWORD *)v33 + 1) = v34;
    v82 = 8;
    sub_1D580C038();
    sub_1D5AAECD0();
    v35 = *((_QWORD *)&v71[0] + 1);
    v36 = v71[1];
    v37 = &v25[v70[12]];
    *(_QWORD *)v37 = *(_QWORD *)&v71[0];
    *((_QWORD *)v37 + 1) = v35;
    v37[16] = v36;
    v82 = 9;
    sub_1D5832358();
    sub_1D5AAECD0();
    v68 = 0;
    v38 = *((_QWORD *)&v71[0] + 1);
    v39 = &v69[v70[13]];
    *(_QWORD *)v39 = *(_QWORD *)&v71[0];
    *((_QWORD *)v39 + 1) = v38;
    v82 = 10;
    sub_1D57CB6DC();
    v40 = v68;
    sub_1D5AAEC7C();
    v68 = v40;
    if (!v40)
    {
      v41 = *(_QWORD *)&v71[1];
      v42 = BYTE8(v71[1]);
      v43 = &v69[v70[14]];
      *(_OWORD *)v43 = v71[0];
      *((_QWORD *)v43 + 2) = v41;
      v43[24] = v42;
      v82 = 11;
      sub_1D57C6260();
      v44 = v68;
      sub_1D5AAECD0();
      v81 = v44 == 0;
      v68 = v44;
      if (v44)
        goto LABEL_36;
      v45 = *((_QWORD *)&v71[0] + 1);
      v46 = v71[1];
      v47 = &v69[v70[15]];
      *(_QWORD *)v47 = *(_QWORD *)&v71[0];
      *((_QWORD *)v47 + 1) = v45;
      *((_WORD *)v47 + 8) = v46;
      v82 = 12;
      sub_1D58326C8();
      v48 = v68;
      sub_1D5AAECD0();
      v68 = v48;
      if (v48
        || (*(_WORD *)&v69[v70[16]] = v71[0], v82 = 13, sub_1D57C6AF8(), v49 = v68, sub_1D5AAECD0(), (v68 = v49) != 0))
      {
LABEL_36:
        (*(void (**)(char *, uint64_t))(v59 + 8))(v66, v61);
        __swift_destroy_boxed_opaque_existential_1(v67);
        LODWORD(v67) = 0;
      }
      else
      {
        v50 = BYTE8(v71[1]);
        v51 = BYTE9(v71[1]);
        v52 = v73;
        v53 = &v69[v70[17]];
        *v53 = v71[0];
        *(_OWORD *)(v53 + 8) = *(_OWORD *)((char *)v71 + 8);
        v53[24] = v50;
        v53[25] = v51;
        *((_OWORD *)v53 + 2) = v72;
        v53[48] = v52;
        v82 = 14;
        sub_1D57CBCF0();
        v54 = v68;
        sub_1D5AAEC7C();
        v68 = v54;
        if (!v54)
        {
          (*(void (**)(char *, uint64_t))(v59 + 8))(v66, v61);
          v55 = (uint64_t)v69;
          v56 = &v69[v70[18]];
          v57 = v71[1];
          *(_OWORD *)v56 = v71[0];
          *((_OWORD *)v56 + 1) = v57;
          v58 = v73;
          *((_OWORD *)v56 + 2) = v72;
          *((_OWORD *)v56 + 3) = v58;
          *((_OWORD *)v56 + 4) = v74;
          sub_1D583493C(v55, v60);
          __swift_destroy_boxed_opaque_existential_1(v67);
          return sub_1D5834980(v55);
        }
        (*(void (**)(char *, uint64_t))(v59 + 8))(v66, v61);
        __swift_destroy_boxed_opaque_existential_1(v67);
        LODWORD(v67) = 1;
      }
      v16 = v69;
      (*(void (**)(char *, uint64_t))(v64 + 8))(v69, v62);
      (*(void (**)(char *, uint64_t))(v63 + 8))(&v16[v70[5]], v65);
      LOBYTE(v18) = 1;
      v19 = 1;
      v20 = 1;
      v21 = 1;
      v22 = 1;
      LODWORD(v66) = 1;
      v23 = 1;
LABEL_9:
      sub_1D57E4810((uint64_t)&v16[v70[6]], (uint64_t)&v78, (unint64_t *)&qword_1ED9CE420);
      result = sub_1D580D964((uint64_t)&v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1D580D9D8);
      if ((v18 & 1) != 0)
        goto LABEL_10;
      goto LABEL_21;
    }
    (*(void (**)(char *, uint64_t))(v59 + 8))(v66, v61);
    v15 = 959;
    LODWORD(v66) = 1;
  }
  v16 = v69;
  result = __swift_destroy_boxed_opaque_existential_1(v67);
  v18 = (v15 >> 3) & 1;
  v19 = (v15 >> 4) & 1;
  v20 = (v15 >> 5) & 1;
  v21 = (v15 >> 7) & 1;
  v22 = (v15 >> 8) & 1;
  if ((v15 & 1) != 0)
    result = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v16, v62);
  if ((v15 & 2) != 0)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(&v16[v70[5]], v65);
    if ((v15 & 4) != 0)
      goto LABEL_8;
  }
  else if ((v15 & 4) != 0)
  {
LABEL_8:
    v23 = 0;
    v81 = 0;
    LODWORD(v67) = 0;
    goto LABEL_9;
  }
  LODWORD(v67) = 0;
  v81 = 0;
  v23 = 0;
  if ((v15 & 8) != 0)
  {
LABEL_10:
    v24 = v70;
    result = sub_1D57DEAB8(*(_QWORD *)&v16[v70[7]], *(_QWORD *)&v16[v70[7] + 8]);
    if ((v19 & 1) == 0)
      goto LABEL_11;
    goto LABEL_22;
  }
LABEL_21:
  v24 = v70;
  if (!v19)
  {
LABEL_11:
    if (v20)
      goto LABEL_12;
    goto LABEL_23;
  }
LABEL_22:
  result = sub_1D57DAEDC(*(_QWORD *)&v16[v24[8]], *(_QWORD *)&v16[v24[8] + 8], *(_QWORD *)&v16[v24[8] + 16]);
  if ((v20 & 1) != 0)
  {
LABEL_12:
    sub_1D57E4810((uint64_t)&v16[v24[9]], (uint64_t)&v78, (unint64_t *)&qword_1ED9CEEE0);
    result = (uint64_t)sub_1D57DE9C8(&v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DEA24);
    if ((v21 & 1) == 0)
      goto LABEL_13;
    goto LABEL_24;
  }
LABEL_23:
  if (!v21)
  {
LABEL_13:
    if (v22)
      goto LABEL_14;
    goto LABEL_25;
  }
LABEL_24:
  result = sub_1D57EA700(*(_QWORD *)&v16[v24[11]], *(_QWORD *)&v16[v24[11] + 8]);
  if ((v22 & 1) != 0)
  {
LABEL_14:
    result = swift_bridgeObjectRelease();
    if ((v66 & 1) == 0)
      goto LABEL_15;
    goto LABEL_26;
  }
LABEL_25:
  if (!(_DWORD)v66)
  {
LABEL_15:
    if (v23)
      goto LABEL_16;
    goto LABEL_27;
  }
LABEL_26:
  result = swift_bridgeObjectRelease();
  if ((v23 & 1) != 0)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    if (!v81)
      goto LABEL_17;
LABEL_28:
    result = swift_bridgeObjectRelease();
    if ((v67 & 1) == 0)
      return result;
    goto LABEL_29;
  }
LABEL_27:
  if (v81)
    goto LABEL_28;
LABEL_17:
  if (!(_DWORD)v67)
    return result;
LABEL_29:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D58348E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5833D58();
    v7 = a3(a1, &type metadata for SubscribeButtonExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D583493C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SubscribeButtonExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5834980(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SubscribeButtonExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58349BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SubscribeButtonExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58349D0(_QWORD *a1)
{
  return SubscribeButtonExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58349E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46F90, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF48FD0, a1);
}

uint64_t sub_1D5834A08@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(qword_1EFF46F98, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF48FE8, a1);
}

uint64_t sub_1D5834A2C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  v9 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v9, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v9, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v9, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v9, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v9, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v9, v26);
  v27 = a2 + a1[15];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v4, v28);
  v29 = a2 + a1[16];
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v4, v30);
  v31 = a2 + a1[17];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v31, v4, v32);
  v33 = a2 + a1[18];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v33, v9, v34);
}

uint64_t *initializeBufferWithCopyOfBuffer for SubscribeButtonExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v64 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v64 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
    v56 = a3[17];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
    v60 = a3[18];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
  }
  return a1;
}

uint64_t destroy for SubscribeButtonExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  v29 = a1 + a2[17];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
  v31 = a1 + a2[18];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
}

uint64_t initializeWithCopy for SubscribeButtonExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
  return a1;
}

uint64_t assignWithCopy for SubscribeButtonExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v60, v61, v62);
  return a1;
}

uint64_t initializeWithTake for SubscribeButtonExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
  return a1;
}

uint64_t assignWithTake for SubscribeButtonExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 40))(v60, v61, v62);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscribeButtonExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5836850(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
                          v12 = *(_QWORD *)(v24 - 8);
                          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                          {
                            v8 = v24;
                            v13 = a3[16];
                          }
                          else
                          {
                            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                            v12 = *(_QWORD *)(v25 - 8);
                            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                            {
                              v8 = v25;
                              v13 = a3[17];
                            }
                            else
                            {
                              sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
                              v8 = v26;
                              v12 = *(_QWORD *)(v26 - 8);
                              v13 = a3[18];
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SubscribeButtonExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5836C44(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
                          v14 = *(_QWORD *)(v26 - 8);
                          if (*(_DWORD *)(v14 + 84) == a3)
                          {
                            v10 = v26;
                            v15 = a4[16];
                          }
                          else
                          {
                            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                            v14 = *(_QWORD *)(v27 - 8);
                            if (*(_DWORD *)(v14 + 84) == a3)
                            {
                              v10 = v27;
                              v15 = a4[17];
                            }
                            else
                            {
                              sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
                              v10 = v28;
                              v14 = *(_QWORD *)(v28 - 8);
                              v15 = a4[18];
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5837034()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
                      if (v10 <= 0x3F)
                      {
                        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                        if (v11 <= 0x3F)
                        {
                          sub_1D579E208(319, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
                          if (v12 <= 0x3F)
                          {
                            sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                            if (v13 <= 0x3F)
                            {
                              sub_1D579E208(319, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
                              if (v14 <= 0x3F)
                                swift_initStructMetadata();
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SubscribeButtonExposureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = *((_QWORD *)v14 + 3);
    if (v15)
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      v13[8] = v14[8];
      *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
      *((_QWORD *)v13 + 3) = v15;
      v13[32] = v14[32];
      v16 = *((_QWORD *)v14 + 6);
      *((_QWORD *)v13 + 5) = *((_QWORD *)v14 + 5);
      *((_QWORD *)v13 + 6) = v16;
      *((_WORD *)v13 + 28) = *((_WORD *)v14 + 28);
      v18 = *((_QWORD *)v14 + 8);
      v17 = *((_QWORD *)v14 + 9);
      v13[80] = v14[80];
      *((_QWORD *)v13 + 8) = v18;
      *((_QWORD *)v13 + 9) = v17;
      *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
      *((_QWORD *)v13 + 13) = *((_QWORD *)v14 + 13);
      v13[112] = v14[112];
      *((_QWORD *)v13 + 15) = *((_QWORD *)v14 + 15);
      *((_DWORD *)v13 + 32) = *((_DWORD *)v14 + 32);
      v13[132] = v14[132];
      *(_WORD *)(v13 + 133) = *(_WORD *)(v14 + 133);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v20 = *((_OWORD *)v14 + 7);
      *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
      *((_OWORD *)v13 + 7) = v20;
      *(_QWORD *)(v13 + 127) = *(_QWORD *)(v14 + 127);
      v21 = *((_OWORD *)v14 + 3);
      *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
      *((_OWORD *)v13 + 3) = v21;
      v22 = *((_OWORD *)v14 + 5);
      *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
      *((_OWORD *)v13 + 5) = v22;
      v23 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v23;
    }
    v24 = a3[7];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = *((_QWORD *)v26 + 1);
    if (v27)
    {
      *(_QWORD *)v25 = *(_QWORD *)v26;
      *((_QWORD *)v25 + 1) = v27;
      *((_WORD *)v25 + 8) = *((_WORD *)v26 + 8);
      v28 = *((_QWORD *)v26 + 4);
      *((_QWORD *)v25 + 3) = *((_QWORD *)v26 + 3);
      *((_QWORD *)v25 + 4) = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v29 = *((_OWORD *)v26 + 1);
      *(_OWORD *)v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v29;
      *((_QWORD *)v25 + 4) = *((_QWORD *)v26 + 4);
    }
    v30 = a3[8];
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    v33 = *((_QWORD *)v32 + 2);
    if (v33 == 1)
    {
      *(_OWORD *)v31 = *(_OWORD *)v32;
      *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
    }
    else
    {
      *v31 = *v32;
      *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
      *((_QWORD *)v31 + 2) = v33;
      swift_bridgeObjectRetain();
    }
    v34 = a3[9];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    v37 = *((_QWORD *)v36 + 2);
    if (v37)
    {
      *(_WORD *)v35 = *(_WORD *)v36;
      *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
      *((_QWORD *)v35 + 2) = v37;
      *((_QWORD *)v35 + 3) = *((_QWORD *)v36 + 3);
      v38 = *((_QWORD *)v36 + 5);
      *((_QWORD *)v35 + 4) = *((_QWORD *)v36 + 4);
      *((_QWORD *)v35 + 5) = v38;
      v39 = *((_QWORD *)v36 + 7);
      *((_QWORD *)v35 + 6) = *((_QWORD *)v36 + 6);
      *((_QWORD *)v35 + 7) = v39;
      v40 = *((_QWORD *)v36 + 9);
      *((_QWORD *)v35 + 8) = *((_QWORD *)v36 + 8);
      *((_QWORD *)v35 + 9) = v40;
      v35[80] = v36[80];
      v41 = *((_QWORD *)v36 + 12);
      *((_QWORD *)v35 + 11) = *((_QWORD *)v36 + 11);
      *((_QWORD *)v35 + 12) = v41;
      *((_QWORD *)v35 + 13) = *((_QWORD *)v36 + 13);
      v35[112] = v36[112];
      v42 = *((_QWORD *)v36 + 16);
      *((_QWORD *)v35 + 15) = *((_QWORD *)v36 + 15);
      *((_QWORD *)v35 + 16) = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v43 = *((_OWORD *)v36 + 7);
      *((_OWORD *)v35 + 6) = *((_OWORD *)v36 + 6);
      *((_OWORD *)v35 + 7) = v43;
      *((_QWORD *)v35 + 16) = *((_QWORD *)v36 + 16);
      v44 = *((_OWORD *)v36 + 3);
      *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
      *((_OWORD *)v35 + 3) = v44;
      v45 = *((_OWORD *)v36 + 5);
      *((_OWORD *)v35 + 4) = *((_OWORD *)v36 + 4);
      *((_OWORD *)v35 + 5) = v45;
      v46 = *((_OWORD *)v36 + 1);
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *((_OWORD *)v35 + 1) = v46;
    }
    v47 = a3[11];
    *(_WORD *)((char *)a1 + a3[10]) = *(_WORD *)((char *)a2 + a3[10]);
    v48 = (char *)a1 + v47;
    v49 = (char *)a2 + v47;
    v50 = *((_QWORD *)v49 + 1);
    if (v50)
    {
      *(_QWORD *)v48 = *(_QWORD *)v49;
      *((_QWORD *)v48 + 1) = v50;
      *((_WORD *)v48 + 8) = *((_WORD *)v49 + 8);
      *((_QWORD *)v48 + 3) = *((_QWORD *)v49 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v51 = *((_OWORD *)v49 + 1);
      *(_OWORD *)v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v51;
    }
    v52 = a3[12];
    v53 = a3[13];
    v54 = (char *)a1 + v52;
    v55 = (char *)a2 + v52;
    v56 = *((_QWORD *)v55 + 1);
    *(_QWORD *)v54 = *(_QWORD *)v55;
    *((_QWORD *)v54 + 1) = v56;
    v54[16] = v55[16];
    v57 = (uint64_t *)((char *)a1 + v53);
    v58 = (uint64_t *)((char *)a2 + v53);
    v59 = v58[1];
    *v57 = *v58;
    v57[1] = v59;
    v60 = a3[14];
    v61 = a3[15];
    v62 = (char *)a1 + v60;
    v63 = (char *)a2 + v60;
    v64 = *((_QWORD *)v63 + 1);
    *(_QWORD *)v62 = *(_QWORD *)v63;
    *((_QWORD *)v62 + 1) = v64;
    *((_QWORD *)v62 + 2) = *((_QWORD *)v63 + 2);
    v62[24] = v63[24];
    v65 = (char *)a1 + v61;
    v66 = (char *)a2 + v61;
    v67 = *((_QWORD *)v66 + 1);
    *(_QWORD *)v65 = *(_QWORD *)v66;
    *((_QWORD *)v65 + 1) = v67;
    v65[16] = v66[16];
    v65[17] = v66[17];
    v68 = a3[17];
    *(_WORD *)((char *)a1 + a3[16]) = *(_WORD *)((char *)a2 + a3[16]);
    v69 = (char *)a1 + v68;
    v70 = (char *)a2 + v68;
    *v69 = *v70;
    v71 = *((_QWORD *)v70 + 2);
    *((_QWORD *)v69 + 1) = *((_QWORD *)v70 + 1);
    *((_QWORD *)v69 + 2) = v71;
    v69[24] = v70[24];
    v69[25] = v70[25];
    v72 = *((_QWORD *)v70 + 5);
    *((_QWORD *)v69 + 4) = *((_QWORD *)v70 + 4);
    *((_QWORD *)v69 + 5) = v72;
    v69[48] = v70[48];
    v73 = a3[18];
    v74 = (char *)a1 + v73;
    v75 = (char *)a2 + v73;
    v76 = *(uint64_t *)((char *)a2 + v73 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v76)
    {
      *(_QWORD *)v74 = *(_QWORD *)v75;
      *((_QWORD *)v74 + 1) = v76;
      v77 = *((_QWORD *)v75 + 3);
      *((_QWORD *)v74 + 2) = *((_QWORD *)v75 + 2);
      *((_QWORD *)v74 + 3) = v77;
      v78 = *((_OWORD *)v75 + 3);
      *((_OWORD *)v74 + 2) = *((_OWORD *)v75 + 2);
      *((_OWORD *)v74 + 3) = v78;
      *((_WORD *)v74 + 32) = *((_WORD *)v75 + 32);
      *((_QWORD *)v74 + 9) = *((_QWORD *)v75 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v79 = *((_OWORD *)v75 + 3);
      *((_OWORD *)v74 + 2) = *((_OWORD *)v75 + 2);
      *((_OWORD *)v74 + 3) = v79;
      *((_OWORD *)v74 + 4) = *((_OWORD *)v75 + 4);
      v80 = *((_OWORD *)v75 + 1);
      *(_OWORD *)v74 = *(_OWORD *)v75;
      *((_OWORD *)v74 + 1) = v80;
    }
  }
  return a1;
}

uint64_t destroy for SubscribeButtonExposureEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  if (*(_QWORD *)(a1 + a2[6] + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[7] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[8] + 16) != 1)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[9] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[11] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + a2[18] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SubscribeButtonExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(v13 + 24);
  if (v14)
  {
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
    *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
    *(_QWORD *)(v12 + 24) = v14;
    *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
    v15 = *(_QWORD *)(v13 + 48);
    *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
    *(_QWORD *)(v12 + 48) = v15;
    *(_WORD *)(v12 + 56) = *(_WORD *)(v13 + 56);
    v17 = *(_QWORD *)(v13 + 64);
    v16 = *(_QWORD *)(v13 + 72);
    *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
    *(_QWORD *)(v12 + 64) = v17;
    *(_QWORD *)(v12 + 72) = v16;
    *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
    *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
    *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
    *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
    *(_DWORD *)(v12 + 128) = *(_DWORD *)(v13 + 128);
    *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
    *(_WORD *)(v12 + 133) = *(_WORD *)(v13 + 133);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v18 = *(_OWORD *)(v13 + 112);
    *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
    *(_OWORD *)(v12 + 112) = v18;
    *(_QWORD *)(v12 + 127) = *(_QWORD *)(v13 + 127);
    v19 = *(_OWORD *)(v13 + 48);
    *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
    *(_OWORD *)(v12 + 48) = v19;
    v20 = *(_OWORD *)(v13 + 80);
    *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
    *(_OWORD *)(v12 + 80) = v20;
    v21 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v21;
  }
  v22 = a3[7];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_QWORD *)(v24 + 8);
  if (v25)
  {
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *(_QWORD *)(v23 + 8) = v25;
    *(_WORD *)(v23 + 16) = *(_WORD *)(v24 + 16);
    v26 = *(_QWORD *)(v24 + 32);
    *(_QWORD *)(v23 + 24) = *(_QWORD *)(v24 + 24);
    *(_QWORD *)(v23 + 32) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v27 = *(_OWORD *)(v24 + 16);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 16) = v27;
    *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
  }
  v28 = a3[8];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = *(_QWORD *)(v30 + 16);
  if (v31 == 1)
  {
    *(_OWORD *)v29 = *(_OWORD *)v30;
    *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
  }
  else
  {
    *(_BYTE *)v29 = *(_BYTE *)v30;
    *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
    *(_QWORD *)(v29 + 16) = v31;
    swift_bridgeObjectRetain();
  }
  v32 = a3[9];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_QWORD *)(v34 + 16);
  if (v35)
  {
    *(_WORD *)v33 = *(_WORD *)v34;
    *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
    *(_QWORD *)(v33 + 16) = v35;
    *(_QWORD *)(v33 + 24) = *(_QWORD *)(v34 + 24);
    v36 = *(_QWORD *)(v34 + 40);
    *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
    *(_QWORD *)(v33 + 40) = v36;
    v37 = *(_QWORD *)(v34 + 56);
    *(_QWORD *)(v33 + 48) = *(_QWORD *)(v34 + 48);
    *(_QWORD *)(v33 + 56) = v37;
    v38 = *(_QWORD *)(v34 + 72);
    *(_QWORD *)(v33 + 64) = *(_QWORD *)(v34 + 64);
    *(_QWORD *)(v33 + 72) = v38;
    *(_BYTE *)(v33 + 80) = *(_BYTE *)(v34 + 80);
    v39 = *(_QWORD *)(v34 + 96);
    *(_QWORD *)(v33 + 88) = *(_QWORD *)(v34 + 88);
    *(_QWORD *)(v33 + 96) = v39;
    *(_QWORD *)(v33 + 104) = *(_QWORD *)(v34 + 104);
    *(_BYTE *)(v33 + 112) = *(_BYTE *)(v34 + 112);
    v40 = *(_QWORD *)(v34 + 128);
    *(_QWORD *)(v33 + 120) = *(_QWORD *)(v34 + 120);
    *(_QWORD *)(v33 + 128) = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v41 = *(_OWORD *)(v34 + 112);
    *(_OWORD *)(v33 + 96) = *(_OWORD *)(v34 + 96);
    *(_OWORD *)(v33 + 112) = v41;
    *(_QWORD *)(v33 + 128) = *(_QWORD *)(v34 + 128);
    v42 = *(_OWORD *)(v34 + 48);
    *(_OWORD *)(v33 + 32) = *(_OWORD *)(v34 + 32);
    *(_OWORD *)(v33 + 48) = v42;
    v43 = *(_OWORD *)(v34 + 80);
    *(_OWORD *)(v33 + 64) = *(_OWORD *)(v34 + 64);
    *(_OWORD *)(v33 + 80) = v43;
    v44 = *(_OWORD *)(v34 + 16);
    *(_OWORD *)v33 = *(_OWORD *)v34;
    *(_OWORD *)(v33 + 16) = v44;
  }
  v45 = a3[11];
  *(_WORD *)(a1 + a3[10]) = *(_WORD *)(a2 + a3[10]);
  v46 = a1 + v45;
  v47 = a2 + v45;
  v48 = *(_QWORD *)(v47 + 8);
  if (v48)
  {
    *(_QWORD *)v46 = *(_QWORD *)v47;
    *(_QWORD *)(v46 + 8) = v48;
    *(_WORD *)(v46 + 16) = *(_WORD *)(v47 + 16);
    *(_QWORD *)(v46 + 24) = *(_QWORD *)(v47 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v49 = *(_OWORD *)(v47 + 16);
    *(_OWORD *)v46 = *(_OWORD *)v47;
    *(_OWORD *)(v46 + 16) = v49;
  }
  v50 = a3[12];
  v51 = a3[13];
  v52 = a1 + v50;
  v53 = a2 + v50;
  v54 = *(_QWORD *)(v53 + 8);
  *(_QWORD *)v52 = *(_QWORD *)v53;
  *(_QWORD *)(v52 + 8) = v54;
  *(_BYTE *)(v52 + 16) = *(_BYTE *)(v53 + 16);
  v55 = (_QWORD *)(a1 + v51);
  v56 = (_QWORD *)(a2 + v51);
  v57 = v56[1];
  *v55 = *v56;
  v55[1] = v57;
  v58 = a3[14];
  v59 = a3[15];
  v60 = a1 + v58;
  v61 = a2 + v58;
  v62 = *(_QWORD *)(v61 + 8);
  *(_QWORD *)v60 = *(_QWORD *)v61;
  *(_QWORD *)(v60 + 8) = v62;
  *(_QWORD *)(v60 + 16) = *(_QWORD *)(v61 + 16);
  *(_BYTE *)(v60 + 24) = *(_BYTE *)(v61 + 24);
  v63 = a1 + v59;
  v64 = a2 + v59;
  v65 = *(_QWORD *)(v64 + 8);
  *(_QWORD *)v63 = *(_QWORD *)v64;
  *(_QWORD *)(v63 + 8) = v65;
  *(_BYTE *)(v63 + 16) = *(_BYTE *)(v64 + 16);
  *(_BYTE *)(v63 + 17) = *(_BYTE *)(v64 + 17);
  v66 = a3[17];
  *(_WORD *)(a1 + a3[16]) = *(_WORD *)(a2 + a3[16]);
  v67 = a1 + v66;
  v68 = a2 + v66;
  *(_BYTE *)v67 = *(_BYTE *)v68;
  v69 = *(_QWORD *)(v68 + 16);
  *(_QWORD *)(v67 + 8) = *(_QWORD *)(v68 + 8);
  *(_QWORD *)(v67 + 16) = v69;
  *(_BYTE *)(v67 + 24) = *(_BYTE *)(v68 + 24);
  *(_BYTE *)(v67 + 25) = *(_BYTE *)(v68 + 25);
  v70 = *(_QWORD *)(v68 + 40);
  *(_QWORD *)(v67 + 32) = *(_QWORD *)(v68 + 32);
  *(_QWORD *)(v67 + 40) = v70;
  *(_BYTE *)(v67 + 48) = *(_BYTE *)(v68 + 48);
  v71 = a3[18];
  v72 = a1 + v71;
  v73 = a2 + v71;
  v74 = *(_QWORD *)(a2 + v71 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v74)
  {
    *(_QWORD *)v72 = *(_QWORD *)v73;
    *(_QWORD *)(v72 + 8) = v74;
    v75 = *(_QWORD *)(v73 + 24);
    *(_QWORD *)(v72 + 16) = *(_QWORD *)(v73 + 16);
    *(_QWORD *)(v72 + 24) = v75;
    v76 = *(_OWORD *)(v73 + 48);
    *(_OWORD *)(v72 + 32) = *(_OWORD *)(v73 + 32);
    *(_OWORD *)(v72 + 48) = v76;
    *(_WORD *)(v72 + 64) = *(_WORD *)(v73 + 64);
    *(_QWORD *)(v72 + 72) = *(_QWORD *)(v73 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v77 = *(_OWORD *)(v73 + 48);
    *(_OWORD *)(v72 + 32) = *(_OWORD *)(v73 + 32);
    *(_OWORD *)(v72 + 48) = v77;
    *(_OWORD *)(v72 + 64) = *(_OWORD *)(v73 + 64);
    v78 = *(_OWORD *)(v73 + 16);
    *(_OWORD *)v72 = *(_OWORD *)v73;
    *(_OWORD *)(v72 + 16) = v78;
  }
  return a1;
}

uint64_t assignWithCopy for SubscribeButtonExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  __int128 *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a1 + v11 + 24);
  v15 = *(_QWORD *)(a2 + v11 + 24);
  if (v14)
  {
    if (v15)
    {
      *(_BYTE *)v12 = *(_BYTE *)v13;
      *(_DWORD *)(v12 + 4) = *(_DWORD *)(v13 + 4);
      *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
      *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
      *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
      *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
      v16 = *(_QWORD *)(v13 + 48);
      *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
      *(_QWORD *)(v12 + 48) = v16;
      *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
      *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)(v13 + 72);
      *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
      *(_QWORD *)(v12 + 72) = v17;
      *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
      *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
      *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
      *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
      *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
      *(_BYTE *)(v12 + 130) = *(_BYTE *)(v13 + 130);
      *(_BYTE *)(v12 + 131) = *(_BYTE *)(v13 + 131);
      *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
      *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
      *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
    }
    else
    {
      sub_1D5810518(v12);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      v20 = *(_OWORD *)(v13 + 64);
      v22 = *(_OWORD *)(v13 + 16);
      v21 = *(_OWORD *)(v13 + 32);
      *(_OWORD *)(v12 + 48) = *(_OWORD *)(v13 + 48);
      *(_OWORD *)(v12 + 64) = v20;
      *(_OWORD *)(v12 + 16) = v22;
      *(_OWORD *)(v12 + 32) = v21;
      v24 = *(_OWORD *)(v13 + 96);
      v23 = *(_OWORD *)(v13 + 112);
      v25 = *(_OWORD *)(v13 + 80);
      *(_QWORD *)(v12 + 127) = *(_QWORD *)(v13 + 127);
      *(_OWORD *)(v12 + 96) = v24;
      *(_OWORD *)(v12 + 112) = v23;
      *(_OWORD *)(v12 + 80) = v25;
    }
  }
  else if (v15)
  {
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
    *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
    *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
    *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
    *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
    v18 = *(_QWORD *)(v13 + 48);
    *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
    *(_QWORD *)(v12 + 48) = v18;
    *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
    *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
    v19 = *(_QWORD *)(v13 + 72);
    *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
    *(_QWORD *)(v12 + 72) = v19;
    *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
    *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
    *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
    *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
    *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
    *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
    *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
    *(_BYTE *)(v12 + 130) = *(_BYTE *)(v13 + 130);
    *(_BYTE *)(v12 + 131) = *(_BYTE *)(v13 + 131);
    *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
    *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
    *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
    v26 = *(_OWORD *)(v13 + 16);
    v27 = *(_OWORD *)(v13 + 32);
    v28 = *(_OWORD *)(v13 + 64);
    *(_OWORD *)(v12 + 48) = *(_OWORD *)(v13 + 48);
    *(_OWORD *)(v12 + 64) = v28;
    *(_OWORD *)(v12 + 16) = v26;
    *(_OWORD *)(v12 + 32) = v27;
    v29 = *(_OWORD *)(v13 + 80);
    v30 = *(_OWORD *)(v13 + 96);
    v31 = *(_OWORD *)(v13 + 112);
    *(_QWORD *)(v12 + 127) = *(_QWORD *)(v13 + 127);
    *(_OWORD *)(v12 + 96) = v30;
    *(_OWORD *)(v12 + 112) = v31;
    *(_OWORD *)(v12 + 80) = v29;
  }
  v32 = a3[7];
  v33 = a1 + v32;
  v34 = (__int128 *)(a2 + v32);
  v35 = *(_QWORD *)(a1 + v32 + 8);
  v36 = *(_QWORD *)(a2 + v32 + 8);
  if (v35)
  {
    if (v36)
    {
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *(_QWORD *)(v33 + 8) = *((_QWORD *)v34 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v33 + 16) = *((_BYTE *)v34 + 16);
      *(_BYTE *)(v33 + 17) = *((_BYTE *)v34 + 17);
      *(_QWORD *)(v33 + 24) = *((_QWORD *)v34 + 3);
      *(_QWORD *)(v33 + 32) = *((_QWORD *)v34 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E1784(v33);
      v37 = *((_QWORD *)v34 + 4);
      v38 = v34[1];
      *(_OWORD *)v33 = *v34;
      *(_OWORD *)(v33 + 16) = v38;
      *(_QWORD *)(v33 + 32) = v37;
    }
  }
  else if (v36)
  {
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *(_QWORD *)(v33 + 8) = *((_QWORD *)v34 + 1);
    *(_BYTE *)(v33 + 16) = *((_BYTE *)v34 + 16);
    *(_BYTE *)(v33 + 17) = *((_BYTE *)v34 + 17);
    *(_QWORD *)(v33 + 24) = *((_QWORD *)v34 + 3);
    *(_QWORD *)(v33 + 32) = *((_QWORD *)v34 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v39 = *v34;
    v40 = v34[1];
    *(_QWORD *)(v33 + 32) = *((_QWORD *)v34 + 4);
    *(_OWORD *)v33 = v39;
    *(_OWORD *)(v33 + 16) = v40;
  }
  v41 = a3[8];
  v42 = a1 + v41;
  v43 = (__int128 *)(a2 + v41);
  v44 = *(_QWORD *)(a1 + v41 + 16);
  v45 = *(_QWORD *)(a2 + v41 + 16);
  if (v44 == 1)
  {
    if (v45 == 1)
    {
      v46 = *v43;
      *(_QWORD *)(v42 + 16) = *((_QWORD *)v43 + 2);
      *(_OWORD *)v42 = v46;
    }
    else
    {
      *(_BYTE *)v42 = *(_BYTE *)v43;
      *(_QWORD *)(v42 + 8) = *((_QWORD *)v43 + 1);
      *(_QWORD *)(v42 + 16) = *((_QWORD *)v43 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v45 == 1)
  {
    sub_1D57D9100(v42);
    v47 = *((_QWORD *)v43 + 2);
    *(_OWORD *)v42 = *v43;
    *(_QWORD *)(v42 + 16) = v47;
  }
  else
  {
    *(_BYTE *)v42 = *(_BYTE *)v43;
    *(_QWORD *)(v42 + 8) = *((_QWORD *)v43 + 1);
    *(_QWORD *)(v42 + 16) = *((_QWORD *)v43 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v48 = a3[9];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = *(_QWORD *)(a1 + v48 + 16);
  v52 = *(_QWORD *)(a2 + v48 + 16);
  if (v51)
  {
    if (v52)
    {
      *(_BYTE *)v49 = *(_BYTE *)v50;
      *(_BYTE *)(v49 + 1) = *(_BYTE *)(v50 + 1);
      *(_QWORD *)(v49 + 8) = *(_QWORD *)(v50 + 8);
      *(_QWORD *)(v49 + 16) = *(_QWORD *)(v50 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v49 + 24) = *(_DWORD *)(v50 + 24);
      *(_DWORD *)(v49 + 28) = *(_DWORD *)(v50 + 28);
      *(_QWORD *)(v49 + 32) = *(_QWORD *)(v50 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v49 + 40) = *(_QWORD *)(v50 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v49 + 48) = *(_QWORD *)(v50 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v49 + 56) = *(_QWORD *)(v50 + 56);
      *(_QWORD *)(v49 + 64) = *(_QWORD *)(v50 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v49 + 72) = *(_QWORD *)(v50 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v49 + 80) = *(_BYTE *)(v50 + 80);
      *(_QWORD *)(v49 + 88) = *(_QWORD *)(v50 + 88);
      *(_QWORD *)(v49 + 96) = *(_QWORD *)(v50 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v53 = *(_QWORD *)(v50 + 104);
      *(_BYTE *)(v49 + 112) = *(_BYTE *)(v50 + 112);
      *(_QWORD *)(v49 + 104) = v53;
      *(_QWORD *)(v49 + 120) = *(_QWORD *)(v50 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v49 + 128) = *(_QWORD *)(v50 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v49);
      *(_OWORD *)v49 = *(_OWORD *)v50;
      v55 = *(_OWORD *)(v50 + 64);
      v57 = *(_OWORD *)(v50 + 16);
      v56 = *(_OWORD *)(v50 + 32);
      *(_OWORD *)(v49 + 48) = *(_OWORD *)(v50 + 48);
      *(_OWORD *)(v49 + 64) = v55;
      *(_OWORD *)(v49 + 16) = v57;
      *(_OWORD *)(v49 + 32) = v56;
      v59 = *(_OWORD *)(v50 + 96);
      v58 = *(_OWORD *)(v50 + 112);
      v60 = *(_OWORD *)(v50 + 80);
      *(_QWORD *)(v49 + 128) = *(_QWORD *)(v50 + 128);
      *(_OWORD *)(v49 + 96) = v59;
      *(_OWORD *)(v49 + 112) = v58;
      *(_OWORD *)(v49 + 80) = v60;
    }
  }
  else if (v52)
  {
    *(_BYTE *)v49 = *(_BYTE *)v50;
    *(_BYTE *)(v49 + 1) = *(_BYTE *)(v50 + 1);
    *(_QWORD *)(v49 + 8) = *(_QWORD *)(v50 + 8);
    *(_QWORD *)(v49 + 16) = *(_QWORD *)(v50 + 16);
    *(_DWORD *)(v49 + 24) = *(_DWORD *)(v50 + 24);
    *(_DWORD *)(v49 + 28) = *(_DWORD *)(v50 + 28);
    *(_QWORD *)(v49 + 32) = *(_QWORD *)(v50 + 32);
    *(_QWORD *)(v49 + 40) = *(_QWORD *)(v50 + 40);
    *(_QWORD *)(v49 + 48) = *(_QWORD *)(v50 + 48);
    *(_QWORD *)(v49 + 56) = *(_QWORD *)(v50 + 56);
    *(_QWORD *)(v49 + 64) = *(_QWORD *)(v50 + 64);
    *(_QWORD *)(v49 + 72) = *(_QWORD *)(v50 + 72);
    *(_BYTE *)(v49 + 80) = *(_BYTE *)(v50 + 80);
    *(_QWORD *)(v49 + 88) = *(_QWORD *)(v50 + 88);
    *(_QWORD *)(v49 + 96) = *(_QWORD *)(v50 + 96);
    v54 = *(_QWORD *)(v50 + 104);
    *(_BYTE *)(v49 + 112) = *(_BYTE *)(v50 + 112);
    *(_QWORD *)(v49 + 104) = v54;
    *(_QWORD *)(v49 + 120) = *(_QWORD *)(v50 + 120);
    *(_QWORD *)(v49 + 128) = *(_QWORD *)(v50 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v49 = *(_OWORD *)v50;
    v61 = *(_OWORD *)(v50 + 16);
    v62 = *(_OWORD *)(v50 + 32);
    v63 = *(_OWORD *)(v50 + 64);
    *(_OWORD *)(v49 + 48) = *(_OWORD *)(v50 + 48);
    *(_OWORD *)(v49 + 64) = v63;
    *(_OWORD *)(v49 + 16) = v61;
    *(_OWORD *)(v49 + 32) = v62;
    v64 = *(_OWORD *)(v50 + 80);
    v65 = *(_OWORD *)(v50 + 96);
    v66 = *(_OWORD *)(v50 + 112);
    *(_QWORD *)(v49 + 128) = *(_QWORD *)(v50 + 128);
    *(_OWORD *)(v49 + 96) = v65;
    *(_OWORD *)(v49 + 112) = v66;
    *(_OWORD *)(v49 + 80) = v64;
  }
  *(_WORD *)(a1 + a3[10]) = *(_WORD *)(a2 + a3[10]);
  v67 = a3[11];
  v68 = a1 + v67;
  v69 = a2 + v67;
  v70 = *(_QWORD *)(a1 + v67 + 8);
  v71 = *(_QWORD *)(a2 + v67 + 8);
  if (v70)
  {
    if (v71)
    {
      *(_QWORD *)v68 = *(_QWORD *)v69;
      *(_QWORD *)(v68 + 8) = *(_QWORD *)(v69 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v68 + 16) = *(_BYTE *)(v69 + 16);
      *(_BYTE *)(v68 + 17) = *(_BYTE *)(v69 + 17);
      *(_QWORD *)(v68 + 24) = *(_QWORD *)(v69 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE47C(v68);
      v72 = *(_OWORD *)(v69 + 16);
      *(_OWORD *)v68 = *(_OWORD *)v69;
      *(_OWORD *)(v68 + 16) = v72;
    }
  }
  else if (v71)
  {
    *(_QWORD *)v68 = *(_QWORD *)v69;
    *(_QWORD *)(v68 + 8) = *(_QWORD *)(v69 + 8);
    *(_BYTE *)(v68 + 16) = *(_BYTE *)(v69 + 16);
    *(_BYTE *)(v68 + 17) = *(_BYTE *)(v69 + 17);
    *(_QWORD *)(v68 + 24) = *(_QWORD *)(v69 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v73 = *(_OWORD *)(v69 + 16);
    *(_OWORD *)v68 = *(_OWORD *)v69;
    *(_OWORD *)(v68 + 16) = v73;
  }
  v74 = a3[12];
  v75 = a1 + v74;
  v76 = a2 + v74;
  *(_QWORD *)v75 = *(_QWORD *)(a2 + v74);
  *(_QWORD *)(v75 + 8) = *(_QWORD *)(a2 + v74 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v75 + 16) = *(_BYTE *)(v76 + 16);
  v77 = a3[13];
  v78 = (_QWORD *)(a1 + v77);
  v79 = (_QWORD *)(a2 + v77);
  *v78 = *v79;
  v78[1] = v79[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v80 = a3[14];
  v81 = a1 + v80;
  v82 = a2 + v80;
  *(_QWORD *)v81 = *(_QWORD *)(a2 + v80);
  *(_QWORD *)(v81 + 8) = *(_QWORD *)(a2 + v80 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v83 = *(_QWORD *)(v82 + 16);
  *(_BYTE *)(v81 + 24) = *(_BYTE *)(v82 + 24);
  *(_QWORD *)(v81 + 16) = v83;
  v84 = a3[15];
  v85 = a1 + v84;
  v86 = a2 + v84;
  *(_QWORD *)v85 = *(_QWORD *)(a2 + v84);
  *(_QWORD *)(v85 + 8) = *(_QWORD *)(a2 + v84 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v85 + 16) = *(_BYTE *)(v86 + 16);
  *(_BYTE *)(v85 + 17) = *(_BYTE *)(v86 + 17);
  v87 = a3[16];
  v88 = (_BYTE *)(a1 + v87);
  v89 = (_BYTE *)(a2 + v87);
  *v88 = *v89;
  v88[1] = v89[1];
  v90 = a3[17];
  v91 = a1 + v90;
  v92 = a2 + v90;
  *(_BYTE *)v91 = *(_BYTE *)(a2 + v90);
  *(_QWORD *)(v91 + 8) = *(_QWORD *)(a2 + v90 + 8);
  *(_QWORD *)(v91 + 16) = *(_QWORD *)(a2 + v90 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v91 + 24) = *(_BYTE *)(v92 + 24);
  *(_BYTE *)(v91 + 25) = *(_BYTE *)(v92 + 25);
  *(_QWORD *)(v91 + 32) = *(_QWORD *)(v92 + 32);
  *(_QWORD *)(v91 + 40) = *(_QWORD *)(v92 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v91 + 48) = *(_BYTE *)(v92 + 48);
  v93 = a3[18];
  v94 = a1 + v93;
  v95 = a2 + v93;
  v96 = *(_QWORD *)(a1 + v93 + 8);
  v97 = *(_QWORD *)(v95 + 8);
  if (v96)
  {
    if (v97)
    {
      *(_QWORD *)v94 = *(_QWORD *)v95;
      *(_QWORD *)(v94 + 8) = *(_QWORD *)(v95 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v94 + 16) = *(_QWORD *)(v95 + 16);
      *(_QWORD *)(v94 + 24) = *(_QWORD *)(v95 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v94 + 32) = *(_DWORD *)(v95 + 32);
      v98 = *(_QWORD *)(v95 + 40);
      *(_BYTE *)(v94 + 48) = *(_BYTE *)(v95 + 48);
      *(_QWORD *)(v94 + 40) = v98;
      v99 = *(_QWORD *)(v95 + 56);
      *(_BYTE *)(v94 + 64) = *(_BYTE *)(v95 + 64);
      *(_QWORD *)(v94 + 56) = v99;
      *(_BYTE *)(v94 + 65) = *(_BYTE *)(v95 + 65);
      *(_QWORD *)(v94 + 72) = *(_QWORD *)(v95 + 72);
    }
    else
    {
      sub_1D58388FC(v94);
      *(_OWORD *)v94 = *(_OWORD *)v95;
      v102 = *(_OWORD *)(v95 + 64);
      v104 = *(_OWORD *)(v95 + 16);
      v103 = *(_OWORD *)(v95 + 32);
      *(_OWORD *)(v94 + 48) = *(_OWORD *)(v95 + 48);
      *(_OWORD *)(v94 + 64) = v102;
      *(_OWORD *)(v94 + 16) = v104;
      *(_OWORD *)(v94 + 32) = v103;
    }
  }
  else if (v97)
  {
    *(_QWORD *)v94 = *(_QWORD *)v95;
    *(_QWORD *)(v94 + 8) = *(_QWORD *)(v95 + 8);
    *(_QWORD *)(v94 + 16) = *(_QWORD *)(v95 + 16);
    *(_QWORD *)(v94 + 24) = *(_QWORD *)(v95 + 24);
    v100 = *(_OWORD *)(v95 + 32);
    v101 = *(_OWORD *)(v95 + 48);
    *(_BYTE *)(v94 + 64) = *(_BYTE *)(v95 + 64);
    *(_OWORD *)(v94 + 32) = v100;
    *(_OWORD *)(v94 + 48) = v101;
    *(_BYTE *)(v94 + 65) = *(_BYTE *)(v95 + 65);
    *(_QWORD *)(v94 + 72) = *(_QWORD *)(v95 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v94 = *(_OWORD *)v95;
    v105 = *(_OWORD *)(v95 + 16);
    v106 = *(_OWORD *)(v95 + 32);
    v107 = *(_OWORD *)(v95 + 64);
    *(_OWORD *)(v94 + 48) = *(_OWORD *)(v95 + 48);
    *(_OWORD *)(v94 + 64) = v107;
    *(_OWORD *)(v94 + 16) = v105;
    *(_OWORD *)(v94 + 32) = v106;
  }
  return a1;
}

uint64_t sub_1D58388FC(uint64_t a1)
{
  destroy for IssueData();
  return a1;
}

uint64_t initializeWithTake for SubscribeButtonExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _OWORD *v33;
  _OWORD *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  _OWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  _OWORD *v51;
  _OWORD *v52;
  __int128 v53;
  __int128 v54;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  *(_QWORD *)(v13 + 127) = *(_QWORD *)(v14 + 127);
  v16 = *(_OWORD *)(v14 + 112);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(v14 + 96);
  *(_OWORD *)(v13 + 112) = v16;
  v17 = *(_OWORD *)(v14 + 80);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v14 + 64);
  *(_OWORD *)(v13 + 80) = v17;
  v18 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v18;
  v19 = a1 + v12;
  v20 = a2 + v12;
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  v22 = a3[8];
  v23 = a3[9];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  v26 = a1 + v23;
  v27 = a2 + v23;
  v28 = *(_OWORD *)(v27 + 48);
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  *(_OWORD *)(v26 + 48) = v28;
  *(_QWORD *)(v26 + 128) = *(_QWORD *)(v27 + 128);
  v29 = *(_OWORD *)(v27 + 112);
  *(_OWORD *)(v26 + 96) = *(_OWORD *)(v27 + 96);
  *(_OWORD *)(v26 + 112) = v29;
  v30 = *(_OWORD *)(v27 + 80);
  *(_OWORD *)(v26 + 64) = *(_OWORD *)(v27 + 64);
  *(_OWORD *)(v26 + 80) = v30;
  v31 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v31;
  v32 = a3[11];
  *(_WORD *)(a1 + a3[10]) = *(_WORD *)(a2 + a3[10]);
  v33 = (_OWORD *)(a1 + v32);
  v34 = (_OWORD *)(a2 + v32);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  v36 = a3[12];
  v37 = a3[13];
  v38 = a1 + v36;
  v39 = a2 + v36;
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_BYTE *)(v38 + 16) = *(_BYTE *)(v39 + 16);
  *(_OWORD *)(a1 + v37) = *(_OWORD *)(a2 + v37);
  v40 = a3[14];
  v41 = a3[15];
  v42 = (_OWORD *)(a1 + v40);
  v43 = (_OWORD *)(a2 + v40);
  *v42 = *v43;
  *(_OWORD *)((char *)v42 + 9) = *(_OWORD *)((char *)v43 + 9);
  v44 = a1 + v41;
  v45 = a2 + v41;
  *(_OWORD *)v44 = *(_OWORD *)v45;
  *(_WORD *)(v44 + 16) = *(_WORD *)(v45 + 16);
  v46 = a3[17];
  *(_WORD *)(a1 + a3[16]) = *(_WORD *)(a2 + a3[16]);
  v47 = a1 + v46;
  v48 = a2 + v46;
  v49 = *(_OWORD *)(v48 + 16);
  *(_OWORD *)v47 = *(_OWORD *)v48;
  *(_OWORD *)(v47 + 16) = v49;
  *(_OWORD *)(v47 + 32) = *(_OWORD *)(v48 + 32);
  *(_BYTE *)(v47 + 48) = *(_BYTE *)(v48 + 48);
  v50 = a3[18];
  v51 = (_OWORD *)(a1 + v50);
  v52 = (_OWORD *)(a2 + v50);
  v53 = v52[3];
  v51[2] = v52[2];
  v51[3] = v53;
  v51[4] = v52[4];
  v54 = v52[1];
  *v51 = *v52;
  v51[1] = v54;
  return a1;
}

uint64_t assignWithTake for SubscribeButtonExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int16 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  if (*(_QWORD *)(a1 + v11 + 24))
  {
    v14 = *(_QWORD *)(v13 + 24);
    if (v14)
    {
      *(_BYTE *)v12 = *(_BYTE *)v13;
      *(_DWORD *)(v12 + 4) = *(_DWORD *)(v13 + 4);
      *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
      *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
      *(_QWORD *)(v12 + 24) = v14;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
      v15 = *(_QWORD *)(v13 + 48);
      *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
      *(_QWORD *)(v12 + 48) = v15;
      *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
      *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
      *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
      *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
      *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
      *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
      *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
      *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
      *(_BYTE *)(v12 + 130) = *(_BYTE *)(v13 + 130);
      *(_BYTE *)(v12 + 131) = *(_BYTE *)(v13 + 131);
      *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
      *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
      *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
      goto LABEL_6;
    }
    sub_1D5810518(v12);
  }
  v16 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(v12 + 112) = v16;
  *(_QWORD *)(v12 + 127) = *(_QWORD *)(v13 + 127);
  v17 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(v12 + 48) = v17;
  v18 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(v12 + 80) = v18;
  v19 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v19;
LABEL_6:
  v20 = a3[7];
  v21 = a1 + v20;
  v22 = a2 + v20;
  if (*(_QWORD *)(a1 + v20 + 8))
  {
    v23 = *(_QWORD *)(v22 + 8);
    if (v23)
    {
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *(_QWORD *)(v21 + 8) = v23;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v21 + 16) = *(_BYTE *)(v22 + 16);
      *(_BYTE *)(v21 + 17) = *(_BYTE *)(v22 + 17);
      v24 = *(_QWORD *)(v22 + 32);
      *(_QWORD *)(v21 + 24) = *(_QWORD *)(v22 + 24);
      *(_QWORD *)(v21 + 32) = v24;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D57E1784(v21);
  }
  v25 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v25;
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
LABEL_11:
  v26 = a3[8];
  v27 = a1 + v26;
  v28 = a2 + v26;
  if (*(_QWORD *)(a1 + v26 + 16) == 1)
  {
LABEL_14:
    *(_OWORD *)v27 = *(_OWORD *)v28;
    *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
    goto LABEL_16;
  }
  v29 = *(_QWORD *)(v28 + 16);
  if (v29 == 1)
  {
    sub_1D57D9100(v27);
    goto LABEL_14;
  }
  *(_BYTE *)v27 = *(_BYTE *)v28;
  *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
  *(_QWORD *)(v27 + 16) = v29;
  swift_bridgeObjectRelease();
LABEL_16:
  v30 = a3[9];
  v31 = a1 + v30;
  v32 = a2 + v30;
  if (*(_QWORD *)(a1 + v30 + 16))
  {
    v33 = *(_QWORD *)(v32 + 16);
    if (v33)
    {
      *(_WORD *)v31 = *(_WORD *)v32;
      *(_QWORD *)(v31 + 8) = *(_QWORD *)(v32 + 8);
      *(_QWORD *)(v31 + 16) = v33;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 24) = *(_QWORD *)(v32 + 24);
      *(_QWORD *)(v31 + 32) = *(_QWORD *)(v32 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 40) = *(_QWORD *)(v32 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 48) = *(_QWORD *)(v32 + 48);
      swift_bridgeObjectRelease();
      v34 = *(_QWORD *)(v32 + 64);
      *(_QWORD *)(v31 + 56) = *(_QWORD *)(v32 + 56);
      *(_QWORD *)(v31 + 64) = v34;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 72) = *(_QWORD *)(v32 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v31 + 80) = *(_BYTE *)(v32 + 80);
      v35 = *(_QWORD *)(v32 + 96);
      *(_QWORD *)(v31 + 88) = *(_QWORD *)(v32 + 88);
      *(_QWORD *)(v31 + 96) = v35;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 104) = *(_QWORD *)(v32 + 104);
      *(_BYTE *)(v31 + 112) = *(_BYTE *)(v32 + 112);
      *(_QWORD *)(v31 + 120) = *(_QWORD *)(v32 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 128) = *(_QWORD *)(v32 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1D57E17B8(v31);
  }
  v36 = *(_OWORD *)(v32 + 112);
  *(_OWORD *)(v31 + 96) = *(_OWORD *)(v32 + 96);
  *(_OWORD *)(v31 + 112) = v36;
  *(_QWORD *)(v31 + 128) = *(_QWORD *)(v32 + 128);
  v37 = *(_OWORD *)(v32 + 48);
  *(_OWORD *)(v31 + 32) = *(_OWORD *)(v32 + 32);
  *(_OWORD *)(v31 + 48) = v37;
  v38 = *(_OWORD *)(v32 + 80);
  *(_OWORD *)(v31 + 64) = *(_OWORD *)(v32 + 64);
  *(_OWORD *)(v31 + 80) = v38;
  v39 = *(_OWORD *)(v32 + 16);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v39;
LABEL_21:
  v40 = a3[11];
  *(_WORD *)(a1 + a3[10]) = *(_WORD *)(a2 + a3[10]);
  v41 = a1 + v40;
  v42 = a2 + v40;
  if (*(_QWORD *)(a1 + v40 + 8))
  {
    v43 = *(_QWORD *)(v42 + 8);
    if (v43)
    {
      *(_QWORD *)v41 = *(_QWORD *)v42;
      *(_QWORD *)(v41 + 8) = v43;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v41 + 16) = *(_BYTE *)(v42 + 16);
      *(_BYTE *)(v41 + 17) = *(_BYTE *)(v42 + 17);
      *(_QWORD *)(v41 + 24) = *(_QWORD *)(v42 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_1D57EE47C(a1 + v40);
  }
  v44 = *(_OWORD *)(v42 + 16);
  *(_OWORD *)v41 = *(_OWORD *)v42;
  *(_OWORD *)(v41 + 16) = v44;
LABEL_26:
  v45 = a3[12];
  v46 = a1 + v45;
  v47 = a2 + v45;
  v48 = *(_QWORD *)(a2 + v45 + 8);
  *(_QWORD *)v46 = *(_QWORD *)(a2 + v45);
  *(_QWORD *)(v46 + 8) = v48;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v46 + 16) = *(_BYTE *)(v47 + 16);
  v49 = a3[13];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (uint64_t *)(a2 + v49);
  v53 = *v51;
  v52 = v51[1];
  *v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  v54 = a3[14];
  v55 = a1 + v54;
  v56 = a2 + v54;
  v57 = *(_QWORD *)(a2 + v54 + 8);
  *(_QWORD *)v55 = *(_QWORD *)(a2 + v54);
  *(_QWORD *)(v55 + 8) = v57;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v55 + 16) = *(_QWORD *)(v56 + 16);
  *(_BYTE *)(v55 + 24) = *(_BYTE *)(v56 + 24);
  v58 = a3[15];
  v59 = a1 + v58;
  v60 = a2 + v58;
  v61 = *(_QWORD *)(a2 + v58 + 8);
  *(_QWORD *)v59 = *(_QWORD *)(a2 + v58);
  *(_QWORD *)(v59 + 8) = v61;
  swift_bridgeObjectRelease();
  v62 = a3[16];
  v63 = a3[17];
  v64 = *(_WORD *)(a2 + v62);
  *(_WORD *)(v59 + 16) = *(_WORD *)(v60 + 16);
  *(_WORD *)(a1 + v62) = v64;
  v65 = a1 + v63;
  v66 = a2 + v63;
  *(_BYTE *)v65 = *(_BYTE *)(a2 + v63);
  v67 = *(_QWORD *)(a2 + v63 + 16);
  *(_QWORD *)(v65 + 8) = *(_QWORD *)(a2 + v63 + 8);
  *(_QWORD *)(v65 + 16) = v67;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v65 + 24) = *(_BYTE *)(v66 + 24);
  *(_BYTE *)(v65 + 25) = *(_BYTE *)(v66 + 25);
  v68 = *(_QWORD *)(v66 + 40);
  *(_QWORD *)(v65 + 32) = *(_QWORD *)(v66 + 32);
  *(_QWORD *)(v65 + 40) = v68;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v65 + 48) = *(_BYTE *)(v66 + 48);
  v69 = a3[18];
  v70 = a1 + v69;
  v71 = a2 + v69;
  if (!*(_QWORD *)(a1 + v69 + 8))
  {
LABEL_30:
    v74 = *(_OWORD *)(v71 + 48);
    *(_OWORD *)(v70 + 32) = *(_OWORD *)(v71 + 32);
    *(_OWORD *)(v70 + 48) = v74;
    *(_OWORD *)(v70 + 64) = *(_OWORD *)(v71 + 64);
    v75 = *(_OWORD *)(v71 + 16);
    *(_OWORD *)v70 = *(_OWORD *)v71;
    *(_OWORD *)(v70 + 16) = v75;
    return a1;
  }
  v72 = *(_QWORD *)(v71 + 8);
  if (!v72)
  {
    sub_1D58388FC(v70);
    goto LABEL_30;
  }
  *(_QWORD *)v70 = *(_QWORD *)v71;
  *(_QWORD *)(v70 + 8) = v72;
  swift_bridgeObjectRelease();
  v73 = *(_QWORD *)(v71 + 24);
  *(_QWORD *)(v70 + 16) = *(_QWORD *)(v71 + 16);
  *(_QWORD *)(v70 + 24) = v73;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v70 + 32) = *(_DWORD *)(v71 + 32);
  *(_QWORD *)(v70 + 40) = *(_QWORD *)(v71 + 40);
  *(_BYTE *)(v70 + 48) = *(_BYTE *)(v71 + 48);
  *(_QWORD *)(v70 + 56) = *(_QWORD *)(v71 + 56);
  *(_BYTE *)(v70 + 64) = *(_BYTE *)(v71 + 64);
  *(_BYTE *)(v70 + 65) = *(_BYTE *)(v71 + 65);
  *(_QWORD *)(v70 + 72) = *(_QWORD *)(v71 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscribeButtonExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5839054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 48) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscribeButtonExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D583910C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 48) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D58391B4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SubscribeButtonExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1D5839304 + 4 * byte_1D5AB6874[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1D5839338 + 4 * byte_1D5AB686F[v4]))();
}

uint64_t sub_1D5839338(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5839340(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5839348);
  return result;
}

uint64_t sub_1D5839354(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D583935CLL);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1D5839360(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5839368(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscribeButtonExposureEvent.Model.CodingKeys()
{
  return &type metadata for SubscribeButtonExposureEvent.Model.CodingKeys;
}

unint64_t sub_1D5839388()
{
  unint64_t result;

  result = qword_1EFF491A8;
  if (!qword_1EFF491A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB6BFC, &type metadata for SubscribeButtonExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF491A8);
  }
  return result;
}

unint64_t sub_1D58393D0()
{
  unint64_t result;

  result = qword_1EFF491B0;
  if (!qword_1EFF491B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB6B6C, &type metadata for SubscribeButtonExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF491B0);
  }
  return result;
}

unint64_t sub_1D5839418()
{
  unint64_t result;

  result = qword_1EFF491B8;
  if (!qword_1EFF491B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB6B94, &type metadata for SubscribeButtonExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF491B8);
  }
  return result;
}

uint64_t sub_1D583945C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x446C6C6177796170 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AED700 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AED720 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x6144656C7A7A7570 && a2 == 0xEA00000000006174)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 14;
    else
      return 15;
  }
}

uint64_t RecentSearchListData.recentSearch.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RecentSearchListData.recentSearch.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*RecentSearchListData.recentSearch.modify())()
{
  return nullsub_1;
}

NewsAnalytics::RecentSearchListData __swiftcall RecentSearchListData.init(recentSearch:)(NewsAnalytics::RecentSearchListData recentSearch)
{
  NewsAnalytics::RecentSearchListData *v1;

  v1->recentSearch._rawValue = recentSearch.recentSearch._rawValue;
  return recentSearch;
}

uint64_t sub_1D5839B08()
{
  return 0x6553746E65636572;
}

uint64_t sub_1D5839B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6553746E65636572 && a2 == 0xEC00000068637261)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5839BD4()
{
  sub_1D5839D48();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5839BFC()
{
  sub_1D5839D48();
  return sub_1D5AAEEE0();
}

uint64_t RecentSearchListData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1D5839F38(0, &qword_1EFF491C0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5839D48();
  sub_1D5AAEEC8();
  v10[1] = v8;
  sub_1D5839D8C();
  sub_1D5839F94(&qword_1EFF491D8, (uint64_t (*)(void))sub_1D57CBC9C, MEMORY[0x1E0DEAF10]);
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5839D48()
{
  unint64_t result;

  result = qword_1EFF491C8;
  if (!qword_1EFF491C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB6DF8, &type metadata for RecentSearchListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF491C8);
  }
  return result;
}

void sub_1D5839D8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFF491D0)
  {
    v0 = sub_1D5AAE97C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFF491D0);
  }
}

uint64_t RecentSearchListData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1D5839F38(0, &qword_1EFF491E0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5839D48();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5839D8C();
    sub_1D5839F94(&qword_1EFF491E8, (uint64_t (*)(void))sub_1D57CBC58, MEMORY[0x1E0DEAF40]);
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5839F38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5839D48();
    v7 = a3(a1, &type metadata for RecentSearchListData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5839F94(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1D5839D8C();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1D8279680](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D5839FFC()
{
  unint64_t result;

  result = qword_1EFF491F0;
  if (!qword_1EFF491F0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for RecentSearchListData, &type metadata for RecentSearchListData);
    atomic_store(result, (unint64_t *)&qword_1EFF491F0);
  }
  return result;
}

unint64_t sub_1D583A044()
{
  unint64_t result;

  result = qword_1EFF491F8;
  if (!qword_1EFF491F8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for RecentSearchListData, &type metadata for RecentSearchListData);
    atomic_store(result, (unint64_t *)&qword_1EFF491F8);
  }
  return result;
}

uint64_t sub_1D583A088@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return RecentSearchListData.init(from:)(a1, a2);
}

uint64_t sub_1D583A09C(_QWORD *a1)
{
  return RecentSearchListData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for RecentSearchListData()
{
  return &type metadata for RecentSearchListData;
}

uint64_t storeEnumTagSinglePayload for RecentSearchListData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D583A100 + 4 * byte_1D5AB6C80[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D583A120 + 4 * byte_1D5AB6C85[v4]))();
}

_BYTE *sub_1D583A100(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D583A120(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D583A128(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D583A130(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D583A138(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D583A140(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RecentSearchListData.CodingKeys()
{
  return &type metadata for RecentSearchListData.CodingKeys;
}

unint64_t sub_1D583A160()
{
  unint64_t result;

  result = qword_1EFF49200;
  if (!qword_1EFF49200)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB6DD0, &type metadata for RecentSearchListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49200);
  }
  return result;
}

unint64_t sub_1D583A1A8()
{
  unint64_t result;

  result = qword_1EFF49208;
  if (!qword_1EFF49208)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB6D40, &type metadata for RecentSearchListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49208);
  }
  return result;
}

unint64_t sub_1D583A1F0()
{
  unint64_t result;

  result = qword_1EFF49210;
  if (!qword_1EFF49210)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB6D68, &type metadata for RecentSearchListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49210);
  }
  return result;
}

uint64_t UserNotificationSettingsManager.cachedSettings.getter()
{
  uint64_t v1;

  swift_retain();
  sub_1D5AAE280();
  swift_release();
  return v1;
}

uint64_t sub_1D583A274@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_retain();
  sub_1D5AAE280();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1D583A2C0(id *a1)
{
  id v1;

  v1 = *a1;
  swift_retain();
  sub_1D5AAE28C();
  return swift_release();
}

void UserNotificationSettingsManager.cachedSettings.setter(void *a1)
{
  id v1;

  v1 = a1;
  swift_retain();
  sub_1D5AAE28C();
  swift_release();

}

void (*UserNotificationSettingsManager.cachedSettings.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = *(_QWORD *)(v1 + 16);
  swift_retain();
  v3[5] = sub_1D5AAE274();
  return sub_1D583A3B0;
}

void sub_1D583A3B0(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_release();
  free(v1);
}

uint64_t sub_1D583A3E8()
{
  sub_1D57A19A0(0, &qword_1ED9D0C08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1D5AAE2C8();
}

uint64_t sub_1D583A43C()
{
  return sub_1D583A3E8();
}

void sub_1D583A444(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  _QWORD v10[6];

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = (void *)objc_opt_self();
  swift_retain();
  v6 = objc_msgSend(v5, sel_currentNotificationCenter);
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v7;
  v8[3] = sub_1D57C59C0;
  v8[4] = v4;
  v10[4] = sub_1D583A908;
  v10[5] = v8;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1D583A680;
  v10[3] = &block_descriptor;
  v9 = _Block_copy(v10);
  swift_release();
  objc_msgSend(v6, sel_getNotificationSettingsWithCompletionHandler_, v9);
  _Block_release(v9);

}

uint64_t sub_1D583A57C(void *a1, uint64_t a2, uint64_t (*a3)(void *))
{
  id v5;
  _BOOL8 v6;
  id v7;
  void *v8;
  void *v10;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v10 = a1;
    v5 = a1;
    swift_retain();
    sub_1D5AAE28C();
    swift_release();
    swift_release();
  }
  v6 = objc_msgSend(a1, sel_scheduledDeliverySetting, v10) == (id)2;
  v7 = (id)NewsCoreUserDefaults();
  v8 = (void *)sub_1D5AAE7FC();
  objc_msgSend(v7, sel_setBool_forKey_, v6, v8);

  return a3(a1);
}

void sub_1D583A680(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t UserNotificationSettingsManager.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t UserNotificationSettingsManager.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall UserNotificationSettingsManager.sceneDidEnterBackground()()
{
  void *v0;

  sub_1D57B663C(0, (unint64_t *)&qword_1ED9CC7B0);
  v0 = (void *)sub_1D5AAEAC0();
  sub_1D5AAEA24();
  sub_1D5AAE328();

  swift_retain();
  sub_1D5AAE28C();
  swift_release();
}

uint64_t sub_1D583A7BC()
{
  return sub_1D5AAE118();
}

uint64_t sub_1D583A7C4()
{
  return sub_1D5AAE13C();
}

uint64_t sub_1D583A7CC()
{
  void *v0;

  sub_1D57B663C(0, (unint64_t *)&qword_1ED9CC7B0);
  v0 = (void *)sub_1D5AAEAC0();
  sub_1D5AAEA24();
  sub_1D5AAE328();

  swift_retain();
  sub_1D5AAE28C();
  return swift_release();
}

uint64_t sub_1D583A868()
{
  return sub_1D5AAE13C();
}

uint64_t sub_1D583A870()
{
  return sub_1D5AAE118();
}

uint64_t method lookup function for UserNotificationSettingsManager()
{
  return swift_lookUpClassMethod();
}

void sub_1D583A88C(uint64_t a1, uint64_t a2)
{
  sub_1D583A444(a1, a2);
}

uint64_t sub_1D583A894()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D583A8B8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D583A8DC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D583A908(void *a1)
{
  uint64_t v1;

  return sub_1D583A57C(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(void *))(v1 + 24));
}

NewsAnalytics::GalleryType_optional __swiftcall GalleryType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::GalleryType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t GalleryType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x636961736F6DLL;
  if (*v0 != 1)
    v1 = 0x7069727473;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D583A9C0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A3D74C(*a1, *a2);
}

unint64_t sub_1D583A9D0()
{
  unint64_t result;

  result = qword_1EFF49218;
  if (!qword_1EFF49218)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GalleryType, &type metadata for GalleryType);
    atomic_store(result, (unint64_t *)&qword_1EFF49218);
  }
  return result;
}

uint64_t sub_1D583AA14()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D583AAAC()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D583AB20()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::GalleryType_optional sub_1D583ABB4(Swift::String *a1)
{
  return GalleryType.init(rawValue:)(*a1);
}

void sub_1D583ABC0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x636961736F6DLL;
  if (v2 != 1)
  {
    v5 = 0x7069727473;
    v4 = 0xE500000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D583AC18()
{
  sub_1D583AD8C();
  return sub_1D5AAE928();
}

uint64_t sub_1D583AC74()
{
  sub_1D583AD8C();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for GalleryType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D583AD0C + 4 * byte_1D5AB6F05[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D583AD40 + 4 * byte_1D5AB6F00[v4]))();
}

uint64_t sub_1D583AD40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D583AD48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D583AD50);
  return result;
}

uint64_t sub_1D583AD5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D583AD64);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D583AD68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D583AD70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GalleryType()
{
  return &type metadata for GalleryType;
}

unint64_t sub_1D583AD8C()
{
  unint64_t result;

  result = qword_1ED9CD140;
  if (!qword_1ED9CD140)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GalleryType, &type metadata for GalleryType);
    atomic_store(result, (unint64_t *)&qword_1ED9CD140);
  }
  return result;
}

uint64_t sub_1D583ADD0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF49220, MEMORY[0x1E0CF8078]);
}

uint64_t static AppleIdSignInEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46FA8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF49220, a1);
}

uint64_t sub_1D583AE10(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF49238, MEMORY[0x1E0CF8380]);
}

uint64_t static AppleIdSignInEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46FB0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF49238, a1);
}

uint64_t AppleIdSignInEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t AppleIdSignInEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AppleIdSignInEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AppleIdSignInEvent.resultData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppleIdSignInEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AppleIdSignInEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF492C0);
}

unint64_t sub_1D583AF20()
{
  unint64_t result;

  result = qword_1ED9C7610;
  if (!qword_1ED9C7610)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ResultData, &type metadata for ResultData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7610);
  }
  return result;
}

unint64_t sub_1D583AF64()
{
  unint64_t result;

  result = qword_1ED9C7608;
  if (!qword_1ED9C7608)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ResultData, &type metadata for ResultData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7608);
  }
  return result;
}

uint64_t AppleIdSignInEvent.resultData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppleIdSignInEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppleIdSignInEvent.resultData.modify())()
{
  type metadata accessor for AppleIdSignInEvent(0);
  return nullsub_1;
}

uint64_t AppleIdSignInEvent.paywallData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppleIdSignInEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppleIdSignInEvent.paywallData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppleIdSignInEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppleIdSignInEvent.paywallData.modify())()
{
  type metadata accessor for AppleIdSignInEvent(0);
  return nullsub_1;
}

uint64_t AppleIdSignInEvent.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppleIdSignInEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppleIdSignInEvent.purchaseData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppleIdSignInEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppleIdSignInEvent.purchaseData.modify())()
{
  type metadata accessor for AppleIdSignInEvent(0);
  return nullsub_1;
}

uint64_t AppleIdSignInEvent.purchaseSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppleIdSignInEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppleIdSignInEvent.purchaseSessionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppleIdSignInEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppleIdSignInEvent.purchaseSessionData.modify())()
{
  type metadata accessor for AppleIdSignInEvent(0);
  return nullsub_1;
}

uint64_t AppleIdSignInEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppleIdSignInEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppleIdSignInEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppleIdSignInEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppleIdSignInEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for AppleIdSignInEvent(0);
  return nullsub_1;
}

uint64_t AppleIdSignInEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for AppleIdSignInEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  v8 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v8, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v8, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
}

uint64_t AppleIdSignInEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AppleIdSignInEvent.Model.resultData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AppleIdSignInEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for AppleIdSignInEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF49360);
}

uint64_t AppleIdSignInEvent.Model.paywallData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AppleIdSignInEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t AppleIdSignInEvent.Model.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AppleIdSignInEvent.Model(0) + 28));
  v5 = *v3;
  v4 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t AppleIdSignInEvent.Model.purchaseSessionData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for AppleIdSignInEvent.Model(0) + 32));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t AppleIdSignInEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for AppleIdSignInEvent.Model(0) + 36));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

int *AppleIdSignInEvent.Model.init(eventData:resultData:paywallData:purchaseData:purchaseSessionData:userBundleSubscriptionContextData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, __int16 *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  char v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  int *result;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  v9 = *a2;
  v10 = *a3;
  v11 = *a4;
  v12 = a4[1];
  v13 = *((_BYTE *)a4 + 16);
  v14 = *a5;
  v15 = a5[1];
  v16 = *a6;
  v27 = *((_QWORD *)a6 + 2);
  v28 = *((_QWORD *)a6 + 1);
  v25 = a6[25];
  v26 = a6[24];
  v23 = *((_QWORD *)a6 + 5);
  v24 = *((_QWORD *)a6 + 4);
  v22 = a6[48];
  v17 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a7, a1, v17);
  result = (int *)type metadata accessor for AppleIdSignInEvent.Model(0);
  *(_BYTE *)(a7 + result[5]) = v9;
  *(_WORD *)(a7 + result[6]) = v10;
  v19 = a7 + result[7];
  *(_QWORD *)v19 = v11;
  *(_QWORD *)(v19 + 8) = v12;
  *(_BYTE *)(v19 + 16) = v13;
  v20 = (_QWORD *)(a7 + result[8]);
  *v20 = v14;
  v20[1] = v15;
  v21 = a7 + result[9];
  *(_BYTE *)v21 = v16;
  *(_QWORD *)(v21 + 8) = v28;
  *(_QWORD *)(v21 + 16) = v27;
  *(_BYTE *)(v21 + 24) = v26;
  *(_BYTE *)(v21 + 25) = v25;
  *(_QWORD *)(v21 + 32) = v24;
  *(_QWORD *)(v21 + 40) = v23;
  *(_BYTE *)(v21 + 48) = v22;
  return result;
}

uint64_t sub_1D583B85C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D583B894 + 4 * byte_1D5AB7020[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D583B894()
{
  return 0x6144746C75736572;
}

uint64_t sub_1D583B8B0()
{
  return 0x446C6C6177796170;
}

uint64_t sub_1D583B8D0()
{
  return 0x6573616863727570;
}

unint64_t sub_1D583B8F0()
{
  return 0xD000000000000013;
}

unint64_t sub_1D583B90C()
{
  return 0xD000000000000021;
}

uint64_t sub_1D583B92C()
{
  unsigned __int8 *v0;

  return sub_1D583B85C(*v0);
}

uint64_t sub_1D583B934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D583DC54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D583B958()
{
  sub_1D583BC5C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D583B980()
{
  sub_1D583BC5C();
  return sub_1D5AAEEE0();
}

uint64_t AppleIdSignInEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  _BYTE v18[24];
  char v19;
  char v20;
  __int128 v21;
  char v22;
  char v23;

  v3 = v1;
  sub_1D583C0B4(0, &qword_1EFF49250, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v18[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D583BC5C();
  sub_1D5AAEEC8();
  v18[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for AppleIdSignInEvent.Model(0);
    v18[0] = *(_BYTE *)(v3 + v10[5]);
    v23 = 1;
    sub_1D583AF64();
    sub_1D5AAED6C();
    *(_WORD *)v18 = *(_WORD *)(v3 + v10[6]);
    v23 = 2;
    sub_1D57CB830();
    sub_1D5AAED18();
    v11 = v3 + v10[7];
    v12 = *(_BYTE *)(v11 + 16);
    *(_OWORD *)v18 = *(_OWORD *)v11;
    v18[16] = v12;
    v23 = 3;
    sub_1D580C07C();
    sub_1D5AAED18();
    *(_OWORD *)v18 = *(_OWORD *)(v3 + v10[8]);
    v23 = 4;
    sub_1D583239C();
    sub_1D5AAED18();
    v13 = v3 + v10[9];
    v14 = *(_BYTE *)(v13 + 24);
    v15 = *(_BYTE *)(v13 + 25);
    v16 = *(_BYTE *)(v13 + 48);
    v18[0] = *(_BYTE *)v13;
    *(_OWORD *)&v18[8] = *(_OWORD *)(v13 + 8);
    v19 = v14;
    v20 = v15;
    v21 = *(_OWORD *)(v13 + 32);
    v22 = v16;
    v23 = 5;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D583BC5C()
{
  unint64_t result;

  result = qword_1EFF49258;
  if (!qword_1EFF49258)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB727C, &type metadata for AppleIdSignInEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49258);
  }
  return result;
}

uint64_t AppleIdSignInEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char *v16;
  char v17;
  char v18;
  char v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[24];
  char v29;
  char v30;
  __int128 v31;
  char v32;
  char v33;

  v22 = a2;
  v3 = sub_1D5AADF98();
  v23 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v24 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D583C0B4(0, &qword_1EFF49260, MEMORY[0x1E0DED048]);
  v26 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - v7;
  v9 = (int *)type metadata accessor for AppleIdSignInEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D583BC5C();
  v25 = v8;
  v12 = v27;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v14 = v23;
  v28[0] = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v24, v3);
  v33 = 1;
  sub_1D583AF20();
  sub_1D5AAECD0();
  v11[v9[5]] = v28[0];
  v33 = 2;
  sub_1D57CB7EC();
  sub_1D5AAEC7C();
  *(_WORD *)&v11[v9[6]] = *(_WORD *)v28;
  v33 = 3;
  sub_1D580C038();
  sub_1D5AAEC7C();
  v15 = v28[16];
  v16 = &v11[v9[7]];
  *(_OWORD *)v16 = *(_OWORD *)v28;
  v16[16] = v15;
  v33 = 4;
  sub_1D5832358();
  sub_1D5AAEC7C();
  *(_OWORD *)&v11[v9[8]] = *(_OWORD *)v28;
  v33 = 5;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v25, v26);
  v17 = v29;
  v18 = v30;
  v19 = v32;
  v20 = &v11[v9[9]];
  *v20 = v28[0];
  *(_OWORD *)(v20 + 8) = *(_OWORD *)&v28[8];
  v20[24] = v17;
  v20[25] = v18;
  *((_OWORD *)v20 + 2) = v31;
  v20[48] = v19;
  sub_1D583C110((uint64_t)v11, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1D583C154((uint64_t)v11);
}

void sub_1D583C0B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D583BC5C();
    v7 = a3(a1, &type metadata for AppleIdSignInEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D583C110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppleIdSignInEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D583C154(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AppleIdSignInEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D583C190@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AppleIdSignInEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D583C1A4(_QWORD *a1)
{
  return AppleIdSignInEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D583C1B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46FA8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF49220, a1);
}

uint64_t sub_1D583C1DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46FB0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF49238, a1);
}

uint64_t sub_1D583C200@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  v9 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v9, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v9, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for AppleIdSignInEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for AppleIdSignInEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

uint64_t initializeWithCopy for AppleIdSignInEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for AppleIdSignInEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for AppleIdSignInEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for AppleIdSignInEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppleIdSignInEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D583CEBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AppleIdSignInEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D583D06C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D583D218()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C70C8, (void (*)(void))sub_1D583AF20, (void (*)(void))sub_1D583AF64);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for AppleIdSignInEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    *(_WORD *)((char *)a1 + v8) = *(_WORD *)((char *)a2 + v8);
    v9 = a3[7];
    v10 = a3[8];
    v11 = (char *)a1 + v9;
    v12 = (char *)a2 + v9;
    v13 = *((_QWORD *)v12 + 1);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *((_QWORD *)v11 + 1) = v13;
    v11[16] = v12[16];
    v14 = (_QWORD *)((char *)a1 + v10);
    v15 = (_QWORD *)((char *)a2 + v10);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = a3[9];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    *v18 = *v19;
    v20 = *((_QWORD *)v19 + 2);
    *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
    *((_QWORD *)v18 + 2) = v20;
    v18[24] = v19[24];
    v18[25] = v19[25];
    v21 = *((_QWORD *)v19 + 5);
    *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
    *((_QWORD *)v18 + 5) = v21;
    v18[48] = v19[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AppleIdSignInEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AppleIdSignInEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a3[8];
  v10 = a1 + v8;
  v11 = a2 + v8;
  v12 = *(_QWORD *)(v11 + 8);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_QWORD *)(v10 + 8) = v12;
  *(_BYTE *)(v10 + 16) = *(_BYTE *)(v11 + 16);
  v13 = (_QWORD *)(a1 + v9);
  v14 = (_QWORD *)(a2 + v9);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = a3[9];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_BYTE *)v17 = *(_BYTE *)v18;
  v19 = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  *(_QWORD *)(v17 + 16) = v19;
  *(_BYTE *)(v17 + 24) = *(_BYTE *)(v18 + 24);
  *(_BYTE *)(v17 + 25) = *(_BYTE *)(v18 + 25);
  v20 = *(_QWORD *)(v18 + 40);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 40) = v20;
  *(_BYTE *)(v17 + 48) = *(_BYTE *)(v18 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AppleIdSignInEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_WORD *)(a1 + a3[6]) = *(_WORD *)(a2 + a3[6]);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v10 = a3[8];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[9];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_BYTE *)v14 = *(_BYTE *)v15;
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 24) = *(_BYTE *)(v15 + 24);
  *(_BYTE *)(v14 + 25) = *(_BYTE *)(v15 + 25);
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  *(_QWORD *)(v14 + 40) = *(_QWORD *)(v15 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 48) = *(_BYTE *)(v15 + 48);
  return a1;
}

uint64_t initializeWithTake for AppleIdSignInEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  __int128 v16;
  __int128 v17;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a3[8];
  v10 = a1 + v8;
  v11 = (__int128 *)(a2 + v8);
  v12 = *v11;
  *(_BYTE *)(v10 + 16) = *((_BYTE *)v11 + 16);
  *(_OWORD *)v10 = v12;
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  v13 = a3[9];
  v14 = a1 + v13;
  v15 = (__int128 *)(a2 + v13);
  *(_BYTE *)(v14 + 48) = *((_BYTE *)v15 + 48);
  v16 = v15[2];
  v17 = *v15;
  *(_OWORD *)(v14 + 16) = v15[1];
  *(_OWORD *)(v14 + 32) = v16;
  *(_OWORD *)v14 = v17;
  return a1;
}

uint64_t assignWithTake for AppleIdSignInEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_QWORD *)(a2 + v8 + 8);
  *(_QWORD *)v9 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(v9 + 8) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v12 = a3[8];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[9];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_BYTE *)v18 = *(_BYTE *)v19;
  v20 = *(_QWORD *)(v19 + 16);
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
  *(_QWORD *)(v18 + 16) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v18 + 24) = *(_BYTE *)(v19 + 24);
  *(_BYTE *)(v18 + 25) = *(_BYTE *)(v19 + 25);
  v21 = *(_QWORD *)(v19 + 40);
  *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  *(_QWORD *)(v18 + 40) = v21;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v18 + 48) = *(_BYTE *)(v19 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppleIdSignInEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D583D904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for AppleIdSignInEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D583D99C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = a2;
  return result;
}

uint64_t sub_1D583DA18()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AppleIdSignInEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D583DAFC + 4 * byte_1D5AB702B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D583DB30 + 4 * byte_1D5AB7026[v4]))();
}

uint64_t sub_1D583DB30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D583DB38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D583DB40);
  return result;
}

uint64_t sub_1D583DB4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D583DB54);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D583DB58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D583DB60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppleIdSignInEvent.Model.CodingKeys()
{
  return &type metadata for AppleIdSignInEvent.Model.CodingKeys;
}

unint64_t sub_1D583DB80()
{
  unint64_t result;

  result = qword_1EFF493A8;
  if (!qword_1EFF493A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB7254, &type metadata for AppleIdSignInEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF493A8);
  }
  return result;
}

unint64_t sub_1D583DBC8()
{
  unint64_t result;

  result = qword_1EFF493B0;
  if (!qword_1EFF493B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB71C4, &type metadata for AppleIdSignInEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF493B0);
  }
  return result;
}

unint64_t sub_1D583DC10()
{
  unint64_t result;

  result = qword_1EFF493B8;
  if (!qword_1EFF493B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB71EC, &type metadata for AppleIdSignInEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF493B8);
  }
  return result;
}

uint64_t sub_1D583DC54(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144746C75736572 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C6C6177796170 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AED700 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

id FCBundleSubscriptionManagerType.bundleContainsChannel(_:)(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;

  v3 = objc_msgSend(v1, sel_cachedSubscription);
  v4 = objc_msgSend(a1, sel_identifier);
  if (!v4)
  {
    sub_1D5AAE820();
    v4 = (id)sub_1D5AAE7FC();
    swift_bridgeObjectRelease();
  }
  v5 = objc_msgSend(v3, sel_containsTagID_, v4);

  return v5;
}

uint64_t sub_1D583DFAC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF493C0, MEMORY[0x1E0CF8078]);
}

uint64_t static ListenSheetEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46FB8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF493C0, a1);
}

uint64_t sub_1D583DFEC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF493D8, MEMORY[0x1E0CF8380]);
}

uint64_t static ListenSheetEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46FC0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF493D8, a1);
}

uint64_t ListenSheetEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t ListenSheetEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ListenSheetEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ListenSheetEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for ListenSheetEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for ListenSheetEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF49478);
}

uint64_t ListenSheetEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ListenSheetEvent.timedData.modify())()
{
  type metadata accessor for ListenSheetEvent(0);
  return nullsub_1;
}

uint64_t ListenSheetEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ListenSheetEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ListenSheetEvent.articleData.modify())()
{
  type metadata accessor for ListenSheetEvent(0);
  return nullsub_1;
}

uint64_t ListenSheetEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ListenSheetEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ListenSheetEvent.channelData.modify())()
{
  type metadata accessor for ListenSheetEvent(0);
  return nullsub_1;
}

uint64_t ListenSheetEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ListenSheetEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ListenSheetEvent.groupData.modify())()
{
  type metadata accessor for ListenSheetEvent(0);
  return nullsub_1;
}

uint64_t ListenSheetEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ListenSheetEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ListenSheetEvent.feedData.modify())()
{
  type metadata accessor for ListenSheetEvent(0);
  return nullsub_1;
}

uint64_t ListenSheetEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ListenSheetEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ListenSheetEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for ListenSheetEvent(0);
  return nullsub_1;
}

uint64_t ListenSheetEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ListenSheetEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ListenSheetEvent.issueData.modify())()
{
  type metadata accessor for ListenSheetEvent(0);
  return nullsub_1;
}

uint64_t ListenSheetEvent.issueViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ListenSheetEvent.issueViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ListenSheetEvent.issueViewData.modify())()
{
  type metadata accessor for ListenSheetEvent(0);
  return nullsub_1;
}

uint64_t ListenSheetEvent.listenSheetActionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 52);
  sub_1D579E208(0, &qword_1EFF493F0, (void (*)(void))sub_1D583E848, (void (*)(void))sub_1D583E88C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D583E848()
{
  unint64_t result;

  result = qword_1EFF493F8;
  if (!qword_1EFF493F8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ListenSheetActionData, &type metadata for ListenSheetActionData);
    atomic_store(result, (unint64_t *)&qword_1EFF493F8);
  }
  return result;
}

unint64_t sub_1D583E88C()
{
  unint64_t result;

  result = qword_1EFF49400;
  if (!qword_1EFF49400)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ListenSheetActionData, &type metadata for ListenSheetActionData);
    atomic_store(result, (unint64_t *)&qword_1EFF49400);
  }
  return result;
}

uint64_t ListenSheetEvent.listenSheetActionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 52);
  sub_1D579E208(0, &qword_1EFF493F0, (void (*)(void))sub_1D583E848, (void (*)(void))sub_1D583E88C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ListenSheetEvent.listenSheetActionData.modify())()
{
  type metadata accessor for ListenSheetEvent(0);
  return nullsub_1;
}

uint64_t ListenSheetEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ListenSheetEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v12, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v12, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v12, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1EFF493F0, (void (*)(void))sub_1D583E848, (void (*)(void))sub_1D583E88C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
}

uint64_t ListenSheetEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ListenSheetEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for ListenSheetEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for ListenSheetEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF49528);
}

uint64_t ListenSheetEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent.Model(0) + 24);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t ListenSheetEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

_QWORD *ListenSheetEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for ListenSheetEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 32), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t ListenSheetEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ListenSheetEvent.Model(0) + 36));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t ListenSheetEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for ListenSheetEvent.Model(0) + 40));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ListenSheetEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ListenSheetEvent.Model(0) + 44));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t ListenSheetEvent.Model.issueViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ListenSheetEvent.Model(0) + 48));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t ListenSheetEvent.Model.listenSheetActionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ListenSheetEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 52));
  return result;
}

__n128 ListenSheetEvent.Model.init(eventData:timedData:articleData:channelData:groupData:feedData:userBundleSubscriptionContextData:issueData:issueViewData:listenSheetActionData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, __int128 *a6@<X5>, char *a7@<X6>, __n128 *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, char *a11)
{
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 *v30;
  __n128 result;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  __n128 v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _BYTE v56[23];
  _BYTE v57[144];

  v55 = a3[6];
  *(_OWORD *)v56 = a3[7];
  *(_QWORD *)&v56[15] = *(_QWORD *)((char *)a3 + 127);
  v51 = a3[2];
  v52 = a3[3];
  v53 = a3[4];
  v54 = a3[5];
  v49 = *a3;
  v50 = a3[1];
  v35 = a4[1];
  v36 = *a4;
  v17 = *((_BYTE *)a4 + 16);
  v18 = *((_BYTE *)a4 + 17);
  v33 = a4[4];
  v34 = a4[3];
  sub_1D57DD5B8(a5, (uint64_t)v57);
  v37 = *a6;
  v19 = *((_QWORD *)a6 + 2);
  v44 = *a7;
  v42 = *((_QWORD *)a7 + 2);
  v43 = *((_QWORD *)a7 + 1);
  v40 = a7[25];
  v41 = a7[24];
  v38 = *((_QWORD *)a7 + 5);
  v39 = *((_QWORD *)a7 + 4);
  LOBYTE(a7) = a7[48];
  v47 = *a8;
  v45 = a8[1].n128_u64[1];
  v46 = a8[1].n128_u64[0];
  v20 = a10[1];
  v48 = *a10;
  v21 = *a11;
  v22 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a9, a1, v22);
  v23 = (int *)type metadata accessor for ListenSheetEvent.Model(0);
  v24 = a9 + v23[5];
  v25 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24, a2, v25);
  v26 = a9 + v23[6];
  *(_OWORD *)(v26 + 96) = v55;
  *(_OWORD *)(v26 + 112) = *(_OWORD *)v56;
  *(_QWORD *)(v26 + 127) = *(_QWORD *)&v56[15];
  *(_OWORD *)(v26 + 32) = v51;
  *(_OWORD *)(v26 + 48) = v52;
  *(_OWORD *)(v26 + 64) = v53;
  *(_OWORD *)(v26 + 80) = v54;
  *(_OWORD *)v26 = v49;
  *(_OWORD *)(v26 + 16) = v50;
  v27 = a9 + v23[7];
  *(_QWORD *)v27 = v36;
  *(_QWORD *)(v27 + 8) = v35;
  *(_BYTE *)(v27 + 16) = v17;
  *(_BYTE *)(v27 + 17) = v18;
  *(_QWORD *)(v27 + 24) = v34;
  *(_QWORD *)(v27 + 32) = v33;
  sub_1D57DD5B8((uint64_t)v57, a9 + v23[8]);
  v28 = a9 + v23[9];
  *(_OWORD *)v28 = v37;
  *(_QWORD *)(v28 + 16) = v19;
  v29 = a9 + v23[10];
  *(_BYTE *)v29 = v44;
  *(_QWORD *)(v29 + 8) = v43;
  *(_QWORD *)(v29 + 16) = v42;
  *(_BYTE *)(v29 + 24) = v41;
  *(_BYTE *)(v29 + 25) = v40;
  *(_QWORD *)(v29 + 32) = v39;
  *(_QWORD *)(v29 + 40) = v38;
  *(_BYTE *)(v29 + 48) = (_BYTE)a7;
  v30 = (__n128 *)(a9 + v23[11]);
  result = v47;
  *v30 = v47;
  v30[1].n128_u64[0] = v46;
  v30[1].n128_u64[1] = v45;
  v32 = (_QWORD *)(a9 + v23[12]);
  *v32 = v48;
  v32[1] = v20;
  *(_BYTE *)(a9 + v23[13]) = v21;
  return result;
}

uint64_t sub_1D583F138(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D583F170 + 4 * byte_1D5AB72D0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D583F170()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D583F184()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D583F1B8()
{
  return 0x74614470756F7267;
}

uint64_t sub_1D583F1CC()
{
  return 0x6174614464656566;
}

unint64_t sub_1D583F1E4()
{
  return 0xD000000000000021;
}

uint64_t sub_1D583F204()
{
  return 0x7461446575737369;
}

uint64_t sub_1D583F218()
{
  return 0x6569566575737369;
}

unint64_t sub_1D583F23C()
{
  return 0xD000000000000015;
}

uint64_t sub_1D583F258()
{
  unsigned __int8 *v0;

  return sub_1D583F138(*v0);
}

uint64_t sub_1D583F260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D584347C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D583F284()
{
  sub_1D583F720();
  return sub_1D5AAEED4();
}

uint64_t sub_1D583F2AC()
{
  sub_1D583F720();
  return sub_1D5AAEEE0();
}

uint64_t ListenSheetEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  _OWORD *v29;
  __int128 v30;
  uint64_t v32;
  char v33;
  _OWORD v34[3];
  char v35;
  _OWORD v36[7];
  _BYTE v37[23];
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v3 = v1;
  sub_1D583FFD0(0, &qword_1EFF49408, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v32 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D583F720();
  sub_1D5AAEEC8();
  LOBYTE(v36[0]) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for ListenSheetEvent.Model(0);
    v45 = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = v3 + v10[6];
    v12 = *(_OWORD *)(v11 + 112);
    v36[6] = *(_OWORD *)(v11 + 96);
    *(_OWORD *)v37 = v12;
    *(_QWORD *)&v37[15] = *(_QWORD *)(v11 + 127);
    v13 = *(_OWORD *)(v11 + 48);
    v36[2] = *(_OWORD *)(v11 + 32);
    v36[3] = v13;
    v14 = *(_OWORD *)(v11 + 80);
    v36[4] = *(_OWORD *)(v11 + 64);
    v36[5] = v14;
    v15 = *(_OWORD *)(v11 + 16);
    v36[0] = *(_OWORD *)v11;
    v36[1] = v15;
    LOBYTE(v34[0]) = 2;
    sub_1D57CB940();
    sub_1D5AAED6C();
    v16 = (uint64_t *)(v3 + v10[7]);
    v17 = *v16;
    v18 = v16[1];
    v19 = *((_BYTE *)v16 + 16);
    v20 = *((_BYTE *)v16 + 17);
    v22 = v16[3];
    v21 = v16[4];
    v39 = v17;
    v40 = v18;
    v41 = v19;
    v42 = v20;
    v43 = v22;
    v44 = v21;
    v38 = 3;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    sub_1D57DD5B8(v3 + v10[8], (uint64_t)v36);
    sub_1D57DD5B8((uint64_t)v36, (uint64_t)v34);
    v33 = 4;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v23 = v3 + v10[9];
    v24 = *(_QWORD *)(v23 + 16);
    v34[0] = *(_OWORD *)v23;
    *(_QWORD *)&v34[1] = v24;
    v33 = 5;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v25 = v3 + v10[10];
    v26 = *(_BYTE *)(v25 + 24);
    v27 = *(_BYTE *)(v25 + 25);
    v28 = *(_BYTE *)(v25 + 48);
    LOBYTE(v34[0]) = *(_BYTE *)v25;
    *(_OWORD *)((char *)v34 + 8) = *(_OWORD *)(v25 + 8);
    BYTE8(v34[1]) = v26;
    BYTE9(v34[1]) = v27;
    v34[2] = *(_OWORD *)(v25 + 32);
    v35 = v28;
    v33 = 6;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v29 = (_OWORD *)(v3 + v10[11]);
    v30 = v29[1];
    v34[0] = *v29;
    v34[1] = v30;
    v33 = 7;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    v34[0] = *(_OWORD *)(v3 + v10[12]);
    v33 = 8;
    sub_1D57CAD6C();
    sub_1D5AAED18();
    LOBYTE(v34[0]) = *(_BYTE *)(v3 + v10[13]);
    v33 = 9;
    sub_1D583E88C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D583F720()
{
  unint64_t result;

  result = qword_1EFF49410;
  if (!qword_1EFF49410)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB75AC, &type metadata for ListenSheetEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49410);
  }
  return result;
}

uint64_t ListenSheetEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  char *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  int *v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char v43;
  char v44;
  char v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  char *v64;
  _OWORD v65[3];
  char v66;
  char v67;
  _BYTE v68[144];
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  _BYTE v76[23];
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  _OWORD v84[3];
  uint64_t v85;

  v55 = a2;
  v3 = sub_1D5AADFB0();
  v59 = *(_QWORD *)(v3 - 8);
  v60 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D5AADF98();
  v61 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D583FFD0(0, &qword_1EFF49418, MEMORY[0x1E0DED048]);
  v56 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v55 - v11;
  v85 = type metadata accessor for ListenSheetEvent.Model(0);
  MEMORY[0x1E0C80A78](v85);
  v64 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v62 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1D583F720();
  v57 = v12;
  v15 = v63;
  sub_1D5AAEEB0();
  v58 = v6;
  if (v15)
  {
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
    v63 = v15;
    return result;
  }
  v16 = v10;
  LOBYTE(v77) = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v17 = v56;
  sub_1D5AAECD0();
  v25 = v6;
  v26 = v64;
  (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v64, v8, v25);
  LOBYTE(v77) = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v27 = v5;
  v28 = v60;
  sub_1D5AAECD0();
  v29 = (int *)v85;
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(&v26[*(int *)(v85 + 20)], v27, v28);
  v68[143] = 2;
  sub_1D57CB8FC();
  sub_1D5AAECD0();
  v30 = &v26[v29[6]];
  v31 = *(_OWORD *)v76;
  *((_OWORD *)v30 + 6) = v75;
  *((_OWORD *)v30 + 7) = v31;
  *(_QWORD *)(v30 + 127) = *(_QWORD *)&v76[15];
  v32 = v72;
  *((_OWORD *)v30 + 2) = v71;
  *((_OWORD *)v30 + 3) = v32;
  v33 = v74;
  *((_OWORD *)v30 + 4) = v73;
  *((_OWORD *)v30 + 5) = v33;
  v34 = v70;
  *(_OWORD *)v30 = v69;
  *((_OWORD *)v30 + 1) = v34;
  v68[0] = 3;
  sub_1D57CB874();
  sub_1D5AAECD0();
  v35 = *((_QWORD *)&v77 + 1);
  v36 = v78;
  v37 = BYTE1(v78);
  v38 = *((_QWORD *)&v78 + 1);
  v39 = v79;
  v40 = &v26[v29[7]];
  *(_QWORD *)v40 = v77;
  *((_QWORD *)v40 + 1) = v35;
  v40[16] = v36;
  v40[17] = v37;
  *((_QWORD *)v40 + 3) = v38;
  *((_QWORD *)v40 + 4) = v39;
  v68[142] = 4;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  sub_1D57DD5B8((uint64_t)&v77, (uint64_t)v68);
  sub_1D57DD5B8((uint64_t)v68, (uint64_t)&v26[v29[8]]);
  v67 = 5;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v41 = *(_QWORD *)&v65[1];
  v42 = &v26[v29[9]];
  *(_OWORD *)v42 = v65[0];
  *((_QWORD *)v42 + 2) = v41;
  v67 = 6;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v43 = BYTE8(v65[1]);
  v44 = BYTE9(v65[1]);
  v45 = v66;
  v46 = &v26[v29[10]];
  *v46 = v65[0];
  *(_OWORD *)(v46 + 8) = *(_OWORD *)((char *)v65 + 8);
  v46[24] = v43;
  v46[25] = v44;
  *((_OWORD *)v46 + 2) = v65[2];
  v46[48] = v45;
  v67 = 7;
  sub_1D57C5ED8();
  sub_1D5AAEC7C();
  v63 = 0;
  v49 = &v64[v29[11]];
  v50 = v65[1];
  *(_OWORD *)v49 = v65[0];
  *((_OWORD *)v49 + 1) = v50;
  v67 = 8;
  sub_1D57CAD28();
  v51 = v63;
  sub_1D5AAEC7C();
  v63 = v51;
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v57, v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
    v52 = 0;
  }
  else
  {
    *(_OWORD *)&v64[v29[12]] = v65[0];
    v67 = 9;
    sub_1D583E848();
    v53 = v63;
    sub_1D5AAECD0();
    v63 = v53;
    if (!v53)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v57, v56);
      v54 = (uint64_t)v64;
      v64[*(int *)(v85 + 52)] = v65[0];
      sub_1D584002C(v54, v55);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
      return sub_1D5840070(v54);
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v57, v56);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
    v52 = 1;
    v29 = (int *)v85;
  }
  v47 = v60;
  v48 = v64;
  (*(void (**)(char *, uint64_t))(v61 + 8))(v64, v58);
  (*(void (**)(char *, uint64_t))(v59 + 8))(&v48[v29[5]], v47);
  v19 = &v48[v29[6]];
  v20 = *((_OWORD *)v19 + 7);
  v83 = *((_OWORD *)v19 + 6);
  v84[0] = v20;
  *(_QWORD *)((char *)v84 + 15) = *(_QWORD *)(v19 + 127);
  v21 = *((_OWORD *)v19 + 3);
  v79 = *((_OWORD *)v19 + 2);
  v80 = v21;
  v22 = *((_OWORD *)v19 + 5);
  v81 = *((_OWORD *)v19 + 4);
  v82 = v22;
  v23 = *((_OWORD *)v19 + 1);
  v77 = *(_OWORD *)v19;
  v78 = v23;
  sub_1D57D5AE0((uint64_t)&v77);
  v24 = (int *)v85;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D57DD5B8((uint64_t)&v48[v24[8]], (uint64_t)&v77);
  sub_1D57DE9C8(&v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DEA24);
  sub_1D57DAEDC(*(_QWORD *)&v48[v24[9]], *(_QWORD *)&v48[v24[9] + 8], *(_QWORD *)&v48[v24[9] + 16]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = sub_1D57EA700(*(_QWORD *)&v48[v24[11]], *(_QWORD *)&v48[v24[11] + 8]);
  if ((v52 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_1D583FFD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D583F720();
    v7 = a3(a1, &type metadata for ListenSheetEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D584002C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ListenSheetEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5840070(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ListenSheetEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58400AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ListenSheetEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58400C0(_QWORD *a1)
{
  return ListenSheetEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58400D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46FB8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF493C0, a1);
}

uint64_t sub_1D58400F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46FC0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF493D8, a1);
}

uint64_t sub_1D584011C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  v13 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v13, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v13, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v13, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1EFF493F0, (void (*)(void))sub_1D583E848, (void (*)(void))sub_1D583E88C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
}

uint64_t *initializeBufferWithCopyOfBuffer for ListenSheetEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1EFF493F0, (void (*)(void))sub_1D583E848, (void (*)(void))sub_1D583E88C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for ListenSheetEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1EFF493F0, (void (*)(void))sub_1D583E848, (void (*)(void))sub_1D583E88C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
}

uint64_t initializeWithCopy for ListenSheetEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1EFF493F0, (void (*)(void))sub_1D583E848, (void (*)(void))sub_1D583E88C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for ListenSheetEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1EFF493F0, (void (*)(void))sub_1D583E848, (void (*)(void))sub_1D583E88C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for ListenSheetEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1EFF493F0, (void (*)(void))sub_1D583E848, (void (*)(void))sub_1D583E88C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for ListenSheetEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1EFF493F0, (void (*)(void))sub_1D583E848, (void (*)(void))sub_1D583E88C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListenSheetEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5841518(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1EFF493F0, (void (*)(void))sub_1D583E848, (void (*)(void))sub_1D583E88C);
                    v8 = v21;
                    v12 = *(_QWORD *)(v21 - 8);
                    v13 = a3[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ListenSheetEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58417B8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1EFF493F0, (void (*)(void))sub_1D583E848, (void (*)(void))sub_1D583E88C);
                    v10 = v23;
                    v14 = *(_QWORD *)(v23 - 8);
                    v15 = a4[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5841A54()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1EFF493F0, (void (*)(void))sub_1D583E848, (void (*)(void))sub_1D583E88C);
                    if (v9 <= 0x3F)
                      swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ListenSheetEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v58;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    v16 = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 3) = v16;
    v14[32] = v15[32];
    v17 = *((_QWORD *)v15 + 6);
    *((_QWORD *)v14 + 5) = *((_QWORD *)v15 + 5);
    *((_QWORD *)v14 + 6) = v17;
    v14[56] = v15[56];
    v14[57] = v15[57];
    v18 = *((_QWORD *)v15 + 9);
    *((_QWORD *)v14 + 8) = *((_QWORD *)v15 + 8);
    *((_QWORD *)v14 + 9) = v18;
    v14[80] = v15[80];
    *(_OWORD *)(v14 + 88) = *(_OWORD *)(v15 + 88);
    *((_QWORD *)v14 + 13) = *((_QWORD *)v15 + 13);
    v14[112] = v15[112];
    *((_QWORD *)v14 + 15) = *((_QWORD *)v15 + 15);
    *((_DWORD *)v14 + 32) = *((_DWORD *)v15 + 32);
    v14[132] = v15[132];
    *(_WORD *)(v14 + 133) = *(_WORD *)(v15 + 133);
    v19 = (char *)a1 + v13;
    v20 = (char *)a2 + v13;
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    *((_WORD *)v19 + 8) = *((_WORD *)v20 + 8);
    v22 = *((_QWORD *)v20 + 4);
    *((_QWORD *)v19 + 3) = *((_QWORD *)v20 + 3);
    *((_QWORD *)v19 + 4) = v22;
    v23 = a3[8];
    v24 = (char *)a1 + v23;
    v58 = a2;
    v25 = (char *)a2 + v23;
    v26 = *((_QWORD *)v25 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26)
    {
      *(_WORD *)v24 = *(_WORD *)v25;
      *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
      *((_QWORD *)v24 + 2) = v26;
      *((_QWORD *)v24 + 3) = *((_QWORD *)v25 + 3);
      v27 = *((_QWORD *)v25 + 5);
      *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
      *((_QWORD *)v24 + 5) = v27;
      v28 = *((_QWORD *)v25 + 7);
      *((_QWORD *)v24 + 6) = *((_QWORD *)v25 + 6);
      *((_QWORD *)v24 + 7) = v28;
      v29 = *((_QWORD *)v25 + 9);
      *((_QWORD *)v24 + 8) = *((_QWORD *)v25 + 8);
      *((_QWORD *)v24 + 9) = v29;
      v24[80] = v25[80];
      v30 = *((_QWORD *)v25 + 12);
      *((_QWORD *)v24 + 11) = *((_QWORD *)v25 + 11);
      *((_QWORD *)v24 + 12) = v30;
      *((_QWORD *)v24 + 13) = *((_QWORD *)v25 + 13);
      v24[112] = v25[112];
      v32 = *((_QWORD *)v25 + 15);
      v31 = *((_QWORD *)v25 + 16);
      *((_QWORD *)v24 + 15) = v32;
      *((_QWORD *)v24 + 16) = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v34 = *((_OWORD *)v25 + 7);
      *((_OWORD *)v24 + 6) = *((_OWORD *)v25 + 6);
      *((_OWORD *)v24 + 7) = v34;
      *((_QWORD *)v24 + 16) = *((_QWORD *)v25 + 16);
      v35 = *((_OWORD *)v25 + 3);
      *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
      *((_OWORD *)v24 + 3) = v35;
      v36 = *((_OWORD *)v25 + 5);
      *((_OWORD *)v24 + 4) = *((_OWORD *)v25 + 4);
      *((_OWORD *)v24 + 5) = v36;
      v37 = *((_OWORD *)v25 + 1);
      *(_OWORD *)v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v37;
    }
    v38 = a3[9];
    v39 = (char *)a1 + v38;
    v40 = (char *)v58 + v38;
    v41 = *((_QWORD *)v40 + 2);
    if (v41 == 1)
    {
      *(_OWORD *)v39 = *(_OWORD *)v40;
      *((_QWORD *)v39 + 2) = *((_QWORD *)v40 + 2);
    }
    else
    {
      *v39 = *v40;
      *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
      *((_QWORD *)v39 + 2) = v41;
      swift_bridgeObjectRetain();
    }
    v42 = a3[10];
    v43 = a3[11];
    v44 = (char *)a1 + v42;
    v45 = (char *)v58 + v42;
    *v44 = *v45;
    v46 = *((_QWORD *)v45 + 2);
    *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
    *((_QWORD *)v44 + 2) = v46;
    *((_WORD *)v44 + 12) = *((_WORD *)v45 + 12);
    v47 = *((_QWORD *)v45 + 5);
    *((_QWORD *)v44 + 4) = *((_QWORD *)v45 + 4);
    *((_QWORD *)v44 + 5) = v47;
    v44[48] = v45[48];
    v48 = (char *)a1 + v43;
    v49 = (char *)v58 + v43;
    v50 = *(_QWORD *)((char *)v58 + v43 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v50)
    {
      *(_QWORD *)v48 = *(_QWORD *)v49;
      *((_QWORD *)v48 + 1) = v50;
      *((_WORD *)v48 + 8) = *((_WORD *)v49 + 8);
      *((_QWORD *)v48 + 3) = *((_QWORD *)v49 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v51 = *((_OWORD *)v49 + 1);
      *(_OWORD *)v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v51;
    }
    v52 = a3[12];
    v53 = a3[13];
    v54 = (_QWORD *)((char *)a1 + v52);
    v55 = (_QWORD *)((char *)v58 + v52);
    v56 = v55[1];
    *v54 = *v55;
    v54[1] = v56;
    *((_BYTE *)a1 + v53) = *((_BYTE *)v58 + v53);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ListenSheetEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[8] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[9] + 16) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[11] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ListenSheetEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  int *v56;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v15;
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  v16 = *(_QWORD *)(v14 + 48);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v13 + 48) = v16;
  *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
  *(_BYTE *)(v13 + 57) = *(_BYTE *)(v14 + 57);
  v17 = *(_QWORD *)(v14 + 72);
  *(_QWORD *)(v13 + 64) = *(_QWORD *)(v14 + 64);
  *(_QWORD *)(v13 + 72) = v17;
  *(_BYTE *)(v13 + 80) = *(_BYTE *)(v14 + 80);
  *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
  *(_QWORD *)(v13 + 104) = *(_QWORD *)(v14 + 104);
  *(_BYTE *)(v13 + 112) = *(_BYTE *)(v14 + 112);
  *(_QWORD *)(v13 + 120) = *(_QWORD *)(v14 + 120);
  *(_DWORD *)(v13 + 128) = *(_DWORD *)(v14 + 128);
  *(_BYTE *)(v13 + 132) = *(_BYTE *)(v14 + 132);
  *(_WORD *)(v13 + 133) = *(_WORD *)(v14 + 133);
  v18 = a1 + v12;
  v19 = a2 + v12;
  v20 = *(_QWORD *)(v19 + 8);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(v18 + 8) = v20;
  *(_WORD *)(v18 + 16) = *(_WORD *)(v19 + 16);
  v21 = *(_QWORD *)(v19 + 32);
  *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
  *(_QWORD *)(v18 + 32) = v21;
  v56 = a3;
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_QWORD *)(a2 + v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25)
  {
    *(_WORD *)v23 = *(_WORD *)v24;
    *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
    *(_QWORD *)(v23 + 16) = v25;
    *(_QWORD *)(v23 + 24) = *(_QWORD *)(v24 + 24);
    v26 = *(_QWORD *)(v24 + 40);
    *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
    *(_QWORD *)(v23 + 40) = v26;
    v27 = *(_QWORD *)(v24 + 56);
    *(_QWORD *)(v23 + 48) = *(_QWORD *)(v24 + 48);
    *(_QWORD *)(v23 + 56) = v27;
    v28 = *(_QWORD *)(v24 + 72);
    *(_QWORD *)(v23 + 64) = *(_QWORD *)(v24 + 64);
    *(_QWORD *)(v23 + 72) = v28;
    *(_BYTE *)(v23 + 80) = *(_BYTE *)(v24 + 80);
    v29 = *(_QWORD *)(v24 + 96);
    *(_QWORD *)(v23 + 88) = *(_QWORD *)(v24 + 88);
    *(_QWORD *)(v23 + 96) = v29;
    *(_QWORD *)(v23 + 104) = *(_QWORD *)(v24 + 104);
    *(_BYTE *)(v23 + 112) = *(_BYTE *)(v24 + 112);
    v30 = *(_QWORD *)(v24 + 120);
    v31 = *(_QWORD *)(v24 + 128);
    *(_QWORD *)(v23 + 120) = v30;
    *(_QWORD *)(v23 + 128) = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v32 = *(_OWORD *)(v24 + 112);
    *(_OWORD *)(v23 + 96) = *(_OWORD *)(v24 + 96);
    *(_OWORD *)(v23 + 112) = v32;
    *(_QWORD *)(v23 + 128) = *(_QWORD *)(v24 + 128);
    v33 = *(_OWORD *)(v24 + 48);
    *(_OWORD *)(v23 + 32) = *(_OWORD *)(v24 + 32);
    *(_OWORD *)(v23 + 48) = v33;
    v34 = *(_OWORD *)(v24 + 80);
    *(_OWORD *)(v23 + 64) = *(_OWORD *)(v24 + 64);
    *(_OWORD *)(v23 + 80) = v34;
    v35 = *(_OWORD *)(v24 + 16);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 16) = v35;
  }
  v36 = v56[9];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = *(_QWORD *)(v38 + 16);
  if (v39 == 1)
  {
    *(_OWORD *)v37 = *(_OWORD *)v38;
    *(_QWORD *)(v37 + 16) = *(_QWORD *)(v38 + 16);
  }
  else
  {
    *(_BYTE *)v37 = *(_BYTE *)v38;
    *(_QWORD *)(v37 + 8) = *(_QWORD *)(v38 + 8);
    *(_QWORD *)(v37 + 16) = v39;
    swift_bridgeObjectRetain();
  }
  v40 = v56[10];
  v41 = v56[11];
  v42 = a1 + v40;
  v43 = a2 + v40;
  *(_BYTE *)v42 = *(_BYTE *)v43;
  v44 = *(_QWORD *)(v43 + 16);
  *(_QWORD *)(v42 + 8) = *(_QWORD *)(v43 + 8);
  *(_QWORD *)(v42 + 16) = v44;
  *(_WORD *)(v42 + 24) = *(_WORD *)(v43 + 24);
  v45 = *(_QWORD *)(v43 + 40);
  *(_QWORD *)(v42 + 32) = *(_QWORD *)(v43 + 32);
  *(_QWORD *)(v42 + 40) = v45;
  *(_BYTE *)(v42 + 48) = *(_BYTE *)(v43 + 48);
  v46 = a1 + v41;
  v47 = a2 + v41;
  v48 = *(_QWORD *)(a2 + v41 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v48)
  {
    *(_QWORD *)v46 = *(_QWORD *)v47;
    *(_QWORD *)(v46 + 8) = v48;
    *(_WORD *)(v46 + 16) = *(_WORD *)(v47 + 16);
    *(_QWORD *)(v46 + 24) = *(_QWORD *)(v47 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v49 = *(_OWORD *)(v47 + 16);
    *(_OWORD *)v46 = *(_OWORD *)v47;
    *(_OWORD *)(v46 + 16) = v49;
  }
  v50 = v56[12];
  v51 = v56[13];
  v52 = (_QWORD *)(a1 + v50);
  v53 = (_QWORD *)(a2 + v50);
  v54 = v53[1];
  *v52 = *v53;
  v52[1] = v54;
  *(_BYTE *)(a1 + v51) = *(_BYTE *)(a2 + v51);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ListenSheetEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_DWORD *)(v12 + 4) = *(_DWORD *)(a2 + v11 + 4);
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(a2 + v11 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(a2 + v11 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  v14 = *(_QWORD *)(v13 + 48);
  *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
  *(_QWORD *)(v12 + 48) = v14;
  *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 72);
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  *(_QWORD *)(v12 + 72) = v15;
  *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
  *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
  *(_BYTE *)(v12 + 130) = *(_BYTE *)(v13 + 130);
  *(_BYTE *)(v12 + 131) = *(_BYTE *)(v13 + 131);
  *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
  *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
  *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(a2 + v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_QWORD *)(a1 + v19 + 16);
  v23 = *(_QWORD *)(a2 + v19 + 16);
  if (v22)
  {
    if (v23)
    {
      *(_BYTE *)v20 = *(_BYTE *)v21;
      *(_BYTE *)(v20 + 1) = *(_BYTE *)(v21 + 1);
      *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
      *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v20 + 24) = *(_DWORD *)(v21 + 24);
      *(_DWORD *)(v20 + 28) = *(_DWORD *)(v21 + 28);
      *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 40) = *(_QWORD *)(v21 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 48) = *(_QWORD *)(v21 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 56) = *(_QWORD *)(v21 + 56);
      *(_QWORD *)(v20 + 64) = *(_QWORD *)(v21 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 72) = *(_QWORD *)(v21 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v20 + 80) = *(_BYTE *)(v21 + 80);
      *(_QWORD *)(v20 + 88) = *(_QWORD *)(v21 + 88);
      *(_QWORD *)(v20 + 96) = *(_QWORD *)(v21 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v24 = *(_QWORD *)(v21 + 104);
      *(_BYTE *)(v20 + 112) = *(_BYTE *)(v21 + 112);
      *(_QWORD *)(v20 + 104) = v24;
      *(_QWORD *)(v20 + 120) = *(_QWORD *)(v21 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v20);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      v26 = *(_OWORD *)(v21 + 64);
      v28 = *(_OWORD *)(v21 + 16);
      v27 = *(_OWORD *)(v21 + 32);
      *(_OWORD *)(v20 + 48) = *(_OWORD *)(v21 + 48);
      *(_OWORD *)(v20 + 64) = v26;
      *(_OWORD *)(v20 + 16) = v28;
      *(_OWORD *)(v20 + 32) = v27;
      v30 = *(_OWORD *)(v21 + 96);
      v29 = *(_OWORD *)(v21 + 112);
      v31 = *(_OWORD *)(v21 + 80);
      *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
      *(_OWORD *)(v20 + 96) = v30;
      *(_OWORD *)(v20 + 112) = v29;
      *(_OWORD *)(v20 + 80) = v31;
    }
  }
  else if (v23)
  {
    *(_BYTE *)v20 = *(_BYTE *)v21;
    *(_BYTE *)(v20 + 1) = *(_BYTE *)(v21 + 1);
    *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
    *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
    *(_DWORD *)(v20 + 24) = *(_DWORD *)(v21 + 24);
    *(_DWORD *)(v20 + 28) = *(_DWORD *)(v21 + 28);
    *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
    *(_QWORD *)(v20 + 40) = *(_QWORD *)(v21 + 40);
    *(_QWORD *)(v20 + 48) = *(_QWORD *)(v21 + 48);
    *(_QWORD *)(v20 + 56) = *(_QWORD *)(v21 + 56);
    *(_QWORD *)(v20 + 64) = *(_QWORD *)(v21 + 64);
    *(_QWORD *)(v20 + 72) = *(_QWORD *)(v21 + 72);
    *(_BYTE *)(v20 + 80) = *(_BYTE *)(v21 + 80);
    *(_QWORD *)(v20 + 88) = *(_QWORD *)(v21 + 88);
    *(_QWORD *)(v20 + 96) = *(_QWORD *)(v21 + 96);
    v25 = *(_QWORD *)(v21 + 104);
    *(_BYTE *)(v20 + 112) = *(_BYTE *)(v21 + 112);
    *(_QWORD *)(v20 + 104) = v25;
    *(_QWORD *)(v20 + 120) = *(_QWORD *)(v21 + 120);
    *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
    v32 = *(_OWORD *)(v21 + 16);
    v33 = *(_OWORD *)(v21 + 32);
    v34 = *(_OWORD *)(v21 + 64);
    *(_OWORD *)(v20 + 48) = *(_OWORD *)(v21 + 48);
    *(_OWORD *)(v20 + 64) = v34;
    *(_OWORD *)(v20 + 16) = v32;
    *(_OWORD *)(v20 + 32) = v33;
    v35 = *(_OWORD *)(v21 + 80);
    v36 = *(_OWORD *)(v21 + 96);
    v37 = *(_OWORD *)(v21 + 112);
    *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
    *(_OWORD *)(v20 + 96) = v36;
    *(_OWORD *)(v20 + 112) = v37;
    *(_OWORD *)(v20 + 80) = v35;
  }
  v38 = a3[9];
  v39 = a1 + v38;
  v40 = (__int128 *)(a2 + v38);
  v41 = *(_QWORD *)(a1 + v38 + 16);
  v42 = *(_QWORD *)(a2 + v38 + 16);
  if (v41 == 1)
  {
    if (v42 == 1)
    {
      v43 = *v40;
      *(_QWORD *)(v39 + 16) = *((_QWORD *)v40 + 2);
      *(_OWORD *)v39 = v43;
    }
    else
    {
      *(_BYTE *)v39 = *(_BYTE *)v40;
      *(_QWORD *)(v39 + 8) = *((_QWORD *)v40 + 1);
      *(_QWORD *)(v39 + 16) = *((_QWORD *)v40 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v42 == 1)
  {
    sub_1D57D9100(v39);
    v44 = *((_QWORD *)v40 + 2);
    *(_OWORD *)v39 = *v40;
    *(_QWORD *)(v39 + 16) = v44;
  }
  else
  {
    *(_BYTE *)v39 = *(_BYTE *)v40;
    *(_QWORD *)(v39 + 8) = *((_QWORD *)v40 + 1);
    *(_QWORD *)(v39 + 16) = *((_QWORD *)v40 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v45 = a3[10];
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_BYTE *)v46 = *(_BYTE *)(a2 + v45);
  *(_QWORD *)(v46 + 8) = *(_QWORD *)(a2 + v45 + 8);
  *(_QWORD *)(v46 + 16) = *(_QWORD *)(a2 + v45 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v46 + 24) = *(_BYTE *)(v47 + 24);
  *(_BYTE *)(v46 + 25) = *(_BYTE *)(v47 + 25);
  *(_QWORD *)(v46 + 32) = *(_QWORD *)(v47 + 32);
  *(_QWORD *)(v46 + 40) = *(_QWORD *)(v47 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v46 + 48) = *(_BYTE *)(v47 + 48);
  v48 = a3[11];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = *(_QWORD *)(a1 + v48 + 8);
  v52 = *(_QWORD *)(a2 + v48 + 8);
  if (v51)
  {
    if (v52)
    {
      *(_QWORD *)v49 = *(_QWORD *)v50;
      *(_QWORD *)(v49 + 8) = *(_QWORD *)(v50 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v49 + 16) = *(_BYTE *)(v50 + 16);
      *(_BYTE *)(v49 + 17) = *(_BYTE *)(v50 + 17);
      *(_QWORD *)(v49 + 24) = *(_QWORD *)(v50 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE47C(v49);
      v53 = *(_OWORD *)(v50 + 16);
      *(_OWORD *)v49 = *(_OWORD *)v50;
      *(_OWORD *)(v49 + 16) = v53;
    }
  }
  else if (v52)
  {
    *(_QWORD *)v49 = *(_QWORD *)v50;
    *(_QWORD *)(v49 + 8) = *(_QWORD *)(v50 + 8);
    *(_BYTE *)(v49 + 16) = *(_BYTE *)(v50 + 16);
    *(_BYTE *)(v49 + 17) = *(_BYTE *)(v50 + 17);
    *(_QWORD *)(v49 + 24) = *(_QWORD *)(v50 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v54 = *(_OWORD *)(v50 + 16);
    *(_OWORD *)v49 = *(_OWORD *)v50;
    *(_OWORD *)(v49 + 16) = v54;
  }
  v55 = a3[12];
  v56 = (_QWORD *)(a1 + v55);
  v57 = (_QWORD *)(a2 + v55);
  *v56 = *v57;
  v56[1] = v57[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t initializeWithTake for ListenSheetEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  _OWORD *v37;
  _OWORD *v38;
  __int128 v39;
  uint64_t v40;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  *(_QWORD *)(v13 + 127) = *(_QWORD *)(v14 + 127);
  v16 = *(_OWORD *)(v14 + 112);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(v14 + 96);
  *(_OWORD *)(v13 + 112) = v16;
  v17 = *(_OWORD *)(v14 + 80);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v14 + 64);
  *(_OWORD *)(v13 + 80) = v17;
  v18 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v18;
  v19 = a1 + v12;
  v20 = a2 + v12;
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  v22 = a3[8];
  v23 = a3[9];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_QWORD *)(v24 + 128) = *(_QWORD *)(v25 + 128);
  v26 = *(_OWORD *)(v25 + 48);
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
  *(_OWORD *)(v24 + 48) = v26;
  v27 = *(_OWORD *)(v25 + 112);
  *(_OWORD *)(v24 + 96) = *(_OWORD *)(v25 + 96);
  *(_OWORD *)(v24 + 112) = v27;
  v28 = *(_OWORD *)(v25 + 80);
  *(_OWORD *)(v24 + 64) = *(_OWORD *)(v25 + 64);
  *(_OWORD *)(v24 + 80) = v28;
  v29 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v29;
  v30 = a1 + v23;
  v31 = a2 + v23;
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_QWORD *)(v30 + 16) = *(_QWORD *)(v31 + 16);
  v32 = a3[10];
  v33 = a3[11];
  v34 = a1 + v32;
  v35 = a2 + v32;
  v36 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v36;
  *(_OWORD *)(v34 + 32) = *(_OWORD *)(v35 + 32);
  *(_BYTE *)(v34 + 48) = *(_BYTE *)(v35 + 48);
  v37 = (_OWORD *)(a1 + v33);
  v38 = (_OWORD *)(a2 + v33);
  v39 = v38[1];
  *v37 = *v38;
  v37[1] = v39;
  v40 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v40) = *(_BYTE *)(a2 + v40);
  return a1;
}

uint64_t assignWithTake for ListenSheetEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_DWORD *)(v12 + 4) = *(_DWORD *)(a2 + v11 + 4);
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(a2 + v11 + 8);
  v14 = *(_QWORD *)(a2 + v11 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 24) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  v15 = *(_QWORD *)(v13 + 48);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 48) = v15;
  *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
  *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
  *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
  *(_BYTE *)(v12 + 130) = *(_BYTE *)(v13 + 130);
  *(_BYTE *)(v12 + 131) = *(_BYTE *)(v13 + 131);
  *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
  *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
  *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  v20 = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 32) = v20;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  if (*(_QWORD *)(a1 + v21 + 16))
  {
    v24 = *(_QWORD *)(v23 + 16);
    if (v24)
    {
      *(_WORD *)v22 = *(_WORD *)v23;
      *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
      *(_QWORD *)(v22 + 16) = v24;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 24) = *(_QWORD *)(v23 + 24);
      *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 40) = *(_QWORD *)(v23 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 48) = *(_QWORD *)(v23 + 48);
      swift_bridgeObjectRelease();
      v25 = *(_QWORD *)(v23 + 64);
      *(_QWORD *)(v22 + 56) = *(_QWORD *)(v23 + 56);
      *(_QWORD *)(v22 + 64) = v25;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 72) = *(_QWORD *)(v23 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v22 + 80) = *(_BYTE *)(v23 + 80);
      v26 = *(_QWORD *)(v23 + 96);
      *(_QWORD *)(v22 + 88) = *(_QWORD *)(v23 + 88);
      *(_QWORD *)(v22 + 96) = v26;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 104) = *(_QWORD *)(v23 + 104);
      *(_BYTE *)(v22 + 112) = *(_BYTE *)(v23 + 112);
      *(_QWORD *)(v22 + 120) = *(_QWORD *)(v23 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 128) = *(_QWORD *)(v23 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D57E17B8(v22);
  }
  v27 = *(_OWORD *)(v23 + 112);
  *(_OWORD *)(v22 + 96) = *(_OWORD *)(v23 + 96);
  *(_OWORD *)(v22 + 112) = v27;
  *(_QWORD *)(v22 + 128) = *(_QWORD *)(v23 + 128);
  v28 = *(_OWORD *)(v23 + 48);
  *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
  *(_OWORD *)(v22 + 48) = v28;
  v29 = *(_OWORD *)(v23 + 80);
  *(_OWORD *)(v22 + 64) = *(_OWORD *)(v23 + 64);
  *(_OWORD *)(v22 + 80) = v29;
  v30 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v30;
LABEL_6:
  v31 = a3[9];
  v32 = a1 + v31;
  v33 = a2 + v31;
  if (*(_QWORD *)(a1 + v31 + 16) == 1)
  {
LABEL_9:
    *(_OWORD *)v32 = *(_OWORD *)v33;
    *(_QWORD *)(v32 + 16) = *(_QWORD *)(v33 + 16);
    goto LABEL_11;
  }
  v34 = *(_QWORD *)(v33 + 16);
  if (v34 == 1)
  {
    sub_1D57D9100(v32);
    goto LABEL_9;
  }
  *(_BYTE *)v32 = *(_BYTE *)v33;
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
  *(_QWORD *)(v32 + 16) = v34;
  swift_bridgeObjectRelease();
LABEL_11:
  v35 = a3[10];
  v36 = a1 + v35;
  v37 = a2 + v35;
  *(_BYTE *)v36 = *(_BYTE *)(a2 + v35);
  v38 = *(_QWORD *)(a2 + v35 + 16);
  *(_QWORD *)(v36 + 8) = *(_QWORD *)(a2 + v35 + 8);
  *(_QWORD *)(v36 + 16) = v38;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v36 + 24) = *(_BYTE *)(v37 + 24);
  *(_BYTE *)(v36 + 25) = *(_BYTE *)(v37 + 25);
  v39 = *(_QWORD *)(v37 + 40);
  *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
  *(_QWORD *)(v36 + 40) = v39;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v36 + 48) = *(_BYTE *)(v37 + 48);
  v40 = a3[11];
  v41 = a1 + v40;
  v42 = a2 + v40;
  if (!*(_QWORD *)(a1 + v40 + 8))
  {
LABEL_15:
    v44 = *(_OWORD *)(v42 + 16);
    *(_OWORD *)v41 = *(_OWORD *)v42;
    *(_OWORD *)(v41 + 16) = v44;
    goto LABEL_16;
  }
  v43 = *(_QWORD *)(v42 + 8);
  if (!v43)
  {
    sub_1D57EE47C(v41);
    goto LABEL_15;
  }
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *(_QWORD *)(v41 + 8) = v43;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v41 + 16) = *(_BYTE *)(v42 + 16);
  *(_BYTE *)(v41 + 17) = *(_BYTE *)(v42 + 17);
  *(_QWORD *)(v41 + 24) = *(_QWORD *)(v42 + 24);
  swift_bridgeObjectRelease();
LABEL_16:
  v45 = a3[12];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (uint64_t *)(a2 + v45);
  v49 = *v47;
  v48 = v47[1];
  *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListenSheetEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58430A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for ListenSheetEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D584315C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_1D5843204()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ListenSheetEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1D5843324 + 4 * byte_1D5AB72DF[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1D5843358 + 4 * byte_1D5AB72DA[v4]))();
}

uint64_t sub_1D5843358(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5843360(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5843368);
  return result;
}

uint64_t sub_1D5843374(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D584337CLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1D5843380(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5843388(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ListenSheetEvent.Model.CodingKeys()
{
  return &type metadata for ListenSheetEvent.Model.CodingKeys;
}

unint64_t sub_1D58433A8()
{
  unint64_t result;

  result = qword_1EFF49580;
  if (!qword_1EFF49580)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB7584, &type metadata for ListenSheetEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49580);
  }
  return result;
}

unint64_t sub_1D58433F0()
{
  unint64_t result;

  result = qword_1EFF49588;
  if (!qword_1EFF49588)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB74F4, &type metadata for ListenSheetEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49588);
  }
  return result;
}

unint64_t sub_1D5843438()
{
  unint64_t result;

  result = qword_1EFF49590;
  if (!qword_1EFF49590)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB751C, &type metadata for ListenSheetEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49590);
  }
  return result;
}

uint64_t sub_1D584347C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6569566575737369 && a2 == 0xED00006174614477 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AED840)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

void NewsletterSubscriptionData.newsletterSubscription.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *NewsletterSubscriptionData.newsletterSubscription.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*NewsletterSubscriptionData.newsletterSubscription.modify())()
{
  return nullsub_1;
}

NewsAnalytics::NewsletterSubscriptionData __swiftcall NewsletterSubscriptionData.init(newsletterSubscription:)(NewsAnalytics::NewsletterSubscriptionData newsletterSubscription)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)newsletterSubscription.newsletterSubscription;
  return newsletterSubscription;
}

unint64_t sub_1D5843920()
{
  return 0xD000000000000016;
}

uint64_t sub_1D584393C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5843F78(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D5843964()
{
  sub_1D5843AB8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D584398C()
{
  sub_1D5843AB8();
  return sub_1D5AAEEE0();
}

uint64_t NewsletterSubscriptionData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D5843C78(0, &qword_1ED9CC978, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5843AB8();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D5843AFC();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5843AB8()
{
  unint64_t result;

  result = qword_1ED9CB628;
  if (!qword_1ED9CB628)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB7790, &type metadata for NewsletterSubscriptionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CB628);
  }
  return result;
}

unint64_t sub_1D5843AFC()
{
  unint64_t result;

  result = qword_1ED9CB650;
  if (!qword_1ED9CB650)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NewsletterSubscriptionType, &type metadata for NewsletterSubscriptionType);
    atomic_store(result, (unint64_t *)&qword_1ED9CB650);
  }
  return result;
}

uint64_t NewsletterSubscriptionData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D5843C78(0, &qword_1ED9CE168, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5843AB8();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5843CD4();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5843C78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5843AB8();
    v7 = a3(a1, &type metadata for NewsletterSubscriptionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5843CD4()
{
  unint64_t result;

  result = qword_1ED9CDDB0;
  if (!qword_1ED9CDDB0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NewsletterSubscriptionType, &type metadata for NewsletterSubscriptionType);
    atomic_store(result, (unint64_t *)&qword_1ED9CDDB0);
  }
  return result;
}

uint64_t sub_1D5843D20@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return NewsletterSubscriptionData.init(from:)(a1, a2);
}

uint64_t sub_1D5843D34(_QWORD *a1)
{
  return NewsletterSubscriptionData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for NewsletterSubscriptionData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D5843D94 + 4 * byte_1D5AB7605[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D5843DC8 + 4 * byte_1D5AB7600[v4]))();
}

uint64_t sub_1D5843DC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5843DD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5843DD8);
  return result;
}

uint64_t sub_1D5843DE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5843DECLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D5843DF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5843DF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for NewsletterSubscriptionData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5843E44 + 4 * byte_1D5AB760A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5843E64 + 4 * byte_1D5AB760F[v4]))();
}

_BYTE *sub_1D5843E44(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5843E64(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5843E6C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5843E74(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5843E7C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5843E84(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NewsletterSubscriptionData.CodingKeys()
{
  return &type metadata for NewsletterSubscriptionData.CodingKeys;
}

unint64_t sub_1D5843EA4()
{
  unint64_t result;

  result = qword_1EFF49598;
  if (!qword_1EFF49598)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB7768, &type metadata for NewsletterSubscriptionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49598);
  }
  return result;
}

unint64_t sub_1D5843EEC()
{
  unint64_t result;

  result = qword_1ED9CB638;
  if (!qword_1ED9CB638)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB76D8, &type metadata for NewsletterSubscriptionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CB638);
  }
  return result;
}

unint64_t sub_1D5843F34()
{
  unint64_t result;

  result = qword_1ED9CB630;
  if (!qword_1ED9CB630)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB7700, &type metadata for NewsletterSubscriptionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CB630);
  }
  return result;
}

uint64_t sub_1D5843F78(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AED860)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t SearchResponseData.isFeatured.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t SearchResponseData.isFeatured.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*SearchResponseData.isFeatured.modify())()
{
  return nullsub_1;
}

NewsAnalytics::SearchResponseData __swiftcall SearchResponseData.init(isFeatured:)(NewsAnalytics::SearchResponseData isFeatured)
{
  NewsAnalytics::SearchResponseData *v1;

  v1->isFeatured = isFeatured.isFeatured;
  return isFeatured;
}

uint64_t sub_1D5844024()
{
  return 0x7275746165467369;
}

uint64_t sub_1D5844040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7275746165467369 && a2 == 0xEA00000000006465)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D58440E0()
{
  sub_1D5844220();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5844108()
{
  sub_1D5844220();
  return sub_1D5AAEEE0();
}

uint64_t SearchResponseData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5844388(0, &qword_1EFF495A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5844220();
  sub_1D5AAEEC8();
  sub_1D5AAED48();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D5844220()
{
  unint64_t result;

  result = qword_1EFF495A8;
  if (!qword_1EFF495A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB7968, &type metadata for SearchResponseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF495A8);
  }
  return result;
}

uint64_t SearchResponseData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;

  sub_1D5844388(0, &qword_1EFF495B0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5844220();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECAC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5844388(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5844220();
    v7 = a3(a1, &type metadata for SearchResponseData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58443EC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return SearchResponseData.init(from:)(a1, a2);
}

uint64_t sub_1D5844400(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5844388(0, &qword_1EFF495A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5844220();
  sub_1D5AAEEC8();
  sub_1D5AAED48();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t storeEnumTagSinglePayload for SearchResponseData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D584453C + 4 * byte_1D5AB77E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D5844570 + 4 * byte_1D5AB77E0[v4]))();
}

uint64_t sub_1D5844570(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5844578(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5844580);
  return result;
}

uint64_t sub_1D584458C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5844594);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5844598(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58445A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchResponseData()
{
  return &type metadata for SearchResponseData;
}

uint64_t storeEnumTagSinglePayload for SearchResponseData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D58445FC + 4 * byte_1D5AB77EA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D584461C + 4 * byte_1D5AB77EF[v4]))();
}

_BYTE *sub_1D58445FC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D584461C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5844624(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D584462C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5844634(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D584463C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SearchResponseData.CodingKeys()
{
  return &type metadata for SearchResponseData.CodingKeys;
}

unint64_t sub_1D584465C()
{
  unint64_t result;

  result = qword_1EFF495B8;
  if (!qword_1EFF495B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB7940, &type metadata for SearchResponseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF495B8);
  }
  return result;
}

unint64_t sub_1D58446A4()
{
  unint64_t result;

  result = qword_1EFF495C0;
  if (!qword_1EFF495C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB78B0, &type metadata for SearchResponseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF495C0);
  }
  return result;
}

unint64_t sub_1D58446EC()
{
  unint64_t result;

  result = qword_1EFF495C8;
  if (!qword_1EFF495C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB78D8, &type metadata for SearchResponseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF495C8);
  }
  return result;
}

void LiveActivityDismissalData.liveActivityDismissal.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *LiveActivityDismissalData.liveActivityDismissal.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*LiveActivityDismissalData.liveActivityDismissal.modify())()
{
  return nullsub_1;
}

NewsAnalytics::LiveActivityDismissalData __swiftcall LiveActivityDismissalData.init(liveActivityDismissal:)(NewsAnalytics::LiveActivityDismissalData liveActivityDismissal)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)liveActivityDismissal.liveActivityDismissal;
  return liveActivityDismissal;
}

unint64_t sub_1D5844764()
{
  return 0xD000000000000015;
}

uint64_t sub_1D5844780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5844DCC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D58447A8()
{
  sub_1D58448FC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58447D0()
{
  sub_1D58448FC();
  return sub_1D5AAEEE0();
}

uint64_t LiveActivityDismissalData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D5844ABC(0, &qword_1EFF495D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58448FC();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D5844940();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D58448FC()
{
  unint64_t result;

  result = qword_1EFF495D8;
  if (!qword_1EFF495D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB7B50, &type metadata for LiveActivityDismissalData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF495D8);
  }
  return result;
}

unint64_t sub_1D5844940()
{
  unint64_t result;

  result = qword_1EFF495E0;
  if (!qword_1EFF495E0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for LiveActivityDismissal, &type metadata for LiveActivityDismissal);
    atomic_store(result, (unint64_t *)&qword_1EFF495E0);
  }
  return result;
}

uint64_t LiveActivityDismissalData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D5844ABC(0, &qword_1EFF495E8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58448FC();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5844B18();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5844ABC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58448FC();
    v7 = a3(a1, &type metadata for LiveActivityDismissalData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5844B18()
{
  unint64_t result;

  result = qword_1EFF495F0;
  if (!qword_1EFF495F0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for LiveActivityDismissal, &type metadata for LiveActivityDismissal);
    atomic_store(result, (unint64_t *)&qword_1EFF495F0);
  }
  return result;
}

uint64_t sub_1D5844B64@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return LiveActivityDismissalData.init(from:)(a1, a2);
}

uint64_t sub_1D5844B78(_QWORD *a1)
{
  return LiveActivityDismissalData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for LiveActivityDismissalData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D5844BD8 + 4 * byte_1D5AB79C5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D5844C0C + 4 * byte_1D5AB79C0[v4]))();
}

uint64_t sub_1D5844C0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5844C14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5844C1CLL);
  return result;
}

uint64_t sub_1D5844C28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5844C30);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D5844C34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5844C3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityDismissalData()
{
  return &type metadata for LiveActivityDismissalData;
}

uint64_t storeEnumTagSinglePayload for LiveActivityDismissalData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5844C98 + 4 * byte_1D5AB79CA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5844CB8 + 4 * byte_1D5AB79CF[v4]))();
}

_BYTE *sub_1D5844C98(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5844CB8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5844CC0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5844CC8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5844CD0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5844CD8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityDismissalData.CodingKeys()
{
  return &type metadata for LiveActivityDismissalData.CodingKeys;
}

unint64_t sub_1D5844CF8()
{
  unint64_t result;

  result = qword_1EFF495F8;
  if (!qword_1EFF495F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB7B28, &type metadata for LiveActivityDismissalData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF495F8);
  }
  return result;
}

unint64_t sub_1D5844D40()
{
  unint64_t result;

  result = qword_1EFF49600;
  if (!qword_1EFF49600)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB7A98, &type metadata for LiveActivityDismissalData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49600);
  }
  return result;
}

unint64_t sub_1D5844D88()
{
  unint64_t result;

  result = qword_1EFF49608;
  if (!qword_1EFF49608)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB7AC0, &type metadata for LiveActivityDismissalData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49608);
  }
  return result;
}

uint64_t sub_1D5844DCC(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AED880)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

double static ScienceData.emptyScienceData.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = 0;
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)(a1 + 24) = _Q0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  result = 1.0;
  *(_OWORD *)(a1 + 64) = xmmword_1D5AB7BA0;
  *(_QWORD *)(a1 + 80) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 120) = 0;
  *(_BYTE *)(a1 + 128) = 1;
  *(_QWORD *)(a1 + 136) = 0;
  *(_BYTE *)(a1 + 144) = 1;
  *(_QWORD *)(a1 + 152) = 0;
  *(_BYTE *)(a1 + 160) = 1;
  *(_QWORD *)(a1 + 168) = 0;
  *(_BYTE *)(a1 + 176) = 1;
  *(_QWORD *)(a1 + 184) = 0;
  *(_BYTE *)(a1 + 192) = 1;
  *(_QWORD *)(a1 + 200) = 0;
  *(_BYTE *)(a1 + 208) = 1;
  *(_QWORD *)(a1 + 216) = 0;
  *(_BYTE *)(a1 + 224) = 1;
  *(_QWORD *)(a1 + 232) = 0;
  *(_BYTE *)(a1 + 240) = 1;
  *(_QWORD *)(a1 + 248) = 0;
  *(_BYTE *)(a1 + 256) = 1;
  *(_QWORD *)(a1 + 264) = 0;
  *(_BYTE *)(a1 + 272) = 1;
  return result;
}

id ScienceData.feldsparFractionalCohortMemberships.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;

  v0 = swift_bridgeObjectRetain();
  sub_1D5844FD4(v0);
  swift_bridgeObjectRelease();
  v1 = objc_allocWithZone(MEMORY[0x1E0C99DE8]);
  v2 = (void *)sub_1D5AAE934();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithArray_, v2);

  return v3;
}

id sub_1D5844FD4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  double *v4;
  double v5;
  id v6;
  id result;
  void *v8;
  void *v9;
  double v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return (id)v2;
  v15 = MEMORY[0x1E0DEE9D8];
  sub_1D5AAAFDC(0, v1, 0);
  v4 = (double *)(a1 + 48);
  v2 = v15;
  while (1)
  {
    v5 = *v4;
    v6 = objc_allocWithZone(MEMORY[0x1E0D62600]);
    swift_bridgeObjectRetain();
    result = objc_msgSend(v6, sel_init);
    if (!result)
      break;
    v8 = result;
    v9 = (void *)sub_1D5AAE7FC();
    objc_msgSend(v8, sel_setTagId_, v9);

    *(float *)&v10 = v5;
    objc_msgSend(v8, sel_setScore_, v10);
    v14 = sub_1D5845144();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v13 = v8;
    v15 = v2;
    v12 = *(_QWORD *)(v2 + 16);
    v11 = *(_QWORD *)(v2 + 24);
    if (v12 >= v11 >> 1)
    {
      sub_1D5AAAFDC((char *)(v11 > 1), v12 + 1, 1);
      v2 = v15;
    }
    *(_QWORD *)(v2 + 16) = v12 + 1;
    sub_1D5845180(&v13, (_OWORD *)(v2 + 32 * v12 + 32));
    v4 += 3;
    if (!--v1)
      return (id)v2;
  }
  __break(1u);
  return result;
}

unint64_t sub_1D5845144()
{
  unint64_t result;

  result = qword_1EFF49610;
  if (!qword_1EFF49610)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFF49610);
  }
  return result;
}

_OWORD *sub_1D5845180(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t PuzzleStatsData.playDuration.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t PuzzleStatsData.playDuration.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*PuzzleStatsData.playDuration.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleStatsData.currentStreak.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t PuzzleStatsData.currentStreak.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*PuzzleStatsData.currentStreak.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleStatsData.rankId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleStatsData.rankId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*PuzzleStatsData.rankId.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleStatsData.init(playDuration:currentStreak:rankId:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(_QWORD *)a7 = result;
  *(_BYTE *)(a7 + 8) = a2 & 1;
  *(_QWORD *)(a7 + 16) = a3;
  *(_BYTE *)(a7 + 24) = a4 & 1;
  *(_QWORD *)(a7 + 32) = a5;
  *(_QWORD *)(a7 + 40) = a6;
  return result;
}

uint64_t sub_1D5845278()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x53746E6572727563;
  if (*v0 != 1)
    v1 = 0x64496B6E6172;
  if (*v0)
    return v1;
  else
    return 0x6172754479616C70;
}

uint64_t sub_1D58452E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5845AE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5845308()
{
  sub_1D58454D4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5845330()
{
  sub_1D58454D4();
  return sub_1D5AAEEE0();
}

uint64_t PuzzleStatsData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  int v12;
  char v13;
  char v14;
  char v15;

  sub_1D58456E4(0, &qword_1EFF49618, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v12 = *(unsigned __int8 *)(v1 + 24);
  v11[1] = *(_QWORD *)(v1 + 32);
  v11[2] = v8;
  v11[0] = *(_QWORD *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58454D4();
  sub_1D5AAEEC8();
  v15 = 0;
  v9 = v11[3];
  sub_1D5AAED30();
  if (!v9)
  {
    v14 = 1;
    sub_1D5AAED30();
    v13 = 2;
    sub_1D5AAECF4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D58454D4()
{
  unint64_t result;

  result = qword_1EFF49620;
  if (!qword_1EFF49620)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB7D34, &type metadata for PuzzleStatsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49620);
  }
  return result;
}

uint64_t PuzzleStatsData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char v24;
  char v25;
  char v26;

  sub_1D58456E4(0, &qword_1EFF49628, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58454D4();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v26 = 0;
    v10 = sub_1D5AAEC94();
    v12 = v11;
    v25 = 1;
    v13 = sub_1D5AAEC94();
    v23 = v14;
    v22 = v13;
    v24 = 2;
    v15 = sub_1D5AAEC58();
    v18 = v17;
    v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    v20 = v15;
    v19(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)a2 = v10;
    *(_BYTE *)(a2 + 8) = v12 & 1;
    *(_QWORD *)(a2 + 16) = v22;
    *(_BYTE *)(a2 + 24) = v23 & 1;
    *(_QWORD *)(a2 + 32) = v20;
    *(_QWORD *)(a2 + 40) = v18;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1D58456E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58454D4();
    v7 = a3(a1, &type metadata for PuzzleStatsData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5845748@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleStatsData.init(from:)(a1, a2);
}

uint64_t sub_1D584575C(_QWORD *a1)
{
  return PuzzleStatsData.encode(to:)(a1);
}

uint64_t destroy for PuzzleStatsData()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PuzzleStatsData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PuzzleStatsData(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  v4 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PuzzleStatsData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleStatsData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PuzzleStatsData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 40) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleStatsData()
{
  return &type metadata for PuzzleStatsData;
}

uint64_t storeEnumTagSinglePayload for PuzzleStatsData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D584598C + 4 * byte_1D5AB7BB9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D58459C0 + 4 * byte_1D5AB7BB4[v4]))();
}

uint64_t sub_1D58459C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58459C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58459D0);
  return result;
}

uint64_t sub_1D58459DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58459E4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D58459E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58459F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleStatsData.CodingKeys()
{
  return &type metadata for PuzzleStatsData.CodingKeys;
}

unint64_t sub_1D5845A10()
{
  unint64_t result;

  result = qword_1EFF49630;
  if (!qword_1EFF49630)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB7D0C, &type metadata for PuzzleStatsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49630);
  }
  return result;
}

unint64_t sub_1D5845A58()
{
  unint64_t result;

  result = qword_1EFF49638;
  if (!qword_1EFF49638)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB7C7C, &type metadata for PuzzleStatsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49638);
  }
  return result;
}

unint64_t sub_1D5845AA0()
{
  unint64_t result;

  result = qword_1EFF49640;
  if (!qword_1EFF49640)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB7CA4, &type metadata for PuzzleStatsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49640);
  }
  return result;
}

uint64_t sub_1D5845AE4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6172754479616C70 && a2 == 0xEC0000006E6F6974;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x53746E6572727563 && a2 == 0xED00006B61657274 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64496B6E6172 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t UserEventHistoryAggregateStoreData.baselineTimestamp.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t UserEventHistoryAggregateStoreData.baselineTimestamp.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*UserEventHistoryAggregateStoreData.baselineTimestamp.modify())()
{
  return nullsub_1;
}

uint64_t UserEventHistoryAggregateStoreData.baselineStatelessEventCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t UserEventHistoryAggregateStoreData.baselineStatelessEventCount.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*UserEventHistoryAggregateStoreData.baselineStatelessEventCount.modify())()
{
  return nullsub_1;
}

uint64_t UserEventHistoryAggregateStoreData.baselineTotalEventCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t UserEventHistoryAggregateStoreData.baselineTotalEventCount.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = result;
  *(_BYTE *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t (*UserEventHistoryAggregateStoreData.baselineTotalEventCount.modify())()
{
  return nullsub_1;
}

__n128 UserEventHistoryAggregateStoreData.aggregateCounts.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __n128 result;
  __int128 v6;

  v2 = *(_QWORD *)(v1 + 80);
  v3 = *(_BYTE *)(v1 + 88);
  v4 = *(_BYTE *)(v1 + 89);
  result = *(__n128 *)(v1 + 48);
  v6 = *(_OWORD *)(v1 + 64);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = v2;
  *(_BYTE *)(a1 + 40) = v3;
  *(_BYTE *)(a1 + 41) = v4;
  return result;
}

__n128 UserEventHistoryAggregateStoreData.aggregateCounts.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __n128 result;
  __int128 v6;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_BYTE *)(a1 + 40);
  v4 = *(_BYTE *)(a1 + 41);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 64) = v6;
  *(_QWORD *)(v1 + 80) = v2;
  *(_BYTE *)(v1 + 88) = v3;
  *(_BYTE *)(v1 + 89) = v4;
  return result;
}

uint64_t (*UserEventHistoryAggregateStoreData.aggregateCounts.modify())()
{
  return nullsub_1;
}

__n128 UserEventHistoryAggregateStoreData.init(baselineTimestamp:baselineStatelessEventCount:baselineTotalEventCount:aggregateCounts:)@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  char v9;
  char v10;
  __n128 result;
  __int128 v12;

  v8 = *(_QWORD *)(a7 + 32);
  v9 = *(_BYTE *)(a7 + 40);
  v10 = *(_BYTE *)(a7 + 41);
  *(_QWORD *)a8 = a1;
  *(_BYTE *)(a8 + 8) = a2 & 1;
  *(_QWORD *)(a8 + 16) = a3;
  *(_BYTE *)(a8 + 24) = a4 & 1;
  *(_QWORD *)(a8 + 32) = a5;
  *(_BYTE *)(a8 + 40) = a6 & 1;
  result = *(__n128 *)a7;
  v12 = *(_OWORD *)(a7 + 16);
  *(_OWORD *)(a8 + 48) = *(_OWORD *)a7;
  *(_OWORD *)(a8 + 64) = v12;
  *(_QWORD *)(a8 + 80) = v8;
  *(_BYTE *)(a8 + 88) = v9;
  *(_BYTE *)(a8 + 89) = v10;
  return result;
}

uint64_t sub_1D5845D90(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D5845DC8 + 4 * byte_1D5AB7D90[a1]))(0xD000000000000011, 0x80000001D5AED8A0);
}

uint64_t sub_1D5845DC8(uint64_t a1)
{
  return a1 + 10;
}

uint64_t sub_1D5845DF0()
{
  return 0x7461676572676761;
}

uint64_t sub_1D5845E14()
{
  unsigned __int8 *v0;

  return sub_1D5845D90(*v0);
}

uint64_t sub_1D5845E1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58466CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5845E40()
{
  sub_1D584609C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5845E68()
{
  sub_1D584609C();
  return sub_1D5AAEEE0();
}

uint64_t UserEventHistoryAggregateStoreData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  int v33;
  char v34;

  sub_1D5846338(0, &qword_1ED9CF028, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v15 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v33 = *(unsigned __int8 *)(v1 + 24);
  v23 = *(_QWORD *)(v1 + 32);
  v24 = v8;
  v22 = *(unsigned __int8 *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 48);
  v20 = *(_QWORD *)(v1 + 56);
  v21 = v9;
  v10 = *(_QWORD *)(v1 + 72);
  v15 = *(_QWORD *)(v1 + 64);
  v16 = v10;
  v19 = *(_QWORD *)(v1 + 80);
  LODWORD(v9) = *(unsigned __int8 *)(v1 + 88);
  v17 = *(unsigned __int8 *)(v1 + 89);
  v18 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D584609C();
  sub_1D5AAEEC8();
  LOBYTE(v26) = 0;
  v11 = v25;
  sub_1D5AAED30();
  if (!v11)
  {
    v13 = v20;
    v12 = v21;
    LOBYTE(v26) = 1;
    sub_1D5AAED30();
    LOBYTE(v26) = 2;
    sub_1D5AAED30();
    v26 = v12;
    v27 = v13;
    v28 = v15;
    v29 = v16;
    v30 = v19;
    v31 = v18;
    v32 = v17;
    v34 = 3;
    sub_1D58460E0();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D584609C()
{
  unint64_t result;

  result = qword_1ED9CEE38;
  if (!qword_1ED9CEE38)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB7F28, &type metadata for UserEventHistoryAggregateStoreData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEE38);
  }
  return result;
}

unint64_t sub_1D58460E0()
{
  unint64_t result;

  result = qword_1ED9CEE90;
  if (!qword_1ED9CEE90)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserEventHistoryAggregateStoreCountsData, &type metadata for UserEventHistoryAggregateStoreCountsData);
    atomic_store(result, (unint64_t *)&qword_1ED9CEE90);
  }
  return result;
}

uint64_t UserEventHistoryAggregateStoreData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v18;
  char v19;
  char v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  char v31;
  int v32;
  char v33;

  sub_1D5846338(0, &qword_1ED9CEF98, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D584609C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    LOBYTE(v27) = 0;
    v10 = sub_1D5AAEC94();
    v12 = v11;
    LOBYTE(v27) = 1;
    v13 = sub_1D5AAEC94();
    v32 = v14;
    v26 = v13;
    LOBYTE(v27) = 2;
    v15 = sub_1D5AAEC94();
    v24 = v16;
    v25 = v15;
    v33 = 3;
    sub_1D5846394();
    sub_1D5AAEC7C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v18 = v29;
    v19 = v30;
    v20 = v31;
    v21 = v27;
    v22 = v28;
    *(_QWORD *)a2 = v10;
    *(_BYTE *)(a2 + 8) = v12 & 1;
    *(_QWORD *)(a2 + 16) = v26;
    *(_BYTE *)(a2 + 24) = v32 & 1;
    *(_QWORD *)(a2 + 32) = v25;
    *(_BYTE *)(a2 + 40) = v24 & 1;
    *(_OWORD *)(a2 + 48) = v21;
    *(_OWORD *)(a2 + 64) = v22;
    *(_QWORD *)(a2 + 80) = v18;
    *(_BYTE *)(a2 + 88) = v19;
    *(_BYTE *)(a2 + 89) = v20;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5846338(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D584609C();
    v7 = a3(a1, &type metadata for UserEventHistoryAggregateStoreData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5846394()
{
  unint64_t result;

  result = qword_1ED9CEE98;
  if (!qword_1ED9CEE98)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserEventHistoryAggregateStoreCountsData, &type metadata for UserEventHistoryAggregateStoreCountsData);
    atomic_store(result, (unint64_t *)&qword_1ED9CEE98);
  }
  return result;
}

unint64_t sub_1D58463DC()
{
  unint64_t result;

  result = qword_1ED9D0B08;
  if (!qword_1ED9D0B08)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserEventHistoryAggregateStoreData, &type metadata for UserEventHistoryAggregateStoreData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0B08);
  }
  return result;
}

unint64_t sub_1D5846424()
{
  unint64_t result;

  result = qword_1ED9D0B00;
  if (!qword_1ED9D0B00)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserEventHistoryAggregateStoreData, &type metadata for UserEventHistoryAggregateStoreData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0B00);
  }
  return result;
}

uint64_t sub_1D5846468@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UserEventHistoryAggregateStoreData.init(from:)(a1, a2);
}

uint64_t sub_1D584647C(_QWORD *a1)
{
  return UserEventHistoryAggregateStoreData.encode(to:)(a1);
}

__n128 __swift_memcpy90_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 74) = *(_OWORD *)(a2 + 74);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for UserEventHistoryAggregateStoreData(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 90))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for UserEventHistoryAggregateStoreData(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 88) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 90) = v3;
  return result;
}

ValueMetadata *type metadata accessor for UserEventHistoryAggregateStoreData()
{
  return &type metadata for UserEventHistoryAggregateStoreData;
}

uint64_t storeEnumTagSinglePayload for UserEventHistoryAggregateStoreData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D5846574 + 4 * byte_1D5AB7D99[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D58465A8 + 4 * byte_1D5AB7D94[v4]))();
}

uint64_t sub_1D58465A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58465B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58465B8);
  return result;
}

uint64_t sub_1D58465C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58465CCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D58465D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58465D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserEventHistoryAggregateStoreData.CodingKeys()
{
  return &type metadata for UserEventHistoryAggregateStoreData.CodingKeys;
}

unint64_t sub_1D58465F8()
{
  unint64_t result;

  result = qword_1EFF49648;
  if (!qword_1EFF49648)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB7F00, &type metadata for UserEventHistoryAggregateStoreData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49648);
  }
  return result;
}

unint64_t sub_1D5846640()
{
  unint64_t result;

  result = qword_1ED9CE4E0;
  if (!qword_1ED9CE4E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB7E70, &type metadata for UserEventHistoryAggregateStoreData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CE4E0);
  }
  return result;
}

unint64_t sub_1D5846688()
{
  unint64_t result;

  result = qword_1ED9CEE40;
  if (!qword_1ED9CEE40)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB7E98, &type metadata for UserEventHistoryAggregateStoreData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEE40);
  }
  return result;
}

uint64_t sub_1D58466CC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AED8A0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001D5AED8C0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D5AED8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461676572676761 && a2 == 0xEF73746E756F4365)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t AdState.init(bannerState:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v7;
  uint64_t v8;

  v4 = sub_1D5AAE3B8();
  v5 = *(_QWORD *)(v4 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(a1, v4);
  if ((_DWORD)result == *MEMORY[0x1E0D527B8])
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 96))(a1, v4);
    result = __swift_destroy_boxed_opaque_existential_1(a1);
    v7 = 3;
  }
  else
  {
    if ((_DWORD)result != *MEMORY[0x1E0D52780])
    {
      if ((_DWORD)result != *MEMORY[0x1E0D527A8])
      {
        if ((_DWORD)result == *MEMORY[0x1E0D527B0])
        {
          v7 = 1;
          goto LABEL_10;
        }
        result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
      }
      v7 = 0;
      goto LABEL_10;
    }
    (*(void (**)(uint64_t, uint64_t))(v5 + 96))(a1, v4);
    v8 = sub_1D5AAE3AC();
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
    v7 = 2;
  }
LABEL_10:
  *a2 = v7;
  return result;
}

BOOL BannerAdState.instrumentationAllowed.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v11;

  v1 = sub_1D5AAE3B8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  v5 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, v1);
  v6 = v5;
  v7 = *MEMORY[0x1E0D527B8];
  if (v5 == *MEMORY[0x1E0D527B8])
  {
    (*(void (**)(char *, uint64_t))(v2 + 96))(v4, v1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  else if (v5 == *MEMORY[0x1E0D52780])
  {
    (*(void (**)(char *, uint64_t))(v2 + 96))(v4, v1);
    v8 = sub_1D5AAE3AC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v4, v8);
  }
  else if (v5 != *MEMORY[0x1E0D527A8] && v5 != *MEMORY[0x1E0D527B0])
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v6 == v7;
}

NewsAnalytics::VideoAdLoadState_optional __swiftcall VideoAdLoadState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::VideoAdLoadState_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t VideoAdLoadState.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5846B60 + 4 * byte_1D5AB7F80[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5846B60()
{
  return 0x6572676F72506E69;
}

uint64_t sub_1D5846B7C()
{
  return 0x506F547964616572;
}

unint64_t sub_1D5846B9C()
{
  return 0xD000000000000012;
}

uint64_t sub_1D5846BB8()
{
  return 0x54676E6964616F6CLL;
}

uint64_t sub_1D5846BDC()
{
  return 0x64656C696166;
}

void sub_1D5846BF0(char *a1)
{
  sub_1D5A3ABD0(*a1);
}

unint64_t sub_1D5846C00()
{
  unint64_t result;

  result = qword_1EFF49650;
  if (!qword_1EFF49650)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for VideoAdLoadState, &type metadata for VideoAdLoadState);
    atomic_store(result, (unint64_t *)&qword_1EFF49650);
  }
  return result;
}

void sub_1D5846C44()
{
  char *v0;

  sub_1D5A80750(*v0);
}

void sub_1D5846C4C(uint64_t a1)
{
  char *v1;

  sub_1D5AA8644(a1, *v1);
}

void sub_1D5846C54(uint64_t a1)
{
  char *v1;

  sub_1D5AA931C(a1, *v1);
}

NewsAnalytics::VideoAdLoadState_optional sub_1D5846C5C(Swift::String *a1)
{
  return VideoAdLoadState.init(rawValue:)(*a1);
}

uint64_t sub_1D5846C68()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D5846C98 + 4 * byte_1D5AB7F86[*v0]))();
}

void sub_1D5846C98(_QWORD *a1@<X8>)
{
  *a1 = 0x6572676F72506E69;
  a1[1] = 0xEA00000000007373;
}

void sub_1D5846CB8(_QWORD *a1@<X8>)
{
  *a1 = 0x506F547964616572;
  a1[1] = 0xEB0000000079616CLL;
}

void sub_1D5846CDC(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x80000001D5AEAD40;
}

void sub_1D5846CFC(char *a1@<X8>)
{
  strcpy(a1, "loadingTimeout");
  a1[15] = -18;
}

void sub_1D5846D24(_QWORD *a1@<X8>)
{
  *a1 = 0x64656C696166;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1D5846D3C()
{
  sub_1D5846EB0();
  return sub_1D5AAE928();
}

uint64_t sub_1D5846D98()
{
  sub_1D5846EB0();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for VideoAdLoadState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D5846E30 + 4 * byte_1D5AB7F91[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D5846E64 + 4 * byte_1D5AB7F8C[v4]))();
}

uint64_t sub_1D5846E64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5846E6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5846E74);
  return result;
}

uint64_t sub_1D5846E80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5846E88);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D5846E8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5846E94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoAdLoadState()
{
  return &type metadata for VideoAdLoadState;
}

unint64_t sub_1D5846EB0()
{
  unint64_t result;

  result = qword_1EFF49658;
  if (!qword_1EFF49658)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for VideoAdLoadState, &type metadata for VideoAdLoadState);
    atomic_store(result, (unint64_t *)&qword_1EFF49658);
  }
  return result;
}

void ArticleTextSizeData.textSizeChangeType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *ArticleTextSizeData.textSizeChangeType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*ArticleTextSizeData.textSizeChangeType.modify())()
{
  return nullsub_1;
}

void ArticleTextSizeData.endTextSize.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *ArticleTextSizeData.endTextSize.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*ArticleTextSizeData.endTextSize.modify())()
{
  return nullsub_1;
}

NewsAnalytics::ArticleTextSizeData __swiftcall ArticleTextSizeData.init(textSizeChangeType:endTextSize:)(NewsAnalytics::TextSizeChangeType textSizeChangeType, NewsAnalytics::TextSize_optional endTextSize)
{
  _BYTE *v2;
  char v3;
  NewsAnalytics::ArticleTextSizeData result;

  v3 = *(_BYTE *)endTextSize.value;
  *v2 = *(_BYTE *)textSizeChangeType;
  v2[1] = v3;
  result.textSizeChangeType = textSizeChangeType;
  return result;
}

uint64_t sub_1D5846F58()
{
  _BYTE *v0;

  if (*v0)
    return 0x5374786554646E65;
  else
    return 0xD000000000000012;
}

uint64_t sub_1D5846FA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D584778C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5846FC4()
{
  sub_1D5847168();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5846FEC()
{
  sub_1D5847168();
  return sub_1D5AAEEE0();
}

uint64_t ArticleTextSizeData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  int v12;
  char v13;
  char v14;
  char v15;
  char v16;

  sub_1D5847374(0, &qword_1ED9CEFF8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *v1;
  v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5847168();
  sub_1D5AAEEC8();
  v16 = v9;
  v15 = 0;
  sub_1D58471AC();
  sub_1D5AAED6C();
  if (!v2)
  {
    v14 = v12;
    v13 = 1;
    sub_1D57A6510();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D5847168()
{
  unint64_t result;

  result = qword_1ED9CEC40;
  if (!qword_1ED9CEC40)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB8248, &type metadata for ArticleTextSizeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEC40);
  }
  return result;
}

unint64_t sub_1D58471AC()
{
  unint64_t result;

  result = qword_1ED9CEC30;
  if (!qword_1ED9CEC30)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TextSizeChangeType, &type metadata for TextSizeChangeType);
    atomic_store(result, (unint64_t *)&qword_1ED9CEC30);
  }
  return result;
}

uint64_t ArticleTextSizeData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;

  sub_1D5847374(0, &qword_1ED9CEF88, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5847168();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v16 = 0;
    sub_1D58473D0();
    sub_1D5AAECD0();
    v10 = v17;
    v14 = 1;
    sub_1D5847414();
    sub_1D5AAEC7C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5847374(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5847168();
    v7 = a3(a1, &type metadata for ArticleTextSizeData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D58473D0()
{
  unint64_t result;

  result = qword_1ED9CEC38;
  if (!qword_1ED9CEC38)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TextSizeChangeType, &type metadata for TextSizeChangeType);
    atomic_store(result, (unint64_t *)&qword_1ED9CEC38);
  }
  return result;
}

unint64_t sub_1D5847414()
{
  unint64_t result;

  result = qword_1ED9CEED8;
  if (!qword_1ED9CEED8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TextSize, &type metadata for TextSize);
    atomic_store(result, (unint64_t *)&qword_1ED9CEED8);
  }
  return result;
}

uint64_t sub_1D5847460@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ArticleTextSizeData.init(from:)(a1, a2);
}

uint64_t sub_1D5847474(_QWORD *a1)
{
  return ArticleTextSizeData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for PaywallData(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 65282 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65282 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65282;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65282;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65282;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleTextSizeData(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65282 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65282 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5847568 + 4 * byte_1D5AB80C5[v4]))();
  *a1 = a2 - 254;
  return ((uint64_t (*)(void))((char *)sub_1D584759C + 4 * byte_1D5AB80C0[v4]))();
}

uint64_t sub_1D584759C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1D58475A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1D58475ACLL);
  return result;
}

uint64_t sub_1D58475B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1D58475C0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D58475C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1D58475CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleTextSizeData()
{
  return &type metadata for ArticleTextSizeData;
}

uint64_t storeEnumTagSinglePayload for ArticleTextSizeData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5847634 + 4 * byte_1D5AB80CF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D5847668 + 4 * byte_1D5AB80CA[v4]))();
}

uint64_t sub_1D5847668(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5847670(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5847678);
  return result;
}

uint64_t sub_1D5847684(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D584768CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5847690(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5847698(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleTextSizeData.CodingKeys()
{
  return &type metadata for ArticleTextSizeData.CodingKeys;
}

unint64_t sub_1D58476B8()
{
  unint64_t result;

  result = qword_1EFF49660;
  if (!qword_1EFF49660)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB8220, &type metadata for ArticleTextSizeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49660);
  }
  return result;
}

unint64_t sub_1D5847700()
{
  unint64_t result;

  result = qword_1ED9CE490;
  if (!qword_1ED9CE490)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB8190, &type metadata for ArticleTextSizeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CE490);
  }
  return result;
}

unint64_t sub_1D5847748()
{
  unint64_t result;

  result = qword_1ED9CEC48;
  if (!qword_1ED9CEC48)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB81B8, &type metadata for ArticleTextSizeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEC48);
  }
  return result;
}

uint64_t sub_1D584778C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AED900 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5374786554646E65 && a2 == 0xEB00000000657A69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

NewsAnalytics::OriginationType_optional __swiftcall OriginationType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsAnalytics::OriginationType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t OriginationType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 1937204590;
  else
    return 0x697261666173;
}

uint64_t sub_1D5847920(char *a1, char *a2)
{
  return sub_1D5A3BA34(*a1, *a2);
}

unint64_t sub_1D5847930()
{
  unint64_t result;

  result = qword_1EFF49668;
  if (!qword_1EFF49668)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for OriginationType, &type metadata for OriginationType);
    atomic_store(result, (unint64_t *)&qword_1EFF49668);
  }
  return result;
}

uint64_t sub_1D5847974()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D58479E8()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5847A38()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::OriginationType_optional sub_1D5847AA8(Swift::String *a1)
{
  return OriginationType.init(rawValue:)(*a1);
}

void sub_1D5847AB4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1937204590;
  if (!*v1)
    v2 = 0x697261666173;
  v3 = 0xE600000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D5847AE8()
{
  sub_1D5847C5C();
  return sub_1D5AAE928();
}

uint64_t sub_1D5847B44()
{
  sub_1D5847C5C();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for OriginationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5847BDC + 4 * byte_1D5AB829D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D5847C10 + 4 * byte_1D5AB8298[v4]))();
}

uint64_t sub_1D5847C10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5847C18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5847C20);
  return result;
}

uint64_t sub_1D5847C2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5847C34);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5847C38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5847C40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OriginationType()
{
  return &type metadata for OriginationType;
}

unint64_t sub_1D5847C5C()
{
  unint64_t result;

  result = qword_1EFF49670;
  if (!qword_1EFF49670)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for OriginationType, &type metadata for OriginationType);
    atomic_store(result, (unint64_t *)&qword_1EFF49670);
  }
  return result;
}

NewsAnalytics::NotificationStatusData __swiftcall NotificationStatusData.init(status:)(NewsAnalytics::NotificationStatusData status)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)status.status;
  return status;
}

void NotificationStatusData.status.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *NotificationStatusData.status.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*NotificationStatusData.status.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5847CD4()
{
  return 0x737574617473;
}

uint64_t sub_1D5847CE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x737574617473 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5847D74()
{
  sub_1D5847EC8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5847D9C()
{
  sub_1D5847EC8();
  return sub_1D5AAEEE0();
}

uint64_t NotificationStatusData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D5848088(0, &qword_1EFF49678, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5847EC8();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D5847F0C();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5847EC8()
{
  unint64_t result;

  result = qword_1EFF49680;
  if (!qword_1EFF49680)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB854C, &type metadata for NotificationStatusData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49680);
  }
  return result;
}

unint64_t sub_1D5847F0C()
{
  unint64_t result;

  result = qword_1EFF49688;
  if (!qword_1EFF49688)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationStatus, &type metadata for NotificationStatus);
    atomic_store(result, (unint64_t *)&qword_1EFF49688);
  }
  return result;
}

uint64_t NotificationStatusData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D5848088(0, &qword_1EFF49690, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5847EC8();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D58480E4();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5848088(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5847EC8();
    v7 = a3(a1, &type metadata for NotificationStatusData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D58480E4()
{
  unint64_t result;

  result = qword_1EFF49698;
  if (!qword_1EFF49698)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationStatus, &type metadata for NotificationStatus);
    atomic_store(result, (unint64_t *)&qword_1EFF49698);
  }
  return result;
}

unint64_t sub_1D584812C()
{
  unint64_t result;

  result = qword_1EFF496A0;
  if (!qword_1EFF496A0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationStatusData, &type metadata for NotificationStatusData);
    atomic_store(result, (unint64_t *)&qword_1EFF496A0);
  }
  return result;
}

unint64_t sub_1D5848174()
{
  unint64_t result;

  result = qword_1EFF496A8;
  if (!qword_1EFF496A8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationStatusData, &type metadata for NotificationStatusData);
    atomic_store(result, (unint64_t *)&qword_1EFF496A8);
  }
  return result;
}

uint64_t sub_1D58481B8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return NotificationStatusData.init(from:)(a1, a2);
}

uint64_t sub_1D58481CC(_QWORD *a1)
{
  return NotificationStatusData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for NotificationStatusData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D584822C + 4 * byte_1D5AB83C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5848260 + 4 * byte_1D5AB83C0[v4]))();
}

uint64_t sub_1D5848260(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5848268(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5848270);
  return result;
}

uint64_t sub_1D584827C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5848284);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5848288(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5848290(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationStatusData()
{
  return &type metadata for NotificationStatusData;
}

uint64_t storeEnumTagSinglePayload for NotificationStatusData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D58482EC + 4 * byte_1D5AB83CA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D584830C + 4 * byte_1D5AB83CF[v4]))();
}

_BYTE *sub_1D58482EC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D584830C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5848314(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D584831C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5848324(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D584832C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NotificationStatusData.CodingKeys()
{
  return &type metadata for NotificationStatusData.CodingKeys;
}

unint64_t sub_1D584834C()
{
  unint64_t result;

  result = qword_1EFF496B0;
  if (!qword_1EFF496B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB8524, &type metadata for NotificationStatusData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF496B0);
  }
  return result;
}

unint64_t sub_1D5848394()
{
  unint64_t result;

  result = qword_1EFF496B8;
  if (!qword_1EFF496B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB8494, &type metadata for NotificationStatusData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF496B8);
  }
  return result;
}

unint64_t sub_1D58483DC()
{
  unint64_t result;

  result = qword_1EFF496C0;
  if (!qword_1EFF496C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB84BC, &type metadata for NotificationStatusData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF496C0);
  }
  return result;
}

void OrientationData.deviceOrientation.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *OrientationData.deviceOrientation.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*OrientationData.deviceOrientation.modify())()
{
  return nullsub_1;
}

void OrientationData.interfaceOrientation.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *OrientationData.interfaceOrientation.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*OrientationData.interfaceOrientation.modify())()
{
  return nullsub_1;
}

NewsAnalytics::OrientationData __swiftcall OrientationData.init(deviceOrientation:interfaceOrientation:)(NewsAnalytics::DeviceOrientation deviceOrientation, NewsAnalytics::InterfaceOrientation interfaceOrientation)
{
  _BYTE *v2;
  char v3;
  NewsAnalytics::OrientationData result;

  v3 = *(_BYTE *)interfaceOrientation;
  *v2 = *(_BYTE *)deviceOrientation;
  v2[1] = v3;
  result.deviceOrientation = deviceOrientation;
  return result;
}

uint64_t sub_1D5848484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58488C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58484A8()
{
  sub_1D57AA21C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58484D0()
{
  sub_1D57AA21C();
  return sub_1D5AAEEE0();
}

uint64_t OrientationData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;

  sub_1D57AA138(0, &qword_1ED9CC7F0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AA21C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v16 = 0;
    sub_1D584867C();
    sub_1D5AAECD0();
    v10 = v17;
    v14 = 1;
    sub_1D58486C0();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1D584867C()
{
  unint64_t result;

  result = qword_1ED9C93F8;
  if (!qword_1ED9C93F8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DeviceOrientation, &type metadata for DeviceOrientation);
    atomic_store(result, (unint64_t *)&qword_1ED9C93F8);
  }
  return result;
}

unint64_t sub_1D58486C0()
{
  unint64_t result;

  result = qword_1ED9CA4B0;
  if (!qword_1ED9CA4B0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for InterfaceOrientation, &type metadata for InterfaceOrientation);
    atomic_store(result, (unint64_t *)&qword_1ED9CA4B0);
  }
  return result;
}

uint64_t sub_1D5848704@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return OrientationData.init(from:)(a1, a2);
}

uint64_t getEnumTagSinglePayload for OrientationData(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 65284 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65284 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65284;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65284;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65284;
  }
LABEL_17:
  v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for OrientationData(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65284 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65284 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D58487F8 + 4 * byte_1D5AB85A1[v4]))();
  *a1 = a2 - 252;
  return ((uint64_t (*)(void))((char *)sub_1D584882C + 4 * byte_1D5AB859C[v4]))();
}

uint64_t sub_1D584882C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1D5848834(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1D584883CLL);
  return result;
}

uint64_t sub_1D5848848(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1D5848850);
  *(_BYTE *)(result + 1) = a2 + 4;
  return result;
}

uint64_t sub_1D5848854(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1D584885C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OrientationData.CodingKeys()
{
  return &type metadata for OrientationData.CodingKeys;
}

unint64_t sub_1D584887C()
{
  unint64_t result;

  result = qword_1EFF496C8;
  if (!qword_1EFF496C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB86F8, &type metadata for OrientationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF496C8);
  }
  return result;
}

uint64_t sub_1D58488C0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AED920 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AED940)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void BannerAdPlacementData.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *BannerAdPlacementData.type.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*BannerAdPlacementData.type.modify())()
{
  return nullsub_1;
}

NewsAnalytics::BannerAdPlacementData __swiftcall BannerAdPlacementData.init(type:)(NewsAnalytics::BannerAdPlacementData type)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)type.type;
  return type;
}

uint64_t sub_1D58489DC()
{
  sub_1D5848B30();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5848A04()
{
  sub_1D5848B30();
  return sub_1D5AAEEE0();
}

uint64_t BannerAdPlacementData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D5848CF0(0, &qword_1EFF496D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5848B30();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D5848B74();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5848B30()
{
  unint64_t result;

  result = qword_1EFF496D8;
  if (!qword_1EFF496D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB88FC, &type metadata for BannerAdPlacementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF496D8);
  }
  return result;
}

unint64_t sub_1D5848B74()
{
  unint64_t result;

  result = qword_1EFF496E0;
  if (!qword_1EFF496E0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for BannerAdPlacementType, &type metadata for BannerAdPlacementType);
    atomic_store(result, (unint64_t *)&qword_1EFF496E0);
  }
  return result;
}

uint64_t BannerAdPlacementData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D5848CF0(0, &qword_1EFF496E8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5848B30();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5848D4C();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5848CF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5848B30();
    v7 = a3(a1, &type metadata for BannerAdPlacementData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5848D4C()
{
  unint64_t result;

  result = qword_1EFF496F0;
  if (!qword_1EFF496F0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for BannerAdPlacementType, &type metadata for BannerAdPlacementType);
    atomic_store(result, (unint64_t *)&qword_1EFF496F0);
  }
  return result;
}

unint64_t sub_1D5848D94()
{
  unint64_t result;

  result = qword_1EFF496F8;
  if (!qword_1EFF496F8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for BannerAdPlacementData, &type metadata for BannerAdPlacementData);
    atomic_store(result, (unint64_t *)&qword_1EFF496F8);
  }
  return result;
}

unint64_t sub_1D5848DDC()
{
  unint64_t result;

  result = qword_1EFF49700;
  if (!qword_1EFF49700)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for BannerAdPlacementData, &type metadata for BannerAdPlacementData);
    atomic_store(result, (unint64_t *)&qword_1EFF49700);
  }
  return result;
}

uint64_t sub_1D5848E20@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return BannerAdPlacementData.init(from:)(a1, a2);
}

uint64_t sub_1D5848E34(_QWORD *a1)
{
  return BannerAdPlacementData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for BannerAdPlacementData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5848E94 + 4 * byte_1D5AB8775[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5848EC8 + 4 * byte_1D5AB8770[v4]))();
}

uint64_t sub_1D5848EC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5848ED0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5848ED8);
  return result;
}

uint64_t sub_1D5848EE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5848EECLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5848EF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5848EF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BannerAdPlacementData()
{
  return &type metadata for BannerAdPlacementData;
}

uint64_t storeEnumTagSinglePayload for BannerAdPlacementData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5848F54 + 4 * byte_1D5AB877A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5848F74 + 4 * byte_1D5AB877F[v4]))();
}

_BYTE *sub_1D5848F54(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5848F74(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5848F7C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5848F84(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5848F8C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5848F94(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BannerAdPlacementData.CodingKeys()
{
  return &type metadata for BannerAdPlacementData.CodingKeys;
}

unint64_t sub_1D5848FB4()
{
  unint64_t result;

  result = qword_1EFF49708;
  if (!qword_1EFF49708)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB88D4, &type metadata for BannerAdPlacementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49708);
  }
  return result;
}

unint64_t sub_1D5848FFC()
{
  unint64_t result;

  result = qword_1EFF49710;
  if (!qword_1EFF49710)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB8844, &type metadata for BannerAdPlacementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49710);
  }
  return result;
}

unint64_t sub_1D5849044()
{
  unint64_t result;

  result = qword_1EFF49718;
  if (!qword_1EFF49718)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB886C, &type metadata for BannerAdPlacementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49718);
  }
  return result;
}

NewsAnalytics::IssueViewContext_optional __swiftcall IssueViewContext.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::IssueViewContext_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t IssueViewContext.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6572676761736964;
  if (*v0 != 1)
    v1 = 0x6575737369;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D5849144(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A3B2B0(*a1, *a2);
}

unint64_t sub_1D5849154()
{
  unint64_t result;

  result = qword_1EFF49720;
  if (!qword_1EFF49720)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for IssueViewContext, &type metadata for IssueViewContext);
    atomic_store(result, (unint64_t *)&qword_1EFF49720);
  }
  return result;
}

uint64_t sub_1D5849198()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5849240()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D58492C4()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::IssueViewContext_optional sub_1D5849368(Swift::String *a1)
{
  return IssueViewContext.init(rawValue:)(*a1);
}

void sub_1D5849374(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xED00006465746167;
  v5 = 0x6572676761736964;
  if (v2 != 1)
  {
    v5 = 0x6575737369;
    v4 = 0xE500000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D58493DC()
{
  sub_1D5849540();
  return sub_1D5AAE928();
}

uint64_t sub_1D5849438()
{
  sub_1D5849540();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for IssueViewContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D58494D0 + 4 * byte_1D5AB8955[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5849504 + 4 * byte_1D5AB8950[v4]))();
}

uint64_t sub_1D5849504(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D584950C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5849514);
  return result;
}

uint64_t sub_1D5849520(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5849528);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D584952C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5849534(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1D5849540()
{
  unint64_t result;

  result = qword_1ED9CEC08;
  if (!qword_1ED9CEC08)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for IssueViewContext, &type metadata for IssueViewContext);
    atomic_store(result, (unint64_t *)&qword_1ED9CEC08);
  }
  return result;
}

uint64_t sub_1D5849584(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF49728, MEMORY[0x1E0CF8078]);
}

uint64_t static NotificationSubscribeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46FC8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF49728, a1);
}

uint64_t sub_1D58495C4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF49740, MEMORY[0x1E0CF8380]);
}

uint64_t static NotificationSubscribeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46FD0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF49740, a1);
}

uint64_t NotificationSubscribeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t NotificationSubscribeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*NotificationSubscribeEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NotificationSubscribeEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationSubscribeEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for NotificationSubscribeEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CB708);
}

uint64_t NotificationSubscribeEvent.tagData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationSubscribeEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NotificationSubscribeEvent.tagData.modify())()
{
  type metadata accessor for NotificationSubscribeEvent(0);
  return nullsub_1;
}

uint64_t NotificationSubscribeEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationSubscribeEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NotificationSubscribeEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationSubscribeEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NotificationSubscribeEvent.channelData.modify())()
{
  type metadata accessor for NotificationSubscribeEvent(0);
  return nullsub_1;
}

uint64_t NotificationSubscribeEvent.campaignData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationSubscribeEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NotificationSubscribeEvent.campaignData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationSubscribeEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NotificationSubscribeEvent.campaignData.modify())()
{
  type metadata accessor for NotificationSubscribeEvent(0);
  return nullsub_1;
}

uint64_t NotificationSubscribeEvent.notificationSubscribedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationSubscribeEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D58499BC()
{
  unint64_t result;

  result = qword_1ED9CB7B8;
  if (!qword_1ED9CB7B8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationSubscribedData, &type metadata for NotificationSubscribedData);
    atomic_store(result, (unint64_t *)&qword_1ED9CB7B8);
  }
  return result;
}

unint64_t sub_1D5849A00()
{
  unint64_t result;

  result = qword_1ED9CB7B0;
  if (!qword_1ED9CB7B0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationSubscribedData, &type metadata for NotificationSubscribedData);
    atomic_store(result, (unint64_t *)&qword_1ED9CB7B0);
  }
  return result;
}

uint64_t NotificationSubscribeEvent.notificationSubscribedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationSubscribeEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NotificationSubscribeEvent.notificationSubscribedData.modify())()
{
  type metadata accessor for NotificationSubscribeEvent(0);
  return nullsub_1;
}

uint64_t NotificationSubscribeEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationSubscribeEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NotificationSubscribeEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationSubscribeEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NotificationSubscribeEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for NotificationSubscribeEvent(0);
  return nullsub_1;
}

uint64_t NotificationSubscribeEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationSubscribeEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NotificationSubscribeEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationSubscribeEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NotificationSubscribeEvent.userChannelContextData.modify())()
{
  type metadata accessor for NotificationSubscribeEvent(0);
  return nullsub_1;
}

uint64_t NotificationSubscribeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for NotificationSubscribeEvent(0);
  v5 = a1 + v4[5];
  v6 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v6, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v6, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v6, v17);
}

uint64_t NotificationSubscribeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t NotificationSubscribeEvent.Model.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for NotificationSubscribeEvent.Model(0) + 20));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for NotificationSubscribeEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CB660);
}

uint64_t NotificationSubscribeEvent.Model.channelData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NotificationSubscribeEvent.Model(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57DD4CC(v4, v5);
}

uint64_t NotificationSubscribeEvent.Model.campaignData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NotificationSubscribeEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1D5828094(v4, v5);
}

uint64_t NotificationSubscribeEvent.Model.notificationSubscribedData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NotificationSubscribeEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t NotificationSubscribeEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for NotificationSubscribeEvent.Model(0) + 36));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t NotificationSubscribeEvent.Model.userChannelContextData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NotificationSubscribeEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 40));
  return result;
}

__n128 NotificationSubscribeEvent.Model.init(eventData:tagData:channelData:campaignData:notificationSubscribedData:userBundleSubscriptionContextData:userChannelContextData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, __int16 *a5@<X4>, char *a6@<X5>, int *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 result;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __n128 v27;
  __int128 v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  int v35;

  v10 = *a2;
  v11 = a2[1];
  v25 = a3[1];
  v26 = *a3;
  v12 = *((_QWORD *)a3 + 4);
  v27 = (__n128)a4[1];
  v28 = *a4;
  v13 = *((_QWORD *)a4 + 4);
  v14 = *((_QWORD *)a4 + 5);
  v15 = *a5;
  v16 = *a6;
  v17 = *((_QWORD *)a6 + 1);
  v34 = *((_QWORD *)a6 + 2);
  v32 = a6[25];
  v33 = a6[24];
  v30 = *((_QWORD *)a6 + 5);
  v31 = *((_QWORD *)a6 + 4);
  v29 = a6[48];
  v35 = *a7;
  v18 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a8, a1, v18);
  v19 = (int *)type metadata accessor for NotificationSubscribeEvent.Model(0);
  v20 = (_QWORD *)(a8 + v19[5]);
  *v20 = v10;
  v20[1] = v11;
  v21 = a8 + v19[6];
  *(_OWORD *)v21 = v26;
  *(_OWORD *)(v21 + 16) = v25;
  *(_QWORD *)(v21 + 32) = v12;
  v22 = a8 + v19[7];
  result = v27;
  *(_OWORD *)v22 = v28;
  *(__n128 *)(v22 + 16) = v27;
  *(_QWORD *)(v22 + 32) = v13;
  *(_QWORD *)(v22 + 40) = v14;
  *(_WORD *)(a8 + v19[8]) = v15;
  v24 = a8 + v19[9];
  *(_BYTE *)v24 = v16;
  *(_QWORD *)(v24 + 8) = v17;
  *(_QWORD *)(v24 + 16) = v34;
  *(_BYTE *)(v24 + 24) = v33;
  *(_BYTE *)(v24 + 25) = v32;
  *(_QWORD *)(v24 + 32) = v31;
  *(_QWORD *)(v24 + 40) = v30;
  *(_BYTE *)(v24 + 48) = v29;
  *(_DWORD *)(a8 + v19[10]) = v35;
  return result;
}

uint64_t sub_1D584A1D4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D584A20C + 4 * byte_1D5AB8A70[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D584A20C()
{
  return 0x61746144676174;
}

uint64_t sub_1D584A224()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1D584A244()
{
  return 0x6E676961706D6163;
}

unint64_t sub_1D584A264()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1D584A29C()
{
  return 0xD000000000000016;
}

uint64_t sub_1D584A2B8()
{
  unsigned __int8 *v0;

  return sub_1D584A1D4(*v0);
}

uint64_t sub_1D584A2C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D584CDE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D584A2E4()
{
  sub_1D584A638();
  return sub_1D5AAEED4();
}

uint64_t sub_1D584A30C()
{
  sub_1D584A638();
  return sub_1D5AAEEE0();
}

uint64_t NotificationSubscribeEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  _BYTE v21[32];
  __int128 v22;
  char v23;
  char v24;

  v3 = v1;
  sub_1D584AB98(0, &qword_1EFF49758, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v21[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D584A638();
  sub_1D5AAEEC8();
  v21[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for NotificationSubscribeEvent.Model(0);
    *(_OWORD *)v21 = *(_OWORD *)(v3 + v10[5]);
    v24 = 1;
    sub_1D57C6738();
    sub_1D5AAED18();
    v11 = v3 + v10[6];
    v12 = *(_QWORD *)(v11 + 32);
    v13 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)v21 = *(_OWORD *)v11;
    *(_OWORD *)&v21[16] = v13;
    *(_QWORD *)&v22 = v12;
    v24 = 2;
    sub_1D57CB8B8();
    sub_1D5AAED18();
    v14 = (_OWORD *)(v3 + v10[7]);
    v15 = v14[1];
    *(_OWORD *)v21 = *v14;
    *(_OWORD *)&v21[16] = v15;
    v22 = v14[2];
    v24 = 3;
    sub_1D57CB460();
    sub_1D5AAED18();
    *(_WORD *)v21 = *(_WORD *)(v3 + v10[8]);
    v24 = 4;
    sub_1D5849A00();
    sub_1D5AAED6C();
    v16 = v3 + v10[9];
    v17 = *(_BYTE *)(v16 + 24);
    v18 = *(_BYTE *)(v16 + 25);
    v19 = *(_BYTE *)(v16 + 48);
    v21[0] = *(_BYTE *)v16;
    *(_OWORD *)&v21[8] = *(_OWORD *)(v16 + 8);
    v21[24] = v17;
    v21[25] = v18;
    v22 = *(_OWORD *)(v16 + 32);
    v23 = v19;
    v24 = 5;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    *(_DWORD *)v21 = *(_DWORD *)(v3 + v10[10]);
    v24 = 6;
    sub_1D57C7B24();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D584A638()
{
  unint64_t result;

  result = qword_1EFF49760;
  if (!qword_1EFF49760)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB8CFC, &type metadata for NotificationSubscribeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49760);
  }
  return result;
}

uint64_t NotificationSubscribeEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  __int128 v20;
  char v21;
  char v22;
  char v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  _QWORD *v31;
  _BYTE v32[32];
  __int128 v33;
  char v34;
  char v35;

  v26 = a2;
  v3 = sub_1D5AADF98();
  v27 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D584AB98(0, &qword_1EFF49768, MEMORY[0x1E0DED048]);
  v28 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - v7;
  v9 = (int *)type metadata accessor for NotificationSubscribeEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D584A638();
  v29 = v8;
  v12 = (uint64_t)v31;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v14 = v27;
  v31 = a1;
  v32[0] = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v15 = v28;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v30, v3);
  v35 = 1;
  sub_1D57C66F4();
  sub_1D5AAEC7C();
  *(_OWORD *)&v11[v9[5]] = *(_OWORD *)v32;
  v35 = 2;
  sub_1D57CB874();
  sub_1D5AAEC7C();
  v16 = v33;
  v17 = &v11[v9[6]];
  v18 = *(_OWORD *)&v32[16];
  *(_OWORD *)v17 = *(_OWORD *)v32;
  *((_OWORD *)v17 + 1) = v18;
  *((_QWORD *)v17 + 4) = v16;
  v35 = 3;
  sub_1D57CB41C();
  sub_1D5AAEC7C();
  v19 = &v11[v9[7]];
  v20 = *(_OWORD *)&v32[16];
  *(_OWORD *)v19 = *(_OWORD *)v32;
  *((_OWORD *)v19 + 1) = v20;
  *((_OWORD *)v19 + 2) = v33;
  v35 = 4;
  sub_1D58499BC();
  sub_1D5AAECD0();
  *(_WORD *)&v11[v9[8]] = *(_WORD *)v32;
  v35 = 5;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v21 = v32[24];
  v22 = v32[25];
  v23 = v34;
  v24 = &v11[v9[9]];
  *v24 = v32[0];
  *(_OWORD *)(v24 + 8) = *(_OWORD *)&v32[8];
  v24[24] = v21;
  v24[25] = v22;
  *((_OWORD *)v24 + 2) = v33;
  v24[48] = v23;
  v35 = 6;
  sub_1D57C7AE0();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v29, v15);
  *(_DWORD *)&v11[v9[10]] = *(_DWORD *)v32;
  sub_1D584AC30((uint64_t)v11, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return sub_1D584AC74((uint64_t)v11);
}

void sub_1D584AB98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D584A638();
    v7 = a3(a1, &type metadata for NotificationSubscribeEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D584ABF4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D584AC30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NotificationSubscribeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D584AC74(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NotificationSubscribeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D584ACB0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NotificationSubscribeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D584ACC4(_QWORD *a1)
{
  return NotificationSubscribeEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D584ACD8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46FC8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF49728, a1);
}

uint64_t sub_1D584ACFC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46FD0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF49740, a1);
}

uint64_t sub_1D584AD20@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  v7 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  v9 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v7, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v7, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v7, v18);
}

uint64_t *initializeBufferWithCopyOfBuffer for NotificationSubscribeEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return a1;
}

uint64_t destroy for NotificationSubscribeEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
}

uint64_t initializeWithCopy for NotificationSubscribeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

uint64_t assignWithCopy for NotificationSubscribeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t initializeWithTake for NotificationSubscribeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for NotificationSubscribeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationSubscribeEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D584BBE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
              v8 = v18;
              v12 = *(_QWORD *)(v18 - 8);
              v13 = a3[10];
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for NotificationSubscribeEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D584BDD8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
              v10 = v20;
              v14 = *(_QWORD *)(v20 - 8);
              v15 = a4[10];
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D584BFC8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
              if (v6 <= 0x3F)
                swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for NotificationSubscribeEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = *(uint64_t *)((char *)a2 + v9 + 8);
    swift_bridgeObjectRetain();
    if (v15)
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *((_QWORD *)v13 + 1) = v15;
      *((_WORD *)v13 + 8) = *((_WORD *)v14 + 8);
      v16 = *((_QWORD *)v14 + 3);
      v17 = *((_QWORD *)v14 + 4);
      *((_QWORD *)v13 + 3) = v16;
      *((_QWORD *)v13 + 4) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v19 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v19;
      *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
    }
    v20 = a3[7];
    v21 = (uint64_t *)((char *)a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    if (v23)
    {
      *v21 = *v22;
      v21[1] = v23;
      v24 = v22[3];
      v21[2] = v22[2];
      v21[3] = v24;
      v25 = v22[5];
      v21[4] = v22[4];
      v21[5] = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v26 = *((_OWORD *)v22 + 1);
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v26;
      *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
    }
    v27 = a3[9];
    *(_WORD *)((char *)a1 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    *v28 = *v29;
    v30 = *((_QWORD *)v29 + 2);
    *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
    *((_QWORD *)v28 + 2) = v30;
    *((_WORD *)v28 + 12) = *((_WORD *)v29 + 12);
    v31 = *((_QWORD *)v29 + 5);
    *((_QWORD *)v28 + 4) = *((_QWORD *)v29 + 4);
    *((_QWORD *)v28 + 5) = v31;
    v28[48] = v29[48];
    *(_DWORD *)((char *)a1 + a3[10]) = *(_DWORD *)((char *)a2 + a3[10]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for NotificationSubscribeEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 24) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + *(int *)(a2 + 28) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NotificationSubscribeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_QWORD *)(a2 + v8 + 8);
  swift_bridgeObjectRetain();
  if (v14)
  {
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *(_QWORD *)(v12 + 8) = v14;
    *(_WORD *)(v12 + 16) = *(_WORD *)(v13 + 16);
    v15 = *(_QWORD *)(v13 + 24);
    v16 = *(_QWORD *)(v13 + 32);
    *(_QWORD *)(v12 + 24) = v15;
    *(_QWORD *)(v12 + 32) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v17 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v17;
    *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  }
  v18 = a3[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = v20[1];
  if (v21)
  {
    *v19 = *v20;
    v19[1] = v21;
    v22 = v20[3];
    v19[2] = v20[2];
    v19[3] = v22;
    v23 = v20[5];
    v19[4] = v20[4];
    v19[5] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v24 = *((_OWORD *)v20 + 1);
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *((_OWORD *)v19 + 1) = v24;
    *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
  }
  v25 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_BYTE *)v26 = *(_BYTE *)v27;
  v28 = *(_QWORD *)(v27 + 16);
  *(_QWORD *)(v26 + 8) = *(_QWORD *)(v27 + 8);
  *(_QWORD *)(v26 + 16) = v28;
  *(_WORD *)(v26 + 24) = *(_WORD *)(v27 + 24);
  v29 = *(_QWORD *)(v27 + 40);
  *(_QWORD *)(v26 + 32) = *(_QWORD *)(v27 + 32);
  *(_QWORD *)(v26 + 40) = v29;
  *(_BYTE *)(v26 + 48) = *(_BYTE *)(v27 + 48);
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NotificationSubscribeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = (__int128 *)(a2 + v10);
  v13 = *(_QWORD *)(a1 + v10 + 8);
  v14 = *(_QWORD *)(a2 + v10 + 8);
  if (v13)
  {
    if (v14)
    {
      *(_QWORD *)v11 = *(_QWORD *)v12;
      *(_QWORD *)(v11 + 8) = *((_QWORD *)v12 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v11 + 16) = *((_BYTE *)v12 + 16);
      *(_BYTE *)(v11 + 17) = *((_BYTE *)v12 + 17);
      *(_QWORD *)(v11 + 24) = *((_QWORD *)v12 + 3);
      *(_QWORD *)(v11 + 32) = *((_QWORD *)v12 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E1784(v11);
      v15 = *((_QWORD *)v12 + 4);
      v16 = v12[1];
      *(_OWORD *)v11 = *v12;
      *(_OWORD *)(v11 + 16) = v16;
      *(_QWORD *)(v11 + 32) = v15;
    }
  }
  else if (v14)
  {
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *(_QWORD *)(v11 + 8) = *((_QWORD *)v12 + 1);
    *(_BYTE *)(v11 + 16) = *((_BYTE *)v12 + 16);
    *(_BYTE *)(v11 + 17) = *((_BYTE *)v12 + 17);
    *(_QWORD *)(v11 + 24) = *((_QWORD *)v12 + 3);
    *(_QWORD *)(v11 + 32) = *((_QWORD *)v12 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v17 = *v12;
    v18 = v12[1];
    *(_QWORD *)(v11 + 32) = *((_QWORD *)v12 + 4);
    *(_OWORD *)v11 = v17;
    *(_OWORD *)(v11 + 16) = v18;
  }
  v19 = a3[7];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  v22 = *(_QWORD *)(a1 + v19 + 8);
  v23 = *(_QWORD *)(a2 + v19 + 8);
  if (v22)
  {
    if (v23)
    {
      *v20 = *v21;
      v20[1] = v21[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v20[2] = v21[2];
      v20[3] = v21[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v20[4] = v21[4];
      v20[5] = v21[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D5829E98((uint64_t)v20);
      v25 = *((_OWORD *)v21 + 1);
      v24 = *((_OWORD *)v21 + 2);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v25;
      *((_OWORD *)v20 + 2) = v24;
    }
  }
  else if (v23)
  {
    *v20 = *v21;
    v20[1] = v21[1];
    v20[2] = v21[2];
    v20[3] = v21[3];
    v20[4] = v21[4];
    v20[5] = v21[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v26 = *(_OWORD *)v21;
    v27 = *((_OWORD *)v21 + 2);
    *((_OWORD *)v20 + 1) = *((_OWORD *)v21 + 1);
    *((_OWORD *)v20 + 2) = v27;
    *(_OWORD *)v20 = v26;
  }
  v28 = a3[8];
  v29 = (_BYTE *)(a1 + v28);
  v30 = (_BYTE *)(a2 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  v31 = a3[9];
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_BYTE *)v32 = *(_BYTE *)(a2 + v31);
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(a2 + v31 + 8);
  *(_QWORD *)(v32 + 16) = *(_QWORD *)(a2 + v31 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v32 + 24) = *(_BYTE *)(v33 + 24);
  *(_BYTE *)(v32 + 25) = *(_BYTE *)(v33 + 25);
  *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
  *(_QWORD *)(v32 + 40) = *(_QWORD *)(v33 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v32 + 48) = *(_BYTE *)(v33 + 48);
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t initializeWithTake for NotificationSubscribeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  v11 = a3[7];
  v12 = a3[8];
  v13 = *(_OWORD *)(a2 + v11);
  v14 = *(_OWORD *)(a2 + v11 + 16);
  v15 = *(_OWORD *)(a2 + v11 + 32);
  v16 = (_OWORD *)(a1 + v11);
  *v16 = v13;
  v16[1] = v14;
  v16[2] = v15;
  *(_WORD *)(a1 + v12) = *(_WORD *)(a2 + v12);
  v17 = a3[9];
  v18 = a3[10];
  v19 = a1 + v17;
  v20 = a2 + v17;
  v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
  *(_BYTE *)(v19 + 48) = *(_BYTE *)(v20 + 48);
  *(_DWORD *)(a1 + v18) = *(_DWORD *)(a2 + v18);
  return a1;
}

uint64_t assignWithTake for NotificationSubscribeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  if (*(_QWORD *)(a1 + v12 + 8))
  {
    v15 = *(_QWORD *)(v14 + 8);
    if (v15)
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_QWORD *)(v13 + 8) = v15;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
      *(_BYTE *)(v13 + 17) = *(_BYTE *)(v14 + 17);
      v16 = *(_QWORD *)(v14 + 32);
      *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
      *(_QWORD *)(v13 + 32) = v16;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D57E1784(v13);
  }
  v17 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v17;
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
LABEL_6:
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  if (!*(_QWORD *)(a1 + v18 + 8))
  {
LABEL_10:
    v24 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 16) = v24;
    *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
    goto LABEL_11;
  }
  v21 = *(_QWORD *)(v20 + 8);
  if (!v21)
  {
    sub_1D5829E98(v19);
    goto LABEL_10;
  }
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_QWORD *)(v19 + 8) = v21;
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v20 + 24);
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  *(_QWORD *)(v19 + 24) = v22;
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v20 + 40);
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  *(_QWORD *)(v19 + 40) = v23;
  swift_bridgeObjectRelease();
LABEL_11:
  v25 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_BYTE *)v26 = *(_BYTE *)(a2 + v25);
  v28 = *(_QWORD *)(a2 + v25 + 8);
  v29 = *(_QWORD *)(a2 + v25 + 16);
  *(_QWORD *)(v26 + 8) = v28;
  *(_QWORD *)(v26 + 16) = v29;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v26 + 24) = *(_BYTE *)(v27 + 24);
  *(_BYTE *)(v26 + 25) = *(_BYTE *)(v27 + 25);
  v30 = *(_QWORD *)(v27 + 40);
  *(_QWORD *)(v26 + 32) = *(_QWORD *)(v27 + 32);
  *(_QWORD *)(v26 + 40) = v30;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v26 + 48) = *(_BYTE *)(v27 + 48);
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationSubscribeEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D584CA88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationSubscribeEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D584CB20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_1D584CB9C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NotificationSubscribeEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D584CC8C + 4 * byte_1D5AB8A7C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D584CCC0 + 4 * byte_1D5AB8A77[v4]))();
}

uint64_t sub_1D584CCC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D584CCC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D584CCD0);
  return result;
}

uint64_t sub_1D584CCDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D584CCE4);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D584CCE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D584CCF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationSubscribeEvent.Model.CodingKeys()
{
  return &type metadata for NotificationSubscribeEvent.Model.CodingKeys;
}

unint64_t sub_1D584CD10()
{
  unint64_t result;

  result = qword_1EFF49770;
  if (!qword_1EFF49770)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB8CD4, &type metadata for NotificationSubscribeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49770);
  }
  return result;
}

unint64_t sub_1D584CD58()
{
  unint64_t result;

  result = qword_1EFF49778;
  if (!qword_1EFF49778)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB8C44, &type metadata for NotificationSubscribeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49778);
  }
  return result;
}

unint64_t sub_1D584CDA0()
{
  unint64_t result;

  result = qword_1EFF49780;
  if (!qword_1EFF49780)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB8C6C, &type metadata for NotificationSubscribeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49780);
  }
  return result;
}

uint64_t sub_1D584CDE4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61746144676174 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E676961706D6163 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AED960 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEC9F0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

NewsAnalytics::TrackVariant_optional __swiftcall TrackVariant.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::TrackVariant_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t TrackVariant.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C706D6173;
  if (*v0 != 1)
    v1 = 1819047270;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D584D198(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A3CC90(*a1, *a2);
}

unint64_t sub_1D584D1A8()
{
  unint64_t result;

  result = qword_1EFF49788;
  if (!qword_1EFF49788)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TrackVariant, &type metadata for TrackVariant);
    atomic_store(result, (unint64_t *)&qword_1EFF49788);
  }
  return result;
}

uint64_t sub_1D584D1EC()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D584D280()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D584D2F0()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::TrackVariant_optional sub_1D584D380(Swift::String *a1)
{
  return TrackVariant.init(rawValue:)(*a1);
}

void sub_1D584D38C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x656C706D6173;
  if (v2 != 1)
  {
    v5 = 1819047270;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D584D3E0()
{
  sub_1D584D554();
  return sub_1D5AAE928();
}

uint64_t sub_1D584D43C()
{
  sub_1D584D554();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for TrackVariant(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D584D4D4 + 4 * byte_1D5AB8D51[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D584D508 + 4 * byte_1D5AB8D4C[v4]))();
}

uint64_t sub_1D584D508(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D584D510(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D584D518);
  return result;
}

uint64_t sub_1D584D524(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D584D52CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D584D530(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D584D538(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrackVariant()
{
  return &type metadata for TrackVariant;
}

unint64_t sub_1D584D554()
{
  unint64_t result;

  result = qword_1EFF49790;
  if (!qword_1EFF49790)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TrackVariant, &type metadata for TrackVariant);
    atomic_store(result, (unint64_t *)&qword_1EFF49790);
  }
  return result;
}

uint64_t sub_1D584D598(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF49798, MEMORY[0x1E0CF8078]);
}

uint64_t static IgnoreTagEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46FD8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF49798, a1);
}

uint64_t sub_1D584D5D8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF497B0, MEMORY[0x1E0CF8380]);
}

uint64_t static IgnoreTagEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(qword_1EFF46FE0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF497B0, a1);
}

uint64_t IgnoreTagEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t IgnoreTagEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*IgnoreTagEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t IgnoreTagEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IgnoreTagEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for IgnoreTagEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CF3E0);
}

uint64_t IgnoreTagEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IgnoreTagEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IgnoreTagEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for IgnoreTagEvent(0);
  return nullsub_1;
}

uint64_t IgnoreTagEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IgnoreTagEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IgnoreTagEvent.tagData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IgnoreTagEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IgnoreTagEvent.tagData.modify())()
{
  type metadata accessor for IgnoreTagEvent(0);
  return nullsub_1;
}

uint64_t IgnoreTagEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IgnoreTagEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IgnoreTagEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IgnoreTagEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*IgnoreTagEvent.viewData.modify())()
{
  type metadata accessor for IgnoreTagEvent(0);
  return nullsub_1;
}

uint64_t IgnoreTagEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for IgnoreTagEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
}

uint64_t IgnoreTagEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t IgnoreTagEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for IgnoreTagEvent.Model(0) + 20));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for IgnoreTagEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CF348);
}

uint64_t IgnoreTagEvent.Model.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for IgnoreTagEvent.Model(0) + 24));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t IgnoreTagEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for IgnoreTagEvent.Model(0) + 28));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

int *IgnoreTagEvent.Model.init(eventData:userBundleSubscriptionContextData:tagData:viewData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  int *result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;

  v7 = *a2;
  v8 = *((_QWORD *)a2 + 1);
  v9 = *((_QWORD *)a2 + 2);
  v10 = a2[24];
  v11 = a2[25];
  v12 = *((_QWORD *)a2 + 4);
  v13 = *((_QWORD *)a2 + 5);
  v14 = a2[48];
  v20 = a3[1];
  v21 = *a3;
  v23 = a4[1];
  v24 = *a4;
  v22 = *((_WORD *)a4 + 8);
  v15 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a5, a1, v15);
  result = (int *)type metadata accessor for IgnoreTagEvent.Model(0);
  v17 = a5 + result[5];
  *(_BYTE *)v17 = v7;
  *(_QWORD *)(v17 + 8) = v8;
  *(_QWORD *)(v17 + 16) = v9;
  *(_BYTE *)(v17 + 24) = v10;
  *(_BYTE *)(v17 + 25) = v11;
  *(_QWORD *)(v17 + 32) = v12;
  *(_QWORD *)(v17 + 40) = v13;
  *(_BYTE *)(v17 + 48) = v14;
  v18 = (_QWORD *)(a5 + result[6]);
  *v18 = v21;
  v18[1] = v20;
  v19 = a5 + result[7];
  *(_QWORD *)v19 = v24;
  *(_QWORD *)(v19 + 8) = v23;
  *(_WORD *)(v19 + 16) = v22;
  return result;
}

uint64_t sub_1D584DC84()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D584DCB8 + 4 * byte_1D5AB8E68[*v0]))(0x746144746E657665, 0xE900000000000061);
}

unint64_t sub_1D584DCB8()
{
  return 0xD000000000000021;
}

uint64_t sub_1D584DCD4()
{
  return 0x61746144676174;
}

uint64_t sub_1D584DCEC()
{
  return 0x6174614477656976;
}

uint64_t sub_1D584DD04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D584F934(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D584DD28()
{
  sub_1D584DFA8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D584DD50()
{
  sub_1D584DFA8();
  return sub_1D5AAEEE0();
}

uint64_t IgnoreTagEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  char v25;
  char v26;
  __int128 v27;
  char v28;

  v3 = v1;
  sub_1D584E3A8(0, &qword_1EFF497C8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D584DFA8();
  sub_1D5AAEEC8();
  LOBYTE(v23) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for IgnoreTagEvent.Model(0);
    v11 = v3 + v10[5];
    v12 = *(_BYTE *)(v11 + 24);
    v13 = *(_BYTE *)(v11 + 25);
    v14 = *(_BYTE *)(v11 + 48);
    LOBYTE(v23) = *(_BYTE *)v11;
    v24 = *(_OWORD *)(v11 + 8);
    v25 = v12;
    v26 = v13;
    v27 = *(_OWORD *)(v11 + 32);
    v28 = v14;
    HIBYTE(v22) = 1;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v15 = (uint64_t *)(v3 + v10[6]);
    v17 = *v15;
    v16 = v15[1];
    v23 = v17;
    *(_QWORD *)&v24 = v16;
    HIBYTE(v22) = 2;
    sub_1D57C6738();
    sub_1D5AAED6C();
    v18 = (uint64_t *)(v3 + v10[7]);
    v19 = *v18;
    v20 = v18[1];
    LOWORD(v18) = *((_WORD *)v18 + 8);
    v23 = v19;
    *(_QWORD *)&v24 = v20;
    WORD4(v24) = (_WORD)v18;
    HIBYTE(v22) = 3;
    sub_1D57C62A4();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D584DFA8()
{
  unint64_t result;

  result = qword_1EFF497D0;
  if (!qword_1EFF497D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB906C, &type metadata for IgnoreTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF497D0);
  }
  return result;
}

uint64_t IgnoreTagEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __int16 v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  __int128 v34;
  char v35;
  char v36;
  __int128 v37;
  char v38;
  char v39;

  v27 = a2;
  v3 = sub_1D5AADF98();
  v28 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D584E3A8(0, &qword_1EFF497D8, MEMORY[0x1E0DED048]);
  v29 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - v7;
  v9 = (int *)type metadata accessor for IgnoreTagEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D584DFA8();
  v31 = v8;
  v12 = (uint64_t)v32;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v32 = a1;
  v14 = v28;
  LOBYTE(v33) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v15 = v29;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v30, v3);
  v39 = 1;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v16 = v35;
  v17 = v36;
  v18 = v38;
  v19 = &v11[v9[5]];
  *v19 = v33;
  *(_OWORD *)(v19 + 8) = v34;
  v19[24] = v16;
  v19[25] = v17;
  *((_OWORD *)v19 + 2) = v37;
  v19[48] = v18;
  v39 = 2;
  sub_1D57C66F4();
  sub_1D5AAECD0();
  v20 = v34;
  v21 = &v11[v9[6]];
  *(_QWORD *)v21 = v33;
  *((_QWORD *)v21 + 1) = v20;
  v39 = 3;
  sub_1D57C6260();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v31, v15);
  v22 = v34;
  v23 = WORD4(v34);
  v24 = &v11[v9[7]];
  *(_QWORD *)v24 = v33;
  *((_QWORD *)v24 + 1) = v22;
  *((_WORD *)v24 + 8) = v23;
  sub_1D584E404((uint64_t)v11, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return sub_1D584E448((uint64_t)v11);
}

void sub_1D584E3A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D584DFA8();
    v7 = a3(a1, &type metadata for IgnoreTagEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D584E404(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IgnoreTagEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D584E448(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for IgnoreTagEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D584E484@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IgnoreTagEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D584E498(_QWORD *a1)
{
  return IgnoreTagEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D584E4AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46FD8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF49798, a1);
}

uint64_t sub_1D584E4D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(qword_1EFF46FE0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF497B0, a1);
}

uint64_t sub_1D584E4F4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for IgnoreTagEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for IgnoreTagEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t initializeWithCopy for IgnoreTagEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for IgnoreTagEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for IgnoreTagEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for IgnoreTagEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for IgnoreTagEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D584ED8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for IgnoreTagEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D584EEB4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D584EFD8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for IgnoreTagEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    *((_WORD *)v10 + 12) = *((_WORD *)v11 + 12);
    v13 = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
    *((_QWORD *)v10 + 5) = v13;
    v10[48] = v11[48];
    v14 = (uint64_t *)((char *)a1 + v9);
    v15 = (uint64_t *)((char *)a2 + v9);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = a3[7];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v18[16] = v19[16];
    v18[17] = v19[17];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for IgnoreTagEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IgnoreTagEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  *(_WORD *)(v9 + 24) = *(_WORD *)(v10 + 24);
  v12 = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v9 + 40) = v12;
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  v13 = (_QWORD *)(a1 + v8);
  v14 = (_QWORD *)(a2 + v8);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v19;
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IgnoreTagEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  *(_BYTE *)(v14 + 17) = *(_BYTE *)(v15 + 17);
  return a1;
}

uint64_t initializeWithTake for IgnoreTagEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  v12 = *(_OWORD *)(v10 + 32);
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = v12;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_WORD *)(v14 + 16) = *(_WORD *)(v15 + 16);
  return a1;
}

uint64_t assignWithTake for IgnoreTagEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  v11 = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)(v19 + 8);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(v18 + 8) = v20;
  swift_bridgeObjectRelease();
  *(_WORD *)(v18 + 16) = *(_WORD *)(v19 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for IgnoreTagEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D584F604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for IgnoreTagEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D584F690(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D584F70C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for IgnoreTagEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D584F7DC + 4 * byte_1D5AB8E71[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D584F810 + 4 * byte_1D5AB8E6C[v4]))();
}

uint64_t sub_1D584F810(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D584F818(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D584F820);
  return result;
}

uint64_t sub_1D584F82C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D584F834);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D584F838(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D584F840(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IgnoreTagEvent.Model.CodingKeys()
{
  return &type metadata for IgnoreTagEvent.Model.CodingKeys;
}

unint64_t sub_1D584F860()
{
  unint64_t result;

  result = qword_1EFF497E0;
  if (!qword_1EFF497E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB9044, &type metadata for IgnoreTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF497E0);
  }
  return result;
}

unint64_t sub_1D584F8A8()
{
  unint64_t result;

  result = qword_1EFF497E8;
  if (!qword_1EFF497E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB8FB4, &type metadata for IgnoreTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF497E8);
  }
  return result;
}

unint64_t sub_1D584F8F0()
{
  unint64_t result;

  result = qword_1EFF497F0;
  if (!qword_1EFF497F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB8FDC, &type metadata for IgnoreTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF497F0);
  }
  return result;
}

uint64_t sub_1D584F934(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61746144676174 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1D584FAF0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADAB8();
  __swift_allocate_value_buffer(v0, qword_1ED9CD848);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED9CD848);
  *(_QWORD *)v1 = 0x7364612E6D6F63;
  *(_QWORD *)(v1 + 8) = 0xE700000000000000;
  *(_QWORD *)(v1 + 16) = 3;
  *(_BYTE *)(v1 + 24) = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t static NativeAdImpressionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CD868, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CD848, a1);
}

uint64_t sub_1D584FB90()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADD34();
  __swift_allocate_value_buffer(v0, qword_1EFF497F8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFF497F8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0CF8378], v0);
}

uint64_t static NativeAdImpressionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46FF0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF497F8, a1);
}

uint64_t NativeAdImpressionEvent.adUserData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t NativeAdImpressionEvent.adUserData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*NativeAdImpressionEvent.adUserData.modify())()
{
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for NativeAdImpressionEvent, (uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t type metadata accessor for NativeAdImpressionEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CD588);
}

uint64_t NativeAdImpressionEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 20);
  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NativeAdImpressionEvent.eventData.modify())()
{
  type metadata accessor for NativeAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5824B58(type metadata accessor for NativeAdImpressionEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t NativeAdImpressionEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 24);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NativeAdImpressionEvent.timedData.modify())()
{
  type metadata accessor for NativeAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NativeAdImpressionEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NativeAdImpressionEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for NativeAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.adPlacementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D584FF48()
{
  unint64_t result;

  result = qword_1ED9CCD88;
  if (!qword_1ED9CCD88)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdPlacementData, &type metadata for AdPlacementData);
    atomic_store(result, (unint64_t *)&qword_1ED9CCD88);
  }
  return result;
}

unint64_t sub_1D584FF8C()
{
  unint64_t result;

  result = qword_1ED9CD1A8;
  if (!qword_1ED9CD1A8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdPlacementData, &type metadata for AdPlacementData);
    atomic_store(result, (unint64_t *)&qword_1ED9CD1A8);
  }
  return result;
}

uint64_t NativeAdImpressionEvent.adPlacementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NativeAdImpressionEvent.adPlacementData.modify())()
{
  type metadata accessor for NativeAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.adPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D58500C8()
{
  unint64_t result;

  result = qword_1ED9CDA68;
  if (!qword_1ED9CDA68)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdPositionData, &type metadata for AdPositionData);
    atomic_store(result, (unint64_t *)&qword_1ED9CDA68);
  }
  return result;
}

unint64_t sub_1D585010C()
{
  unint64_t result;

  result = qword_1ED9CDA60;
  if (!qword_1ED9CDA60)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdPositionData, &type metadata for AdPositionData);
    atomic_store(result, (unint64_t *)&qword_1ED9CDA60);
  }
  return result;
}

uint64_t NativeAdImpressionEvent.adPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NativeAdImpressionEvent.adPositionData.modify())()
{
  type metadata accessor for NativeAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.adFeedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NativeAdImpressionEvent.adFeedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NativeAdImpressionEvent.adFeedData.modify())()
{
  type metadata accessor for NativeAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.adGroupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D5850340()
{
  unint64_t result;

  result = qword_1ED9CD748;
  if (!qword_1ED9CD748)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdGroupData, &type metadata for AdGroupData);
    atomic_store(result, (unint64_t *)&qword_1ED9CD748);
  }
  return result;
}

unint64_t sub_1D5850384()
{
  unint64_t result;

  result = qword_1ED9CDA38;
  if (!qword_1ED9CDA38)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdGroupData, &type metadata for AdGroupData);
    atomic_store(result, (unint64_t *)&qword_1ED9CDA38);
  }
  return result;
}

uint64_t NativeAdImpressionEvent.adGroupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NativeAdImpressionEvent.adGroupData.modify())()
{
  type metadata accessor for NativeAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for NativeAdImpressionEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  v14 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v14, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v14, v19);
}

uint64_t NativeAdImpressionEvent.Model.adUserData.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t NativeAdImpressionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for NativeAdImpressionEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t type metadata accessor for NativeAdImpressionEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF49880);
}

uint64_t NativeAdImpressionEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5824B58(type metadata accessor for NativeAdImpressionEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t NativeAdImpressionEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent.Model(0) + 28));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t NativeAdImpressionEvent.Model.adPlacementData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent.Model(0) + 32));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t NativeAdImpressionEvent.Model.adPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for NativeAdImpressionEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 36));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t NativeAdImpressionEvent.Model.adFeedData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NativeAdImpressionEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t NativeAdImpressionEvent.Model.adGroupData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NativeAdImpressionEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t NativeAdImpressionEvent.Model.init(adUserData:eventData:timedData:userBundleSubscriptionContextData:adPlacementData:adPositionData:adFeedData:adGroupData:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, int *a6@<X5>, char *a7@<X6>, char *a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  int *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t result;
  char *v24;
  _QWORD *v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  int v33;
  char v34;
  char v35;

  v12 = a1[1];
  v13 = *a4;
  v14 = *((_QWORD *)a4 + 1);
  v15 = *((_QWORD *)a4 + 2);
  v16 = a4[24];
  v17 = a4[25];
  v28 = *((_QWORD *)a4 + 5);
  v29 = *((_QWORD *)a4 + 4);
  v27 = a4[48];
  v30 = a5[1];
  v31 = *a5;
  v32 = *((_BYTE *)a6 + 4);
  v33 = *a6;
  v34 = *a7;
  v35 = *a8;
  *a9 = *a1;
  a9[1] = v12;
  v18 = (int *)type metadata accessor for NativeAdImpressionEvent.Model(0);
  v19 = (char *)a9 + v18[5];
  v20 = sub_1D5AADF98();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a2, v20);
  v21 = (char *)a9 + v18[6];
  v22 = sub_1D5AADFB0();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, a3, v22);
  v24 = (char *)a9 + v18[7];
  *v24 = v13;
  *((_QWORD *)v24 + 1) = v14;
  *((_QWORD *)v24 + 2) = v15;
  v24[24] = v16;
  v24[25] = v17;
  *((_QWORD *)v24 + 4) = v29;
  *((_QWORD *)v24 + 5) = v28;
  v24[48] = v27;
  v25 = (_QWORD *)((char *)a9 + v18[8]);
  *v25 = v31;
  v25[1] = v30;
  v26 = (char *)a9 + v18[9];
  *(_DWORD *)v26 = v33;
  v26[4] = v32;
  *((_BYTE *)a9 + v18[10]) = v34;
  *((_BYTE *)a9 + v18[11]) = v35;
  return result;
}

uint64_t sub_1D5850978(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58509B0 + 4 * byte_1D5AB90C0[a1]))(0x6144726573556461, 0xEA00000000006174);
}

uint64_t sub_1D58509B0()
{
  return 0x746144746E657665;
}

unint64_t sub_1D58509DC()
{
  return 0xD000000000000021;
}

uint64_t sub_1D58509F8()
{
  return 0x6D6563616C506461;
}

uint64_t sub_1D5850A1C()
{
  return 0x697469736F506461;
}

uint64_t sub_1D5850A40()
{
  return 0x6144646565466461;
}

uint64_t sub_1D5850A54()
{
  return 0x4470756F72476461;
}

uint64_t sub_1D5850A74()
{
  unsigned __int8 *v0;

  return sub_1D5850978(*v0);
}

uint64_t sub_1D5850A7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5853698(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5850AA0()
{
  sub_1D5850E58();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5850AC8()
{
  sub_1D5850E58();
  return sub_1D5AAEEE0();
}

uint64_t NativeAdImpressionEvent.Model.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int *v11;
  char *v12;
  char v13;
  char v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  char v25;
  char v26;
  __int128 v27;
  char v28;
  char v29;

  v3 = v1;
  sub_1D58514C8(0, &qword_1EFF49810, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5850E58();
  sub_1D5AAEEC8();
  v10 = v3[1];
  v23 = *v3;
  *(_QWORD *)&v24 = v10;
  v29 = 0;
  sub_1D57CBEFC();
  sub_1D5AAED6C();
  if (!v2)
  {
    v11 = (int *)type metadata accessor for NativeAdImpressionEvent.Model(0);
    LOBYTE(v23) = 1;
    sub_1D5AADF98();
    sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
    sub_1D5AAED6C();
    LOBYTE(v23) = 2;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v12 = (char *)v3 + v11[7];
    v13 = v12[24];
    v14 = v12[25];
    v15 = v12[48];
    LOBYTE(v23) = *v12;
    v24 = *(_OWORD *)(v12 + 8);
    v25 = v13;
    v26 = v14;
    v27 = *((_OWORD *)v12 + 2);
    v28 = v15;
    v29 = 3;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v16 = (_QWORD *)((char *)v3 + v11[8]);
    v18 = *v16;
    v17 = v16[1];
    v23 = v18;
    *(_QWORD *)&v24 = v17;
    v29 = 4;
    sub_1D584FF8C();
    sub_1D5AAED6C();
    v19 = (char *)v3 + v11[9];
    v20 = *(_DWORD *)v19;
    LOBYTE(v19) = v19[4];
    LODWORD(v23) = v20;
    BYTE4(v23) = (_BYTE)v19;
    v29 = 5;
    sub_1D585010C();
    sub_1D5AAED18();
    LOBYTE(v23) = *((_BYTE *)v3 + v11[10]);
    v29 = 6;
    sub_1D57CBF9C();
    sub_1D5AAED18();
    LOBYTE(v23) = *((_BYTE *)v3 + v11[11]);
    v29 = 7;
    sub_1D5850384();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5850E58()
{
  unint64_t result;

  result = qword_1EFF49818;
  if (!qword_1EFF49818)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB933C, &type metadata for NativeAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49818);
  }
  return result;
}

uint64_t NativeAdImpressionEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char v27;
  uint64_t v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  char v43;
  char v44;
  __int128 v45;
  char v46;
  char v47;

  v32 = a2;
  v36 = sub_1D5AADFB0();
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_1D5AADF98();
  v35 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58514C8(0, &qword_1EFF49820, MEMORY[0x1E0DED048]);
  v33 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v37 = type metadata accessor for NativeAdImpressionEvent.Model(0);
  MEMORY[0x1E0C80A78](v37);
  v10 = (uint64_t *)((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = a1[3];
  v38 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1D5850E58();
  v12 = v39;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  v31 = v4;
  v39 = v8;
  v47 = 0;
  sub_1D57CBEB8();
  sub_1D5AAECD0();
  v13 = v42;
  v14 = (uint64_t)v10;
  *v10 = v41;
  v10[1] = v13;
  LOBYTE(v41) = 1;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v15 = v40;
  sub_1D5AAECD0();
  v16 = (int *)v37;
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v14 + *(int *)(v37 + 20), v6, v15);
  LOBYTE(v41) = 2;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v17 = v31;
  v18 = v36;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v14 + v16[6], v17, v18);
  v47 = 3;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v19 = (uint64_t)v38;
  v20 = v43;
  v21 = v44;
  v22 = v46;
  v23 = v14 + v16[7];
  *(_BYTE *)v23 = v41;
  *(_OWORD *)(v23 + 8) = v42;
  *(_BYTE *)(v23 + 24) = v20;
  *(_BYTE *)(v23 + 25) = v21;
  *(_OWORD *)(v23 + 32) = v45;
  *(_BYTE *)(v23 + 48) = v22;
  v47 = 4;
  sub_1D584FF48();
  sub_1D5AAECD0();
  v24 = v39;
  v25 = v42;
  v26 = (_QWORD *)(v14 + v16[8]);
  *v26 = v41;
  v26[1] = v25;
  v47 = 5;
  sub_1D58500C8();
  sub_1D5AAEC7C();
  v27 = BYTE4(v41);
  v28 = v14 + v16[9];
  *(_DWORD *)v28 = v41;
  *(_BYTE *)(v28 + 4) = v27;
  v47 = 6;
  sub_1D57CBF58();
  sub_1D5AAEC7C();
  *(_BYTE *)(v14 + v16[10]) = v41;
  v47 = 7;
  sub_1D5850340();
  sub_1D5AAEC7C();
  (*(void (**)(_QWORD, uint64_t))(v24 + 8))(0, v33);
  *(_BYTE *)(v14 + *(int *)(v37 + 44)) = v41;
  sub_1D5851524(v14, v32);
  __swift_destroy_boxed_opaque_existential_1(v19);
  return sub_1D5851568(v14);
}

void sub_1D58514C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5850E58();
    v7 = a3(a1, &type metadata for NativeAdImpressionEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5851524(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NativeAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5851568(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NativeAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58515A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NativeAdImpressionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58515B8(_QWORD *a1)
{
  return NativeAdImpressionEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58515CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CD868, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CD848, a1);
}

uint64_t sub_1D58515F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46FF0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF497F8, a1);
}

uint64_t sub_1D5851614@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  v15 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v15, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v15, v20);
}

uint64_t *initializeBufferWithCopyOfBuffer for NativeAdImpressionEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8D40();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for NativeAdImpressionEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

uint64_t initializeWithCopy for NativeAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for NativeAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for NativeAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for NativeAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for NativeAdImpressionEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58525F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8D40();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D57A8C9C();
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
                v8 = v19;
                v12 = *(_QWORD *)(v19 - 8);
                v13 = a3[11];
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for NativeAdImpressionEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5852810(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8D40();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D57A8C9C();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
                v10 = v21;
                v14 = *(_QWORD *)(v21 - 8);
                v15 = a4[11];
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5852A24()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1D579E208(319, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  if (v0 <= 0x3F)
  {
    sub_1D57A8D40();
    if (v1 <= 0x3F)
    {
      sub_1D57A8C9C();
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
                if (v7 <= 0x3F)
                  swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for NativeAdImpressionEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADF98();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[7];
    v18 = a3[8];
    v19 = (char *)v4 + v17;
    v20 = (char *)a2 + v17;
    *v19 = *v20;
    v21 = *((_QWORD *)v20 + 2);
    *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
    *((_QWORD *)v19 + 2) = v21;
    *((_WORD *)v19 + 12) = *((_WORD *)v20 + 12);
    v22 = *((_QWORD *)v20 + 5);
    *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
    *((_QWORD *)v19 + 5) = v22;
    v19[48] = v20[48];
    v23 = (_QWORD *)((char *)v4 + v18);
    v24 = (_QWORD *)((char *)a2 + v18);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = a3[9];
    v27 = a3[10];
    v28 = (char *)v4 + v26;
    v29 = (char *)a2 + v26;
    *(_DWORD *)v28 = *(_DWORD *)v29;
    v28[4] = v29[4];
    *((_BYTE *)v4 + v27) = *((_BYTE *)a2 + v27);
    *((_BYTE *)v4 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for NativeAdImpressionEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for NativeAdImpressionEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D5AADF98();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1D5AADFB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[7];
  v17 = a3[8];
  v18 = (char *)a1 + v16;
  v19 = (char *)a2 + v16;
  *v18 = *v19;
  v20 = *((_QWORD *)v19 + 2);
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  *((_QWORD *)v18 + 2) = v20;
  *((_WORD *)v18 + 12) = *((_WORD *)v19 + 12);
  v21 = *((_QWORD *)v19 + 5);
  *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
  *((_QWORD *)v18 + 5) = v21;
  v18[48] = v19[48];
  v22 = (_QWORD *)((char *)a1 + v17);
  v23 = (_QWORD *)((char *)a2 + v17);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = a3[9];
  v26 = a3[10];
  v27 = (char *)a1 + v25;
  v28 = (char *)a2 + v25;
  *(_DWORD *)v27 = *(_DWORD *)v28;
  v27[4] = v28[4];
  *((_BYTE *)a1 + v26) = *((_BYTE *)a2 + v26);
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for NativeAdImpressionEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int v23;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D5AADF98();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1D5AADFB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  *v15 = *((_BYTE *)a2 + v14);
  *((_QWORD *)v15 + 1) = *(_QWORD *)((char *)a2 + v14 + 8);
  *((_QWORD *)v15 + 2) = *(_QWORD *)((char *)a2 + v14 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[24] = v16[24];
  v15[25] = v16[25];
  *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
  *((_QWORD *)v15 + 5) = *((_QWORD *)v16 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[48] = v16[48];
  v17 = a3[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[9];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = *(_DWORD *)v22;
  v21[4] = v22[4];
  *(_DWORD *)v21 = v23;
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  return a1;
}

_OWORD *initializeWithTake for NativeAdImpressionEvent.Model(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D5AADF98();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1D5AADFB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[7];
  v15 = a3[8];
  v16 = (char *)a1 + v14;
  v17 = (char *)a2 + v14;
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
  v16[48] = v17[48];
  *(_OWORD *)((char *)a1 + v15) = *(_OWORD *)((char *)a2 + v15);
  v19 = a3[9];
  v20 = a3[10];
  v21 = (char *)a1 + v19;
  v22 = (char *)a2 + v19;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v21[4] = v22[4];
  *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  return a1;
}

_QWORD *assignWithTake for NativeAdImpressionEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D5AADF98();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1D5AADFB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  *v16 = *((_BYTE *)a2 + v15);
  v18 = *(_QWORD *)((char *)a2 + v15 + 16);
  *((_QWORD *)v16 + 1) = *(_QWORD *)((char *)a2 + v15 + 8);
  *((_QWORD *)v16 + 2) = v18;
  swift_bridgeObjectRelease();
  v16[24] = v17[24];
  v16[25] = v17[25];
  v19 = *((_QWORD *)v17 + 5);
  *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
  *((_QWORD *)v16 + 5) = v19;
  swift_bridgeObjectRelease();
  v16[48] = v17[48];
  v20 = a3[8];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[9];
  v26 = a3[10];
  v27 = (char *)a1 + v25;
  v28 = (char *)a2 + v25;
  *(_DWORD *)v27 = *(_DWORD *)v28;
  v27[4] = v28[4];
  *((_BYTE *)a1 + v26) = *((_BYTE *)a2 + v26);
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  return a1;
}

uint64_t getEnumTagSinglePayload for NativeAdImpressionEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58532F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D5AADF98();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_1D5AADFB0();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for NativeAdImpressionEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58533A0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1D5AADF98();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_1D5AADFB0();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_1D585343C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NativeAdImpressionEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D5853540 + 4 * byte_1D5AB90CD[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D5853574 + 4 * byte_1D5AB90C8[v4]))();
}

uint64_t sub_1D5853574(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D585357C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5853584);
  return result;
}

uint64_t sub_1D5853590(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5853598);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D585359C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58535A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NativeAdImpressionEvent.Model.CodingKeys()
{
  return &type metadata for NativeAdImpressionEvent.Model.CodingKeys;
}

unint64_t sub_1D58535C4()
{
  unint64_t result;

  result = qword_1EFF498D0;
  if (!qword_1EFF498D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB9314, &type metadata for NativeAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF498D0);
  }
  return result;
}

unint64_t sub_1D585360C()
{
  unint64_t result;

  result = qword_1EFF498D8;
  if (!qword_1EFF498D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB9284, &type metadata for NativeAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF498D8);
  }
  return result;
}

unint64_t sub_1D5853654()
{
  unint64_t result;

  result = qword_1EFF498E0;
  if (!qword_1EFF498E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB92AC, &type metadata for NativeAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF498E0);
  }
  return result;
}

uint64_t sub_1D5853698(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6144726573556461 && a2 == 0xEA00000000006174;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D6563616C506461 && a2 == 0xEF61746144746E65 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x697469736F506461 && a2 == 0xEE00617461446E6FLL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6144646565466461 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x4470756F72476461 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

void ActionData.actionMethod.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *ActionData.actionMethod.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*ActionData.actionMethod.modify())()
{
  return nullsub_1;
}

NewsAnalytics::ActionData __swiftcall ActionData.init(actionMethod:)(NewsAnalytics::ActionData actionMethod)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)actionMethod.actionMethod;
  return actionMethod;
}

uint64_t sub_1D5853A94()
{
  return 0x654D6E6F69746361;
}

uint64_t sub_1D5853AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x654D6E6F69746361 && a2 == 0xEC000000646F6874)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5853B60()
{
  sub_1D5853CB4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5853B88()
{
  sub_1D5853CB4();
  return sub_1D5AAEEE0();
}

uint64_t ActionData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D5853E74(0, &qword_1EFF498E8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5853CB4();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D5853CF8();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5853CB4()
{
  unint64_t result;

  result = qword_1EFF498F0;
  if (!qword_1EFF498F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB9504, &type metadata for ActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF498F0);
  }
  return result;
}

unint64_t sub_1D5853CF8()
{
  unint64_t result;

  result = qword_1EFF498F8;
  if (!qword_1EFF498F8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ActionMethod, &type metadata for ActionMethod);
    atomic_store(result, (unint64_t *)&qword_1EFF498F8);
  }
  return result;
}

uint64_t ActionData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D5853E74(0, &qword_1EFF49900, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5853CB4();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5853ED0();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5853E74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5853CB4();
    v7 = a3(a1, &type metadata for ActionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5853ED0()
{
  unint64_t result;

  result = qword_1EFF49908;
  if (!qword_1EFF49908)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ActionMethod, &type metadata for ActionMethod);
    atomic_store(result, (unint64_t *)&qword_1EFF49908);
  }
  return result;
}

uint64_t sub_1D5853F1C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ActionData.init(from:)(a1, a2);
}

uint64_t sub_1D5853F30(_QWORD *a1)
{
  return ActionData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for ActionData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1D5853F90 + 4 * byte_1D5AB9391[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1D5853FC4 + 4 * byte_1D5AB938C[v4]))();
}

uint64_t sub_1D5853FC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5853FCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5853FD4);
  return result;
}

uint64_t sub_1D5853FE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5853FE8);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1D5853FEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5853FF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActionData()
{
  return &type metadata for ActionData;
}

uint64_t storeEnumTagSinglePayload for ActionData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5854050 + 4 * byte_1D5AB9396[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5854070 + 4 * byte_1D5AB939B[v4]))();
}

_BYTE *sub_1D5854050(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5854070(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5854078(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5854080(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5854088(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5854090(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ActionData.CodingKeys()
{
  return &type metadata for ActionData.CodingKeys;
}

unint64_t sub_1D58540B0()
{
  unint64_t result;

  result = qword_1EFF49910;
  if (!qword_1EFF49910)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB94DC, &type metadata for ActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49910);
  }
  return result;
}

unint64_t sub_1D58540F8()
{
  unint64_t result;

  result = qword_1EFF49918;
  if (!qword_1EFF49918)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB944C, &type metadata for ActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49918);
  }
  return result;
}

unint64_t sub_1D5854140()
{
  unint64_t result;

  result = qword_1EFF49920;
  if (!qword_1EFF49920)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB9474, &type metadata for ActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49920);
  }
  return result;
}

void EmailShareResultData.resultType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *EmailShareResultData.resultType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*EmailShareResultData.resultType.modify())()
{
  return nullsub_1;
}

NewsAnalytics::EmailShareResultData __swiftcall EmailShareResultData.init(resultType:)(NewsAnalytics::EmailShareResultData resultType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)resultType.resultType;
  return resultType;
}

uint64_t sub_1D58541B8()
{
  sub_1D585430C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58541E0()
{
  sub_1D585430C();
  return sub_1D5AAEEE0();
}

uint64_t EmailShareResultData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D58544CC(0, &qword_1EFF49928, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D585430C();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D5854350();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D585430C()
{
  unint64_t result;

  result = qword_1EFF49930;
  if (!qword_1EFF49930)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB96E8, &type metadata for EmailShareResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49930);
  }
  return result;
}

unint64_t sub_1D5854350()
{
  unint64_t result;

  result = qword_1EFF49938;
  if (!qword_1EFF49938)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EmailShareResultType, &type metadata for EmailShareResultType);
    atomic_store(result, (unint64_t *)&qword_1EFF49938);
  }
  return result;
}

uint64_t EmailShareResultData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D58544CC(0, &qword_1EFF49940, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D585430C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5854528();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D58544CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D585430C();
    v7 = a3(a1, &type metadata for EmailShareResultData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5854528()
{
  unint64_t result;

  result = qword_1EFF49948;
  if (!qword_1EFF49948)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EmailShareResultType, &type metadata for EmailShareResultType);
    atomic_store(result, (unint64_t *)&qword_1EFF49948);
  }
  return result;
}

unint64_t sub_1D5854570()
{
  unint64_t result;

  result = qword_1EFF49950;
  if (!qword_1EFF49950)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EmailShareResultData, &type metadata for EmailShareResultData);
    atomic_store(result, (unint64_t *)&qword_1EFF49950);
  }
  return result;
}

unint64_t sub_1D58545B8()
{
  unint64_t result;

  result = qword_1EFF49958;
  if (!qword_1EFF49958)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EmailShareResultData, &type metadata for EmailShareResultData);
    atomic_store(result, (unint64_t *)&qword_1EFF49958);
  }
  return result;
}

uint64_t sub_1D58545FC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return EmailShareResultData.init(from:)(a1, a2);
}

uint64_t sub_1D5854610(_QWORD *a1)
{
  return EmailShareResultData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for EmailShareResultData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5854670 + 4 * byte_1D5AB9565[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D58546A4 + 4 * byte_1D5AB9560[v4]))();
}

uint64_t sub_1D58546A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58546AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58546B4);
  return result;
}

uint64_t sub_1D58546C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58546C8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D58546CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58546D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmailShareResultData()
{
  return &type metadata for EmailShareResultData;
}

uint64_t storeEnumTagSinglePayload for EmailShareResultData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5854730 + 4 * byte_1D5AB956A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5854750 + 4 * byte_1D5AB956F[v4]))();
}

_BYTE *sub_1D5854730(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5854750(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5854758(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5854760(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5854768(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5854770(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EmailShareResultData.CodingKeys()
{
  return &type metadata for EmailShareResultData.CodingKeys;
}

unint64_t sub_1D5854790()
{
  unint64_t result;

  result = qword_1EFF49960;
  if (!qword_1EFF49960)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB96C0, &type metadata for EmailShareResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49960);
  }
  return result;
}

unint64_t sub_1D58547D8()
{
  unint64_t result;

  result = qword_1EFF49968;
  if (!qword_1EFF49968)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB9630, &type metadata for EmailShareResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49968);
  }
  return result;
}

unint64_t sub_1D5854820()
{
  unint64_t result;

  result = qword_1EFF49970;
  if (!qword_1EFF49970)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB9658, &type metadata for EmailShareResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49970);
  }
  return result;
}

id sub_1D5854864(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t *v12;
  char *v13;
  id v14;
  uint64_t *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  _BYTE v22[16];
  id v23;
  objc_super v24;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = sub_1D5AADC68();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CF82C0];
  v7 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = (uint64_t *)&v22[-v11];
  *(_QWORD *)&v2[OBJC_IVAR____TtC13NewsAnalytics25PrivacyValidationProvider_appConfigurationManager] = a1;
  v13 = v2;
  v14 = objc_msgSend((id)swift_unknownObjectRetain(), sel_possiblyUnfetchedAppConfiguration);
  sub_1D57B59BC(v14, v12);
  v15 = (uint64_t *)&v13[OBJC_IVAR____TtC13NewsAnalytics25PrivacyValidationProvider__privacyValidation];
  swift_beginAccess();
  (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v7 + 16))(v10, v12, v5);
  sub_1D57B1F4C(0, &qword_1ED9D1088, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4AE8]);
  swift_allocObject();
  v16 = sub_1D5AAE268();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v12, v5);
  *v15 = v16;
  swift_endAccess();

  v24.receiver = v13;
  v24.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v24, sel_init);
  v23 = v17;
  sub_1D57C596C();
  v18 = v17;
  sub_1D5AAE304();
  *(_QWORD *)(swift_allocObject() + 16) = v18;
  v19 = v18;
  v20 = (void *)sub_1D5AAE25C();
  sub_1D5AAE2A4();

  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return v19;
}

id sub_1D5854AD4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D5854C74()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1D5854C98()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D5854CBC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D5854CE0()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1D5854D14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFF49A00;
  if (!qword_1EFF49A00)
  {
    v1 = sub_1D5AAE040();
    result = MEMORY[0x1D8279680](MEMORY[0x1E0DB35A8], v1);
    atomic_store(result, (unint64_t *)&qword_1EFF49A00);
  }
  return result;
}

void GalleryData.galleryType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *GalleryData.galleryType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*GalleryData.galleryType.modify())()
{
  return nullsub_1;
}

uint64_t GalleryData.galleryID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GalleryData.galleryID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*GalleryData.galleryID.modify())()
{
  return nullsub_1;
}

uint64_t GalleryData.galleryImageCount.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 24);
}

uint64_t GalleryData.galleryImageCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*GalleryData.galleryImageCount.modify())()
{
  return nullsub_1;
}

_BYTE *GalleryData.init(galleryType:galleryID:galleryImageCount:)@<X0>(_BYTE *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  *(_BYTE *)a5 = *result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_DWORD *)(a5 + 24) = a4;
  return result;
}

uint64_t sub_1D5854E28()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x497972656C6C6167;
  if (*v0 != 1)
    v1 = 0xD000000000000011;
  if (*v0)
    return v1;
  else
    return 0x547972656C6C6167;
}

uint64_t sub_1D5854E94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58556E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5854EB8()
{
  sub_1D5855080();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5854EE0()
{
  sub_1D5855080();
  return sub_1D5AAEEE0();
}

uint64_t GalleryData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  _QWORD v12[2];
  int v13;
  char v14;
  char v15;
  char v16;
  char v17;

  sub_1D58552E8(0, &qword_1ED9CD6D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v12 - v7;
  v9 = *v1;
  v10 = *((_QWORD *)v1 + 1);
  v12[0] = *((_QWORD *)v1 + 2);
  v12[1] = v10;
  v13 = *((_DWORD *)v1 + 6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5855080();
  sub_1D5AAEEC8();
  v17 = v9;
  v16 = 0;
  sub_1D58550C4();
  sub_1D5AAED6C();
  if (!v2)
  {
    v15 = 1;
    sub_1D5AAED3C();
    v14 = 2;
    sub_1D5AAED78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D5855080()
{
  unint64_t result;

  result = qword_1ED9CD120;
  if (!qword_1ED9CD120)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB9924, &type metadata for GalleryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD120);
  }
  return result;
}

unint64_t sub_1D58550C4()
{
  unint64_t result;

  result = qword_1ED9CD138;
  if (!qword_1ED9CD138)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GalleryType, &type metadata for GalleryType);
    atomic_store(result, (unint64_t *)&qword_1ED9CD138);
  }
  return result;
}

uint64_t GalleryData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v16;
  uint64_t v17;
  int v18;
  char v19;
  char v20;
  char v21;
  unsigned __int8 v22;

  sub_1D58552E8(0, &qword_1EFF49A08, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5855080();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = 0;
  sub_1D5855344();
  sub_1D5AAECD0();
  v10 = v22;
  v20 = 1;
  v11 = sub_1D5AAECA0();
  v13 = v12;
  v17 = v11;
  v18 = v10;
  v19 = 2;
  swift_bridgeObjectRetain();
  v14 = sub_1D5AAECDC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_BYTE *)a2 = v18;
  *(_QWORD *)(a2 + 8) = v17;
  *(_QWORD *)(a2 + 16) = v13;
  *(_DWORD *)(a2 + 24) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1D58552E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5855080();
    v7 = a3(a1, &type metadata for GalleryData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5855344()
{
  unint64_t result;

  result = qword_1EFF49A10;
  if (!qword_1EFF49A10)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GalleryType, &type metadata for GalleryType);
    atomic_store(result, (unint64_t *)&qword_1EFF49A10);
  }
  return result;
}

uint64_t sub_1D5855390@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return GalleryData.init(from:)(a1, a2);
}

uint64_t sub_1D58553A4(_QWORD *a1)
{
  return GalleryData.encode(to:)(a1);
}

uint64_t initializeWithCopy for GalleryData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GalleryData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy28_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for GalleryData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for GalleryData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 28))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GalleryData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 28) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 28) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GalleryData()
{
  return &type metadata for GalleryData;
}

uint64_t storeEnumTagSinglePayload for GalleryData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5855590 + 4 * byte_1D5AB97AD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D58555C4 + 4 * byte_1D5AB97A8[v4]))();
}

uint64_t sub_1D58555C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58555CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58555D4);
  return result;
}

uint64_t sub_1D58555E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58555E8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D58555EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58555F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GalleryData.CodingKeys()
{
  return &type metadata for GalleryData.CodingKeys;
}

unint64_t sub_1D5855614()
{
  unint64_t result;

  result = qword_1EFF49A18;
  if (!qword_1EFF49A18)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB98FC, &type metadata for GalleryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49A18);
  }
  return result;
}

unint64_t sub_1D585565C()
{
  unint64_t result;

  result = qword_1ED9CD130;
  if (!qword_1ED9CD130)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB986C, &type metadata for GalleryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD130);
  }
  return result;
}

unint64_t sub_1D58556A4()
{
  unint64_t result;

  result = qword_1ED9CD128;
  if (!qword_1ED9CD128)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB9894, &type metadata for GalleryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD128);
  }
  return result;
}

uint64_t sub_1D58556E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x547972656C6C6167 && a2 == 0xEB00000000657079;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x497972656C6C6167 && a2 == 0xE900000000000044 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AEDB10)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1D585585C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF49A20, MEMORY[0x1E0CF8078]);
}

uint64_t static ArticleUnsaveEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF46FF8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF49A20, a1);
}

uint64_t sub_1D585589C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF49A38, MEMORY[0x1E0CF8380]);
}

uint64_t static ArticleUnsaveEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47000, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF49A38, a1);
}

uint64_t ArticleUnsaveEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t ArticleUnsaveEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ArticleUnsaveEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleUnsaveEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for ArticleUnsaveEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CFEC8);
}

uint64_t ArticleUnsaveEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUnsaveEvent.articleData.modify())()
{
  type metadata accessor for ArticleUnsaveEvent(0);
  return nullsub_1;
}

uint64_t ArticleUnsaveEvent.actionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUnsaveEvent.actionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUnsaveEvent.actionData.modify())()
{
  type metadata accessor for ArticleUnsaveEvent(0);
  return nullsub_1;
}

uint64_t ArticleUnsaveEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUnsaveEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUnsaveEvent.feedData.modify())()
{
  type metadata accessor for ArticleUnsaveEvent(0);
  return nullsub_1;
}

uint64_t ArticleUnsaveEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUnsaveEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUnsaveEvent.groupData.modify())()
{
  type metadata accessor for ArticleUnsaveEvent(0);
  return nullsub_1;
}

uint64_t ArticleUnsaveEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUnsaveEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUnsaveEvent.viewData.modify())()
{
  type metadata accessor for ArticleUnsaveEvent(0);
  return nullsub_1;
}

uint64_t ArticleUnsaveEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUnsaveEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUnsaveEvent.userChannelContextData.modify())()
{
  type metadata accessor for ArticleUnsaveEvent(0);
  return nullsub_1;
}

uint64_t ArticleUnsaveEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUnsaveEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUnsaveEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for ArticleUnsaveEvent(0);
  return nullsub_1;
}

uint64_t ArticleUnsaveEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUnsaveEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUnsaveEvent.channelData.modify())()
{
  type metadata accessor for ArticleUnsaveEvent(0);
  return nullsub_1;
}

uint64_t ArticleUnsaveEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUnsaveEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUnsaveEvent.issueData.modify())()
{
  type metadata accessor for ArticleUnsaveEvent(0);
  return nullsub_1;
}

uint64_t ArticleUnsaveEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ArticleUnsaveEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v10, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v10, v23);
}

uint64_t ArticleUnsaveEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ArticleUnsaveEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent.Model(0) + 20);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t type metadata accessor for ArticleUnsaveEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CFE18);
}

uint64_t ArticleUnsaveEvent.Model.actionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ArticleUnsaveEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t ArticleUnsaveEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

_QWORD *ArticleUnsaveEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for ArticleUnsaveEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 32), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t ArticleUnsaveEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent.Model(0) + 36));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t ArticleUnsaveEvent.Model.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = type metadata accessor for ArticleUnsaveEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 40));
  v5 = *v4;
  v6 = v4[1];
  LOWORD(v4) = *((_WORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_BYTE *)(a1 + 1) = v6;
  *(_WORD *)(a1 + 2) = (_WORD)v4;
  return result;
}

uint64_t ArticleUnsaveEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent.Model(0) + 44));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleUnsaveEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent.Model(0) + 48);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleUnsaveEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleUnsaveEvent.Model(0) + 52));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

__n128 ArticleUnsaveEvent.Model.init(eventData:articleData:actionData:feedData:groupData:viewData:userChannelContextData:userBundleSubscriptionContextData:channelData:issueData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, char *a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, __n128 *a11)
{
  char v16;
  uint64_t v17;
  __int16 v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 *v29;
  __n128 result;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _BYTE v56[23];
  _BYTE v57[144];

  v55 = a2[6];
  *(_OWORD *)v56 = a2[7];
  *(_QWORD *)&v56[15] = *(_QWORD *)((char *)a2 + 127);
  v51 = a2[2];
  v52 = a2[3];
  v53 = a2[4];
  v54 = a2[5];
  v49 = *a2;
  v50 = a2[1];
  v16 = *a3;
  v31 = *a4;
  v17 = *((_QWORD *)a4 + 2);
  sub_1D57DD5B8(a5, (uint64_t)v57);
  v32 = a6[1];
  v33 = *a6;
  v18 = *((_WORD *)a6 + 8);
  LOBYTE(a6) = *(_BYTE *)a7;
  v34 = *(_BYTE *)(a7 + 1);
  LOWORD(a7) = *(_WORD *)(a7 + 2);
  v41 = *a8;
  v39 = *((_QWORD *)a8 + 2);
  v40 = *((_QWORD *)a8 + 1);
  v37 = a8[25];
  v38 = a8[24];
  v35 = *((_QWORD *)a8 + 5);
  v36 = *((_QWORD *)a8 + 4);
  LOBYTE(a8) = a8[48];
  v46 = a10[1];
  v47 = *a10;
  v44 = *((_BYTE *)a10 + 17);
  v45 = *((_BYTE *)a10 + 16);
  v42 = a10[4];
  v43 = a10[3];
  v48 = *a11;
  v20 = a11[1].n128_u64[0];
  v19 = a11[1].n128_u64[1];
  v21 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a9, a1, v21);
  v22 = (int *)type metadata accessor for ArticleUnsaveEvent.Model(0);
  v23 = a9 + v22[5];
  *(_OWORD *)(v23 + 96) = v55;
  *(_OWORD *)(v23 + 112) = *(_OWORD *)v56;
  *(_QWORD *)(v23 + 127) = *(_QWORD *)&v56[15];
  *(_OWORD *)(v23 + 32) = v51;
  *(_OWORD *)(v23 + 48) = v52;
  *(_OWORD *)(v23 + 64) = v53;
  *(_OWORD *)(v23 + 80) = v54;
  *(_OWORD *)v23 = v49;
  *(_OWORD *)(v23 + 16) = v50;
  *(_BYTE *)(a9 + v22[6]) = v16;
  v24 = a9 + v22[7];
  *(_OWORD *)v24 = v31;
  *(_QWORD *)(v24 + 16) = v17;
  sub_1D57DD5B8((uint64_t)v57, a9 + v22[8]);
  v25 = a9 + v22[9];
  *(_QWORD *)v25 = v33;
  *(_QWORD *)(v25 + 8) = v32;
  *(_WORD *)(v25 + 16) = v18;
  v26 = a9 + v22[10];
  *(_BYTE *)v26 = (_BYTE)a6;
  *(_BYTE *)(v26 + 1) = v34;
  *(_WORD *)(v26 + 2) = a7;
  v27 = a9 + v22[11];
  *(_BYTE *)v27 = v41;
  *(_QWORD *)(v27 + 8) = v40;
  *(_QWORD *)(v27 + 16) = v39;
  *(_BYTE *)(v27 + 24) = v38;
  *(_BYTE *)(v27 + 25) = v37;
  *(_QWORD *)(v27 + 32) = v36;
  *(_QWORD *)(v27 + 40) = v35;
  *(_BYTE *)(v27 + 48) = (_BYTE)a8;
  v28 = a9 + v22[12];
  *(_QWORD *)v28 = v47;
  *(_QWORD *)(v28 + 8) = v46;
  *(_BYTE *)(v28 + 16) = v45;
  *(_BYTE *)(v28 + 17) = v44;
  *(_QWORD *)(v28 + 24) = v43;
  *(_QWORD *)(v28 + 32) = v42;
  v29 = (__n128 *)(a9 + v22[13]);
  result = v48;
  *v29 = v48;
  v29[1].n128_u64[0] = v20;
  v29[1].n128_u64[1] = v19;
  return result;
}

uint64_t sub_1D5856A34(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5856A6C + 4 * byte_1D5AB9980[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5856A6C()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D5856B34()
{
  return 0x7461446575737369;
}

uint64_t sub_1D5856B48()
{
  unsigned __int8 *v0;

  return sub_1D5856A34(*v0);
}

uint64_t sub_1D5856B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D585AD10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5856B74()
{
  sub_1D585700C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5856B9C()
{
  sub_1D585700C();
  return sub_1D5AAEEE0();
}

uint64_t ArticleUnsaveEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 *v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  char *v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  __int128 v35;
  uint64_t v37;
  char v38;
  _OWORD v39[2];
  __int128 v40;
  char v41;
  _OWORD v42[7];
  _BYTE v43[23];
  char v44;
  __int128 v45;
  uint64_t v46;
  char v47;

  v3 = v1;
  sub_1D58577D4(0, &qword_1EFF49A50, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v37 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D585700C();
  sub_1D5AAEEC8();
  v47 = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for ArticleUnsaveEvent.Model(0);
    v11 = v3 + v10[5];
    v12 = *(_OWORD *)(v11 + 112);
    v42[6] = *(_OWORD *)(v11 + 96);
    *(_OWORD *)v43 = v12;
    *(_QWORD *)&v43[15] = *(_QWORD *)(v11 + 127);
    v13 = *(_OWORD *)(v11 + 48);
    v42[2] = *(_OWORD *)(v11 + 32);
    v42[3] = v13;
    v14 = *(_OWORD *)(v11 + 80);
    v42[4] = *(_OWORD *)(v11 + 64);
    v42[5] = v14;
    v15 = *(_OWORD *)(v11 + 16);
    v42[0] = *(_OWORD *)v11;
    v42[1] = v15;
    LOBYTE(v39[0]) = 1;
    sub_1D57CB940();
    sub_1D5AAED6C();
    LOBYTE(v42[0]) = *(_BYTE *)(v3 + v10[6]);
    LOBYTE(v39[0]) = 2;
    sub_1D57CC038();
    sub_1D5AAED6C();
    v16 = (__int128 *)(v3 + v10[7]);
    v17 = *((_QWORD *)v16 + 2);
    v45 = *v16;
    v46 = v17;
    v44 = 3;
    sub_1D57C65D4();
    sub_1D5AAED18();
    sub_1D57DD5B8(v3 + v10[8], (uint64_t)v42);
    sub_1D57DD5B8((uint64_t)v42, (uint64_t)v39);
    v38 = 4;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v18 = v3 + v10[9];
    v19 = *(_WORD *)(v18 + 16);
    v39[0] = *(_OWORD *)v18;
    LOWORD(v39[1]) = v19;
    v38 = 5;
    sub_1D57C62A4();
    sub_1D5AAED18();
    v20 = (char *)(v3 + v10[10]);
    v21 = *v20;
    v22 = v20[1];
    LOWORD(v20) = *((_WORD *)v20 + 1);
    LOBYTE(v39[0]) = v21;
    BYTE1(v39[0]) = v22;
    WORD1(v39[0]) = (_WORD)v20;
    v38 = 6;
    sub_1D57C7B24();
    sub_1D5AAED6C();
    v23 = v3 + v10[11];
    v24 = *(_BYTE *)(v23 + 24);
    v25 = *(_BYTE *)(v23 + 25);
    v26 = *(_BYTE *)(v23 + 48);
    LOBYTE(v39[0]) = *(_BYTE *)v23;
    *(_OWORD *)((char *)v39 + 8) = *(_OWORD *)(v23 + 8);
    BYTE8(v39[1]) = v24;
    BYTE9(v39[1]) = v25;
    v40 = *(_OWORD *)(v23 + 32);
    v41 = v26;
    v38 = 7;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v27 = (uint64_t *)(v3 + v10[12]);
    v28 = *v27;
    v29 = v27[1];
    v30 = *((_BYTE *)v27 + 16);
    v31 = *((_BYTE *)v27 + 17);
    v33 = v27[3];
    v32 = v27[4];
    *(_QWORD *)&v39[0] = v28;
    *((_QWORD *)&v39[0] + 1) = v29;
    LOBYTE(v39[1]) = v30;
    BYTE1(v39[1]) = v31;
    *((_QWORD *)&v39[1] + 1) = v33;
    *(_QWORD *)&v40 = v32;
    v38 = 8;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v34 = (_OWORD *)(v3 + v10[13]);
    v35 = v34[1];
    v39[0] = *v34;
    v39[1] = v35;
    v38 = 9;
    sub_1D57C5F1C();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D585700C()
{
  unint64_t result;

  result = qword_1EFF49A58;
  if (!qword_1EFF49A58)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB9C7C, &type metadata for ArticleUnsaveEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49A58);
  }
  return result;
}

uint64_t ArticleUnsaveEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  __int16 v22;
  char *v23;
  char v24;
  __int16 v25;
  char *v26;
  char v27;
  char v28;
  char v29;
  char *v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  __int128 v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  _OWORD v49[2];
  __int128 v50;
  char v51;
  char v52;
  _BYTE v53[144];
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  _BYTE v61[23];
  __int128 v62;
  __int128 v63;
  uint64_t v64;

  v43 = a2;
  v4 = sub_1D5AADF98();
  v46 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58577D4(0, &qword_1EFF49A60, MEMORY[0x1E0DED048]);
  v45 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v41 - v9;
  v64 = type metadata accessor for ArticleUnsaveEvent.Model(0);
  MEMORY[0x1E0C80A78](v64);
  v47 = a1;
  v48 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D585700C();
  v44 = v10;
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  v42 = v8;
  LOBYTE(v62) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v12 = v4;
  v13 = v48;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v48, v6, v12);
  v53[143] = 1;
  sub_1D57CB8FC();
  sub_1D5AAECD0();
  v14 = (int *)v64;
  v15 = &v13[*(int *)(v64 + 20)];
  v16 = *(_OWORD *)v61;
  *((_OWORD *)v15 + 6) = v60;
  *((_OWORD *)v15 + 7) = v16;
  *(_QWORD *)(v15 + 127) = *(_QWORD *)&v61[15];
  v17 = v57;
  *((_OWORD *)v15 + 2) = v56;
  *((_OWORD *)v15 + 3) = v17;
  v18 = v59;
  *((_OWORD *)v15 + 4) = v58;
  *((_OWORD *)v15 + 5) = v18;
  v19 = v55;
  *(_OWORD *)v15 = v54;
  *((_OWORD *)v15 + 1) = v19;
  v53[0] = 2;
  sub_1D57CBFF4();
  sub_1D5AAECD0();
  v13[v14[6]] = v62;
  v53[0] = 3;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v20 = v63;
  v21 = &v13[v14[7]];
  *(_OWORD *)v21 = v62;
  *((_QWORD *)v21 + 2) = v20;
  v53[142] = 4;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  sub_1D57DD5B8((uint64_t)&v62, (uint64_t)v53);
  sub_1D57DD5B8((uint64_t)v53, (uint64_t)&v13[v14[8]]);
  v52 = 5;
  sub_1D57C6260();
  sub_1D5AAEC7C();
  v22 = v49[1];
  v23 = &v13[v14[9]];
  *(_OWORD *)v23 = v49[0];
  *((_WORD *)v23 + 8) = v22;
  v52 = 6;
  sub_1D57C7AE0();
  sub_1D5AAECD0();
  v24 = BYTE1(v49[0]);
  v25 = WORD1(v49[0]);
  v26 = &v13[v14[10]];
  *v26 = v49[0];
  v26[1] = v24;
  *((_WORD *)v26 + 1) = v25;
  v52 = 7;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v27 = BYTE8(v49[1]);
  v28 = BYTE9(v49[1]);
  v29 = v51;
  v30 = &v13[v14[11]];
  *v30 = v49[0];
  *(_OWORD *)(v30 + 8) = *(_OWORD *)((char *)v49 + 8);
  v30[24] = v27;
  v30[25] = v28;
  *((_OWORD *)v30 + 2) = v50;
  v30[48] = v29;
  v52 = 8;
  sub_1D57CB874();
  sub_1D5AAECD0();
  v31 = *((_QWORD *)&v49[0] + 1);
  v32 = v49[1];
  v33 = BYTE1(v49[1]);
  v34 = *((_QWORD *)&v49[1] + 1);
  v35 = v50;
  v36 = &v13[v14[12]];
  *(_QWORD *)v36 = *(_QWORD *)&v49[0];
  *((_QWORD *)v36 + 1) = v31;
  v36[16] = v32;
  v36[17] = v33;
  *((_QWORD *)v36 + 3) = v34;
  *((_QWORD *)v36 + 4) = v35;
  v52 = 9;
  sub_1D57C5ED8();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v45);
  v37 = (uint64_t)v48;
  v38 = &v48[*(int *)(v64 + 52)];
  v39 = v49[1];
  *(_OWORD *)v38 = v49[0];
  *((_OWORD *)v38 + 1) = v39;
  sub_1D5857830(v37, v43);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  return sub_1D5857874(v37);
}

void sub_1D58577D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D585700C();
    v7 = a3(a1, &type metadata for ArticleUnsaveEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5857830(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArticleUnsaveEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5857874(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArticleUnsaveEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58578B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleUnsaveEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58578C4(_QWORD *a1)
{
  return ArticleUnsaveEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58578D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF46FF8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF49A20, a1);
}

uint64_t sub_1D58578FC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47000, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF49A38, a1);
}

uint64_t sub_1D5857920@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v11, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v11, v24);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleUnsaveEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for ArticleUnsaveEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
}

uint64_t initializeWithCopy for ArticleUnsaveEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for ArticleUnsaveEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for ArticleUnsaveEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for ArticleUnsaveEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleUnsaveEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5858DFC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                    v8 = v21;
                    v12 = *(_QWORD *)(v21 - 8);
                    v13 = a3[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ArticleUnsaveEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58590BC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                    v10 = v23;
                    v14 = *(_QWORD *)(v23 - 8);
                    v15 = a4[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5859378()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                    if (v9 <= 0x3F)
                      swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ArticleUnsaveEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  __int128 v52;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v12;
    v10[32] = v11[32];
    v13 = *((_QWORD *)v11 + 6);
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 6) = v13;
    v10[56] = v11[56];
    v10[57] = v11[57];
    v14 = *((_QWORD *)v11 + 9);
    *((_QWORD *)v10 + 8) = *((_QWORD *)v11 + 8);
    *((_QWORD *)v10 + 9) = v14;
    v10[80] = v11[80];
    *(_OWORD *)(v10 + 88) = *(_OWORD *)(v11 + 88);
    *((_QWORD *)v10 + 13) = *((_QWORD *)v11 + 13);
    v10[112] = v11[112];
    *((_QWORD *)v10 + 15) = *((_QWORD *)v11 + 15);
    *((_DWORD *)v10 + 32) = *((_DWORD *)v11 + 32);
    v10[132] = v11[132];
    *(_WORD *)(v10 + 133) = *(_WORD *)(v11 + 133);
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v15 = a3[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = *(_QWORD *)((char *)a2 + v15 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18 == 1)
    {
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
    }
    else
    {
      *v16 = *v17;
      *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
      *((_QWORD *)v16 + 2) = v18;
      swift_bridgeObjectRetain();
    }
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = *((_QWORD *)v22 + 2);
    if (v23)
    {
      *(_WORD *)v21 = *(_WORD *)v22;
      *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
      *((_QWORD *)v21 + 2) = v23;
      *((_QWORD *)v21 + 3) = *((_QWORD *)v22 + 3);
      v24 = *((_QWORD *)v22 + 5);
      *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
      *((_QWORD *)v21 + 5) = v24;
      v25 = *((_QWORD *)v22 + 7);
      *((_QWORD *)v21 + 6) = *((_QWORD *)v22 + 6);
      *((_QWORD *)v21 + 7) = v25;
      v26 = *((_QWORD *)v22 + 9);
      *((_QWORD *)v21 + 8) = *((_QWORD *)v22 + 8);
      *((_QWORD *)v21 + 9) = v26;
      v21[80] = v22[80];
      v27 = *((_QWORD *)v22 + 12);
      *((_QWORD *)v21 + 11) = *((_QWORD *)v22 + 11);
      *((_QWORD *)v21 + 12) = v27;
      *((_QWORD *)v21 + 13) = *((_QWORD *)v22 + 13);
      v21[112] = v22[112];
      v28 = *((_QWORD *)v22 + 16);
      *((_QWORD *)v21 + 15) = *((_QWORD *)v22 + 15);
      *((_QWORD *)v21 + 16) = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v29 = *((_OWORD *)v22 + 7);
      *((_OWORD *)v21 + 6) = *((_OWORD *)v22 + 6);
      *((_OWORD *)v21 + 7) = v29;
      *((_QWORD *)v21 + 16) = *((_QWORD *)v22 + 16);
      v30 = *((_OWORD *)v22 + 3);
      *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
      *((_OWORD *)v21 + 3) = v30;
      v31 = *((_OWORD *)v22 + 5);
      *((_OWORD *)v21 + 4) = *((_OWORD *)v22 + 4);
      *((_OWORD *)v21 + 5) = v31;
      v32 = *((_OWORD *)v22 + 1);
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v32;
    }
    v33 = a3[9];
    v34 = a3[10];
    v35 = (char *)a1 + v33;
    v36 = (char *)a2 + v33;
    v37 = *((_QWORD *)v36 + 1);
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *((_QWORD *)v35 + 1) = v37;
    *((_WORD *)v35 + 8) = *((_WORD *)v36 + 8);
    *(_DWORD *)((char *)a1 + v34) = *(_DWORD *)((char *)a2 + v34);
    v38 = a3[11];
    v39 = a3[12];
    v40 = (char *)a1 + v38;
    v41 = (char *)a2 + v38;
    *v40 = *v41;
    v42 = *((_QWORD *)v41 + 2);
    *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
    *((_QWORD *)v40 + 2) = v42;
    v40[24] = v41[24];
    v40[25] = v41[25];
    v43 = *((_QWORD *)v41 + 5);
    *((_QWORD *)v40 + 4) = *((_QWORD *)v41 + 4);
    *((_QWORD *)v40 + 5) = v43;
    v40[48] = v41[48];
    v44 = (char *)a1 + v39;
    v45 = (char *)a2 + v39;
    v46 = *((_QWORD *)v45 + 1);
    *(_QWORD *)v44 = *(_QWORD *)v45;
    *((_QWORD *)v44 + 1) = v46;
    v44[16] = v45[16];
    v44[17] = v45[17];
    v47 = *((_QWORD *)v45 + 4);
    *((_QWORD *)v44 + 3) = *((_QWORD *)v45 + 3);
    *((_QWORD *)v44 + 4) = v47;
    v48 = a3[13];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    v51 = *(_QWORD *)((char *)a2 + v48 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v51)
    {
      *(_QWORD *)v49 = *(_QWORD *)v50;
      *((_QWORD *)v49 + 1) = v51;
      *((_WORD *)v49 + 8) = *((_WORD *)v50 + 8);
      *((_QWORD *)v49 + 3) = *((_QWORD *)v50 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v52 = *((_OWORD *)v50 + 1);
      *(_OWORD *)v49 = *(_OWORD *)v50;
      *((_OWORD *)v49 + 1) = v52;
    }
  }
  return a1;
}

uint64_t destroy for ArticleUnsaveEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[7] + 16) != 1)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[8] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + a2[13] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ArticleUnsaveEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  v12 = *(_QWORD *)(v10 + 48);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 48) = v12;
  *(_BYTE *)(v9 + 56) = *(_BYTE *)(v10 + 56);
  *(_BYTE *)(v9 + 57) = *(_BYTE *)(v10 + 57);
  v13 = *(_QWORD *)(v10 + 72);
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v9 + 72) = v13;
  *(_BYTE *)(v9 + 80) = *(_BYTE *)(v10 + 80);
  *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
  *(_QWORD *)(v9 + 104) = *(_QWORD *)(v10 + 104);
  *(_BYTE *)(v9 + 112) = *(_BYTE *)(v10 + 112);
  *(_QWORD *)(v9 + 120) = *(_QWORD *)(v10 + 120);
  *(_DWORD *)(v9 + 128) = *(_DWORD *)(v10 + 128);
  *(_BYTE *)(v9 + 132) = *(_BYTE *)(v10 + 132);
  *(_WORD *)(v9 + 133) = *(_WORD *)(v10 + 133);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)(a2 + v14 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v17 == 1)
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  }
  else
  {
    *(_BYTE *)v15 = *(_BYTE *)v16;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
    *(_QWORD *)(v15 + 16) = v17;
    swift_bridgeObjectRetain();
  }
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    *(_WORD *)v19 = *(_WORD *)v20;
    *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
    *(_QWORD *)(v19 + 16) = v21;
    *(_QWORD *)(v19 + 24) = *(_QWORD *)(v20 + 24);
    v22 = *(_QWORD *)(v20 + 40);
    *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
    *(_QWORD *)(v19 + 40) = v22;
    v23 = *(_QWORD *)(v20 + 56);
    *(_QWORD *)(v19 + 48) = *(_QWORD *)(v20 + 48);
    *(_QWORD *)(v19 + 56) = v23;
    v24 = *(_QWORD *)(v20 + 72);
    *(_QWORD *)(v19 + 64) = *(_QWORD *)(v20 + 64);
    *(_QWORD *)(v19 + 72) = v24;
    *(_BYTE *)(v19 + 80) = *(_BYTE *)(v20 + 80);
    v25 = *(_QWORD *)(v20 + 96);
    *(_QWORD *)(v19 + 88) = *(_QWORD *)(v20 + 88);
    *(_QWORD *)(v19 + 96) = v25;
    *(_QWORD *)(v19 + 104) = *(_QWORD *)(v20 + 104);
    *(_BYTE *)(v19 + 112) = *(_BYTE *)(v20 + 112);
    v26 = *(_QWORD *)(v20 + 128);
    *(_QWORD *)(v19 + 120) = *(_QWORD *)(v20 + 120);
    *(_QWORD *)(v19 + 128) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v27 = *(_OWORD *)(v20 + 112);
    *(_OWORD *)(v19 + 96) = *(_OWORD *)(v20 + 96);
    *(_OWORD *)(v19 + 112) = v27;
    *(_QWORD *)(v19 + 128) = *(_QWORD *)(v20 + 128);
    v28 = *(_OWORD *)(v20 + 48);
    *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
    *(_OWORD *)(v19 + 48) = v28;
    v29 = *(_OWORD *)(v20 + 80);
    *(_OWORD *)(v19 + 64) = *(_OWORD *)(v20 + 64);
    *(_OWORD *)(v19 + 80) = v29;
    v30 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 16) = v30;
  }
  v31 = a3[9];
  v32 = a3[10];
  v33 = a1 + v31;
  v34 = a2 + v31;
  v35 = *(_QWORD *)(v34 + 8);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_QWORD *)(v33 + 8) = v35;
  *(_WORD *)(v33 + 16) = *(_WORD *)(v34 + 16);
  *(_DWORD *)(a1 + v32) = *(_DWORD *)(a2 + v32);
  v36 = a3[11];
  v37 = a3[12];
  v38 = a1 + v36;
  v39 = a2 + v36;
  *(_BYTE *)v38 = *(_BYTE *)v39;
  v40 = *(_QWORD *)(v39 + 16);
  *(_QWORD *)(v38 + 8) = *(_QWORD *)(v39 + 8);
  *(_QWORD *)(v38 + 16) = v40;
  *(_BYTE *)(v38 + 24) = *(_BYTE *)(v39 + 24);
  *(_BYTE *)(v38 + 25) = *(_BYTE *)(v39 + 25);
  v41 = *(_QWORD *)(v39 + 40);
  *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
  *(_QWORD *)(v38 + 40) = v41;
  *(_BYTE *)(v38 + 48) = *(_BYTE *)(v39 + 48);
  v42 = a1 + v37;
  v43 = a2 + v37;
  v44 = *(_QWORD *)(v43 + 8);
  *(_QWORD *)v42 = *(_QWORD *)v43;
  *(_QWORD *)(v42 + 8) = v44;
  *(_BYTE *)(v42 + 16) = *(_BYTE *)(v43 + 16);
  *(_BYTE *)(v42 + 17) = *(_BYTE *)(v43 + 17);
  v45 = *(_QWORD *)(v43 + 32);
  *(_QWORD *)(v42 + 24) = *(_QWORD *)(v43 + 24);
  *(_QWORD *)(v42 + 32) = v45;
  v46 = a3[13];
  v47 = a1 + v46;
  v48 = a2 + v46;
  v49 = *(_QWORD *)(a2 + v46 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v49)
  {
    *(_QWORD *)v47 = *(_QWORD *)v48;
    *(_QWORD *)(v47 + 8) = v49;
    *(_WORD *)(v47 + 16) = *(_WORD *)(v48 + 16);
    *(_QWORD *)(v47 + 24) = *(_QWORD *)(v48 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v50 = *(_OWORD *)(v48 + 16);
    *(_OWORD *)v47 = *(_OWORD *)v48;
    *(_OWORD *)(v47 + 16) = v50;
  }
  return a1;
}

uint64_t assignWithCopy for ArticleUnsaveEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(a2 + v7 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  v10 = *(_QWORD *)(v9 + 48);
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_QWORD *)(v8 + 48) = v10;
  *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  *(_QWORD *)(v8 + 72) = v11;
  *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
  *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
  *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
  *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
  *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = (__int128 *)(a2 + v12);
  v15 = *(_QWORD *)(a1 + v12 + 16);
  v16 = *(_QWORD *)(a2 + v12 + 16);
  if (v15 == 1)
  {
    if (v16 == 1)
    {
      v17 = *v14;
      *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
      *(_OWORD *)v13 = v17;
    }
    else
    {
      *(_BYTE *)v13 = *(_BYTE *)v14;
      *(_QWORD *)(v13 + 8) = *((_QWORD *)v14 + 1);
      *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v16 == 1)
  {
    sub_1D57D9100(v13);
    v18 = *((_QWORD *)v14 + 2);
    *(_OWORD *)v13 = *v14;
    *(_QWORD *)(v13 + 16) = v18;
  }
  else
  {
    *(_BYTE *)v13 = *(_BYTE *)v14;
    *(_QWORD *)(v13 + 8) = *((_QWORD *)v14 + 1);
    *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_QWORD *)(a1 + v19 + 16);
  v23 = *(_QWORD *)(a2 + v19 + 16);
  if (v22)
  {
    if (v23)
    {
      *(_BYTE *)v20 = *(_BYTE *)v21;
      *(_BYTE *)(v20 + 1) = *(_BYTE *)(v21 + 1);
      *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
      *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v20 + 24) = *(_DWORD *)(v21 + 24);
      *(_DWORD *)(v20 + 28) = *(_DWORD *)(v21 + 28);
      *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 40) = *(_QWORD *)(v21 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 48) = *(_QWORD *)(v21 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 56) = *(_QWORD *)(v21 + 56);
      *(_QWORD *)(v20 + 64) = *(_QWORD *)(v21 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 72) = *(_QWORD *)(v21 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v20 + 80) = *(_BYTE *)(v21 + 80);
      *(_QWORD *)(v20 + 88) = *(_QWORD *)(v21 + 88);
      *(_QWORD *)(v20 + 96) = *(_QWORD *)(v21 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v24 = *(_QWORD *)(v21 + 104);
      *(_BYTE *)(v20 + 112) = *(_BYTE *)(v21 + 112);
      *(_QWORD *)(v20 + 104) = v24;
      *(_QWORD *)(v20 + 120) = *(_QWORD *)(v21 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v20);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      v26 = *(_OWORD *)(v21 + 64);
      v28 = *(_OWORD *)(v21 + 16);
      v27 = *(_OWORD *)(v21 + 32);
      *(_OWORD *)(v20 + 48) = *(_OWORD *)(v21 + 48);
      *(_OWORD *)(v20 + 64) = v26;
      *(_OWORD *)(v20 + 16) = v28;
      *(_OWORD *)(v20 + 32) = v27;
      v30 = *(_OWORD *)(v21 + 96);
      v29 = *(_OWORD *)(v21 + 112);
      v31 = *(_OWORD *)(v21 + 80);
      *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
      *(_OWORD *)(v20 + 96) = v30;
      *(_OWORD *)(v20 + 112) = v29;
      *(_OWORD *)(v20 + 80) = v31;
    }
  }
  else if (v23)
  {
    *(_BYTE *)v20 = *(_BYTE *)v21;
    *(_BYTE *)(v20 + 1) = *(_BYTE *)(v21 + 1);
    *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
    *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
    *(_DWORD *)(v20 + 24) = *(_DWORD *)(v21 + 24);
    *(_DWORD *)(v20 + 28) = *(_DWORD *)(v21 + 28);
    *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
    *(_QWORD *)(v20 + 40) = *(_QWORD *)(v21 + 40);
    *(_QWORD *)(v20 + 48) = *(_QWORD *)(v21 + 48);
    *(_QWORD *)(v20 + 56) = *(_QWORD *)(v21 + 56);
    *(_QWORD *)(v20 + 64) = *(_QWORD *)(v21 + 64);
    *(_QWORD *)(v20 + 72) = *(_QWORD *)(v21 + 72);
    *(_BYTE *)(v20 + 80) = *(_BYTE *)(v21 + 80);
    *(_QWORD *)(v20 + 88) = *(_QWORD *)(v21 + 88);
    *(_QWORD *)(v20 + 96) = *(_QWORD *)(v21 + 96);
    v25 = *(_QWORD *)(v21 + 104);
    *(_BYTE *)(v20 + 112) = *(_BYTE *)(v21 + 112);
    *(_QWORD *)(v20 + 104) = v25;
    *(_QWORD *)(v20 + 120) = *(_QWORD *)(v21 + 120);
    *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
    v32 = *(_OWORD *)(v21 + 16);
    v33 = *(_OWORD *)(v21 + 32);
    v34 = *(_OWORD *)(v21 + 64);
    *(_OWORD *)(v20 + 48) = *(_OWORD *)(v21 + 48);
    *(_OWORD *)(v20 + 64) = v34;
    *(_OWORD *)(v20 + 16) = v32;
    *(_OWORD *)(v20 + 32) = v33;
    v35 = *(_OWORD *)(v21 + 80);
    v36 = *(_OWORD *)(v21 + 96);
    v37 = *(_OWORD *)(v21 + 112);
    *(_QWORD *)(v20 + 128) = *(_QWORD *)(v21 + 128);
    *(_OWORD *)(v20 + 96) = v36;
    *(_OWORD *)(v20 + 112) = v37;
    *(_OWORD *)(v20 + 80) = v35;
  }
  v38 = a3[9];
  v39 = a1 + v38;
  v40 = a2 + v38;
  *(_QWORD *)v39 = *(_QWORD *)(a2 + v38);
  *(_QWORD *)(v39 + 8) = *(_QWORD *)(a2 + v38 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v39 + 16) = *(_BYTE *)(v40 + 16);
  *(_BYTE *)(v39 + 17) = *(_BYTE *)(v40 + 17);
  v41 = a3[10];
  v42 = (_BYTE *)(a1 + v41);
  v43 = (_BYTE *)(a2 + v41);
  *v42 = *v43;
  v42[1] = v43[1];
  v42[2] = v43[2];
  v42[3] = v43[3];
  v44 = a3[11];
  v45 = a1 + v44;
  v46 = a2 + v44;
  *(_BYTE *)v45 = *(_BYTE *)(a2 + v44);
  *(_QWORD *)(v45 + 8) = *(_QWORD *)(a2 + v44 + 8);
  *(_QWORD *)(v45 + 16) = *(_QWORD *)(a2 + v44 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v45 + 24) = *(_BYTE *)(v46 + 24);
  *(_BYTE *)(v45 + 25) = *(_BYTE *)(v46 + 25);
  *(_QWORD *)(v45 + 32) = *(_QWORD *)(v46 + 32);
  *(_QWORD *)(v45 + 40) = *(_QWORD *)(v46 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v45 + 48) = *(_BYTE *)(v46 + 48);
  v47 = a3[12];
  v48 = a1 + v47;
  v49 = a2 + v47;
  *(_QWORD *)v48 = *(_QWORD *)(a2 + v47);
  *(_QWORD *)(v48 + 8) = *(_QWORD *)(a2 + v47 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v48 + 16) = *(_BYTE *)(v49 + 16);
  *(_BYTE *)(v48 + 17) = *(_BYTE *)(v49 + 17);
  *(_QWORD *)(v48 + 24) = *(_QWORD *)(v49 + 24);
  *(_QWORD *)(v48 + 32) = *(_QWORD *)(v49 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v50 = a3[13];
  v51 = a1 + v50;
  v52 = a2 + v50;
  v53 = *(_QWORD *)(a1 + v50 + 8);
  v54 = *(_QWORD *)(v52 + 8);
  if (v53)
  {
    if (v54)
    {
      *(_QWORD *)v51 = *(_QWORD *)v52;
      *(_QWORD *)(v51 + 8) = *(_QWORD *)(v52 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v51 + 16) = *(_BYTE *)(v52 + 16);
      *(_BYTE *)(v51 + 17) = *(_BYTE *)(v52 + 17);
      *(_QWORD *)(v51 + 24) = *(_QWORD *)(v52 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE47C(v51);
      v55 = *(_OWORD *)(v52 + 16);
      *(_OWORD *)v51 = *(_OWORD *)v52;
      *(_OWORD *)(v51 + 16) = v55;
    }
  }
  else if (v54)
  {
    *(_QWORD *)v51 = *(_QWORD *)v52;
    *(_QWORD *)(v51 + 8) = *(_QWORD *)(v52 + 8);
    *(_BYTE *)(v51 + 16) = *(_BYTE *)(v52 + 16);
    *(_BYTE *)(v51 + 17) = *(_BYTE *)(v52 + 17);
    *(_QWORD *)(v51 + 24) = *(_QWORD *)(v52 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v56 = *(_OWORD *)(v52 + 16);
    *(_OWORD *)v51 = *(_OWORD *)v52;
    *(_OWORD *)(v51 + 16) = v56;
  }
  return a1;
}

uint64_t initializeWithTake for ArticleUnsaveEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  _OWORD *v38;
  _OWORD *v39;
  __int128 v40;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  *(_QWORD *)(v9 + 127) = *(_QWORD *)(v10 + 127);
  v12 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v12;
  v13 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v13;
  v14 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v14;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  v19 = a1 + v16;
  v20 = a2 + v16;
  v21 = *(_OWORD *)(v20 + 48);
  *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
  *(_OWORD *)(v19 + 48) = v21;
  *(_QWORD *)(v19 + 128) = *(_QWORD *)(v20 + 128);
  v22 = *(_OWORD *)(v20 + 112);
  *(_OWORD *)(v19 + 96) = *(_OWORD *)(v20 + 96);
  *(_OWORD *)(v19 + 112) = v22;
  v23 = *(_OWORD *)(v20 + 80);
  *(_OWORD *)(v19 + 64) = *(_OWORD *)(v20 + 64);
  *(_OWORD *)(v19 + 80) = v23;
  v24 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v24;
  v25 = a3[9];
  v26 = a3[10];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_WORD *)(v27 + 16) = *(_WORD *)(v28 + 16);
  *(_DWORD *)(a1 + v26) = *(_DWORD *)(a2 + v26);
  v29 = a3[11];
  v30 = a3[12];
  v31 = a1 + v29;
  v32 = a2 + v29;
  v33 = *(_OWORD *)(v32 + 16);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v33;
  *(_OWORD *)(v31 + 32) = *(_OWORD *)(v32 + 32);
  *(_BYTE *)(v31 + 48) = *(_BYTE *)(v32 + 48);
  v34 = a1 + v30;
  v35 = a2 + v30;
  v36 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v36;
  *(_QWORD *)(v34 + 32) = *(_QWORD *)(v35 + 32);
  v37 = a3[13];
  v38 = (_OWORD *)(a1 + v37);
  v39 = (_OWORD *)(a2 + v37);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  return a1;
}

uint64_t assignWithTake for ArticleUnsaveEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(a2 + v7 + 8);
  v10 = *(_QWORD *)(a2 + v7 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v11 = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = v11;
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
  *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
  *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
  *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
  *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
  v12 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  if (*(_QWORD *)(a1 + v12 + 16) == 1)
    goto LABEL_4;
  v15 = *(_QWORD *)(v14 + 16);
  if (v15 == 1)
  {
    sub_1D57D9100(a1 + v12);
LABEL_4:
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
    goto LABEL_6;
  }
  *(_BYTE *)v13 = *(_BYTE *)v14;
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 16) = v15;
  swift_bridgeObjectRelease();
LABEL_6:
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  if (*(_QWORD *)(a1 + v16 + 16))
  {
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      *(_WORD *)v17 = *(_WORD *)v18;
      *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
      *(_QWORD *)(v17 + 16) = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
      *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 40) = *(_QWORD *)(v18 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 48) = *(_QWORD *)(v18 + 48);
      swift_bridgeObjectRelease();
      v20 = *(_QWORD *)(v18 + 64);
      *(_QWORD *)(v17 + 56) = *(_QWORD *)(v18 + 56);
      *(_QWORD *)(v17 + 64) = v20;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 72) = *(_QWORD *)(v18 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v17 + 80) = *(_BYTE *)(v18 + 80);
      v21 = *(_QWORD *)(v18 + 96);
      *(_QWORD *)(v17 + 88) = *(_QWORD *)(v18 + 88);
      *(_QWORD *)(v17 + 96) = v21;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 104) = *(_QWORD *)(v18 + 104);
      *(_BYTE *)(v17 + 112) = *(_BYTE *)(v18 + 112);
      *(_QWORD *)(v17 + 120) = *(_QWORD *)(v18 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 128) = *(_QWORD *)(v18 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D57E17B8(v17);
  }
  v22 = *(_OWORD *)(v18 + 112);
  *(_OWORD *)(v17 + 96) = *(_OWORD *)(v18 + 96);
  *(_OWORD *)(v17 + 112) = v22;
  *(_QWORD *)(v17 + 128) = *(_QWORD *)(v18 + 128);
  v23 = *(_OWORD *)(v18 + 48);
  *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
  *(_OWORD *)(v17 + 48) = v23;
  v24 = *(_OWORD *)(v18 + 80);
  *(_OWORD *)(v17 + 64) = *(_OWORD *)(v18 + 64);
  *(_OWORD *)(v17 + 80) = v24;
  v25 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v25;
LABEL_11:
  v26 = a3[9];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_QWORD *)(a2 + v26 + 8);
  *(_QWORD *)v27 = *(_QWORD *)(a2 + v26);
  *(_QWORD *)(v27 + 8) = v29;
  swift_bridgeObjectRelease();
  *(_WORD *)(v27 + 16) = *(_WORD *)(v28 + 16);
  v30 = a3[10];
  v31 = a3[11];
  v32 = a1 + v30;
  v33 = a2 + v30;
  *(_BYTE *)v32 = *(_BYTE *)v33;
  *(_BYTE *)(v32 + 1) = *(_BYTE *)(v33 + 1);
  *(_WORD *)(v32 + 2) = *(_WORD *)(v33 + 2);
  v34 = a1 + v31;
  v35 = a2 + v31;
  *(_BYTE *)v34 = *(_BYTE *)(a2 + v31);
  v36 = *(_QWORD *)(a2 + v31 + 8);
  v37 = *(_QWORD *)(a2 + v31 + 16);
  *(_QWORD *)(v34 + 8) = v36;
  *(_QWORD *)(v34 + 16) = v37;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v34 + 24) = *(_BYTE *)(v35 + 24);
  *(_BYTE *)(v34 + 25) = *(_BYTE *)(v35 + 25);
  v38 = *(_QWORD *)(v35 + 40);
  *(_QWORD *)(v34 + 32) = *(_QWORD *)(v35 + 32);
  *(_QWORD *)(v34 + 40) = v38;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v34 + 48) = *(_BYTE *)(v35 + 48);
  v39 = a3[12];
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = *(_QWORD *)(a2 + v39 + 8);
  *(_QWORD *)v40 = *(_QWORD *)(a2 + v39);
  *(_QWORD *)(v40 + 8) = v42;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v40 + 16) = *(_BYTE *)(v41 + 16);
  *(_BYTE *)(v40 + 17) = *(_BYTE *)(v41 + 17);
  v43 = *(_QWORD *)(v41 + 32);
  *(_QWORD *)(v40 + 24) = *(_QWORD *)(v41 + 24);
  *(_QWORD *)(v40 + 32) = v43;
  swift_bridgeObjectRelease();
  v44 = a3[13];
  v45 = a1 + v44;
  v46 = a2 + v44;
  if (!*(_QWORD *)(a1 + v44 + 8))
  {
LABEL_15:
    v48 = *(_OWORD *)(v46 + 16);
    *(_OWORD *)v45 = *(_OWORD *)v46;
    *(_OWORD *)(v45 + 16) = v48;
    return a1;
  }
  v47 = *(_QWORD *)(v46 + 8);
  if (!v47)
  {
    sub_1D57EE47C(v45);
    goto LABEL_15;
  }
  *(_QWORD *)v45 = *(_QWORD *)v46;
  *(_QWORD *)(v45 + 8) = v47;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v45 + 16) = *(_BYTE *)(v46 + 16);
  *(_BYTE *)(v45 + 17) = *(_BYTE *)(v46 + 17);
  *(_QWORD *)(v45 + 24) = *(_QWORD *)(v46 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleUnsaveEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D585A9A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleUnsaveEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D585AA30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_1D585AAAC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ArticleUnsaveEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1D585ABB8 + 4 * byte_1D5AB998F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1D585ABEC + 4 * byte_1D5AB998A[v4]))();
}

uint64_t sub_1D585ABEC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D585ABF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D585ABFCLL);
  return result;
}

uint64_t sub_1D585AC08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D585AC10);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1D585AC14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D585AC1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleUnsaveEvent.Model.CodingKeys()
{
  return &type metadata for ArticleUnsaveEvent.Model.CodingKeys;
}

unint64_t sub_1D585AC3C()
{
  unint64_t result;

  result = qword_1EFF49A68;
  if (!qword_1EFF49A68)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB9C54, &type metadata for ArticleUnsaveEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49A68);
  }
  return result;
}

unint64_t sub_1D585AC84()
{
  unint64_t result;

  result = qword_1EFF49A70;
  if (!qword_1EFF49A70)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB9BC4, &type metadata for ArticleUnsaveEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49A70);
  }
  return result;
}

unint64_t sub_1D585ACCC()
{
  unint64_t result;

  result = qword_1EFF49A78;
  if (!qword_1EFF49A78)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB9BEC, &type metadata for ArticleUnsaveEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49A78);
  }
  return result;
}

uint64_t sub_1D585AD10(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61446E6F69746361 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEC9F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_1D585B160(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF49A80, MEMORY[0x1E0CF8078]);
}

uint64_t static FavoriteTagEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47008, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF49A80, a1);
}

uint64_t sub_1D585B1A0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF49A98, MEMORY[0x1E0CF8380]);
}

uint64_t static FavoriteTagEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47010, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF49A98, a1);
}

uint64_t FavoriteTagEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t FavoriteTagEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*FavoriteTagEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t FavoriteTagEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FavoriteTagEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for FavoriteTagEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF49B20);
}

uint64_t FavoriteTagEvent.tagData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FavoriteTagEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FavoriteTagEvent.tagData.modify())()
{
  type metadata accessor for FavoriteTagEvent(0);
  return nullsub_1;
}

uint64_t FavoriteTagEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FavoriteTagEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FavoriteTagEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FavoriteTagEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FavoriteTagEvent.viewData.modify())()
{
  type metadata accessor for FavoriteTagEvent(0);
  return nullsub_1;
}

uint64_t FavoriteTagEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FavoriteTagEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FavoriteTagEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FavoriteTagEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FavoriteTagEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for FavoriteTagEvent(0);
  return nullsub_1;
}

uint64_t FavoriteTagEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for FavoriteTagEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
}

uint64_t FavoriteTagEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t FavoriteTagEvent.Model.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for FavoriteTagEvent.Model(0) + 20));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FavoriteTagEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF49BB8);
}

uint64_t FavoriteTagEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FavoriteTagEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t FavoriteTagEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for FavoriteTagEvent.Model(0) + 28));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

int *FavoriteTagEvent.Model.init(eventData:tagData:viewData:userBundleSubscriptionContextData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *result;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  v7 = *a2;
  v8 = a2[1];
  v9 = *a3;
  v10 = a3[1];
  v11 = *((_WORD *)a3 + 8);
  v12 = *a4;
  v13 = *((_QWORD *)a4 + 1);
  v14 = *((_QWORD *)a4 + 2);
  v23 = a4[25];
  v24 = a4[24];
  v21 = *((_QWORD *)a4 + 5);
  v22 = *((_QWORD *)a4 + 4);
  v20 = a4[48];
  v15 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a5, a1, v15);
  result = (int *)type metadata accessor for FavoriteTagEvent.Model(0);
  v17 = (_QWORD *)(a5 + result[5]);
  *v17 = v7;
  v17[1] = v8;
  v18 = a5 + result[6];
  *(_QWORD *)v18 = v9;
  *(_QWORD *)(v18 + 8) = v10;
  *(_WORD *)(v18 + 16) = v11;
  v19 = a5 + result[7];
  *(_BYTE *)v19 = v12;
  *(_QWORD *)(v19 + 8) = v13;
  *(_QWORD *)(v19 + 16) = v14;
  *(_BYTE *)(v19 + 24) = v24;
  *(_BYTE *)(v19 + 25) = v23;
  *(_QWORD *)(v19 + 32) = v22;
  *(_QWORD *)(v19 + 40) = v21;
  *(_BYTE *)(v19 + 48) = v20;
  return result;
}

uint64_t sub_1D585B848()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D585B87C + 4 * byte_1D5AB9CD0[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D585B87C()
{
  return 0x61746144676174;
}

uint64_t sub_1D585B894()
{
  return 0x6174614477656976;
}

unint64_t sub_1D585B8AC()
{
  return 0xD000000000000021;
}

uint64_t sub_1D585B8C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D585D4D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D585B8EC()
{
  sub_1D585BB6C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D585B914()
{
  sub_1D585BB6C();
  return sub_1D5AAEEE0();
}

uint64_t FavoriteTagEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  char v25;
  char v26;
  __int128 v27;
  char v28;
  char v29;

  v3 = v1;
  sub_1D585BF60(0, &qword_1EFF49AB0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D585BB6C();
  sub_1D5AAEEC8();
  LOBYTE(v23) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for FavoriteTagEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v13 = *v11;
    v12 = v11[1];
    v23 = v13;
    *(_QWORD *)&v24 = v12;
    v29 = 1;
    sub_1D57C6738();
    sub_1D5AAED6C();
    v14 = (uint64_t *)(v3 + v10[6]);
    v15 = *v14;
    v16 = v14[1];
    LOWORD(v14) = *((_WORD *)v14 + 8);
    v23 = v15;
    *(_QWORD *)&v24 = v16;
    WORD4(v24) = (_WORD)v14;
    v29 = 2;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v17 = v3 + v10[7];
    v18 = *(_BYTE *)(v17 + 24);
    v19 = *(_BYTE *)(v17 + 25);
    v20 = *(_BYTE *)(v17 + 48);
    LOBYTE(v23) = *(_BYTE *)v17;
    v24 = *(_OWORD *)(v17 + 8);
    v25 = v18;
    v26 = v19;
    v27 = *(_OWORD *)(v17 + 32);
    v28 = v20;
    v29 = 3;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D585BB6C()
{
  unint64_t result;

  result = qword_1EFF49AB8;
  if (!qword_1EFF49AB8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB9ED4, &type metadata for FavoriteTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49AB8);
  }
  return result;
}

uint64_t FavoriteTagEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __int16 v19;
  char *v20;
  char v21;
  char v22;
  char v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  __int128 v34;
  char v35;
  char v36;
  __int128 v37;
  char v38;
  char v39;

  v27 = a2;
  v3 = sub_1D5AADF98();
  v28 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D585BF60(0, &qword_1EFF49AC0, MEMORY[0x1E0DED048]);
  v29 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - v7;
  v9 = (int *)type metadata accessor for FavoriteTagEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D585BB6C();
  v31 = v8;
  v12 = (uint64_t)v32;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v32 = a1;
  v14 = v28;
  LOBYTE(v33) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v15 = v29;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v30, v3);
  v39 = 1;
  sub_1D57C66F4();
  sub_1D5AAECD0();
  v16 = v34;
  v17 = &v11[v9[5]];
  *(_QWORD *)v17 = v33;
  *((_QWORD *)v17 + 1) = v16;
  v39 = 2;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v18 = v34;
  v19 = WORD4(v34);
  v20 = &v11[v9[6]];
  *(_QWORD *)v20 = v33;
  *((_QWORD *)v20 + 1) = v18;
  *((_WORD *)v20 + 8) = v19;
  v39 = 3;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v31, v15);
  v21 = v35;
  v22 = v36;
  v23 = v38;
  v24 = &v11[v9[7]];
  *v24 = v33;
  *(_OWORD *)(v24 + 8) = v34;
  v24[24] = v21;
  v24[25] = v22;
  *((_OWORD *)v24 + 2) = v37;
  v24[48] = v23;
  sub_1D585BFBC((uint64_t)v11, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return sub_1D585C000((uint64_t)v11);
}

void sub_1D585BF60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D585BB6C();
    v7 = a3(a1, &type metadata for FavoriteTagEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D585BFBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FavoriteTagEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D585C000(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FavoriteTagEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D585C03C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FavoriteTagEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D585C050(_QWORD *a1)
{
  return FavoriteTagEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D585C064@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47008, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF49A80, a1);
}

uint64_t sub_1D585C088@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47010, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF49A98, a1);
}

uint64_t sub_1D585C0AC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for FavoriteTagEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for FavoriteTagEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t initializeWithCopy for FavoriteTagEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for FavoriteTagEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for FavoriteTagEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for FavoriteTagEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for FavoriteTagEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D585C944(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for FavoriteTagEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D585CA6C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D585CB90()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for FavoriteTagEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    *((_WORD *)v13 + 8) = *((_WORD *)v14 + 8);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    *v17 = *v18;
    v19 = *((_QWORD *)v18 + 2);
    *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
    *((_QWORD *)v17 + 2) = v19;
    v17[24] = v18[24];
    v17[25] = v18[25];
    v20 = *((_QWORD *)v18 + 5);
    *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
    *((_QWORD *)v17 + 5) = v20;
    v17[48] = v18[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FavoriteTagEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FavoriteTagEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_QWORD *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v14;
  *(_WORD *)(v12 + 16) = *(_WORD *)(v13 + 16);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_BYTE *)v16 = *(_BYTE *)v17;
  v18 = *(_QWORD *)(v17 + 16);
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
  *(_QWORD *)(v16 + 16) = v18;
  *(_BYTE *)(v16 + 24) = *(_BYTE *)(v17 + 24);
  *(_BYTE *)(v16 + 25) = *(_BYTE *)(v17 + 25);
  v19 = *(_QWORD *)(v17 + 40);
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  *(_QWORD *)(v16 + 40) = v19;
  *(_BYTE *)(v16 + 48) = *(_BYTE *)(v17 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FavoriteTagEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  *(_BYTE *)(v11 + 17) = *(_BYTE *)(v12 + 17);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_BYTE *)v14 = *(_BYTE *)v15;
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 24) = *(_BYTE *)(v15 + 24);
  *(_BYTE *)(v14 + 25) = *(_BYTE *)(v15 + 25);
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  *(_QWORD *)(v14 + 40) = *(_QWORD *)(v15 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 48) = *(_BYTE *)(v15 + 48);
  return a1;
}

uint64_t initializeWithTake for FavoriteTagEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_WORD *)(v8 + 16) = *(_WORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v12 + 32);
  *(_BYTE *)(v11 + 48) = *(_BYTE *)(v12 + 48);
  return a1;
}

uint64_t assignWithTake for FavoriteTagEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_BYTE *)v17 = *(_BYTE *)v18;
  v19 = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  *(_QWORD *)(v17 + 16) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 24) = *(_BYTE *)(v18 + 24);
  *(_BYTE *)(v17 + 25) = *(_BYTE *)(v18 + 25);
  v20 = *(_QWORD *)(v18 + 40);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 40) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 48) = *(_BYTE *)(v18 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for FavoriteTagEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D585D1A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for FavoriteTagEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D585D230(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D585D2AC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FavoriteTagEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D585D37C + 4 * byte_1D5AB9CD9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D585D3B0 + 4 * byte_1D5AB9CD4[v4]))();
}

uint64_t sub_1D585D3B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D585D3B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D585D3C0);
  return result;
}

uint64_t sub_1D585D3CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D585D3D4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D585D3D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D585D3E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FavoriteTagEvent.Model.CodingKeys()
{
  return &type metadata for FavoriteTagEvent.Model.CodingKeys;
}

unint64_t sub_1D585D400()
{
  unint64_t result;

  result = qword_1EFF49BF8;
  if (!qword_1EFF49BF8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB9EAC, &type metadata for FavoriteTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49BF8);
  }
  return result;
}

unint64_t sub_1D585D448()
{
  unint64_t result;

  result = qword_1EFF49C00;
  if (!qword_1EFF49C00)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB9E1C, &type metadata for FavoriteTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49C00);
  }
  return result;
}

unint64_t sub_1D585D490()
{
  unint64_t result;

  result = qword_1EFF49C08;
  if (!qword_1EFF49C08)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AB9E44, &type metadata for FavoriteTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49C08);
  }
  return result;
}

uint64_t sub_1D585D4D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61746144676174 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void WidgetLocationData.location.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *WidgetLocationData.location.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*WidgetLocationData.location.modify())()
{
  return nullsub_1;
}

NewsAnalytics::WidgetLocationData __swiftcall WidgetLocationData.init(location:)(NewsAnalytics::WidgetLocationData location)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)location.location;
  return location;
}

uint64_t sub_1D585D6C8()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1D585D6E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D585D774()
{
  sub_1D585D8C8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D585D79C()
{
  sub_1D585D8C8();
  return sub_1D5AAEEE0();
}

uint64_t WidgetLocationData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D585DA88(0, &qword_1ED9D1608, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D585D8C8();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D585D90C();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D585D8C8()
{
  unint64_t result;

  result = qword_1ED9D14D8;
  if (!qword_1ED9D14D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABA0B8, &type metadata for WidgetLocationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D14D8);
  }
  return result;
}

unint64_t sub_1D585D90C()
{
  unint64_t result;

  result = qword_1ED9D1468;
  if (!qword_1ED9D1468)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetLocation, &type metadata for WidgetLocation);
    atomic_store(result, (unint64_t *)&qword_1ED9D1468);
  }
  return result;
}

uint64_t WidgetLocationData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D585DA88(0, &qword_1ED9D15E8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D585D8C8();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D585DAE4();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D585DA88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D585D8C8();
    v7 = a3(a1, &type metadata for WidgetLocationData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D585DAE4()
{
  unint64_t result;

  result = qword_1ED9D1478;
  if (!qword_1ED9D1478)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetLocation, &type metadata for WidgetLocation);
    atomic_store(result, (unint64_t *)&qword_1ED9D1478);
  }
  return result;
}

uint64_t sub_1D585DB30@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return WidgetLocationData.init(from:)(a1, a2);
}

uint64_t sub_1D585DB44(_QWORD *a1)
{
  return WidgetLocationData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for WidgetLocationData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D585DBA4 + 4 * byte_1D5AB9F35[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D585DBD8 + 4 * byte_1D5AB9F30[v4]))();
}

uint64_t sub_1D585DBD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D585DBE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D585DBE8);
  return result;
}

uint64_t sub_1D585DBF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D585DBFCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D585DC00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D585DC08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetLocationData()
{
  return &type metadata for WidgetLocationData;
}

uint64_t storeEnumTagSinglePayload for WidgetLocationData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D585DC64 + 4 * byte_1D5AB9F3A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D585DC84 + 4 * byte_1D5AB9F3F[v4]))();
}

_BYTE *sub_1D585DC64(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D585DC84(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D585DC8C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D585DC94(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D585DC9C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D585DCA4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WidgetLocationData.CodingKeys()
{
  return &type metadata for WidgetLocationData.CodingKeys;
}

unint64_t sub_1D585DCC4()
{
  unint64_t result;

  result = qword_1EFF49C10;
  if (!qword_1EFF49C10)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABA090, &type metadata for WidgetLocationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49C10);
  }
  return result;
}

unint64_t sub_1D585DD0C()
{
  unint64_t result;

  result = qword_1ED9D14E8;
  if (!qword_1ED9D14E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABA000, &type metadata for WidgetLocationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D14E8);
  }
  return result;
}

unint64_t sub_1D585DD54()
{
  unint64_t result;

  result = qword_1ED9D14E0;
  if (!qword_1ED9D14E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABA028, &type metadata for WidgetLocationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D14E0);
  }
  return result;
}

uint64_t SportsFetchFavoritesSyncData.fetchedCount.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t SportsFetchFavoritesSyncData.fetchedCount.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*SportsFetchFavoritesSyncData.fetchedCount.modify())()
{
  return nullsub_1;
}

uint64_t SportsFetchFavoritesSyncData.init(fetchedCount:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1D585DDC0()
{
  return 0x4364656863746566;
}

uint64_t sub_1D585DDE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x4364656863746566 && a2 == 0xEC000000746E756FLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D585DE8C()
{
  sub_1D585DFCC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D585DEB4()
{
  sub_1D585DFCC();
  return sub_1D5AAEEE0();
}

uint64_t SportsFetchFavoritesSyncData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D585E130(0, (unint64_t *)&unk_1ED9D17B0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D585DFCC();
  sub_1D5AAEEC8();
  sub_1D5AAED78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D585DFCC()
{
  unint64_t result;

  result = qword_1ED9D1700;
  if (!qword_1ED9D1700)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABA290, &type metadata for SportsFetchFavoritesSyncData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D1700);
  }
  return result;
}

uint64_t SportsFetchFavoritesSyncData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v12;

  sub_1D585E130(0, &qword_1EFF49C18, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D585DFCC();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECDC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D585E130(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D585DFCC();
    v7 = a3(a1, &type metadata for SportsFetchFavoritesSyncData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D585E190()
{
  unint64_t result;

  result = qword_1ED9D1720;
  if (!qword_1ED9D1720)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SportsFetchFavoritesSyncData, &type metadata for SportsFetchFavoritesSyncData);
    atomic_store(result, (unint64_t *)&qword_1ED9D1720);
  }
  return result;
}

unint64_t sub_1D585E1D8()
{
  unint64_t result;

  result = qword_1ED9D1718;
  if (!qword_1ED9D1718)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SportsFetchFavoritesSyncData, &type metadata for SportsFetchFavoritesSyncData);
    atomic_store(result, (unint64_t *)&qword_1ED9D1718);
  }
  return result;
}

uint64_t sub_1D585E21C@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return SportsFetchFavoritesSyncData.init(from:)(a1, a2);
}

uint64_t sub_1D585E230(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D585E130(0, (unint64_t *)&unk_1ED9D17B0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D585DFCC();
  sub_1D5AAEEC8();
  sub_1D5AAED78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for SportsFetchFavoritesSyncData()
{
  return &type metadata for SportsFetchFavoritesSyncData;
}

uint64_t storeEnumTagSinglePayload for SportsFetchFavoritesSyncData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D585E370 + 4 * byte_1D5ABA110[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D585E390 + 4 * byte_1D5ABA115[v4]))();
}

_BYTE *sub_1D585E370(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D585E390(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D585E398(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D585E3A0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D585E3A8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D585E3B0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsFetchFavoritesSyncData.CodingKeys()
{
  return &type metadata for SportsFetchFavoritesSyncData.CodingKeys;
}

unint64_t sub_1D585E3D0()
{
  unint64_t result;

  result = qword_1EFF49C20;
  if (!qword_1EFF49C20)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABA268, &type metadata for SportsFetchFavoritesSyncData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49C20);
  }
  return result;
}

unint64_t sub_1D585E418()
{
  unint64_t result;

  result = qword_1ED9D1710;
  if (!qword_1ED9D1710)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABA1D8, &type metadata for SportsFetchFavoritesSyncData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D1710);
  }
  return result;
}

unint64_t sub_1D585E460()
{
  unint64_t result;

  result = qword_1ED9D1708;
  if (!qword_1ED9D1708)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABA200, &type metadata for SportsFetchFavoritesSyncData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D1708);
  }
  return result;
}

uint64_t sub_1D585E4A4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF49C28, MEMORY[0x1E0CF8078]);
}

uint64_t static NotificationUnsubscribeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47018, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF49C28, a1);
}

uint64_t sub_1D585E4E4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF49C40, MEMORY[0x1E0CF8380]);
}

uint64_t static NotificationUnsubscribeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47020, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF49C40, a1);
}

uint64_t NotificationUnsubscribeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t NotificationUnsubscribeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*NotificationUnsubscribeEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NotificationUnsubscribeEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationUnsubscribeEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for NotificationUnsubscribeEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CB8B8);
}

uint64_t NotificationUnsubscribeEvent.tagData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationUnsubscribeEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NotificationUnsubscribeEvent.tagData.modify())()
{
  type metadata accessor for NotificationUnsubscribeEvent(0);
  return nullsub_1;
}

uint64_t NotificationUnsubscribeEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationUnsubscribeEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NotificationUnsubscribeEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationUnsubscribeEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NotificationUnsubscribeEvent.channelData.modify())()
{
  type metadata accessor for NotificationUnsubscribeEvent(0);
  return nullsub_1;
}

uint64_t NotificationUnsubscribeEvent.campaignData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationUnsubscribeEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NotificationUnsubscribeEvent.campaignData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationUnsubscribeEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NotificationUnsubscribeEvent.campaignData.modify())()
{
  type metadata accessor for NotificationUnsubscribeEvent(0);
  return nullsub_1;
}

uint64_t NotificationUnsubscribeEvent.notificationSubscribedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationUnsubscribeEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NotificationUnsubscribeEvent.notificationSubscribedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationUnsubscribeEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NotificationUnsubscribeEvent.notificationSubscribedData.modify())()
{
  type metadata accessor for NotificationUnsubscribeEvent(0);
  return nullsub_1;
}

uint64_t NotificationUnsubscribeEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationUnsubscribeEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NotificationUnsubscribeEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationUnsubscribeEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NotificationUnsubscribeEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for NotificationUnsubscribeEvent(0);
  return nullsub_1;
}

uint64_t NotificationUnsubscribeEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationUnsubscribeEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NotificationUnsubscribeEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationUnsubscribeEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NotificationUnsubscribeEvent.userChannelContextData.modify())()
{
  type metadata accessor for NotificationUnsubscribeEvent(0);
  return nullsub_1;
}

uint64_t NotificationUnsubscribeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for NotificationUnsubscribeEvent(0);
  v5 = a1 + v4[5];
  v6 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v6, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v6, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v6, v17);
}

uint64_t NotificationUnsubscribeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t NotificationUnsubscribeEvent.Model.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for NotificationUnsubscribeEvent.Model(0) + 20));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for NotificationUnsubscribeEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CB810);
}

uint64_t NotificationUnsubscribeEvent.Model.channelData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NotificationUnsubscribeEvent.Model(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57DD4CC(v4, v5);
}

uint64_t NotificationUnsubscribeEvent.Model.campaignData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NotificationUnsubscribeEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1D5828094(v4, v5);
}

uint64_t NotificationUnsubscribeEvent.Model.notificationSubscribedData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NotificationUnsubscribeEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t NotificationUnsubscribeEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for NotificationUnsubscribeEvent.Model(0) + 36));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t NotificationUnsubscribeEvent.Model.userChannelContextData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NotificationUnsubscribeEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 40));
  return result;
}

__n128 NotificationUnsubscribeEvent.Model.init(eventData:tagData:channelData:campaignData:notificationSubscribedData:userBundleSubscriptionContextData:userChannelContextData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, __int16 *a5@<X4>, char *a6@<X5>, int *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 result;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __n128 v27;
  __int128 v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  int v35;

  v10 = *a2;
  v11 = a2[1];
  v25 = a3[1];
  v26 = *a3;
  v12 = *((_QWORD *)a3 + 4);
  v27 = (__n128)a4[1];
  v28 = *a4;
  v13 = *((_QWORD *)a4 + 4);
  v14 = *((_QWORD *)a4 + 5);
  v15 = *a5;
  v16 = *a6;
  v17 = *((_QWORD *)a6 + 1);
  v34 = *((_QWORD *)a6 + 2);
  v32 = a6[25];
  v33 = a6[24];
  v30 = *((_QWORD *)a6 + 5);
  v31 = *((_QWORD *)a6 + 4);
  v29 = a6[48];
  v35 = *a7;
  v18 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a8, a1, v18);
  v19 = (int *)type metadata accessor for NotificationUnsubscribeEvent.Model(0);
  v20 = (_QWORD *)(a8 + v19[5]);
  *v20 = v10;
  v20[1] = v11;
  v21 = a8 + v19[6];
  *(_OWORD *)v21 = v26;
  *(_OWORD *)(v21 + 16) = v25;
  *(_QWORD *)(v21 + 32) = v12;
  v22 = a8 + v19[7];
  result = v27;
  *(_OWORD *)v22 = v28;
  *(__n128 *)(v22 + 16) = v27;
  *(_QWORD *)(v22 + 32) = v13;
  *(_QWORD *)(v22 + 40) = v14;
  *(_WORD *)(a8 + v19[8]) = v15;
  v24 = a8 + v19[9];
  *(_BYTE *)v24 = v16;
  *(_QWORD *)(v24 + 8) = v17;
  *(_QWORD *)(v24 + 16) = v34;
  *(_BYTE *)(v24 + 24) = v33;
  *(_BYTE *)(v24 + 25) = v32;
  *(_QWORD *)(v24 + 32) = v31;
  *(_QWORD *)(v24 + 40) = v30;
  *(_BYTE *)(v24 + 48) = v29;
  *(_DWORD *)(a8 + v19[10]) = v35;
  return result;
}

uint64_t sub_1D585F06C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D585F0A4 + 4 * byte_1D5ABA2E0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D585F0A4()
{
  return 0x61746144676174;
}

uint64_t sub_1D585F0BC()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1D585F0DC()
{
  return 0x6E676961706D6163;
}

unint64_t sub_1D585F0FC()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1D585F134()
{
  return 0xD000000000000016;
}

uint64_t sub_1D585F150()
{
  unsigned __int8 *v0;

  return sub_1D585F06C(*v0);
}

uint64_t sub_1D585F158()
{
  sub_1D585F4AC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D585F180()
{
  sub_1D585F4AC();
  return sub_1D5AAEEE0();
}

uint64_t NotificationUnsubscribeEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  _BYTE v21[32];
  __int128 v22;
  char v23;
  char v24;

  v3 = v1;
  sub_1D585FA0C(0, &qword_1EFF49C58, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v21[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D585F4AC();
  sub_1D5AAEEC8();
  v21[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for NotificationUnsubscribeEvent.Model(0);
    *(_OWORD *)v21 = *(_OWORD *)(v3 + v10[5]);
    v24 = 1;
    sub_1D57C6738();
    sub_1D5AAED18();
    v11 = v3 + v10[6];
    v12 = *(_QWORD *)(v11 + 32);
    v13 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)v21 = *(_OWORD *)v11;
    *(_OWORD *)&v21[16] = v13;
    *(_QWORD *)&v22 = v12;
    v24 = 2;
    sub_1D57CB8B8();
    sub_1D5AAED18();
    v14 = (_OWORD *)(v3 + v10[7]);
    v15 = v14[1];
    *(_OWORD *)v21 = *v14;
    *(_OWORD *)&v21[16] = v15;
    v22 = v14[2];
    v24 = 3;
    sub_1D57CB460();
    sub_1D5AAED18();
    *(_WORD *)v21 = *(_WORD *)(v3 + v10[8]);
    v24 = 4;
    sub_1D5849A00();
    sub_1D5AAED6C();
    v16 = v3 + v10[9];
    v17 = *(_BYTE *)(v16 + 24);
    v18 = *(_BYTE *)(v16 + 25);
    v19 = *(_BYTE *)(v16 + 48);
    v21[0] = *(_BYTE *)v16;
    *(_OWORD *)&v21[8] = *(_OWORD *)(v16 + 8);
    v21[24] = v17;
    v21[25] = v18;
    v22 = *(_OWORD *)(v16 + 32);
    v23 = v19;
    v24 = 5;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    *(_DWORD *)v21 = *(_DWORD *)(v3 + v10[10]);
    v24 = 6;
    sub_1D57C7B24();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D585F4AC()
{
  unint64_t result;

  result = qword_1EFF49C60;
  if (!qword_1EFF49C60)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABA56C, &type metadata for NotificationUnsubscribeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49C60);
  }
  return result;
}

uint64_t NotificationUnsubscribeEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  __int128 v20;
  char v21;
  char v22;
  char v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  _QWORD *v31;
  _BYTE v32[32];
  __int128 v33;
  char v34;
  char v35;

  v26 = a2;
  v3 = sub_1D5AADF98();
  v27 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D585FA0C(0, &qword_1EFF49C68, MEMORY[0x1E0DED048]);
  v28 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - v7;
  v9 = (int *)type metadata accessor for NotificationUnsubscribeEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D585F4AC();
  v29 = v8;
  v12 = (uint64_t)v31;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v14 = v27;
  v31 = a1;
  v32[0] = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v15 = v28;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v30, v3);
  v35 = 1;
  sub_1D57C66F4();
  sub_1D5AAEC7C();
  *(_OWORD *)&v11[v9[5]] = *(_OWORD *)v32;
  v35 = 2;
  sub_1D57CB874();
  sub_1D5AAEC7C();
  v16 = v33;
  v17 = &v11[v9[6]];
  v18 = *(_OWORD *)&v32[16];
  *(_OWORD *)v17 = *(_OWORD *)v32;
  *((_OWORD *)v17 + 1) = v18;
  *((_QWORD *)v17 + 4) = v16;
  v35 = 3;
  sub_1D57CB41C();
  sub_1D5AAEC7C();
  v19 = &v11[v9[7]];
  v20 = *(_OWORD *)&v32[16];
  *(_OWORD *)v19 = *(_OWORD *)v32;
  *((_OWORD *)v19 + 1) = v20;
  *((_OWORD *)v19 + 2) = v33;
  v35 = 4;
  sub_1D58499BC();
  sub_1D5AAECD0();
  *(_WORD *)&v11[v9[8]] = *(_WORD *)v32;
  v35 = 5;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v21 = v32[24];
  v22 = v32[25];
  v23 = v34;
  v24 = &v11[v9[9]];
  *v24 = v32[0];
  *(_OWORD *)(v24 + 8) = *(_OWORD *)&v32[8];
  v24[24] = v21;
  v24[25] = v22;
  *((_OWORD *)v24 + 2) = v33;
  v24[48] = v23;
  v35 = 6;
  sub_1D57C7AE0();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v29, v15);
  *(_DWORD *)&v11[v9[10]] = *(_DWORD *)v32;
  sub_1D585FA68((uint64_t)v11, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return sub_1D585FAAC((uint64_t)v11);
}

void sub_1D585FA0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D585F4AC();
    v7 = a3(a1, &type metadata for NotificationUnsubscribeEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D585FA68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NotificationUnsubscribeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D585FAAC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NotificationUnsubscribeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D585FAE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NotificationUnsubscribeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D585FAFC(_QWORD *a1)
{
  return NotificationUnsubscribeEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D585FB10@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47018, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF49C28, a1);
}

uint64_t sub_1D585FB34@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47020, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF49C40, a1);
}

uint64_t getEnumTagSinglePayload for NotificationUnsubscribeEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D585FB64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
              v8 = v18;
              v12 = *(_QWORD *)(v18 - 8);
              v13 = a3[10];
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for NotificationUnsubscribeEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D585FD58(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
              v10 = v20;
              v14 = *(_QWORD *)(v20 - 8);
              v15 = a4[10];
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for NotificationUnsubscribeEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D585FF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationUnsubscribeEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D585FFEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_1D5860068()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NotificationUnsubscribeEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D5860158 + 4 * byte_1D5ABA2EC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D586018C + 4 * byte_1D5ABA2E7[v4]))();
}

uint64_t sub_1D586018C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5860194(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D586019CLL);
  return result;
}

uint64_t sub_1D58601A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58601B0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D58601B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58601BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationUnsubscribeEvent.Model.CodingKeys()
{
  return &type metadata for NotificationUnsubscribeEvent.Model.CodingKeys;
}

unint64_t sub_1D58601DC()
{
  unint64_t result;

  result = qword_1EFF49C70;
  if (!qword_1EFF49C70)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABA544, &type metadata for NotificationUnsubscribeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49C70);
  }
  return result;
}

unint64_t sub_1D5860224()
{
  unint64_t result;

  result = qword_1EFF49C78;
  if (!qword_1EFF49C78)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABA4B4, &type metadata for NotificationUnsubscribeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49C78);
  }
  return result;
}

unint64_t sub_1D586026C()
{
  unint64_t result;

  result = qword_1EFF49C80;
  if (!qword_1EFF49C80)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABA4DC, &type metadata for NotificationUnsubscribeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49C80);
  }
  return result;
}

uint64_t Assembly.assemblies.getter()
{
  return swift_bridgeObjectRetain();
}

id Assembly.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id Assembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for Assembly()
{
  return objc_opt_self();
}

uint64_t sub_1D5860344(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF49C90, MEMORY[0x1E0CF8078]);
}

uint64_t static ArticleLoadFailureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47028, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF49C90, a1);
}

uint64_t sub_1D5860384(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF49CA8, MEMORY[0x1E0CF8380]);
}

uint64_t static ArticleLoadFailureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47030, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF49CA8, a1);
}

uint64_t ArticleLoadFailureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t ArticleLoadFailureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ArticleLoadFailureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleLoadFailureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for ArticleLoadFailureEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for ArticleLoadFailureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, (uint64_t *)&unk_1ED9CE5D8);
}

uint64_t ArticleLoadFailureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLoadFailureEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleLoadFailureEvent.timedData.modify())()
{
  type metadata accessor for ArticleLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t ArticleLoadFailureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLoadFailureEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleLoadFailureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLoadFailureEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleLoadFailureEvent.feedData.modify())()
{
  type metadata accessor for ArticleLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t ArticleLoadFailureEvent.articleLoadData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLoadFailureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleLoadFailureEvent.articleLoadData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLoadFailureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleLoadFailureEvent.articleLoadData.modify())()
{
  type metadata accessor for ArticleLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t ArticleLoadFailureEvent.errorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLoadFailureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleLoadFailureEvent.errorData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLoadFailureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleLoadFailureEvent.errorData.modify())()
{
  type metadata accessor for ArticleLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t ArticleLoadFailureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *FailureEvent;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  FailureEvent = (int *)type metadata accessor for ArticleLoadFailureEvent(0);
  v5 = a1 + FailureEvent[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + FailureEvent[6];
  v8 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = a1 + FailureEvent[7];
  sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v2, v11);
  v12 = a1 + FailureEvent[8];
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
}

uint64_t ArticleLoadFailureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ArticleLoadFailureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for ArticleLoadFailureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for ArticleLoadFailureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF49D30);
}

uint64_t ArticleLoadFailureEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleLoadFailureEvent.Model(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t ArticleLoadFailureEvent.Model.articleLoadData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ArticleLoadFailureEvent.Model(0) + 28));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t ArticleLoadFailureEvent.Model.errorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLoadFailureEvent.Model(0) + 32);
  v5 = *(_QWORD *)(v3 + 24);
  v4 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 ArticleLoadFailureEvent.Model.init(eventData:timedData:feedData:articleLoadData:errorData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t *a4@<X3>, __int128 *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *Failure;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  __n128 result;
  __int128 v21;
  __n128 v22;
  __int128 v23;

  v9 = *((_QWORD *)a3 + 2);
  v10 = *a4;
  v11 = a4[1];
  v23 = *a5;
  v21 = *a3;
  v22 = (__n128)a5[1];
  v12 = *((_QWORD *)a5 + 4);
  v13 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a6, a1, v13);
  Failure = (int *)type metadata accessor for ArticleLoadFailureEvent.Model(0);
  v15 = a6 + Failure[5];
  v16 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a2, v16);
  v17 = a6 + Failure[6];
  *(_OWORD *)v17 = v21;
  *(_QWORD *)(v17 + 16) = v9;
  v18 = (_QWORD *)(a6 + Failure[7]);
  *v18 = v10;
  v18[1] = v11;
  v19 = a6 + Failure[8];
  result = v22;
  *(_OWORD *)v19 = v23;
  *(__n128 *)(v19 + 16) = v22;
  *(_QWORD *)(v19 + 32) = v12;
  return result;
}

uint64_t sub_1D5860AF0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5860B24 + 4 * byte_1D5ABA620[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5860B24()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D5860B38()
{
  return 0x6174614464656566;
}

uint64_t sub_1D5860B50()
{
  return 0x4C656C6369747261;
}

uint64_t sub_1D5860B74()
{
  return 0x746144726F727265;
}

uint64_t sub_1D5860B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5862CAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5860BAC()
{
  sub_1D5860E74();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5860BD4()
{
  sub_1D5860E74();
  return sub_1D5AAEEE0();
}

uint64_t ArticleLoadFailureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *Failure;
  __int128 *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char v23;

  v3 = v1;
  sub_1D5861368(0, &qword_1EFF49CC0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5860E74();
  sub_1D5AAEEC8();
  LOBYTE(v20) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    Failure = (int *)type metadata accessor for ArticleLoadFailureEvent.Model(0);
    LOBYTE(v20) = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = (__int128 *)(v3 + Failure[6]);
    v12 = *((_QWORD *)v11 + 2);
    v20 = *v11;
    *(_QWORD *)&v21 = v12;
    v23 = 2;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v13 = (uint64_t *)(v3 + Failure[7]);
    v15 = *v13;
    v14 = v13[1];
    *(_QWORD *)&v20 = v15;
    *((_QWORD *)&v20 + 1) = v14;
    v23 = 3;
    sub_1D57DA3A4();
    sub_1D5AAED6C();
    v16 = (__int128 *)(v3 + Failure[8]);
    v17 = *((_QWORD *)v16 + 4);
    v18 = v16[1];
    v20 = *v16;
    v21 = v18;
    v22 = v17;
    v23 = 4;
    sub_1D57C6128();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5860E74()
{
  unint64_t result;

  result = qword_1EFF49CC8;
  if (!qword_1EFF49CC8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABA83C, &type metadata for ArticleLoadFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49CC8);
  }
  return result;
}

uint64_t ArticleLoadFailureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *Failure;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  char v41;

  v29 = a2;
  v32 = sub_1D5AADFB0();
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1D5AADF98();
  v4 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v34 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5861368(0, &qword_1EFF49CD0, MEMORY[0x1E0DED048]);
  v35 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - v8;
  Failure = (int *)type metadata accessor for ArticleLoadFailureEvent.Model(0);
  MEMORY[0x1E0C80A78](Failure);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5860E74();
  v36 = v9;
  v13 = (uint64_t)v37;
  sub_1D5AAEEB0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = v4;
  v28 = v7;
  v37 = a1;
  v14 = v31;
  v15 = v32;
  LOBYTE(v38) = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v17 = v33;
  v16 = v34;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v12, v16, v17);
  LOBYTE(v38) = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v12[Failure[5]], v14, v15);
  v41 = 2;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v18 = v39;
  v19 = &v12[Failure[6]];
  *(_OWORD *)v19 = v38;
  *((_QWORD *)v19 + 2) = v18;
  v41 = 3;
  sub_1D57DA360();
  sub_1D5AAECD0();
  v20 = *((_QWORD *)&v38 + 1);
  v21 = &v12[Failure[7]];
  *(_QWORD *)v21 = v38;
  *((_QWORD *)v21 + 1) = v20;
  v41 = 4;
  sub_1D57C60E4();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v36, v35);
  v22 = v40;
  v23 = &v12[Failure[8]];
  v24 = v39;
  *(_OWORD *)v23 = v38;
  *((_OWORD *)v23 + 1) = v24;
  *((_QWORD *)v23 + 4) = v22;
  sub_1D58613C4((uint64_t)v12, v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  return sub_1D5861408((uint64_t)v12);
}

void sub_1D5861368(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5860E74();
    v7 = a3(a1, &type metadata for ArticleLoadFailureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58613C4(uint64_t a1, uint64_t a2)
{
  uint64_t Failure;

  Failure = type metadata accessor for ArticleLoadFailureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(Failure - 8) + 16))(a2, a1, Failure);
  return a2;
}

uint64_t sub_1D5861408(uint64_t a1)
{
  uint64_t Failure;

  Failure = type metadata accessor for ArticleLoadFailureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(Failure - 8) + 8))(a1, Failure);
  return a1;
}

uint64_t sub_1D5861444@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleLoadFailureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5861458(_QWORD *a1)
{
  return ArticleLoadFailureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D586146C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47028, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF49C90, a1);
}

uint64_t sub_1D5861490@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47030, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF49CA8, a1);
}

uint64_t sub_1D58614B4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  v9 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v4, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleLoadFailureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for ArticleLoadFailureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t initializeWithCopy for ArticleLoadFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for ArticleLoadFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for ArticleLoadFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for ArticleLoadFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleLoadFailureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5861E88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
          v8 = v16;
          v12 = *(_QWORD *)(v16 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ArticleLoadFailureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5861FD4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
          v10 = v18;
          v14 = *(_QWORD *)(v18 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D586211C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9CF150, (void (*)(void))sub_1D57DA360, (void (*)(void))sub_1D57DA3A4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleLoadFailureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = *((_QWORD *)v14 + 2);
    if (v15 == 1)
    {
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
    }
    else
    {
      *v13 = *v14;
      *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
      *((_QWORD *)v13 + 2) = v15;
      swift_bridgeObjectRetain();
    }
    v17 = a3[7];
    v18 = a3[8];
    v19 = (uint64_t *)((char *)a1 + v17);
    v20 = (uint64_t *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = (uint64_t *)((char *)a1 + v18);
    v23 = (uint64_t *)((char *)a2 + v18);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = v23[3];
    v22[2] = v23[2];
    v22[3] = v25;
    v22[4] = v23[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ArticleLoadFailureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  if (*(_QWORD *)(a1 + *(int *)(a2 + 24) + 16) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArticleLoadFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(v13 + 16);
  if (v14 == 1)
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  }
  else
  {
    *(_BYTE *)v12 = *(_BYTE *)v13;
    *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
    *(_QWORD *)(v12 + 16) = v14;
    swift_bridgeObjectRetain();
  }
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (_QWORD *)(a1 + v16);
  v21 = (_QWORD *)(a2 + v16);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = v21[3];
  v20[2] = v21[2];
  v20[3] = v23;
  v20[4] = v21[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArticleLoadFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = (__int128 *)(a2 + v11);
  v14 = *(_QWORD *)(a1 + v11 + 16);
  v15 = *(_QWORD *)(a2 + v11 + 16);
  if (v14 == 1)
  {
    if (v15 == 1)
    {
      v16 = *v13;
      *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
      *(_OWORD *)v12 = v16;
    }
    else
    {
      *(_BYTE *)v12 = *(_BYTE *)v13;
      *(_QWORD *)(v12 + 8) = *((_QWORD *)v13 + 1);
      *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v15 == 1)
  {
    sub_1D57D9100(v12);
    v17 = *((_QWORD *)v13 + 2);
    *(_OWORD *)v12 = *v13;
    *(_QWORD *)(v12 + 16) = v17;
  }
  else
  {
    *(_BYTE *)v12 = *(_BYTE *)v13;
    *(_QWORD *)(v12 + 8) = *((_QWORD *)v13 + 1);
    *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v18 = a3[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  *v22 = *(_QWORD *)(a2 + v21);
  v22[1] = *(_QWORD *)(a2 + v21 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[2] = v23[2];
  v22[3] = v23[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[4] = v23[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ArticleLoadFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = (__int128 *)(a2 + v11);
  v15 = *v14;
  *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
  *(_OWORD *)v13 = v15;
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  return a1;
}

uint64_t assignWithTake for ArticleLoadFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  if (*(_QWORD *)(a1 + v11 + 16) != 1)
  {
    v14 = *(_QWORD *)(v13 + 16);
    if (v14 != 1)
    {
      *(_BYTE *)v12 = *(_BYTE *)v13;
      *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
      *(_QWORD *)(v12 + 16) = v14;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D57D9100(v12);
  }
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
LABEL_6:
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v24 = v22[3];
  v21[2] = v22[2];
  v21[3] = v24;
  swift_bridgeObjectRelease();
  v21[4] = v22[4];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleLoadFailureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5862908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleLoadFailureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58629C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5862A68()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ArticleLoadFailureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D5862B54 + 4 * byte_1D5ABA62A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5862B88 + 4 * byte_1D5ABA625[v4]))();
}

uint64_t sub_1D5862B88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5862B90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5862B98);
  return result;
}

uint64_t sub_1D5862BA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5862BACLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5862BB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5862BB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleLoadFailureEvent.Model.CodingKeys()
{
  return &type metadata for ArticleLoadFailureEvent.Model.CodingKeys;
}

unint64_t sub_1D5862BD8()
{
  unint64_t result;

  result = qword_1EFF49D78;
  if (!qword_1EFF49D78)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABA814, &type metadata for ArticleLoadFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49D78);
  }
  return result;
}

unint64_t sub_1D5862C20()
{
  unint64_t result;

  result = qword_1EFF49D80;
  if (!qword_1EFF49D80)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABA784, &type metadata for ArticleLoadFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49D80);
  }
  return result;
}

unint64_t sub_1D5862C68()
{
  unint64_t result;

  result = qword_1EFF49D88;
  if (!qword_1EFF49D88)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABA7AC, &type metadata for ArticleLoadFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49D88);
  }
  return result;
}

uint64_t sub_1D5862CAC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4C656C6369747261 && a2 == 0xEF6174614464616FLL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144726F727265 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

void NotificationSubscribedData.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *NotificationSubscribedData.type.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*NotificationSubscribedData.type.modify())()
{
  return nullsub_1;
}

void NotificationSubscribedData.action.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *NotificationSubscribedData.action.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*NotificationSubscribedData.action.modify())()
{
  return nullsub_1;
}

NewsAnalytics::NotificationSubscribedData __swiftcall NotificationSubscribedData.init(type:action:)(NewsAnalytics::NotificationSubscribedType type, NewsAnalytics::NotificationSubscribedAction action)
{
  _BYTE *v2;
  char v3;
  NewsAnalytics::NotificationSubscribedData result;

  v3 = *(_BYTE *)action;
  *v2 = *(_BYTE *)type;
  v2[1] = v3;
  result.type = type;
  return result;
}

uint64_t sub_1D5862F6C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E6F69746361;
  else
    return 1701869940;
}

uint64_t sub_1D5862F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58637CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5862FC0()
{
  sub_1D5863164();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5862FE8()
{
  sub_1D5863164();
  return sub_1D5AAEEE0();
}

uint64_t NotificationSubscribedData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  int v12;
  char v13;
  char v14;
  char v15;
  char v16;

  sub_1D58633B4(0, &qword_1EFF49D90, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *v1;
  v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5863164();
  sub_1D5AAEEC8();
  v16 = v9;
  v15 = 0;
  sub_1D58631A8();
  sub_1D5AAED6C();
  if (!v2)
  {
    v14 = v12;
    v13 = 1;
    sub_1D58631EC();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D5863164()
{
  unint64_t result;

  result = qword_1EFF49D98;
  if (!qword_1EFF49D98)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABAA20, &type metadata for NotificationSubscribedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49D98);
  }
  return result;
}

unint64_t sub_1D58631A8()
{
  unint64_t result;

  result = qword_1EFF49DA0;
  if (!qword_1EFF49DA0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationSubscribedType, &type metadata for NotificationSubscribedType);
    atomic_store(result, (unint64_t *)&qword_1EFF49DA0);
  }
  return result;
}

unint64_t sub_1D58631EC()
{
  unint64_t result;

  result = qword_1EFF49DA8;
  if (!qword_1EFF49DA8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationSubscribedAction, &type metadata for NotificationSubscribedAction);
    atomic_store(result, (unint64_t *)&qword_1EFF49DA8);
  }
  return result;
}

uint64_t NotificationSubscribedData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;

  sub_1D58633B4(0, &qword_1EFF49DB0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5863164();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v16 = 0;
    sub_1D5863410();
    sub_1D5AAECD0();
    v10 = v17;
    v14 = 1;
    sub_1D5863454();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D58633B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5863164();
    v7 = a3(a1, &type metadata for NotificationSubscribedData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5863410()
{
  unint64_t result;

  result = qword_1EFF49DB8;
  if (!qword_1EFF49DB8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationSubscribedType, &type metadata for NotificationSubscribedType);
    atomic_store(result, (unint64_t *)&qword_1EFF49DB8);
  }
  return result;
}

unint64_t sub_1D5863454()
{
  unint64_t result;

  result = qword_1EFF49DC0;
  if (!qword_1EFF49DC0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NotificationSubscribedAction, &type metadata for NotificationSubscribedAction);
    atomic_store(result, (unint64_t *)&qword_1EFF49DC0);
  }
  return result;
}

uint64_t sub_1D58634A0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return NotificationSubscribedData.init(from:)(a1, a2);
}

uint64_t sub_1D58634B4(_QWORD *a1)
{
  return NotificationSubscribedData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for NotificationSubscribedData(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 65282 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65282 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65282;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65282;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65282;
  }
LABEL_17:
  v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationSubscribedData(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65282 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65282 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D58635A8 + 4 * byte_1D5ABA895[v4]))();
  *a1 = a2 - 254;
  return ((uint64_t (*)(void))((char *)sub_1D58635DC + 4 * byte_1D5ABA890[v4]))();
}

uint64_t sub_1D58635DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1D58635E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1D58635ECLL);
  return result;
}

uint64_t sub_1D58635F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1D5863600);
  *(_BYTE *)(result + 1) = a2 + 2;
  return result;
}

uint64_t sub_1D5863604(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1D586360C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationSubscribedData()
{
  return &type metadata for NotificationSubscribedData;
}

uint64_t storeEnumTagSinglePayload for NotificationSubscribedData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5863674 + 4 * byte_1D5ABA89F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D58636A8 + 4 * byte_1D5ABA89A[v4]))();
}

uint64_t sub_1D58636A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58636B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58636B8);
  return result;
}

uint64_t sub_1D58636C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58636CCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D58636D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58636D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationSubscribedData.CodingKeys()
{
  return &type metadata for NotificationSubscribedData.CodingKeys;
}

unint64_t sub_1D58636F8()
{
  unint64_t result;

  result = qword_1EFF49DC8;
  if (!qword_1EFF49DC8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABA9F8, &type metadata for NotificationSubscribedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49DC8);
  }
  return result;
}

unint64_t sub_1D5863740()
{
  unint64_t result;

  result = qword_1EFF49DD0;
  if (!qword_1EFF49DD0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABA968, &type metadata for NotificationSubscribedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49DD0);
  }
  return result;
}

unint64_t sub_1D5863788()
{
  unint64_t result;

  result = qword_1EFF49DD8;
  if (!qword_1EFF49DD8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABA990, &type metadata for NotificationSubscribedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49DD8);
  }
  return result;
}

uint64_t sub_1D58637CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D58638A4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADAB8();
  __swift_allocate_value_buffer(v0, qword_1ED9D04D8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED9D04D8);
  *(_QWORD *)v1 = 0x726F70732E6D6F63;
  *(_QWORD *)(v1 + 8) = 0xEA00000000007374;
  *(_QWORD *)(v1 + 16) = 6;
  *(_BYTE *)(v1 + 24) = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t static SportsSessionEndEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CE5C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9D04D8, a1);
}

uint64_t sub_1D5863948()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADD34();
  __swift_allocate_value_buffer(v0, qword_1ED9D04F0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED9D04F0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0CF8380], v0);
}

uint64_t static SportsSessionEndEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9D0510, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9D04F0, a1);
}

uint64_t SportsSessionEndEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t SportsSessionEndEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SportsSessionEndEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SportsSessionEndEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsSessionEndEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SportsSessionEndEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsSessionEndEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SportsSessionEndEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for SportsSessionEndEvent(0);
  return nullsub_1;
}

uint64_t SportsSessionEndEvent.sportsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsSessionEndEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SportsSessionEndEvent.sportsData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsSessionEndEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SportsSessionEndEvent.sportsData.modify())()
{
  type metadata accessor for SportsSessionEndEvent(0);
  return nullsub_1;
}

uint64_t SportsSessionEndEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = type metadata accessor for SportsSessionEndEvent(0);
  v5 = a1 + *(int *)(v4 + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + *(int *)(v4 + 24);
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
}

uint64_t SportsSessionEndEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SportsSessionEndEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for SportsSessionEndEvent.Model(0) + 20));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SportsSessionEndEvent.Model.sportsData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for SportsSessionEndEvent.Model(0) + 24));
  return swift_bridgeObjectRetain();
}

uint64_t SportsSessionEndEvent.Model.init(eventData:userBundleSubscriptionContextData:sportsData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  v6 = *a2;
  v7 = *((_QWORD *)a2 + 1);
  v8 = *((_QWORD *)a2 + 2);
  v9 = a2[24];
  v10 = a2[25];
  v11 = *((_QWORD *)a2 + 4);
  v12 = *((_QWORD *)a2 + 5);
  v13 = a2[48];
  v17 = *a3;
  v14 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a4, a1, v14);
  result = type metadata accessor for SportsSessionEndEvent.Model(0);
  v16 = a4 + *(int *)(result + 20);
  *(_BYTE *)v16 = v6;
  *(_QWORD *)(v16 + 8) = v7;
  *(_QWORD *)(v16 + 16) = v8;
  *(_BYTE *)(v16 + 24) = v9;
  *(_BYTE *)(v16 + 25) = v10;
  *(_QWORD *)(v16 + 32) = v11;
  *(_QWORD *)(v16 + 40) = v12;
  *(_BYTE *)(v16 + 48) = v13;
  *(_QWORD *)(a4 + *(int *)(result + 24)) = v17;
  return result;
}

uint64_t sub_1D5863E4C()
{
  sub_1D5864078();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5863E74()
{
  sub_1D5864078();
  return sub_1D5AAEEE0();
}

uint64_t SportsSessionEndEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  char v19;
  char v20;
  __int128 v21;
  char v22;

  v3 = v1;
  sub_1D58643FC(0, &qword_1EFF49DE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5864078();
  sub_1D5AAEEC8();
  LOBYTE(v17) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = type metadata accessor for SportsSessionEndEvent.Model(0);
    v11 = v3 + *(int *)(v10 + 20);
    v12 = *(_BYTE *)(v11 + 24);
    v13 = *(_BYTE *)(v11 + 25);
    v14 = *(_BYTE *)(v11 + 48);
    LOBYTE(v17) = *(_BYTE *)v11;
    v18 = *(_OWORD *)(v11 + 8);
    v19 = v12;
    v20 = v13;
    v21 = *(_OWORD *)(v11 + 32);
    v22 = v14;
    HIBYTE(v16) = 1;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v17 = *(_QWORD *)(v3 + *(int *)(v10 + 24));
    HIBYTE(v16) = 2;
    sub_1D57CBB60();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5864078()
{
  unint64_t result;

  result = qword_1EFF49DE8;
  if (!qword_1EFF49DE8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABAC3C, &type metadata for SportsSessionEndEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49DE8);
  }
  return result;
}

uint64_t SportsSessionEndEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  char v31;
  __int128 v32;
  char v33;
  char v34;

  v22 = a2;
  v3 = sub_1D5AADF98();
  v24 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v25 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58643FC(0, &qword_1EFF49DF0, MEMORY[0x1E0DED048]);
  v23 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - v7;
  v9 = type metadata accessor for SportsSessionEndEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5864078();
  v26 = v8;
  v12 = v27;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = v9;
  v13 = (uint64_t)a1;
  v14 = v24;
  LOBYTE(v28) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v25, v3);
  v34 = 1;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v15 = v30;
  v16 = v31;
  v17 = v33;
  v18 = v27;
  v19 = &v11[*(int *)(v27 + 20)];
  *v19 = v28;
  *(_OWORD *)(v19 + 8) = v29;
  v19[24] = v15;
  v19[25] = v16;
  *((_OWORD *)v19 + 2) = v32;
  v19[48] = v17;
  v34 = 2;
  sub_1D57CBB1C();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v26, v23);
  *(_QWORD *)&v11[*(int *)(v18 + 24)] = v28;
  sub_1D5864458((uint64_t)v11, v22);
  __swift_destroy_boxed_opaque_existential_1(v13);
  return sub_1D586449C((uint64_t)v11);
}

void sub_1D58643FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5864078();
    v7 = a3(a1, &type metadata for SportsSessionEndEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5864458(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SportsSessionEndEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D586449C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SportsSessionEndEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58644D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SportsSessionEndEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58644EC(_QWORD *a1)
{
  return SportsSessionEndEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5864500@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CE5C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9D04D8, a1);
}

uint64_t sub_1D5864524@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9D0510, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9D04F0, a1);
}

uint64_t getEnumTagSinglePayload for SportsSessionEndEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5864554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SportsSessionEndEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5864638(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for SportsSessionEndEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5864724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsSessionEndEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58647AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for SportsSessionEndEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5864870 + 4 * byte_1D5ABAA75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D58648A4 + 4 * byte_1D5ABAA70[v4]))();
}

uint64_t sub_1D58648A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58648AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58648B4);
  return result;
}

uint64_t sub_1D58648C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58648C8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D58648CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58648D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsSessionEndEvent.Model.CodingKeys()
{
  return &type metadata for SportsSessionEndEvent.Model.CodingKeys;
}

unint64_t sub_1D58648F4()
{
  unint64_t result;

  result = qword_1EFF49DF8;
  if (!qword_1EFF49DF8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABAC14, &type metadata for SportsSessionEndEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49DF8);
  }
  return result;
}

unint64_t sub_1D586493C()
{
  unint64_t result;

  result = qword_1EFF49E00;
  if (!qword_1EFF49E00)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABAB84, &type metadata for SportsSessionEndEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49E00);
  }
  return result;
}

unint64_t sub_1D5864984()
{
  unint64_t result;

  result = qword_1EFF49E08;
  if (!qword_1EFF49E08)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABABAC, &type metadata for SportsSessionEndEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49E08);
  }
  return result;
}

void FeedLayoutFailure.errorData()(uint64_t *a1@<X8>)
{
  void *v2;
  uint64_t v3;

  v2 = (void *)sub_1D5AAE49C();
  swift_getErrorValue();
  Error.errorData()(v3, a1);

}

NewsAnalytics::FeedGroupLayoutFailureDiagnosticsData __swiftcall FeedLayoutFailure.diagnosticsData()()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  NewsAnalytics::FeedGroupLayoutFailureDiagnosticsData result;

  v1 = v0;
  v2 = sub_1D5AAE490();
  *v1 = v2;
  v1[1] = (uint64_t)v3;
  result.message._object = v3;
  result.message._countAndFlagsBits = v2;
  return result;
}

uint64_t AdUserData.userID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdUserData.userID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AdUserData.userID.modify())()
{
  return nullsub_1;
}

NewsAnalytics::AdUserData __swiftcall AdUserData.init(userID:)(NewsAnalytics::AdUserData userID)
{
  NewsAnalytics::AdUserData *v1;

  *v1 = userID;
  return userID;
}

uint64_t sub_1D5864ABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x444972657375 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5864B48()
{
  sub_1D57A6880();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5864B70()
{
  sub_1D57A6880();
  return sub_1D5AAEEE0();
}

uint64_t AdUserData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D57A6824(0, &qword_1ED9CE180, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A6880();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t AdUserData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D57A6824(0, &qword_1EFF49E10, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A6880();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECA0();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D5864DB0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return AdUserData.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for AdUserData()
{
  return &type metadata for AdUserData;
}

uint64_t storeEnumTagSinglePayload for AdUserData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5864E14 + 4 * byte_1D5ABAC8C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5864E34 + 4 * byte_1D5ABAC91[v4]))();
}

_BYTE *sub_1D5864E14(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5864E34(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5864E3C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5864E44(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5864E4C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5864E54(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AdUserData.CodingKeys()
{
  return &type metadata for AdUserData.CodingKeys;
}

unint64_t sub_1D5864E74()
{
  unint64_t result;

  result = qword_1EFF49E18;
  if (!qword_1EFF49E18)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABADD4, &type metadata for AdUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49E18);
  }
  return result;
}

unint64_t sub_1D5864EBC()
{
  unint64_t result;

  result = qword_1ED9CDA30;
  if (!qword_1ED9CDA30)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABAD44, &type metadata for AdUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDA30);
  }
  return result;
}

unint64_t sub_1D5864F04()
{
  unint64_t result;

  result = qword_1ED9CDA28;
  if (!qword_1ED9CDA28)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABAD6C, &type metadata for AdUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDA28);
  }
  return result;
}

NewsAnalytics::ScienceExperimentData __swiftcall ScienceExperimentData.init(engagementCohortsExpField:conversionCohortsExpField:)(Swift::String_optional engagementCohortsExpField, Swift::String_optional conversionCohortsExpField)
{
  Swift::String_optional *v2;
  NewsAnalytics::ScienceExperimentData result;

  *v2 = engagementCohortsExpField;
  v2[1] = conversionCohortsExpField;
  result.conversionCohortsExpField = conversionCohortsExpField;
  result.engagementCohortsExpField = engagementCohortsExpField;
  return result;
}

uint64_t ScienceExperimentData.engagementCohortsExpField.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ScienceExperimentData.engagementCohortsExpField.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ScienceExperimentData.engagementCohortsExpField.modify())()
{
  return nullsub_1;
}

uint64_t ScienceExperimentData.conversionCohortsExpField.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ScienceExperimentData.conversionCohortsExpField.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ScienceExperimentData.conversionCohortsExpField.modify())()
{
  return nullsub_1;
}

unint64_t sub_1D5865034()
{
  return 0xD000000000000019;
}

uint64_t sub_1D5865064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5865478(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5865088()
{
  sub_1D57A9B9C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58650B0()
{
  sub_1D57A9B9C();
  return sub_1D5AAEEE0();
}

uint64_t ScienceExperimentData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  sub_1D57A9B40(0, &qword_1EFF49E20, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A9B9C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v21 = 0;
    v10 = sub_1D5AAEC58();
    v12 = v11;
    v20 = 1;
    swift_bridgeObjectRetain();
    v13 = sub_1D5AAEC58();
    v16 = v15;
    v17 = *(void (**)(char *, uint64_t))(v7 + 8);
    v18 = v13;
    v17(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v10;
    a2[1] = v12;
    a2[2] = v18;
    a2[3] = v16;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5865290@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ScienceExperimentData.init(from:)(a1, a2);
}

uint64_t getEnumTagSinglePayload for ScienceExperimentData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ScienceExperimentData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScienceExperimentData()
{
  return &type metadata for ScienceExperimentData;
}

uint64_t storeEnumTagSinglePayload for ScienceExperimentData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D58653B0 + 4 * byte_1D5ABAE55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D58653E4 + 4 * byte_1D5ABAE50[v4]))();
}

uint64_t sub_1D58653E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58653EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58653F4);
  return result;
}

uint64_t sub_1D5865400(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5865408);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D586540C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5865414(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScienceExperimentData.CodingKeys()
{
  return &type metadata for ScienceExperimentData.CodingKeys;
}

unint64_t sub_1D5865434()
{
  unint64_t result;

  result = qword_1EFF49E28;
  if (!qword_1EFF49E28)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABAFB4, &type metadata for ScienceExperimentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49E28);
  }
  return result;
}

uint64_t sub_1D5865478(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000019 && a2 == 0x80000001D5AEDBF0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001D5AEDC10)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

NewsAnalytics::SelectedResultType_optional __swiftcall SelectedResultType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::SelectedResultType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SelectedResultType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C6369747261;
  if (*v0 != 1)
    v1 = 6775156;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D586560C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A3A29C(*a1, *a2);
}

unint64_t sub_1D586561C()
{
  unint64_t result;

  result = qword_1EFF49E30;
  if (!qword_1EFF49E30)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SelectedResultType, &type metadata for SelectedResultType);
    atomic_store(result, (unint64_t *)&qword_1EFF49E30);
  }
  return result;
}

uint64_t sub_1D5865660()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D58656F8()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D586576C()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::SelectedResultType_optional sub_1D5865800(Swift::String *a1)
{
  return SelectedResultType.init(rawValue:)(*a1);
}

void sub_1D586580C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x656C6369747261;
  if (v2 != 1)
  {
    v5 = 6775156;
    v4 = 0xE300000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D5865864()
{
  sub_1D58659D8();
  return sub_1D5AAE928();
}

uint64_t sub_1D58658C0()
{
  sub_1D58659D8();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for SelectedResultType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5865958 + 4 * byte_1D5ABB035[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D586598C + 4 * byte_1D5ABB030[v4]))();
}

uint64_t sub_1D586598C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5865994(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D586599CLL);
  return result;
}

uint64_t sub_1D58659A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58659B0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D58659B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58659BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SelectedResultType()
{
  return &type metadata for SelectedResultType;
}

unint64_t sub_1D58659D8()
{
  unint64_t result;

  result = qword_1EFF49E38;
  if (!qword_1EFF49E38)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SelectedResultType, &type metadata for SelectedResultType);
    atomic_store(result, (unint64_t *)&qword_1EFF49E38);
  }
  return result;
}

uint64_t sub_1D5865A1C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CED98, MEMORY[0x1E0CF8078]);
}

uint64_t static CustomItemExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CE4D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CED98, a1);
}

uint64_t sub_1D5865A5C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CEDB0, MEMORY[0x1E0CF8380]);
}

uint64_t static CustomItemExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CEDD0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CEDB0, a1);
}

uint64_t CustomItemExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t CustomItemExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*CustomItemExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for CustomItemExposureEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for CustomItemExposureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, (uint64_t *)&unk_1ED9CEDD8);
}

uint64_t CustomItemExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*CustomItemExposureEvent.timedData.modify())()
{
  type metadata accessor for CustomItemExposureEvent(0);
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CustomItemExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*CustomItemExposureEvent.viewData.modify())()
{
  type metadata accessor for CustomItemExposureEvent(0);
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.customItemData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9CEA80, (void (*)(void))sub_1D5865CE8, (void (*)(void))sub_1D5865D2C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D5865CE8()
{
  unint64_t result;

  result = qword_1ED9CE458;
  if (!qword_1ED9CE458)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for CustomItemData, &type metadata for CustomItemData);
    atomic_store(result, (unint64_t *)&qword_1ED9CE458);
  }
  return result;
}

unint64_t sub_1D5865D2C()
{
  unint64_t result;

  result = qword_1ED9CEB88;
  if (!qword_1ED9CEB88)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for CustomItemData, &type metadata for CustomItemData);
    atomic_store(result, (unint64_t *)&qword_1ED9CEB88);
  }
  return result;
}

uint64_t CustomItemExposureEvent.customItemData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9CEA80, (void (*)(void))sub_1D5865CE8, (void (*)(void))sub_1D5865D2C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*CustomItemExposureEvent.customItemData.modify())()
{
  type metadata accessor for CustomItemExposureEvent(0);
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CustomItemExposureEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*CustomItemExposureEvent.feedPositionData.modify())()
{
  type metadata accessor for CustomItemExposureEvent(0);
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CustomItemExposureEvent.inGroupPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*CustomItemExposureEvent.inGroupPositionData.modify())()
{
  type metadata accessor for CustomItemExposureEvent(0);
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CustomItemExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*CustomItemExposureEvent.feedData.modify())()
{
  type metadata accessor for CustomItemExposureEvent(0);
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CustomItemExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*CustomItemExposureEvent.groupData.modify())()
{
  type metadata accessor for CustomItemExposureEvent(0);
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CustomItemExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*CustomItemExposureEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for CustomItemExposureEvent(0);
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for CustomItemExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9CEA80, (void (*)(void))sub_1D5865CE8, (void (*)(void))sub_1D5865D2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  v14 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v14, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
}

uint64_t CustomItemExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t CustomItemExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for CustomItemExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for CustomItemExposureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF49EB0);
}

uint64_t CustomItemExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CustomItemExposureEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t CustomItemExposureEvent.Model.customItemData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for CustomItemExposureEvent.Model(0) + 28));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t CustomItemExposureEvent.Model.feedPositionData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CustomItemExposureEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t CustomItemExposureEvent.Model.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for CustomItemExposureEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 36));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t CustomItemExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent.Model(0) + 40);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

_QWORD *CustomItemExposureEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for CustomItemExposureEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 44), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t CustomItemExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for CustomItemExposureEvent.Model(0) + 48));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t CustomItemExposureEvent.Model.init(eventData:timedData:viewData:customItemData:feedPositionData:inGroupPositionData:feedData:groupData:userBundleSubscriptionContextData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, __int128 *a4@<X3>, int *a5@<X4>, int *a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10)
{
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  __int128 v29;
  char v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  _BYTE v43[144];

  v13 = *a3;
  v14 = a3[1];
  v15 = *((_WORD *)a3 + 8);
  v29 = *a4;
  v16 = *((_QWORD *)a4 + 2);
  v17 = *((_QWORD *)a4 + 3);
  v18 = *a5;
  v30 = *((_BYTE *)a6 + 4);
  v31 = *a6;
  v34 = *a7;
  v32 = *((_QWORD *)a7 + 2);
  v33 = *((_QWORD *)a7 + 1);
  sub_1D57DD5B8(a8, (uint64_t)v43);
  v42 = *a10;
  v40 = *((_QWORD *)a10 + 2);
  v41 = *((_QWORD *)a10 + 1);
  v38 = a10[25];
  v39 = a10[24];
  v36 = *((_QWORD *)a10 + 5);
  v37 = *((_QWORD *)a10 + 4);
  v35 = a10[48];
  v19 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a9, a1, v19);
  v20 = (int *)type metadata accessor for CustomItemExposureEvent.Model(0);
  v21 = a9 + v20[5];
  v22 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, a2, v22);
  v23 = a9 + v20[6];
  *(_QWORD *)v23 = v13;
  *(_QWORD *)(v23 + 8) = v14;
  *(_WORD *)(v23 + 16) = v15;
  v24 = a9 + v20[7];
  *(_OWORD *)v24 = v29;
  *(_QWORD *)(v24 + 16) = v16;
  *(_QWORD *)(v24 + 24) = v17;
  *(_DWORD *)(a9 + v20[8]) = v18;
  v25 = a9 + v20[9];
  *(_DWORD *)v25 = v31;
  *(_BYTE *)(v25 + 4) = v30;
  v26 = a9 + v20[10];
  *(_BYTE *)v26 = v34;
  *(_QWORD *)(v26 + 8) = v33;
  *(_QWORD *)(v26 + 16) = v32;
  result = sub_1D57DD5B8((uint64_t)v43, a9 + v20[11]);
  v28 = a9 + v20[12];
  *(_BYTE *)v28 = v42;
  *(_QWORD *)(v28 + 8) = v41;
  *(_QWORD *)(v28 + 16) = v40;
  *(_BYTE *)(v28 + 24) = v39;
  *(_BYTE *)(v28 + 25) = v38;
  *(_QWORD *)(v28 + 32) = v37;
  *(_QWORD *)(v28 + 40) = v36;
  *(_BYTE *)(v28 + 48) = v35;
  return result;
}

uint64_t sub_1D5866948(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5866980 + 4 * byte_1D5ABB150[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5866980()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D5866994()
{
  return 0x6174614477656976;
}

uint64_t sub_1D5866A14()
{
  return 0x74614470756F7267;
}

void sub_1D5866A28()
{
  JUMPOUT(0x1D5866A3CLL);
}

uint64_t sub_1D5866A48()
{
  unsigned __int8 *v0;

  return sub_1D5866948(*v0);
}

uint64_t sub_1D5866A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D586A1C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5866A74()
{
  sub_1D5866EAC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5866A9C()
{
  sub_1D5866EAC();
  return sub_1D5AAEEE0();
}

uint64_t CustomItemExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  int v19;
  char *v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  uint64_t v26;
  char v27[8];
  __int128 v28;
  char v29;
  char v30;
  __int128 v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  __int128 v38;

  v3 = v1;
  sub_1D58675B8(0, &qword_1EFF49E40, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v27[-v8 - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5866EAC();
  sub_1D5AAEEC8();
  LOBYTE(v33) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for CustomItemExposureEvent.Model(0);
    LOBYTE(v33) = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = (uint64_t *)(v3 + v10[6]);
    v12 = *v11;
    v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    *(_QWORD *)&v33 = v12;
    *((_QWORD *)&v33 + 1) = v13;
    LOWORD(v34) = (_WORD)v11;
    v27[0] = 2;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v14 = (__int128 *)(v3 + v10[7]);
    v15 = *v14;
    v17 = *((_QWORD *)v14 + 2);
    v16 = *((_QWORD *)v14 + 3);
    v33 = v15;
    v34 = v17;
    v35 = v16;
    v27[0] = 3;
    sub_1D5865D2C();
    sub_1D5AAED6C();
    LODWORD(v33) = *(_DWORD *)(v3 + v10[8]);
    v27[0] = 4;
    sub_1D57C9C4C();
    sub_1D5AAED6C();
    v18 = (int *)(v3 + v10[9]);
    v19 = *v18;
    LOBYTE(v18) = *((_BYTE *)v18 + 4);
    LODWORD(v33) = v19;
    BYTE4(v33) = (_BYTE)v18;
    v27[0] = 5;
    sub_1D57C8B9C();
    sub_1D5AAED18();
    v20 = (char *)(v3 + v10[10]);
    v37 = *v20;
    v38 = *(_OWORD *)(v20 + 8);
    v36 = 6;
    sub_1D57C65D4();
    sub_1D5AAED6C();
    sub_1D57DD5B8(v3 + v10[11], (uint64_t)&v33);
    sub_1D57DD5B8((uint64_t)&v33, (uint64_t)v27);
    HIBYTE(v26) = 7;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v21 = v3 + v10[12];
    v22 = *(_BYTE *)(v21 + 24);
    v23 = *(_BYTE *)(v21 + 25);
    v24 = *(_BYTE *)(v21 + 48);
    v27[0] = *(_BYTE *)v21;
    v28 = *(_OWORD *)(v21 + 8);
    v29 = v22;
    v30 = v23;
    v31 = *(_OWORD *)(v21 + 32);
    v32 = v24;
    HIBYTE(v26) = 8;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5866EAC()
{
  unint64_t result;

  result = qword_1EFF49E48;
  if (!qword_1EFF49E48)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABB3F4, &type metadata for CustomItemExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49E48);
  }
  return result;
}

uint64_t CustomItemExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  char v41;
  char v42;
  __int128 v43;
  char v44;
  char v45;
  __int128 v46;
  char v47;
  _BYTE v48[144];
  _BYTE v49[24];
  uint64_t v50;
  uint64_t v51;

  v32[0] = a2;
  v35 = sub_1D5AADFB0();
  v33 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v4 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D5AADF98();
  v34 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58675B8(0, &qword_1EFF49E50, MEMORY[0x1E0DED048]);
  v37 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v32 - v10;
  v40 = type metadata accessor for CustomItemExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v40);
  v38 = a1;
  v39 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5866EAC();
  v36 = v11;
  v13 = v51;
  sub_1D5AAEEB0();
  v32[1] = v5;
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  v49[0] = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v14 = (uint64_t)v39;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v39, v7, v5);
  v49[0] = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v15 = v4;
  v16 = v35;
  sub_1D5AAECD0();
  v17 = (int *)v40;
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v14 + *(int *)(v40 + 20), v15, v16);
  v48[0] = 2;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v18 = *(_QWORD *)&v49[8];
  v19 = *(_WORD *)&v49[16];
  v20 = v14 + v17[6];
  *(_QWORD *)v20 = *(_QWORD *)v49;
  *(_QWORD *)(v20 + 8) = v18;
  *(_WORD *)(v20 + 16) = v19;
  v48[0] = 3;
  sub_1D5865CE8();
  sub_1D5AAECD0();
  v21 = *(_QWORD *)&v49[16];
  v22 = v50;
  v23 = v14 + v17[7];
  *(_OWORD *)v23 = *(_OWORD *)v49;
  *(_QWORD *)(v23 + 16) = v21;
  *(_QWORD *)(v23 + 24) = v22;
  v48[0] = 4;
  sub_1D57C9C08();
  sub_1D5AAECD0();
  *(_DWORD *)(v14 + v17[8]) = *(_DWORD *)v49;
  v48[0] = 5;
  sub_1D57C8B58();
  sub_1D5AAEC7C();
  v24 = v49[4];
  v25 = v14 + v17[9];
  *(_DWORD *)v25 = *(_DWORD *)v49;
  *(_BYTE *)(v25 + 4) = v24;
  v48[0] = 6;
  sub_1D57C6590();
  sub_1D5AAECD0();
  v26 = v14 + v17[10];
  *(_BYTE *)v26 = v49[0];
  *(_OWORD *)(v26 + 8) = *(_OWORD *)&v49[8];
  v48[143] = 7;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  sub_1D57DD5B8((uint64_t)v49, (uint64_t)v48);
  sub_1D57DD5B8((uint64_t)v48, v14 + v17[11]);
  v41 = 8;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v36, v37);
  v27 = v44;
  v28 = v45;
  v29 = v47;
  v30 = v14 + v17[12];
  *(_BYTE *)v30 = v42;
  *(_OWORD *)(v30 + 8) = v43;
  *(_BYTE *)(v30 + 24) = v27;
  *(_BYTE *)(v30 + 25) = v28;
  *(_OWORD *)(v30 + 32) = v46;
  *(_BYTE *)(v30 + 48) = v29;
  sub_1D5867614(v14, v32[0]);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return sub_1D5867658(v14);
}

void sub_1D58675B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5866EAC();
    v7 = a3(a1, &type metadata for CustomItemExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5867614(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CustomItemExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5867658(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CustomItemExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5867694@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CustomItemExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58676A8(_QWORD *a1)
{
  return CustomItemExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58676BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CE4D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CED98, a1);
}

uint64_t sub_1D58676E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CEDD0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CEDB0, a1);
}

uint64_t sub_1D5867704@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9CEA80, (void (*)(void))sub_1D5865CE8, (void (*)(void))sub_1D5865D2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  v15 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v15, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
}

uint64_t *initializeBufferWithCopyOfBuffer for CustomItemExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v40 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9CEA80, (void (*)(void))sub_1D5865CE8, (void (*)(void))sub_1D5865D2C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return a1;
}

uint64_t destroy for CustomItemExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9CEA80, (void (*)(void))sub_1D5865CE8, (void (*)(void))sub_1D5865D2C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
}

uint64_t initializeWithCopy for CustomItemExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CEA80, (void (*)(void))sub_1D5865CE8, (void (*)(void))sub_1D5865D2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

uint64_t assignWithCopy for CustomItemExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CEA80, (void (*)(void))sub_1D5865CE8, (void (*)(void))sub_1D5865D2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  return a1;
}

uint64_t initializeWithTake for CustomItemExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CEA80, (void (*)(void))sub_1D5865CE8, (void (*)(void))sub_1D5865D2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  return a1;
}

uint64_t assignWithTake for CustomItemExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CEA80, (void (*)(void))sub_1D5865CE8, (void (*)(void))sub_1D5865D2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  return a1;
}

uint64_t getEnumTagSinglePayload for CustomItemExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58688F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9CEA80, (void (*)(void))sub_1D5865CE8, (void (*)(void))sub_1D5865D2C);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                  v8 = v20;
                  v12 = *(_QWORD *)(v20 - 8);
                  v13 = a3[12];
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for CustomItemExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5868B54(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9CEA80, (void (*)(void))sub_1D5865CE8, (void (*)(void))sub_1D5865D2C);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                  v10 = v22;
                  v14 = *(_QWORD *)(v22 - 8);
                  v15 = a4[12];
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5868DAC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9CEA80, (void (*)(void))sub_1D5865CE8, (void (*)(void))sub_1D5865D2C);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                  if (v8 <= 0x3F)
                    swift_initStructMetadata();
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for CustomItemExposureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v37 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v37 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    *((_WORD *)v14 + 8) = *((_WORD *)v15 + 8);
    v17 = (uint64_t *)((char *)a1 + v13);
    v18 = (uint64_t *)((char *)a2 + v13);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = v18[3];
    v17[2] = v18[2];
    v17[3] = v20;
    v21 = a3[9];
    *(_DWORD *)((char *)a1 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    *(_DWORD *)v22 = *(_DWORD *)v23;
    v22[4] = v23[4];
    v24 = a3[10];
    v25 = a3[11];
    v26 = (char *)a1 + v24;
    v27 = (char *)a2 + v24;
    *v26 = *v27;
    v28 = *((_QWORD *)v27 + 2);
    *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
    *((_QWORD *)v26 + 2) = v28;
    v29 = (char *)a1 + v25;
    v30 = (char *)a2 + v25;
    v31 = *(uint64_t *)((char *)a2 + v25 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31)
    {
      *(_WORD *)v29 = *(_WORD *)v30;
      *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
      *((_QWORD *)v29 + 2) = v31;
      *((_QWORD *)v29 + 3) = *((_QWORD *)v30 + 3);
      v32 = *((_QWORD *)v30 + 5);
      *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
      *((_QWORD *)v29 + 5) = v32;
      v33 = *((_QWORD *)v30 + 7);
      *((_QWORD *)v29 + 6) = *((_QWORD *)v30 + 6);
      *((_QWORD *)v29 + 7) = v33;
      v48 = *((_QWORD *)v30 + 9);
      *((_QWORD *)v29 + 8) = *((_QWORD *)v30 + 8);
      *((_QWORD *)v29 + 9) = v48;
      v29[80] = v30[80];
      v34 = *((_QWORD *)v30 + 12);
      *((_QWORD *)v29 + 11) = *((_QWORD *)v30 + 11);
      *((_QWORD *)v29 + 12) = v34;
      *((_QWORD *)v29 + 13) = *((_QWORD *)v30 + 13);
      v29[112] = v30[112];
      v35 = *((_QWORD *)v30 + 15);
      v36 = *((_QWORD *)v30 + 16);
      *((_QWORD *)v29 + 15) = v35;
      *((_QWORD *)v29 + 16) = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v38 = *((_OWORD *)v30 + 7);
      *((_OWORD *)v29 + 6) = *((_OWORD *)v30 + 6);
      *((_OWORD *)v29 + 7) = v38;
      *((_QWORD *)v29 + 16) = *((_QWORD *)v30 + 16);
      v39 = *((_OWORD *)v30 + 3);
      *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
      *((_OWORD *)v29 + 3) = v39;
      v40 = *((_OWORD *)v30 + 5);
      *((_OWORD *)v29 + 4) = *((_OWORD *)v30 + 4);
      *((_OWORD *)v29 + 5) = v40;
      v41 = *((_OWORD *)v30 + 1);
      *(_OWORD *)v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v41;
    }
    v42 = a3[12];
    v43 = (char *)a1 + v42;
    v44 = (char *)a2 + v42;
    *v43 = *v44;
    v45 = *((_QWORD *)v44 + 2);
    *((_QWORD *)v43 + 1) = *((_QWORD *)v44 + 1);
    *((_QWORD *)v43 + 2) = v45;
    *((_WORD *)v43 + 12) = *((_WORD *)v44 + 12);
    v46 = *((_QWORD *)v44 + 5);
    *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
    *((_QWORD *)v43 + 5) = v46;
    v43[48] = v44[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for CustomItemExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 44) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CustomItemExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v15;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  v16 = (_QWORD *)(a1 + v12);
  v17 = (_QWORD *)(a2 + v12);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = v17[3];
  v16[2] = v17[2];
  v16[3] = v19;
  v20 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  v23 = a3[10];
  v24 = a3[11];
  v25 = a1 + v23;
  v26 = a2 + v23;
  *(_BYTE *)v25 = *(_BYTE *)v26;
  v27 = *(_QWORD *)(v26 + 16);
  *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
  *(_QWORD *)(v25 + 16) = v27;
  v28 = a1 + v24;
  v29 = a2 + v24;
  v30 = *(_QWORD *)(a2 + v24 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30)
  {
    *(_WORD *)v28 = *(_WORD *)v29;
    *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
    *(_QWORD *)(v28 + 16) = v30;
    *(_QWORD *)(v28 + 24) = *(_QWORD *)(v29 + 24);
    v31 = *(_QWORD *)(v29 + 40);
    *(_QWORD *)(v28 + 32) = *(_QWORD *)(v29 + 32);
    *(_QWORD *)(v28 + 40) = v31;
    v32 = *(_QWORD *)(v29 + 56);
    *(_QWORD *)(v28 + 48) = *(_QWORD *)(v29 + 48);
    *(_QWORD *)(v28 + 56) = v32;
    v46 = *(_QWORD *)(v29 + 72);
    *(_QWORD *)(v28 + 64) = *(_QWORD *)(v29 + 64);
    *(_QWORD *)(v28 + 72) = v46;
    *(_BYTE *)(v28 + 80) = *(_BYTE *)(v29 + 80);
    v33 = *(_QWORD *)(v29 + 96);
    *(_QWORD *)(v28 + 88) = *(_QWORD *)(v29 + 88);
    *(_QWORD *)(v28 + 96) = v33;
    *(_QWORD *)(v28 + 104) = *(_QWORD *)(v29 + 104);
    *(_BYTE *)(v28 + 112) = *(_BYTE *)(v29 + 112);
    v34 = *(_QWORD *)(v29 + 120);
    v35 = *(_QWORD *)(v29 + 128);
    *(_QWORD *)(v28 + 120) = v34;
    *(_QWORD *)(v28 + 128) = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v36 = *(_OWORD *)(v29 + 112);
    *(_OWORD *)(v28 + 96) = *(_OWORD *)(v29 + 96);
    *(_OWORD *)(v28 + 112) = v36;
    *(_QWORD *)(v28 + 128) = *(_QWORD *)(v29 + 128);
    v37 = *(_OWORD *)(v29 + 48);
    *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
    *(_OWORD *)(v28 + 48) = v37;
    v38 = *(_OWORD *)(v29 + 80);
    *(_OWORD *)(v28 + 64) = *(_OWORD *)(v29 + 64);
    *(_OWORD *)(v28 + 80) = v38;
    v39 = *(_OWORD *)(v29 + 16);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v39;
  }
  v40 = a3[12];
  v41 = a1 + v40;
  v42 = a2 + v40;
  *(_BYTE *)v41 = *(_BYTE *)v42;
  v43 = *(_QWORD *)(v42 + 16);
  *(_QWORD *)(v41 + 8) = *(_QWORD *)(v42 + 8);
  *(_QWORD *)(v41 + 16) = v43;
  *(_WORD *)(v41 + 24) = *(_WORD *)(v42 + 24);
  v44 = *(_QWORD *)(v42 + 40);
  *(_QWORD *)(v41 + 32) = *(_QWORD *)(v42 + 32);
  *(_QWORD *)(v41 + 40) = v44;
  *(_BYTE *)(v41 + 48) = *(_BYTE *)(v42 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CustomItemExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  *(_BYTE *)(v12 + 17) = *(_BYTE *)(v13 + 17);
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = a2 + v14;
  *v15 = *(_QWORD *)(a2 + v14);
  v15[1] = *(_QWORD *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[2] = *(_QWORD *)(v16 + 16);
  v15[3] = *(_QWORD *)(v16 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  v17 = a3[9];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_BYTE *)(v19 + 4);
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = v20;
  v21 = a3[10];
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_BYTE *)v22 = *(_BYTE *)v23;
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
  *(_QWORD *)(v22 + 16) = *(_QWORD *)(v23 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = a3[11];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)(a1 + v24 + 16);
  v28 = *(_QWORD *)(a2 + v24 + 16);
  if (v27)
  {
    if (v28)
    {
      *(_BYTE *)v25 = *(_BYTE *)v26;
      *(_BYTE *)(v25 + 1) = *(_BYTE *)(v26 + 1);
      *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
      *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v25 + 24) = *(_DWORD *)(v26 + 24);
      *(_DWORD *)(v25 + 28) = *(_DWORD *)(v26 + 28);
      *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v25 + 40) = *(_QWORD *)(v26 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v25 + 48) = *(_QWORD *)(v26 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v25 + 56) = *(_QWORD *)(v26 + 56);
      *(_QWORD *)(v25 + 64) = *(_QWORD *)(v26 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v25 + 72) = *(_QWORD *)(v26 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v25 + 80) = *(_BYTE *)(v26 + 80);
      *(_QWORD *)(v25 + 88) = *(_QWORD *)(v26 + 88);
      *(_QWORD *)(v25 + 96) = *(_QWORD *)(v26 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v29 = *(_QWORD *)(v26 + 104);
      *(_BYTE *)(v25 + 112) = *(_BYTE *)(v26 + 112);
      *(_QWORD *)(v25 + 104) = v29;
      *(_QWORD *)(v25 + 120) = *(_QWORD *)(v26 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v25 + 128) = *(_QWORD *)(v26 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v25);
      *(_OWORD *)v25 = *(_OWORD *)v26;
      v31 = *(_OWORD *)(v26 + 64);
      v33 = *(_OWORD *)(v26 + 16);
      v32 = *(_OWORD *)(v26 + 32);
      *(_OWORD *)(v25 + 48) = *(_OWORD *)(v26 + 48);
      *(_OWORD *)(v25 + 64) = v31;
      *(_OWORD *)(v25 + 16) = v33;
      *(_OWORD *)(v25 + 32) = v32;
      v35 = *(_OWORD *)(v26 + 96);
      v34 = *(_OWORD *)(v26 + 112);
      v36 = *(_OWORD *)(v26 + 80);
      *(_QWORD *)(v25 + 128) = *(_QWORD *)(v26 + 128);
      *(_OWORD *)(v25 + 96) = v35;
      *(_OWORD *)(v25 + 112) = v34;
      *(_OWORD *)(v25 + 80) = v36;
    }
  }
  else if (v28)
  {
    *(_BYTE *)v25 = *(_BYTE *)v26;
    *(_BYTE *)(v25 + 1) = *(_BYTE *)(v26 + 1);
    *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
    *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
    *(_DWORD *)(v25 + 24) = *(_DWORD *)(v26 + 24);
    *(_DWORD *)(v25 + 28) = *(_DWORD *)(v26 + 28);
    *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
    *(_QWORD *)(v25 + 40) = *(_QWORD *)(v26 + 40);
    *(_QWORD *)(v25 + 48) = *(_QWORD *)(v26 + 48);
    *(_QWORD *)(v25 + 56) = *(_QWORD *)(v26 + 56);
    *(_QWORD *)(v25 + 64) = *(_QWORD *)(v26 + 64);
    *(_QWORD *)(v25 + 72) = *(_QWORD *)(v26 + 72);
    *(_BYTE *)(v25 + 80) = *(_BYTE *)(v26 + 80);
    *(_QWORD *)(v25 + 88) = *(_QWORD *)(v26 + 88);
    *(_QWORD *)(v25 + 96) = *(_QWORD *)(v26 + 96);
    v30 = *(_QWORD *)(v26 + 104);
    *(_BYTE *)(v25 + 112) = *(_BYTE *)(v26 + 112);
    *(_QWORD *)(v25 + 104) = v30;
    *(_QWORD *)(v25 + 120) = *(_QWORD *)(v26 + 120);
    *(_QWORD *)(v25 + 128) = *(_QWORD *)(v26 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v25 = *(_OWORD *)v26;
    v37 = *(_OWORD *)(v26 + 16);
    v38 = *(_OWORD *)(v26 + 32);
    v39 = *(_OWORD *)(v26 + 64);
    *(_OWORD *)(v25 + 48) = *(_OWORD *)(v26 + 48);
    *(_OWORD *)(v25 + 64) = v39;
    *(_OWORD *)(v25 + 16) = v37;
    *(_OWORD *)(v25 + 32) = v38;
    v40 = *(_OWORD *)(v26 + 80);
    v41 = *(_OWORD *)(v26 + 96);
    v42 = *(_OWORD *)(v26 + 112);
    *(_QWORD *)(v25 + 128) = *(_QWORD *)(v26 + 128);
    *(_OWORD *)(v25 + 96) = v41;
    *(_OWORD *)(v25 + 112) = v42;
    *(_OWORD *)(v25 + 80) = v40;
  }
  v43 = a3[12];
  v44 = a1 + v43;
  v45 = a2 + v43;
  *(_BYTE *)v44 = *(_BYTE *)(a2 + v43);
  *(_QWORD *)(v44 + 8) = *(_QWORD *)(a2 + v43 + 8);
  *(_QWORD *)(v44 + 16) = *(_QWORD *)(a2 + v43 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v44 + 24) = *(_BYTE *)(v45 + 24);
  *(_BYTE *)(v44 + 25) = *(_BYTE *)(v45 + 25);
  *(_QWORD *)(v44 + 32) = *(_QWORD *)(v45 + 32);
  *(_QWORD *)(v44 + 40) = *(_QWORD *)(v45 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v44 + 48) = *(_BYTE *)(v45 + 48);
  return a1;
}

uint64_t initializeWithTake for CustomItemExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  v15 = (_OWORD *)(a1 + v12);
  v16 = (_OWORD *)(a2 + v12);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_DWORD *)v19 = *(_DWORD *)v20;
  *(_BYTE *)(v19 + 4) = *(_BYTE *)(v20 + 4);
  v21 = a3[10];
  v22 = a3[11];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
  v25 = a1 + v22;
  v26 = a2 + v22;
  v27 = *(_OWORD *)(v26 + 48);
  *(_OWORD *)(v25 + 32) = *(_OWORD *)(v26 + 32);
  *(_OWORD *)(v25 + 48) = v27;
  v28 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v28;
  *(_QWORD *)(v25 + 128) = *(_QWORD *)(v26 + 128);
  v29 = *(_OWORD *)(v26 + 112);
  *(_OWORD *)(v25 + 96) = *(_OWORD *)(v26 + 96);
  *(_OWORD *)(v25 + 112) = v29;
  v30 = *(_OWORD *)(v26 + 80);
  *(_OWORD *)(v25 + 64) = *(_OWORD *)(v26 + 64);
  *(_OWORD *)(v25 + 80) = v30;
  v31 = a3[12];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v34;
  *(_OWORD *)(v32 + 32) = *(_OWORD *)(v33 + 32);
  *(_BYTE *)(v32 + 48) = *(_BYTE *)(v33 + 48);
  return a1;
}

uint64_t assignWithTake for CustomItemExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  *(_WORD *)(v12 + 16) = *(_WORD *)(v13 + 16);
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = a2 + v15;
  v18 = *(_QWORD *)(a2 + v15 + 8);
  *v16 = *(_QWORD *)(a2 + v15);
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v17 + 24);
  v16[2] = *(_QWORD *)(v17 + 16);
  v16[3] = v19;
  swift_bridgeObjectRelease();
  v20 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  v23 = a3[10];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  v27 = *(_QWORD *)(v25 + 8);
  v26 = *(_QWORD *)(v25 + 16);
  *(_QWORD *)(v24 + 8) = v27;
  *(_QWORD *)(v24 + 16) = v26;
  swift_bridgeObjectRelease();
  v28 = a3[11];
  v29 = a1 + v28;
  v30 = a2 + v28;
  if (!*(_QWORD *)(a1 + v28 + 16))
    goto LABEL_5;
  v31 = *(_QWORD *)(v30 + 16);
  if (!v31)
  {
    sub_1D57E17B8(v29);
LABEL_5:
    v34 = *(_OWORD *)(v30 + 112);
    *(_OWORD *)(v29 + 96) = *(_OWORD *)(v30 + 96);
    *(_OWORD *)(v29 + 112) = v34;
    *(_QWORD *)(v29 + 128) = *(_QWORD *)(v30 + 128);
    v35 = *(_OWORD *)(v30 + 48);
    *(_OWORD *)(v29 + 32) = *(_OWORD *)(v30 + 32);
    *(_OWORD *)(v29 + 48) = v35;
    v36 = *(_OWORD *)(v30 + 80);
    *(_OWORD *)(v29 + 64) = *(_OWORD *)(v30 + 64);
    *(_OWORD *)(v29 + 80) = v36;
    v37 = *(_OWORD *)(v30 + 16);
    *(_OWORD *)v29 = *(_OWORD *)v30;
    *(_OWORD *)(v29 + 16) = v37;
    goto LABEL_6;
  }
  *(_WORD *)v29 = *(_WORD *)v30;
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
  *(_QWORD *)(v29 + 16) = v31;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v29 + 24) = *(_QWORD *)(v30 + 24);
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v29 + 40) = *(_QWORD *)(v30 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v29 + 48) = *(_QWORD *)(v30 + 48);
  swift_bridgeObjectRelease();
  v32 = *(_QWORD *)(v30 + 64);
  *(_QWORD *)(v29 + 56) = *(_QWORD *)(v30 + 56);
  *(_QWORD *)(v29 + 64) = v32;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v29 + 72) = *(_QWORD *)(v30 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v29 + 80) = *(_BYTE *)(v30 + 80);
  v33 = *(_QWORD *)(v30 + 96);
  *(_QWORD *)(v29 + 88) = *(_QWORD *)(v30 + 88);
  *(_QWORD *)(v29 + 96) = v33;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v29 + 104) = *(_QWORD *)(v30 + 104);
  *(_BYTE *)(v29 + 112) = *(_BYTE *)(v30 + 112);
  *(_QWORD *)(v29 + 120) = *(_QWORD *)(v30 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v29 + 128) = *(_QWORD *)(v30 + 128);
  swift_bridgeObjectRelease();
LABEL_6:
  v38 = a3[12];
  v39 = a1 + v38;
  v40 = a2 + v38;
  *(_BYTE *)v39 = *(_BYTE *)v40;
  v41 = *(_QWORD *)(v40 + 16);
  *(_QWORD *)(v39 + 8) = *(_QWORD *)(v40 + 8);
  *(_QWORD *)(v39 + 16) = v41;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v39 + 24) = *(_BYTE *)(v40 + 24);
  *(_BYTE *)(v39 + 25) = *(_BYTE *)(v40 + 25);
  v42 = *(_QWORD *)(v40 + 40);
  *(_QWORD *)(v39 + 32) = *(_QWORD *)(v40 + 32);
  *(_QWORD *)(v39 + 40) = v42;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v39 + 48) = *(_BYTE *)(v40 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for CustomItemExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5869DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for CustomItemExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5869EAC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5869F54()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CustomItemExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1D586A06C + 4 * byte_1D5ABB15E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1D586A0A0 + 4 * byte_1D5ABB159[v4]))();
}

uint64_t sub_1D586A0A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D586A0A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D586A0B0);
  return result;
}

uint64_t sub_1D586A0BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D586A0C4);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1D586A0C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D586A0D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CustomItemExposureEvent.Model.CodingKeys()
{
  return &type metadata for CustomItemExposureEvent.Model.CodingKeys;
}

unint64_t sub_1D586A0F0()
{
  unint64_t result;

  result = qword_1EFF49F08;
  if (!qword_1EFF49F08)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABB3CC, &type metadata for CustomItemExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49F08);
  }
  return result;
}

unint64_t sub_1D586A138()
{
  unint64_t result;

  result = qword_1EFF49F10;
  if (!qword_1EFF49F10)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABB33C, &type metadata for CustomItemExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49F10);
  }
  return result;
}

unint64_t sub_1D586A180()
{
  unint64_t result;

  result = qword_1EFF49F18;
  if (!qword_1EFF49F18)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABB364, &type metadata for CustomItemExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49F18);
  }
  return result;
}

uint64_t sub_1D586A1C4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74496D6F74737563 && a2 == 0xEE00617461446D65 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AECA50 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AEDC30 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_1D586A590()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADAB8();
  __swift_allocate_value_buffer(v0, qword_1EFF49F20);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFF49F20);
  *(_QWORD *)v1 = 0x726F70732E6D6F63;
  *(_QWORD *)(v1 + 8) = 0xEA00000000007374;
  *(_QWORD *)(v1 + 16) = 6;
  *(_BYTE *)(v1 + 24) = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t static UnfollowSportsTagEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47038, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF49F20, a1);
}

uint64_t sub_1D586A634()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADD34();
  __swift_allocate_value_buffer(v0, qword_1EFF49F38);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFF49F38);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0CF8380], v0);
}

uint64_t static UnfollowSportsTagEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47040, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF49F38, a1);
}

uint64_t UnfollowSportsTagEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t UnfollowSportsTagEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*UnfollowSportsTagEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t UnfollowSportsTagEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfollowSportsTagEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for UnfollowSportsTagEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF49FC0);
}

uint64_t UnfollowSportsTagEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfollowSportsTagEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UnfollowSportsTagEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for UnfollowSportsTagEvent(0);
  return nullsub_1;
}

uint64_t UnfollowSportsTagEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfollowSportsTagEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t UnfollowSportsTagEvent.tagData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfollowSportsTagEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UnfollowSportsTagEvent.tagData.modify())()
{
  type metadata accessor for UnfollowSportsTagEvent(0);
  return nullsub_1;
}

uint64_t UnfollowSportsTagEvent.sportsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfollowSportsTagEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t UnfollowSportsTagEvent.sportsData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfollowSportsTagEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UnfollowSportsTagEvent.sportsData.modify())()
{
  type metadata accessor for UnfollowSportsTagEvent(0);
  return nullsub_1;
}

uint64_t UnfollowSportsTagEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfollowSportsTagEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t UnfollowSportsTagEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnfollowSportsTagEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UnfollowSportsTagEvent.viewData.modify())()
{
  type metadata accessor for UnfollowSportsTagEvent(0);
  return nullsub_1;
}

uint64_t UnfollowSportsTagEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for UnfollowSportsTagEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
}

uint64_t UnfollowSportsTagEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t UnfollowSportsTagEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for UnfollowSportsTagEvent.Model(0) + 20));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for UnfollowSportsTagEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4A060);
}

uint64_t UnfollowSportsTagEvent.Model.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for UnfollowSportsTagEvent.Model(0) + 24));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t UnfollowSportsTagEvent.Model.sportsData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for UnfollowSportsTagEvent.Model(0) + 28));
  return swift_bridgeObjectRetain();
}

uint64_t UnfollowSportsTagEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for UnfollowSportsTagEvent.Model(0) + 32));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

int *UnfollowSportsTagEvent.Model.init(eventData:userBundleSubscriptionContextData:tagData:sportsData:viewData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  int *result;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  uint64_t v26;

  v8 = *a2;
  v9 = *((_QWORD *)a2 + 1);
  v10 = *((_QWORD *)a2 + 2);
  v11 = a2[24];
  v12 = a2[25];
  v13 = *((_QWORD *)a2 + 4);
  v14 = *((_QWORD *)a2 + 5);
  v15 = a2[48];
  v21 = a3[1];
  v22 = *a3;
  v23 = *a4;
  v25 = a5[1];
  v26 = *a5;
  v24 = *((_WORD *)a5 + 8);
  v16 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a6, a1, v16);
  result = (int *)type metadata accessor for UnfollowSportsTagEvent.Model(0);
  v18 = a6 + result[5];
  *(_BYTE *)v18 = v8;
  *(_QWORD *)(v18 + 8) = v9;
  *(_QWORD *)(v18 + 16) = v10;
  *(_BYTE *)(v18 + 24) = v11;
  *(_BYTE *)(v18 + 25) = v12;
  *(_QWORD *)(v18 + 32) = v13;
  *(_QWORD *)(v18 + 40) = v14;
  *(_BYTE *)(v18 + 48) = v15;
  v19 = (_QWORD *)(a6 + result[6]);
  *v19 = v22;
  v19[1] = v21;
  *(_QWORD *)(a6 + result[7]) = v23;
  v20 = a6 + result[8];
  *(_QWORD *)v20 = v26;
  *(_QWORD *)(v20 + 8) = v25;
  *(_WORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1D586AEA0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D586AED4 + 4 * byte_1D5ABB450[*v0]))(0x746144746E657665, 0xE900000000000061);
}

unint64_t sub_1D586AED4()
{
  return 0xD000000000000021;
}

uint64_t sub_1D586AEF0()
{
  return 0x61746144676174;
}

uint64_t sub_1D586AF08()
{
  return 0x61447374726F7073;
}

uint64_t sub_1D586AF24()
{
  return 0x6174614477656976;
}

uint64_t sub_1D586AF3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D586CFA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D586AF60()
{
  sub_1D586B224();
  return sub_1D5AAEED4();
}

uint64_t sub_1D586AF88()
{
  sub_1D586B224();
  return sub_1D5AAEEE0();
}

uint64_t UnfollowSportsTagEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  char v25;
  char v26;
  __int128 v27;
  char v28;

  v3 = v1;
  sub_1D586B6D4(0, &qword_1EFF49F50, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D586B224();
  sub_1D5AAEEC8();
  LOBYTE(v23) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for UnfollowSportsTagEvent.Model(0);
    v11 = v3 + v10[5];
    v12 = *(_BYTE *)(v11 + 24);
    v13 = *(_BYTE *)(v11 + 25);
    v14 = *(_BYTE *)(v11 + 48);
    LOBYTE(v23) = *(_BYTE *)v11;
    v24 = *(_OWORD *)(v11 + 8);
    v25 = v12;
    v26 = v13;
    v27 = *(_OWORD *)(v11 + 32);
    v28 = v14;
    HIBYTE(v22) = 1;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v15 = (uint64_t *)(v3 + v10[6]);
    v17 = *v15;
    v16 = v15[1];
    v23 = v17;
    *(_QWORD *)&v24 = v16;
    HIBYTE(v22) = 2;
    sub_1D57C6738();
    sub_1D5AAED6C();
    v23 = *(_QWORD *)(v3 + v10[7]);
    HIBYTE(v22) = 3;
    sub_1D57CBB60();
    sub_1D5AAED6C();
    v18 = (uint64_t *)(v3 + v10[8]);
    v19 = *v18;
    v20 = v18[1];
    LOWORD(v18) = *((_WORD *)v18 + 8);
    v23 = v19;
    *(_QWORD *)&v24 = v20;
    WORD4(v24) = (_WORD)v18;
    HIBYTE(v22) = 4;
    sub_1D57C62A4();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D586B224()
{
  unint64_t result;

  result = qword_1EFF49F58;
  if (!qword_1EFF49F58)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABB66C, &type metadata for UnfollowSportsTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF49F58);
  }
  return result;
}

uint64_t UnfollowSportsTagEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __int16 v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  __int128 v32;
  char v33;
  char v34;
  __int128 v35;
  char v36;
  char v37;

  v25 = a2;
  v3 = sub_1D5AADF98();
  v26 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v28 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D586B6D4(0, &qword_1EFF49F60, MEMORY[0x1E0DED048]);
  v27 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - v7;
  v9 = (int *)type metadata accessor for UnfollowSportsTagEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D586B224();
  v29 = v8;
  v12 = (uint64_t)v30;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v24 = v6;
  v13 = v26;
  v30 = a1;
  LOBYTE(v31) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v28, v3);
  v37 = 1;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v14 = v33;
  v15 = v34;
  v16 = v36;
  v17 = &v11[v9[5]];
  *v17 = v31;
  *(_OWORD *)(v17 + 8) = v32;
  v17[24] = v14;
  v17[25] = v15;
  *((_OWORD *)v17 + 2) = v35;
  v17[48] = v16;
  v37 = 2;
  sub_1D57C66F4();
  sub_1D5AAECD0();
  v18 = v32;
  v19 = &v11[v9[6]];
  *(_QWORD *)v19 = v31;
  *((_QWORD *)v19 + 1) = v18;
  v37 = 3;
  sub_1D57CBB1C();
  sub_1D5AAECD0();
  *(_QWORD *)&v11[v9[7]] = v31;
  v37 = 4;
  sub_1D57C6260();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v29, v27);
  v20 = v32;
  v21 = WORD4(v32);
  v22 = &v11[v9[8]];
  *(_QWORD *)v22 = v31;
  *((_QWORD *)v22 + 1) = v20;
  *((_WORD *)v22 + 8) = v21;
  sub_1D586B730((uint64_t)v11, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return sub_1D586B774((uint64_t)v11);
}

void sub_1D586B6D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D586B224();
    v7 = a3(a1, &type metadata for UnfollowSportsTagEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D586B730(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UnfollowSportsTagEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D586B774(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UnfollowSportsTagEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D586B7B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UnfollowSportsTagEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D586B7C4(_QWORD *a1)
{
  return UnfollowSportsTagEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D586B7D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47038, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF49F20, a1);
}

uint64_t sub_1D586B7FC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47040, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF49F38, a1);
}

uint64_t sub_1D586B820@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
}

uint64_t *initializeBufferWithCopyOfBuffer for UnfollowSportsTagEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for UnfollowSportsTagEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t initializeWithCopy for UnfollowSportsTagEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for UnfollowSportsTagEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for UnfollowSportsTagEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for UnfollowSportsTagEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnfollowSportsTagEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D586C2C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          v8 = v16;
          v12 = *(_QWORD *)(v16 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for UnfollowSportsTagEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D586C42C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          v10 = v18;
          v14 = *(_QWORD *)(v18 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D586C594()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9CF130, (void (*)(void))sub_1D57CBB1C, (void (*)(void))sub_1D57CBB60);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for UnfollowSportsTagEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    *((_WORD *)v10 + 12) = *((_WORD *)v11 + 12);
    v13 = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
    *((_QWORD *)v10 + 5) = v13;
    v10[48] = v11[48];
    v14 = (uint64_t *)((char *)a1 + v9);
    v15 = (uint64_t *)((char *)a2 + v9);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v18[16] = v19[16];
    v18[17] = v19[17];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for UnfollowSportsTagEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UnfollowSportsTagEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  *(_WORD *)(v9 + 24) = *(_WORD *)(v10 + 24);
  v12 = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v9 + 40) = v12;
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  v13 = (_QWORD *)(a1 + v8);
  v14 = (_QWORD *)(a2 + v8);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v19;
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UnfollowSportsTagEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[8];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  *(_BYTE *)(v14 + 17) = *(_BYTE *)(v15 + 17);
  return a1;
}

uint64_t initializeWithTake for UnfollowSportsTagEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  v12 = *(_OWORD *)(v10 + 32);
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = v12;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v13 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_WORD *)(v14 + 16) = *(_WORD *)(v15 + 16);
  return a1;
}

uint64_t assignWithTake for UnfollowSportsTagEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  v11 = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)(v19 + 8);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(v18 + 8) = v20;
  swift_bridgeObjectRelease();
  *(_WORD *)(v18 + 16) = *(_WORD *)(v19 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnfollowSportsTagEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D586CC60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for UnfollowSportsTagEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D586CCEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D586CD68()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for UnfollowSportsTagEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D586CE48 + 4 * byte_1D5ABB45A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D586CE7C + 4 * byte_1D5ABB455[v4]))();
}

uint64_t sub_1D586CE7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D586CE84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D586CE8CLL);
  return result;
}

uint64_t sub_1D586CE98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D586CEA0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D586CEA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D586CEAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UnfollowSportsTagEvent.Model.CodingKeys()
{
  return &type metadata for UnfollowSportsTagEvent.Model.CodingKeys;
}

unint64_t sub_1D586CECC()
{
  unint64_t result;

  result = qword_1EFF4A0A8;
  if (!qword_1EFF4A0A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABB644, &type metadata for UnfollowSportsTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A0A8);
  }
  return result;
}

unint64_t sub_1D586CF14()
{
  unint64_t result;

  result = qword_1EFF4A0B0;
  if (!qword_1EFF4A0B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABB5B4, &type metadata for UnfollowSportsTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A0B0);
  }
  return result;
}

unint64_t sub_1D586CF5C()
{
  unint64_t result;

  result = qword_1EFF4A0B8;
  if (!qword_1EFF4A0B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABB5DC, &type metadata for UnfollowSportsTagEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A0B8);
  }
  return result;
}

uint64_t sub_1D586CFA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61746144676174 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x61447374726F7073 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

NewsAnalytics::FeedJournalGroupResultOutput_optional __swiftcall FeedJournalGroupResultOutput.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::FeedJournalGroupResultOutput_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FeedJournalGroupResultOutput.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D586D254 + 4 * byte_1D5ABB6C0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D586D254()
{
  return 1954047342;
}

uint64_t sub_1D586D264()
{
  return 1953718636;
}

uint64_t sub_1D586D274()
{
  return 1819242352;
}

uint64_t sub_1D586D284()
{
  return 0x646570706F7264;
}

uint64_t sub_1D586D298()
{
  return 1885956979;
}

uint64_t sub_1D586D2A8()
{
  return 1701736302;
}

void sub_1D586D2B8(char *a1)
{
  sub_1D5A36A74(*a1);
}

unint64_t sub_1D586D2C8()
{
  unint64_t result;

  result = qword_1EFF4A0C0;
  if (!qword_1EFF4A0C0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedJournalGroupResultOutput, &type metadata for FeedJournalGroupResultOutput);
    atomic_store(result, (unint64_t *)&qword_1EFF4A0C0);
  }
  return result;
}

void sub_1D586D30C()
{
  char *v0;

  sub_1D5AA9F74(0, *v0);
}

void sub_1D586D318()
{
  __asm { BR              X10 }
}

uint64_t sub_1D586D354()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D586D3CC(uint64_t a1)
{
  char *v1;

  sub_1D5AA9F74(a1, *v1);
}

NewsAnalytics::FeedJournalGroupResultOutput_optional sub_1D586D3D4(Swift::String *a1)
{
  return FeedJournalGroupResultOutput.init(rawValue:)(*a1);
}

uint64_t sub_1D586D3E0()
{
  sub_1D57C6DD8();
  return sub_1D5AAE928();
}

uint64_t storeEnumTagSinglePayload for FeedJournalGroupResultOutput(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D586D488 + 4 * byte_1D5ABB6DA[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D586D4BC + 4 * byte_1D5ABB6D5[v4]))();
}

uint64_t sub_1D586D4BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D586D4C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D586D4CCLL);
  return result;
}

uint64_t sub_1D586D4D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D586D4E0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D586D4E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D586D4EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedJournalGroupResultOutput()
{
  return &type metadata for FeedJournalGroupResultOutput;
}

double sub_1D586D508@<D0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  unint64_t v6;
  unsigned int v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  unint64_t v14;
  id v15;
  void *v16;
  unint64_t v17;
  id v18;
  void *v19;
  unint64_t v20;
  unsigned int v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  unint64_t v28;
  id v29;
  void *v30;
  unint64_t v31;
  unint64_t v32;
  unsigned int v33;
  unsigned int v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  double result;
  char v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  unsigned int v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_widgetContentId);
  if (v4)
  {
    v5 = v4;
    v65 = sub_1D5AAE820();
    v66 = v6;

  }
  else
  {
    v65 = 0x6E776F6E6B6E75;
    v66 = 0xE700000000000000;
  }
  v7 = objc_msgSend(v2, sel_widgetEngagementType) - 1;
  if (v7 > 9)
    v49 = 0;
  else
    v49 = byte_1D5ABB830[v7];
  v8 = objc_msgSend(v2, sel_webEmbedId);
  if (v8)
  {
    v9 = v8;
    v10 = sub_1D5AAE820();
    v63 = v11;
    v64 = v10;

  }
  else
  {
    v63 = 0;
    v64 = 0;
  }
  v12 = objc_msgSend(v2, sel_articleId);
  if (v12)
  {
    v13 = v12;
    v61 = sub_1D5AAE820();
    v62 = v14;

  }
  else
  {
    v61 = 0x6E776F6E6B6E75;
    v62 = 0xE700000000000000;
  }
  v15 = objc_msgSend(v2, sel_widgetSectionId);
  if (v15)
  {
    v16 = v15;
    v59 = sub_1D5AAE820();
    v60 = v17;

  }
  else
  {
    v59 = 0x6E776F6E6B6E75;
    v60 = 0xE700000000000000;
  }
  v58 = objc_msgSend(v2, sel_widgetArticleCountInSection);
  v57 = objc_msgSend(v2, sel_widgetSectionDisplayRank);
  v18 = objc_msgSend(v2, sel_sourceChannelId);
  if (v18)
  {
    v19 = v18;
    v55 = sub_1D5AAE820();
    v56 = v20;

  }
  else
  {
    v55 = 0x6E776F6E6B6E75;
    v56 = 0xE700000000000000;
  }
  v54 = objc_msgSend(v2, sel_contentFetchDate);
  v21 = objc_msgSend(v2, sel_widgetDisplayMode);
  v22 = objc_msgSend(v2, sel_contentId);
  if (v22)
  {
    v23 = v22;
    v24 = sub_1D5AAE820();
    v52 = v25;
    v53 = v24;

  }
  else
  {
    v52 = 0;
    v53 = 0;
  }
  v26 = objc_msgSend(v2, sel_widgetUserId);
  if (v26)
  {
    v27 = v26;
    v50 = sub_1D5AAE820();
    v51 = v28;

  }
  else
  {
    v50 = 0x6E776F6E6B6E75;
    v51 = 0xE700000000000000;
  }
  v29 = objc_msgSend(v2, sel_engagementTargetUrl);
  if (v29)
  {
    v30 = v29;
    v67 = sub_1D5AAE820();
    v32 = v31;

  }
  else
  {
    v67 = 0x6E776F6E6B6E75;
    v32 = 0xE700000000000000;
  }
  v33 = objc_msgSend(v2, sel_widgetType);
  v34 = objc_msgSend(v2, sel_widgetExposureStackLocation);
  v35 = objc_msgSend(v2, sel_storyType);
  if (v35)
  {
    v36 = v35;
    v37 = sub_1D5AAE820();
    v39 = v38;

  }
  else
  {
    v37 = 0;
    v39 = 0;
  }
  v40 = objc_msgSend(v2, sel_entryId);
  if (v40)
  {
    v41 = v40;
    v42 = sub_1D5AAE820();
    v44 = v43;

  }
  else
  {
    v42 = 0;
    v44 = 0;
  }
  v45 = 0x504030201000000uLL >> (8 * v21);
  if (v34 >= 6)
    v46 = 0;
  else
    v46 = v34;
  if (v33 >= 4)
    v47 = 0;
  else
    v47 = v33;
  *(_QWORD *)a1 = v65;
  *(_QWORD *)(a1 + 8) = v66;
  if (v21 >= 8)
    LOBYTE(v45) = 0;
  *(_BYTE *)(a1 + 16) = v49;
  *(_QWORD *)(a1 + 24) = v64;
  *(_QWORD *)(a1 + 32) = v63;
  *(_BYTE *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 44) = 0;
  *(_BYTE *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = v61;
  *(_QWORD *)(a1 + 64) = v62;
  *(_BYTE *)(a1 + 72) = 1;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_WORD *)(a1 + 96) = 1;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_BYTE *)(a1 + 120) = 1;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 144) = 0;
  *(_BYTE *)(a1 + 152) = 1;
  *(_QWORD *)(a1 + 160) = MEMORY[0x1E0DEE9D8];
  *(_WORD *)(a1 + 176) = 0;
  *(_DWORD *)(a1 + 168) = 0;
  *(_DWORD *)(a1 + 171) = 0;
  *(_QWORD *)(a1 + 184) = v59;
  *(_QWORD *)(a1 + 192) = v60;
  *(_DWORD *)(a1 + 200) = v58;
  *(_DWORD *)(a1 + 204) = v57;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_BYTE *)(a1 + 256) = 5;
  *(_QWORD *)(a1 + 264) = 0;
  *(_QWORD *)(a1 + 272) = 0;
  *(_QWORD *)(a1 + 280) = 0;
  *(_BYTE *)(a1 + 288) = 1;
  *(_QWORD *)(a1 + 296) = 0;
  *(_QWORD *)(a1 + 304) = 0;
  *(_QWORD *)(a1 + 312) = v55;
  *(_QWORD *)(a1 + 320) = v56;
  *(_QWORD *)(a1 + 328) = v54;
  *(_BYTE *)(a1 + 336) = v45;
  *(_QWORD *)(a1 + 344) = v53;
  *(_QWORD *)(a1 + 352) = v52;
  *(_QWORD *)(a1 + 360) = v50;
  *(_QWORD *)(a1 + 368) = v51;
  *(_QWORD *)(a1 + 376) = v67;
  *(_QWORD *)(a1 + 384) = v32;
  *(_BYTE *)(a1 + 392) = v47;
  *(_BYTE *)(a1 + 393) = v46;
  *(_QWORD *)(a1 + 400) = v37;
  *(_QWORD *)(a1 + 408) = v39;
  result = 0.0;
  *(_OWORD *)(a1 + 416) = xmmword_1D5ABB820;
  *(_QWORD *)(a1 + 432) = v42;
  *(_QWORD *)(a1 + 440) = v44;
  return result;
}

void AppConfigPaywallData.paywallConfigOfferType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AppConfigPaywallData.paywallConfigOfferType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AppConfigPaywallData.paywallConfigOfferType.modify())()
{
  return nullsub_1;
}

NewsAnalytics::AppConfigPaywallData __swiftcall AppConfigPaywallData.init(paywallConfigOfferType:)(NewsAnalytics::AppConfigPaywallData paywallConfigOfferType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)paywallConfigOfferType.paywallConfigOfferType;
  return paywallConfigOfferType;
}

unint64_t sub_1D586DA04()
{
  return 0xD000000000000016;
}

uint64_t sub_1D586DA20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D586E0F4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D586DA48()
{
  sub_1D586DB9C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D586DA70()
{
  sub_1D586DB9C();
  return sub_1D5AAEEE0();
}

uint64_t AppConfigPaywallData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D586DD5C(0, &qword_1EFF4A0C8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D586DB9C();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D586DBE0();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D586DB9C()
{
  unint64_t result;

  result = qword_1EFF4A0D0;
  if (!qword_1EFF4A0D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABB9C8, &type metadata for AppConfigPaywallData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A0D0);
  }
  return result;
}

unint64_t sub_1D586DBE0()
{
  unint64_t result;

  result = qword_1EFF4A0D8;
  if (!qword_1EFF4A0D8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PaywallConfigOfferType, &type metadata for PaywallConfigOfferType);
    atomic_store(result, (unint64_t *)&qword_1EFF4A0D8);
  }
  return result;
}

uint64_t AppConfigPaywallData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D586DD5C(0, &qword_1EFF4A0E0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D586DB9C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D586DDB8();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D586DD5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D586DB9C();
    v7 = a3(a1, &type metadata for AppConfigPaywallData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D586DDB8()
{
  unint64_t result;

  result = qword_1EFF4A0E8;
  if (!qword_1EFF4A0E8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PaywallConfigOfferType, &type metadata for PaywallConfigOfferType);
    atomic_store(result, (unint64_t *)&qword_1EFF4A0E8);
  }
  return result;
}

unint64_t sub_1D586DE00()
{
  unint64_t result;

  result = qword_1EFF4A0F0;
  if (!qword_1EFF4A0F0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AppConfigPaywallData, &type metadata for AppConfigPaywallData);
    atomic_store(result, (unint64_t *)&qword_1EFF4A0F0);
  }
  return result;
}

unint64_t sub_1D586DE48()
{
  unint64_t result;

  result = qword_1EFF4A0F8;
  if (!qword_1EFF4A0F8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AppConfigPaywallData, &type metadata for AppConfigPaywallData);
    atomic_store(result, (unint64_t *)&qword_1EFF4A0F8);
  }
  return result;
}

uint64_t sub_1D586DE8C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return AppConfigPaywallData.init(from:)(a1, a2);
}

uint64_t sub_1D586DEA0(_QWORD *a1)
{
  return AppConfigPaywallData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for AppConfigPaywallData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D586DF00 + 4 * byte_1D5ABB845[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D586DF34 + 4 * byte_1D5ABB840[v4]))();
}

uint64_t sub_1D586DF34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D586DF3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D586DF44);
  return result;
}

uint64_t sub_1D586DF50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D586DF58);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D586DF5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D586DF64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppConfigPaywallData()
{
  return &type metadata for AppConfigPaywallData;
}

uint64_t storeEnumTagSinglePayload for AppConfigPaywallData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D586DFC0 + 4 * byte_1D5ABB84A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D586DFE0 + 4 * byte_1D5ABB84F[v4]))();
}

_BYTE *sub_1D586DFC0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D586DFE0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D586DFE8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D586DFF0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D586DFF8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D586E000(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AppConfigPaywallData.CodingKeys()
{
  return &type metadata for AppConfigPaywallData.CodingKeys;
}

unint64_t sub_1D586E020()
{
  unint64_t result;

  result = qword_1EFF4A100;
  if (!qword_1EFF4A100)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABB9A0, &type metadata for AppConfigPaywallData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A100);
  }
  return result;
}

unint64_t sub_1D586E068()
{
  unint64_t result;

  result = qword_1EFF4A108;
  if (!qword_1EFF4A108)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABB910, &type metadata for AppConfigPaywallData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A108);
  }
  return result;
}

unint64_t sub_1D586E0B0()
{
  unint64_t result;

  result = qword_1EFF4A110;
  if (!qword_1EFF4A110)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABB938, &type metadata for AppConfigPaywallData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A110);
  }
  return result;
}

uint64_t sub_1D586E0F4(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEDC50)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t ExtendedTabiData.packageAssetIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ExtendedTabiData.tabiData.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[7];
  v9 = v1[8];
  v10 = v1[9];
  v11 = v1[10];
  v12 = v1[11];
  v13 = v1[12];
  v14 = v1[13];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  a1[12] = v14;
  return sub_1D586E1E0(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1D586E1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1D586E278(a6);
  }
  return result;
}

uint64_t sub_1D586E278(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void __swiftcall ExtendedTabiData.init(packageAssetIDs:tabiData:)(NewsAnalytics::ExtendedTabiData *__return_ptr retstr, Swift::OpaquePointer packageAssetIDs, NewsAnalytics::TabiData_optional *tabiData)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  void *rawValue;

  v3 = *(_OWORD *)&tabiData->value.tabiPackageVersions._rawValue;
  retstr->tabiData.value.tabiConfigurationVersion = tabiData->value.tabiConfigurationVersion;
  *(_OWORD *)&retstr->tabiData.value.tabiPackageVersions._rawValue = v3;
  v4 = *(_OWORD *)&tabiData->value.requestSummary.value.eventAggregation._rawValue;
  *(_OWORD *)&retstr->tabiData.value.resolvedGlobalGraph = *(_OWORD *)&tabiData->value.resolvedGlobalGraph;
  *(_OWORD *)&retstr->tabiData.value.requestSummary.value.eventAggregation._rawValue = v4;
  v5 = *(_OWORD *)&tabiData->value.requestSummary.value.recommendedTags._rawValue;
  *(_OWORD *)&retstr->tabiData.value.requestSummary.value.personalizedPaywalls._rawValue = *(_OWORD *)&tabiData->value.requestSummary.value.personalizedPaywalls._rawValue;
  rawValue = tabiData->value.requestSummary.value.tagSuggestions._rawValue;
  retstr->packageAssetIDs = packageAssetIDs;
  *(_OWORD *)&retstr->tabiData.value.requestSummary.value.recommendedTags._rawValue = v5;
  retstr->tabiData.value.requestSummary.value.tagSuggestions._rawValue = rawValue;
}

double static TabiData.unknown.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)a1 = 0x6E776F6E6B6E75;
  *(_QWORD *)(a1 + 8) = 0xE700000000000000;
  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 16) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 24) = v1;
  *(_BYTE *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  return result;
}

uint64_t dispatch thunk of TabiDataProviderType.getTabiData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TabiDataProviderType.getExtendedTabiData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t destroy for ExtendedTabiData(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = *(_QWORD *)(a1 + 48);
    if (result)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t initializeWithCopy for ExtendedTabiData(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    v6 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v5;
    v7 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v7;
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v6)
    {
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 48) = v6;
      *(_QWORD *)(a1 + 56) = v8;
      v10 = *(_QWORD *)(a2 + 72);
      v11 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 64) = v9;
      *(_QWORD *)(a1 + 72) = v10;
      v12 = *(_QWORD *)(a2 + 88);
      v13 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 80) = v11;
      *(_QWORD *)(a1 + 88) = v12;
      v14 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = v13;
      *(_QWORD *)(a1 + 104) = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v18;
      v19 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v19;
    }
  }
  else
  {
    v15 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v15;
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    v16 = *(_OWORD *)(a2 + 24);
    *v4 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v16;
    v17 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v17;
  }
  return a1;
}

uint64_t assignWithCopy for ExtendedTabiData(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (__int128 *)(a1 + 8);
  v5 = (__int128 *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 16))
  {
    if (!v6)
    {
      v17 = *v5;
      v18 = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = v18;
      *v4 = v17;
      v19 = *(_OWORD *)(a2 + 56);
      v20 = *(_OWORD *)(a2 + 72);
      v21 = *(_OWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 72) = v20;
      *(_OWORD *)(a1 + 88) = v21;
      *(_OWORD *)(a1 + 56) = v19;
      return a1;
    }
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    v11 = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v11)
    {
      v25 = *(_OWORD *)(a2 + 48);
      v26 = *(_OWORD *)(a2 + 64);
      v27 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v27;
      *(_OWORD *)(a1 + 48) = v25;
      *(_OWORD *)(a1 + 64) = v26;
      return a1;
    }
    *(_QWORD *)(a1 + 48) = v11;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
  if (!v6)
  {
    sub_1D586E900(a1 + 8);
    v13 = *(_OWORD *)(a2 + 24);
    v12 = *(_OWORD *)(a2 + 40);
    *v4 = *v5;
    *(_OWORD *)(a1 + 24) = v13;
    *(_OWORD *)(a1 + 40) = v12;
    v15 = *(_OWORD *)(a2 + 72);
    v14 = *(_OWORD *)(a2 + 88);
    v16 = *(_OWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 72) = v15;
    *(_OWORD *)(a1 + 88) = v14;
    *(_OWORD *)(a1 + 56) = v16;
    return a1;
  }
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = (_OWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 48);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v10 = (__int128 *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 48);
  if (!v8)
  {
    if (!v9)
    {
      v28 = *v10;
      v29 = *(_OWORD *)(a2 + 64);
      v30 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v30;
      *v7 = v28;
      *(_OWORD *)(a1 + 64) = v29;
      return a1;
    }
    *(_QWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_12:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a1;
  }
  if (v9)
  {
    *(_QWORD *)(a1 + 48) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D586E8CC(a1 + 48);
    v22 = *(_OWORD *)(a2 + 96);
    v24 = *v10;
    v23 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v22;
    *v7 = v24;
    *(_OWORD *)(a1 + 64) = v23;
  }
  return a1;
}

uint64_t sub_1D586E8CC(uint64_t a1)
{
  destroy for TabiRequestSummary();
  return a1;
}

uint64_t sub_1D586E900(uint64_t a1)
{
  destroy for TabiData(a1);
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for ExtendedTabiData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_7;
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
  {
    sub_1D586E900(a1 + 8);
LABEL_7:
    v7 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v7;
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    v8 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v8;
    v9 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v9;
    return a1;
  }
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a1 + 48);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  if (!v6)
  {
LABEL_9:
    v10 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v10;
    v11 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v11;
    return a1;
  }
  if (!v5)
  {
    sub_1D586E8CC(a1 + 48);
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExtendedTabiData(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExtendedTabiData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtendedTabiData()
{
  return &type metadata for ExtendedTabiData;
}

void ViewEndData.endReason.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *ViewEndData.endReason.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*ViewEndData.endReason.modify())()
{
  return nullsub_1;
}

NewsAnalytics::ViewEndData __swiftcall ViewEndData.init(endReason:)(NewsAnalytics::ViewEndData endReason)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)endReason.endReason;
  return endReason;
}

uint64_t sub_1D586EBA0()
{
  return 0x6F73616552646E65;
}

uint64_t sub_1D586EBBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6F73616552646E65 && a2 == 0xE90000000000006ELL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D586EC5C()
{
  sub_1D586EDB0();
  return sub_1D5AAEED4();
}

uint64_t sub_1D586EC84()
{
  sub_1D586EDB0();
  return sub_1D5AAEEE0();
}

uint64_t ViewEndData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D586EF70(0, &qword_1ED9CC8D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D586EDB0();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D586EDF4();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D586EDB0()
{
  unint64_t result;

  result = qword_1ED9C7788;
  if (!qword_1ED9C7788)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABBBE0, &type metadata for ViewEndData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C7788);
  }
  return result;
}

unint64_t sub_1D586EDF4()
{
  unint64_t result;

  result = qword_1ED9CC4F0;
  if (!qword_1ED9CC4F0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EndReason, &type metadata for EndReason);
    atomic_store(result, (unint64_t *)&qword_1ED9CC4F0);
  }
  return result;
}

uint64_t ViewEndData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D586EF70(0, &qword_1ED9C6EB8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D586EDB0();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D586EFCC();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D586EF70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D586EDB0();
    v7 = a3(a1, &type metadata for ViewEndData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D586EFCC()
{
  unint64_t result;

  result = qword_1ED9CC500;
  if (!qword_1ED9CC500)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EndReason, &type metadata for EndReason);
    atomic_store(result, (unint64_t *)&qword_1ED9CC500);
  }
  return result;
}

uint64_t sub_1D586F018@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ViewEndData.init(from:)(a1, a2);
}

uint64_t sub_1D586F02C(_QWORD *a1)
{
  return ViewEndData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for ViewEndData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D586F08C + 4 * byte_1D5ABBA69[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D586F0C0 + 4 * asc_1D5ABBA64[v4]))();
}

uint64_t sub_1D586F0C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D586F0C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D586F0D0);
  return result;
}

uint64_t sub_1D586F0DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D586F0E4);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D586F0E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D586F0F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ViewEndData()
{
  return &type metadata for ViewEndData;
}

uint64_t storeEnumTagSinglePayload for ViewEndData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D586F14C + 4 * byte_1D5ABBA6E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D586F16C + 4 * byte_1D5ABBA73[v4]))();
}

_BYTE *sub_1D586F14C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D586F16C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D586F174(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D586F17C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D586F184(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D586F18C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ViewEndData.CodingKeys()
{
  return &type metadata for ViewEndData.CodingKeys;
}

unint64_t sub_1D586F1AC()
{
  unint64_t result;

  result = qword_1EFF4A118;
  if (!qword_1EFF4A118)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABBBB8, &type metadata for ViewEndData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A118);
  }
  return result;
}

unint64_t sub_1D586F1F4()
{
  unint64_t result;

  result = qword_1ED9C7798;
  if (!qword_1ED9C7798)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABBB28, &type metadata for ViewEndData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C7798);
  }
  return result;
}

unint64_t sub_1D586F23C()
{
  unint64_t result;

  result = qword_1ED9C7790;
  if (!qword_1ED9C7790)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABBB50, &type metadata for ViewEndData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C7790);
  }
  return result;
}

uint64_t AdGroupData.init(groupData:)@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t result;
  _OWORD v8[8];
  uint64_t v9;

  v3 = *(_OWORD *)(a1 + 112);
  v8[6] = *(_OWORD *)(a1 + 96);
  v8[7] = v3;
  v9 = *(_QWORD *)(a1 + 128);
  v4 = *(_OWORD *)(a1 + 48);
  v8[2] = *(_OWORD *)(a1 + 32);
  v8[3] = v4;
  v5 = *(_OWORD *)(a1 + 80);
  v8[4] = *(_OWORD *)(a1 + 64);
  v8[5] = v5;
  v6 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v6;
  result = sub_1D5803C78((uint64_t)v8);
  *a2 = BYTE1(v8[0]);
  return result;
}

uint64_t sub_1D586F2DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  uint64_t result;
  double v27;
  double v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[3];
  uint64_t v51;
  uint64_t v52;

  v44 = sub_1D5AAE568();
  v49 = *(_QWORD *)(v44 - 8);
  v3 = MEMORY[0x1E0C80A78](v44);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v34 - v6;
  v8 = sub_1D5AAE550();
  v42 = *(_QWORD *)(v8 - 8);
  v43 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (!v11)
    return v12;
  v34 = v1;
  v52 = MEMORY[0x1E0DEE9D8];
  sub_1D57C58F0(0, v11, 0);
  v13 = *(_QWORD *)(sub_1D5AAE478() - 8);
  v14 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  v40 = *(_QWORD *)(v13 + 72);
  v41 = *MEMORY[0x1E0D5C468];
  v39 = *MEMORY[0x1E0D5C458];
  v15 = *MEMORY[0x1E0D5C478];
  v37 = *MEMORY[0x1E0D5C490];
  v38 = v15;
  v16 = *MEMORY[0x1E0D5C480];
  v35 = *MEMORY[0x1E0D5C470];
  v36 = v16;
  while (1)
  {
    sub_1D5AAE46C();
    sub_1D5AAE538();
    v17 = sub_1D5AAE55C();
    v47 = v18;
    v48 = v17;
    v19 = *(void (**)(char *, uint64_t))(v49 + 8);
    v20 = v44;
    v19(v7, v44);
    sub_1D5AAE544();
    if (v51)
    {
      __swift_project_boxed_opaque_existential_1(v50, v51);
      v20 = v44;
      v21 = sub_1D5AAE508();
      v45 = v22;
      v46 = v21;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
    }
    else
    {
      sub_1D57C5BE8((uint64_t)v50);
      v45 = 0;
      v46 = 0;
    }
    sub_1D5AAE538();
    v23 = v49;
    v24 = (*(uint64_t (**)(char *, uint64_t))(v49 + 88))(v5, v20);
    if (v24 == v41)
    {
      (*(void (**)(char *, uint64_t))(v23 + 96))(v5, v20);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
      v25 = 1;
    }
    else if (v24 == v39)
    {
      (*(void (**)(char *, uint64_t))(v23 + 96))(v5, v20);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
      v25 = 2;
    }
    else if (v24 == v38)
    {
      (*(void (**)(char *, uint64_t))(v23 + 96))(v5, v20);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
      v25 = 3;
    }
    else if (v24 == v37)
    {
      (*(void (**)(char *, uint64_t))(v23 + 96))(v5, v20);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
      v25 = 4;
    }
    else if (v24 == v36)
    {
      (*(void (**)(char *, uint64_t))(v23 + 96))(v5, v20);
      swift_bridgeObjectRelease();
      v25 = 5;
    }
    else if (v24 == v35)
    {
      (*(void (**)(char *, uint64_t))(v23 + 96))(v5, v20);
      swift_bridgeObjectRelease();
      v25 = 6;
    }
    else
    {
      v19(v5, v20);
      v25 = 0;
    }
    result = sub_1D5AAE52C();
    v28 = v27;
    if ((~*(_QWORD *)&v27 & 0x7FF0000000000000) == 0)
      break;
    if (v27 <= -9.22337204e18)
      goto LABEL_29;
    if (v27 >= 9.22337204e18)
      goto LABEL_30;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v43);
    v12 = v52;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D57C58F0(0, *(_QWORD *)(v12 + 16) + 1, 1);
      v12 = v52;
    }
    v30 = *(_QWORD *)(v12 + 16);
    v29 = *(_QWORD *)(v12 + 24);
    if (v30 >= v29 >> 1)
    {
      sub_1D57C58F0((char *)(v29 > 1), v30 + 1, 1);
      v12 = v52;
    }
    *(_QWORD *)(v12 + 16) = v30 + 1;
    v31 = v12 + 48 * v30;
    v32 = v47;
    *(_QWORD *)(v31 + 32) = v48;
    *(_QWORD *)(v31 + 40) = v32;
    v33 = v45;
    *(_QWORD *)(v31 + 48) = v46;
    *(_QWORD *)(v31 + 56) = v33;
    *(_BYTE *)(v31 + 64) = v25;
    *(_QWORD *)(v31 + 72) = (uint64_t)v28;
    v14 += v40;
    if (!--v11)
      return v12;
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t FeedJournalGroup.analyticsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_1D5AAE550();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5AAE46C();
  FeedJournalGroupResult.analyticsData.getter(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t FeedJournalGroupResult.analyticsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  double v14;
  _QWORD v16[3];
  uint64_t v17;

  v2 = sub_1D5AAE568();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5AAE538();
  v6 = sub_1D5AAE55C();
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1D5AAE544();
  v9 = v17;
  if (v17)
  {
    __swift_project_boxed_opaque_existential_1(v16, v17);
    v9 = sub_1D5AAE508();
    v11 = v10;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  else
  {
    sub_1D57C5BE8((uint64_t)v16);
    v11 = 0;
  }
  sub_1D586F97C((char *)v16);
  v12 = v16[0];
  result = sub_1D5AAE52C();
  if ((~*(_QWORD *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v14 < 9.22337204e18)
  {
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v11;
    *(_BYTE *)(a1 + 32) = v12;
    *(_QWORD *)(a1 + 40) = (uint64_t)v14;
    return result;
  }
LABEL_10:
  __break(1u);
  return result;
}

unint64_t sub_1D586F928()
{
  unint64_t result;

  result = qword_1ED9D0C28;
  if (!qword_1ED9D0C28)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9D0C28);
  }
  return result;
}

uint64_t sub_1D586F97C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  char v7;
  uint64_t result;
  uint64_t v9;

  v2 = sub_1D5AAE568();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5AAE538();
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E0D5C468])
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    v7 = 1;
LABEL_9:
    *a1 = v7;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  if (v6 == *MEMORY[0x1E0D5C458])
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    v7 = 2;
    goto LABEL_9;
  }
  if (v6 == *MEMORY[0x1E0D5C478])
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    v7 = 3;
    goto LABEL_9;
  }
  if (v6 == *MEMORY[0x1E0D5C490])
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    swift_bridgeObjectRelease();
    v7 = 4;
    goto LABEL_9;
  }
  if (v6 == *MEMORY[0x1E0D5C480])
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    result = swift_bridgeObjectRelease();
    *a1 = 5;
  }
  else if (v6 == *MEMORY[0x1E0D5C470])
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    result = swift_bridgeObjectRelease();
    *a1 = 6;
  }
  else
  {
    *a1 = 0;
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

uint64_t sub_1D586FB48(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9D0940, MEMORY[0x1E0CF8078]);
}

uint64_t static JourneyMessageFailureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CE618, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9D0940, a1);
}

uint64_t sub_1D586FB88(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CE620, MEMORY[0x1E0CF8380]);
}

uint64_t static JourneyMessageFailureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CE640, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CE620, a1);
}

uint64_t JourneyMessageFailureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t JourneyMessageFailureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*JourneyMessageFailureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t JourneyMessageFailureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageFailureEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for JourneyMessageFailureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CE648);
}

uint64_t JourneyMessageFailureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageFailureEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageFailureEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for JourneyMessageFailureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageFailureEvent.dialogStyleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageFailureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageFailureEvent.dialogStyleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageFailureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageFailureEvent.dialogStyleData.modify())()
{
  type metadata accessor for JourneyMessageFailureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageFailureEvent.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageFailureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageFailureEvent.purchaseData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageFailureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageFailureEvent.purchaseData.modify())()
{
  type metadata accessor for JourneyMessageFailureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageFailureEvent.placementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageFailureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageFailureEvent.placementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageFailureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageFailureEvent.placementData.modify())()
{
  type metadata accessor for JourneyMessageFailureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageFailureEvent.journeyMessageFailureReasonData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageFailureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9CE540, (void (*)(void))sub_1D5870078, (void (*)(void))sub_1D58700BC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D5870078()
{
  unint64_t result;

  result = qword_1ED9D0AC0;
  if (!qword_1ED9D0AC0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for JourneyMessageFailureReasonData, &type metadata for JourneyMessageFailureReasonData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0AC0);
  }
  return result;
}

unint64_t sub_1D58700BC()
{
  unint64_t result;

  result = qword_1ED9D0AB8;
  if (!qword_1ED9D0AB8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for JourneyMessageFailureReasonData, &type metadata for JourneyMessageFailureReasonData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0AB8);
  }
  return result;
}

uint64_t JourneyMessageFailureEvent.journeyMessageFailureReasonData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageFailureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9CE540, (void (*)(void))sub_1D5870078, (void (*)(void))sub_1D58700BC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageFailureEvent.journeyMessageFailureReasonData.modify())()
{
  type metadata accessor for JourneyMessageFailureEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageFailureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for JourneyMessageFailureEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9CE540, (void (*)(void))sub_1D5870078, (void (*)(void))sub_1D58700BC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
}

uint64_t JourneyMessageFailureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t JourneyMessageFailureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for JourneyMessageFailureEvent.Model(0) + 20));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for JourneyMessageFailureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4A190);
}

uint64_t JourneyMessageFailureEvent.Model.dialogStyleData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for JourneyMessageFailureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t JourneyMessageFailureEvent.Model.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for JourneyMessageFailureEvent.Model(0) + 28));
  v5 = *v3;
  v4 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t JourneyMessageFailureEvent.Model.placementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageFailureEvent.Model(0) + 32);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 24);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t JourneyMessageFailureEvent.Model.journeyMessageFailureReasonData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageFailureEvent.Model(0) + 36);
  v4 = *(_QWORD *)(v3 + 8);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  return swift_bridgeObjectRetain();
}

__n128 JourneyMessageFailureEvent.Model.init(eventData:userBundleSubscriptionContextData:dialogStyleData:purchaseData:placementData:journeyMessageFailureReasonData:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, __int128 *a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 result;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;

  v9 = *a2;
  v10 = *((_QWORD *)a2 + 1);
  v11 = *((_QWORD *)a2 + 2);
  v12 = a2[24];
  v13 = a2[25];
  v14 = *((_QWORD *)a2 + 4);
  v15 = *((_QWORD *)a2 + 5);
  v16 = a2[48];
  v26 = a4[1];
  v27 = *a4;
  v24 = *a3;
  v25 = *((_BYTE *)a4 + 16);
  v30 = (__n128)a5[1];
  v31 = *a5;
  v28 = *((_QWORD *)a5 + 5);
  v29 = *((_QWORD *)a5 + 4);
  v33 = *a6;
  v32 = *((_QWORD *)a6 + 1);
  v17 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a7, a1, v17);
  v18 = (int *)type metadata accessor for JourneyMessageFailureEvent.Model(0);
  v19 = a7 + v18[5];
  *(_BYTE *)v19 = v9;
  *(_QWORD *)(v19 + 8) = v10;
  *(_QWORD *)(v19 + 16) = v11;
  *(_BYTE *)(v19 + 24) = v12;
  *(_BYTE *)(v19 + 25) = v13;
  *(_QWORD *)(v19 + 32) = v14;
  *(_QWORD *)(v19 + 40) = v15;
  *(_BYTE *)(v19 + 48) = v16;
  *(_BYTE *)(a7 + v18[6]) = v24;
  v20 = a7 + v18[7];
  *(_QWORD *)v20 = v27;
  *(_QWORD *)(v20 + 8) = v26;
  *(_BYTE *)(v20 + 16) = v25;
  v21 = a7 + v18[8];
  result = v30;
  *(_OWORD *)v21 = v31;
  *(__n128 *)(v21 + 16) = v30;
  *(_QWORD *)(v21 + 32) = v29;
  *(_QWORD *)(v21 + 40) = v28;
  v23 = a7 + v18[9];
  *(_BYTE *)v23 = v33;
  *(_QWORD *)(v23 + 8) = v32;
  return result;
}

uint64_t sub_1D5870638(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5870670 + 4 * byte_1D5ABBC40[a1]))(0x746144746E657665, 0xE900000000000061);
}

unint64_t sub_1D5870670()
{
  return 0xD000000000000021;
}

uint64_t sub_1D5870690()
{
  return 0x7453676F6C616964;
}

uint64_t sub_1D58706B4()
{
  return 0x6573616863727570;
}

uint64_t sub_1D58706D4()
{
  return 0x6E656D6563616C70;
}

unint64_t sub_1D58706F8()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1D5870714()
{
  unsigned __int8 *v0;

  return sub_1D5870638(*v0);
}

uint64_t sub_1D587071C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5872C14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5870740()
{
  sub_1D5870A5C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5870768()
{
  sub_1D5870A5C();
  return sub_1D5AAEEE0();
}

uint64_t JourneyMessageFailureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  char *v20;
  char v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  _BYTE v26[32];
  __int128 v27;
  char v28;

  v3 = v1;
  sub_1D5870F30(0, &qword_1EFF4A120, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5870A5C();
  sub_1D5AAEEC8();
  v26[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for JourneyMessageFailureEvent.Model(0);
    v11 = v3 + v10[5];
    v12 = *(_BYTE *)(v11 + 24);
    v13 = *(_BYTE *)(v11 + 25);
    v14 = *(_BYTE *)(v11 + 48);
    v26[0] = *(_BYTE *)v11;
    *(_OWORD *)&v26[8] = *(_OWORD *)(v11 + 8);
    v26[24] = v12;
    v26[25] = v13;
    v27 = *(_OWORD *)(v11 + 32);
    v28 = v14;
    v25 = 1;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v26[0] = *(_BYTE *)(v3 + v10[6]);
    v25 = 2;
    sub_1D580BB8C();
    sub_1D5AAED6C();
    v15 = v3 + v10[7];
    v16 = *(_BYTE *)(v15 + 16);
    *(_OWORD *)v26 = *(_OWORD *)v15;
    v26[16] = v16;
    v25 = 3;
    sub_1D580C07C();
    sub_1D5AAED18();
    v17 = v3 + v10[8];
    v18 = *(_QWORD *)(v17 + 8);
    *(_QWORD *)v26 = *(_QWORD *)v17;
    *(_QWORD *)&v26[8] = v18;
    v19 = *(_OWORD *)(v17 + 32);
    *(_OWORD *)&v26[16] = *(_OWORD *)(v17 + 16);
    v27 = v19;
    v25 = 4;
    sub_1D57C8654();
    sub_1D5AAED6C();
    v20 = (char *)(v3 + v10[9]);
    v21 = *v20;
    v22 = *((_QWORD *)v20 + 1);
    v26[0] = v21;
    *(_QWORD *)&v26[8] = v22;
    v25 = 5;
    sub_1D58700BC();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5870A5C()
{
  unint64_t result;

  result = qword_1EFF4A128;
  if (!qword_1EFF4A128)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABBEA4, &type metadata for JourneyMessageFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A128);
  }
  return result;
}

uint64_t JourneyMessageFailureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char *v18;
  char v19;
  char *v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[32];
  __int128 v34;
  char v35;
  char v36;

  v27 = a2;
  v3 = sub_1D5AADF98();
  v28 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v29 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5870F30(0, &qword_1EFF4A130, MEMORY[0x1E0DED048]);
  v31 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - v7;
  v9 = (int *)type metadata accessor for JourneyMessageFailureEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5870A5C();
  v30 = v8;
  v12 = v32;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v14 = v28;
  v33[0] = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v29, v3);
  v36 = 1;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v15 = v33[24];
  v16 = v33[25];
  v17 = v35;
  v18 = &v11[v9[5]];
  *v18 = v33[0];
  *(_OWORD *)(v18 + 8) = *(_OWORD *)&v33[8];
  v18[24] = v15;
  v18[25] = v16;
  *((_OWORD *)v18 + 2) = v34;
  v18[48] = v17;
  v36 = 2;
  sub_1D580BB48();
  sub_1D5AAECD0();
  v11[v9[6]] = v33[0];
  v36 = 3;
  sub_1D580C038();
  sub_1D5AAEC7C();
  v19 = v33[16];
  v20 = &v11[v9[7]];
  *(_OWORD *)v20 = *(_OWORD *)v33;
  v20[16] = v19;
  v36 = 4;
  sub_1D57C8610();
  sub_1D5AAECD0();
  v21 = *(_QWORD *)&v33[8];
  v22 = &v11[v9[8]];
  *(_QWORD *)v22 = *(_QWORD *)v33;
  *((_QWORD *)v22 + 1) = v21;
  v23 = v34;
  *((_OWORD *)v22 + 1) = *(_OWORD *)&v33[16];
  *((_OWORD *)v22 + 2) = v23;
  v36 = 5;
  sub_1D5870078();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v30, v31);
  v24 = *(_QWORD *)&v33[8];
  v25 = &v11[v9[9]];
  *v25 = v33[0];
  *((_QWORD *)v25 + 1) = v24;
  sub_1D5870F8C((uint64_t)v11, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1D5870FD0((uint64_t)v11);
}

void sub_1D5870F30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5870A5C();
    v7 = a3(a1, &type metadata for JourneyMessageFailureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5870F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JourneyMessageFailureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5870FD0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for JourneyMessageFailureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D587100C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return JourneyMessageFailureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5871020(_QWORD *a1)
{
  return JourneyMessageFailureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5871034@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CE618, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9D0940, a1);
}

uint64_t sub_1D5871058@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CE640, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CE620, a1);
}

uint64_t sub_1D587107C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9CE540, (void (*)(void))sub_1D5870078, (void (*)(void))sub_1D58700BC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for JourneyMessageFailureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9CE540, (void (*)(void))sub_1D5870078, (void (*)(void))sub_1D58700BC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for JourneyMessageFailureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9CE540, (void (*)(void))sub_1D5870078, (void (*)(void))sub_1D58700BC);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

uint64_t initializeWithCopy for JourneyMessageFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CE540, (void (*)(void))sub_1D5870078, (void (*)(void))sub_1D58700BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for JourneyMessageFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CE540, (void (*)(void))sub_1D5870078, (void (*)(void))sub_1D58700BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for JourneyMessageFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CE540, (void (*)(void))sub_1D5870078, (void (*)(void))sub_1D58700BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for JourneyMessageFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CE540, (void (*)(void))sub_1D5870078, (void (*)(void))sub_1D58700BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for JourneyMessageFailureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5871D38(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9CE540, (void (*)(void))sub_1D5870078, (void (*)(void))sub_1D58700BC);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for JourneyMessageFailureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5871EE8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9CE540, (void (*)(void))sub_1D5870078, (void (*)(void))sub_1D58700BC);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5872094()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9CE540, (void (*)(void))sub_1D5870078, (void (*)(void))sub_1D58700BC);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for JourneyMessageFailureEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    *((_WORD *)v10 + 12) = *((_WORD *)v11 + 12);
    v13 = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
    *((_QWORD *)v10 + 5) = v13;
    v10[48] = v11[48];
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v14 = a3[7];
    v15 = a3[8];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    v16[16] = v17[16];
    v19 = (_QWORD *)((char *)a1 + v15);
    v20 = (_QWORD *)((char *)a2 + v15);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = v20[3];
    v19[2] = v20[2];
    v19[3] = v22;
    v23 = v20[5];
    v19[4] = v20[4];
    v19[5] = v23;
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    *v25 = *v26;
    *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for JourneyMessageFailureEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for JourneyMessageFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  *(_WORD *)(v9 + 24) = *(_WORD *)(v10 + 24);
  v12 = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v9 + 40) = v12;
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  v17 = *(_QWORD *)(v16 + 8);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_QWORD *)(v15 + 8) = v17;
  *(_BYTE *)(v15 + 16) = *(_BYTE *)(v16 + 16);
  v18 = (_QWORD *)(a1 + v14);
  v19 = (_QWORD *)(a2 + v14);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = v19[3];
  v18[2] = v19[2];
  v18[3] = v21;
  v22 = v19[5];
  v18[4] = v19[4];
  v18[5] = v22;
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JourneyMessageFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *(_QWORD *)(a2 + v13);
  v14[1] = *(_QWORD *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[2] = v15[2];
  v14[3] = v15[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[4] = v15[4];
  v14[5] = v15[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[9];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_BYTE *)v17 = *(_BYTE *)v18;
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for JourneyMessageFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  __int128 v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v12 = a3[7];
  v13 = a3[8];
  v14 = a1 + v12;
  v15 = (__int128 *)(a2 + v12);
  v16 = *v15;
  *(_BYTE *)(v14 + 16) = *((_BYTE *)v15 + 16);
  *(_OWORD *)v14 = v16;
  v17 = (_OWORD *)(a1 + v13);
  v18 = (_OWORD *)(a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v17[2] = v18[2];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for JourneyMessageFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  v11 = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  v12 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12);
  v16 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = v15;
  *(_QWORD *)(v13 + 8) = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  v17 = a3[8];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = *(_QWORD *)(a2 + v17 + 8);
  *v18 = *(_QWORD *)(a2 + v17);
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v21 = v19[3];
  v18[2] = v19[2];
  v18[3] = v21;
  swift_bridgeObjectRelease();
  v22 = v19[5];
  v18[4] = v19[4];
  v18[5] = v22;
  swift_bridgeObjectRelease();
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JourneyMessageFailureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58728D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for JourneyMessageFailureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D587295C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D58729D8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for JourneyMessageFailureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D5872ABC + 4 * byte_1D5ABBC4B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D5872AF0 + 4 * byte_1D5ABBC46[v4]))();
}

uint64_t sub_1D5872AF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5872AF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5872B00);
  return result;
}

uint64_t sub_1D5872B0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5872B14);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D5872B18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5872B20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JourneyMessageFailureEvent.Model.CodingKeys()
{
  return &type metadata for JourneyMessageFailureEvent.Model.CodingKeys;
}

unint64_t sub_1D5872B40()
{
  unint64_t result;

  result = qword_1EFF4A1D8;
  if (!qword_1EFF4A1D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABBE7C, &type metadata for JourneyMessageFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A1D8);
  }
  return result;
}

unint64_t sub_1D5872B88()
{
  unint64_t result;

  result = qword_1EFF4A1E0;
  if (!qword_1EFF4A1E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABBDEC, &type metadata for JourneyMessageFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A1E0);
  }
  return result;
}

unint64_t sub_1D5872BD0()
{
  unint64_t result;

  result = qword_1EFF4A1E8;
  if (!qword_1EFF4A1E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABBE14, &type metadata for JourneyMessageFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A1E8);
  }
  return result;
}

uint64_t sub_1D5872C14(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7453676F6C616964 && a2 == 0xEF61746144656C79 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E656D6563616C70 && a2 == 0xED00006174614474 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001D5AEDC70)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t dispatch thunk of TrackerConfigurationType.isSportsHeadlineExposureTrackingDisabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1D5872F00()
{
  uint64_t v0;
  id v1;
  id v2;

  if (qword_1EFF47078 != -1)
    swift_once();
  v1 = objc_msgSend(*(id *)(v0 + 16), sel_possiblyUnfetchedAppConfiguration);
  if ((objc_msgSend(v1, sel_respondsToSelector_, sel_sportsPrivacyConfiguration) & 1) != 0)
  {
    v2 = objc_msgSend(v1, sel_sportsPrivacyConfiguration);
    swift_unknownObjectRelease();
    objc_msgSend(v2, sel_isHeadlineExposureTrackingDisabled);

  }
  else
  {
    swift_unknownObjectRelease();
  }
  sub_1D57B423C();
  return sub_1D5AAD80C();
}

uint64_t sub_1D5873000()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D5873024()
{
  return sub_1D5872F00() & 1;
}

uint64_t sub_1D5873048()
{
  return sub_1D5AAD800();
}

uint64_t sub_1D5873054()
{
  return sub_1D5AAD7DC();
}

size_t sub_1D5873060(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1D58734B8(a1, a2, a3, a4, (unint64_t *)&qword_1ED9CC9D0, (void (*)(uint64_t))MEMORY[0x1E0CAE690]);
}

char *sub_1D5873074(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1D57C0C24(0, &qword_1EFF4A260);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1D5873168(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1D57C0C24(0, (unint64_t *)&qword_1ED9CCA20);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1D5873274(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1D57C0C24(0, &qword_1EFF4A250);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1D5873398(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1D57C0C24(0, &qword_1EFF4A258);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

size_t sub_1D58734A4(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1D58734B8(a1, a2, a3, a4, &qword_1ED9CD708, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
}

size_t sub_1D58734B8(size_t result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, void (*a6)(uint64_t))
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  unint64_t v19;

  v8 = result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1D57B5C60(0, a5, a6);
  v13 = *(_QWORD *)(((uint64_t (*)(_QWORD))a6)(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_29;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(result - v15) / v14);
LABEL_19:
  v18 = *(_QWORD *)(((uint64_t (*)(_QWORD))a6)(0) - 8);
  if ((v8 & 1) != 0)
  {
    if (v16 < a4
      || (v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80),
          (char *)v16 + v19 >= (char *)a4 + v19 + *(_QWORD *)(v18 + 72) * v11))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v16;
}

char *sub_1D5873634(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1D57C0C24(0, &qword_1EFF4A268);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t MobileData.carrier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileData.carrier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*MobileData.carrier.modify())()
{
  return nullsub_1;
}

uint64_t MobileData.countryCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileData.countryCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*MobileData.countryCode.modify())()
{
  return nullsub_1;
}

uint64_t MobileData.networkCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileData.networkCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*MobileData.networkCode.modify())()
{
  return nullsub_1;
}

void __swiftcall MobileData.init(carrier:countryCode:networkCode:)(NewsAnalytics::MobileData *__return_ptr retstr, Swift::String carrier, Swift::String countryCode, Swift::String networkCode)
{
  retstr->carrier = carrier;
  retstr->countryCode = countryCode;
  retstr->networkCode = networkCode;
}

uint64_t sub_1D58738B4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x437972746E756F63;
  if (*v0 != 1)
    v1 = 0x436B726F7774656ELL;
  if (*v0)
    return v1;
  else
    return 0x72656972726163;
}

uint64_t sub_1D5873920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5874054(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5873944()
{
  sub_1D5873B04();
  return sub_1D5AAEED4();
}

uint64_t sub_1D587396C()
{
  sub_1D5873B04();
  return sub_1D5AAEEE0();
}

uint64_t MobileData.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[6];
  char v13;
  char v14;
  char v15;

  sub_1D5873D8C(0, &qword_1ED9CC898, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v12 - v6;
  v8 = v1[2];
  v12[3] = v1[3];
  v12[4] = v8;
  v9 = v1[4];
  v12[1] = v1[5];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5873B04();
  sub_1D5AAEEC8();
  v15 = 0;
  v10 = v12[5];
  sub_1D5AAED3C();
  if (!v10)
  {
    v14 = 1;
    sub_1D5AAED3C();
    v13 = 2;
    sub_1D5AAED3C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5873B04()
{
  unint64_t result;

  result = qword_1ED9C75E0;
  if (!qword_1ED9C75E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABC11C, &type metadata for MobileData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C75E0);
  }
  return result;
}

uint64_t MobileData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  sub_1D5873D8C(0, &qword_1EFF4A270, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5873B04();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = 0;
  v10 = sub_1D5AAECA0();
  v12 = v11;
  v25 = v10;
  v27 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1D5AAECA0();
  v15 = v14;
  v23 = v13;
  v26 = 2;
  swift_bridgeObjectRetain();
  v24 = v15;
  v16 = sub_1D5AAECA0();
  v18 = v17;
  v19 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = v24;
  *a2 = v25;
  a2[1] = v12;
  a2[2] = v23;
  a2[3] = v20;
  a2[4] = v19;
  a2[5] = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D5873D8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5873B04();
    v7 = a3(a1, &type metadata for MobileData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5873DEC()
{
  unint64_t result;

  result = qword_1ED9C7600;
  if (!qword_1ED9C7600)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MobileData, &type metadata for MobileData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7600);
  }
  return result;
}

unint64_t sub_1D5873E34()
{
  unint64_t result;

  result = qword_1ED9C75F8;
  if (!qword_1ED9C75F8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MobileData, &type metadata for MobileData);
    atomic_store(result, (unint64_t *)&qword_1ED9C75F8);
  }
  return result;
}

uint64_t sub_1D5873E78@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MobileData.init(from:)(a1, a2);
}

uint64_t sub_1D5873E8C(_QWORD *a1)
{
  return MobileData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for MobileData()
{
  return &type metadata for MobileData;
}

uint64_t storeEnumTagSinglePayload for MobileData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5873EFC + 4 * byte_1D5ABBFA9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5873F30 + 4 * byte_1D5ABBFA4[v4]))();
}

uint64_t sub_1D5873F30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5873F38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5873F40);
  return result;
}

uint64_t sub_1D5873F4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5873F54);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5873F58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5873F60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileData.CodingKeys()
{
  return &type metadata for MobileData.CodingKeys;
}

unint64_t sub_1D5873F80()
{
  unint64_t result;

  result = qword_1EFF4A278;
  if (!qword_1EFF4A278)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABC0F4, &type metadata for MobileData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A278);
  }
  return result;
}

unint64_t sub_1D5873FC8()
{
  unint64_t result;

  result = qword_1ED9C75F0;
  if (!qword_1ED9C75F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABC064, &type metadata for MobileData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C75F0);
  }
  return result;
}

unint64_t sub_1D5874010()
{
  unint64_t result;

  result = qword_1ED9C75E8;
  if (!qword_1ED9C75E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABC08C, &type metadata for MobileData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C75E8);
  }
  return result;
}

uint64_t sub_1D5874054(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x72656972726163 && a2 == 0xE700000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x437972746E756F63 && a2 == 0xEB0000000065646FLL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x436B726F7774656ELL && a2 == 0xEB0000000065646FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1D58741D4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CEC78, MEMORY[0x1E0CF8078]);
}

uint64_t static HeadlineScoringEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CE4A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CEC78, a1);
}

uint64_t sub_1D5874214(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CEC90, MEMORY[0x1E0CF8380]);
}

uint64_t static HeadlineScoringEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CECB0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CEC90, a1);
}

uint64_t HeadlineScoringEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t HeadlineScoringEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*HeadlineScoringEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t HeadlineScoringEvent.scoringData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineScoringEvent(0) + 20);
  sub_1D5874330();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for HeadlineScoringEvent(uint64_t a1)
{
  return sub_1D579E448(a1, (uint64_t *)&unk_1ED9CECB8);
}

void sub_1D5874330()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CEAA8)
  {
    sub_1D5874394();
    sub_1D58743D8();
    v0 = sub_1D5AADB48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CEAA8);
  }
}

unint64_t sub_1D5874394()
{
  unint64_t result;

  result = qword_1ED9CE4A0;
  if (!qword_1ED9CE4A0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for HeadlineScoringData, &type metadata for HeadlineScoringData);
    atomic_store(result, (unint64_t *)&qword_1ED9CE4A0);
  }
  return result;
}

unint64_t sub_1D58743D8()
{
  unint64_t result;

  result = qword_1ED9CEC70;
  if (!qword_1ED9CEC70)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for HeadlineScoringData, &type metadata for HeadlineScoringData);
    atomic_store(result, (unint64_t *)&qword_1ED9CEC70);
  }
  return result;
}

uint64_t HeadlineScoringEvent.scoringData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineScoringEvent(0) + 20);
  sub_1D5874330();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeadlineScoringEvent.scoringData.modify())()
{
  type metadata accessor for HeadlineScoringEvent(0);
  return nullsub_1;
}

uint64_t HeadlineScoringEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5824B58(type metadata accessor for HeadlineScoringEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t HeadlineScoringEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineScoringEvent(0) + 24);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeadlineScoringEvent.timedData.modify())()
{
  type metadata accessor for HeadlineScoringEvent(0);
  return nullsub_1;
}

uint64_t HeadlineScoringEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *MEMORY[0x1E0CF8120];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = type metadata accessor for HeadlineScoringEvent(0);
  v5 = a1 + *(int *)(v4 + 20);
  v6 = *MEMORY[0x1E0CF8128];
  sub_1D5874330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = a1 + *(int *)(v4 + 24);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v6, v9);
}

uint64_t HeadlineScoringEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D5874E10(v1, a1, (uint64_t (*)(_QWORD))sub_1D58745E8);
}

void sub_1D58745E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CD0F8)
  {
    sub_1D5AADF98();
    v0 = sub_1D5AAEACC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CD0F8);
  }
}

void *HeadlineScoringEvent.Model.scoringData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  const void *v3;

  v3 = (const void *)(v1 + *(int *)(type metadata accessor for HeadlineScoringEvent.Model(0) + 20));
  return memcpy(a1, v3, 0x190uLL);
}

uint64_t type metadata accessor for HeadlineScoringEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4A2F0);
}

uint64_t HeadlineScoringEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5824B58(type metadata accessor for HeadlineScoringEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t HeadlineScoringEvent.Model.init(eventData:scoringData:timedData:)@<X0>(uint64_t a1@<X0>, const void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1D5874710(a1, a4);
  v7 = type metadata accessor for HeadlineScoringEvent.Model(0);
  memcpy((void *)(a4 + *(int *)(v7 + 20)), a2, 0x190uLL);
  v8 = a4 + *(int *)(v7 + 24);
  v9 = sub_1D5AADFB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a3, v9);
}

uint64_t sub_1D5874710(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D58745E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5874754()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x44676E69726F6373;
  if (*v0 != 1)
    v1 = 0x74614464656D6974;
  if (*v0)
    return v1;
  else
    return 0x746144746E657665;
}

uint64_t sub_1D58747B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5876220(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58747DC()
{
  sub_1D5874A14();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5874804()
{
  sub_1D5874A14();
  return sub_1D5AAEEE0();
}

uint64_t HeadlineScoringEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v13[424];

  v3 = v1;
  sub_1D5874DB4(0, &qword_1EFF4A280, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v13[-v8 - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5874A14();
  sub_1D5AAEEC8();
  v13[423] = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED18();
  if (!v2)
  {
    v10 = type metadata accessor for HeadlineScoringEvent.Model(0);
    memcpy(v13, (const void *)(v3 + *(int *)(v10 + 20)), 0x190uLL);
    v13[422] = 1;
    sub_1D58743D8();
    sub_1D5AAED6C();
    v13[0] = 2;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5874A14()
{
  unint64_t result;

  result = qword_1EFF4A288;
  if (!qword_1EFF4A288)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABC33C, &type metadata for HeadlineScoringEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A288);
  }
  return result;
}

uint64_t HeadlineScoringEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _BYTE v28[424];

  v21 = a2;
  v22 = sub_1D5AADFB0();
  v20 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v23 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58745E8();
  MEMORY[0x1E0C80A78](v4);
  v25 = (uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5874DB4(0, &qword_1EFF4A290, MEMORY[0x1E0DED048]);
  v24 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - v8;
  v10 = type metadata accessor for HeadlineScoringEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5874A14();
  v26 = v9;
  v13 = v27;
  sub_1D5AAEEB0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v14 = (uint64_t)v12;
  v15 = v23;
  sub_1D5AADF98();
  v28[0] = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1D5AAEC7C();
  sub_1D5874710(v25, v14);
  v28[423] = 1;
  sub_1D5874394();
  sub_1D5AAECD0();
  v27 = v10;
  memcpy((void *)(v14 + *(int *)(v10 + 20)), v28, 0x190uLL);
  v28[422] = 2;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v16 = v15;
  v17 = v22;
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v26, v24);
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v14 + *(int *)(v27 + 24), v16, v17);
  sub_1D5874E10(v14, v21, type metadata accessor for HeadlineScoringEvent.Model);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1D5820E20(v14, type metadata accessor for HeadlineScoringEvent.Model);
}

void sub_1D5874DB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5874A14();
    v7 = a3(a1, &type metadata for HeadlineScoringEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5874E10(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D5874E54@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return HeadlineScoringEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5874E68(_QWORD *a1)
{
  return HeadlineScoringEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5874E7C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CE4A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CEC78, a1);
}

uint64_t sub_1D5874EA0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CECB0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CEC90, a1);
}

uint64_t sub_1D5874EC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *MEMORY[0x1E0CF8120];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  v7 = *MEMORY[0x1E0CF8128];
  sub_1D5874330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  v9 = a2 + *(int *)(a1 + 24);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v7, v10);
}

uint64_t *initializeBufferWithCopyOfBuffer for HeadlineScoringEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D5874330();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for HeadlineScoringEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1D5874330();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for HeadlineScoringEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D5874330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for HeadlineScoringEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D5874330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for HeadlineScoringEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D5874330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for HeadlineScoringEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D5874330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadlineScoringEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58753A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D5874330();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1D57A8C9C();
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for HeadlineScoringEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5875444(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D5874330();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1D57A8C9C();
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D58754E4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D5874330();
    if (v1 <= 0x3F)
    {
      sub_1D57A8C9C();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for HeadlineScoringEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_1D58745E8();
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    memcpy((char *)a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20), 0x190uLL);
    v11 = *(int *)(a3 + 24);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for HeadlineScoringEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_1D5AADF98();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_1D5AADFB0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

char *initializeWithCopy for HeadlineScoringEvent.Model(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1D58745E8();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  memcpy(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], 0x190uLL);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1D5AADFB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *assignWithCopy for HeadlineScoringEvent.Model(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1D58745E8();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(_QWORD *)v14;
  v13[8] = v14[8];
  *(_QWORD *)v13 = v15;
  v16 = *((_QWORD *)v14 + 2);
  v13[24] = v14[24];
  *((_QWORD *)v13 + 2) = v16;
  v17 = *((_QWORD *)v14 + 4);
  v13[40] = v14[40];
  *((_QWORD *)v13 + 4) = v17;
  v18 = *((_QWORD *)v14 + 6);
  v13[56] = v14[56];
  *((_QWORD *)v13 + 6) = v18;
  v19 = *((_QWORD *)v14 + 8);
  v13[72] = v14[72];
  *((_QWORD *)v13 + 8) = v19;
  v20 = *((_QWORD *)v14 + 10);
  v13[88] = v14[88];
  *((_QWORD *)v13 + 10) = v20;
  v21 = *((_QWORD *)v14 + 12);
  v13[104] = v14[104];
  *((_QWORD *)v13 + 12) = v21;
  v22 = *((_QWORD *)v14 + 14);
  v13[120] = v14[120];
  *((_QWORD *)v13 + 14) = v22;
  v23 = *((_QWORD *)v14 + 16);
  v13[136] = v14[136];
  *((_QWORD *)v13 + 16) = v23;
  v24 = *((_QWORD *)v14 + 18);
  v13[152] = v14[152];
  *((_QWORD *)v13 + 18) = v24;
  v25 = *((_QWORD *)v14 + 20);
  v13[168] = v14[168];
  *((_QWORD *)v13 + 20) = v25;
  v26 = *((_QWORD *)v14 + 22);
  v13[184] = v14[184];
  *((_QWORD *)v13 + 22) = v26;
  v27 = *((_QWORD *)v14 + 24);
  v13[200] = v14[200];
  *((_QWORD *)v13 + 24) = v27;
  v28 = *((_QWORD *)v14 + 26);
  v13[216] = v14[216];
  *((_QWORD *)v13 + 26) = v28;
  v29 = *((_QWORD *)v14 + 28);
  v13[232] = v14[232];
  *((_QWORD *)v13 + 28) = v29;
  v30 = *((_QWORD *)v14 + 30);
  v13[248] = v14[248];
  *((_QWORD *)v13 + 30) = v30;
  v31 = *((_QWORD *)v14 + 32);
  v13[264] = v14[264];
  *((_QWORD *)v13 + 32) = v31;
  v32 = *((_QWORD *)v14 + 34);
  v13[280] = v14[280];
  *((_QWORD *)v13 + 34) = v32;
  v33 = *((_QWORD *)v14 + 36);
  v13[296] = v14[296];
  *((_QWORD *)v13 + 36) = v33;
  v34 = *((_QWORD *)v14 + 38);
  v13[312] = v14[312];
  *((_QWORD *)v13 + 38) = v34;
  v35 = *((_QWORD *)v14 + 40);
  v13[328] = v14[328];
  *((_QWORD *)v13 + 40) = v35;
  v36 = *((_QWORD *)v14 + 42);
  v13[344] = v14[344];
  *((_QWORD *)v13 + 42) = v36;
  v37 = *((_QWORD *)v14 + 44);
  v13[360] = v14[360];
  *((_QWORD *)v13 + 44) = v37;
  v38 = *((_QWORD *)v14 + 46);
  v13[376] = v14[376];
  *((_QWORD *)v13 + 46) = v38;
  v39 = *((_QWORD *)v14 + 48);
  v13[392] = v14[392];
  *((_QWORD *)v13 + 48) = v39;
  v13[393] = v14[393];
  *((_DWORD *)v13 + 99) = *((_DWORD *)v14 + 99);
  v40 = *(int *)(a3 + 24);
  v41 = &a1[v40];
  v42 = &a2[v40];
  v43 = sub_1D5AADFB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
  return a1;
}

char *initializeWithTake for HeadlineScoringEvent.Model(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1D58745E8();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  memcpy(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], 0x190uLL);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1D5AADFB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *assignWithTake for HeadlineScoringEvent.Model(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1D58745E8();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = *(int *)(a3 + 24);
  v14 = &a1[v12];
  v15 = &a2[v12];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
  v14[24] = v15[24];
  *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
  v14[40] = v15[40];
  v14[56] = v15[56];
  *((_QWORD *)v14 + 6) = *((_QWORD *)v15 + 6);
  v16 = *((_QWORD *)v15 + 8);
  v14[72] = v15[72];
  *((_QWORD *)v14 + 8) = v16;
  *((_QWORD *)v14 + 10) = *((_QWORD *)v15 + 10);
  v14[88] = v15[88];
  *((_QWORD *)v14 + 12) = *((_QWORD *)v15 + 12);
  v14[104] = v15[104];
  *((_QWORD *)v14 + 14) = *((_QWORD *)v15 + 14);
  v14[120] = v15[120];
  v14[136] = v15[136];
  *((_QWORD *)v14 + 16) = *((_QWORD *)v15 + 16);
  v14[152] = v15[152];
  *((_QWORD *)v14 + 18) = *((_QWORD *)v15 + 18);
  v14[168] = v15[168];
  *((_QWORD *)v14 + 20) = *((_QWORD *)v15 + 20);
  v14[184] = v15[184];
  *((_QWORD *)v14 + 22) = *((_QWORD *)v15 + 22);
  v14[200] = v15[200];
  *((_QWORD *)v14 + 24) = *((_QWORD *)v15 + 24);
  v17 = *((_QWORD *)v15 + 26);
  v14[216] = v15[216];
  *((_QWORD *)v14 + 26) = v17;
  v18 = *((_QWORD *)v15 + 28);
  v14[232] = v15[232];
  *((_QWORD *)v14 + 28) = v18;
  v19 = *((_QWORD *)v15 + 30);
  v14[248] = v15[248];
  *((_QWORD *)v14 + 30) = v19;
  v20 = *((_QWORD *)v15 + 32);
  v14[264] = v15[264];
  *((_QWORD *)v14 + 32) = v20;
  v21 = *((_QWORD *)v15 + 34);
  v14[280] = v15[280];
  *((_QWORD *)v14 + 34) = v21;
  v22 = *((_QWORD *)v15 + 36);
  v14[296] = v15[296];
  *((_QWORD *)v14 + 36) = v22;
  v23 = *((_QWORD *)v15 + 38);
  v14[312] = v15[312];
  *((_QWORD *)v14 + 38) = v23;
  v24 = *((_QWORD *)v15 + 40);
  v14[328] = v15[328];
  *((_QWORD *)v14 + 40) = v24;
  v25 = *((_QWORD *)v15 + 42);
  v14[344] = v15[344];
  *((_QWORD *)v14 + 42) = v25;
  v26 = *((_QWORD *)v15 + 44);
  v14[360] = v15[360];
  *((_QWORD *)v14 + 44) = v26;
  v27 = *((_QWORD *)v15 + 46);
  v14[376] = v15[376];
  *((_QWORD *)v14 + 46) = v27;
  v28 = *((_QWORD *)v15 + 48);
  v14[392] = v15[392];
  *((_QWORD *)v14 + 48) = v28;
  v14[393] = v15[393];
  v29 = &a1[v13];
  v30 = &a2[v13];
  *((_DWORD *)v14 + 99) = *((_DWORD *)v15 + 99);
  v31 = sub_1D5AADFB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v29, v30, v31);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadlineScoringEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5875E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  uint64_t v10;

  sub_1D58745E8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 253)
  {
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 393);
    if (v9 >= 3)
      return v9 - 2;
    else
      return 0;
  }
  else
  {
    v10 = sub_1D5AADFB0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for HeadlineScoringEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1D5875F4C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  sub_1D58745E8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 253)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 20) + 393) = a2 + 2;
      return;
    }
    v10 = sub_1D5AADFB0();
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  v11(v12, a2, a2, v10);
}

void sub_1D5875FF0()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D58745E8();
  if (v0 <= 0x3F)
  {
    sub_1D5AADFB0();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for HeadlineScoringEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D58760C8 + 4 * byte_1D5ABC175[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D58760FC + 4 * byte_1D5ABC170[v4]))();
}

uint64_t sub_1D58760FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5876104(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D587610CLL);
  return result;
}

uint64_t sub_1D5876118(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5876120);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5876124(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D587612C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadlineScoringEvent.Model.CodingKeys()
{
  return &type metadata for HeadlineScoringEvent.Model.CodingKeys;
}

unint64_t sub_1D587614C()
{
  unint64_t result;

  result = qword_1EFF4A330;
  if (!qword_1EFF4A330)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABC314, &type metadata for HeadlineScoringEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A330);
  }
  return result;
}

unint64_t sub_1D5876194()
{
  unint64_t result;

  result = qword_1EFF4A338;
  if (!qword_1EFF4A338)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABC284, &type metadata for HeadlineScoringEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A338);
  }
  return result;
}

unint64_t sub_1D58761DC()
{
  unint64_t result;

  result = qword_1EFF4A340;
  if (!qword_1EFF4A340)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABC2AC, &type metadata for HeadlineScoringEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A340);
  }
  return result;
}

uint64_t sub_1D5876220(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44676E69726F6373 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t PuzzleRevealData.revealType.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleRevealData.revealType.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*PuzzleRevealData.revealType.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleRevealData.init(revealType:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1D58763EC()
{
  return 0x79546C6165766572;
}

uint64_t sub_1D5876408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x79546C6165766572 && a2 == 0xEA00000000006570)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D58764A8()
{
  sub_1D587661C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58764D0()
{
  sub_1D587661C();
  return sub_1D5AAEEE0();
}

uint64_t PuzzleRevealData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1D5876850(0, &qword_1EFF4A348, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D587661C();
  sub_1D5AAEEC8();
  v10[1] = v8;
  sub_1D5876660();
  sub_1D58768AC(&qword_1EFF4A360, (uint64_t (*)(void))sub_1D58766B4, MEMORY[0x1E0DEAF10]);
  sub_1D5AAED18();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D587661C()
{
  unint64_t result;

  result = qword_1EFF4A350;
  if (!qword_1EFF4A350)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABC504, &type metadata for PuzzleRevealData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A350);
  }
  return result;
}

void sub_1D5876660()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFF4A358)
  {
    v0 = sub_1D5AAE97C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFF4A358);
  }
}

unint64_t sub_1D58766B4()
{
  unint64_t result;

  result = qword_1EFF4A368;
  if (!qword_1EFF4A368)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PuzzleRevealType, &type metadata for PuzzleRevealType);
    atomic_store(result, (unint64_t *)&qword_1EFF4A368);
  }
  return result;
}

uint64_t PuzzleRevealData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1D5876850(0, &qword_1EFF4A370, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D587661C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5876660();
    sub_1D58768AC(&qword_1EFF4A378, (uint64_t (*)(void))sub_1D5876910, MEMORY[0x1E0DEAF40]);
    sub_1D5AAEC7C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5876850(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D587661C();
    v7 = a3(a1, &type metadata for PuzzleRevealData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58768AC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1D5876660();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1D8279680](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D5876910()
{
  unint64_t result;

  result = qword_1EFF4A380;
  if (!qword_1EFF4A380)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PuzzleRevealType, &type metadata for PuzzleRevealType);
    atomic_store(result, (unint64_t *)&qword_1EFF4A380);
  }
  return result;
}

uint64_t sub_1D587695C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return PuzzleRevealData.init(from:)(a1, a2);
}

uint64_t sub_1D5876970(_QWORD *a1)
{
  return PuzzleRevealData.encode(to:)(a1);
}

_QWORD *initializeBufferWithCopyOfBuffer for GroupSectionData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for GroupSectionData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *assignWithTake for GroupSectionData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupSectionData(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupSectionData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleRevealData()
{
  return &type metadata for PuzzleRevealData;
}

uint64_t storeEnumTagSinglePayload for PuzzleRevealData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5876B20 + 4 * byte_1D5ABC390[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5876B40 + 4 * byte_1D5ABC395[v4]))();
}

_BYTE *sub_1D5876B20(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5876B40(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5876B48(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5876B50(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5876B58(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5876B60(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleRevealData.CodingKeys()
{
  return &type metadata for PuzzleRevealData.CodingKeys;
}

unint64_t sub_1D5876B80()
{
  unint64_t result;

  result = qword_1EFF4A388;
  if (!qword_1EFF4A388)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABC4DC, &type metadata for PuzzleRevealData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A388);
  }
  return result;
}

unint64_t sub_1D5876BC8()
{
  unint64_t result;

  result = qword_1EFF4A390;
  if (!qword_1EFF4A390)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABC44C, &type metadata for PuzzleRevealData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A390);
  }
  return result;
}

unint64_t sub_1D5876C10()
{
  unint64_t result;

  result = qword_1EFF4A398;
  if (!qword_1EFF4A398)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABC474, &type metadata for PuzzleRevealData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A398);
  }
  return result;
}

NewsAnalytics::FeedGroupLayoutFailureDiagnosticsData __swiftcall FeedGroupLayoutFailureDiagnosticsData.init(message:)(NewsAnalytics::FeedGroupLayoutFailureDiagnosticsData message)
{
  NewsAnalytics::FeedGroupLayoutFailureDiagnosticsData *v1;

  *v1 = message;
  return message;
}

uint64_t FeedGroupLayoutFailureDiagnosticsData.message.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedGroupLayoutFailureDiagnosticsData.message.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FeedGroupLayoutFailureDiagnosticsData.message.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5876CD0()
{
  return 0x6567617373656DLL;
}

uint64_t sub_1D5876CE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5876D7C()
{
  sub_1D5876EC0();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5876DA4()
{
  sub_1D5876EC0();
  return sub_1D5AAEEE0();
}

uint64_t FeedGroupLayoutFailureDiagnosticsData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5877028(0, &qword_1EFF4A3A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5876EC0();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D5876EC0()
{
  unint64_t result;

  result = qword_1EFF4A3A8;
  if (!qword_1EFF4A3A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABC6EC, &type metadata for FeedGroupLayoutFailureDiagnosticsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A3A8);
  }
  return result;
}

uint64_t FeedGroupLayoutFailureDiagnosticsData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D5877028(0, &qword_1EFF4A3B0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5876EC0();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECA0();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5877028(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5876EC0();
    v7 = a3(a1, &type metadata for FeedGroupLayoutFailureDiagnosticsData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5877088()
{
  unint64_t result;

  result = qword_1EFF4A3B8;
  if (!qword_1EFF4A3B8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedGroupLayoutFailureDiagnosticsData, &type metadata for FeedGroupLayoutFailureDiagnosticsData);
    atomic_store(result, (unint64_t *)&qword_1EFF4A3B8);
  }
  return result;
}

unint64_t sub_1D58770D0()
{
  unint64_t result;

  result = qword_1EFF4A3C0;
  if (!qword_1EFF4A3C0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedGroupLayoutFailureDiagnosticsData, &type metadata for FeedGroupLayoutFailureDiagnosticsData);
    atomic_store(result, (unint64_t *)&qword_1EFF4A3C0);
  }
  return result;
}

uint64_t sub_1D5877114@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FeedGroupLayoutFailureDiagnosticsData.init(from:)(a1, a2);
}

uint64_t sub_1D5877128(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5877028(0, &qword_1EFF4A3A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5876EC0();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for FeedGroupLayoutFailureDiagnosticsData()
{
  return &type metadata for FeedGroupLayoutFailureDiagnosticsData;
}

uint64_t storeEnumTagSinglePayload for FeedGroupLayoutFailureDiagnosticsData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D587726C + 4 * byte_1D5ABC560[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D587728C + 4 * byte_1D5ABC565[v4]))();
}

_BYTE *sub_1D587726C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D587728C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5877294(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D587729C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58772A4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58772AC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupLayoutFailureDiagnosticsData.CodingKeys()
{
  return &type metadata for FeedGroupLayoutFailureDiagnosticsData.CodingKeys;
}

unint64_t sub_1D58772CC()
{
  unint64_t result;

  result = qword_1EFF4A3C8;
  if (!qword_1EFF4A3C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABC6C4, &type metadata for FeedGroupLayoutFailureDiagnosticsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A3C8);
  }
  return result;
}

unint64_t sub_1D5877314()
{
  unint64_t result;

  result = qword_1EFF4A3D0;
  if (!qword_1EFF4A3D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABC634, &type metadata for FeedGroupLayoutFailureDiagnosticsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A3D0);
  }
  return result;
}

unint64_t sub_1D587735C()
{
  unint64_t result;

  result = qword_1EFF4A3D8;
  if (!qword_1EFF4A3D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABC65C, &type metadata for FeedGroupLayoutFailureDiagnosticsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A3D8);
  }
  return result;
}

uint64_t sub_1D58773A0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4A3E0, MEMORY[0x1E0CF8078]);
}

uint64_t static PuzzleViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47048, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4A3E0, a1);
}

uint64_t sub_1D58773E0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4A3F8, MEMORY[0x1E0CF8380]);
}

uint64_t static PuzzleViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(qword_1EFF47050, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4A3F8, a1);
}

uint64_t PuzzleViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t PuzzleViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*PuzzleViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleViewEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleViewEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleViewEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleViewEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleViewEvent.viewData.modify())()
{
  type metadata accessor for PuzzleViewEvent(0);
  return nullsub_1;
}

uint64_t PuzzleViewEvent.puzzleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleViewEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleViewEvent.puzzleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleViewEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleViewEvent.puzzleData.modify())()
{
  type metadata accessor for PuzzleViewEvent(0);
  return nullsub_1;
}

uint64_t PuzzleViewEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleViewEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleViewEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleViewEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleViewEvent.channelData.modify())()
{
  type metadata accessor for PuzzleViewEvent(0);
  return nullsub_1;
}

uint64_t PuzzleViewEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleViewEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleViewEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleViewEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleViewEvent.feedData.modify())()
{
  type metadata accessor for PuzzleViewEvent(0);
  return nullsub_1;
}

uint64_t PuzzleViewEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleViewEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleViewEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleViewEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleViewEvent.userChannelContextData.modify())()
{
  type metadata accessor for PuzzleViewEvent(0);
  return nullsub_1;
}

uint64_t PuzzleViewEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleViewEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleViewEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleViewEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleViewEvent.groupData.modify())()
{
  type metadata accessor for PuzzleViewEvent(0);
  return nullsub_1;
}

uint64_t PuzzleViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57DD6F8(type metadata accessor for PuzzleViewEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t PuzzleViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleViewEvent(0) + 44);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleViewEvent.timedData.modify())()
{
  type metadata accessor for PuzzleViewEvent(0);
  return nullsub_1;
}

uint64_t PuzzleViewEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleViewEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleViewEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleViewEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleViewEvent.feedPositionData.modify())()
{
  type metadata accessor for PuzzleViewEvent(0);
  return nullsub_1;
}

uint64_t PuzzleViewEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleViewEvent(0) + 52);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleViewEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleViewEvent(0) + 52);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleViewEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for PuzzleViewEvent(0);
  return nullsub_1;
}

uint64_t PuzzleViewEvent.paywallData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleViewEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleViewEvent.paywallData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleViewEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleViewEvent.paywallData.modify())()
{
  type metadata accessor for PuzzleViewEvent(0);
  return nullsub_1;
}

uint64_t PuzzleViewEvent.puzzleRevealData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleViewEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9CEA98, (void (*)(void))sub_1D57C9890, (void (*)(void))sub_1D57C98D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleViewEvent.puzzleRevealData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleViewEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9CEA98, (void (*)(void))sub_1D57C9890, (void (*)(void))sub_1D57C98D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleViewEvent.puzzleRevealData.modify())()
{
  type metadata accessor for PuzzleViewEvent(0);
  return nullsub_1;
}

uint64_t PuzzleViewEvent.puzzleStatsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleViewEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9CEA90, (void (*)(void))sub_1D57CA2BC, (void (*)(void))sub_1D57CA300);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleViewEvent.puzzleStatsData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleViewEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9CEA90, (void (*)(void))sub_1D57CA2BC, (void (*)(void))sub_1D57CA300);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PuzzleViewEvent.puzzleStatsData.modify())()
{
  type metadata accessor for PuzzleViewEvent(0);
  return nullsub_1;
}

uint64_t PuzzleViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for PuzzleViewEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v10, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v10, v17);
  v18 = a1 + v4[11];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v10, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v10, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, &qword_1ED9CEA98, (void (*)(void))sub_1D57C9890, (void (*)(void))sub_1D57C98D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v2, v27);
  v28 = a1 + v4[16];
  sub_1D579E208(0, &qword_1ED9CEA90, (void (*)(void))sub_1D57CA2BC, (void (*)(void))sub_1D57CA300);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v10, v29);
}

uint64_t PuzzleViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t PuzzleViewEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PuzzleViewEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleViewEvent.Model.puzzleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PuzzleViewEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_DWORD *)v3 + 8);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = v3[9];
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_DWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_QWORD *)(a1 + 72) = v14;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleViewEvent.Model.channelData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PuzzleViewEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57DD4CC(v4, v5);
}

uint64_t PuzzleViewEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PuzzleViewEvent.Model(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t PuzzleViewEvent.Model.userChannelContextData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PuzzleViewEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 36));
  return result;
}

_QWORD *PuzzleViewEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for PuzzleViewEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 40), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t PuzzleViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57DD6F8(type metadata accessor for PuzzleViewEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t PuzzleViewEvent.Model.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for PuzzleViewEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 48));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t PuzzleViewEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for PuzzleViewEvent.Model(0) + 52));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleViewEvent.Model.paywallData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PuzzleViewEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 56));
  return result;
}

uint64_t PuzzleViewEvent.Model.puzzleRevealData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PuzzleViewEvent.Model(0) + 60));
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleViewEvent.Model.puzzleStatsData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PuzzleViewEvent.Model(0) + 64));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1D5878670(v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1D5878670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

__n128 PuzzleViewEvent.Model.init(eventData:viewData:puzzleData:channelData:feedData:userChannelContextData:groupData:timedData:feedPositionData:userBundleSubscriptionContextData:paywallData:puzzleRevealData:puzzleStatsData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, int *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, int *a10, char *a11, __int16 *a12, uint64_t *a13, __int128 *a14)
{
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  char v19;
  __int16 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 result;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  int v51;
  char v52;
  int v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  __int128 v62;
  _BYTE v64[144];

  v16 = *a2;
  v17 = a2[1];
  v18 = *((_WORD *)a2 + 8);
  v45 = *a3;
  v43 = *((_QWORD *)a3 + 3);
  v44 = *((_QWORD *)a3 + 2);
  v42 = *((_DWORD *)a3 + 8);
  v41 = *((_QWORD *)a3 + 5);
  v40 = *((_BYTE *)a3 + 48);
  v39 = *((_QWORD *)a3 + 7);
  v37 = *((_BYTE *)a3 + 65);
  v38 = *((_BYTE *)a3 + 64);
  v36 = *((_QWORD *)a3 + 9);
  v47 = a4[1];
  v48 = *a4;
  v46 = *((_QWORD *)a4 + 4);
  v50 = *a5;
  v49 = *((_QWORD *)a5 + 2);
  v51 = *a6;
  sub_1D57DD5B8(a7, (uint64_t)v64);
  v52 = *((_BYTE *)a10 + 4);
  v53 = *a10;
  v19 = *a11;
  v59 = *((_QWORD *)a11 + 2);
  v60 = *((_QWORD *)a11 + 1);
  v57 = a11[25];
  v58 = a11[24];
  v55 = *((_QWORD *)a11 + 5);
  v56 = *((_QWORD *)a11 + 4);
  v54 = a11[48];
  v20 = *a12;
  v21 = *a13;
  v61 = (__n128)a14[1];
  v62 = *a14;
  v23 = *((_QWORD *)a14 + 4);
  v22 = *((_QWORD *)a14 + 5);
  v24 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a9, a1, v24);
  v25 = (int *)type metadata accessor for PuzzleViewEvent.Model(0);
  v26 = a9 + v25[5];
  *(_QWORD *)v26 = v16;
  *(_QWORD *)(v26 + 8) = v17;
  *(_WORD *)(v26 + 16) = v18;
  v27 = a9 + v25[6];
  *(_OWORD *)v27 = v45;
  *(_QWORD *)(v27 + 16) = v44;
  *(_QWORD *)(v27 + 24) = v43;
  *(_DWORD *)(v27 + 32) = v42;
  *(_QWORD *)(v27 + 40) = v41;
  *(_BYTE *)(v27 + 48) = v40;
  *(_QWORD *)(v27 + 56) = v39;
  *(_BYTE *)(v27 + 64) = v38;
  *(_BYTE *)(v27 + 65) = v37;
  *(_QWORD *)(v27 + 72) = v36;
  v28 = a9 + v25[7];
  *(_OWORD *)v28 = v48;
  *(_OWORD *)(v28 + 16) = v47;
  *(_QWORD *)(v28 + 32) = v46;
  v29 = a9 + v25[8];
  *(_OWORD *)v29 = v50;
  *(_QWORD *)(v29 + 16) = v49;
  *(_DWORD *)(a9 + v25[9]) = v51;
  sub_1D57DD5B8((uint64_t)v64, a9 + v25[10]);
  v30 = a9 + v25[11];
  v31 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v30, a8, v31);
  v32 = a9 + v25[12];
  *(_DWORD *)v32 = v53;
  *(_BYTE *)(v32 + 4) = v52;
  v33 = a9 + v25[13];
  *(_BYTE *)v33 = v19;
  *(_QWORD *)(v33 + 8) = v60;
  *(_QWORD *)(v33 + 16) = v59;
  *(_BYTE *)(v33 + 24) = v58;
  *(_BYTE *)(v33 + 25) = v57;
  *(_QWORD *)(v33 + 32) = v56;
  *(_QWORD *)(v33 + 40) = v55;
  *(_BYTE *)(v33 + 48) = v54;
  *(_WORD *)(a9 + v25[14]) = v20;
  *(_QWORD *)(a9 + v25[15]) = v21;
  v34 = a9 + v25[16];
  result = v61;
  *(_OWORD *)v34 = v62;
  *(__n128 *)(v34 + 16) = v61;
  *(_QWORD *)(v34 + 32) = v23;
  *(_QWORD *)(v34 + 40) = v22;
  return result;
}

uint64_t sub_1D587893C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5878974 + 4 * byte_1D5ABC740[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5878974()
{
  return 0x6174614477656976;
}

unint64_t sub_1D58789C8()
{
  return 0xD000000000000016;
}

uint64_t sub_1D5878A70()
{
  return 0x7453656C7A7A7570;
}

uint64_t sub_1D5878A94()
{
  unsigned __int8 *v0;

  return sub_1D587893C(*v0);
}

uint64_t sub_1D5878A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D587D3B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5878AC0()
{
  sub_1D5879058();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5878AE8()
{
  sub_1D5879058();
  return sub_1D5AAEEE0();
}

uint64_t PuzzleViewEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  __int128 v27;
  __int128 *v28;
  uint64_t v29;
  int *v30;
  int v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  _OWORD *v36;
  __int128 v37;
  uint64_t v39;
  char v40;
  _OWORD v41[2];
  __int128 v42;
  char v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  char v53;
  int v54;

  v3 = v1;
  sub_1D58799C0(0, &qword_1EFF4A410, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v39 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5879058();
  sub_1D5AAEEC8();
  LOBYTE(v44) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for PuzzleViewEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    *(_QWORD *)&v44 = v12;
    *((_QWORD *)&v44 + 1) = v13;
    LOWORD(v45) = (_WORD)v11;
    LOBYTE(v41[0]) = 1;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v14 = (__int128 *)(v3 + v10[6]);
    v15 = *v14;
    v16 = *((_QWORD *)v14 + 2);
    v17 = *((_QWORD *)v14 + 3);
    v18 = *((_DWORD *)v14 + 8);
    v19 = *((_QWORD *)v14 + 5);
    v20 = *((_BYTE *)v14 + 48);
    v21 = *((_QWORD *)v14 + 7);
    v22 = *((_BYTE *)v14 + 64);
    v23 = *((_BYTE *)v14 + 65);
    v24 = *((_QWORD *)v14 + 9);
    v44 = v15;
    *(_QWORD *)&v45 = v16;
    *((_QWORD *)&v45 + 1) = v17;
    LODWORD(v46) = v18;
    v47 = v19;
    v48 = v20;
    v49 = v21;
    v50 = v22;
    v51 = v23;
    v52 = v24;
    LOBYTE(v41[0]) = 2;
    sub_1D57CBD34();
    sub_1D5AAED6C();
    v25 = (__int128 *)(v3 + v10[7]);
    v26 = *((_QWORD *)v25 + 4);
    v27 = v25[1];
    v44 = *v25;
    v45 = v27;
    v46 = v26;
    LOBYTE(v41[0]) = 3;
    sub_1D57CB8B8();
    sub_1D5AAED18();
    v28 = (__int128 *)(v3 + v10[8]);
    v29 = *((_QWORD *)v28 + 2);
    v44 = *v28;
    *(_QWORD *)&v45 = v29;
    LOBYTE(v41[0]) = 4;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v54 = *(_DWORD *)(v3 + v10[9]);
    v53 = 5;
    sub_1D57C7B24();
    sub_1D5AAED18();
    sub_1D57DD5B8(v3 + v10[10], (uint64_t)&v44);
    sub_1D57DD5B8((uint64_t)&v44, (uint64_t)v41);
    v40 = 6;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    LOBYTE(v41[0]) = 7;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v30 = (int *)(v3 + v10[12]);
    v31 = *v30;
    LOBYTE(v30) = *((_BYTE *)v30 + 4);
    LODWORD(v41[0]) = v31;
    BYTE4(v41[0]) = (_BYTE)v30;
    v40 = 8;
    sub_1D57C9C4C();
    sub_1D5AAED18();
    v32 = v3 + v10[13];
    v33 = *(_BYTE *)(v32 + 24);
    v34 = *(_BYTE *)(v32 + 25);
    v35 = *(_BYTE *)(v32 + 48);
    LOBYTE(v41[0]) = *(_BYTE *)v32;
    *(_OWORD *)((char *)v41 + 8) = *(_OWORD *)(v32 + 8);
    BYTE8(v41[1]) = v33;
    BYTE9(v41[1]) = v34;
    v42 = *(_OWORD *)(v32 + 32);
    v43 = v35;
    v40 = 9;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    LOWORD(v41[0]) = *(_WORD *)(v3 + v10[14]);
    v40 = 10;
    sub_1D57CB830();
    sub_1D5AAED18();
    *(_QWORD *)&v41[0] = *(_QWORD *)(v3 + v10[15]);
    v40 = 11;
    sub_1D57C98D4();
    sub_1D5AAED6C();
    v36 = (_OWORD *)(v3 + v10[16]);
    v37 = v36[1];
    v41[0] = *v36;
    v41[1] = v37;
    v42 = v36[2];
    v40 = 12;
    sub_1D57CA300();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5879058()
{
  unint64_t result;

  result = qword_1EFF4A418;
  if (!qword_1EFF4A418)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABCA9C, &type metadata for PuzzleViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A418);
  }
  return result;
}

uint64_t PuzzleViewEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  int *v17;
  char *v18;
  uint64_t v19;
  __int16 v20;
  int *v21;
  char *v22;
  __int128 v23;
  int v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char v37;
  char *v38;
  char v39;
  char v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  char *v61;
  int *v62;
  _OWORD v63[2];
  __int128 v64;
  char v65;
  _BYTE v66[136];
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  char v76;
  char v77;

  v52 = a2;
  v3 = sub_1D5AADFB0();
  v56 = *(_QWORD *)(v3 - 8);
  v57 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D5AADF98();
  v58 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58799C0(0, &qword_1EFF4A420, MEMORY[0x1E0DED048]);
  v54 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v51 - v11;
  v62 = (int *)type metadata accessor for PuzzleViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v62);
  v61 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v59 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1D5879058();
  v53 = v12;
  v15 = v60;
  sub_1D5AAEEB0();
  v55 = v6;
  if (v15)
  {
    v60 = v15;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
  }
  LOBYTE(v67) = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v18 = v61;
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v61, v8, v6);
  v66[0] = 1;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v19 = *((_QWORD *)&v67 + 1);
  v20 = v68;
  v21 = v62;
  v22 = &v18[v62[5]];
  *(_QWORD *)v22 = v67;
  *((_QWORD *)v22 + 1) = v19;
  *((_WORD *)v22 + 8) = v20;
  v66[0] = 2;
  sub_1D57CBCF0();
  sub_1D5AAECD0();
  v23 = v68;
  v24 = v69;
  v25 = v70;
  v26 = v71;
  v27 = v72;
  v28 = v73;
  v29 = v74;
  v30 = v75;
  v31 = &v18[v21[6]];
  *(_OWORD *)v31 = v67;
  *((_OWORD *)v31 + 1) = v23;
  *((_DWORD *)v31 + 8) = v24;
  *((_QWORD *)v31 + 5) = v25;
  v31[48] = v26;
  *((_QWORD *)v31 + 7) = v27;
  v31[64] = v28;
  v31[65] = v29;
  *((_QWORD *)v31 + 9) = v30;
  v66[0] = 3;
  sub_1D57CB874();
  sub_1D5AAEC7C();
  v32 = v69;
  v33 = &v18[v21[7]];
  v34 = v68;
  *(_OWORD *)v33 = v67;
  *((_OWORD *)v33 + 1) = v34;
  *((_QWORD *)v33 + 4) = v32;
  v66[0] = 4;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v35 = v68;
  v36 = &v18[v21[8]];
  *(_OWORD *)v36 = v67;
  *((_QWORD *)v36 + 2) = v35;
  v66[0] = 5;
  sub_1D57C7AE0();
  sub_1D5AAEC7C();
  *(_DWORD *)&v18[v21[9]] = v67;
  v77 = 6;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  sub_1D57DD5B8((uint64_t)&v67, (uint64_t)v66);
  sub_1D57DD5B8((uint64_t)v66, (uint64_t)&v18[v21[10]]);
  LOBYTE(v63[0]) = 7;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))(&v18[v21[11]], v5, v57);
  v76 = 8;
  sub_1D57C9C08();
  sub_1D5AAEC7C();
  v37 = BYTE4(v63[0]);
  v38 = &v18[v62[12]];
  *(_DWORD *)v38 = v63[0];
  v38[4] = v37;
  v76 = 9;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v60 = 0;
  v39 = BYTE8(v63[1]);
  v40 = BYTE9(v63[1]);
  v41 = v65;
  v42 = &v61[v62[13]];
  *v42 = v63[0];
  *(_OWORD *)(v42 + 8) = *(_OWORD *)((char *)v63 + 8);
  v42[24] = v39;
  v42[25] = v40;
  *((_OWORD *)v42 + 2) = v64;
  v42[48] = v41;
  v76 = 10;
  sub_1D57CB7EC();
  v43 = v60;
  sub_1D5AAEC7C();
  v60 = v43;
  if (v43
    || (*(_WORD *)&v61[v62[14]] = v63[0], v76 = 11, sub_1D57C9890(), v44 = v60, sub_1D5AAECD0(), (v60 = v44) != 0))
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v54);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
    v45 = 0;
  }
  else
  {
    *(_QWORD *)&v61[v62[15]] = *(_QWORD *)&v63[0];
    v76 = 12;
    sub_1D57CA2BC();
    v47 = v60;
    sub_1D5AAEC7C();
    v60 = v47;
    if (!v47)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v54);
      v48 = (uint64_t)v61;
      v49 = &v61[v62[16]];
      v50 = v63[1];
      *(_OWORD *)v49 = v63[0];
      *((_OWORD *)v49 + 1) = v50;
      *((_OWORD *)v49 + 2) = v64;
      sub_1D5879A1C(v48, v52);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
      return sub_1D5879A60(v48);
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v54);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
    v45 = 1;
  }
  v46 = v61;
  (*(void (**)(char *, uint64_t))(v58 + 8))(v61, v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = v62;
  sub_1D57DEAB8(*(_QWORD *)&v46[v62[7]], *(_QWORD *)&v46[v62[7] + 8]);
  sub_1D57DAEDC(*(_QWORD *)&v46[v17[8]], *(_QWORD *)&v46[v17[8] + 8], *(_QWORD *)&v46[v17[8] + 16]);
  sub_1D57DD5B8((uint64_t)&v46[v17[10]], (uint64_t)&v67);
  sub_1D57DE9C8(&v67, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DEA24);
  (*(void (**)(char *, uint64_t))(v56 + 8))(&v46[v17[11]], v57);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v45 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_1D58799C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5879058();
    v7 = a3(a1, &type metadata for PuzzleViewEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5879A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PuzzleViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5879A60(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PuzzleViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5879A9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5879AB0(_QWORD *a1)
{
  return PuzzleViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5879AC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47048, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4A3E0, a1);
}

uint64_t sub_1D5879AE8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(qword_1EFF47050, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4A3F8, a1);
}

uint64_t sub_1D5879B0C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v11, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v11, v18);
  v19 = a2 + a1[11];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v11, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v11, v26);
  v27 = a2 + a1[15];
  sub_1D579E208(0, &qword_1ED9CEA98, (void (*)(void))sub_1D57C9890, (void (*)(void))sub_1D57C98D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v4, v28);
  v29 = a2 + a1[16];
  sub_1D579E208(0, &qword_1ED9CEA90, (void (*)(void))sub_1D57CA2BC, (void (*)(void))sub_1D57CA300);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v11, v30);
}

uint64_t *initializeBufferWithCopyOfBuffer for PuzzleViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v56 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v56 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1D579E208(0, &qword_1ED9CEA98, (void (*)(void))sub_1D57C9890, (void (*)(void))sub_1D57C98D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1D579E208(0, &qword_1ED9CEA90, (void (*)(void))sub_1D57CA2BC, (void (*)(void))sub_1D57CA300);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
  }
  return a1;
}

uint64_t destroy for PuzzleViewEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1D579E208(0, &qword_1ED9CEA98, (void (*)(void))sub_1D57C9890, (void (*)(void))sub_1D57C98D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1D579E208(0, &qword_1ED9CEA90, (void (*)(void))sub_1D57CA2BC, (void (*)(void))sub_1D57CA300);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
}

uint64_t initializeWithCopy for PuzzleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9CEA98, (void (*)(void))sub_1D57C9890, (void (*)(void))sub_1D57C98D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9CEA90, (void (*)(void))sub_1D57CA2BC, (void (*)(void))sub_1D57CA300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  return a1;
}

uint64_t assignWithCopy for PuzzleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9CEA98, (void (*)(void))sub_1D57C9890, (void (*)(void))sub_1D57C98D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9CEA90, (void (*)(void))sub_1D57CA2BC, (void (*)(void))sub_1D57CA300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  return a1;
}

uint64_t initializeWithTake for PuzzleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9CEA98, (void (*)(void))sub_1D57C9890, (void (*)(void))sub_1D57C98D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9CEA90, (void (*)(void))sub_1D57CA2BC, (void (*)(void))sub_1D57CA300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  return a1;
}

uint64_t assignWithTake for PuzzleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9CEA98, (void (*)(void))sub_1D57C9890, (void (*)(void))sub_1D57C98D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9CEA90, (void (*)(void))sub_1D57CA2BC, (void (*)(void))sub_1D57CA300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleViewEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D587B520(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D57A8C9C();
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9CEA98, (void (*)(void))sub_1D57C9890, (void (*)(void))sub_1D57C98D4);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9CEA90, (void (*)(void))sub_1D57CA2BC, (void (*)(void))sub_1D57CA300);
                          v8 = v24;
                          v12 = *(_QWORD *)(v24 - 8);
                          v13 = a3[16];
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for PuzzleViewEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D587B88C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D57A8C9C();
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9CEA98, (void (*)(void))sub_1D57C9890, (void (*)(void))sub_1D57C98D4);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9CEA90, (void (*)(void))sub_1D57CA2BC, (void (*)(void))sub_1D57CA300);
                          v10 = v26;
                          v14 = *(_QWORD *)(v26 - 8);
                          v15 = a4[16];
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t *initializeBufferWithCopyOfBuffer for PuzzleViewEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  __int128 v59;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    v16 = *((_QWORD *)v14 + 3);
    *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 3) = v16;
    v17 = *((_OWORD *)v14 + 3);
    *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
    *((_OWORD *)v13 + 3) = v17;
    v13[64] = v14[64];
    v13[65] = v14[65];
    *((_QWORD *)v13 + 9) = *((_QWORD *)v14 + 9);
    v18 = a3[7];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21)
    {
      *(_QWORD *)v19 = *(_QWORD *)v20;
      *((_QWORD *)v19 + 1) = v21;
      *((_WORD *)v19 + 8) = *((_WORD *)v20 + 8);
      v22 = *((_QWORD *)v20 + 4);
      *((_QWORD *)v19 + 3) = *((_QWORD *)v20 + 3);
      *((_QWORD *)v19 + 4) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v24 = *((_OWORD *)v20 + 1);
      *(_OWORD *)v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v24;
      *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
    }
    v25 = a3[8];
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = *((_QWORD *)v27 + 2);
    if (v28 == 1)
    {
      *(_OWORD *)v26 = *(_OWORD *)v27;
      *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
    }
    else
    {
      *v26 = *v27;
      *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
      *((_QWORD *)v26 + 2) = v28;
      swift_bridgeObjectRetain();
    }
    v29 = a3[10];
    *(_DWORD *)((char *)a1 + a3[9]) = *(_DWORD *)((char *)a2 + a3[9]);
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    v32 = *((_QWORD *)v31 + 2);
    if (v32)
    {
      *(_WORD *)v30 = *(_WORD *)v31;
      *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
      *((_QWORD *)v30 + 2) = v32;
      *((_QWORD *)v30 + 3) = *((_QWORD *)v31 + 3);
      v33 = *((_QWORD *)v31 + 5);
      *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
      *((_QWORD *)v30 + 5) = v33;
      v34 = *((_QWORD *)v31 + 7);
      *((_QWORD *)v30 + 6) = *((_QWORD *)v31 + 6);
      *((_QWORD *)v30 + 7) = v34;
      v35 = *((_QWORD *)v31 + 9);
      *((_QWORD *)v30 + 8) = *((_QWORD *)v31 + 8);
      *((_QWORD *)v30 + 9) = v35;
      v30[80] = v31[80];
      v36 = *((_QWORD *)v31 + 12);
      *((_QWORD *)v30 + 11) = *((_QWORD *)v31 + 11);
      *((_QWORD *)v30 + 12) = v36;
      *((_QWORD *)v30 + 13) = *((_QWORD *)v31 + 13);
      v30[112] = v31[112];
      v37 = *((_QWORD *)v31 + 16);
      *((_QWORD *)v30 + 15) = *((_QWORD *)v31 + 15);
      *((_QWORD *)v30 + 16) = v37;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v38 = *((_OWORD *)v31 + 7);
      *((_OWORD *)v30 + 6) = *((_OWORD *)v31 + 6);
      *((_OWORD *)v30 + 7) = v38;
      *((_QWORD *)v30 + 16) = *((_QWORD *)v31 + 16);
      v39 = *((_OWORD *)v31 + 3);
      *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
      *((_OWORD *)v30 + 3) = v39;
      v40 = *((_OWORD *)v31 + 5);
      *((_OWORD *)v30 + 4) = *((_OWORD *)v31 + 4);
      *((_OWORD *)v30 + 5) = v40;
      v41 = *((_OWORD *)v31 + 1);
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *((_OWORD *)v30 + 1) = v41;
    }
    v42 = a3[11];
    v43 = (char *)a1 + v42;
    v44 = (char *)a2 + v42;
    v45 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
    v46 = a3[12];
    v47 = a3[13];
    v48 = (char *)a1 + v46;
    v49 = (char *)a2 + v46;
    *(_DWORD *)v48 = *(_DWORD *)v49;
    v48[4] = v49[4];
    v50 = (char *)a1 + v47;
    v51 = (char *)a2 + v47;
    *v50 = *v51;
    v52 = *((_QWORD *)v51 + 2);
    *((_QWORD *)v50 + 1) = *((_QWORD *)v51 + 1);
    *((_QWORD *)v50 + 2) = v52;
    *((_WORD *)v50 + 12) = *((_WORD *)v51 + 12);
    v53 = *((_QWORD *)v51 + 5);
    *((_QWORD *)v50 + 4) = *((_QWORD *)v51 + 4);
    *((_QWORD *)v50 + 5) = v53;
    v50[48] = v51[48];
    v54 = a3[15];
    *(_WORD *)((char *)a1 + a3[14]) = *(_WORD *)((char *)a2 + a3[14]);
    *(uint64_t *)((char *)a1 + v54) = *(uint64_t *)((char *)a2 + v54);
    v55 = a3[16];
    v56 = (char *)a1 + v55;
    v57 = (char *)a2 + v55;
    v58 = *(uint64_t *)((char *)a2 + v55 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v58 == 1)
    {
      v59 = *((_OWORD *)v57 + 1);
      *(_OWORD *)v56 = *(_OWORD *)v57;
      *((_OWORD *)v56 + 1) = v59;
      *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
    }
    else
    {
      *(_QWORD *)v56 = *(_QWORD *)v57;
      v56[8] = v57[8];
      *((_QWORD *)v56 + 2) = *((_QWORD *)v57 + 2);
      v56[24] = v57[24];
      *((_QWORD *)v56 + 4) = *((_QWORD *)v57 + 4);
      *((_QWORD *)v56 + 5) = v58;
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t destroy for PuzzleViewEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[7] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[8] + 16) != 1)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[10] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v5 = a1 + a2[11];
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + a2[16] + 40);
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for PuzzleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_QWORD *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v14;
  v15 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v15;
  v16 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(v12 + 48) = v16;
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
  *(_BYTE *)(v12 + 65) = *(_BYTE *)(v13 + 65);
  *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)(a2 + v17 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20)
  {
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *(_QWORD *)(v18 + 8) = v20;
    *(_WORD *)(v18 + 16) = *(_WORD *)(v19 + 16);
    v21 = *(_QWORD *)(v19 + 32);
    *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
    *(_QWORD *)(v18 + 32) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v22 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v22;
    *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  }
  v23 = a3[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_QWORD *)(v25 + 16);
  if (v26 == 1)
  {
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
  }
  else
  {
    *(_BYTE *)v24 = *(_BYTE *)v25;
    *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
    *(_QWORD *)(v24 + 16) = v26;
    swift_bridgeObjectRetain();
  }
  v27 = a3[10];
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = *(_QWORD *)(v29 + 16);
  if (v30)
  {
    *(_WORD *)v28 = *(_WORD *)v29;
    *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
    *(_QWORD *)(v28 + 16) = v30;
    *(_QWORD *)(v28 + 24) = *(_QWORD *)(v29 + 24);
    v31 = *(_QWORD *)(v29 + 40);
    *(_QWORD *)(v28 + 32) = *(_QWORD *)(v29 + 32);
    *(_QWORD *)(v28 + 40) = v31;
    v32 = *(_QWORD *)(v29 + 56);
    *(_QWORD *)(v28 + 48) = *(_QWORD *)(v29 + 48);
    *(_QWORD *)(v28 + 56) = v32;
    v33 = *(_QWORD *)(v29 + 72);
    *(_QWORD *)(v28 + 64) = *(_QWORD *)(v29 + 64);
    *(_QWORD *)(v28 + 72) = v33;
    *(_BYTE *)(v28 + 80) = *(_BYTE *)(v29 + 80);
    v34 = *(_QWORD *)(v29 + 96);
    *(_QWORD *)(v28 + 88) = *(_QWORD *)(v29 + 88);
    *(_QWORD *)(v28 + 96) = v34;
    *(_QWORD *)(v28 + 104) = *(_QWORD *)(v29 + 104);
    *(_BYTE *)(v28 + 112) = *(_BYTE *)(v29 + 112);
    v35 = *(_QWORD *)(v29 + 128);
    *(_QWORD *)(v28 + 120) = *(_QWORD *)(v29 + 120);
    *(_QWORD *)(v28 + 128) = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v36 = *(_OWORD *)(v29 + 112);
    *(_OWORD *)(v28 + 96) = *(_OWORD *)(v29 + 96);
    *(_OWORD *)(v28 + 112) = v36;
    *(_QWORD *)(v28 + 128) = *(_QWORD *)(v29 + 128);
    v37 = *(_OWORD *)(v29 + 48);
    *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
    *(_OWORD *)(v28 + 48) = v37;
    v38 = *(_OWORD *)(v29 + 80);
    *(_OWORD *)(v28 + 64) = *(_OWORD *)(v29 + 64);
    *(_OWORD *)(v28 + 80) = v38;
    v39 = *(_OWORD *)(v29 + 16);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v39;
  }
  v40 = a3[11];
  v41 = a1 + v40;
  v42 = a2 + v40;
  v43 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  v44 = a3[12];
  v45 = a3[13];
  v46 = a1 + v44;
  v47 = a2 + v44;
  *(_DWORD *)v46 = *(_DWORD *)v47;
  *(_BYTE *)(v46 + 4) = *(_BYTE *)(v47 + 4);
  v48 = a1 + v45;
  v49 = a2 + v45;
  *(_BYTE *)v48 = *(_BYTE *)v49;
  v50 = *(_QWORD *)(v49 + 16);
  *(_QWORD *)(v48 + 8) = *(_QWORD *)(v49 + 8);
  *(_QWORD *)(v48 + 16) = v50;
  *(_WORD *)(v48 + 24) = *(_WORD *)(v49 + 24);
  v51 = *(_QWORD *)(v49 + 40);
  *(_QWORD *)(v48 + 32) = *(_QWORD *)(v49 + 32);
  *(_QWORD *)(v48 + 40) = v51;
  *(_BYTE *)(v48 + 48) = *(_BYTE *)(v49 + 48);
  v52 = a3[15];
  *(_WORD *)(a1 + a3[14]) = *(_WORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + v52) = *(_QWORD *)(a2 + v52);
  v53 = a3[16];
  v54 = a1 + v53;
  v55 = a2 + v53;
  v56 = *(_QWORD *)(a2 + v53 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v56 == 1)
  {
    v57 = *(_OWORD *)(v55 + 16);
    *(_OWORD *)v54 = *(_OWORD *)v55;
    *(_OWORD *)(v54 + 16) = v57;
    *(_OWORD *)(v54 + 32) = *(_OWORD *)(v55 + 32);
  }
  else
  {
    *(_QWORD *)v54 = *(_QWORD *)v55;
    *(_BYTE *)(v54 + 8) = *(_BYTE *)(v55 + 8);
    *(_QWORD *)(v54 + 16) = *(_QWORD *)(v55 + 16);
    *(_BYTE *)(v54 + 24) = *(_BYTE *)(v55 + 24);
    *(_QWORD *)(v54 + 32) = *(_QWORD *)(v55 + 32);
    *(_QWORD *)(v54 + 40) = v56;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for PuzzleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 *v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(v9 + 17);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
  *(_QWORD *)(v11 + 24) = *(_QWORD *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v11 + 32) = *(_DWORD *)(v12 + 32);
  v13 = *(_QWORD *)(v12 + 40);
  *(_BYTE *)(v11 + 48) = *(_BYTE *)(v12 + 48);
  *(_QWORD *)(v11 + 40) = v13;
  v14 = *(_QWORD *)(v12 + 56);
  *(_BYTE *)(v11 + 64) = *(_BYTE *)(v12 + 64);
  *(_QWORD *)(v11 + 56) = v14;
  *(_BYTE *)(v11 + 65) = *(_BYTE *)(v12 + 65);
  *(_QWORD *)(v11 + 72) = *(_QWORD *)(v12 + 72);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = (__int128 *)(a2 + v15);
  v18 = *(_QWORD *)(a1 + v15 + 8);
  v19 = *(_QWORD *)(a2 + v15 + 8);
  if (v18)
  {
    if (v19)
    {
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *(_QWORD *)(v16 + 8) = *((_QWORD *)v17 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v16 + 16) = *((_BYTE *)v17 + 16);
      *(_BYTE *)(v16 + 17) = *((_BYTE *)v17 + 17);
      *(_QWORD *)(v16 + 24) = *((_QWORD *)v17 + 3);
      *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E1784(v16);
      v20 = *((_QWORD *)v17 + 4);
      v21 = v17[1];
      *(_OWORD *)v16 = *v17;
      *(_OWORD *)(v16 + 16) = v21;
      *(_QWORD *)(v16 + 32) = v20;
    }
  }
  else if (v19)
  {
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *(_QWORD *)(v16 + 8) = *((_QWORD *)v17 + 1);
    *(_BYTE *)(v16 + 16) = *((_BYTE *)v17 + 16);
    *(_BYTE *)(v16 + 17) = *((_BYTE *)v17 + 17);
    *(_QWORD *)(v16 + 24) = *((_QWORD *)v17 + 3);
    *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v22 = *v17;
    v23 = v17[1];
    *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
    *(_OWORD *)v16 = v22;
    *(_OWORD *)(v16 + 16) = v23;
  }
  v24 = a3[8];
  v25 = a1 + v24;
  v26 = (__int128 *)(a2 + v24);
  v27 = *(_QWORD *)(a1 + v24 + 16);
  v28 = *(_QWORD *)(a2 + v24 + 16);
  if (v27 == 1)
  {
    if (v28 == 1)
    {
      v29 = *v26;
      *(_QWORD *)(v25 + 16) = *((_QWORD *)v26 + 2);
      *(_OWORD *)v25 = v29;
    }
    else
    {
      *(_BYTE *)v25 = *(_BYTE *)v26;
      *(_QWORD *)(v25 + 8) = *((_QWORD *)v26 + 1);
      *(_QWORD *)(v25 + 16) = *((_QWORD *)v26 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v28 == 1)
  {
    sub_1D57D9100(v25);
    v30 = *((_QWORD *)v26 + 2);
    *(_OWORD *)v25 = *v26;
    *(_QWORD *)(v25 + 16) = v30;
  }
  else
  {
    *(_BYTE *)v25 = *(_BYTE *)v26;
    *(_QWORD *)(v25 + 8) = *((_QWORD *)v26 + 1);
    *(_QWORD *)(v25 + 16) = *((_QWORD *)v26 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  v31 = a3[10];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_QWORD *)(a1 + v31 + 16);
  v35 = *(_QWORD *)(a2 + v31 + 16);
  if (v34)
  {
    if (v35)
    {
      *(_BYTE *)v32 = *(_BYTE *)v33;
      *(_BYTE *)(v32 + 1) = *(_BYTE *)(v33 + 1);
      *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
      *(_QWORD *)(v32 + 16) = *(_QWORD *)(v33 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v32 + 24) = *(_DWORD *)(v33 + 24);
      *(_DWORD *)(v32 + 28) = *(_DWORD *)(v33 + 28);
      *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 40) = *(_QWORD *)(v33 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 48) = *(_QWORD *)(v33 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 56) = *(_QWORD *)(v33 + 56);
      *(_QWORD *)(v32 + 64) = *(_QWORD *)(v33 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 72) = *(_QWORD *)(v33 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v32 + 80) = *(_BYTE *)(v33 + 80);
      *(_QWORD *)(v32 + 88) = *(_QWORD *)(v33 + 88);
      *(_QWORD *)(v32 + 96) = *(_QWORD *)(v33 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v36 = *(_QWORD *)(v33 + 104);
      *(_BYTE *)(v32 + 112) = *(_BYTE *)(v33 + 112);
      *(_QWORD *)(v32 + 104) = v36;
      *(_QWORD *)(v32 + 120) = *(_QWORD *)(v33 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 128) = *(_QWORD *)(v33 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v32);
      *(_OWORD *)v32 = *(_OWORD *)v33;
      v38 = *(_OWORD *)(v33 + 64);
      v40 = *(_OWORD *)(v33 + 16);
      v39 = *(_OWORD *)(v33 + 32);
      *(_OWORD *)(v32 + 48) = *(_OWORD *)(v33 + 48);
      *(_OWORD *)(v32 + 64) = v38;
      *(_OWORD *)(v32 + 16) = v40;
      *(_OWORD *)(v32 + 32) = v39;
      v42 = *(_OWORD *)(v33 + 96);
      v41 = *(_OWORD *)(v33 + 112);
      v43 = *(_OWORD *)(v33 + 80);
      *(_QWORD *)(v32 + 128) = *(_QWORD *)(v33 + 128);
      *(_OWORD *)(v32 + 96) = v42;
      *(_OWORD *)(v32 + 112) = v41;
      *(_OWORD *)(v32 + 80) = v43;
    }
  }
  else if (v35)
  {
    *(_BYTE *)v32 = *(_BYTE *)v33;
    *(_BYTE *)(v32 + 1) = *(_BYTE *)(v33 + 1);
    *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
    *(_QWORD *)(v32 + 16) = *(_QWORD *)(v33 + 16);
    *(_DWORD *)(v32 + 24) = *(_DWORD *)(v33 + 24);
    *(_DWORD *)(v32 + 28) = *(_DWORD *)(v33 + 28);
    *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
    *(_QWORD *)(v32 + 40) = *(_QWORD *)(v33 + 40);
    *(_QWORD *)(v32 + 48) = *(_QWORD *)(v33 + 48);
    *(_QWORD *)(v32 + 56) = *(_QWORD *)(v33 + 56);
    *(_QWORD *)(v32 + 64) = *(_QWORD *)(v33 + 64);
    *(_QWORD *)(v32 + 72) = *(_QWORD *)(v33 + 72);
    *(_BYTE *)(v32 + 80) = *(_BYTE *)(v33 + 80);
    *(_QWORD *)(v32 + 88) = *(_QWORD *)(v33 + 88);
    *(_QWORD *)(v32 + 96) = *(_QWORD *)(v33 + 96);
    v37 = *(_QWORD *)(v33 + 104);
    *(_BYTE *)(v32 + 112) = *(_BYTE *)(v33 + 112);
    *(_QWORD *)(v32 + 104) = v37;
    *(_QWORD *)(v32 + 120) = *(_QWORD *)(v33 + 120);
    *(_QWORD *)(v32 + 128) = *(_QWORD *)(v33 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v32 = *(_OWORD *)v33;
    v44 = *(_OWORD *)(v33 + 16);
    v45 = *(_OWORD *)(v33 + 32);
    v46 = *(_OWORD *)(v33 + 64);
    *(_OWORD *)(v32 + 48) = *(_OWORD *)(v33 + 48);
    *(_OWORD *)(v32 + 64) = v46;
    *(_OWORD *)(v32 + 16) = v44;
    *(_OWORD *)(v32 + 32) = v45;
    v47 = *(_OWORD *)(v33 + 80);
    v48 = *(_OWORD *)(v33 + 96);
    v49 = *(_OWORD *)(v33 + 112);
    *(_QWORD *)(v32 + 128) = *(_QWORD *)(v33 + 128);
    *(_OWORD *)(v32 + 96) = v48;
    *(_OWORD *)(v32 + 112) = v49;
    *(_OWORD *)(v32 + 80) = v47;
  }
  v50 = a3[11];
  v51 = a1 + v50;
  v52 = a2 + v50;
  v53 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 24))(v51, v52, v53);
  v54 = a3[12];
  v55 = a1 + v54;
  v56 = (int *)(a2 + v54);
  v57 = *v56;
  *(_BYTE *)(v55 + 4) = *((_BYTE *)v56 + 4);
  *(_DWORD *)v55 = v57;
  v58 = a3[13];
  v59 = a1 + v58;
  v60 = a2 + v58;
  *(_BYTE *)v59 = *(_BYTE *)(a2 + v58);
  *(_QWORD *)(v59 + 8) = *(_QWORD *)(a2 + v58 + 8);
  *(_QWORD *)(v59 + 16) = *(_QWORD *)(a2 + v58 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v59 + 24) = *(_BYTE *)(v60 + 24);
  *(_BYTE *)(v59 + 25) = *(_BYTE *)(v60 + 25);
  *(_QWORD *)(v59 + 32) = *(_QWORD *)(v60 + 32);
  *(_QWORD *)(v59 + 40) = *(_QWORD *)(v60 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v59 + 48) = *(_BYTE *)(v60 + 48);
  *(_WORD *)(a1 + a3[14]) = *(_WORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v61 = a3[16];
  v62 = a1 + v61;
  v63 = (__int128 *)(a2 + v61);
  v64 = *(_QWORD *)(a1 + v61 + 40);
  v65 = *((_QWORD *)v63 + 5);
  if (v64 == 1)
  {
    if (v65 == 1)
    {
      v66 = *v63;
      v67 = v63[2];
      *(_OWORD *)(v62 + 16) = v63[1];
      *(_OWORD *)(v62 + 32) = v67;
      *(_OWORD *)v62 = v66;
    }
    else
    {
      v70 = *(_QWORD *)v63;
      *(_BYTE *)(v62 + 8) = *((_BYTE *)v63 + 8);
      *(_QWORD *)v62 = v70;
      v71 = *((_QWORD *)v63 + 2);
      *(_BYTE *)(v62 + 24) = *((_BYTE *)v63 + 24);
      *(_QWORD *)(v62 + 16) = v71;
      *(_QWORD *)(v62 + 32) = *((_QWORD *)v63 + 4);
      *(_QWORD *)(v62 + 40) = *((_QWORD *)v63 + 5);
      swift_bridgeObjectRetain();
    }
  }
  else if (v65 == 1)
  {
    sub_1D587CB18(v62);
    v69 = v63[1];
    v68 = v63[2];
    *(_OWORD *)v62 = *v63;
    *(_OWORD *)(v62 + 16) = v69;
    *(_OWORD *)(v62 + 32) = v68;
  }
  else
  {
    v72 = *(_QWORD *)v63;
    *(_BYTE *)(v62 + 8) = *((_BYTE *)v63 + 8);
    *(_QWORD *)v62 = v72;
    v73 = *((_QWORD *)v63 + 2);
    *(_BYTE *)(v62 + 24) = *((_BYTE *)v63 + 24);
    *(_QWORD *)(v62 + 16) = v73;
    *(_QWORD *)(v62 + 32) = *((_QWORD *)v63 + 4);
    *(_QWORD *)(v62 + 40) = *((_QWORD *)v63 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_1D587CB18(uint64_t a1)
{
  destroy for PuzzleStatsData();
  return a1;
}

uint64_t initializeWithTake for PuzzleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 *v45;
  __int128 v46;
  __int128 v47;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  v11 = (_OWORD *)(a1 + v8);
  v12 = (_OWORD *)(a2 + v8);
  v13 = v12[4];
  v14 = v12[2];
  v11[3] = v12[3];
  v11[4] = v13;
  v15 = v12[1];
  *v11 = *v12;
  v11[1] = v15;
  v11[2] = v14;
  v16 = a3[7];
  v17 = a3[8];
  v18 = a1 + v16;
  v19 = a2 + v16;
  v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  v21 = a1 + v17;
  v22 = a2 + v17;
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
  v23 = a3[10];
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  v24 = a1 + v23;
  v25 = (__int128 *)(a2 + v23);
  *(_QWORD *)(v24 + 128) = *((_QWORD *)v25 + 16);
  v26 = v25[7];
  *(_OWORD *)(v24 + 96) = v25[6];
  *(_OWORD *)(v24 + 112) = v26;
  v27 = v25[5];
  *(_OWORD *)(v24 + 64) = v25[4];
  *(_OWORD *)(v24 + 80) = v27;
  v28 = v25[3];
  *(_OWORD *)(v24 + 32) = v25[2];
  *(_OWORD *)(v24 + 48) = v28;
  v29 = *v25;
  v30 = v25[1];
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_OWORD *)v24 = v29;
  *(_OWORD *)(v24 + 16) = v30;
  v34 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a3[13];
  v37 = a1 + v35;
  v38 = a2 + v35;
  *(_DWORD *)v37 = *(_DWORD *)v38;
  *(_BYTE *)(v37 + 4) = *(_BYTE *)(v38 + 4);
  v39 = a1 + v36;
  v40 = a2 + v36;
  v41 = *(_OWORD *)(v40 + 16);
  *(_OWORD *)v39 = *(_OWORD *)v40;
  *(_OWORD *)(v39 + 16) = v41;
  *(_OWORD *)(v39 + 32) = *(_OWORD *)(v40 + 32);
  *(_BYTE *)(v39 + 48) = *(_BYTE *)(v40 + 48);
  v42 = a3[15];
  *(_WORD *)(a1 + a3[14]) = *(_WORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + v42) = *(_QWORD *)(a2 + v42);
  v43 = a3[16];
  v44 = (_OWORD *)(a1 + v43);
  v45 = (__int128 *)(a2 + v43);
  v46 = v45[2];
  v47 = *v45;
  v44[1] = v45[1];
  v44[2] = v46;
  *v44 = v47;
  return a1;
}

uint64_t assignWithTake for PuzzleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 16) = *(_WORD *)(v9 + 16);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v12 + 32) = *(_DWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
  *(_BYTE *)(v12 + 65) = *(_BYTE *)(v13 + 65);
  *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  if (*(_QWORD *)(a1 + v16 + 8))
  {
    v19 = *(_QWORD *)(v18 + 8);
    if (v19)
    {
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *(_QWORD *)(v17 + 8) = v19;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
      *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
      v20 = *(_QWORD *)(v18 + 32);
      *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
      *(_QWORD *)(v17 + 32) = v20;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D57E1784(v17);
  }
  v21 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v21;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
LABEL_6:
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  if (*(_QWORD *)(a1 + v22 + 16) == 1)
  {
LABEL_9:
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
    goto LABEL_11;
  }
  v25 = *(_QWORD *)(v24 + 16);
  if (v25 == 1)
  {
    sub_1D57D9100(v23);
    goto LABEL_9;
  }
  *(_BYTE *)v23 = *(_BYTE *)v24;
  *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
  *(_QWORD *)(v23 + 16) = v25;
  swift_bridgeObjectRelease();
LABEL_11:
  v26 = a3[10];
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  v27 = a1 + v26;
  v28 = a2 + v26;
  if (*(_QWORD *)(a1 + v26 + 16))
  {
    v29 = *(_QWORD *)(v28 + 16);
    if (v29)
    {
      *(_WORD *)v27 = *(_WORD *)v28;
      *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
      *(_QWORD *)(v27 + 16) = v29;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v27 + 24) = *(_QWORD *)(v28 + 24);
      *(_QWORD *)(v27 + 32) = *(_QWORD *)(v28 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v27 + 40) = *(_QWORD *)(v28 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v27 + 48) = *(_QWORD *)(v28 + 48);
      swift_bridgeObjectRelease();
      v30 = *(_QWORD *)(v28 + 64);
      *(_QWORD *)(v27 + 56) = *(_QWORD *)(v28 + 56);
      *(_QWORD *)(v27 + 64) = v30;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v27 + 72) = *(_QWORD *)(v28 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v27 + 80) = *(_BYTE *)(v28 + 80);
      v31 = *(_QWORD *)(v28 + 96);
      *(_QWORD *)(v27 + 88) = *(_QWORD *)(v28 + 88);
      *(_QWORD *)(v27 + 96) = v31;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v27 + 104) = *(_QWORD *)(v28 + 104);
      *(_BYTE *)(v27 + 112) = *(_BYTE *)(v28 + 112);
      *(_QWORD *)(v27 + 120) = *(_QWORD *)(v28 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v27 + 128) = *(_QWORD *)(v28 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1D57E17B8(a1 + v26);
  }
  v32 = *(_OWORD *)(v28 + 112);
  *(_OWORD *)(v27 + 96) = *(_OWORD *)(v28 + 96);
  *(_OWORD *)(v27 + 112) = v32;
  *(_QWORD *)(v27 + 128) = *(_QWORD *)(v28 + 128);
  v33 = *(_OWORD *)(v28 + 48);
  *(_OWORD *)(v27 + 32) = *(_OWORD *)(v28 + 32);
  *(_OWORD *)(v27 + 48) = v33;
  v34 = *(_OWORD *)(v28 + 80);
  *(_OWORD *)(v27 + 64) = *(_OWORD *)(v28 + 64);
  *(_OWORD *)(v27 + 80) = v34;
  v35 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v35;
LABEL_16:
  v36 = a3[11];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 40))(v37, v38, v39);
  v40 = a3[12];
  v41 = a3[13];
  v42 = a1 + v40;
  v43 = a2 + v40;
  *(_DWORD *)v42 = *(_DWORD *)v43;
  *(_BYTE *)(v42 + 4) = *(_BYTE *)(v43 + 4);
  v44 = a1 + v41;
  v45 = a2 + v41;
  *(_BYTE *)v44 = *(_BYTE *)(a2 + v41);
  v46 = *(_QWORD *)(a2 + v41 + 8);
  v47 = *(_QWORD *)(a2 + v41 + 16);
  *(_QWORD *)(v44 + 8) = v46;
  *(_QWORD *)(v44 + 16) = v47;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v44 + 24) = *(_BYTE *)(v45 + 24);
  *(_BYTE *)(v44 + 25) = *(_BYTE *)(v45 + 25);
  v48 = *(_QWORD *)(v45 + 40);
  *(_QWORD *)(v44 + 32) = *(_QWORD *)(v45 + 32);
  *(_QWORD *)(v44 + 40) = v48;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v44 + 48) = *(_BYTE *)(v45 + 48);
  v49 = a3[15];
  *(_WORD *)(a1 + a3[14]) = *(_WORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + v49) = *(_QWORD *)(a2 + v49);
  swift_bridgeObjectRelease();
  v50 = a3[16];
  v51 = a1 + v50;
  v52 = a2 + v50;
  if (*(_QWORD *)(a1 + v50 + 40) != 1)
  {
    v53 = *(_QWORD *)(v52 + 40);
    if (v53 != 1)
    {
      *(_QWORD *)v51 = *(_QWORD *)v52;
      *(_BYTE *)(v51 + 8) = *(_BYTE *)(v52 + 8);
      *(_QWORD *)(v51 + 16) = *(_QWORD *)(v52 + 16);
      *(_BYTE *)(v51 + 24) = *(_BYTE *)(v52 + 24);
      *(_QWORD *)(v51 + 32) = *(_QWORD *)(v52 + 32);
      *(_QWORD *)(v51 + 40) = v53;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1D587CB18(v51);
  }
  v54 = *(_OWORD *)(v52 + 16);
  *(_OWORD *)v51 = *(_OWORD *)v52;
  *(_OWORD *)(v51 + 16) = v54;
  *(_OWORD *)(v51 + 32) = *(_OWORD *)(v52 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleViewEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D587D0B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1D5AADFB0();
    v10 = a1 + *(int *)(a3 + 44);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for PuzzleViewEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D587D168(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_1D5AADFB0();
    v12 = a1 + *(int *)(a4 + 44);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t storeEnumTagSinglePayload for PuzzleViewEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1D587D25C + 4 * byte_1D5ABC752[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1D587D290 + 4 * byte_1D5ABC74D[v4]))();
}

uint64_t sub_1D587D290(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D587D298(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D587D2A0);
  return result;
}

uint64_t sub_1D587D2AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D587D2B4);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1D587D2B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D587D2C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleViewEvent.Model.CodingKeys()
{
  return &type metadata for PuzzleViewEvent.Model.CodingKeys;
}

unint64_t sub_1D587D2E0()
{
  unint64_t result;

  result = qword_1EFF4A428;
  if (!qword_1EFF4A428)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABCA74, &type metadata for PuzzleViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A428);
  }
  return result;
}

unint64_t sub_1D587D328()
{
  unint64_t result;

  result = qword_1EFF4A430;
  if (!qword_1EFF4A430)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABC9E4, &type metadata for PuzzleViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A430);
  }
  return result;
}

unint64_t sub_1D587D370()
{
  unint64_t result;

  result = qword_1EFF4A438;
  if (!qword_1EFF4A438)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABCA0C, &type metadata for PuzzleViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A438);
  }
  return result;
}

uint64_t sub_1D587D3B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6144656C7A7A7570 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEC9F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AECA50 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x446C6C6177796170 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AEDCC0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x7453656C7A7A7570 && a2 == 0xEF61746144737461)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

NewsAnalytics::SearchResultsSource_optional __swiftcall SearchResultsSource.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::SearchResultsSource_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SearchResultsSource.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000011;
  if (*v0 != 1)
    v1 = 0x73757361676570;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D587D9EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A399FC(*a1, *a2);
}

unint64_t sub_1D587D9FC()
{
  unint64_t result;

  result = qword_1EFF4A440;
  if (!qword_1EFF4A440)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SearchResultsSource, &type metadata for SearchResultsSource);
    atomic_store(result, (unint64_t *)&qword_1EFF4A440);
  }
  return result;
}

uint64_t sub_1D587DA40()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D587DAE4()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D587DB64()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::SearchResultsSource_optional sub_1D587DC04(Swift::String *a1)
{
  return SearchResultsSource.init(rawValue:)(*a1);
}

void sub_1D587DC10(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0x80000001D5AEADC0;
  v5 = 0xD000000000000011;
  if (v2 != 1)
  {
    v5 = 0x73757361676570;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D587DC74()
{
  sub_1D587DDD8();
  return sub_1D5AAE928();
}

uint64_t sub_1D587DCD0()
{
  sub_1D587DDD8();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for SearchResultsSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D587DD68 + 4 * byte_1D5ABCAF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D587DD9C + 4 * byte_1D5ABCAF0[v4]))();
}

uint64_t sub_1D587DD9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D587DDA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D587DDACLL);
  return result;
}

uint64_t sub_1D587DDB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D587DDC0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D587DDC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D587DDCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1D587DDD8()
{
  unint64_t result;

  result = qword_1EFF4A448;
  if (!qword_1EFF4A448)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SearchResultsSource, &type metadata for SearchResultsSource);
    atomic_store(result, (unint64_t *)&qword_1EFF4A448);
  }
  return result;
}

uint64_t InGroupPositionData.position.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t InGroupPositionData.position.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*InGroupPositionData.position.modify())()
{
  return nullsub_1;
}

uint64_t InGroupPositionData.init(position:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1D587DE44()
{
  return 0x6E6F697469736F70;
}

uint64_t sub_1D587DE5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D587DEF0()
{
  sub_1D587E030();
  return sub_1D5AAEED4();
}

uint64_t sub_1D587DF18()
{
  sub_1D587E030();
  return sub_1D5AAEEE0();
}

uint64_t InGroupPositionData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D587E194(0, &qword_1ED9CC920, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D587E030();
  sub_1D5AAEEC8();
  sub_1D5AAED78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D587E030()
{
  unint64_t result;

  result = qword_1ED9CA360;
  if (!qword_1ED9CA360)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABCD88, &type metadata for InGroupPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CA360);
  }
  return result;
}

uint64_t InGroupPositionData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v12;

  sub_1D587E194(0, &qword_1ED9CC810, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D587E030();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECDC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D587E194(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D587E030();
    v7 = a3(a1, &type metadata for InGroupPositionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D587E1F8@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return InGroupPositionData.init(from:)(a1, a2);
}

uint64_t sub_1D587E20C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D587E194(0, &qword_1ED9CC920, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D587E030();
  sub_1D5AAEEC8();
  sub_1D5AAED78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for InGroupPositionData()
{
  return &type metadata for InGroupPositionData;
}

uint64_t storeEnumTagSinglePayload for InGroupPositionData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D587E34C + 4 * byte_1D5ABCC10[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D587E36C + 4 * byte_1D5ABCC15[v4]))();
}

_BYTE *sub_1D587E34C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D587E36C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D587E374(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D587E37C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D587E384(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D587E38C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for InGroupPositionData.CodingKeys()
{
  return &type metadata for InGroupPositionData.CodingKeys;
}

unint64_t sub_1D587E3AC()
{
  unint64_t result;

  result = qword_1EFF4A450;
  if (!qword_1EFF4A450)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABCD60, &type metadata for InGroupPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A450);
  }
  return result;
}

unint64_t sub_1D587E3F4()
{
  unint64_t result;

  result = qword_1ED9CA370;
  if (!qword_1ED9CA370)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABCCD0, &type metadata for InGroupPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CA370);
  }
  return result;
}

unint64_t sub_1D587E43C()
{
  unint64_t result;

  result = qword_1ED9CA368;
  if (!qword_1ED9CA368)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABCCF8, &type metadata for InGroupPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CA368);
  }
  return result;
}

uint64_t sub_1D587E480(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9D1148, MEMORY[0x1E0CF8078]);
}

uint64_t static WebEmbedLoadEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9D1168, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9D1148, a1);
}

uint64_t sub_1D587E4C0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9D1170, MEMORY[0x1E0CF8380]);
}

uint64_t static WebEmbedLoadEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9D1190, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9D1170, a1);
}

uint64_t WebEmbedLoadEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t WebEmbedLoadEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*WebEmbedLoadEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t WebEmbedLoadEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for WebEmbedLoadEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for WebEmbedLoadEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9D1198);
}

uint64_t WebEmbedLoadEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedLoadEvent.timedData.modify())()
{
  type metadata accessor for WebEmbedLoadEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedLoadEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebEmbedLoadEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedLoadEvent.groupData.modify())()
{
  type metadata accessor for WebEmbedLoadEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedLoadEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebEmbedLoadEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedLoadEvent.feedData.modify())()
{
  type metadata accessor for WebEmbedLoadEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedLoadEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebEmbedLoadEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedLoadEvent.feedPositionData.modify())()
{
  type metadata accessor for WebEmbedLoadEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedLoadEvent.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebEmbedLoadEvent.inGroupPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedLoadEvent.inGroupPositionData.modify())()
{
  type metadata accessor for WebEmbedLoadEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedLoadEvent.webEmbedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebEmbedLoadEvent.webEmbedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedLoadEvent.webEmbedData.modify())()
{
  type metadata accessor for WebEmbedLoadEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedLoadEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *Event;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  Event = (int *)type metadata accessor for WebEmbedLoadEvent(0);
  v5 = a1 + Event[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + Event[6];
  v8 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = a1 + Event[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v8, v11);
  v12 = a1 + Event[8];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v8, v13);
  v14 = a1 + Event[9];
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v8, v15);
  v16 = a1 + Event[10];
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
}

uint64_t WebEmbedLoadEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t WebEmbedLoadEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for WebEmbedLoadEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for WebEmbedLoadEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4A4C8);
}

_QWORD *WebEmbedLoadEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for WebEmbedLoadEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 24), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t WebEmbedLoadEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for WebEmbedLoadEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t WebEmbedLoadEvent.Model.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for WebEmbedLoadEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 32));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t WebEmbedLoadEvent.Model.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for WebEmbedLoadEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 36));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t WebEmbedLoadEvent.Model.webEmbedData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for WebEmbedLoadEvent.Model(0) + 40));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

__n128 WebEmbedLoadEvent.Model.init(eventData:timedData:groupData:feedData:feedPositionData:inGroupPositionData:webEmbedData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __n128 *a4@<X3>, int *a5@<X4>, int *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X8>)
{
  unint64_t v15;
  int v16;
  int v17;
  char v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 *v23;
  __n128 result;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[144];

  sub_1D57DD5B8(a3, (uint64_t)v31);
  v28 = *a4;
  v15 = a4[1].n128_u64[0];
  v16 = *a5;
  LOBYTE(a5) = *((_BYTE *)a5 + 4);
  v17 = *a6;
  v18 = *((_BYTE *)a6 + 4);
  v29 = a7[1];
  v30 = *a7;
  v19 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a8, a1, v19);
  v20 = (int *)type metadata accessor for WebEmbedLoadEvent.Model(0);
  v21 = a8 + v20[5];
  v22 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, a2, v22);
  sub_1D57DD5B8((uint64_t)v31, a8 + v20[6]);
  v23 = (__n128 *)(a8 + v20[7]);
  result = v28;
  *v23 = v28;
  v23[1].n128_u64[0] = v15;
  v25 = a8 + v20[8];
  *(_DWORD *)v25 = v16;
  *(_BYTE *)(v25 + 4) = (_BYTE)a5;
  v26 = a8 + v20[9];
  *(_DWORD *)v26 = v17;
  *(_BYTE *)(v26 + 4) = v18;
  v27 = (_QWORD *)(a8 + v20[10]);
  *v27 = v30;
  v27[1] = v29;
  return result;
}

uint64_t sub_1D587EF70(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D587EFA8 + 4 * byte_1D5ABCDE0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D587EFA8()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D587EFBC()
{
  return 0x74614470756F7267;
}

uint64_t sub_1D587EFD0()
{
  return 0x6174614464656566;
}

unint64_t sub_1D587EFE8()
{
  return 0xD000000000000010;
}

unint64_t sub_1D587F004()
{
  return 0xD000000000000013;
}

uint64_t sub_1D587F024()
{
  return 0x6465626D45626577;
}

uint64_t sub_1D587F044()
{
  unsigned __int8 *v0;

  return sub_1D587EF70(*v0);
}

uint64_t sub_1D587F04C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5881E4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D587F070()
{
  sub_1D587F3E8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D587F098()
{
  sub_1D587F3E8();
  return sub_1D5AAEEE0();
}

uint64_t WebEmbedLoadEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  uint64_t v12;
  int *v13;
  int v14;
  int *v15;
  int v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21;
  uint64_t v22;
  _BYTE v23[144];
  char v24;
  char v25;

  v3 = v1;
  sub_1D587F978(0, &qword_1EFF4A458, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D587F3E8();
  sub_1D5AAEEC8();
  v23[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for WebEmbedLoadEvent.Model(0);
    v25 = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    sub_1D57DD5B8(v3 + v10[6], (uint64_t)v23);
    sub_1D57DD5B8((uint64_t)v23, (uint64_t)&v21);
    v24 = 2;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v11 = (__int128 *)(v3 + v10[7]);
    v12 = *((_QWORD *)v11 + 2);
    v21 = *v11;
    v22 = v12;
    v24 = 3;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v13 = (int *)(v3 + v10[8]);
    v14 = *v13;
    LOBYTE(v13) = *((_BYTE *)v13 + 4);
    LODWORD(v21) = v14;
    BYTE4(v21) = (_BYTE)v13;
    v24 = 4;
    sub_1D57C9C4C();
    sub_1D5AAED18();
    v15 = (int *)(v3 + v10[9]);
    v16 = *v15;
    LOBYTE(v15) = *((_BYTE *)v15 + 4);
    LODWORD(v21) = v16;
    BYTE4(v21) = (_BYTE)v15;
    v24 = 5;
    sub_1D57C8B9C();
    sub_1D5AAED18();
    v17 = (uint64_t *)(v3 + v10[10]);
    v19 = *v17;
    v18 = v17[1];
    *(_QWORD *)&v21 = v19;
    *((_QWORD *)&v21 + 1) = v18;
    v24 = 6;
    sub_1D57F1894();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D587F3E8()
{
  unint64_t result;

  result = qword_1EFF4A460;
  if (!qword_1EFF4A460)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABD02C, &type metadata for WebEmbedLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A460);
  }
  return result;
}

uint64_t WebEmbedLoadEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  _BYTE v45[136];
  char v46[144];
  char v47;
  char v48;

  v33 = a2;
  v3 = sub_1D5AADFB0();
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1D5AADF98();
  v5 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v38 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D587F978(0, &qword_1EFF4A468, MEMORY[0x1E0DED048]);
  v40 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v31 - v9;
  v11 = (int *)type metadata accessor for WebEmbedLoadEvent.Model(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v41 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1D587F3E8();
  v39 = v10;
  v15 = v42;
  sub_1D5AAEEB0();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  v42 = v8;
  v32 = v5;
  v16 = (uint64_t)v13;
  v18 = v34;
  v17 = v35;
  v19 = v36;
  v46[0] = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v20 = v37;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v16, v38, v20);
  v46[0] = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v16 + v11[5], v18, v19);
  v48 = 2;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  sub_1D57DD5B8((uint64_t)v46, (uint64_t)v45);
  sub_1D57DD5B8((uint64_t)v45, v16 + v11[6]);
  v47 = 3;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v21 = v44;
  v22 = v16 + v11[7];
  *(_OWORD *)v22 = v43;
  *(_QWORD *)(v22 + 16) = v21;
  v47 = 4;
  sub_1D57C9C08();
  sub_1D5AAEC7C();
  v23 = v42;
  v24 = BYTE4(v43);
  v25 = v16 + v11[8];
  *(_DWORD *)v25 = v43;
  *(_BYTE *)(v25 + 4) = v24;
  v47 = 5;
  sub_1D57C8B58();
  sub_1D5AAEC7C();
  v26 = BYTE4(v43);
  v27 = v16 + v11[9];
  *(_DWORD *)v27 = v43;
  *(_BYTE *)(v27 + 4) = v26;
  v47 = 6;
  sub_1D57F1850();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v39, v40);
  v28 = *((_QWORD *)&v43 + 1);
  v29 = (_QWORD *)(v16 + v11[10]);
  *v29 = v43;
  v29[1] = v28;
  sub_1D587F9D4(v16, v33);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return sub_1D587FA18(v16);
}

void sub_1D587F978(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D587F3E8();
    v7 = a3(a1, &type metadata for WebEmbedLoadEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D587F9D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WebEmbedLoadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D587FA18(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WebEmbedLoadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D587FA54@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WebEmbedLoadEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D587FA68(_QWORD *a1)
{
  return WebEmbedLoadEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D587FA7C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9D1168, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9D1148, a1);
}

uint64_t sub_1D587FAA0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9D1190, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9D1170, a1);
}

uint64_t sub_1D587FAC4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  v9 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v9, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v9, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v9, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
}

uint64_t *initializeBufferWithCopyOfBuffer for WebEmbedLoadEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return a1;
}

uint64_t destroy for WebEmbedLoadEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
}

uint64_t initializeWithCopy for WebEmbedLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

uint64_t assignWithCopy for WebEmbedLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t initializeWithTake for WebEmbedLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for WebEmbedLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for WebEmbedLoadEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58808A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
              v8 = v18;
              v12 = *(_QWORD *)(v18 - 8);
              v13 = a3[10];
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for WebEmbedLoadEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5880A7C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
              v10 = v20;
              v14 = *(_QWORD *)(v20 - 8);
              v15 = a4[10];
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5880C4C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
              if (v6 <= 0x3F)
                swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for WebEmbedLoadEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = *((_QWORD *)v14 + 2);
    if (v15)
    {
      *(_WORD *)v13 = *(_WORD *)v14;
      *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
      *((_QWORD *)v13 + 2) = v15;
      *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);
      v16 = *((_QWORD *)v14 + 5);
      *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
      *((_QWORD *)v13 + 5) = v16;
      v17 = *((_QWORD *)v14 + 7);
      *((_QWORD *)v13 + 6) = *((_QWORD *)v14 + 6);
      *((_QWORD *)v13 + 7) = v17;
      v18 = *((_QWORD *)v14 + 9);
      *((_QWORD *)v13 + 8) = *((_QWORD *)v14 + 8);
      *((_QWORD *)v13 + 9) = v18;
      v13[80] = v14[80];
      v19 = *((_QWORD *)v14 + 12);
      *((_QWORD *)v13 + 11) = *((_QWORD *)v14 + 11);
      *((_QWORD *)v13 + 12) = v19;
      *((_QWORD *)v13 + 13) = *((_QWORD *)v14 + 13);
      v13[112] = v14[112];
      v20 = *((_QWORD *)v14 + 16);
      *((_QWORD *)v13 + 15) = *((_QWORD *)v14 + 15);
      *((_QWORD *)v13 + 16) = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v22 = *((_OWORD *)v14 + 7);
      *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
      *((_OWORD *)v13 + 7) = v22;
      *((_QWORD *)v13 + 16) = *((_QWORD *)v14 + 16);
      v23 = *((_OWORD *)v14 + 3);
      *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
      *((_OWORD *)v13 + 3) = v23;
      v24 = *((_OWORD *)v14 + 5);
      *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
      *((_OWORD *)v13 + 5) = v24;
      v25 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v25;
    }
    v26 = a3[7];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = *((_QWORD *)v28 + 2);
    if (v29 == 1)
    {
      *(_OWORD *)v27 = *(_OWORD *)v28;
      *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
    }
    else
    {
      *v27 = *v28;
      *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
      *((_QWORD *)v27 + 2) = v29;
      swift_bridgeObjectRetain();
    }
    v30 = a3[8];
    v31 = a3[9];
    v32 = (char *)a1 + v30;
    v33 = (char *)a2 + v30;
    *(_DWORD *)v32 = *(_DWORD *)v33;
    v32[4] = v33[4];
    v34 = (char *)a1 + v31;
    v35 = (char *)a2 + v31;
    *(_DWORD *)v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    v36 = a3[10];
    v37 = (uint64_t *)((char *)a1 + v36);
    v38 = (uint64_t *)((char *)a2 + v36);
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for WebEmbedLoadEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  if (*(_QWORD *)(a1 + a2[6] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[7] + 16) != 1)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WebEmbedLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    *(_WORD *)v12 = *(_WORD *)v13;
    *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
    *(_QWORD *)(v12 + 16) = v14;
    *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
    v15 = *(_QWORD *)(v13 + 40);
    *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
    *(_QWORD *)(v12 + 40) = v15;
    v16 = *(_QWORD *)(v13 + 56);
    *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
    *(_QWORD *)(v12 + 56) = v16;
    v17 = *(_QWORD *)(v13 + 72);
    *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
    *(_QWORD *)(v12 + 72) = v17;
    *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
    v18 = *(_QWORD *)(v13 + 96);
    *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
    *(_QWORD *)(v12 + 96) = v18;
    *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
    *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
    v19 = *(_QWORD *)(v13 + 128);
    *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
    *(_QWORD *)(v12 + 128) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *(_OWORD *)(v13 + 112);
    *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
    *(_OWORD *)(v12 + 112) = v20;
    *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
    v21 = *(_OWORD *)(v13 + 48);
    *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
    *(_OWORD *)(v12 + 48) = v21;
    v22 = *(_OWORD *)(v13 + 80);
    *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
    *(_OWORD *)(v12 + 80) = v22;
    v23 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v23;
  }
  v24 = a3[7];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)(v26 + 16);
  if (v27 == 1)
  {
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
  }
  else
  {
    *(_BYTE *)v25 = *(_BYTE *)v26;
    *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
    *(_QWORD *)(v25 + 16) = v27;
    swift_bridgeObjectRetain();
  }
  v28 = a3[8];
  v29 = a3[9];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_DWORD *)v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  v32 = a1 + v29;
  v33 = a2 + v29;
  *(_DWORD *)v32 = *(_DWORD *)v33;
  *(_BYTE *)(v32 + 4) = *(_BYTE *)(v33 + 4);
  v34 = a3[10];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WebEmbedLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  int v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a1 + v11 + 16);
  v15 = *(_QWORD *)(a2 + v11 + 16);
  if (v14)
  {
    if (v15)
    {
      *(_BYTE *)v12 = *(_BYTE *)v13;
      *(_BYTE *)(v12 + 1) = *(_BYTE *)(v13 + 1);
      *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
      *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v12 + 24) = *(_DWORD *)(v13 + 24);
      *(_DWORD *)(v12 + 28) = *(_DWORD *)(v13 + 28);
      *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
      *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
      *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
      *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v16 = *(_QWORD *)(v13 + 104);
      *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
      *(_QWORD *)(v12 + 104) = v16;
      *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v12);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      v18 = *(_OWORD *)(v13 + 64);
      v20 = *(_OWORD *)(v13 + 16);
      v19 = *(_OWORD *)(v13 + 32);
      *(_OWORD *)(v12 + 48) = *(_OWORD *)(v13 + 48);
      *(_OWORD *)(v12 + 64) = v18;
      *(_OWORD *)(v12 + 16) = v20;
      *(_OWORD *)(v12 + 32) = v19;
      v22 = *(_OWORD *)(v13 + 96);
      v21 = *(_OWORD *)(v13 + 112);
      v23 = *(_OWORD *)(v13 + 80);
      *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
      *(_OWORD *)(v12 + 96) = v22;
      *(_OWORD *)(v12 + 112) = v21;
      *(_OWORD *)(v12 + 80) = v23;
    }
  }
  else if (v15)
  {
    *(_BYTE *)v12 = *(_BYTE *)v13;
    *(_BYTE *)(v12 + 1) = *(_BYTE *)(v13 + 1);
    *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
    *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
    *(_DWORD *)(v12 + 24) = *(_DWORD *)(v13 + 24);
    *(_DWORD *)(v12 + 28) = *(_DWORD *)(v13 + 28);
    *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
    *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
    *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
    *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
    *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
    *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
    *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
    *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
    *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
    v17 = *(_QWORD *)(v13 + 104);
    *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
    *(_QWORD *)(v12 + 104) = v17;
    *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
    *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
    v24 = *(_OWORD *)(v13 + 16);
    v25 = *(_OWORD *)(v13 + 32);
    v26 = *(_OWORD *)(v13 + 64);
    *(_OWORD *)(v12 + 48) = *(_OWORD *)(v13 + 48);
    *(_OWORD *)(v12 + 64) = v26;
    *(_OWORD *)(v12 + 16) = v24;
    *(_OWORD *)(v12 + 32) = v25;
    v27 = *(_OWORD *)(v13 + 80);
    v28 = *(_OWORD *)(v13 + 96);
    v29 = *(_OWORD *)(v13 + 112);
    *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
    *(_OWORD *)(v12 + 96) = v28;
    *(_OWORD *)(v12 + 112) = v29;
    *(_OWORD *)(v12 + 80) = v27;
  }
  v30 = a3[7];
  v31 = a1 + v30;
  v32 = (__int128 *)(a2 + v30);
  v33 = *(_QWORD *)(a1 + v30 + 16);
  v34 = *(_QWORD *)(a2 + v30 + 16);
  if (v33 == 1)
  {
    if (v34 == 1)
    {
      v35 = *v32;
      *(_QWORD *)(v31 + 16) = *((_QWORD *)v32 + 2);
      *(_OWORD *)v31 = v35;
    }
    else
    {
      *(_BYTE *)v31 = *(_BYTE *)v32;
      *(_QWORD *)(v31 + 8) = *((_QWORD *)v32 + 1);
      *(_QWORD *)(v31 + 16) = *((_QWORD *)v32 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v34 == 1)
  {
    sub_1D57D9100(v31);
    v36 = *((_QWORD *)v32 + 2);
    *(_OWORD *)v31 = *v32;
    *(_QWORD *)(v31 + 16) = v36;
  }
  else
  {
    *(_BYTE *)v31 = *(_BYTE *)v32;
    *(_QWORD *)(v31 + 8) = *((_QWORD *)v32 + 1);
    *(_QWORD *)(v31 + 16) = *((_QWORD *)v32 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v37 = a3[8];
  v38 = a1 + v37;
  v39 = (int *)(a2 + v37);
  v40 = *v39;
  *(_BYTE *)(v38 + 4) = *((_BYTE *)v39 + 4);
  *(_DWORD *)v38 = v40;
  v41 = a3[9];
  v42 = a1 + v41;
  v43 = (int *)(a2 + v41);
  v44 = *v43;
  *(_BYTE *)(v42 + 4) = *((_BYTE *)v43 + 4);
  *(_DWORD *)v42 = v44;
  v45 = a3[10];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (_QWORD *)(a2 + v45);
  *v46 = *v47;
  v46[1] = v47[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for WebEmbedLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  *(_QWORD *)(v13 + 128) = *(_QWORD *)(v14 + 128);
  v16 = *(_OWORD *)(v14 + 112);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(v14 + 96);
  *(_OWORD *)(v13 + 112) = v16;
  v17 = *(_OWORD *)(v14 + 80);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v14 + 64);
  *(_OWORD *)(v13 + 80) = v17;
  v18 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v18;
  v19 = a1 + v12;
  v20 = a2 + v12;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  v21 = a3[8];
  v22 = a3[9];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_DWORD *)v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  v25 = a1 + v22;
  v26 = a2 + v22;
  *(_DWORD *)v25 = *(_DWORD *)v26;
  *(_BYTE *)(v25 + 4) = *(_BYTE *)(v26 + 4);
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t assignWithTake for WebEmbedLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  if (*(_QWORD *)(a1 + v11 + 16))
  {
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      *(_WORD *)v12 = *(_WORD *)v13;
      *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
      *(_QWORD *)(v12 + 16) = v14;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
      *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v13 + 64);
      *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
      *(_QWORD *)(v12 + 64) = v15;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
      v16 = *(_QWORD *)(v13 + 96);
      *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
      *(_QWORD *)(v12 + 96) = v16;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
      *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
      *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D57E17B8(v12);
  }
  v17 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(v12 + 112) = v17;
  *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
  v18 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(v12 + 48) = v18;
  v19 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(v12 + 80) = v19;
  v20 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v20;
LABEL_6:
  v21 = a3[7];
  v22 = a1 + v21;
  v23 = a2 + v21;
  if (*(_QWORD *)(a1 + v21 + 16) != 1)
  {
    v24 = *(_QWORD *)(v23 + 16);
    if (v24 != 1)
    {
      *(_BYTE *)v22 = *(_BYTE *)v23;
      *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
      *(_QWORD *)(v22 + 16) = v24;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D57D9100(v22);
  }
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_QWORD *)(v22 + 16) = *(_QWORD *)(v23 + 16);
LABEL_11:
  v25 = a3[8];
  v26 = a3[9];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_DWORD *)v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  v29 = a1 + v26;
  v30 = a2 + v26;
  *(_DWORD *)v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  v31 = a3[10];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (uint64_t *)(a2 + v31);
  v35 = *v33;
  v34 = v33[1];
  *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WebEmbedLoadEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5881A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 40) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for WebEmbedLoadEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5881B54(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 40) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5881BFC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WebEmbedLoadEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D5881CF4 + 4 * byte_1D5ABCDEC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D5881D28 + 4 * byte_1D5ABCDE7[v4]))();
}

uint64_t sub_1D5881D28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5881D30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5881D38);
  return result;
}

uint64_t sub_1D5881D44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5881D4CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D5881D50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5881D58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WebEmbedLoadEvent.Model.CodingKeys()
{
  return &type metadata for WebEmbedLoadEvent.Model.CodingKeys;
}

unint64_t sub_1D5881D78()
{
  unint64_t result;

  result = qword_1EFF4A518;
  if (!qword_1EFF4A518)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABD004, &type metadata for WebEmbedLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A518);
  }
  return result;
}

unint64_t sub_1D5881DC0()
{
  unint64_t result;

  result = qword_1EFF4A520;
  if (!qword_1EFF4A520)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABCF74, &type metadata for WebEmbedLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A520);
  }
  return result;
}

unint64_t sub_1D5881E08()
{
  unint64_t result;

  result = qword_1EFF4A528;
  if (!qword_1EFF4A528)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABCF9C, &type metadata for WebEmbedLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A528);
  }
  return result;
}

uint64_t sub_1D5881E4C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AECA50 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AEDC30 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6465626D45626577 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t Tracker.realtimeSubmit<A>(_:submitTime:contentType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5882188(a1, a2, a3, a4, a5, (void (*)(uint64_t, unint64_t, uint64_t, _QWORD))MEMORY[0x1E0CF8580], MEMORY[0x1E0CF85C8], (void (*)(uint64_t, unint64_t))MEMORY[0x1E0CF8590]);
}

uint64_t AccessTracker.realtimeSubmit<A>(_:submitTime:contentType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5882188(a1, a2, a3, a4, a5, (void (*)(uint64_t, unint64_t, uint64_t, _QWORD))MEMORY[0x1E0CF8090], (void (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))MEMORY[0x1E0CF80B0], (void (*)(uint64_t, unint64_t))MEMORY[0x1E0CF8098]);
}

uint64_t sub_1D5882188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, unint64_t, uint64_t, _QWORD), void (*a7)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t), void (*a8)(uint64_t, unint64_t))
{
  sub_1D5AADA04();
  sub_1D5AAE898();
  swift_bridgeObjectRelease();
  a6(0x656D69746C616572, 0xE90000000000002DLL, a3, 0);
  a7(a1, a2, 0, 0, a4, a5);
  a8(0x656D69746C616572, 0xE90000000000002DLL);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5882270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _BYTE v8[16];

  v0 = sub_1D5AAD884();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1D5AAD878();
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(_BYTE *, _QWORD))(v6 + 104))(&v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB57E8]);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB5800], v0);
  v8[15] = 0;
  sub_1D57A0338(0, (unint64_t *)&qword_1ED9C6F60);
  swift_allocObject();
  result = sub_1D5AAD8D8();
  qword_1ED9C6F50 = result;
  return result;
}

uint64_t static Settings.Analytics.Debugging.disableAnalytics.getter()
{
  return sub_1D57A73FC(&qword_1ED9CCCD0);
}

uint64_t Settings.Analytics.Debugging.Jitter.__allocating_init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v5 = sub_1D5AAD878();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a4, v5);
  v9 = sub_1D5AAD824();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

uint64_t static Settings.Analytics.Debugging.jitterOverrides.getter()
{
  return sub_1D57A73FC(&qword_1ED9CD738);
}

uint64_t sub_1D58824A8(uint64_t a1)
{
  return sub_1D57A51C4(a1, 0, 0xD000000000000030, 0x80000001D5AEDEE0, &qword_1ED9D1440);
}

uint64_t static Settings.Analytics.Debugging.debugHeartbeat.getter()
{
  return sub_1D57A73FC(&qword_1ED9D1388);
}

uint64_t sub_1D58824EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_1D5AAD878();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D5AAD884();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D5AAE820();
  *v7 = sub_1D5AAE820();
  v7[1] = v8;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  v10[0] = 0;
  v10[1] = 0xE000000000000000;
  sub_1D57A0338(0, &qword_1ED9C67B8);
  swift_allocObject();
  result = sub_1D5AAD8D8();
  qword_1EFF4A530 = result;
  return result;
}

uint64_t static Settings.Analytics.External.localServerIP.getter()
{
  return sub_1D57A73FC(&qword_1EFF47060);
}

uint64_t sub_1D5882670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[4];
  uint64_t v14;
  uint64_t v15;

  v0 = sub_1D5AAD878();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D5AAD884();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D57A0338(0, &qword_1EFF4A578);
  v13[3] = v8;
  v9 = sub_1D5AAE820();
  v13[1] = v10;
  v13[2] = v9;
  v15 = 0x404E000000000000;
  *v7 = sub_1D5AAE820();
  v7[1] = v11;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  sub_1D57C5618(0, &qword_1EFF4A580, &qword_1EFF4A588);
  sub_1D5883964(0, &qword_1EFF4A588);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1D5ABA5C0;
  v14 = 0x3FF0000000000000;
  sub_1D5AAD890();
  v14 = 0x4014000000000000;
  sub_1D5AAD890();
  v14 = 0x4024000000000000;
  sub_1D5AAD890();
  v14 = 0x404E000000000000;
  sub_1D5AAD890();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  result = sub_1D5AAD8A8();
  qword_1EFF4A538 = result;
  return result;
}

uint64_t static Settings.Analytics.Identifiers.adIdentifierRotation.getter()
{
  return sub_1D57A73FC(qword_1EFF47068);
}

uint64_t static Settings.Analytics.Instrumentation.ads.getter()
{
  return sub_1D57A73FC(&qword_1ED9CCCB0);
}

uint64_t Settings.Analytics.SamplingRate.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1D5AAEC4C();
  result = swift_bridgeObjectRelease();
  v4 = 6;
  if (v2 < 6)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t Settings.Analytics.SamplingRate.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58829DC + 4 * byte_1D5ABD0A0[*v0]))(0x746C7561666564, 0xE700000000000000);
}

uint64_t sub_1D58829DC()
{
  return 1869768058;
}

uint64_t sub_1D58829EC()
{
  return 0x694679746E657774;
}

uint64_t sub_1D5882A0C()
{
  return 0x7974666966;
}

uint64_t sub_1D5882A20()
{
  return 0x4679746E65766573;
}

uint64_t sub_1D5882A40()
{
  return 0x72646E7548656E6FLL;
}

void sub_1D5882A5C(char *a1)
{
  sub_1D5A3DF1C(*a1);
}

void sub_1D5882A68()
{
  char *v0;

  sub_1D5A80858(*v0);
}

void sub_1D5882A70()
{
  __asm { BR              X10 }
}

uint64_t sub_1D5882AAC()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5882B40(uint64_t a1)
{
  char *v1;

  sub_1D5AA8D30(a1, *v1);
}

uint64_t sub_1D5882B48@<X0>(char *a1@<X8>)
{
  return Settings.Analytics.SamplingRate.init(rawValue:)(a1);
}

uint64_t sub_1D5882B54()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D5882B84 + 4 * byte_1D5ABD0AC[*v0]))();
}

void sub_1D5882B84(_QWORD *a1@<X8>)
{
  *a1 = 1869768058;
  a1[1] = 0xE400000000000000;
}

void sub_1D5882B98(_QWORD *a1@<X8>)
{
  *a1 = 0x694679746E657774;
  a1[1] = 0xEA00000000006576;
}

void sub_1D5882BBC(_QWORD *a1@<X8>)
{
  *a1 = 0x7974666966;
  a1[1] = 0xE500000000000000;
}

void sub_1D5882BD4(_QWORD *a1@<X8>)
{
  *a1 = 0x4679746E65766573;
  a1[1] = 0xEB00000000657669;
}

void sub_1D5882BF8(_QWORD *a1@<X8>)
{
  *a1 = 0x72646E7548656E6FLL;
  a1[1] = 0xEA00000000006465;
}

uint64_t sub_1D5882C18()
{
  sub_1D5883898();
  return sub_1D5AAE910();
}

uint64_t sub_1D5882C58()
{
  sub_1D5883898();
  return sub_1D5AAE904();
}

uint64_t sub_1D5882CA0()
{
  sub_1D5883898();
  return sub_1D5AAE8F8();
}

uint64_t sub_1D5882CE0(uint64_t a1)
{
  return sub_1D57A01E4(a1, 0xD00000000000003ALL, 0x80000001D5AEDE70, &qword_1EFF4A540);
}

uint64_t static Settings.Analytics.Sports.disableHeadlineExposureTracking.getter()
{
  return sub_1D57A73FC(&qword_1EFF47078);
}

uint64_t sub_1D5882D20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;

  v0 = sub_1D5AAD884();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D5AAD878();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57CC1A4(0, &qword_1ED9D1130, (void (*)(void))sub_1D58838DC);
  v10 = v8;
  v17 = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57E8], v4);
  sub_1D57C5618(0, qword_1ED9D1350, &qword_1ED9D1128);
  sub_1D5883964(0, &qword_1ED9D1128);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1D5ABD080;
  v16 = 0;
  sub_1D5AAD890();
  v15 = 1;
  sub_1D5AAD890();
  v14 = 2;
  sub_1D5AAD890();
  v13 = 3;
  sub_1D5AAD890();
  v12 = 4;
  sub_1D5AAD890();
  v11 = 5;
  sub_1D5AAD890();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB5800], v0);
  sub_1D5883920();
  result = sub_1D5AAD8A8();
  qword_1ED9D1120 = result;
  return result;
}

uint64_t static Settings.Analytics.Sports.syncEventSamplingRate.getter()
{
  return sub_1D57A73FC(&qword_1ED9D10C0);
}

uint64_t Settings.Analytics.Sports.NoiseRate.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1D5AAEC4C();
  result = swift_bridgeObjectRelease();
  v4 = 5;
  if (v2 < 5)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t Settings.Analytics.Sports.NoiseRate.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58830AC + 4 * byte_1D5ABD0B2[*v0]))(0x746C7561666564, 0xE700000000000000);
}

uint64_t sub_1D58830AC()
{
  return 1869768058;
}

uint64_t sub_1D58830BC()
{
  return 0x7974666966;
}

uint64_t sub_1D58830D0()
{
  return 0x72646E7548656E6FLL;
}

void sub_1D58830F8(char *a1)
{
  sub_1D5A3DDC8(*a1);
}

void sub_1D5883104()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5883150()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D58831C4()
{
  __asm { BR              X10 }
}

uint64_t sub_1D5883200()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5883260()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D58832A8()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D588331C@<X0>(char *a1@<X8>)
{
  return Settings.Analytics.Sports.NoiseRate.init(rawValue:)(a1);
}

uint64_t sub_1D5883328()
{
  sub_1D57CC6B0();
  return sub_1D5AAE910();
}

uint64_t sub_1D5883368()
{
  sub_1D57CC6B0();
  return sub_1D5AAE904();
}

uint64_t static Settings.Analytics.Sports.headlineExposureNoiseRate.getter()
{
  return sub_1D57A73FC(&qword_1ED9CF068);
}

uint64_t sub_1D58833CC(uint64_t a1)
{
  return sub_1D57A51C4(a1, 1, 0xD000000000000034, 0x80000001D5AEDDB0, &qword_1EFF4A548);
}

uint64_t static Settings.Analytics.Debugging.Jitter.enablement.getter()
{
  return sub_1D57A73FC(&qword_1EFF47080);
}

uint64_t sub_1D5883410()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  _QWORD v5[4];

  v0 = sub_1D5AAD878();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57A0338(0, &qword_1EFF4A578);
  v5[3] = 0xC082C00000000000;
  v5[1] = 0;
  v5[2] = 0xFFEFFFFFFFFFFFFFLL;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  result = sub_1D5AAD8C0();
  qword_1EFF4A550 = result;
  return result;
}

uint64_t static Settings.Analytics.Debugging.Jitter.lowerBound.getter()
{
  return sub_1D57A73FC(&qword_1EFF47088);
}

uint64_t sub_1D5883520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  _QWORD v5[4];

  v0 = sub_1D5AAD878();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57A0338(0, &qword_1EFF4A578);
  v5[2] = 0;
  v5[3] = 0x4082C00000000000;
  v5[1] = 0x7FEFFFFFFFFFFFFFLL;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  result = sub_1D5AAD8C0();
  qword_1EFF4A558 = result;
  return result;
}

uint64_t static Settings.Analytics.Debugging.Jitter.upperBound.getter()
{
  return sub_1D57A73FC(&qword_1EFF47090);
}

uint64_t Settings.Analytics.Debugging.Jitter.init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v5 = sub_1D5AAD878();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v5);
  v8 = sub_1D5AAD824();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v8;
}

uint64_t Settings.Analytics.Debugging.Jitter.__deallocating_deinit()
{
  _s11TeaSettings0B0C13NewsAnalyticsE0D0V9DebuggingV6JitterCfd_0();
  return swift_deallocClassInstance();
}

unint64_t sub_1D5883710()
{
  unint64_t result;

  result = qword_1ED9D10B8;
  if (!qword_1ED9D10B8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for Settings.Analytics.SamplingRate, &type metadata for Settings.Analytics.SamplingRate);
    atomic_store(result, (unint64_t *)&qword_1ED9D10B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for Settings.Analytics()
{
  return &type metadata for Settings.Analytics;
}

ValueMetadata *type metadata accessor for Settings.Analytics.Debugging()
{
  return &type metadata for Settings.Analytics.Debugging;
}

ValueMetadata *type metadata accessor for Settings.Analytics.External()
{
  return &type metadata for Settings.Analytics.External;
}

ValueMetadata *type metadata accessor for Settings.Analytics.Identifiers()
{
  return &type metadata for Settings.Analytics.Identifiers;
}

ValueMetadata *type metadata accessor for Settings.Analytics.Instrumentation()
{
  return &type metadata for Settings.Analytics.Instrumentation;
}

uint64_t _s9AnalyticsV12SamplingRateOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D58837F0 + 4 * byte_1D5ABD0D0[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D5883824 + 4 * byte_1D5ABD0CB[v4]))();
}

uint64_t sub_1D5883824(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D588382C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5883834);
  return result;
}

uint64_t sub_1D5883840(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5883848);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D588384C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5883854(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Settings.Analytics.SamplingRate()
{
  return &type metadata for Settings.Analytics.SamplingRate;
}

ValueMetadata *type metadata accessor for Settings.Analytics.Sports()
{
  return &type metadata for Settings.Analytics.Sports;
}

ValueMetadata *type metadata accessor for Settings.Analytics.Sports.NoiseRate()
{
  return &type metadata for Settings.Analytics.Sports.NoiseRate;
}

uint64_t sub_1D5883890()
{
  return type metadata accessor for Settings.Analytics.Debugging.Jitter();
}

unint64_t sub_1D5883898()
{
  unint64_t result;

  result = qword_1ED9D1108;
  if (!qword_1ED9D1108)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for Settings.Analytics.SamplingRate, &type metadata for Settings.Analytics.SamplingRate);
    atomic_store(result, (unint64_t *)&qword_1ED9D1108);
  }
  return result;
}

unint64_t sub_1D58838DC()
{
  unint64_t result;

  result = qword_1ED9D1118;
  if (!qword_1ED9D1118)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for Settings.Analytics.SamplingRate, &type metadata for Settings.Analytics.SamplingRate);
    atomic_store(result, (unint64_t *)&qword_1ED9D1118);
  }
  return result;
}

unint64_t sub_1D5883920()
{
  unint64_t result;

  result = qword_1ED9D1110;
  if (!qword_1ED9D1110)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for Settings.Analytics.SamplingRate, &type metadata for Settings.Analytics.SamplingRate);
    atomic_store(result, (unint64_t *)&qword_1ED9D1110);
  }
  return result;
}

void sub_1D5883964(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1D5AAD89C();
    if (!v4)
      atomic_store(v3, a2);
  }
}

NewsAnalytics::StoreKitError_optional __swiftcall StoreKitError.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsAnalytics::StoreKitError_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1D5AAEE08();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 5;
  switch(v3)
  {
    case 0:
      goto LABEL_7;
    case 1:
      v5 = 1;
      goto LABEL_7;
    case 2:
      v5 = 2;
      goto LABEL_7;
    case 3:
      v5 = 3;
      goto LABEL_7;
    case 4:
      v5 = 4;
LABEL_7:
      v6 = v5;
      break;
    case 5:
      break;
    case 6:
      v6 = 6;
      break;
    case 7:
      v6 = 7;
      break;
    case 8:
      v6 = 8;
      break;
    case 9:
      v6 = 9;
      break;
    case 10:
      v6 = 10;
      break;
    case 11:
      v6 = 11;
      break;
    case 12:
      v6 = 12;
      break;
    case 13:
      v6 = 13;
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    case 20:
      v6 = 20;
      break;
    case 21:
      v6 = 21;
      break;
    case 22:
      v6 = 22;
      break;
    default:
      v6 = 23;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t StoreKitError.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5883B40 + 4 * byte_1D5ABD383[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5883B40()
{
  return 0x6E49746E65696C63;
}

unint64_t sub_1D5883B64()
{
  return 0xD000000000000010;
}

uint64_t sub_1D5883D04()
{
  return 0x5479616C7265766FLL;
}

unint64_t sub_1D5883D28()
{
  return 0xD000000000000013;
}

uint64_t sub_1D5883D40()
{
  return 0x636E614361776973;
}

void sub_1D5883D64()
{
  JUMPOUT(0x1D5883D7CLL);
}

uint64_t sub_1D5883D88(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A3C844(*a1, *a2);
}

unint64_t sub_1D5883D98()
{
  unint64_t result;

  result = qword_1EFF4A590;
  if (!qword_1EFF4A590)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for StoreKitError, &type metadata for StoreKitError);
    atomic_store(result, (unint64_t *)&qword_1EFF4A590);
  }
  return result;
}

uint64_t sub_1D5883DDC()
{
  sub_1D5AAEE80();
  StoreKitError.rawValue.getter();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5883E40()
{
  StoreKitError.rawValue.getter();
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5883E90()
{
  sub_1D5AAEE80();
  StoreKitError.rawValue.getter();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::StoreKitError_optional sub_1D5883EF0(Swift::String *a1)
{
  return StoreKitError.init(rawValue:)(*a1);
}

uint64_t sub_1D5883EFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = StoreKitError.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D5883F20()
{
  sub_1D5884124();
  return sub_1D5AAE928();
}

uint64_t sub_1D5883F7C()
{
  sub_1D5884124();
  return sub_1D5AAE91C();
}

uint64_t getEnumTagSinglePayload for FeedType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEA)
    goto LABEL_17;
  if (a2 + 22 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 22) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 22;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 22;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 22;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x17;
  v8 = v6 - 23;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StoreKitError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 22 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 22) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE9)
    return ((uint64_t (*)(void))((char *)&loc_1D58840A4 + 4 * byte_1D5ABD39F[v4]))();
  *a1 = a2 + 22;
  return ((uint64_t (*)(void))((char *)sub_1D58840D8 + 4 * byte_1D5ABD39A[v4]))();
}

uint64_t sub_1D58840D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58840E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58840E8);
  return result;
}

uint64_t sub_1D58840F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58840FCLL);
  *(_BYTE *)result = a2 + 22;
  return result;
}

uint64_t sub_1D5884100(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5884108(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StoreKitError()
{
  return &type metadata for StoreKitError;
}

unint64_t sub_1D5884124()
{
  unint64_t result;

  result = qword_1EFF4A598;
  if (!qword_1EFF4A598)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for StoreKitError, &type metadata for StoreKitError);
    atomic_store(result, (unint64_t *)&qword_1EFF4A598);
  }
  return result;
}

uint64_t sub_1D5884168(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4A5A0, MEMORY[0x1E0CF8078]);
}

uint64_t static ArticleLinkTapEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47098, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4A5A0, a1);
}

uint64_t sub_1D58841A8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4A5B8, MEMORY[0x1E0CF8380]);
}

uint64_t static ArticleLinkTapEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF470A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4A5B8, a1);
}

uint64_t ArticleLinkTapEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t ArticleLinkTapEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ArticleLinkTapEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleLinkTapEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLinkTapEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for ArticleLinkTapEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4A640);
}

uint64_t ArticleLinkTapEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLinkTapEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleLinkTapEvent.articleData.modify())()
{
  type metadata accessor for ArticleLinkTapEvent(0);
  return nullsub_1;
}

uint64_t ArticleLinkTapEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLinkTapEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleLinkTapEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLinkTapEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleLinkTapEvent.viewData.modify())()
{
  type metadata accessor for ArticleLinkTapEvent(0);
  return nullsub_1;
}

uint64_t ArticleLinkTapEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLinkTapEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleLinkTapEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLinkTapEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleLinkTapEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for ArticleLinkTapEvent(0);
  return nullsub_1;
}

uint64_t ArticleLinkTapEvent.urlData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLinkTapEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D58845A0()
{
  unint64_t result;

  result = qword_1ED9CEEC0;
  if (!qword_1ED9CEEC0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for URLData, &type metadata for URLData);
    atomic_store(result, (unint64_t *)&qword_1ED9CEEC0);
  }
  return result;
}

unint64_t sub_1D58845E4()
{
  unint64_t result;

  result = qword_1ED9CEEB8;
  if (!qword_1ED9CEEB8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for URLData, &type metadata for URLData);
    atomic_store(result, (unint64_t *)&qword_1ED9CEEB8);
  }
  return result;
}

uint64_t ArticleLinkTapEvent.urlData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleLinkTapEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleLinkTapEvent.urlData.modify())()
{
  type metadata accessor for ArticleLinkTapEvent(0);
  return nullsub_1;
}

uint64_t ArticleLinkTapEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ArticleLinkTapEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  v8 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v2, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
}

uint64_t ArticleLinkTapEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ArticleLinkTapEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for ArticleLinkTapEvent.Model(0) + 20);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t type metadata accessor for ArticleLinkTapEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4A6E0);
}

uint64_t ArticleLinkTapEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleLinkTapEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t ArticleLinkTapEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for ArticleLinkTapEvent.Model(0) + 28));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleLinkTapEvent.Model.urlData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ArticleLinkTapEvent.Model(0) + 32));
  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 ArticleLinkTapEvent.Model.init(eventData:articleData:viewData:userBundleSubscriptionContextData:urlData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, __n128 *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 *v21;
  __n128 result;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  __n128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[23];

  v35 = a2[6];
  *(_OWORD *)v36 = a2[7];
  *(_QWORD *)&v36[15] = *(_QWORD *)((char *)a2 + 127);
  v31 = a2[2];
  v32 = a2[3];
  v33 = a2[4];
  v34 = a2[5];
  v29 = *a2;
  v30 = a2[1];
  v8 = *a3;
  v9 = a3[1];
  v10 = *((_WORD *)a3 + 8);
  v11 = *a4;
  v12 = *((_QWORD *)a4 + 1);
  v13 = *((_QWORD *)a4 + 2);
  v14 = a4[24];
  v15 = a4[25];
  v24 = *((_QWORD *)a4 + 5);
  v25 = *((_QWORD *)a4 + 4);
  v23 = a4[48];
  v28 = *a5;
  v26 = a5[1].n128_u64[1];
  v27 = a5[1].n128_u64[0];
  v16 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a6, a1, v16);
  v17 = (int *)type metadata accessor for ArticleLinkTapEvent.Model(0);
  v18 = a6 + v17[5];
  *(_OWORD *)(v18 + 96) = v35;
  *(_OWORD *)(v18 + 112) = *(_OWORD *)v36;
  *(_QWORD *)(v18 + 127) = *(_QWORD *)&v36[15];
  *(_OWORD *)(v18 + 32) = v31;
  *(_OWORD *)(v18 + 48) = v32;
  *(_OWORD *)(v18 + 64) = v33;
  *(_OWORD *)(v18 + 80) = v34;
  *(_OWORD *)v18 = v29;
  *(_OWORD *)(v18 + 16) = v30;
  v19 = a6 + v17[6];
  *(_QWORD *)v19 = v8;
  *(_QWORD *)(v19 + 8) = v9;
  *(_WORD *)(v19 + 16) = v10;
  v20 = a6 + v17[7];
  *(_BYTE *)v20 = v11;
  *(_QWORD *)(v20 + 8) = v12;
  *(_QWORD *)(v20 + 16) = v13;
  *(_BYTE *)(v20 + 24) = v14;
  *(_BYTE *)(v20 + 25) = v15;
  *(_QWORD *)(v20 + 32) = v25;
  *(_QWORD *)(v20 + 40) = v24;
  *(_BYTE *)(v20 + 48) = v23;
  v21 = (__n128 *)(a6 + v17[8]);
  result = v28;
  *v21 = v28;
  v21[1].n128_u64[0] = v27;
  v21[1].n128_u64[1] = v26;
  return result;
}

uint64_t sub_1D5884B38()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5884B6C + 4 * byte_1D5ABD510[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5884B6C()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D5884B8C()
{
  return 0x6174614477656976;
}

unint64_t sub_1D5884BA4()
{
  return 0xD000000000000021;
}

uint64_t sub_1D5884BC0()
{
  return 0x617461446C7275;
}

uint64_t sub_1D5884BD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5887144(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5884BFC()
{
  sub_1D5884EEC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5884C24()
{
  sub_1D5884EEC();
  return sub_1D5AAEEE0();
}

uint64_t ArticleLinkTapEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  _BYTE v27[32];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _BYTE v33[23];
  char v34;

  v3 = v1;
  sub_1D58854B4(0, &qword_1EFF4A5D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5884EEC();
  sub_1D5AAEEC8();
  v34 = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for ArticleLinkTapEvent.Model(0);
    v11 = v3 + v10[5];
    v12 = *(_OWORD *)(v11 + 112);
    v32 = *(_OWORD *)(v11 + 96);
    *(_OWORD *)v33 = v12;
    *(_QWORD *)&v33[15] = *(_QWORD *)(v11 + 127);
    v13 = *(_OWORD *)(v11 + 48);
    v28 = *(_OWORD *)(v11 + 32);
    v29 = v13;
    v14 = *(_OWORD *)(v11 + 80);
    v30 = *(_OWORD *)(v11 + 64);
    v31 = v14;
    v15 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)v27 = *(_OWORD *)v11;
    *(_OWORD *)&v27[16] = v15;
    v26 = 1;
    sub_1D57CB940();
    sub_1D5AAED6C();
    v16 = v3 + v10[6];
    v17 = *(_WORD *)(v16 + 16);
    *(_OWORD *)v27 = *(_OWORD *)v16;
    *(_WORD *)&v27[16] = v17;
    v26 = 2;
    sub_1D57C62A4();
    sub_1D5AAED18();
    v18 = v3 + v10[7];
    v19 = *(_BYTE *)(v18 + 24);
    v20 = *(_BYTE *)(v18 + 25);
    v21 = *(_BYTE *)(v18 + 48);
    v27[0] = *(_BYTE *)v18;
    *(_OWORD *)&v27[8] = *(_OWORD *)(v18 + 8);
    v27[24] = v19;
    v27[25] = v20;
    v28 = *(_OWORD *)(v18 + 32);
    LOBYTE(v29) = v21;
    v26 = 3;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v22 = v3 + v10[8];
    v23 = *(_QWORD *)(v22 + 8);
    *(_QWORD *)v27 = *(_QWORD *)v22;
    *(_QWORD *)&v27[8] = v23;
    *(_OWORD *)&v27[16] = *(_OWORD *)(v22 + 16);
    v26 = 4;
    sub_1D58845E4();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5884EEC()
{
  unint64_t result;

  result = qword_1EFF4A5D8;
  if (!qword_1EFF4A5D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABD744, &type metadata for ArticleLinkTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A5D8);
  }
  return result;
}

uint64_t ArticleLinkTapEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int16 v19;
  char *v20;
  char v21;
  char v22;
  char v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  _OWORD v34[3];
  char v35;
  char v36;
  char v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _OWORD v45[2];
  _QWORD *v46;

  v29 = a2;
  v3 = sub_1D5AADF98();
  v30 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v32 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58854B4(0, &qword_1EFF4A5E0, MEMORY[0x1E0DED048]);
  v31 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - v7;
  v9 = (int *)type metadata accessor for ArticleLinkTapEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5884EEC();
  v33 = v8;
  v12 = (uint64_t)v46;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = v6;
  v13 = v30;
  v46 = a1;
  LOBYTE(v38) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v32, v3);
  v37 = 1;
  sub_1D57CB8FC();
  sub_1D5AAECD0();
  v14 = &v11[v9[5]];
  v15 = v45[0];
  *((_OWORD *)v14 + 6) = v44;
  *((_OWORD *)v14 + 7) = v15;
  *(_QWORD *)(v14 + 127) = *(_QWORD *)((char *)v45 + 15);
  v16 = v41;
  *((_OWORD *)v14 + 2) = v40;
  *((_OWORD *)v14 + 3) = v16;
  v17 = v43;
  *((_OWORD *)v14 + 4) = v42;
  *((_OWORD *)v14 + 5) = v17;
  v18 = v39;
  *(_OWORD *)v14 = v38;
  *((_OWORD *)v14 + 1) = v18;
  v36 = 2;
  sub_1D57C6260();
  sub_1D5AAEC7C();
  v19 = v34[1];
  v20 = &v11[v9[6]];
  *(_OWORD *)v20 = v34[0];
  *((_WORD *)v20 + 8) = v19;
  v36 = 3;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v21 = BYTE8(v34[1]);
  v22 = BYTE9(v34[1]);
  v23 = v35;
  v24 = &v11[v9[7]];
  *v24 = v34[0];
  *(_OWORD *)(v24 + 8) = *(_OWORD *)((char *)v34 + 8);
  v24[24] = v21;
  v24[25] = v22;
  *((_OWORD *)v24 + 2) = v34[2];
  v24[48] = v23;
  v36 = 4;
  sub_1D58845A0();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v33, v31);
  v25 = *((_QWORD *)&v34[0] + 1);
  v26 = &v11[v9[8]];
  *(_QWORD *)v26 = *(_QWORD *)&v34[0];
  *((_QWORD *)v26 + 1) = v25;
  *((_OWORD *)v26 + 1) = v34[1];
  sub_1D5885510((uint64_t)v11, v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  return sub_1D5885554((uint64_t)v11);
}

void sub_1D58854B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5884EEC();
    v7 = a3(a1, &type metadata for ArticleLinkTapEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5885510(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArticleLinkTapEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5885554(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArticleLinkTapEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5885590@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleLinkTapEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58855A4(_QWORD *a1)
{
  return ArticleLinkTapEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58855B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47098, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4A5A0, a1);
}

uint64_t sub_1D58855DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF470A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4A5B8, a1);
}

uint64_t sub_1D5885600@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  v9 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v4, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleLinkTapEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for ArticleLinkTapEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t initializeWithCopy for ArticleLinkTapEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for ArticleLinkTapEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for ArticleLinkTapEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for ArticleLinkTapEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleLinkTapEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58860B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
          v8 = v16;
          v12 = *(_QWORD *)(v16 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ArticleLinkTapEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5886220(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
          v10 = v18;
          v14 = *(_QWORD *)(v18 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5886388()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9CEAB0, (void (*)(void))sub_1D58845A0, (void (*)(void))sub_1D58845E4);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleLinkTapEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v12;
    v10[32] = v11[32];
    v13 = *((_QWORD *)v11 + 6);
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 6) = v13;
    v10[56] = v11[56];
    v10[57] = v11[57];
    v14 = *((_QWORD *)v11 + 9);
    *((_QWORD *)v10 + 8) = *((_QWORD *)v11 + 8);
    *((_QWORD *)v10 + 9) = v14;
    v10[80] = v11[80];
    *(_OWORD *)(v10 + 88) = *(_OWORD *)(v11 + 88);
    *((_QWORD *)v10 + 13) = *((_QWORD *)v11 + 13);
    v10[112] = v11[112];
    *((_QWORD *)v10 + 15) = *((_QWORD *)v11 + 15);
    *((_DWORD *)v10 + 32) = *((_DWORD *)v11 + 32);
    v10[132] = v11[132];
    *(_WORD *)(v10 + 133) = *(_WORD *)(v11 + 133);
    v15 = (char *)a1 + v9;
    v16 = (char *)a2 + v9;
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    *((_WORD *)v15 + 8) = *((_WORD *)v16 + 8);
    v18 = a3[7];
    v19 = a3[8];
    v20 = (char *)a1 + v18;
    v21 = (char *)a2 + v18;
    *v20 = *v21;
    v22 = *((_QWORD *)v21 + 2);
    *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
    *((_QWORD *)v20 + 2) = v22;
    v20[24] = v21[24];
    v20[25] = v21[25];
    v23 = *((_QWORD *)v21 + 5);
    *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
    *((_QWORD *)v20 + 5) = v23;
    v20[48] = v21[48];
    v24 = (uint64_t *)((char *)a1 + v19);
    v25 = (uint64_t *)((char *)a2 + v19);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = v25[3];
    v24[2] = v25[2];
    v24[3] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ArticleLinkTapEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArticleLinkTapEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  v12 = *(_QWORD *)(v10 + 48);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 48) = v12;
  *(_BYTE *)(v9 + 56) = *(_BYTE *)(v10 + 56);
  *(_BYTE *)(v9 + 57) = *(_BYTE *)(v10 + 57);
  v13 = *(_QWORD *)(v10 + 72);
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v9 + 72) = v13;
  *(_BYTE *)(v9 + 80) = *(_BYTE *)(v10 + 80);
  *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
  *(_QWORD *)(v9 + 104) = *(_QWORD *)(v10 + 104);
  *(_BYTE *)(v9 + 112) = *(_BYTE *)(v10 + 112);
  *(_QWORD *)(v9 + 120) = *(_QWORD *)(v10 + 120);
  *(_DWORD *)(v9 + 128) = *(_DWORD *)(v10 + 128);
  *(_BYTE *)(v9 + 132) = *(_BYTE *)(v10 + 132);
  *(_WORD *)(v9 + 133) = *(_WORD *)(v10 + 133);
  v14 = a1 + v8;
  v15 = a2 + v8;
  v16 = *(_QWORD *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_QWORD *)(v14 + 8) = v16;
  *(_WORD *)(v14 + 16) = *(_WORD *)(v15 + 16);
  v17 = a3[7];
  v18 = a3[8];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_BYTE *)v19 = *(_BYTE *)v20;
  v21 = *(_QWORD *)(v20 + 16);
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  *(_QWORD *)(v19 + 16) = v21;
  *(_BYTE *)(v19 + 24) = *(_BYTE *)(v20 + 24);
  *(_BYTE *)(v19 + 25) = *(_BYTE *)(v20 + 25);
  v22 = *(_QWORD *)(v20 + 40);
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  *(_QWORD *)(v19 + 40) = v22;
  *(_BYTE *)(v19 + 48) = *(_BYTE *)(v20 + 48);
  v23 = (_QWORD *)(a1 + v18);
  v24 = (_QWORD *)(a2 + v18);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = v24[3];
  v23[2] = v24[2];
  v23[3] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArticleLinkTapEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(a2 + v7 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  v10 = *(_QWORD *)(v9 + 48);
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_QWORD *)(v8 + 48) = v10;
  *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  *(_QWORD *)(v8 + 72) = v11;
  *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
  *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
  *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
  *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
  *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(a2 + v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_BYTE *)(v13 + 17) = *(_BYTE *)(v14 + 17);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_BYTE *)v16 = *(_BYTE *)(a2 + v15);
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(a2 + v15 + 8);
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(a2 + v15 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v16 + 24) = *(_BYTE *)(v17 + 24);
  *(_BYTE *)(v16 + 25) = *(_BYTE *)(v17 + 25);
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v16 + 48) = *(_BYTE *)(v17 + 48);
  v18 = a3[8];
  v19 = (_QWORD *)(a1 + v18);
  v20 = a2 + v18;
  *v19 = *(_QWORD *)(a2 + v18);
  v19[1] = *(_QWORD *)(a2 + v18 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19[2] = *(_QWORD *)(v20 + 16);
  v19[3] = *(_QWORD *)(v20 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ArticleLinkTapEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)(v9 + 127) = *(_QWORD *)(v10 + 127);
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  v12 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v12;
  v13 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v13;
  v14 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v14;
  v15 = a1 + v8;
  v16 = a2 + v8;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_WORD *)(v15 + 16) = *(_WORD *)(v16 + 16);
  v17 = a3[7];
  v18 = a3[8];
  v19 = a1 + v17;
  v20 = a2 + v17;
  v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
  *(_BYTE *)(v19 + 48) = *(_BYTE *)(v20 + 48);
  v22 = (_OWORD *)(a1 + v18);
  v23 = (_OWORD *)(a2 + v18);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  return a1;
}

uint64_t assignWithTake for ArticleLinkTapEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(a2 + v7 + 8);
  v10 = *(_QWORD *)(a2 + v7 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v11 = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = v11;
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_BYTE *)(v8 + 57) = *(_BYTE *)(v9 + 57);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  *(_BYTE *)(v8 + 130) = *(_BYTE *)(v9 + 130);
  *(_BYTE *)(v8 + 131) = *(_BYTE *)(v9 + 131);
  *(_BYTE *)(v8 + 132) = *(_BYTE *)(v9 + 132);
  *(_BYTE *)(v8 + 133) = *(_BYTE *)(v9 + 133);
  *(_BYTE *)(v8 + 134) = *(_BYTE *)(v9 + 134);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_BYTE *)v17 = *(_BYTE *)(a2 + v16);
  v19 = *(_QWORD *)(a2 + v16 + 16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)(v17 + 16) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 24) = *(_BYTE *)(v18 + 24);
  *(_BYTE *)(v17 + 25) = *(_BYTE *)(v18 + 25);
  v20 = *(_QWORD *)(v18 + 40);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 40) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 48) = *(_BYTE *)(v18 + 48);
  v21 = a3[8];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v25 = v23[3];
  v22[2] = v23[2];
  v22[3] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleLinkTapEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5886E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleLinkTapEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5886E94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_1D5886F10()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ArticleLinkTapEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D5886FEC + 4 * byte_1D5ABD51A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5887020 + 4 * byte_1D5ABD515[v4]))();
}

uint64_t sub_1D5887020(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5887028(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5887030);
  return result;
}

uint64_t sub_1D588703C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5887044);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5887048(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5887050(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleLinkTapEvent.Model.CodingKeys()
{
  return &type metadata for ArticleLinkTapEvent.Model.CodingKeys;
}

unint64_t sub_1D5887070()
{
  unint64_t result;

  result = qword_1EFF4A728;
  if (!qword_1EFF4A728)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABD71C, &type metadata for ArticleLinkTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A728);
  }
  return result;
}

unint64_t sub_1D58870B8()
{
  unint64_t result;

  result = qword_1EFF4A730;
  if (!qword_1EFF4A730)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABD68C, &type metadata for ArticleLinkTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A730);
  }
  return result;
}

unint64_t sub_1D5887100()
{
  unint64_t result;

  result = qword_1EFF4A738;
  if (!qword_1EFF4A738)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABD6B4, &type metadata for ArticleLinkTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A738);
  }
  return result;
}

uint64_t sub_1D5887144(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x617461446C7275 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

NewsAnalytics::GroupFormationReason_optional __swiftcall GroupFormationReason.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::GroupFormationReason_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t GroupFormationReason.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5887404 + 4 * byte_1D5ABD7A0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5887404()
{
  return 1869903201;
}

uint64_t sub_1D5887414()
{
  return 0x6C6C6F4664726168;
}

uint64_t sub_1D5887430()
{
  return 0x64657461727563;
}

uint64_t sub_1D5887444()
{
  return 1869048929;
}

void sub_1D5887454(char *a1)
{
  sub_1D5A39484(*a1);
}

unint64_t sub_1D5887464()
{
  unint64_t result;

  result = qword_1EFF4A740;
  if (!qword_1EFF4A740)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for GroupFormationReason, &type metadata for GroupFormationReason);
    atomic_store(result, (unint64_t *)&qword_1EFF4A740);
  }
  return result;
}

void sub_1D58874A8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D58874F4()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D588756C()
{
  __asm { BR              X10 }
}

uint64_t sub_1D58875A8()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D588760C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5887654()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::GroupFormationReason_optional sub_1D58876CC(Swift::String *a1)
{
  return GroupFormationReason.init(rawValue:)(*a1);
}

uint64_t sub_1D58876D8()
{
  sub_1D57A3B6C();
  return sub_1D5AAE928();
}

uint64_t UserEventHistoryEventCountsData.articleSeenEventCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t UserEventHistoryEventCountsData.articleSeenEventCount.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*UserEventHistoryEventCountsData.articleSeenEventCount.modify())()
{
  return nullsub_1;
}

uint64_t UserEventHistoryEventCountsData.articleVisitedEventCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t UserEventHistoryEventCountsData.articleVisitedEventCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*UserEventHistoryEventCountsData.articleVisitedEventCount.modify())()
{
  return nullsub_1;
}

uint64_t UserEventHistoryEventCountsData.articleReadEventCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t UserEventHistoryEventCountsData.articleReadEventCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*UserEventHistoryEventCountsData.articleReadEventCount.modify())()
{
  return nullsub_1;
}

uint64_t UserEventHistoryEventCountsData.articleLikedEventCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t UserEventHistoryEventCountsData.articleLikedEventCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*UserEventHistoryEventCountsData.articleLikedEventCount.modify())()
{
  return nullsub_1;
}

uint64_t UserEventHistoryEventCountsData.articleDislikedEventCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t UserEventHistoryEventCountsData.articleDislikedEventCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*UserEventHistoryEventCountsData.articleDislikedEventCount.modify())()
{
  return nullsub_1;
}

uint64_t UserEventHistoryEventCountsData.articleSharedEventCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t UserEventHistoryEventCountsData.articleSharedEventCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*UserEventHistoryEventCountsData.articleSharedEventCount.modify())()
{
  return nullsub_1;
}

uint64_t UserEventHistoryEventCountsData.articleSavedEventCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t UserEventHistoryEventCountsData.articleSavedEventCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = result;
  return result;
}

uint64_t (*UserEventHistoryEventCountsData.articleSavedEventCount.modify())()
{
  return nullsub_1;
}

uint64_t UserEventHistoryEventCountsData.feedViewEventCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t UserEventHistoryEventCountsData.feedViewEventCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = result;
  return result;
}

uint64_t (*UserEventHistoryEventCountsData.feedViewEventCount.modify())()
{
  return nullsub_1;
}

uint64_t UserEventHistoryEventCountsData.tagFollowedEventCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t UserEventHistoryEventCountsData.tagFollowedEventCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = result;
  return result;
}

uint64_t (*UserEventHistoryEventCountsData.tagFollowedEventCount.modify())()
{
  return nullsub_1;
}

uint64_t UserEventHistoryEventCountsData.tagUnfollowedEventCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t UserEventHistoryEventCountsData.tagUnfollowedEventCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = result;
  return result;
}

uint64_t (*UserEventHistoryEventCountsData.tagUnfollowedEventCount.modify())()
{
  return nullsub_1;
}

uint64_t UserEventHistoryEventCountsData.tagMutedEventCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t UserEventHistoryEventCountsData.tagMutedEventCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = result;
  return result;
}

uint64_t (*UserEventHistoryEventCountsData.tagMutedEventCount.modify())()
{
  return nullsub_1;
}

__n128 UserEventHistoryEventCountsData.init(articleSeenEventCount:articleVisitedEventCount:articleReadEventCount:articleLikedEventCount:articleDislikedEventCount:articleSharedEventCount:articleSavedEventCount:feedViewEventCount:tagFollowedEventCount:tagUnfollowedEventCount:tagMutedEventCount:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, __n128 *a9@<X8>, __n128 a10, unint64_t a11)
{
  __n128 result;

  result = a10;
  a9->n128_u64[0] = a1;
  a9->n128_u64[1] = a2;
  a9[1].n128_u64[0] = a3;
  a9[1].n128_u64[1] = a4;
  a9[2].n128_u64[0] = a5;
  a9[2].n128_u64[1] = a6;
  a9[3].n128_u64[0] = a7;
  a9[3].n128_u64[1] = a8;
  a9[4] = a10;
  a9[5].n128_u64[0] = a11;
  return result;
}

uint64_t sub_1D58878B8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D58878F0 + 4 * byte_1D5ABD8F0[a1]))(0xD000000000000015, 0x80000001D5AEE110);
}

uint64_t sub_1D58878F0(uint64_t a1)
{
  return a1 + 3;
}

uint64_t sub_1D5887990()
{
  unsigned __int8 *v0;

  return sub_1D58878B8(*v0);
}

uint64_t sub_1D5887998@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5888378(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58879BC()
{
  sub_1D5887CF8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58879E4()
{
  sub_1D5887CF8();
  return sub_1D5AAEEE0();
}

uint64_t UserEventHistoryEventCountsData.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[10];
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;

  sub_1D588802C(0, &qword_1ED9CEFB0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v14 - v6;
  v8 = v1[1];
  v14[8] = v1[2];
  v14[9] = v8;
  v9 = v1[3];
  v14[6] = v1[4];
  v14[7] = v9;
  v10 = v1[5];
  v14[4] = v1[6];
  v14[5] = v10;
  v11 = v1[7];
  v14[2] = v1[8];
  v14[3] = v11;
  v14[1] = v1[9];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5887CF8();
  sub_1D5AAEEC8();
  v26 = 0;
  v12 = v15;
  sub_1D5AAED84();
  if (!v12)
  {
    v25 = 1;
    sub_1D5AAED84();
    v24 = 2;
    sub_1D5AAED84();
    v15 = v5;
    v23 = 3;
    sub_1D5AAED84();
    v22 = 4;
    sub_1D5AAED84();
    v21 = 5;
    sub_1D5AAED84();
    v20 = 6;
    sub_1D5AAED84();
    v19 = 7;
    sub_1D5AAED84();
    v18 = 8;
    sub_1D5AAED84();
    v17 = 9;
    sub_1D5AAED84();
    v16 = 10;
    sub_1D5AAED84();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5887CF8()
{
  unint64_t result;

  result = qword_1ED9CEAC8;
  if (!qword_1ED9CEAC8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABDAB4, &type metadata for UserEventHistoryEventCountsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEAC8);
  }
  return result;
}

uint64_t UserEventHistoryEventCountsData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;

  sub_1D588802C(0, &qword_1ED9CEF60, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5887CF8();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v37 = 0;
    v10 = sub_1D5AAECE8();
    v36 = 1;
    v11 = sub_1D5AAECE8();
    v35 = 2;
    v26 = sub_1D5AAECE8();
    v34 = 3;
    v25 = sub_1D5AAECE8();
    v33 = 4;
    v24 = sub_1D5AAECE8();
    v32 = 5;
    v23 = sub_1D5AAECE8();
    v31 = 6;
    v22 = sub_1D5AAECE8();
    v30 = 7;
    v21 = sub_1D5AAECE8();
    v29 = 8;
    v20 = sub_1D5AAECE8();
    v28 = 9;
    v19 = sub_1D5AAECE8();
    v27 = 10;
    v13 = sub_1D5AAECE8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v11;
    v14 = v25;
    a2[2] = v26;
    a2[3] = v14;
    v15 = v23;
    a2[4] = v24;
    a2[5] = v15;
    v16 = v21;
    a2[6] = v22;
    a2[7] = v16;
    v17 = v19;
    a2[8] = v20;
    a2[9] = v17;
    a2[10] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D588802C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5887CF8();
    v7 = a3(a1, &type metadata for UserEventHistoryEventCountsData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D588808C()
{
  unint64_t result;

  result = qword_1ED9CF1D8;
  if (!qword_1ED9CF1D8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserEventHistoryEventCountsData, &type metadata for UserEventHistoryEventCountsData);
    atomic_store(result, (unint64_t *)&qword_1ED9CF1D8);
  }
  return result;
}

unint64_t sub_1D58880D4()
{
  unint64_t result;

  result = qword_1ED9CF1D0;
  if (!qword_1ED9CF1D0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserEventHistoryEventCountsData, &type metadata for UserEventHistoryEventCountsData);
    atomic_store(result, (unint64_t *)&qword_1ED9CF1D0);
  }
  return result;
}

uint64_t sub_1D5888118@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return UserEventHistoryEventCountsData.init(from:)(a1, a2);
}

uint64_t sub_1D588812C(_QWORD *a1)
{
  return UserEventHistoryEventCountsData.encode(to:)(a1);
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for UserEventHistoryEventCountsData(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 88))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for UserEventHistoryEventCountsData(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 88) = v3;
  return result;
}

ValueMetadata *type metadata accessor for UserEventHistoryEventCountsData()
{
  return &type metadata for UserEventHistoryEventCountsData;
}

uint64_t storeEnumTagSinglePayload for UserEventHistoryEventCountsData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1D5888220 + 4 * byte_1D5ABD900[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1D5888254 + 4 * byte_1D5ABD8FB[v4]))();
}

uint64_t sub_1D5888254(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D588825C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5888264);
  return result;
}

uint64_t sub_1D5888270(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5888278);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1D588827C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5888284(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserEventHistoryEventCountsData.CodingKeys()
{
  return &type metadata for UserEventHistoryEventCountsData.CodingKeys;
}

unint64_t sub_1D58882A4()
{
  unint64_t result;

  result = qword_1EFF4A748;
  if (!qword_1EFF4A748)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABDA8C, &type metadata for UserEventHistoryEventCountsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A748);
  }
  return result;
}

unint64_t sub_1D58882EC()
{
  unint64_t result;

  result = qword_1ED9CE418;
  if (!qword_1ED9CE418)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABD9FC, &type metadata for UserEventHistoryEventCountsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CE418);
  }
  return result;
}

unint64_t sub_1D5888334()
{
  unint64_t result;

  result = qword_1ED9CEAD0;
  if (!qword_1ED9CEAD0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABDA24, &type metadata for UserEventHistoryEventCountsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEAD0);
  }
  return result;
}

uint64_t sub_1D5888378(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AEE110 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5AEE130 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AEE150 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEE170 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001D5AEE190 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D5AEE1B0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEE1D0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AEE1F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AEE210 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D5AEE230 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AEE250)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t SessionData.utcOffset.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t SessionData.utcOffset.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*SessionData.utcOffset.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.languageCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SessionData.languageCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*SessionData.languageCode.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.countryCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SessionData.countryCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*SessionData.countryCode.modify())()
{
  return nullsub_1;
}

void SessionData.iCloudAccountState.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 40);
}

_BYTE *SessionData.iCloudAccountState.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = *result;
  return result;
}

uint64_t (*SessionData.iCloudAccountState.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.productType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SessionData.productType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*SessionData.productType.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.userSegmentationTreatmentIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SessionData.userSegmentationTreatmentIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = a1;
  return result;
}

uint64_t (*SessionData.userSegmentationTreatmentIDs.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.userSegmentationSegmentSetIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SessionData.userSegmentationSegmentSetIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = a1;
  return result;
}

uint64_t (*SessionData.userSegmentationSegmentSetIDs.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.regionIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SessionData.regionIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 80) = a1;
  return result;
}

uint64_t (*SessionData.regionIDs.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.isStoreDemoUser.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t SessionData.isStoreDemoUser.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 88) = result;
  return result;
}

uint64_t (*SessionData.isStoreDemoUser.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.isLocationAccessEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 89);
}

uint64_t SessionData.isLocationAccessEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 89) = result;
  return result;
}

uint64_t (*SessionData.isLocationAccessEnabled.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.isDiagnosticsEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 90);
}

uint64_t SessionData.isDiagnosticsEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 90) = result;
  return result;
}

uint64_t (*SessionData.isDiagnosticsEnabled.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.isSystemNotificationsEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 91);
}

uint64_t SessionData.isSystemNotificationsEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 91) = result;
  return result;
}

uint64_t (*SessionData.isSystemNotificationsEnabled.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.isPersonalizedAdsEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 92);
}

uint64_t SessionData.isPersonalizedAdsEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 92) = result;
  return result;
}

uint64_t (*SessionData.isPersonalizedAdsEnabled.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.isSportsOnboarded.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 93);
}

uint64_t SessionData.isSportsOnboarded.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 93) = result;
  return result;
}

uint64_t (*SessionData.isSportsOnboarded.modify())()
{
  return nullsub_1;
}

void SessionData.aggregateStateMode.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 94);
}

_BYTE *SessionData.aggregateStateMode.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 94) = *result;
  return result;
}

uint64_t (*SessionData.aggregateStateMode.modify())()
{
  return nullsub_1;
}

__n128 SessionData.init(utcOffset:languageCode:countryCode:iCloudAccountState:productType:userSegmentationTreatmentIDs:userSegmentationSegmentSetIDs:regionIDs:isStoreDemoUser:isLocationAccessEnabled:isDiagnosticsEnabled:isSystemNotificationsEnabled:isPersonalizedAdsEnabled:isSportsOnboarded:aggregateStateMode:)@<Q0>(unsigned __int32 a1@<W0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unsigned __int8 *a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, __n128 *a9@<X8>, __n128 a10, unint64_t a11, unsigned __int8 a12, unsigned __int8 a13, unsigned __int8 a14, unsigned __int8 a15, unsigned __int8 a16, unsigned __int8 a17, unsigned __int8 *a18)
{
  __n128 result;
  unsigned __int8 v19;
  unsigned __int8 v20;

  result = a10;
  v19 = *a6;
  v20 = *a18;
  a9->n128_u32[0] = a1;
  a9->n128_u64[1] = a2;
  a9[1].n128_u64[0] = a3;
  a9[1].n128_u64[1] = a4;
  a9[2].n128_u64[0] = a5;
  a9[2].n128_u8[8] = v19;
  a9[3].n128_u64[0] = a7;
  a9[3].n128_u64[1] = a8;
  a9[4] = a10;
  a9[5].n128_u64[0] = a11;
  a9[5].n128_u8[8] = a12;
  a9[5].n128_u8[9] = a13;
  a9[5].n128_u8[10] = a14;
  a9[5].n128_u8[11] = a15;
  a9[5].n128_u8[12] = a16;
  a9[5].n128_u8[13] = a17;
  a9[5].n128_u8[14] = v20;
  return result;
}

uint64_t sub_1D5888B00(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5888B3C + 4 * byte_1D5ABDB04[a1]))(0x657366664F637475, 0xE900000000000074);
}

uint64_t sub_1D5888B3C()
{
  return 0x65676175676E616CLL;
}

uint64_t sub_1D5888B5C()
{
  return 0x437972746E756F63;
}

unint64_t sub_1D5888B7C()
{
  return 0xD000000000000012;
}

uint64_t sub_1D5888CBC()
{
  unsigned __int8 *v0;

  return sub_1D5888B00(*v0);
}

uint64_t sub_1D5888CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D588A2A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5888CE8()
{
  sub_1D58891BC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5888D10()
{
  sub_1D58891BC();
  return sub_1D5AAEEE0();
}

uint64_t SessionData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _DWORD v19[6];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  char v32;

  sub_1D5889AD0(0, &qword_1ED9CC8C8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v19 - v5;
  v7 = *(_QWORD *)(v1 + 8);
  v27 = *(_QWORD *)(v1 + 16);
  v28 = v7;
  v8 = *(_QWORD *)(v1 + 24);
  v25 = *(_QWORD *)(v1 + 32);
  v26 = v8;
  v31 = *(unsigned __int8 *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 48);
  v23 = *(_QWORD *)(v1 + 56);
  v24 = v9;
  v10 = *(_QWORD *)(v1 + 64);
  v21 = *(_QWORD *)(v1 + 72);
  v22 = v10;
  v20 = *(_QWORD *)(v1 + 80);
  LODWORD(v10) = *(unsigned __int8 *)(v1 + 88);
  v19[4] = *(unsigned __int8 *)(v1 + 89);
  v19[5] = v10;
  LODWORD(v10) = *(unsigned __int8 *)(v1 + 90);
  v19[2] = *(unsigned __int8 *)(v1 + 91);
  v19[3] = v10;
  v19[1] = *(unsigned __int8 *)(v1 + 92);
  v11 = *(unsigned __int8 *)(v1 + 93);
  v12 = *(_BYTE *)(v1 + 94);
  v13 = a1[3];
  v14 = a1;
  v16 = v15;
  __swift_project_boxed_opaque_existential_1(v14, v13);
  sub_1D58891BC();
  sub_1D5AAEEC8();
  LOBYTE(v30) = 0;
  v17 = v29;
  sub_1D5AAED78();
  if (v17)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v16);
  LODWORD(v29) = v11;
  LOBYTE(v30) = 1;
  sub_1D5AAECF4();
  LOBYTE(v30) = 2;
  sub_1D5AAECF4();
  LOBYTE(v30) = v31;
  v32 = 3;
  sub_1D5889200();
  sub_1D5AAED6C();
  LOBYTE(v30) = 4;
  sub_1D5AAED3C();
  v30 = v22;
  v32 = 5;
  sub_1D57B5700(0, &qword_1ED9CC6E0);
  sub_1D5889244();
  sub_1D5AAED6C();
  v30 = v21;
  v32 = 6;
  sub_1D57B5700(0, (unint64_t *)&qword_1ED9CC6C8);
  sub_1D58892AC();
  sub_1D5AAED6C();
  v30 = v20;
  v32 = 7;
  sub_1D57B5700(0, (unint64_t *)&qword_1ED9CC6B0);
  sub_1D5889314();
  sub_1D5AAED18();
  LOBYTE(v30) = 8;
  sub_1D5AAED48();
  LOBYTE(v30) = 9;
  sub_1D5AAED48();
  LOBYTE(v30) = 10;
  v28 = v16;
  sub_1D5AAED48();
  LOBYTE(v30) = 11;
  sub_1D5AAED48();
  LOBYTE(v30) = 12;
  sub_1D5AAED00();
  LOBYTE(v30) = 13;
  sub_1D5AAED48();
  LOBYTE(v30) = v12;
  v32 = 14;
  sub_1D588937C();
  sub_1D5AAED18();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v28);
}

unint64_t sub_1D58891BC()
{
  unint64_t result;

  result = qword_1ED9C7758;
  if (!qword_1ED9C7758)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABDCC0, &type metadata for SessionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C7758);
  }
  return result;
}

unint64_t sub_1D5889200()
{
  unint64_t result;

  result = qword_1ED9C9DC8;
  if (!qword_1ED9C9DC8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ICloudAccountState, &type metadata for ICloudAccountState);
    atomic_store(result, (unint64_t *)&qword_1ED9C9DC8);
  }
  return result;
}

unint64_t sub_1D5889244()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED9CC6E8;
  if (!qword_1ED9CC6E8)
  {
    sub_1D57B5700(255, &qword_1ED9CC6E0);
    v2 = MEMORY[0x1E0DEDC68];
    result = MEMORY[0x1D8279680](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED9CC6E8);
  }
  return result;
}

unint64_t sub_1D58892AC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED9CC6D0;
  if (!qword_1ED9CC6D0)
  {
    sub_1D57B5700(255, (unint64_t *)&qword_1ED9CC6C8);
    v2 = MEMORY[0x1E0DEDBD0];
    result = MEMORY[0x1D8279680](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED9CC6D0);
  }
  return result;
}

unint64_t sub_1D5889314()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED9CC6B8;
  if (!qword_1ED9CC6B8)
  {
    sub_1D57B5700(255, (unint64_t *)&qword_1ED9CC6B0);
    v2 = MEMORY[0x1E0DEA970];
    result = MEMORY[0x1D8279680](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED9CC6B8);
  }
  return result;
}

unint64_t sub_1D588937C()
{
  unint64_t result;

  result = qword_1ED9CE480;
  if (!qword_1ED9CE480)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AggregateStateMode, &type metadata for AggregateStateMode);
    atomic_store(result, (unint64_t *)&qword_1ED9CE480);
  }
  return result;
}

uint64_t SessionData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  char v25;
  char v26;
  _DWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  _DWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  char v47;

  sub_1D5889AD0(0, &qword_1ED9CC7E0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58891BC();
  sub_1D5AAEEB0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    LOBYTE(v45) = 0;
    v10 = sub_1D5AAECDC();
    LOBYTE(v45) = 1;
    v11 = sub_1D5AAEC58();
    v14 = v13;
    v42 = v11;
    v46 = v10;
    LOBYTE(v45) = 2;
    swift_bridgeObjectRetain();
    v15 = sub_1D5AAEC58();
    v17 = v16;
    v41 = v15;
    v47 = 3;
    sub_1D5889B2C();
    swift_bridgeObjectRetain();
    sub_1D5AAECD0();
    v40 = a2;
    v39 = v45;
    LOBYTE(v45) = 4;
    v18 = sub_1D5AAECA0();
    v20 = v19;
    v38 = v18;
    sub_1D57B5700(0, &qword_1ED9CC6E0);
    v47 = 5;
    sub_1D5889B70();
    swift_bridgeObjectRetain();
    sub_1D5AAECD0();
    v44 = v20;
    v21 = v45;
    sub_1D57B5700(0, (unint64_t *)&qword_1ED9CC6C8);
    v47 = 6;
    sub_1D5889BD8();
    swift_bridgeObjectRetain();
    sub_1D5AAECD0();
    v37 = v21;
    v22 = v45;
    sub_1D57B5700(0, (unint64_t *)&qword_1ED9CC6B0);
    v47 = 7;
    sub_1D5889C40();
    swift_bridgeObjectRetain();
    sub_1D5AAEC7C();
    v43 = v22;
    v23 = v45;
    LOBYTE(v45) = 8;
    swift_bridgeObjectRetain();
    v36 = sub_1D5AAECAC();
    LOBYTE(v45) = 9;
    v35 = sub_1D5AAECAC();
    LOBYTE(v45) = 10;
    v34 = sub_1D5AAECAC();
    LOBYTE(v45) = 11;
    v33 = sub_1D5AAECAC();
    LOBYTE(v45) = 12;
    v32 = sub_1D5AAEC64();
    LOBYTE(v45) = 13;
    v31 = sub_1D5AAECAC();
    v47 = 14;
    sub_1D5889CA8();
    sub_1D5AAEC7C();
    v35 &= 1u;
    v36 &= 1u;
    v33 &= 1u;
    v34 &= 1u;
    v24 = *(void (**)(char *, uint64_t))(v7 + 8);
    v25 = v31 & 1;
    v24(v9, v6);
    v26 = v45;
    v27 = v40;
    *v40 = v46;
    v28 = v43;
    *((_QWORD *)v27 + 1) = v42;
    *((_QWORD *)v27 + 2) = v14;
    *((_QWORD *)v27 + 3) = v41;
    *((_QWORD *)v27 + 4) = v17;
    *((_BYTE *)v27 + 40) = v39;
    v29 = v37;
    v30 = v44;
    *((_QWORD *)v27 + 6) = v38;
    *((_QWORD *)v27 + 7) = v30;
    *((_QWORD *)v27 + 8) = v29;
    *((_QWORD *)v27 + 9) = v28;
    *((_QWORD *)v27 + 10) = v23;
    *((_BYTE *)v27 + 88) = v36;
    *((_BYTE *)v27 + 89) = v35;
    *((_BYTE *)v27 + 90) = v34;
    *((_BYTE *)v27 + 91) = v33;
    *((_BYTE *)v27 + 92) = v32;
    *((_BYTE *)v27 + 93) = v25;
    *((_BYTE *)v27 + 94) = v26;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D5889AD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58891BC();
    v7 = a3(a1, &type metadata for SessionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5889B2C()
{
  unint64_t result;

  result = qword_1ED9C9DD8;
  if (!qword_1ED9C9DD8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ICloudAccountState, &type metadata for ICloudAccountState);
    atomic_store(result, (unint64_t *)&qword_1ED9C9DD8);
  }
  return result;
}

unint64_t sub_1D5889B70()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED9CC6F0;
  if (!qword_1ED9CC6F0)
  {
    sub_1D57B5700(255, &qword_1ED9CC6E0);
    v2 = MEMORY[0x1E0DEDC90];
    result = MEMORY[0x1D8279680](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED9CC6F0);
  }
  return result;
}

unint64_t sub_1D5889BD8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED9CC6D8;
  if (!qword_1ED9CC6D8)
  {
    sub_1D57B5700(255, (unint64_t *)&qword_1ED9CC6C8);
    v2 = MEMORY[0x1E0DEDBF8];
    result = MEMORY[0x1D8279680](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED9CC6D8);
  }
  return result;
}

unint64_t sub_1D5889C40()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED9CC6C0;
  if (!qword_1ED9CC6C0)
  {
    sub_1D57B5700(255, (unint64_t *)&qword_1ED9CC6B0);
    v2 = MEMORY[0x1E0DEA9A0];
    result = MEMORY[0x1D8279680](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED9CC6C0);
  }
  return result;
}

unint64_t sub_1D5889CA8()
{
  unint64_t result;

  result = qword_1EFF4A750;
  if (!qword_1EFF4A750)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AggregateStateMode, &type metadata for AggregateStateMode);
    atomic_store(result, (unint64_t *)&qword_1EFF4A750);
  }
  return result;
}

unint64_t sub_1D5889CF4()
{
  unint64_t result;

  result = qword_1ED9C7778;
  if (!qword_1ED9C7778)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SessionData, &type metadata for SessionData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7778);
  }
  return result;
}

uint64_t sub_1D5889D38@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return SessionData.init(from:)(a1, a2);
}

uint64_t sub_1D5889D4C(_QWORD *a1)
{
  return SessionData.encode(to:)(a1);
}

uint64_t destroy for SessionData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SessionData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 92) = *(_BYTE *)(a2 + 92);
  *(_WORD *)(a1 + 93) = *(_WORD *)(a2 + 93);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SessionData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  *(_BYTE *)(a1 + 90) = *(_BYTE *)(a2 + 90);
  *(_BYTE *)(a1 + 91) = *(_BYTE *)(a2 + 91);
  *(_BYTE *)(a1 + 92) = *(_BYTE *)(a2 + 92);
  *(_BYTE *)(a1 + 93) = *(_BYTE *)(a2 + 93);
  *(_BYTE *)(a1 + 94) = *(_BYTE *)(a2 + 94);
  return a1;
}

__n128 __swift_memcpy95_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 79) = *(_OWORD *)(a2 + 79);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for SessionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  *(_BYTE *)(a1 + 90) = *(_BYTE *)(a2 + 90);
  *(_BYTE *)(a1 + 91) = *(_BYTE *)(a2 + 91);
  *(_BYTE *)(a1 + 92) = *(_BYTE *)(a2 + 92);
  *(_BYTE *)(a1 + 93) = *(_BYTE *)(a2 + 93);
  *(_BYTE *)(a1 + 94) = *(_BYTE *)(a2 + 94);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 95))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 94) = 0;
    *(_WORD *)(result + 92) = 0;
    *(_DWORD *)(result + 88) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 95) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 95) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SessionData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1D588A14C + 4 * byte_1D5ABDB18[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1D588A180 + 4 * byte_1D5ABDB13[v4]))();
}

uint64_t sub_1D588A180(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D588A188(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D588A190);
  return result;
}

uint64_t sub_1D588A19C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D588A1A4);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1D588A1A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D588A1B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionData.CodingKeys()
{
  return &type metadata for SessionData.CodingKeys;
}

unint64_t sub_1D588A1D0()
{
  unint64_t result;

  result = qword_1EFF4A758;
  if (!qword_1EFF4A758)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABDC98, &type metadata for SessionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A758);
  }
  return result;
}

unint64_t sub_1D588A218()
{
  unint64_t result;

  result = qword_1ED9C7768;
  if (!qword_1ED9C7768)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABDC08, &type metadata for SessionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C7768);
  }
  return result;
}

unint64_t sub_1D588A260()
{
  unint64_t result;

  result = qword_1ED9C7760;
  if (!qword_1ED9C7760)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABDC30, &type metadata for SessionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C7760);
  }
  return result;
}

uint64_t sub_1D588A2A4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x657366664F637475 && a2 == 0xE900000000000074 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676175676E616CLL && a2 == 0xEC00000065646F43 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x437972746E756F63 && a2 == 0xEB0000000065646FLL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AEE270 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x54746375646F7270 && a2 == 0xEB00000000657079 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D5AEE290 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001D5AEE2B0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x44496E6F69676572 && a2 == 0xE900000000000073 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x4465726F74537369 && a2 == 0xEF726573556F6D65 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D5AEE2D0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AEE2F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D5AEE310 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5AEE330 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AEE350 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AEE370)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 14;
    else
      return 15;
  }
}

void InteractivePuzzleTeaserEngagementData.interactionType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *InteractivePuzzleTeaserEngagementData.interactionType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*InteractivePuzzleTeaserEngagementData.interactionType.modify())()
{
  return nullsub_1;
}

NewsAnalytics::InteractivePuzzleTeaserEngagementData __swiftcall InteractivePuzzleTeaserEngagementData.init(interactionType:)(NewsAnalytics::InteractivePuzzleTeaserEngagementData interactionType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)interactionType.interactionType;
  return interactionType;
}

uint64_t sub_1D588A8D4()
{
  return 0x7463617265746E69;
}

uint64_t sub_1D588A8F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7463617265746E69 && a2 == 0xEF657079546E6F69)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D588A9B0()
{
  sub_1D588AB04();
  return sub_1D5AAEED4();
}

uint64_t sub_1D588A9D8()
{
  sub_1D588AB04();
  return sub_1D5AAEEE0();
}

uint64_t InteractivePuzzleTeaserEngagementData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D588ACC4(0, &qword_1EFF4A760, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D588AB04();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D588AB48();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D588AB04()
{
  unint64_t result;

  result = qword_1EFF4A768;
  if (!qword_1EFF4A768)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABDEAC, &type metadata for InteractivePuzzleTeaserEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A768);
  }
  return result;
}

unint64_t sub_1D588AB48()
{
  unint64_t result;

  result = qword_1EFF4A770;
  if (!qword_1EFF4A770)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for InteractionType, &type metadata for InteractionType);
    atomic_store(result, (unint64_t *)&qword_1EFF4A770);
  }
  return result;
}

uint64_t InteractivePuzzleTeaserEngagementData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D588ACC4(0, &qword_1EFF4A778, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D588AB04();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D588AD20();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D588ACC4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D588AB04();
    v7 = a3(a1, &type metadata for InteractivePuzzleTeaserEngagementData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D588AD20()
{
  unint64_t result;

  result = qword_1EFF4A780;
  if (!qword_1EFF4A780)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for InteractionType, &type metadata for InteractionType);
    atomic_store(result, (unint64_t *)&qword_1EFF4A780);
  }
  return result;
}

unint64_t sub_1D588AD68()
{
  unint64_t result;

  result = qword_1EFF4A788;
  if (!qword_1EFF4A788)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for InteractivePuzzleTeaserEngagementData, &type metadata for InteractivePuzzleTeaserEngagementData);
    atomic_store(result, (unint64_t *)&qword_1EFF4A788);
  }
  return result;
}

unint64_t sub_1D588ADB0()
{
  unint64_t result;

  result = qword_1EFF4A790;
  if (!qword_1EFF4A790)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for InteractivePuzzleTeaserEngagementData, &type metadata for InteractivePuzzleTeaserEngagementData);
    atomic_store(result, (unint64_t *)&qword_1EFF4A790);
  }
  return result;
}

uint64_t sub_1D588ADF4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return InteractivePuzzleTeaserEngagementData.init(from:)(a1, a2);
}

uint64_t sub_1D588AE08(_QWORD *a1)
{
  return InteractivePuzzleTeaserEngagementData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for InteractivePuzzleTeaserEngagementData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D588AE68 + 4 * byte_1D5ABDD15[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D588AE9C + 4 * byte_1D5ABDD10[v4]))();
}

uint64_t sub_1D588AE9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D588AEA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D588AEACLL);
  return result;
}

uint64_t sub_1D588AEB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D588AEC0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D588AEC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D588AECC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InteractivePuzzleTeaserEngagementData()
{
  return &type metadata for InteractivePuzzleTeaserEngagementData;
}

uint64_t storeEnumTagSinglePayload for InteractivePuzzleTeaserEngagementData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D588AF28 + 4 * byte_1D5ABDD1A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D588AF48 + 4 * byte_1D5ABDD1F[v4]))();
}

_BYTE *sub_1D588AF28(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D588AF48(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D588AF50(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D588AF58(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D588AF60(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D588AF68(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for InteractivePuzzleTeaserEngagementData.CodingKeys()
{
  return &type metadata for InteractivePuzzleTeaserEngagementData.CodingKeys;
}

unint64_t sub_1D588AF88()
{
  unint64_t result;

  result = qword_1EFF4A798;
  if (!qword_1EFF4A798)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABDE84, &type metadata for InteractivePuzzleTeaserEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A798);
  }
  return result;
}

unint64_t sub_1D588AFD0()
{
  unint64_t result;

  result = qword_1EFF4A7A0;
  if (!qword_1EFF4A7A0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABDDF4, &type metadata for InteractivePuzzleTeaserEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A7A0);
  }
  return result;
}

unint64_t sub_1D588B018()
{
  unint64_t result;

  result = qword_1EFF4A7A8;
  if (!qword_1EFF4A7A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABDE1C, &type metadata for InteractivePuzzleTeaserEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A7A8);
  }
  return result;
}

void StoreKitErrorData.storeKitError.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *StoreKitErrorData.storeKitError.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*StoreKitErrorData.storeKitError.modify())()
{
  return nullsub_1;
}

NewsAnalytics::StoreKitErrorData __swiftcall StoreKitErrorData.init(storeKitError:)(NewsAnalytics::StoreKitErrorData storeKitError)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)storeKitError.storeKitError;
  return storeKitError;
}

uint64_t sub_1D588B090()
{
  return 0x74694B65726F7473;
}

uint64_t sub_1D588B0B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x74694B65726F7473 && a2 == 0xED0000726F727245)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D588B16C()
{
  sub_1D588B2C0();
  return sub_1D5AAEED4();
}

uint64_t sub_1D588B194()
{
  sub_1D588B2C0();
  return sub_1D5AAEEE0();
}

uint64_t StoreKitErrorData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D588B480(0, &qword_1EFF4A7B0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D588B2C0();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D588B304();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D588B2C0()
{
  unint64_t result;

  result = qword_1EFF4A7B8;
  if (!qword_1EFF4A7B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABE088, &type metadata for StoreKitErrorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A7B8);
  }
  return result;
}

unint64_t sub_1D588B304()
{
  unint64_t result;

  result = qword_1EFF4A7C0;
  if (!qword_1EFF4A7C0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for StoreKitError, &type metadata for StoreKitError);
    atomic_store(result, (unint64_t *)&qword_1EFF4A7C0);
  }
  return result;
}

uint64_t StoreKitErrorData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D588B480(0, &qword_1EFF4A7C8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D588B2C0();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D588B4DC();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D588B480(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D588B2C0();
    v7 = a3(a1, &type metadata for StoreKitErrorData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D588B4DC()
{
  unint64_t result;

  result = qword_1EFF4A7D0;
  if (!qword_1EFF4A7D0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for StoreKitError, &type metadata for StoreKitError);
    atomic_store(result, (unint64_t *)&qword_1EFF4A7D0);
  }
  return result;
}

unint64_t sub_1D588B524()
{
  unint64_t result;

  result = qword_1ED9C9578;
  if (!qword_1ED9C9578)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for StoreKitErrorData, &type metadata for StoreKitErrorData);
    atomic_store(result, (unint64_t *)&qword_1ED9C9578);
  }
  return result;
}

unint64_t sub_1D588B56C()
{
  unint64_t result;

  result = qword_1ED9C9570;
  if (!qword_1ED9C9570)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for StoreKitErrorData, &type metadata for StoreKitErrorData);
    atomic_store(result, (unint64_t *)&qword_1ED9C9570);
  }
  return result;
}

uint64_t sub_1D588B5B0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return StoreKitErrorData.init(from:)(a1, a2);
}

uint64_t sub_1D588B5C4(_QWORD *a1)
{
  return StoreKitErrorData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for StoreKitErrorData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 22 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 22) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE9)
    return ((uint64_t (*)(void))((char *)&loc_1D588B624 + 4 * byte_1D5ABDF05[v4]))();
  *a1 = a2 + 22;
  return ((uint64_t (*)(void))((char *)sub_1D588B658 + 4 * byte_1D5ABDF00[v4]))();
}

uint64_t sub_1D588B658(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D588B660(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D588B668);
  return result;
}

uint64_t sub_1D588B674(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D588B67CLL);
  *(_BYTE *)result = a2 + 22;
  return result;
}

uint64_t sub_1D588B680(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D588B688(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StoreKitErrorData()
{
  return &type metadata for StoreKitErrorData;
}

uint64_t storeEnumTagSinglePayload for StoreKitErrorData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D588B6E4 + 4 * byte_1D5ABDF0A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D588B704 + 4 * byte_1D5ABDF0F[v4]))();
}

_BYTE *sub_1D588B6E4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D588B704(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D588B70C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D588B714(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D588B71C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D588B724(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StoreKitErrorData.CodingKeys()
{
  return &type metadata for StoreKitErrorData.CodingKeys;
}

unint64_t sub_1D588B744()
{
  unint64_t result;

  result = qword_1EFF4A7D8;
  if (!qword_1EFF4A7D8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABE060, &type metadata for StoreKitErrorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A7D8);
  }
  return result;
}

unint64_t sub_1D588B78C()
{
  unint64_t result;

  result = qword_1EFF4A7E0;
  if (!qword_1EFF4A7E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABDFD0, &type metadata for StoreKitErrorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A7E0);
  }
  return result;
}

unint64_t sub_1D588B7D4()
{
  unint64_t result;

  result = qword_1EFF4A7E8;
  if (!qword_1EFF4A7E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABDFF8, &type metadata for StoreKitErrorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A7E8);
  }
  return result;
}

uint64_t GroupDataList.groups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GroupDataList.groups.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*GroupDataList.groups.modify())()
{
  return nullsub_1;
}

NewsAnalytics::GroupDataList __swiftcall GroupDataList.init(groups:)(NewsAnalytics::GroupDataList groups)
{
  NewsAnalytics::GroupDataList *v1;

  v1->groups._rawValue = groups.groups._rawValue;
  return groups;
}

uint64_t sub_1D588B860()
{
  return 0x7370756F7267;
}

uint64_t sub_1D588B874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7370756F7267 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D588B900()
{
  sub_1D588BA74();
  return sub_1D5AAEED4();
}

uint64_t sub_1D588B928()
{
  sub_1D588BA74();
  return sub_1D5AAEEE0();
}

uint64_t GroupDataList.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1D588BC64(0, &qword_1EFF4A7F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D588BA74();
  sub_1D5AAEEC8();
  v10[1] = v8;
  sub_1D588BAB8();
  sub_1D588BCC0(&qword_1EFF4A808, (uint64_t (*)(void))sub_1D57C5FEC, MEMORY[0x1E0DEAF10]);
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D588BA74()
{
  unint64_t result;

  result = qword_1EFF4A7F8;
  if (!qword_1EFF4A7F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABE24C, &type metadata for GroupDataList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A7F8);
  }
  return result;
}

void sub_1D588BAB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFF4A800)
  {
    v0 = sub_1D5AAE97C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFF4A800);
  }
}

uint64_t GroupDataList.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1D588BC64(0, &qword_1EFF4A810, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D588BA74();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D588BAB8();
    sub_1D588BCC0(&qword_1EFF4A818, (uint64_t (*)(void))sub_1D57C5FA8, MEMORY[0x1E0DEAF40]);
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D588BC64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D588BA74();
    v7 = a3(a1, &type metadata for GroupDataList.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D588BCC0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1D588BAB8();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1D8279680](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D588BD2C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return GroupDataList.init(from:)(a1, a2);
}

uint64_t sub_1D588BD40(_QWORD *a1)
{
  return GroupDataList.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for GroupDataList()
{
  return &type metadata for GroupDataList;
}

uint64_t storeEnumTagSinglePayload for GroupDataList.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D588BDA4 + 4 * byte_1D5ABE0D8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D588BDC4 + 4 * byte_1D5ABE0DD[v4]))();
}

_BYTE *sub_1D588BDA4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D588BDC4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D588BDCC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D588BDD4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D588BDDC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D588BDE4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for GroupDataList.CodingKeys()
{
  return &type metadata for GroupDataList.CodingKeys;
}

unint64_t sub_1D588BE04()
{
  unint64_t result;

  result = qword_1EFF4A820;
  if (!qword_1EFF4A820)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABE224, &type metadata for GroupDataList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A820);
  }
  return result;
}

unint64_t sub_1D588BE4C()
{
  unint64_t result;

  result = qword_1EFF4A828;
  if (!qword_1EFF4A828)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABE194, &type metadata for GroupDataList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A828);
  }
  return result;
}

unint64_t sub_1D588BE94()
{
  unint64_t result;

  result = qword_1EFF4A830;
  if (!qword_1EFF4A830)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABE1BC, &type metadata for GroupDataList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A830);
  }
  return result;
}

void FeedData.feedType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *FeedData.feedType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*FeedData.feedType.modify())()
{
  return nullsub_1;
}

uint64_t FeedData.feedID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedData.feedID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*FeedData.feedID.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D588BF70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D588C358(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D588BF94()
{
  sub_1D57AEFD4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D588BFBC()
{
  sub_1D57AEFD4();
  return sub_1D5AAEEE0();
}

uint64_t FeedData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;

  sub_1D57AEF78(0, &qword_1ED9CC868, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AEFD4();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v17 = 0;
    sub_1D588C178();
    sub_1D5AAECD0();
    v10 = v18;
    v16 = 1;
    v12 = sub_1D5AAEC58();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v12;
    *(_QWORD *)(a2 + 16) = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1D588C178()
{
  unint64_t result;

  result = qword_1ED9CC460;
  if (!qword_1ED9CC460)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedType, &type metadata for FeedType);
    atomic_store(result, (unint64_t *)&qword_1ED9CC460);
  }
  return result;
}

uint64_t sub_1D588C1BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedData.init(from:)(a1, a2);
}

uint64_t assignWithCopy for FeedData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedData.CodingKeys()
{
  return &type metadata for FeedData.CodingKeys;
}

unint64_t sub_1D588C314()
{
  unint64_t result;

  result = qword_1EFF4A838;
  if (!qword_1EFF4A838)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABE3E8, &type metadata for FeedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A838);
  }
  return result;
}

uint64_t sub_1D588C358(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6570795464656566 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x444964656566 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

NewsAnalytics::DownloadState_optional __swiftcall DownloadState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::DownloadState_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t DownloadState.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7472617473;
  if (*v0 != 1)
    v1 = 0x6C65636E6163;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D588C4EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A3CB88(*a1, *a2);
}

unint64_t sub_1D588C4FC()
{
  unint64_t result;

  result = qword_1EFF4A840;
  if (!qword_1EFF4A840)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DownloadState, &type metadata for DownloadState);
    atomic_store(result, (unint64_t *)&qword_1EFF4A840);
  }
  return result;
}

uint64_t sub_1D588C540()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D588C5D8()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D588C64C()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::DownloadState_optional sub_1D588C6E0(Swift::String *a1)
{
  return DownloadState.init(rawValue:)(*a1);
}

void sub_1D588C6EC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE500000000000000;
  v5 = 0x7472617473;
  if (v2 != 1)
  {
    v5 = 0x6C65636E6163;
    v4 = 0xE600000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D588C744()
{
  sub_1D588C8B8();
  return sub_1D5AAE928();
}

uint64_t sub_1D588C7A0()
{
  sub_1D588C8B8();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for DownloadState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D588C838 + 4 * byte_1D5ABE465[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D588C86C + 4 * byte_1D5ABE460[v4]))();
}

uint64_t sub_1D588C86C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D588C874(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D588C87CLL);
  return result;
}

uint64_t sub_1D588C888(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D588C890);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D588C894(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D588C89C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DownloadState()
{
  return &type metadata for DownloadState;
}

unint64_t sub_1D588C8B8()
{
  unint64_t result;

  result = qword_1EFF4A848;
  if (!qword_1EFF4A848)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DownloadState, &type metadata for DownloadState);
    atomic_store(result, (unint64_t *)&qword_1EFF4A848);
  }
  return result;
}

uint64_t sub_1D588C8FC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4A850, MEMORY[0x1E0CF8078]);
}

uint64_t static SportsRemoveFavoritesSyncEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF470A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4A850, a1);
}

uint64_t sub_1D588C93C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4A868, MEMORY[0x1E0CF8378]);
}

uint64_t static SportsRemoveFavoritesSyncEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF470B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4A868, a1);
}

uint64_t SportsRemoveFavoritesSyncEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t SportsRemoveFavoritesSyncEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SportsRemoveFavoritesSyncEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SportsRemoveFavoritesSyncEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsRemoveFavoritesSyncEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SportsRemoveFavoritesSyncEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4A908);
}

uint64_t SportsRemoveFavoritesSyncEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsRemoveFavoritesSyncEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SportsRemoveFavoritesSyncEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for SportsRemoveFavoritesSyncEvent(0);
  return nullsub_1;
}

uint64_t SportsRemoveFavoritesSyncEvent.removeFavoritesSyncData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsRemoveFavoritesSyncEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF4A880, (void (*)(void))sub_1D588CB44, (void (*)(void))sub_1D588CB88);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D588CB44()
{
  unint64_t result;

  result = qword_1EFF4A888;
  if (!qword_1EFF4A888)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SportsRemoveFavoritesSyncData, &type metadata for SportsRemoveFavoritesSyncData);
    atomic_store(result, (unint64_t *)&qword_1EFF4A888);
  }
  return result;
}

unint64_t sub_1D588CB88()
{
  unint64_t result;

  result = qword_1EFF4A890;
  if (!qword_1EFF4A890)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SportsRemoveFavoritesSyncData, &type metadata for SportsRemoveFavoritesSyncData);
    atomic_store(result, (unint64_t *)&qword_1EFF4A890);
  }
  return result;
}

uint64_t SportsRemoveFavoritesSyncEvent.removeFavoritesSyncData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SportsRemoveFavoritesSyncEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF4A880, (void (*)(void))sub_1D588CB44, (void (*)(void))sub_1D588CB88);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SportsRemoveFavoritesSyncEvent.removeFavoritesSyncData.modify())()
{
  type metadata accessor for SportsRemoveFavoritesSyncEvent(0);
  return nullsub_1;
}

uint64_t SportsRemoveFavoritesSyncEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = type metadata accessor for SportsRemoveFavoritesSyncEvent(0);
  v5 = a1 + *(int *)(v4 + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + *(int *)(v4 + 24);
  sub_1D579E208(0, &qword_1EFF4A880, (void (*)(void))sub_1D588CB44, (void (*)(void))sub_1D588CB88);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
}

uint64_t SportsRemoveFavoritesSyncEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SportsRemoveFavoritesSyncEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for SportsRemoveFavoritesSyncEvent.Model(0) + 20));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SportsRemoveFavoritesSyncEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4A9A0);
}

uint64_t SportsRemoveFavoritesSyncEvent.Model.removeFavoritesSyncData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SportsRemoveFavoritesSyncEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t SportsRemoveFavoritesSyncEvent.Model.init(eventData:userBundleSubscriptionContextData:removeFavoritesSyncData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, int *a3@<X2>, uint64_t a4@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  int v17;

  v6 = *a2;
  v7 = *((_QWORD *)a2 + 1);
  v8 = *((_QWORD *)a2 + 2);
  v9 = a2[24];
  v10 = a2[25];
  v11 = *((_QWORD *)a2 + 4);
  v12 = *((_QWORD *)a2 + 5);
  v13 = a2[48];
  v17 = *a3;
  v14 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a4, a1, v14);
  result = type metadata accessor for SportsRemoveFavoritesSyncEvent.Model(0);
  v16 = a4 + *(int *)(result + 20);
  *(_BYTE *)v16 = v6;
  *(_QWORD *)(v16 + 8) = v7;
  *(_QWORD *)(v16 + 16) = v8;
  *(_BYTE *)(v16 + 24) = v9;
  *(_BYTE *)(v16 + 25) = v10;
  *(_QWORD *)(v16 + 32) = v11;
  *(_QWORD *)(v16 + 40) = v12;
  *(_BYTE *)(v16 + 48) = v13;
  *(_DWORD *)(a4 + *(int *)(result + 24)) = v17;
  return result;
}

uint64_t sub_1D588CEB4()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000021;
  if (*v0 != 1)
    v1 = 0xD000000000000017;
  if (*v0)
    return v1;
  else
    return 0x746144746E657665;
}

uint64_t sub_1D588CF20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D588E660(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D588CF44()
{
  sub_1D588D170();
  return sub_1D5AAEED4();
}

uint64_t sub_1D588CF6C()
{
  sub_1D588D170();
  return sub_1D5AAEEE0();
}

uint64_t SportsRemoveFavoritesSyncEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v16;
  int v17;
  __int128 v18;
  char v19;
  char v20;
  __int128 v21;
  char v22;

  v3 = v1;
  sub_1D588D4F4(0, &qword_1EFF4A898, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D588D170();
  sub_1D5AAEEC8();
  LOBYTE(v17) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = type metadata accessor for SportsRemoveFavoritesSyncEvent.Model(0);
    v11 = v3 + *(int *)(v10 + 20);
    v12 = *(_BYTE *)(v11 + 24);
    v13 = *(_BYTE *)(v11 + 25);
    v14 = *(_BYTE *)(v11 + 48);
    LOBYTE(v17) = *(_BYTE *)v11;
    v18 = *(_OWORD *)(v11 + 8);
    v19 = v12;
    v20 = v13;
    v21 = *(_OWORD *)(v11 + 32);
    v22 = v14;
    HIBYTE(v16) = 1;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v17 = *(_DWORD *)(v3 + *(int *)(v10 + 24));
    HIBYTE(v16) = 2;
    sub_1D588CB88();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D588D170()
{
  unint64_t result;

  result = qword_1EFF4A8A0;
  if (!qword_1EFF4A8A0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABE754, &type metadata for SportsRemoveFavoritesSyncEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A8A0);
  }
  return result;
}

uint64_t SportsRemoveFavoritesSyncEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  int v28;
  __int128 v29;
  char v30;
  char v31;
  __int128 v32;
  char v33;
  char v34;

  v22 = a2;
  v3 = sub_1D5AADF98();
  v24 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v25 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D588D4F4(0, &qword_1EFF4A8A8, MEMORY[0x1E0DED048]);
  v23 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - v7;
  v9 = type metadata accessor for SportsRemoveFavoritesSyncEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D588D170();
  v26 = v8;
  v12 = v27;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = v9;
  v13 = (uint64_t)a1;
  v14 = v24;
  LOBYTE(v28) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v25, v3);
  v34 = 1;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v15 = v30;
  v16 = v31;
  v17 = v33;
  v18 = v27;
  v19 = &v11[*(int *)(v27 + 20)];
  *v19 = v28;
  *(_OWORD *)(v19 + 8) = v29;
  v19[24] = v15;
  v19[25] = v16;
  *((_OWORD *)v19 + 2) = v32;
  v19[48] = v17;
  v34 = 2;
  sub_1D588CB44();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v26, v23);
  *(_DWORD *)&v11[*(int *)(v18 + 24)] = v28;
  sub_1D588D550((uint64_t)v11, v22);
  __swift_destroy_boxed_opaque_existential_1(v13);
  return sub_1D588D594((uint64_t)v11);
}

void sub_1D588D4F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D588D170();
    v7 = a3(a1, &type metadata for SportsRemoveFavoritesSyncEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D588D550(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SportsRemoveFavoritesSyncEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D588D594(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SportsRemoveFavoritesSyncEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D588D5D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SportsRemoveFavoritesSyncEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D588D5E4(_QWORD *a1)
{
  return SportsRemoveFavoritesSyncEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D588D5F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF470A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4A850, a1);
}

uint64_t sub_1D588D61C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF470B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4A868, a1);
}

uint64_t sub_1D588D640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + *(int *)(a1 + 24);
  sub_1D579E208(0, &qword_1EFF4A880, (void (*)(void))sub_1D588CB44, (void (*)(void))sub_1D588CB88);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for SportsRemoveFavoritesSyncEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1EFF4A880, (void (*)(void))sub_1D588CB44, (void (*)(void))sub_1D588CB88);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for SportsRemoveFavoritesSyncEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  sub_1D579E208(0, &qword_1EFF4A880, (void (*)(void))sub_1D588CB44, (void (*)(void))sub_1D588CB88);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for SportsRemoveFavoritesSyncEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4A880, (void (*)(void))sub_1D588CB44, (void (*)(void))sub_1D588CB88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for SportsRemoveFavoritesSyncEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4A880, (void (*)(void))sub_1D588CB44, (void (*)(void))sub_1D588CB88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for SportsRemoveFavoritesSyncEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4A880, (void (*)(void))sub_1D588CB44, (void (*)(void))sub_1D588CB88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for SportsRemoveFavoritesSyncEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF4A880, (void (*)(void))sub_1D588CB44, (void (*)(void))sub_1D588CB88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsRemoveFavoritesSyncEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D588DCD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF4A880, (void (*)(void))sub_1D588CB44, (void (*)(void))sub_1D588CB88);
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SportsRemoveFavoritesSyncEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D588DDB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF4A880, (void (*)(void))sub_1D588CB44, (void (*)(void))sub_1D588CB88);
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D588DE94()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1EFF4A880, (void (*)(void))sub_1D588CB44, (void (*)(void))sub_1D588CB88);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SportsRemoveFavoritesSyncEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    *((_WORD *)v10 + 12) = *((_WORD *)v11 + 12);
    v13 = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
    *((_QWORD *)v10 + 5) = v13;
    v10[48] = v11[48];
    *(_DWORD *)((char *)a1 + v9) = *(_DWORD *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SportsRemoveFavoritesSyncEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SportsRemoveFavoritesSyncEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  *(_WORD *)(v9 + 24) = *(_WORD *)(v10 + 24);
  v12 = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v9 + 40) = v12;
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  *(_DWORD *)(a1 + v8) = *(_DWORD *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SportsRemoveFavoritesSyncEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_DWORD *)(a1 + *(int *)(a3 + 24)) = *(_DWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for SportsRemoveFavoritesSyncEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  *(_DWORD *)(a1 + v8) = *(_DWORD *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for SportsRemoveFavoritesSyncEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  v11 = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_DWORD *)(a1 + *(int *)(a3 + 24)) = *(_DWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsRemoveFavoritesSyncEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D588E328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsRemoveFavoritesSyncEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D588E3C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 16) = a2;
  return result;
}

uint64_t sub_1D588E43C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SportsRemoveFavoritesSyncEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D588E508 + 4 * byte_1D5ABE585[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D588E53C + 4 * byte_1D5ABE580[v4]))();
}

uint64_t sub_1D588E53C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D588E544(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D588E54CLL);
  return result;
}

uint64_t sub_1D588E558(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D588E560);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D588E564(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D588E56C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsRemoveFavoritesSyncEvent.Model.CodingKeys()
{
  return &type metadata for SportsRemoveFavoritesSyncEvent.Model.CodingKeys;
}

unint64_t sub_1D588E58C()
{
  unint64_t result;

  result = qword_1EFF4A9E0;
  if (!qword_1EFF4A9E0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABE72C, &type metadata for SportsRemoveFavoritesSyncEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A9E0);
  }
  return result;
}

unint64_t sub_1D588E5D4()
{
  unint64_t result;

  result = qword_1EFF4A9E8;
  if (!qword_1EFF4A9E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABE69C, &type metadata for SportsRemoveFavoritesSyncEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A9E8);
  }
  return result;
}

unint64_t sub_1D588E61C()
{
  unint64_t result;

  result = qword_1EFF4A9F0;
  if (!qword_1EFF4A9F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABE6C4, &type metadata for SportsRemoveFavoritesSyncEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4A9F0);
  }
  return result;
}

uint64_t sub_1D588E660(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D5AEE390)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1D588E7B8()
{
  uint64_t result;
  uint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  char v5;
  _BYTE v6[40];
  __int128 v7;
  __int128 v8;

  result = sub_1D5AAD524();
  if (result)
  {
    v1 = result;
    sub_1D5AAEB50();
    if (*(_QWORD *)(v1 + 16) && (v2 = sub_1D5A9E278((uint64_t)v6), (v3 & 1) != 0))
    {
      sub_1D57E6B64(*(_QWORD *)(v1 + 56) + 32 * v2, (uint64_t)&v7);
    }
    else
    {
      v7 = 0u;
      v8 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1D588EBB0((uint64_t)v6);
    if (!*((_QWORD *)&v8 + 1))
      return sub_1D57C5484((uint64_t)&v7);
    result = swift_dynamicCast();
    if ((result & 1) != 0)
    {
      if ((sub_1D5AAEDE4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v4 = 1;
      }
      else
      {
        v5 = sub_1D5AAEDE4();
        result = swift_bridgeObjectRelease();
        v4 = 0;
        if ((v5 & 1) == 0)
          return result;
      }
      *(_BYTE *)(swift_allocObject() + 16) = v4;
      sub_1D5AADB9C();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1D588E9A0(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  sub_1D588EBFC();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13[15] = a2;
  sub_1D588EC54();
  sub_1D5AADA40();
  sub_1D57BD7B0();
  v8 = sub_1D5AADB54();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1D5AB0170;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v9 + 104))(v11 + v10, *MEMORY[0x1E0CF8168], v8);
  sub_1D5AADD1C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1D588EBB0(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_1D588EBE4()
{
  return swift_deallocObject();
}

uint64_t sub_1D588EBF4(uint64_t a1)
{
  uint64_t v1;

  return sub_1D588E9A0(a1, *(_BYTE *)(v1 + 16));
}

void sub_1D588EBFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CD960)
  {
    sub_1D588EC54();
    v0 = sub_1D5AADA4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CD960);
  }
}

unint64_t sub_1D588EC54()
{
  unint64_t result;

  result = qword_1ED9CDB08;
  if (!qword_1ED9CDB08)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FamilySharingData, &type metadata for FamilySharingData);
    atomic_store(result, (unint64_t *)&qword_1ED9CDB08);
  }
  return result;
}

NewsAnalytics::HeadlineScoringContext_optional __swiftcall HeadlineScoringContext.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::HeadlineScoringContext_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

unint64_t HeadlineScoringContext.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000016;
  if (*v0 == 1)
    v1 = 0x7247756F59726F66;
  if (*v0)
    return v1;
  else
    return 0xD00000000000001ALL;
}

uint64_t sub_1D588ED58(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A381B8(*a1, *a2);
}

unint64_t sub_1D588ED68()
{
  unint64_t result;

  result = qword_1EFF4A9F8;
  if (!qword_1EFF4A9F8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for HeadlineScoringContext, &type metadata for HeadlineScoringContext);
    atomic_store(result, (unint64_t *)&qword_1EFF4A9F8);
  }
  return result;
}

uint64_t sub_1D588EDAC()
{
  return sub_1D5A80950();
}

uint64_t sub_1D588EDB4()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D588EE3C()
{
  return sub_1D5AA99B8();
}

NewsAnalytics::HeadlineScoringContext_optional sub_1D588EE44(Swift::String *a1)
{
  return HeadlineScoringContext.init(rawValue:)(*a1);
}

void sub_1D588EE50(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = 0xD000000000000016;
  v3 = 0xEB0000000070756FLL;
  if (*v1 == 1)
    v2 = 0x7247756F59726F66;
  else
    v3 = 0x80000001D5AEB0E0;
  if (*v1)
  {
    v4 = v3;
  }
  else
  {
    v2 = 0xD00000000000001ALL;
    v4 = 0x80000001D5AEB0B0;
  }
  *a1 = v2;
  a1[1] = v4;
}

uint64_t sub_1D588EEBC()
{
  sub_1D588EF64();
  return sub_1D5AAE928();
}

uint64_t sub_1D588EF18()
{
  sub_1D588EF64();
  return sub_1D5AAE91C();
}

unint64_t sub_1D588EF64()
{
  unint64_t result;

  result = qword_1ED9CED70;
  if (!qword_1ED9CED70)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for HeadlineScoringContext, &type metadata for HeadlineScoringContext);
    atomic_store(result, (unint64_t *)&qword_1ED9CED70);
  }
  return result;
}

NewsAnalytics::DownloadType_optional __swiftcall DownloadType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::DownloadType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t DownloadType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6C61756E616DLL;
  if (*v0 != 1)
    v1 = 1869903201;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D588F050(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A3D2F4(*a1, *a2);
}

unint64_t sub_1D588F060()
{
  unint64_t result;

  result = qword_1EFF4AA00;
  if (!qword_1EFF4AA00)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DownloadType, &type metadata for DownloadType);
    atomic_store(result, (unint64_t *)&qword_1EFF4AA00);
  }
  return result;
}

uint64_t sub_1D588F0A4()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D588F138()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D588F1A8()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::DownloadType_optional sub_1D588F238(Swift::String *a1)
{
  return DownloadType.init(rawValue:)(*a1);
}

void sub_1D588F244(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x6C61756E616DLL;
  if (v2 != 1)
  {
    v5 = 1869903201;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D588F298()
{
  sub_1D588F40C();
  return sub_1D5AAE928();
}

uint64_t sub_1D588F2F4()
{
  sub_1D588F40C();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for DownloadType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D588F38C + 4 * byte_1D5ABE8D9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D588F3C0 + 4 * byte_1D5ABE8D4[v4]))();
}

uint64_t sub_1D588F3C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D588F3C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D588F3D0);
  return result;
}

uint64_t sub_1D588F3DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D588F3E4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D588F3E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D588F3F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DownloadType()
{
  return &type metadata for DownloadType;
}

unint64_t sub_1D588F40C()
{
  unint64_t result;

  result = qword_1EFF4AA08;
  if (!qword_1EFF4AA08)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DownloadType, &type metadata for DownloadType);
    atomic_store(result, (unint64_t *)&qword_1EFF4AA08);
  }
  return result;
}

uint64_t AuxiliaryData.articleIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AuxiliaryData.articleIDs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*AuxiliaryData.articleIDs.modify())()
{
  return nullsub_1;
}

NewsAnalytics::AuxiliaryData __swiftcall AuxiliaryData.init(articleIDs:)(NewsAnalytics::AuxiliaryData articleIDs)
{
  NewsAnalytics::AuxiliaryData *v1;

  v1->articleIDs._rawValue = articleIDs.articleIDs._rawValue;
  return articleIDs;
}

uint64_t sub_1D588F498()
{
  return 0x49656C6369747261;
}

uint64_t sub_1D588F4B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x49656C6369747261 && a2 == 0xEA00000000007344)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D588F554()
{
  sub_1D588F6C8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D588F57C()
{
  sub_1D588F6C8();
  return sub_1D5AAEEE0();
}

uint64_t AuxiliaryData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1D588F864(0, &qword_1ED9CEFC0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D588F6C8();
  sub_1D5AAEEC8();
  v10[1] = v8;
  sub_1D57B4558();
  sub_1D57B5638((unint64_t *)&qword_1ED9CC6B8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D588F6C8()
{
  unint64_t result;

  result = qword_1ED9CEB20;
  if (!qword_1ED9CEB20)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABEB64, &type metadata for AuxiliaryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEB20);
  }
  return result;
}

uint64_t AuxiliaryData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1D588F864(0, &qword_1ED9CEF68, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D588F6C8();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D57B4558();
    sub_1D57B5638((unint64_t *)&qword_1ED9CC6C0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D588F864(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D588F6C8();
    v7 = a3(a1, &type metadata for AuxiliaryData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D588F8C4()
{
  unint64_t result;

  result = qword_1ED9CE550;
  if (!qword_1ED9CE550)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AuxiliaryData, &type metadata for AuxiliaryData);
    atomic_store(result, (unint64_t *)&qword_1ED9CE550);
  }
  return result;
}

uint64_t sub_1D588F90C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return AuxiliaryData.init(from:)(a1, a2);
}

uint64_t sub_1D588F920(_QWORD *a1)
{
  return AuxiliaryData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for AuxiliaryData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D588F974 + 4 * byte_1D5ABE9F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D588F994 + 4 * byte_1D5ABE9F5[v4]))();
}

_BYTE *sub_1D588F974(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D588F994(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D588F99C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D588F9A4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D588F9AC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D588F9B4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AuxiliaryData.CodingKeys()
{
  return &type metadata for AuxiliaryData.CodingKeys;
}

unint64_t sub_1D588F9D4()
{
  unint64_t result;

  result = qword_1EFF4AA10;
  if (!qword_1EFF4AA10)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABEB3C, &type metadata for AuxiliaryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4AA10);
  }
  return result;
}

unint64_t sub_1D588FA1C()
{
  unint64_t result;

  result = qword_1ED9CEB30;
  if (!qword_1ED9CEB30)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABEAAC, &type metadata for AuxiliaryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEB30);
  }
  return result;
}

unint64_t sub_1D588FA64()
{
  unint64_t result;

  result = qword_1ED9CEB28;
  if (!qword_1ED9CEB28)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABEAD4, &type metadata for AuxiliaryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEB28);
  }
  return result;
}

NewsAnalytics::EngagementPlacementOriginationType_optional __swiftcall EngagementPlacementOriginationType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsAnalytics::EngagementPlacementOriginationType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t EngagementPlacementOriginationType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x7972756372656DLL;
  else
    return 0x6D6F6F727377656ELL;
}

uint64_t sub_1D588FB44(char *a1, char *a2)
{
  return sub_1D5A35FF8(*a1, *a2);
}

unint64_t sub_1D588FB54()
{
  unint64_t result;

  result = qword_1EFF4AA18;
  if (!qword_1EFF4AA18)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EngagementPlacementOriginationType, &type metadata for EngagementPlacementOriginationType);
    atomic_store(result, (unint64_t *)&qword_1EFF4AA18);
  }
  return result;
}

uint64_t sub_1D588FB98()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D588FC18()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D588FC74()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::EngagementPlacementOriginationType_optional sub_1D588FCF0(Swift::String *a1)
{
  return EngagementPlacementOriginationType.init(rawValue:)(*a1);
}

void sub_1D588FCFC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6D6F6F727377656ELL;
  if (*v1)
    v2 = 0x7972756372656DLL;
  v3 = 0xE800000000000000;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D588FD3C()
{
  sub_1D588FEB0();
  return sub_1D5AAE928();
}

uint64_t sub_1D588FD98()
{
  sub_1D588FEB0();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for EngagementPlacementOriginationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D588FE30 + 4 * byte_1D5ABEBC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D588FE64 + 4 * byte_1D5ABEBC0[v4]))();
}

uint64_t sub_1D588FE64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D588FE6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D588FE74);
  return result;
}

uint64_t sub_1D588FE80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D588FE88);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D588FE8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D588FE94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EngagementPlacementOriginationType()
{
  return &type metadata for EngagementPlacementOriginationType;
}

unint64_t sub_1D588FEB0()
{
  unint64_t result;

  result = qword_1ED9D1068;
  if (!qword_1ED9D1068)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EngagementPlacementOriginationType, &type metadata for EngagementPlacementOriginationType);
    atomic_store(result, (unint64_t *)&qword_1ED9D1068);
  }
  return result;
}

uint64_t sub_1D588FEF4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D588FF28(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4AA20, MEMORY[0x1E0CF8078]);
}

uint64_t static ArticleDislikeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF470B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4AA20, a1);
}

uint64_t sub_1D588FF68(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4AA38, MEMORY[0x1E0CF8380]);
}

uint64_t static ArticleDislikeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF470C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4AA38, a1);
}

uint64_t ArticleDislikeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t ArticleDislikeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ArticleDislikeEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleDislikeEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleDislikeEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for ArticleDislikeEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CA298);
}

uint64_t ArticleDislikeEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleDislikeEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleDislikeEvent.articleData.modify())()
{
  type metadata accessor for ArticleDislikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleDislikeEvent.actionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleDislikeEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleDislikeEvent.actionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleDislikeEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleDislikeEvent.actionData.modify())()
{
  type metadata accessor for ArticleDislikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleDislikeEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleDislikeEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleDislikeEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleDislikeEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleDislikeEvent.channelData.modify())()
{
  type metadata accessor for ArticleDislikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleDislikeEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleDislikeEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleDislikeEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleDislikeEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleDislikeEvent.feedData.modify())()
{
  type metadata accessor for ArticleDislikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleDislikeEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleDislikeEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleDislikeEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleDislikeEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleDislikeEvent.groupData.modify())()
{
  type metadata accessor for ArticleDislikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleDislikeEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleDislikeEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleDislikeEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleDislikeEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleDislikeEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for ArticleDislikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleDislikeEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleDislikeEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleDislikeEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleDislikeEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleDislikeEvent.issueData.modify())()
{
  type metadata accessor for ArticleDislikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleDislikeEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleDislikeEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleDislikeEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleDislikeEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleDislikeEvent.userChannelContextData.modify())()
{
  type metadata accessor for ArticleDislikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleDislikeEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleDislikeEvent(0) + 52);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleDislikeEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleDislikeEvent(0) + 52);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleDislikeEvent.viewData.modify())()
{
  type metadata accessor for ArticleDislikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleDislikeEvent.articleExposureContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleDislikeEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleDislikeEvent.articleExposureContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleDislikeEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleDislikeEvent.articleExposureContextData.modify())()
{
  type metadata accessor for ArticleDislikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleDislikeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ArticleDislikeEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v12, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v12, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v12, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v12, v25);
}

uint64_t ArticleDislikeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ArticleDislikeEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for ArticleDislikeEvent.Model(0) + 20);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t type metadata accessor for ArticleDislikeEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CA1D8);
}

uint64_t ArticleDislikeEvent.Model.actionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ArticleDislikeEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t ArticleDislikeEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for ArticleDislikeEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleDislikeEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleDislikeEvent.Model(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

_QWORD *ArticleDislikeEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for ArticleDislikeEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 36), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t ArticleDislikeEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for ArticleDislikeEvent.Model(0) + 40));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleDislikeEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleDislikeEvent.Model(0) + 44));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t ArticleDislikeEvent.Model.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = type metadata accessor for ArticleDislikeEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 48));
  v5 = *v4;
  v6 = v4[1];
  LOWORD(v4) = *((_WORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_BYTE *)(a1 + 1) = v6;
  *(_WORD *)(a1 + 2) = (_WORD)v4;
  return result;
}

uint64_t ArticleDislikeEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleDislikeEvent.Model(0) + 52));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t ArticleDislikeEvent.Model.articleExposureContextData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleDislikeEvent.Model(0) + 56));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57E90BC(v4, v5);
}

__n128 ArticleDislikeEvent.Model.init(eventData:articleData:actionData:channelData:feedData:groupData:userBundleSubscriptionContextData:issueData:userChannelContextData:viewData:articleExposureContextData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, __int128 *a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, __int128 *a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t *a11, __int128 *a12)
{
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 result;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  __int128 v49;
  __int16 v50;
  char v51;
  char v52;
  uint64_t v53;
  __n128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  _BYTE v63[23];
  _BYTE v64[144];

  v62 = a2[6];
  *(_OWORD *)v63 = a2[7];
  *(_QWORD *)&v63[15] = *(_QWORD *)((char *)a2 + 127);
  v58 = a2[2];
  v59 = a2[3];
  v60 = a2[4];
  v61 = a2[5];
  v56 = *a2;
  v57 = a2[1];
  v16 = *a3;
  v37 = a4[1];
  v38 = *a4;
  v36 = *((_BYTE *)a4 + 16);
  v17 = *((_BYTE *)a4 + 17);
  v18 = a4[3];
  v35 = a4[4];
  v40 = *a5;
  v39 = *((_QWORD *)a5 + 2);
  sub_1D57DD5B8(a6, (uint64_t)v64);
  v47 = *a7;
  v45 = *((_QWORD *)a7 + 2);
  v46 = *((_QWORD *)a7 + 1);
  v43 = a7[25];
  v44 = a7[24];
  v41 = *((_QWORD *)a7 + 5);
  v42 = *((_QWORD *)a7 + 4);
  LOBYTE(a7) = a7[48];
  v49 = *a8;
  v19 = *((_QWORD *)a8 + 2);
  v20 = *((_QWORD *)a8 + 3);
  v48 = v19;
  v51 = a10[1];
  v52 = *a10;
  v50 = *((_WORD *)a10 + 1);
  v21 = *a11;
  v53 = a11[1];
  v22 = *((_WORD *)a11 + 8);
  v54 = (__n128)a12[1];
  v55 = *a12;
  v23 = *((_QWORD *)a12 + 4);
  v24 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a9, a1, v24);
  v25 = (int *)type metadata accessor for ArticleDislikeEvent.Model(0);
  v26 = a9 + v25[5];
  *(_OWORD *)(v26 + 96) = v62;
  *(_OWORD *)(v26 + 112) = *(_OWORD *)v63;
  *(_QWORD *)(v26 + 127) = *(_QWORD *)&v63[15];
  *(_OWORD *)(v26 + 32) = v58;
  *(_OWORD *)(v26 + 48) = v59;
  *(_OWORD *)(v26 + 64) = v60;
  *(_OWORD *)(v26 + 80) = v61;
  *(_OWORD *)v26 = v56;
  *(_OWORD *)(v26 + 16) = v57;
  *(_BYTE *)(a9 + v25[6]) = v16;
  v27 = a9 + v25[7];
  *(_QWORD *)v27 = v38;
  *(_QWORD *)(v27 + 8) = v37;
  *(_BYTE *)(v27 + 16) = v36;
  *(_BYTE *)(v27 + 17) = v17;
  *(_QWORD *)(v27 + 24) = v18;
  *(_QWORD *)(v27 + 32) = v35;
  v28 = a9 + v25[8];
  *(_OWORD *)v28 = v40;
  *(_QWORD *)(v28 + 16) = v39;
  sub_1D57DD5B8((uint64_t)v64, a9 + v25[9]);
  v29 = a9 + v25[10];
  *(_BYTE *)v29 = v47;
  *(_QWORD *)(v29 + 8) = v46;
  *(_QWORD *)(v29 + 16) = v45;
  *(_BYTE *)(v29 + 24) = v44;
  *(_BYTE *)(v29 + 25) = v43;
  *(_QWORD *)(v29 + 32) = v42;
  *(_QWORD *)(v29 + 40) = v41;
  *(_BYTE *)(v29 + 48) = (_BYTE)a7;
  v30 = a9 + v25[11];
  *(_OWORD *)v30 = v49;
  *(_QWORD *)(v30 + 16) = v48;
  *(_QWORD *)(v30 + 24) = v20;
  v31 = a9 + v25[12];
  *(_BYTE *)v31 = v52;
  *(_BYTE *)(v31 + 1) = v51;
  *(_WORD *)(v31 + 2) = v50;
  v32 = a9 + v25[13];
  *(_QWORD *)v32 = v21;
  *(_QWORD *)(v32 + 8) = v53;
  *(_WORD *)(v32 + 16) = v22;
  v33 = a9 + v25[14];
  result = v54;
  *(_OWORD *)v33 = v55;
  *(__n128 *)(v33 + 16) = v54;
  *(_QWORD *)(v33 + 32) = v23;
  return result;
}

uint64_t sub_1D58912B4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58912EC + 4 * byte_1D5ABECF0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D58912EC()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D589133C()
{
  return 0x6174614464656566;
}

void sub_1D58913A4()
{
  JUMPOUT(0x1D58913B8);
}

unint64_t sub_1D58913C4()
{
  return 0xD000000000000016;
}

uint64_t sub_1D58913E0()
{
  unsigned __int8 *v0;

  return sub_1D58912B4(*v0);
}

uint64_t sub_1D58913E8()
{
  sub_1D58918D0();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5891410()
{
  sub_1D58918D0();
  return sub_1D5AAEEE0();
}

uint64_t ArticleDislikeEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  _OWORD *v29;
  __int128 v30;
  char *v31;
  char v32;
  char v33;
  uint64_t v34;
  __int16 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v40;
  char v41;
  _OWORD v42[2];
  __int128 v43;
  char v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  _BYTE v52[23];
  char v53;
  __int128 v54;
  uint64_t v55;
  char v56;

  v3 = v1;
  sub_1D589217C(0, &qword_1EFF4AA50, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v40 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58918D0();
  sub_1D5AAEEC8();
  v56 = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for ArticleDislikeEvent.Model(0);
    v11 = (__int128 *)(v3 + v10[5]);
    v12 = v11[7];
    v51 = v11[6];
    *(_OWORD *)v52 = v12;
    *(_QWORD *)&v52[15] = *(_QWORD *)((char *)v11 + 127);
    v13 = v11[3];
    v47 = v11[2];
    v48 = v13;
    v14 = v11[5];
    v49 = v11[4];
    v50 = v14;
    v15 = v11[1];
    v45 = *v11;
    v46 = v15;
    LOBYTE(v42[0]) = 1;
    sub_1D57CB940();
    sub_1D5AAED6C();
    LOBYTE(v45) = *(_BYTE *)(v3 + v10[6]);
    LOBYTE(v42[0]) = 2;
    sub_1D57CC038();
    sub_1D5AAED6C();
    v16 = (uint64_t *)(v3 + v10[7]);
    v17 = *v16;
    v18 = v16[1];
    v19 = *((_BYTE *)v16 + 16);
    v20 = *((_BYTE *)v16 + 17);
    v22 = v16[3];
    v21 = v16[4];
    *(_QWORD *)&v45 = v17;
    *((_QWORD *)&v45 + 1) = v18;
    LOBYTE(v46) = v19;
    BYTE1(v46) = v20;
    *((_QWORD *)&v46 + 1) = v22;
    *(_QWORD *)&v47 = v21;
    LOBYTE(v42[0]) = 3;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v23 = (__int128 *)(v3 + v10[8]);
    v24 = *((_QWORD *)v23 + 2);
    v54 = *v23;
    v55 = v24;
    v53 = 4;
    sub_1D57C65D4();
    sub_1D5AAED18();
    sub_1D57DD5B8(v3 + v10[9], (uint64_t)&v45);
    sub_1D57DD5B8((uint64_t)&v45, (uint64_t)v42);
    v41 = 5;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v25 = v3 + v10[10];
    v26 = *(_BYTE *)(v25 + 24);
    v27 = *(_BYTE *)(v25 + 25);
    v28 = *(_BYTE *)(v25 + 48);
    LOBYTE(v42[0]) = *(_BYTE *)v25;
    *(_OWORD *)((char *)v42 + 8) = *(_OWORD *)(v25 + 8);
    BYTE8(v42[1]) = v26;
    BYTE9(v42[1]) = v27;
    v43 = *(_OWORD *)(v25 + 32);
    v44 = v28;
    v41 = 6;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v29 = (_OWORD *)(v3 + v10[11]);
    v30 = v29[1];
    v42[0] = *v29;
    v42[1] = v30;
    v41 = 7;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    v31 = (char *)(v3 + v10[12]);
    v32 = *v31;
    v33 = v31[1];
    LOWORD(v31) = *((_WORD *)v31 + 1);
    LOBYTE(v42[0]) = v32;
    BYTE1(v42[0]) = v33;
    WORD1(v42[0]) = (_WORD)v31;
    v41 = 8;
    sub_1D57C7B24();
    sub_1D5AAED6C();
    v34 = v3 + v10[13];
    v35 = *(_WORD *)(v34 + 16);
    v42[0] = *(_OWORD *)v34;
    LOWORD(v42[1]) = v35;
    v41 = 9;
    sub_1D57C62A4();
    sub_1D5AAED18();
    v36 = v3 + v10[14];
    v37 = *(_QWORD *)(v36 + 32);
    v38 = *(_OWORD *)(v36 + 16);
    v42[0] = *(_OWORD *)v36;
    v42[1] = v38;
    *(_QWORD *)&v43 = v37;
    v41 = 10;
    sub_1D57C71C4();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D58918D0()
{
  unint64_t result;

  result = qword_1EFF4AA58;
  if (!qword_1EFF4AA58)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABF014, &type metadata for ArticleDislikeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4AA58);
  }
  return result;
}

uint64_t ArticleDislikeEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  int *v19;
  char *v20;
  int *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char v35;
  char v36;
  char v37;
  char *v38;
  char *v39;
  __int128 v40;
  char v41;
  __int16 v42;
  char *v43;
  __int16 v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  char *v60;
  char v61;
  _OWORD v62[2];
  __int128 v63;
  char v64;
  _BYTE v65[144];
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _BYTE v73[23];
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  _OWORD v81[3];
  int *v82;

  v54 = a2;
  v4 = sub_1D5AADF98();
  v56 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D589217C(0, &qword_1EFF4AA60, MEMORY[0x1E0DED048]);
  v57 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v52 - v9;
  v82 = (int *)type metadata accessor for ArticleDislikeEvent.Model(0);
  MEMORY[0x1E0C80A78](v82);
  v60 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v58 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1D58918D0();
  v55 = v10;
  sub_1D5AAEEB0();
  if (v2)
  {
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    v59 = v2;
  }
  else
  {
    v53 = v8;
    LOBYTE(v74) = 0;
    sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
    sub_1D5AAECD0();
    v20 = v60;
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v60, v6, v4);
    v65[143] = 1;
    sub_1D57CB8FC();
    sub_1D5AAECD0();
    v21 = v82;
    v22 = &v20[v82[5]];
    v23 = *(_OWORD *)v73;
    *((_OWORD *)v22 + 6) = v72;
    *((_OWORD *)v22 + 7) = v23;
    *(_QWORD *)(v22 + 127) = *(_QWORD *)&v73[15];
    v24 = v69;
    *((_OWORD *)v22 + 2) = v68;
    *((_OWORD *)v22 + 3) = v24;
    v25 = v71;
    *((_OWORD *)v22 + 4) = v70;
    *((_OWORD *)v22 + 5) = v25;
    v26 = v67;
    *(_OWORD *)v22 = v66;
    *((_OWORD *)v22 + 1) = v26;
    v65[0] = 2;
    sub_1D57CBFF4();
    sub_1D5AAECD0();
    v20[v21[6]] = v74;
    v65[0] = 3;
    sub_1D57CB874();
    sub_1D5AAECD0();
    v27 = *((_QWORD *)&v74 + 1);
    v28 = v75;
    v29 = BYTE1(v75);
    v30 = *((_QWORD *)&v75 + 1);
    v31 = v76;
    v32 = &v20[v21[7]];
    *(_QWORD *)v32 = v74;
    *((_QWORD *)v32 + 1) = v27;
    v32[16] = v28;
    v32[17] = v29;
    *((_QWORD *)v32 + 3) = v30;
    *((_QWORD *)v32 + 4) = v31;
    v65[0] = 4;
    sub_1D57C6590();
    sub_1D5AAEC7C();
    v33 = v75;
    v34 = &v20[v21[8]];
    *(_OWORD *)v34 = v74;
    *((_QWORD *)v34 + 2) = v33;
    v65[142] = 5;
    sub_1D57C5FA8();
    sub_1D5AAEC7C();
    sub_1D57DD5B8((uint64_t)&v74, (uint64_t)v65);
    sub_1D57DD5B8((uint64_t)v65, (uint64_t)&v20[v21[9]]);
    v61 = 6;
    sub_1D57C6AF8();
    sub_1D5AAECD0();
    v35 = BYTE8(v62[1]);
    v36 = BYTE9(v62[1]);
    v37 = v64;
    v38 = &v20[v21[10]];
    *v38 = v62[0];
    *(_OWORD *)(v38 + 8) = *(_OWORD *)((char *)v62 + 8);
    v38[24] = v35;
    v38[25] = v36;
    *((_OWORD *)v38 + 2) = v63;
    v38[48] = v37;
    v61 = 7;
    sub_1D57C5ED8();
    sub_1D5AAEC7C();
    v39 = &v20[v21[11]];
    v40 = v62[1];
    *(_OWORD *)v39 = v62[0];
    *((_OWORD *)v39 + 1) = v40;
    v61 = 8;
    sub_1D57C7AE0();
    sub_1D5AAECD0();
    v41 = BYTE1(v62[0]);
    v42 = WORD1(v62[0]);
    v43 = &v20[v21[12]];
    *v43 = v62[0];
    v43[1] = v41;
    *((_WORD *)v43 + 1) = v42;
    v61 = 9;
    sub_1D57C6260();
    sub_1D5AAEC7C();
    v59 = 0;
    v44 = v62[1];
    v45 = &v60[v82[13]];
    *(_OWORD *)v45 = v62[0];
    *((_WORD *)v45 + 8) = v44;
    v61 = 10;
    sub_1D57C7180();
    v46 = v59;
    sub_1D5AAEC7C();
    v59 = v46;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v55, v57);
    if (v46)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
      v47 = v60;
      (*(void (**)(char *, uint64_t))(v56 + 8))(v60, v4);
      v14 = &v47[v82[5]];
      v15 = *((_OWORD *)v14 + 4);
      v79 = *((_OWORD *)v14 + 5);
      v16 = *((_OWORD *)v14 + 7);
      v80 = *((_OWORD *)v14 + 6);
      v81[0] = v16;
      *(_QWORD *)((char *)v81 + 15) = *(_QWORD *)(v14 + 127);
      v17 = *((_OWORD *)v14 + 3);
      v76 = *((_OWORD *)v14 + 2);
      v77 = v17;
      v78 = v15;
      v18 = *((_OWORD *)v14 + 1);
      v74 = *(_OWORD *)v14;
      v75 = v18;
      sub_1D57D5AE0((uint64_t)&v74);
      v19 = v82;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D57DAEDC(*(_QWORD *)&v47[v19[8]], *(_QWORD *)&v47[v19[8] + 8], *(_QWORD *)&v47[v19[8] + 16]);
      sub_1D57DD5B8((uint64_t)&v47[v19[9]], (uint64_t)&v74);
      sub_1D57DE9C8(&v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DEA24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D57EA700(*(_QWORD *)&v47[v19[11]], *(_QWORD *)&v47[v19[11] + 8]);
      return swift_bridgeObjectRelease();
    }
    else
    {
      v48 = v63;
      v49 = (uint64_t)v60;
      v50 = &v60[v82[14]];
      v51 = v62[1];
      *(_OWORD *)v50 = v62[0];
      *((_OWORD *)v50 + 1) = v51;
      *((_QWORD *)v50 + 4) = v48;
      sub_1D58921D8(v49, v54);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
      return sub_1D589221C(v49);
    }
  }
  return result;
}

void sub_1D589217C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58918D0();
    v7 = a3(a1, &type metadata for ArticleDislikeEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58921D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArticleDislikeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D589221C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArticleDislikeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5892258@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleDislikeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D589226C(_QWORD *a1)
{
  return ArticleDislikeEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5892280@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF470B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4AA20, a1);
}

uint64_t sub_1D58922A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF470C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4AA38, a1);
}

uint64_t getEnumTagSinglePayload for ArticleDislikeEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58922D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                      v8 = v22;
                      v12 = *(_QWORD *)(v22 - 8);
                      v13 = a3[14];
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ArticleDislikeEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58925D8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7248, (void (*)(void))sub_1D57C7180, (void (*)(void))sub_1D57C71C4);
                      v10 = v24;
                      v14 = *(_QWORD *)(v24 - 8);
                      v15 = a4[14];
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for ArticleDislikeEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58928E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleDislikeEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5892970(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_1D58929EC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ArticleDislikeEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1D5892B04 + 4 * byte_1D5ABED00[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1D5892B38 + 4 * byte_1D5ABECFB[v4]))();
}

uint64_t sub_1D5892B38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5892B40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5892B48);
  return result;
}

uint64_t sub_1D5892B54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5892B5CLL);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1D5892B60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5892B68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleDislikeEvent.Model.CodingKeys()
{
  return &type metadata for ArticleDislikeEvent.Model.CodingKeys;
}

unint64_t sub_1D5892B88()
{
  unint64_t result;

  result = qword_1EFF4AA68;
  if (!qword_1EFF4AA68)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABEFEC, &type metadata for ArticleDislikeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4AA68);
  }
  return result;
}

unint64_t sub_1D5892BD0()
{
  unint64_t result;

  result = qword_1EFF4AA70;
  if (!qword_1EFF4AA70)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABEF5C, &type metadata for ArticleDislikeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4AA70);
  }
  return result;
}

unint64_t sub_1D5892C18()
{
  unint64_t result;

  result = qword_1EFF4AA78;
  if (!qword_1EFF4AA78)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABEF84, &type metadata for ArticleDislikeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4AA78);
  }
  return result;
}

uint64_t PrivateUserData.userID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PrivateUserData.userID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PrivateUserData.userID.modify())()
{
  return nullsub_1;
}

uint64_t (*PrivateUserData.userType.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5892CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5892FA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5892D08()
{
  sub_1D57A9724();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5892D30()
{
  sub_1D57A9724();
  return sub_1D5AAEEE0();
}

uint64_t PrivateUserData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  char v16;

  sub_1D57A9684(0, &qword_1EFF4AA80, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A9724();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = 0;
  v10 = sub_1D5AAECA0();
  v12 = v11;
  v15 = 1;
  sub_1D5892EF4();
  swift_bridgeObjectRetain();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a2 = v10;
  a2[1] = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1D5892EF4()
{
  unint64_t result;

  result = qword_1EFF4AA88;
  if (!qword_1EFF4AA88)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for PrivateUserType, &type metadata for PrivateUserType);
    atomic_store(result, (unint64_t *)&qword_1EFF4AA88);
  }
  return result;
}

uint64_t sub_1D5892F38@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PrivateUserData.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for PrivateUserData.CodingKeys()
{
  return &type metadata for PrivateUserData.CodingKeys;
}

unint64_t sub_1D5892F60()
{
  unint64_t result;

  result = qword_1EFF4AA90;
  if (!qword_1EFF4AA90)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABF1B8, &type metadata for PrivateUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4AA90);
  }
  return result;
}

uint64_t sub_1D5892FA4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x444972657375 && a2 == 0xE600000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6570795472657375 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D589308C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;
  char v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5AAD968();
  result = sub_1D5AAE058();
  if (result)
  {
    v4 = sub_1D5AAD944();
    result = swift_release();
    *a2 = v4 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D58930FC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  uint64_t *v9;
  void *v10;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB5E4(0, &qword_1ED9CC768);
  result = sub_1D5AAE058();
  if (result)
  {
    v4 = result;
    v5 = type metadata accessor for PrivacyValidationDebugGroupProvider();
    v6 = (_QWORD *)swift_allocObject();
    v6[2] = v4;
    v7 = objc_msgSend((id)swift_unknownObjectRetain(), sel_possiblyUnfetchedAppConfiguration);
    type metadata accessor for DebugPrivacyValidationProvider();
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v7;
    v9 = (uint64_t *)(v8
                   + OBJC_IVAR____TtC13NewsAnalyticsP33_4BAC674B03D5EF9FD60C84EBCE16AA2930DebugPrivacyValidationProvider_privacyValidation);
    v10 = (void *)swift_unknownObjectRetain();
    sub_1D57B59BC(v10, v9);
    swift_unknownObjectRelease();
    result = sub_1D57A84D4(&qword_1EFF4AAB0, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugPrivacyValidationProvider, (uint64_t)&unk_1D5ADAB40);
    v6[3] = v8;
    v6[4] = result;
    a2[3] = v5;
    a2[4] = &off_1E9A48F58;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D589322C()
{
  uint64_t v0;

  type metadata accessor for SessionAccess();
  v0 = swift_allocObject();
  sub_1D5AAD9F8();
  *(_QWORD *)(v0 + 16) = sub_1D5AAD9EC();
  return v0;
}

uint64_t sub_1D5893274(uint64_t a1, uint64_t a2)
{
  if (qword_1ED9CCCD0 != -1)
    swift_once();
  sub_1D57A84D4(&qword_1ED9C8218, a2, (uint64_t (*)(uint64_t))type metadata accessor for TrackerAssembly, (uint64_t)&unk_1D5ABF254);
  return sub_1D5AAD7F4();
}

void sub_1D5893300(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1D5893308(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5AADED8();
  result = sub_1D5AAE058();
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB5E4(0, &qword_1ED9C7008);
  result = sub_1D5AAE058();
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v4 = result;
  sub_1D5AADDD0();
  sub_1D5AADDB8();
  v6 = (void *)sub_1D5AADDAC();
  if (qword_1ED9CCCC0 != -1)
    swift_once();
  sub_1D57A84D4(&qword_1ED9C8218, v5, (uint64_t (*)(uint64_t))type metadata accessor for TrackerAssembly, (uint64_t)&unk_1D5ABF254);
  sub_1D5AAD7F4();
  v7 = (void *)sub_1D5AADDA0();

  if (qword_1ED9CD0B8 != -1)
    swift_once();
  sub_1D5AAD7F4();
  v8 = (void *)sub_1D5AADD88();

  if (qword_1ED9CF0A0 != -1)
    swift_once();
  sub_1D5AAD7F4();
  v9 = sub_1D5AADD94();

  return MEMORY[0x1D82781A4](v3, v4, 0, v9);
}

_QWORD *sub_1D5893534()
{
  type metadata accessor for PortraitEventProcessor();
  swift_allocObject();
  return sub_1D5938578();
}

uint64_t sub_1D5893568(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  _QWORD *v4;
  _BYTE v5[24];
  uint64_t v6;
  _BYTE v7[24];
  uint64_t v8;
  _BYTE v9[24];
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB5E4(0, &qword_1ED9CC768);
  result = sub_1D5AAE058();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB598(0, &qword_1ED9C6F78);
  result = sub_1D5AAE064();
  if (!v10)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB598(0, (unint64_t *)&unk_1ED9C7570);
  result = sub_1D5AAE064();
  if (!v8)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB598(0, &qword_1ED9C7580);
  result = sub_1D5AAE064();
  if (v6)
  {
    type metadata accessor for ExternalAnalyticsEventProcessor();
    v4 = (_QWORD *)swift_allocObject();
    v4[19] = 0;
    v4[20] = 0;
    v4[18] = 0;
    v4[2] = v3;
    sub_1D57B6254((uint64_t)v9, (uint64_t)(v4 + 3));
    sub_1D57B6254((uint64_t)v7, (uint64_t)(v4 + 8));
    sub_1D57B6254((uint64_t)v5, (uint64_t)(v4 + 13));
    swift_unknownObjectRetain();
    sub_1D5A1D240();
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    return (uint64_t)v4;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1D5893748@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = sub_1D5AAD908();
  swift_allocObject();
  result = sub_1D5AAD8FC();
  v4 = MEMORY[0x1E0CF7EE0];
  a1[3] = v2;
  a1[4] = v4;
  *a1 = result;
  return result;
}

uint64_t sub_1D589379C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t started;
  uint64_t v4;
  uint64_t ItemsGenerator;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  sub_1D5894224(0, &qword_1ED9CCA10, &qword_1ED9C7588, (uint64_t)&protocol descriptor for ExternalAnalyticsQueryItemsGeneratorType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1D5ABD090;
  started = type metadata accessor for AppSessionStartEventQueryItemsGenerator();
  v4 = swift_allocObject();
  *(_QWORD *)(v2 + 56) = started;
  *(_QWORD *)(v2 + 64) = &off_1E9A42FB0;
  *(_QWORD *)(v2 + 32) = v4;
  ItemsGenerator = type metadata accessor for FeedViewEventQueryItemsGenerator();
  v6 = swift_allocObject();
  *(_QWORD *)(v2 + 96) = ItemsGenerator;
  *(_QWORD *)(v2 + 104) = &off_1E9A2CB18;
  *(_QWORD *)(v2 + 72) = v6;
  v7 = type metadata accessor for ArticleViewEventQueryItemsGenerator();
  v8 = swift_allocObject();
  *(_QWORD *)(v2 + 136) = v7;
  *(_QWORD *)(v2 + 144) = &off_1E9A450D0;
  *(_QWORD *)(v2 + 112) = v8;
  v9 = type metadata accessor for MediaEngageEventQueryItemsGenerator();
  v10 = swift_allocObject();
  *(_QWORD *)(v2 + 176) = v9;
  *(_QWORD *)(v2 + 184) = &off_1E9A47B18;
  *(_QWORD *)(v2 + 152) = v10;
  v11 = type metadata accessor for MediaEngageCompletedEventQueryItemsGenerator();
  v12 = swift_allocObject();
  *(_QWORD *)(v2 + 216) = v11;
  *(_QWORD *)(v2 + 224) = &off_1E9A52968;
  *(_QWORD *)(v2 + 192) = v12;
  v13 = type metadata accessor for ExternalAnalyticsURLProvider();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v2;
  a1[3] = v13;
  a1[4] = (uint64_t)&protocol witness table for ExternalAnalyticsURLProvider;
  *a1 = result;
  return result;
}

uint64_t sub_1D58938F8(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57BB598(0, &qword_1ED9CE0F8);
  result = sub_1D5AAE064();
  if (v4)
  {
    type metadata accessor for SharedItemEventProcessor();
    v2 = swift_allocObject();
    sub_1D5AAE004();
    swift_allocObject();
    *(_QWORD *)(v2 + 56) = sub_1D5AADFF8();
    sub_1D57ADBD0(&v3, v2 + 16);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D58939B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1D5893274(a1, v1);
}

uint64_t sub_1D58939BC(_QWORD *a1)
{
  return sub_1D5893308(a1);
}

uint64_t sub_1D58939C4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

char *sub_1D58939E8(uint64_t a1, uint64_t a2, void *a3, void *a4, char a5, void *a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, _BYTE *a13)
{
  uint64_t v19;
  _BYTE *v20;
  _QWORD *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  char *v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  char *result;
  id v40;
  void *v41;
  id v42;
  void *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  objc_class *ObjectType;
  char *v55;
  __int128 v57[2];
  objc_super v58;

  ObjectType = (objc_class *)swift_getObjectType();
  a13[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_sessionStartSource] = 4;
  v19 = OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_sessionURLManager;
  sub_1D57B1F4C(0, &qword_1ED9D0C00, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6EB0], MEMORY[0x1E0DB3F60]);
  swift_allocObject();
  v20 = a13;
  *(_QWORD *)&a13[v19] = sub_1D5AAE1C0();
  swift_unknownObjectWeakInit();
  v21 = &v20[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_sceneSessionIdentifier];
  *v21 = 0;
  v21[1] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_sessionManager] = a1;
  v52 = a2;
  sub_1D57B6254(a2, (uint64_t)&v20[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_aggregateStateModeProvider]);
  swift_retain();
  *(_QWORD *)&v20[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_tracker] = sub_1D5AADBF0();
  *(_QWORD *)&v20[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_cloudContext] = a3;
  *(_QWORD *)&v20[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_client] = a4;
  *(_QWORD *)&v20[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_fsidProvider] = a6;
  v20[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_kind] = a5;
  v22 = a3;
  v23 = a4;
  v24 = a6;
  v25 = objc_msgSend(v22, sel_userInfo);
  v26 = objc_msgSend(v25, sel_onboardingVersionNumber);

  if (!v26)
  {
    sub_1D57B663C(0, (unint64_t *)&qword_1ED9CC7A0);
    v26 = (id)sub_1D5AAEA90();
  }
  *(_QWORD *)&v20[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_onboardingVersion] = v26;
  sub_1D57BCF08(a7, (uint64_t)&v20[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_appExtensionCommunicator]);
  sub_1D57B6254(a9, (uint64_t)&v20[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_tabiDataProvider]);
  sub_1D57B6254(a10, (uint64_t)&v20[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_liveActivityCountDataProvider]);
  sub_1D57B6254(a11, (uint64_t)&v20[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_userEmbeddingDataProvider]);

  v58.receiver = v20;
  v58.super_class = ObjectType;
  v27 = objc_msgSendSuper2(&v58, sel_init);
  type metadata accessor for SessionObserverURLHandler();
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = a1;
  *(_QWORD *)&v57[0] = v28;
  sub_1D57A84D4((unint64_t *)&unk_1ED9D0870, 255, (uint64_t (*)(uint64_t))type metadata accessor for SessionObserverURLHandler, (uint64_t)&unk_1D5ACE06C);
  swift_retain();
  v29 = v27;
  sub_1D5AAE1B4();
  swift_release();
  *(_QWORD *)(swift_allocObject() + 16) = v29;
  v30 = v29;
  sub_1D5AADB9C();
  swift_release();
  sub_1D57BCFA8();
  *(_QWORD *)(swift_allocObject() + 16) = v30;
  v31 = (char *)v30;
  sub_1D5AADB9C();
  swift_release();
  v32 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  objc_msgSend(v32, sel_beginGeneratingDeviceOrientationNotifications);

  sub_1D57BBBE8();
  v33 = (void *)objc_opt_self();
  v34 = objc_msgSend(v33, sel_defaultCenter);
  objc_msgSend(v34, sel_addObserver_selector_name_object_, v31, sel_pushOrientationData, *MEMORY[0x1E0DC4960], 0);

  sub_1D57C04C0();
  sub_1D57B64C0(0, objc_msgSend(a8, sel_sportsOnboardingState) == (id)1);
  sub_1D5AADBF0();
  v35 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = v35;
  *(_QWORD *)(v36 + 24) = a8;
  swift_retain();
  v55 = a8;
  sub_1D5AADF20();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1D57BFA4C();
  sub_1D5AADBF0();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1D5AADF20();
  swift_release();
  swift_release();
  swift_release_n();
  sub_1D57BC4D0();
  v37 = objc_msgSend(v33, sel_defaultCenter);
  objc_msgSend(v37, sel_addObserver_selector_name_object_, v31, sel_pushUserSubscriptionContextData, *MEMORY[0x1E0D58730], 0);

  v38 = objc_msgSend(v33, sel_defaultCenter);
  objc_msgSend(v38, sel_addObserver_selector_name_object_, v31, sel_pushUserSubscriptionContextData, *MEMORY[0x1E0D58750], 0);

  sub_1D57BBF64();
  sub_1D57BDCA4();
  SessionObserver.pushNotificationSettingsData()();
  result = (char *)objc_msgSend(*(id *)&v31[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_cloudContext], sel_newsletterManager);
  if (result)
  {
    objc_msgSend(result, sel_addObserver_, v31);
    swift_unknownObjectRelease();
    v40 = objc_msgSend(v33, sel_defaultCenter);
    v41 = (void *)sub_1D5AAE7FC();
    objc_msgSend(v40, (SEL)0x1E9A5EF48, v31, sel_offerDidChange_, v41, 0);

    sub_1D57BDB94();
    v42 = objc_msgSend(v33, (SEL)0x1E9A5ED7FLL);
    v43 = (void *)sub_1D5AAE7FC();
    objc_msgSend(v42, (SEL)0x1E9A5EF48, v31, sel_familySharingStatusDidChange_, v43, 0);

    *(_QWORD *)(swift_allocObject() + 16) = v31;
    v44 = v31;
    sub_1D5AADB9C();
    swift_release();
    sub_1D57BF678();
    if (a5)
    {
      v49 = a9;
      v48 = a7;
      v50 = v52;
      v51 = a10;
      v47 = v55;
    }
    else
    {
      sub_1D57B6254(a12, (uint64_t)v57);
      v45 = swift_allocObject();
      sub_1D57ADBD0(v57, v45 + 16);
      sub_1D5AADF20();
      swift_release();
      v46 = v44;
      sub_1D5AADC08();

      swift_release();
      v47 = v46;
      v49 = a9;
      v48 = a7;
      v50 = v52;
      v51 = a10;
    }

    __swift_destroy_boxed_opaque_existential_1(a12);
    __swift_destroy_boxed_opaque_existential_1(a11);
    __swift_destroy_boxed_opaque_existential_1(v51);
    __swift_destroy_boxed_opaque_existential_1(v49);
    sub_1D57BCEB4(v48);
    __swift_destroy_boxed_opaque_existential_1(v50);
    return v44;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1D5894224(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1D57BB598(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1D5894288()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D58942AC()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1D58942D8()
{
  uint64_t v0;

  return swift_deallocObject();
}

unint64_t sub_1D5894308()
{
  unint64_t result;

  result = qword_1ED9C7860;
  if (!qword_1ED9C7860)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ReferralData, &type metadata for ReferralData);
    atomic_store(result, (unint64_t *)&qword_1ED9C7860);
  }
  return result;
}

uint64_t SubscribedTagListData.tagIDs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*SubscribedTagListData.tagIDs.modify())()
{
  return nullsub_1;
}

NewsAnalytics::SubscribedTagListData __swiftcall SubscribedTagListData.init(tagIDs:)(NewsAnalytics::SubscribedTagListData tagIDs)
{
  NewsAnalytics::SubscribedTagListData *v1;

  v1->tagIDs._rawValue = tagIDs.tagIDs._rawValue;
  return tagIDs;
}

uint64_t sub_1D589438C()
{
  sub_1D57ADAA8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58943B4()
{
  sub_1D57ADAA8();
  return sub_1D5AAEEE0();
}

ValueMetadata *type metadata accessor for SubscribedTagListData.CodingKeys()
{
  return &type metadata for SubscribedTagListData.CodingKeys;
}

unint64_t sub_1D58943F8()
{
  unint64_t result;

  result = qword_1EFF4AAB8;
  if (!qword_1EFF4AAB8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABF414, &type metadata for SubscribedTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4AAB8);
  }
  return result;
}

uint64_t dispatch thunk of AgreedToTermsAndConditionsProvider.agreedToTermsAndConditions()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t SubscribedSportsListData.sportsList.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SubscribedSportsListData.sportsList.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*SubscribedSportsListData.sportsList.modify())()
{
  return nullsub_1;
}

NewsAnalytics::SubscribedSportsListData __swiftcall SubscribedSportsListData.init(sportsList:)(NewsAnalytics::SubscribedSportsListData sportsList)
{
  NewsAnalytics::SubscribedSportsListData *v1;

  v1->sportsList._rawValue = sportsList.sportsList._rawValue;
  return sportsList;
}

uint64_t sub_1D589448C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x694C7374726F7073 && a2 == 0xEA00000000007473)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D589452C()
{
  sub_1D57AB5BC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5894554()
{
  sub_1D57AB5BC();
  return sub_1D5AAEEE0();
}

ValueMetadata *type metadata accessor for SubscribedSportsListData.CodingKeys()
{
  return &type metadata for SubscribedSportsListData.CodingKeys;
}

unint64_t sub_1D5894590()
{
  unint64_t result;

  result = qword_1EFF4AAC0;
  if (!qword_1EFF4AAC0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABF614, &type metadata for SubscribedSportsListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4AAC0);
  }
  return result;
}

uint64_t sub_1D58945DC()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SessionAccess()
{
  return objc_opt_self();
}

NewsAnalytics::FeedGroupLayoutPath_optional __swiftcall FeedGroupLayoutPath.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::FeedGroupLayoutPath_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FeedGroupLayoutPath.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1953718630;
  if (*v0 != 1)
    v1 = 0x6568636163;
  if (*v0)
    return v1;
  else
    return 2003790963;
}

uint64_t sub_1D58946C0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A39B14(*a1, *a2);
}

unint64_t sub_1D58946D0()
{
  unint64_t result;

  result = qword_1EFF4AB68;
  if (!qword_1EFF4AB68)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedGroupLayoutPath, &type metadata for FeedGroupLayoutPath);
    atomic_store(result, (unint64_t *)&qword_1EFF4AB68);
  }
  return result;
}

uint64_t sub_1D5894714()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D58947A0()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5894808()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::FeedGroupLayoutPath_optional sub_1D5894890(Swift::String *a1)
{
  return FeedGroupLayoutPath.init(rawValue:)(*a1);
}

uint64_t sub_1D589489C()
{
  sub_1D579EC14();
  return sub_1D5AAE928();
}

uint64_t storeEnumTagSinglePayload for FeedGroupLayoutPath(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5894944 + 4 * byte_1D5ABF6B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5894978 + 4 * asc_1D5ABF6B0[v4]))();
}

uint64_t sub_1D5894978(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5894980(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5894988);
  return result;
}

uint64_t sub_1D5894994(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D589499CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D58949A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58949A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

NewsAnalytics::EmailShareUserActionType_optional __swiftcall EmailShareUserActionType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::EmailShareUserActionType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t EmailShareUserActionType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5894A3C + 4 * byte_1D5ABF7D0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5894A3C()
{
  return 0x6572616873;
}

uint64_t sub_1D5894A50()
{
  return 0x6C65636E6163;
}

uint64_t sub_1D5894A64()
{
  return 0x6E6564646968;
}

void sub_1D5894A78(char *a1)
{
  sub_1D5A374C4(*a1);
}

unint64_t sub_1D5894A88()
{
  unint64_t result;

  result = qword_1EFF4AB70;
  if (!qword_1EFF4AB70)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EmailShareUserActionType, &type metadata for EmailShareUserActionType);
    atomic_store(result, (unint64_t *)&qword_1EFF4AB70);
  }
  return result;
}

void sub_1D5894ACC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5894B18()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5894B7C()
{
  __asm { BR              X10 }
}

uint64_t sub_1D5894BB8()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5894C08()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5894C50()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::EmailShareUserActionType_optional sub_1D5894CB4(Swift::String *a1)
{
  return EmailShareUserActionType.init(rawValue:)(*a1);
}

uint64_t sub_1D5894CC0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D5894CF0 + 4 * byte_1D5ABF7E0[*v0]))();
}

void sub_1D5894CF0(_QWORD *a1@<X8>)
{
  *a1 = 0x6572616873;
  a1[1] = 0xE500000000000000;
}

void sub_1D5894D08(_QWORD *a1@<X8>)
{
  *a1 = 0x6C65636E6163;
  a1[1] = 0xE600000000000000;
}

void sub_1D5894D20(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6564646968;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1D5894D38()
{
  sub_1D5894EAC();
  return sub_1D5AAE928();
}

uint64_t sub_1D5894D94()
{
  sub_1D5894EAC();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for EmailShareUserActionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D5894E2C + 4 * byte_1D5ABF7E9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D5894E60 + 4 * byte_1D5ABF7E4[v4]))();
}

uint64_t sub_1D5894E60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5894E68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5894E70);
  return result;
}

uint64_t sub_1D5894E7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5894E84);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D5894E88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5894E90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmailShareUserActionType()
{
  return &type metadata for EmailShareUserActionType;
}

unint64_t sub_1D5894EAC()
{
  unint64_t result;

  result = qword_1EFF4AB78;
  if (!qword_1EFF4AB78)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EmailShareUserActionType, &type metadata for EmailShareUserActionType);
    atomic_store(result, (unint64_t *)&qword_1EFF4AB78);
  }
  return result;
}

uint64_t SectionData.sectionID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SectionData.sectionID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SectionData.sectionID.modify())()
{
  return nullsub_1;
}

uint64_t SectionData.sectionItemCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t SectionData.sectionItemCount.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*SectionData.sectionItemCount.modify())()
{
  return nullsub_1;
}

uint64_t SectionData.init(sectionID:sectionItemCount:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_BYTE *)(a5 + 24) = a4 & 1;
  return result;
}

uint64_t sub_1D5894FA0()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0x496E6F6974636573;
}

uint64_t sub_1D5894FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D589560C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5895008()
{
  sub_1D5895194();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5895030()
{
  sub_1D5895194();
  return sub_1D5AAEEE0();
}

uint64_t SectionData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  int v11;
  char v12;
  char v13;

  sub_1D5895370(0, &qword_1ED9CE748, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v10[0] = *(_QWORD *)(v1 + 16);
  v11 = *(unsigned __int8 *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5895194();
  sub_1D5AAEEC8();
  v13 = 0;
  v8 = v10[1];
  sub_1D5AAED3C();
  if (!v8)
  {
    v12 = 1;
    sub_1D5AAED30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5895194()
{
  unint64_t result;

  result = qword_1ED9CF230;
  if (!qword_1ED9CF230)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABFA94, &type metadata for SectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CF230);
  }
  return result;
}

uint64_t SectionData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  char v16;
  uint64_t v18;
  char v19;
  char v20;

  sub_1D5895370(0, &qword_1ED9D0CC8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5895194();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = 0;
  v10 = sub_1D5AAECA0();
  v12 = v11;
  v19 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1D5AAEC94();
  v14 = v9;
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v13;
  *(_BYTE *)(a2 + 24) = v16 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1D5895370(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5895194();
    v7 = a3(a1, &type metadata for SectionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58953D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SectionData.init(from:)(a1, a2);
}

uint64_t sub_1D58953E8(_QWORD *a1)
{
  return SectionData.encode(to:)(a1);
}

uint64_t assignWithCopy for SectionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

ValueMetadata *type metadata accessor for SectionData()
{
  return &type metadata for SectionData;
}

uint64_t storeEnumTagSinglePayload for SectionData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D58954B4 + 4 * byte_1D5ABF921[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D58954E8 + 4 * byte_1D5ABF91C[v4]))();
}

uint64_t sub_1D58954E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58954F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58954F8);
  return result;
}

uint64_t sub_1D5895504(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D589550CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5895510(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5895518(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SectionData.CodingKeys()
{
  return &type metadata for SectionData.CodingKeys;
}

unint64_t sub_1D5895538()
{
  unint64_t result;

  result = qword_1EFF4AB80;
  if (!qword_1EFF4AB80)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABFA6C, &type metadata for SectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4AB80);
  }
  return result;
}

unint64_t sub_1D5895580()
{
  unint64_t result;

  result = qword_1ED9CF240;
  if (!qword_1ED9CF240)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABF9DC, &type metadata for SectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CF240);
  }
  return result;
}

unint64_t sub_1D58955C8()
{
  unint64_t result;

  result = qword_1ED9CF238;
  if (!qword_1ED9CF238)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABFA04, &type metadata for SectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CF238);
  }
  return result;
}

uint64_t sub_1D589560C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x496E6F6974636573 && a2 == 0xE900000000000044;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AEE6A0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t ScoringValueDistribution.min.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t ScoringValueDistribution.min.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*ScoringValueDistribution.min.modify())()
{
  return nullsub_1;
}

uint64_t ScoringValueDistribution.max.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ScoringValueDistribution.max.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*ScoringValueDistribution.max.modify())()
{
  return nullsub_1;
}

uint64_t ScoringValueDistribution.mean.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t ScoringValueDistribution.mean.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = result;
  *(_BYTE *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t (*ScoringValueDistribution.mean.modify())()
{
  return nullsub_1;
}

uint64_t ScoringValueDistribution.median.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t ScoringValueDistribution.median.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = result;
  *(_BYTE *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t (*ScoringValueDistribution.median.modify())()
{
  return nullsub_1;
}

uint64_t ScoringValueDistribution.variance.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t ScoringValueDistribution.variance.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = result;
  *(_BYTE *)(v2 + 72) = a2 & 1;
  return result;
}

uint64_t (*ScoringValueDistribution.variance.modify())()
{
  return nullsub_1;
}

void __swiftcall ScoringValueDistribution.init(min:max:mean:median:variance:)(NewsAnalytics::ScoringValueDistribution *__return_ptr retstr, Swift::Double_optional min, Swift::Double_optional max, Swift::Double_optional mean, Swift::Double_optional median, Swift::Double_optional variance)
{
  char v6;
  Swift::Double v7;
  char v8;
  Swift::Double v9;
  char v10;

  retstr->min.value = *(Swift::Double *)&min.is_nil;
  retstr->min.is_nil = max.is_nil;
  retstr->max.value = *(Swift::Double *)&mean.is_nil;
  retstr->max.is_nil = median.is_nil;
  retstr->mean.value = *(Swift::Double *)&variance.is_nil;
  retstr->mean.is_nil = v6 & 1;
  retstr->median.value = v7;
  retstr->median.is_nil = v8 & 1;
  retstr->variance.value = v9;
  retstr->variance.is_nil = v10 & 1;
}

uint64_t sub_1D5895828()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5895850 + 4 * byte_1D5ABFAF0[*v0]))(7235949, 0xE300000000000000);
}

uint64_t sub_1D5895850()
{
  return 7889261;
}

uint64_t sub_1D589585C()
{
  return 1851876717;
}

uint64_t sub_1D589586C()
{
  return 0x6E616964656DLL;
}

uint64_t sub_1D5895880()
{
  return 0x65636E6169726176;
}

uint64_t sub_1D5895898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58960D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58958BC()
{
  sub_1D5895B10();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58958E4()
{
  sub_1D5895B10();
  return sub_1D5AAEEE0();
}

uint64_t ScoringValueDistribution.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _DWORD v10[4];
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;

  sub_1D5895D84(0, &qword_1ED9CF018, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v17 = *(_QWORD *)(v1 + 16);
  v16 = *(unsigned __int8 *)(v1 + 24);
  v15 = *(_QWORD *)(v1 + 32);
  v14 = *(unsigned __int8 *)(v1 + 40);
  v13 = *(_QWORD *)(v1 + 48);
  v12 = *(unsigned __int8 *)(v1 + 56);
  v11 = *(_QWORD *)(v1 + 64);
  v10[3] = *(unsigned __int8 *)(v1 + 72);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5895B10();
  sub_1D5AAEEC8();
  v23 = 0;
  v8 = v18;
  sub_1D5AAED0C();
  if (!v8)
  {
    v22 = 1;
    sub_1D5AAED0C();
    v21 = 2;
    sub_1D5AAED0C();
    v20 = 3;
    sub_1D5AAED0C();
    v19 = 4;
    sub_1D5AAED0C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5895B10()
{
  unint64_t result;

  result = qword_1ED9CEDE8;
  if (!qword_1ED9CEDE8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABFC8C, &type metadata for ScoringValueDistribution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEDE8);
  }
  return result;
}

uint64_t ScoringValueDistribution.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  char *v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;

  sub_1D5895D84(0, &qword_1EFF4AB88, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5895B10();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v34 = 0;
    v10 = sub_1D5AAEC70();
    v12 = v11;
    v33 = 1;
    v13 = sub_1D5AAEC70();
    v28 = v14;
    v29 = v13;
    v32 = 2;
    v15 = sub_1D5AAEC70();
    v26 = v16;
    v27 = v15;
    v31 = 3;
    v17 = sub_1D5AAEC70();
    HIDWORD(v24) = v18;
    v25 = v17;
    v30 = 4;
    v20 = sub_1D5AAEC70();
    v21 = v9;
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v21, v6);
    *(_QWORD *)a2 = v10;
    *(_BYTE *)(a2 + 8) = v12 & 1;
    *(_QWORD *)(a2 + 16) = v29;
    *(_BYTE *)(a2 + 24) = v28 & 1;
    *(_QWORD *)(a2 + 32) = v27;
    *(_BYTE *)(a2 + 40) = v26 & 1;
    *(_QWORD *)(a2 + 48) = v25;
    *(_BYTE *)(a2 + 56) = BYTE4(v24) & 1;
    *(_QWORD *)(a2 + 64) = v20;
    *(_BYTE *)(a2 + 72) = v23 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5895D84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5895B10();
    v7 = a3(a1, &type metadata for ScoringValueDistribution.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5895DE4()
{
  unint64_t result;

  result = qword_1EFF4AB90;
  if (!qword_1EFF4AB90)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ScoringValueDistribution, &type metadata for ScoringValueDistribution);
    atomic_store(result, (unint64_t *)&qword_1EFF4AB90);
  }
  return result;
}

unint64_t sub_1D5895E2C()
{
  unint64_t result;

  result = qword_1ED9CEE00;
  if (!qword_1ED9CEE00)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ScoringValueDistribution, &type metadata for ScoringValueDistribution);
    atomic_store(result, (unint64_t *)&qword_1ED9CEE00);
  }
  return result;
}

uint64_t sub_1D5895E70@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ScoringValueDistribution.init(from:)(a1, a2);
}

uint64_t sub_1D5895E84(_QWORD *a1)
{
  return ScoringValueDistribution.encode(to:)(a1);
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ScoringValueDistribution(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 73))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ScoringValueDistribution(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 73) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ScoringValueDistribution()
{
  return &type metadata for ScoringValueDistribution;
}

uint64_t storeEnumTagSinglePayload for ScoringValueDistribution.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D5895F78 + 4 * byte_1D5ABFAFA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5895FAC + 4 * byte_1D5ABFAF5[v4]))();
}

uint64_t sub_1D5895FAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5895FB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5895FBCLL);
  return result;
}

uint64_t sub_1D5895FC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5895FD0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5895FD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5895FDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScoringValueDistribution.CodingKeys()
{
  return &type metadata for ScoringValueDistribution.CodingKeys;
}

unint64_t sub_1D5895FFC()
{
  unint64_t result;

  result = qword_1EFF4AB98;
  if (!qword_1EFF4AB98)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABFC64, &type metadata for ScoringValueDistribution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4AB98);
  }
  return result;
}

unint64_t sub_1D5896044()
{
  unint64_t result;

  result = qword_1ED9CEDF8;
  if (!qword_1ED9CEDF8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABFBD4, &type metadata for ScoringValueDistribution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEDF8);
  }
  return result;
}

unint64_t sub_1D589608C()
{
  unint64_t result;

  result = qword_1ED9CEDF0;
  if (!qword_1ED9CEDF0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABFBFC, &type metadata for ScoringValueDistribution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEDF0);
  }
  return result;
}

uint64_t sub_1D58960D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7235949 && a2 == 0xE300000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7889261 && a2 == 0xE300000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1851876717 && a2 == 0xE400000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E616964656DLL && a2 == 0xE600000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65636E6169726176 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

float ScoreData.personalizationScore.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void ScoreData.personalizationScore.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t (*ScoreData.personalizationScore.modify())()
{
  return nullsub_1;
}

float ScoreData.postPolicyPersonalizationScore.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 4);
}

void ScoreData.postPolicyPersonalizationScore.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 4) = a1;
}

uint64_t (*ScoreData.postPolicyPersonalizationScore.modify())()
{
  return nullsub_1;
}

NewsAnalytics::ScoreData __swiftcall ScoreData.init(personalizationScore:postPolicyPersonalizationScore:)(Swift::Float personalizationScore, Swift::Float postPolicyPersonalizationScore)
{
  Swift::Float *v2;
  NewsAnalytics::ScoreData result;

  *v2 = personalizationScore;
  v2[1] = postPolicyPersonalizationScore;
  result.postPolicyPersonalizationScore = postPolicyPersonalizationScore;
  result.personalizationScore = personalizationScore;
  return result;
}

unint64_t sub_1D58962FC()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001ELL;
  else
    return 0xD000000000000014;
}

uint64_t sub_1D5896340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5896908(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5896364()
{
  sub_1D58964D8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D589638C()
{
  sub_1D58964D8();
  return sub_1D5AAEEE0();
}

uint64_t ScoreData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1D5896674(0, (unint64_t *)&unk_1ED9CF040, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58964D8();
  sub_1D5AAEEC8();
  v9[15] = 0;
  sub_1D5AAED60();
  if (!v1)
  {
    v9[14] = 1;
    sub_1D5AAED60();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D58964D8()
{
  unint64_t result;

  result = qword_1ED9CEEE8;
  if (!qword_1ED9CEEE8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABFE50, &type metadata for ScoreData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEEE8);
  }
  return result;
}

uint64_t ScoreData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  int v13;
  int v14;
  uint64_t v15;
  char v16;
  char v17;

  sub_1D5896674(0, &qword_1ED9CEFA8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58964D8();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v17 = 0;
    sub_1D5AAECC4();
    v11 = v10;
    v16 = 1;
    sub_1D5AAECC4();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11;
    a2[1] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5896674(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58964D8();
    v7 = a3(a1, &type metadata for ScoreData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58966D8@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return ScoreData.init(from:)(a1, a2);
}

uint64_t sub_1D58966EC(_QWORD *a1)
{
  return ScoreData.encode(to:)(a1);
}

_QWORD *__swift_memcpy8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ScoreData(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ScoreData(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ScoreData()
{
  return &type metadata for ScoreData;
}

uint64_t storeEnumTagSinglePayload for ScoreData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D58967B0 + 4 * byte_1D5ABFCE1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D58967E4 + 4 * byte_1D5ABFCDC[v4]))();
}

uint64_t sub_1D58967E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58967EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58967F4);
  return result;
}

uint64_t sub_1D5896800(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5896808);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D589680C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5896814(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScoreData.CodingKeys()
{
  return &type metadata for ScoreData.CodingKeys;
}

unint64_t sub_1D5896834()
{
  unint64_t result;

  result = qword_1EFF4ABA0;
  if (!qword_1EFF4ABA0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABFE28, &type metadata for ScoreData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4ABA0);
  }
  return result;
}

unint64_t sub_1D589687C()
{
  unint64_t result;

  result = qword_1ED9CE4E8;
  if (!qword_1ED9CE4E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABFD98, &type metadata for ScoreData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CE4E8);
  }
  return result;
}

unint64_t sub_1D58968C4()
{
  unint64_t result;

  result = qword_1ED9CEEF0;
  if (!qword_1ED9CEEF0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5ABFDC0, &type metadata for ScoreData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEEF0);
  }
  return result;
}

uint64_t sub_1D5896908(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AEE6C0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001D5AEE6E0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

NewsAnalytics::FollowingType_optional __swiftcall FollowingType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::FollowingType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FollowingType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5896A78 + 4 * byte_1D5ABFEA0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5896A78()
{
  return 0x6E69776F6C6C6F66;
}

void sub_1D5896ADC()
{
  JUMPOUT(0x1D5896AF0);
}

void sub_1D5896AFC(char *a1)
{
  sub_1D5A3C9A4(*a1);
}

unint64_t sub_1D5896B0C()
{
  unint64_t result;

  result = qword_1EFF4ABA8;
  if (!qword_1EFF4ABA8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FollowingType, &type metadata for FollowingType);
    atomic_store(result, (unint64_t *)&qword_1EFF4ABA8);
  }
  return result;
}

void sub_1D5896B50()
{
  char *v0;

  sub_1D5A809FC(*v0);
}

void sub_1D5896B58(uint64_t a1)
{
  char *v1;

  sub_1D5AA8B48(a1, *v1);
}

void sub_1D5896B60(uint64_t a1)
{
  char *v1;

  sub_1D5AA8F30(a1, *v1);
}

NewsAnalytics::FollowingType_optional sub_1D5896B68(Swift::String *a1)
{
  return FollowingType.init(rawValue:)(*a1);
}

uint64_t sub_1D5896B74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FollowingType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D5896B98()
{
  sub_1D5896CFC();
  return sub_1D5AAE928();
}

uint64_t sub_1D5896BF4()
{
  sub_1D5896CFC();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for FollowingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D5896C8C + 4 * byte_1D5ABFEAB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D5896CC0 + 4 * byte_1D5ABFEA6[v4]))();
}

uint64_t sub_1D5896CC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5896CC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5896CD0);
  return result;
}

uint64_t sub_1D5896CDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5896CE4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D5896CE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5896CF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1D5896CFC()
{
  unint64_t result;

  result = qword_1ED9D0E28;
  if (!qword_1ED9D0E28)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FollowingType, &type metadata for FollowingType);
    atomic_store(result, (unint64_t *)&qword_1ED9D0E28);
  }
  return result;
}

NewsAnalytics::UserType_optional __swiftcall UserType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::UserType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t UserType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 7824750;
  if (*v0 != 1)
    v1 = 0x6E696E7275746572;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1D5896DF0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A35588(*a1, *a2);
}

unint64_t sub_1D5896E00()
{
  unint64_t result;

  result = qword_1EFF4ABB0;
  if (!qword_1EFF4ABB0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for UserType, &type metadata for UserType);
    atomic_store(result, (unint64_t *)&qword_1EFF4ABB0);
  }
  return result;
}

uint64_t sub_1D5896E44()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5896EE0()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5896F58()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::UserType_optional sub_1D5896FF0(Swift::String *a1)
{
  return UserType.init(rawValue:)(*a1);
}

uint64_t sub_1D5896FFC()
{
  sub_1D57A4720();
  return sub_1D5AAE928();
}

uint64_t storeEnumTagSinglePayload for UserType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D58970A4 + 4 * byte_1D5ABFFD1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D58970D8 + 4 * byte_1D5ABFFCC[v4]))();
}

uint64_t sub_1D58970D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58970E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58970E8);
  return result;
}

uint64_t sub_1D58970F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58970FCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5897100(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5897108(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void ArticleFeedbackData.feedbackType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *ArticleFeedbackData.feedbackType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*ArticleFeedbackData.feedbackType.modify())()
{
  return nullsub_1;
}

NewsAnalytics::ArticleFeedbackData __swiftcall ArticleFeedbackData.init(feedbackType:)(NewsAnalytics::ArticleFeedbackData feedbackType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)feedbackType.feedbackType;
  return feedbackType;
}

uint64_t sub_1D5897148()
{
  return 0x6B63616264656566;
}

uint64_t sub_1D5897168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6B63616264656566 && a2 == 0xEC00000065707954)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5897214()
{
  sub_1D5897368();
  return sub_1D5AAEED4();
}

uint64_t sub_1D589723C()
{
  sub_1D5897368();
  return sub_1D5AAEEE0();
}

uint64_t ArticleFeedbackData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D5897528(0, &qword_1EFF4ABB8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5897368();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D58973AC();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5897368()
{
  unint64_t result;

  result = qword_1EFF4ABC0;
  if (!qword_1EFF4ABC0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC0278, &type metadata for ArticleFeedbackData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4ABC0);
  }
  return result;
}

unint64_t sub_1D58973AC()
{
  unint64_t result;

  result = qword_1EFF4ABC8;
  if (!qword_1EFF4ABC8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedbackType, &type metadata for FeedbackType);
    atomic_store(result, (unint64_t *)&qword_1EFF4ABC8);
  }
  return result;
}

uint64_t ArticleFeedbackData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D5897528(0, &qword_1EFF4ABD0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5897368();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5897584();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5897528(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5897368();
    v7 = a3(a1, &type metadata for ArticleFeedbackData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5897584()
{
  unint64_t result;

  result = qword_1EFF4ABD8;
  if (!qword_1EFF4ABD8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedbackType, &type metadata for FeedbackType);
    atomic_store(result, (unint64_t *)&qword_1EFF4ABD8);
  }
  return result;
}

unint64_t sub_1D58975CC()
{
  unint64_t result;

  result = qword_1EFF4ABE0;
  if (!qword_1EFF4ABE0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleFeedbackData, &type metadata for ArticleFeedbackData);
    atomic_store(result, (unint64_t *)&qword_1EFF4ABE0);
  }
  return result;
}

unint64_t sub_1D5897614()
{
  unint64_t result;

  result = qword_1EFF4ABE8;
  if (!qword_1EFF4ABE8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ArticleFeedbackData, &type metadata for ArticleFeedbackData);
    atomic_store(result, (unint64_t *)&qword_1EFF4ABE8);
  }
  return result;
}

uint64_t sub_1D5897658@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ArticleFeedbackData.init(from:)(a1, a2);
}

uint64_t sub_1D589766C(_QWORD *a1)
{
  return ArticleFeedbackData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for ArticleFeedbackData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D58976CC + 4 * byte_1D5AC00F5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D5897700 + 4 * byte_1D5AC00F0[v4]))();
}

uint64_t sub_1D5897700(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5897708(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5897710);
  return result;
}

uint64_t sub_1D589771C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5897724);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D5897728(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5897730(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleFeedbackData()
{
  return &type metadata for ArticleFeedbackData;
}

uint64_t storeEnumTagSinglePayload for ArticleFeedbackData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D589778C + 4 * byte_1D5AC00FA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D58977AC + 4 * byte_1D5AC00FF[v4]))();
}

_BYTE *sub_1D589778C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D58977AC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58977B4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58977BC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58977C4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58977CC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ArticleFeedbackData.CodingKeys()
{
  return &type metadata for ArticleFeedbackData.CodingKeys;
}

unint64_t sub_1D58977EC()
{
  unint64_t result;

  result = qword_1EFF4ABF0;
  if (!qword_1EFF4ABF0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC0250, &type metadata for ArticleFeedbackData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4ABF0);
  }
  return result;
}

unint64_t sub_1D5897834()
{
  unint64_t result;

  result = qword_1EFF4ABF8;
  if (!qword_1EFF4ABF8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC01C0, &type metadata for ArticleFeedbackData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4ABF8);
  }
  return result;
}

unint64_t sub_1D589787C()
{
  unint64_t result;

  result = qword_1EFF4AC00;
  if (!qword_1EFF4AC00)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC01E8, &type metadata for ArticleFeedbackData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4AC00);
  }
  return result;
}

uint64_t HeadlineScoringData.sortingScoreDistribution.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;

  v2 = *(_BYTE *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_BYTE *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_BYTE *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_BYTE *)(v1 + 56);
  v9 = *(_QWORD *)(v1 + 64);
  result = *(unsigned __int8 *)(v1 + 72);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_BYTE *)(a1 + 72) = result;
  return result;
}

uint64_t HeadlineScoringData.sortingScoreDistribution.setter(uint64_t result)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;

  v2 = *(_BYTE *)(result + 8);
  v3 = *(_QWORD *)(result + 16);
  v4 = *(_BYTE *)(result + 24);
  v5 = *(_QWORD *)(result + 32);
  v6 = *(_BYTE *)(result + 40);
  v7 = *(_QWORD *)(result + 48);
  v8 = *(_BYTE *)(result + 56);
  v9 = *(_QWORD *)(result + 64);
  v10 = *(_BYTE *)(result + 72);
  *(_QWORD *)v1 = *(_QWORD *)result;
  *(_BYTE *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v3;
  *(_BYTE *)(v1 + 24) = v4;
  *(_QWORD *)(v1 + 32) = v5;
  *(_BYTE *)(v1 + 40) = v6;
  *(_QWORD *)(v1 + 48) = v7;
  *(_BYTE *)(v1 + 56) = v8;
  *(_QWORD *)(v1 + 64) = v9;
  *(_BYTE *)(v1 + 72) = v10;
  return result;
}

uint64_t (*HeadlineScoringData.sortingScoreDistribution.modify())()
{
  return nullsub_1;
}

uint64_t HeadlineScoringData.agedPersonalizationScoreDistribution.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;

  v2 = *(_BYTE *)(v1 + 88);
  v3 = *(_QWORD *)(v1 + 96);
  v4 = *(_BYTE *)(v1 + 104);
  v5 = *(_QWORD *)(v1 + 112);
  v6 = *(_BYTE *)(v1 + 120);
  v7 = *(_QWORD *)(v1 + 128);
  v8 = *(_BYTE *)(v1 + 136);
  v9 = *(_QWORD *)(v1 + 144);
  result = *(unsigned __int8 *)(v1 + 152);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 80);
  *(_BYTE *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_BYTE *)(a1 + 72) = result;
  return result;
}

uint64_t HeadlineScoringData.agedPersonalizationScoreDistribution.setter(uint64_t result)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;

  v2 = *(_BYTE *)(result + 8);
  v3 = *(_QWORD *)(result + 16);
  v4 = *(_BYTE *)(result + 24);
  v5 = *(_QWORD *)(result + 32);
  v6 = *(_BYTE *)(result + 40);
  v7 = *(_QWORD *)(result + 48);
  v8 = *(_BYTE *)(result + 56);
  v9 = *(_QWORD *)(result + 64);
  v10 = *(_BYTE *)(result + 72);
  *(_QWORD *)(v1 + 80) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 88) = v2;
  *(_QWORD *)(v1 + 96) = v3;
  *(_BYTE *)(v1 + 104) = v4;
  *(_QWORD *)(v1 + 112) = v5;
  *(_BYTE *)(v1 + 120) = v6;
  *(_QWORD *)(v1 + 128) = v7;
  *(_BYTE *)(v1 + 136) = v8;
  *(_QWORD *)(v1 + 144) = v9;
  *(_BYTE *)(v1 + 152) = v10;
  return result;
}

uint64_t (*HeadlineScoringData.agedPersonalizationScoreDistribution.modify())()
{
  return nullsub_1;
}

uint64_t HeadlineScoringData.tabiScoreDistribution.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;

  v2 = *(_BYTE *)(v1 + 168);
  v3 = *(_QWORD *)(v1 + 176);
  v4 = *(_BYTE *)(v1 + 184);
  v5 = *(_QWORD *)(v1 + 192);
  v6 = *(_BYTE *)(v1 + 200);
  v7 = *(_QWORD *)(v1 + 208);
  v8 = *(_BYTE *)(v1 + 216);
  v9 = *(_QWORD *)(v1 + 224);
  result = *(unsigned __int8 *)(v1 + 232);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 160);
  *(_BYTE *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_BYTE *)(a1 + 72) = result;
  return result;
}

uint64_t HeadlineScoringData.tabiScoreDistribution.setter(uint64_t result)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;

  v2 = *(_BYTE *)(result + 8);
  v3 = *(_QWORD *)(result + 16);
  v4 = *(_BYTE *)(result + 24);
  v5 = *(_QWORD *)(result + 32);
  v6 = *(_BYTE *)(result + 40);
  v7 = *(_QWORD *)(result + 48);
  v8 = *(_BYTE *)(result + 56);
  v9 = *(_QWORD *)(result + 64);
  v10 = *(_BYTE *)(result + 72);
  *(_QWORD *)(v1 + 160) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 168) = v2;
  *(_QWORD *)(v1 + 176) = v3;
  *(_BYTE *)(v1 + 184) = v4;
  *(_QWORD *)(v1 + 192) = v5;
  *(_BYTE *)(v1 + 200) = v6;
  *(_QWORD *)(v1 + 208) = v7;
  *(_BYTE *)(v1 + 216) = v8;
  *(_QWORD *)(v1 + 224) = v9;
  *(_BYTE *)(v1 + 232) = v10;
  return result;
}

uint64_t (*HeadlineScoringData.tabiScoreDistribution.modify())()
{
  return nullsub_1;
}

uint64_t HeadlineScoringData.embeddingScoreDistribution.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t result;
  char v10;

  v2 = *(_BYTE *)(v1 + 248);
  v3 = *(_QWORD *)(v1 + 256);
  v4 = *(_BYTE *)(v1 + 264);
  v5 = *(_QWORD *)(v1 + 272);
  v6 = *(_BYTE *)(v1 + 280);
  v7 = *(_QWORD *)(v1 + 288);
  v8 = *(_BYTE *)(v1 + 296);
  result = *(_QWORD *)(v1 + 304);
  v10 = *(_BYTE *)(v1 + 312);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 240);
  *(_BYTE *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = result;
  *(_BYTE *)(a1 + 72) = v10;
  return result;
}

uint64_t HeadlineScoringData.embeddingScoreDistribution.setter(uint64_t result)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;

  v2 = *(_BYTE *)(result + 8);
  v3 = *(_QWORD *)(result + 16);
  v4 = *(_BYTE *)(result + 24);
  v5 = *(_QWORD *)(result + 32);
  v6 = *(_BYTE *)(result + 40);
  v7 = *(_QWORD *)(result + 48);
  v8 = *(_BYTE *)(result + 56);
  v9 = *(_QWORD *)(result + 64);
  v10 = *(_BYTE *)(result + 72);
  *(_QWORD *)(v1 + 240) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 248) = v2;
  *(_QWORD *)(v1 + 256) = v3;
  *(_BYTE *)(v1 + 264) = v4;
  *(_QWORD *)(v1 + 272) = v5;
  *(_BYTE *)(v1 + 280) = v6;
  *(_QWORD *)(v1 + 288) = v7;
  *(_BYTE *)(v1 + 296) = v8;
  *(_QWORD *)(v1 + 304) = v9;
  *(_BYTE *)(v1 + 312) = v10;
  return result;
}

uint64_t (*HeadlineScoringData.embeddingScoreDistribution.modify())()
{
  return nullsub_1;
}

uint64_t HeadlineScoringData.clientScoreDistribution.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t result;
  char v10;

  v2 = *(_BYTE *)(v1 + 328);
  v3 = *(_QWORD *)(v1 + 336);
  v4 = *(_BYTE *)(v1 + 344);
  v5 = *(_QWORD *)(v1 + 352);
  v6 = *(_BYTE *)(v1 + 360);
  v7 = *(_QWORD *)(v1 + 368);
  v8 = *(_BYTE *)(v1 + 376);
  result = *(_QWORD *)(v1 + 384);
  v10 = *(_BYTE *)(v1 + 392);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 320);
  *(_BYTE *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = result;
  *(_BYTE *)(a1 + 72) = v10;
  return result;
}

uint64_t HeadlineScoringData.clientScoreDistribution.setter(uint64_t result)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;

  v2 = *(_BYTE *)(result + 8);
  v3 = *(_QWORD *)(result + 16);
  v4 = *(_BYTE *)(result + 24);
  v5 = *(_QWORD *)(result + 32);
  v6 = *(_BYTE *)(result + 40);
  v7 = *(_QWORD *)(result + 48);
  v8 = *(_BYTE *)(result + 56);
  v9 = *(_QWORD *)(result + 64);
  v10 = *(_BYTE *)(result + 72);
  *(_QWORD *)(v1 + 320) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 328) = v2;
  *(_QWORD *)(v1 + 336) = v3;
  *(_BYTE *)(v1 + 344) = v4;
  *(_QWORD *)(v1 + 352) = v5;
  *(_BYTE *)(v1 + 360) = v6;
  *(_QWORD *)(v1 + 368) = v7;
  *(_BYTE *)(v1 + 376) = v8;
  *(_QWORD *)(v1 + 384) = v9;
  *(_BYTE *)(v1 + 392) = v10;
  return result;
}

uint64_t (*HeadlineScoringData.clientScoreDistribution.modify())()
{
  return nullsub_1;
}

void HeadlineScoringData.context.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 393);
}

_BYTE *HeadlineScoringData.context.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 393) = *result;
  return result;
}

uint64_t (*HeadlineScoringData.context.modify())()
{
  return nullsub_1;
}

uint64_t HeadlineScoringData.headlineCount.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 396);
}

uint64_t HeadlineScoringData.headlineCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 396) = result;
  return result;
}

uint64_t (*HeadlineScoringData.headlineCount.modify())()
{
  return nullsub_1;
}

uint64_t HeadlineScoringData.init(sortingScoreDistribution:agedPersonalizationScoreDistribution:tabiScoreDistribution:embeddingScoreDistribution:clientScoreDistribution:context:headlineCount:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _BYTE *a6@<X5>, int a7@<W6>, uint64_t a8@<X8>)
{
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v32 = *(_BYTE *)(result + 8);
  v31 = *(_BYTE *)(result + 24);
  v30 = *(_BYTE *)(result + 40);
  v29 = *(_BYTE *)(result + 56);
  v28 = *(_BYTE *)(result + 72);
  v27 = *(_BYTE *)(a2 + 8);
  v26 = *(_BYTE *)(a2 + 24);
  v25 = *(_BYTE *)(a2 + 40);
  v24 = *(_BYTE *)(a2 + 56);
  v23 = *(_BYTE *)(a2 + 72);
  v22 = *(_BYTE *)(a3 + 8);
  v21 = *(_BYTE *)(a3 + 24);
  v20 = *(_BYTE *)(a3 + 40);
  v19 = *(_BYTE *)(a3 + 56);
  v18 = *(_BYTE *)(a3 + 72);
  v17 = *(_BYTE *)(a4 + 8);
  v16 = *(_BYTE *)(a4 + 24);
  v15 = *(_BYTE *)(a4 + 40);
  v14 = *(_BYTE *)(a4 + 56);
  v13 = *(_BYTE *)(a4 + 72);
  v12 = *(_BYTE *)(a5 + 8);
  v11 = *(_BYTE *)(a5 + 24);
  v10 = *(_BYTE *)(a5 + 40);
  v9 = *(_BYTE *)(a5 + 56);
  v8 = *(_BYTE *)(a5 + 72);
  *(_QWORD *)a8 = *(_QWORD *)result;
  *(_BYTE *)(a8 + 8) = v32;
  *(_QWORD *)(a8 + 16) = *(_QWORD *)(result + 16);
  *(_BYTE *)(a8 + 24) = v31;
  *(_QWORD *)(a8 + 32) = *(_QWORD *)(result + 32);
  *(_BYTE *)(a8 + 40) = v30;
  *(_QWORD *)(a8 + 48) = *(_QWORD *)(result + 48);
  *(_BYTE *)(a8 + 56) = v29;
  *(_QWORD *)(a8 + 64) = *(_QWORD *)(result + 64);
  *(_BYTE *)(a8 + 72) = v28;
  *(_QWORD *)(a8 + 80) = *(_QWORD *)a2;
  *(_BYTE *)(a8 + 88) = v27;
  *(_QWORD *)(a8 + 96) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a8 + 104) = v26;
  *(_QWORD *)(a8 + 112) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a8 + 120) = v25;
  *(_QWORD *)(a8 + 128) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a8 + 136) = v24;
  *(_QWORD *)(a8 + 144) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a8 + 152) = v23;
  *(_QWORD *)(a8 + 160) = *(_QWORD *)a3;
  *(_BYTE *)(a8 + 168) = v22;
  *(_QWORD *)(a8 + 176) = *(_QWORD *)(a3 + 16);
  *(_BYTE *)(a8 + 184) = v21;
  *(_QWORD *)(a8 + 192) = *(_QWORD *)(a3 + 32);
  *(_BYTE *)(a8 + 200) = v20;
  *(_QWORD *)(a8 + 208) = *(_QWORD *)(a3 + 48);
  *(_BYTE *)(a8 + 216) = v19;
  *(_QWORD *)(a8 + 224) = *(_QWORD *)(a3 + 64);
  *(_BYTE *)(a8 + 232) = v18;
  *(_QWORD *)(a8 + 240) = *(_QWORD *)a4;
  *(_BYTE *)(a8 + 248) = v17;
  *(_QWORD *)(a8 + 256) = *(_QWORD *)(a4 + 16);
  *(_BYTE *)(a8 + 264) = v16;
  *(_QWORD *)(a8 + 272) = *(_QWORD *)(a4 + 32);
  *(_BYTE *)(a8 + 280) = v15;
  *(_QWORD *)(a8 + 288) = *(_QWORD *)(a4 + 48);
  *(_BYTE *)(a8 + 296) = v14;
  *(_QWORD *)(a8 + 304) = *(_QWORD *)(a4 + 64);
  *(_BYTE *)(a8 + 312) = v13;
  *(_QWORD *)(a8 + 320) = *(_QWORD *)a5;
  *(_BYTE *)(a8 + 328) = v12;
  *(_QWORD *)(a8 + 336) = *(_QWORD *)(a5 + 16);
  *(_BYTE *)(a8 + 344) = v11;
  *(_QWORD *)(a8 + 352) = *(_QWORD *)(a5 + 32);
  *(_BYTE *)(a8 + 360) = v10;
  *(_QWORD *)(a8 + 368) = *(_QWORD *)(a5 + 48);
  *(_BYTE *)(a8 + 376) = v9;
  *(_QWORD *)(a8 + 384) = *(_QWORD *)(a5 + 64);
  *(_BYTE *)(a8 + 392) = v8;
  *(_BYTE *)(a8 + 393) = *a6;
  *(_DWORD *)(a8 + 396) = a7;
  return result;
}

uint64_t sub_1D5897F18(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D5897F54 + 4 * byte_1D5AC02D0[a1]))(0xD000000000000018, 0x80000001D5AEE700);
}

uint64_t sub_1D5897F54()
{
  uint64_t v0;

  return v0 + 15;
}

uint64_t sub_1D5897FA8()
{
  return 0x747865746E6F63;
}

uint64_t sub_1D5897FC0()
{
  return 0x656E696C64616568;
}

uint64_t sub_1D5897FE4()
{
  unsigned __int8 *v0;

  return sub_1D5897F18(*v0);
}

uint64_t sub_1D5897FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5899380(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5898010()
{
  sub_1D58986E4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5898038()
{
  sub_1D58986E4();
  return sub_1D5AAEEE0();
}

uint64_t HeadlineScoringData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  _DWORD v18[3];
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  int v46;
  int v47;
  int v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  int v78;
  char v79;

  sub_1D5899004(0, &qword_1ED9CF000, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v18 - v6;
  v8 = *v1;
  v9 = *((_BYTE *)v1 + 8);
  v10 = v1[2];
  v78 = *((unsigned __int8 *)v1 + 24);
  v65 = v1[4];
  v66 = v10;
  v64 = *((unsigned __int8 *)v1 + 40);
  v63 = v1[6];
  v62 = *((unsigned __int8 *)v1 + 56);
  v61 = v1[8];
  v60 = *((unsigned __int8 *)v1 + 72);
  v59 = v1[10];
  v58 = *((unsigned __int8 *)v1 + 88);
  v57 = v1[12];
  v56 = *((unsigned __int8 *)v1 + 104);
  v55 = v1[14];
  v54 = *((unsigned __int8 *)v1 + 120);
  v53 = v1[16];
  v52 = *((unsigned __int8 *)v1 + 136);
  v51 = v1[18];
  v50 = *((unsigned __int8 *)v1 + 152);
  v49 = v1[20];
  v48 = *((unsigned __int8 *)v1 + 168);
  v35 = *((unsigned __int8 *)v1 + 280);
  v37 = *((unsigned __int8 *)v1 + 296);
  v39 = *((unsigned __int8 *)v1 + 312);
  v21 = *((unsigned __int8 *)v1 + 328);
  v23 = *((unsigned __int8 *)v1 + 344);
  v25 = *((unsigned __int8 *)v1 + 360);
  v29 = *((unsigned __int8 *)v1 + 376);
  v28 = *((unsigned __int8 *)v1 + 392);
  v40 = v1[22];
  v47 = *((unsigned __int8 *)v1 + 184);
  v41 = v1[24];
  v46 = *((unsigned __int8 *)v1 + 200);
  v42 = v1[26];
  v43 = *((unsigned __int8 *)v1 + 216);
  v44 = v1[28];
  v45 = *((unsigned __int8 *)v1 + 232);
  v30 = v1[30];
  v31 = *((unsigned __int8 *)v1 + 248);
  v32 = v1[32];
  v33 = *((unsigned __int8 *)v1 + 264);
  v34 = v1[34];
  v36 = v1[36];
  v38 = v1[38];
  v20 = v1[40];
  v22 = v1[42];
  v24 = v1[44];
  v26 = v1[46];
  v27 = v1[48];
  v19 = *((unsigned __int8 *)v1 + 393);
  v18[2] = *((_DWORD *)v1 + 99);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58986E4();
  sub_1D5AAEEC8();
  v68 = v8;
  v69 = v9;
  v70 = v66;
  v71 = v78;
  v72 = v65;
  v11 = v7;
  v73 = v64;
  v74 = v63;
  v75 = v62;
  v76 = v61;
  v77 = v60;
  v79 = 0;
  sub_1D5895E2C();
  v12 = v67;
  sub_1D5AAED6C();
  if (!v12)
  {
    v13 = v47;
    v14 = v46;
    v15 = v48;
    v16 = v49;
    v68 = v59;
    v69 = v58;
    v70 = v57;
    v71 = v56;
    v72 = v55;
    v73 = v54;
    v74 = v53;
    v75 = v52;
    v76 = v51;
    v77 = v50;
    v79 = 1;
    sub_1D5AAED6C();
    v68 = v16;
    v69 = v15;
    v70 = v40;
    v71 = v13;
    v72 = v41;
    v73 = v14;
    v74 = v42;
    v75 = v43;
    v76 = v44;
    v77 = v45;
    v79 = 2;
    sub_1D5AAED6C();
    v68 = v30;
    v69 = v31;
    v70 = v32;
    v71 = v33;
    v72 = v34;
    v73 = v35;
    v74 = v36;
    v75 = v37;
    v76 = v38;
    v77 = v39;
    v79 = 3;
    sub_1D5AAED6C();
    v68 = v20;
    v69 = v21;
    v70 = v22;
    v71 = v23;
    v72 = v24;
    v73 = v25;
    v74 = v26;
    v75 = v29;
    v76 = v27;
    v77 = v28;
    v79 = 4;
    sub_1D5AAED6C();
    LOBYTE(v68) = v19;
    v79 = 5;
    sub_1D5898728();
    sub_1D5AAED6C();
    LOBYTE(v68) = 6;
    sub_1D5AAED78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, v4);
}

unint64_t sub_1D58986E4()
{
  unint64_t result;

  result = qword_1ED9CEC60;
  if (!qword_1ED9CEC60)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC0468, &type metadata for HeadlineScoringData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEC60);
  }
  return result;
}

unint64_t sub_1D5898728()
{
  unint64_t result;

  result = qword_1ED9CED68;
  if (!qword_1ED9CED68)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for HeadlineScoringContext, &type metadata for HeadlineScoringContext);
    atomic_store(result, (unint64_t *)&qword_1ED9CED68);
  }
  return result;
}

uint64_t HeadlineScoringData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  _DWORD *v42;
  _DWORD *v43;
  _DWORD *v44;
  int v45;
  _DWORD *v46;
  _DWORD *v47;
  _DWORD *v48;
  _DWORD *v49;
  int v50;
  int v51;
  int v52;
  uint64_t v53;
  int v54;
  int v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  int v84;
  uint64_t v85;
  int v86;
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  int v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  _BYTE v103[7];
  char v104;
  _BYTE v105[7];
  char v106;
  _BYTE v107[7];
  char v108;
  _BYTE v109[7];
  char v110;
  _BYTE v111[7];
  char v112;
  _BYTE v113[7];
  char v114;
  _BYTE v115[7];
  char v116;
  _BYTE v117[7];
  char v118;
  _BYTE v119[7];
  char v120;
  _BYTE v121[7];
  char v122;
  _BYTE v123[7];
  char v124;
  _BYTE v125[7];
  char v126;
  _BYTE v127[7];
  char v128;
  _BYTE v129[7];
  char v130;
  _BYTE v131[7];
  char v132;
  _BYTE v133[7];
  char v134;
  _BYTE v135[7];
  char v136;
  _BYTE v137[7];
  char v138;
  _BYTE v139[7];
  char v140;
  _BYTE v141[7];
  char v142;
  _BYTE v143[7];
  char v144;
  _BYTE v145[7];
  char v146;
  _BYTE v147[7];
  char v148;
  char v149;
  char v150;
  uint64_t v151;
  unsigned __int8 v152;
  uint64_t v153;
  unsigned __int8 v154;
  uint64_t v155;
  unsigned __int8 v156;
  uint64_t v157;
  unsigned __int8 v158;
  uint64_t v159;
  unsigned __int8 v160;
  _QWORD *v161;

  sub_1D5899004(0, &qword_1EFF4AC08, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v42 - v8;
  v10 = a1[3];
  v161 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1D58986E4();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v100 = a2;
    v101 = v7;
    v147[0] = 0;
    sub_1D5895DE4();
    sub_1D5AAECD0();
    v95 = v152;
    v98 = v153;
    v99 = v151;
    v94 = v154;
    v93 = v156;
    v96 = v157;
    v97 = v155;
    v11 = v158;
    v12 = v159;
    v13 = v160;
    v147[0] = 1;
    sub_1D5AAECD0();
    v87 = v13;
    v88 = v11;
    v85 = v151;
    v83 = v152;
    v89 = v12;
    v90 = v153;
    v86 = v154;
    v84 = v156;
    v91 = v155;
    v92 = v157;
    LODWORD(v12) = v158;
    v14 = v159;
    v15 = v160;
    v147[0] = 2;
    sub_1D5AAECD0();
    v76 = v15;
    v77 = v12;
    v78 = v151;
    v79 = v153;
    v73 = v152;
    v74 = v154;
    v80 = v155;
    v75 = v156;
    v81 = v157;
    v82 = v14;
    LODWORD(v12) = v158;
    v16 = v159;
    v17 = v160;
    v147[0] = 3;
    sub_1D5AAECD0();
    v66 = v17;
    v67 = v12;
    v68 = v151;
    v69 = v153;
    v63 = v154;
    v64 = v152;
    v70 = v155;
    v65 = v156;
    v71 = v157;
    v72 = v16;
    v18 = v158;
    v19 = v159;
    LODWORD(v12) = v160;
    v147[0] = 4;
    sub_1D5AAECD0();
    v56 = v12;
    v57 = v18;
    v58 = v151;
    v59 = v153;
    v54 = v154;
    v55 = v152;
    v60 = v155;
    LODWORD(v12) = v156;
    v61 = v157;
    v62 = v19;
    v20 = v158;
    v21 = v159;
    LODWORD(v19) = v160;
    v147[0] = 5;
    sub_1D5899060();
    sub_1D5AAECD0();
    v50 = v19;
    v51 = v20;
    v52 = v12;
    v53 = v21;
    LODWORD(v19) = v151;
    v150 = 6;
    LODWORD(v21) = sub_1D5AAECDC();
    v23 = v100;
    v24 = *(void (**)(char *, uint64_t))(v101 + 8);
    v45 = v19;
    v42 = (_DWORD *)(v100 + 281);
    v43 = (_DWORD *)(v100 + 297);
    v44 = (_DWORD *)(v100 + 265);
    v46 = (_DWORD *)(v100 + 313);
    v47 = (_DWORD *)(v100 + 329);
    v48 = (_DWORD *)(v100 + 345);
    v49 = (_DWORD *)(v100 + 361);
    v101 = v100 + 377;
    v24(v9, v6);
    v149 = v95;
    v148 = v94;
    v146 = v93;
    v144 = v88;
    v142 = v87;
    v140 = v83;
    v138 = v86;
    v136 = v84;
    v134 = v77;
    v132 = v76;
    v130 = v73;
    v128 = v74;
    v126 = v75;
    v124 = v67;
    v122 = v66;
    v120 = v64;
    v118 = v63;
    v116 = v65;
    v114 = v57;
    v112 = v56;
    v110 = v55;
    v108 = v54;
    v106 = v52;
    v104 = v51;
    v102 = v50;
    *(_QWORD *)v23 = v99;
    *(_QWORD *)(v23 + 16) = v98;
    *(_QWORD *)(v23 + 32) = v97;
    *(_QWORD *)(v23 + 48) = v96;
    *(_QWORD *)(v23 + 64) = v89;
    *(_QWORD *)(v23 + 80) = v85;
    *(_BYTE *)(v23 + 8) = v149;
    *(_DWORD *)(v23 + 9) = v151;
    *(_DWORD *)(v23 + 12) = *(_DWORD *)((char *)&v151 + 3);
    *(_BYTE *)(v23 + 24) = v148;
    *(_DWORD *)(v23 + 28) = *(_DWORD *)&v147[3];
    *(_DWORD *)(v23 + 25) = *(_DWORD *)v147;
    *(_BYTE *)(v23 + 40) = v146;
    *(_DWORD *)(v23 + 44) = *(_DWORD *)&v145[3];
    *(_DWORD *)(v23 + 41) = *(_DWORD *)v145;
    *(_BYTE *)(v23 + 56) = v144;
    *(_DWORD *)(v23 + 60) = *(_DWORD *)&v143[3];
    *(_DWORD *)(v23 + 57) = *(_DWORD *)v143;
    *(_BYTE *)(v23 + 72) = v142;
    *(_DWORD *)(v23 + 76) = *(_DWORD *)&v141[3];
    *(_DWORD *)(v23 + 73) = *(_DWORD *)v141;
    *(_BYTE *)(v23 + 88) = v140;
    *(_DWORD *)(v23 + 92) = *(_DWORD *)&v139[3];
    *(_DWORD *)(v23 + 89) = *(_DWORD *)v139;
    *(_QWORD *)(v23 + 96) = v90;
    *(_BYTE *)(v23 + 104) = v138;
    *(_DWORD *)(v23 + 108) = *(_DWORD *)&v137[3];
    *(_DWORD *)(v23 + 105) = *(_DWORD *)v137;
    *(_QWORD *)(v23 + 112) = v91;
    *(_BYTE *)(v23 + 120) = v136;
    v25 = *(_DWORD *)v135;
    *(_DWORD *)(v23 + 124) = *(_DWORD *)&v135[3];
    *(_DWORD *)(v23 + 121) = v25;
    *(_QWORD *)(v23 + 128) = v92;
    *(_BYTE *)(v23 + 136) = v134;
    v26 = *(_DWORD *)v133;
    *(_DWORD *)(v23 + 140) = *(_DWORD *)&v133[3];
    *(_DWORD *)(v23 + 137) = v26;
    *(_QWORD *)(v23 + 144) = v82;
    *(_BYTE *)(v23 + 152) = v132;
    v27 = *(_DWORD *)v131;
    *(_DWORD *)(v23 + 156) = *(_DWORD *)&v131[3];
    *(_DWORD *)(v23 + 153) = v27;
    *(_QWORD *)(v23 + 160) = v78;
    *(_BYTE *)(v23 + 168) = v130;
    v28 = *(_DWORD *)v129;
    *(_DWORD *)(v23 + 172) = *(_DWORD *)&v129[3];
    *(_DWORD *)(v23 + 169) = v28;
    *(_QWORD *)(v23 + 176) = v79;
    *(_BYTE *)(v23 + 184) = v128;
    v29 = *(_DWORD *)v127;
    *(_DWORD *)(v23 + 188) = *(_DWORD *)&v127[3];
    *(_DWORD *)(v23 + 185) = v29;
    *(_QWORD *)(v23 + 192) = v80;
    *(_BYTE *)(v23 + 200) = v126;
    v30 = *(_DWORD *)v125;
    *(_DWORD *)(v23 + 204) = *(_DWORD *)&v125[3];
    *(_DWORD *)(v23 + 201) = v30;
    *(_QWORD *)(v23 + 208) = v81;
    *(_BYTE *)(v23 + 216) = v124;
    v31 = *(_DWORD *)v123;
    *(_DWORD *)(v23 + 220) = *(_DWORD *)&v123[3];
    *(_DWORD *)(v23 + 217) = v31;
    *(_QWORD *)(v23 + 224) = v72;
    *(_BYTE *)(v23 + 232) = v122;
    v32 = *(_DWORD *)v121;
    *(_DWORD *)(v23 + 236) = *(_DWORD *)&v121[3];
    *(_DWORD *)(v23 + 233) = v32;
    *(_QWORD *)(v23 + 240) = v68;
    *(_BYTE *)(v23 + 248) = v120;
    v33 = *(_DWORD *)v119;
    *(_DWORD *)(v23 + 252) = *(_DWORD *)&v119[3];
    *(_DWORD *)(v23 + 249) = v33;
    *(_QWORD *)(v23 + 256) = v69;
    *(_BYTE *)(v23 + 264) = v118;
    v34 = *(_DWORD *)v117;
    *(_DWORD *)(v23 + 268) = *(_DWORD *)&v117[3];
    *v44 = v34;
    *(_QWORD *)(v23 + 272) = v70;
    *(_BYTE *)(v23 + 280) = v116;
    v35 = *(_DWORD *)v115;
    *(_DWORD *)(v23 + 284) = *(_DWORD *)&v115[3];
    *v42 = v35;
    *(_QWORD *)(v23 + 288) = v71;
    *(_BYTE *)(v23 + 296) = v114;
    v36 = *(_DWORD *)v113;
    *(_DWORD *)(v23 + 300) = *(_DWORD *)&v113[3];
    *v43 = v36;
    *(_QWORD *)(v23 + 304) = v62;
    *(_BYTE *)(v23 + 312) = v112;
    v37 = *(_DWORD *)v111;
    *(_DWORD *)(v23 + 316) = *(_DWORD *)&v111[3];
    *v46 = v37;
    *(_QWORD *)(v23 + 320) = v58;
    *(_BYTE *)(v23 + 328) = v110;
    v38 = *(_DWORD *)v109;
    *(_DWORD *)(v23 + 332) = *(_DWORD *)&v109[3];
    *v47 = v38;
    *(_QWORD *)(v23 + 336) = v59;
    *(_BYTE *)(v23 + 344) = v108;
    v39 = *(_DWORD *)v107;
    *(_DWORD *)(v23 + 348) = *(_DWORD *)&v107[3];
    *v48 = v39;
    *(_QWORD *)(v23 + 352) = v60;
    *(_BYTE *)(v23 + 360) = v106;
    v40 = *(_DWORD *)v105;
    *(_DWORD *)(v23 + 364) = *(_DWORD *)&v105[3];
    *v49 = v40;
    *(_QWORD *)(v23 + 368) = v61;
    *(_BYTE *)(v23 + 376) = v104;
    v41 = *(_DWORD *)v103;
    *(_DWORD *)(v23 + 380) = *(_DWORD *)&v103[3];
    *(_DWORD *)v101 = v41;
    *(_QWORD *)(v23 + 384) = v53;
    *(_BYTE *)(v23 + 392) = v102;
    *(_BYTE *)(v23 + 393) = v45;
    *(_DWORD *)(v23 + 396) = v21;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v161);
}

void sub_1D5899004(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58986E4();
    v7 = a3(a1, &type metadata for HeadlineScoringData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5899060()
{
  unint64_t result;

  result = qword_1EFF4AC10;
  if (!qword_1EFF4AC10)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for HeadlineScoringContext, &type metadata for HeadlineScoringContext);
    atomic_store(result, (unint64_t *)&qword_1EFF4AC10);
  }
  return result;
}

uint64_t sub_1D58990AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return HeadlineScoringData.init(from:)(a1, a2);
}

uint64_t sub_1D58990C0(_QWORD *a1)
{
  return HeadlineScoringData.encode(to:)(a1);
}

void *__swift_memcpy400_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x190uLL);
}

uint64_t getEnumTagSinglePayload for HeadlineScoringData(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 400))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 393);
  v4 = v3 >= 3;
  v5 = v3 - 3;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadlineScoringData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 392) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 400) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 400) = 0;
    if (a2)
      *(_BYTE *)(result + 393) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineScoringData()
{
  return &type metadata for HeadlineScoringData;
}

uint64_t storeEnumTagSinglePayload for HeadlineScoringData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D5899228 + 4 * byte_1D5AC02DC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D589925C + 4 * byte_1D5AC02D7[v4]))();
}

uint64_t sub_1D589925C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5899264(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D589926CLL);
  return result;
}

uint64_t sub_1D5899278(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5899280);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D5899284(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D589928C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadlineScoringData.CodingKeys()
{
  return &type metadata for HeadlineScoringData.CodingKeys;
}

unint64_t sub_1D58992AC()
{
  unint64_t result;

  result = qword_1EFF4AC18;
  if (!qword_1EFF4AC18)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC0440, &type metadata for HeadlineScoringData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4AC18);
  }
  return result;
}

unint64_t sub_1D58992F4()
{
  unint64_t result;

  result = qword_1ED9CE498;
  if (!qword_1ED9CE498)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC03B0, &type metadata for HeadlineScoringData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CE498);
  }
  return result;
}

unint64_t sub_1D589933C()
{
  unint64_t result;

  result = qword_1ED9CEC68;
  if (!qword_1ED9CEC68)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC03D8, &type metadata for HeadlineScoringData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEC68);
  }
  return result;
}

uint64_t sub_1D5899380(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000018 && a2 == 0x80000001D5AEE700 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001D5AEE720 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AEE750 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AEE770 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D5AEE790 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x747865746E6F63 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656E696C64616568 && a2 == 0xED0000746E756F43)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

NewsAnalytics::SessionStartSource_optional __swiftcall SessionStartSource.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::SessionStartSource_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SessionStartSource.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58996E4 + 4 * byte_1D5AC04C0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D58996E4()
{
  return 0x6469577961646F74;
}

uint64_t sub_1D5899704()
{
  return 0x6C616E7265747865;
}

uint64_t sub_1D5899724()
{
  return 0x6163696669746F6ELL;
}

void sub_1D5899744(char *a1)
{
  sub_1D5A3A114(*a1);
}

unint64_t sub_1D5899754()
{
  unint64_t result;

  result = qword_1EFF4AC20;
  if (!qword_1EFF4AC20)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SessionStartSource, &type metadata for SessionStartSource);
    atomic_store(result, (unint64_t *)&qword_1EFF4AC20);
  }
  return result;
}

void sub_1D5899798()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D58997E4()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D589986C()
{
  __asm { BR              X10 }
}

uint64_t sub_1D58998A8()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D589991C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5899964()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::SessionStartSource_optional sub_1D58999EC(Swift::String *a1)
{
  return SessionStartSource.init(rawValue:)(*a1);
}

uint64_t sub_1D58999F8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D5899A28 + 4 * byte_1D5AC04D0[*v0]))();
}

void sub_1D5899A28(_QWORD *a1@<X8>)
{
  *a1 = 0x6469577961646F74;
  a1[1] = 0xEB00000000746567;
}

void sub_1D5899A4C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "externalLink");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1D5899A70(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "notification");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t storeEnumTagSinglePayload for SessionStartSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D5899AE0 + 4 * byte_1D5AC04D9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D5899B14 + 4 * byte_1D5AC04D4[v4]))();
}

uint64_t sub_1D5899B14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5899B1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5899B24);
  return result;
}

uint64_t sub_1D5899B30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5899B38);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D5899B3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5899B44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionStartSource()
{
  return &type metadata for SessionStartSource;
}

uint64_t IssueViewData.issueViewingSessionID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IssueViewData.issueViewingSessionID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*IssueViewData.issueViewingSessionID.modify())()
{
  return nullsub_1;
}

NewsAnalytics::IssueViewData __swiftcall IssueViewData.init(issueViewingSessionID:)(NewsAnalytics::IssueViewData issueViewingSessionID)
{
  NewsAnalytics::IssueViewData *v1;

  *v1 = issueViewingSessionID;
  return issueViewingSessionID;
}

unint64_t sub_1D5899BD8()
{
  return 0xD000000000000015;
}

uint64_t sub_1D5899BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D589A1B8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D5899C1C()
{
  sub_1D5899D60();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5899C44()
{
  sub_1D5899D60();
  return sub_1D5AAEEE0();
}

uint64_t IssueViewData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5899EC8(0, &qword_1ED9CEFD0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5899D60();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D5899D60()
{
  unint64_t result;

  result = qword_1ED9CEB58;
  if (!qword_1ED9CEB58)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC0728, &type metadata for IssueViewData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEB58);
  }
  return result;
}

uint64_t IssueViewData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D5899EC8(0, &qword_1ED9CEF70, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5899D60();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECA0();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5899EC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5899D60();
    v7 = a3(a1, &type metadata for IssueViewData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5899F2C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return IssueViewData.init(from:)(a1, a2);
}

uint64_t sub_1D5899F40(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5899EC8(0, &qword_1ED9CEFD0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5899D60();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for IssueViewData()
{
  return &type metadata for IssueViewData;
}

uint64_t storeEnumTagSinglePayload for IssueViewData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D589A084 + 4 * byte_1D5AC05B4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D589A0A4 + 4 * byte_1D5AC05B9[v4]))();
}

_BYTE *sub_1D589A084(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D589A0A4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D589A0AC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D589A0B4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D589A0BC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D589A0C4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IssueViewData.CodingKeys()
{
  return &type metadata for IssueViewData.CodingKeys;
}

unint64_t sub_1D589A0E4()
{
  unint64_t result;

  result = qword_1EFF4AC28;
  if (!qword_1EFF4AC28)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC0700, &type metadata for IssueViewData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4AC28);
  }
  return result;
}

unint64_t sub_1D589A12C()
{
  unint64_t result;

  result = qword_1ED9CEB68;
  if (!qword_1ED9CEB68)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC0670, &type metadata for IssueViewData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEB68);
  }
  return result;
}

unint64_t sub_1D589A174()
{
  unint64_t result;

  result = qword_1ED9CEB60;
  if (!qword_1ED9CEB60)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC0698, &type metadata for IssueViewData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEB60);
  }
  return result;
}

uint64_t sub_1D589A1B8(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AEE7B0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1D589A23C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4AC30, MEMORY[0x1E0CF8078]);
}

uint64_t static GameCenterExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF470C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4AC30, a1);
}

uint64_t sub_1D589A27C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4AC48, MEMORY[0x1E0CF8380]);
}

uint64_t static GameCenterExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF470D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4AC48, a1);
}

uint64_t GameCenterExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t GameCenterExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*GameCenterExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t GameCenterExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GameCenterExposureEvent(0) + 20);
  sub_1D589A36C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for GameCenterExposureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4ACD0);
}

void sub_1D589A36C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C7278)
  {
    sub_1D57C6AF8();
    sub_1D57C6B3C();
    v0 = sub_1D5AADB48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C7278);
  }
}

uint64_t GameCenterExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GameCenterExposureEvent(0) + 20);
  sub_1D589A36C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*GameCenterExposureEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for GameCenterExposureEvent(0);
  return nullsub_1;
}

uint64_t GameCenterExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = a1 + *(int *)(type metadata accessor for GameCenterExposureEvent(0) + 20);
  sub_1D589A36C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v4, v2, v5);
}

uint64_t GameCenterExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t GameCenterExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for GameCenterExposureEvent.Model(0) + 20));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for GameCenterExposureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4AD60);
}

uint64_t GameCenterExposureEvent.Model.init(eventData:userBundleSubscriptionContextData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v5 = *a2;
  v6 = *((_QWORD *)a2 + 1);
  v7 = *((_QWORD *)a2 + 2);
  v8 = a2[24];
  v9 = a2[25];
  v10 = *((_QWORD *)a2 + 4);
  v11 = *((_QWORD *)a2 + 5);
  v12 = a2[48];
  v13 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a3, a1, v13);
  result = type metadata accessor for GameCenterExposureEvent.Model(0);
  v15 = a3 + *(int *)(result + 20);
  *(_BYTE *)v15 = v5;
  *(_QWORD *)(v15 + 8) = v6;
  *(_QWORD *)(v15 + 16) = v7;
  *(_BYTE *)(v15 + 24) = v8;
  *(_BYTE *)(v15 + 25) = v9;
  *(_QWORD *)(v15 + 32) = v10;
  *(_QWORD *)(v15 + 40) = v11;
  *(_BYTE *)(v15 + 48) = v12;
  return result;
}

uint64_t sub_1D589A5D8()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000021;
  else
    return 0x746144746E657665;
}

uint64_t sub_1D589A61C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D589B7AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D589A640()
{
  sub_1D589A824();
  return sub_1D5AAEED4();
}

uint64_t sub_1D589A668()
{
  sub_1D589A824();
  return sub_1D5AAEEE0();
}

uint64_t GameCenterExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  char *v10;
  char v11;
  char v12;
  char v13;
  _BYTE v15[8];
  char v16;
  __int128 v17;
  char v18;
  char v19;
  __int128 v20;
  char v21;

  v3 = v1;
  sub_1D589AB1C(0, &qword_1EFF4AC60, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v15[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D589A824();
  sub_1D5AAEEC8();
  v16 = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (char *)(v3 + *(int *)(type metadata accessor for GameCenterExposureEvent.Model(0) + 20));
    v11 = v10[24];
    v12 = v10[25];
    v13 = v10[48];
    v16 = *v10;
    v17 = *(_OWORD *)(v10 + 8);
    v18 = v11;
    v19 = v12;
    v20 = *((_OWORD *)v10 + 2);
    v21 = v13;
    v15[7] = 1;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D589A824()
{
  unint64_t result;

  result = qword_1EFF4AC68;
  if (!qword_1EFF4AC68)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC093C, &type metadata for GameCenterExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4AC68);
  }
  return result;
}

uint64_t GameCenterExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __int128 v30;
  char v31;
  char v32;
  __int128 v33;
  char v34;
  char v35;

  v24 = a2;
  v28 = sub_1D5AADF98();
  v25 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v26 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D589AB1C(0, &qword_1EFF4AC70, MEMORY[0x1E0DED048]);
  v27 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - v7;
  v9 = type metadata accessor for GameCenterExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D589A824();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v22 = a1;
  v23 = v6;
  v12 = (uint64_t)v11;
  v13 = v25;
  v29 = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v15 = v26;
  v14 = v27;
  v16 = v28;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v15, v16);
  v35 = 1;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v14);
  v17 = v31;
  v18 = v32;
  v19 = v34;
  v20 = v12 + *(int *)(v9 + 20);
  *(_BYTE *)v20 = v29;
  *(_OWORD *)(v20 + 8) = v30;
  *(_BYTE *)(v20 + 24) = v17;
  *(_BYTE *)(v20 + 25) = v18;
  *(_OWORD *)(v20 + 32) = v33;
  *(_BYTE *)(v20 + 48) = v19;
  sub_1D589AB78(v12, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return sub_1D589ABBC(v12);
}

void sub_1D589AB1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D589A824();
    v7 = a3(a1, &type metadata for GameCenterExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D589AB78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GameCenterExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D589ABBC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for GameCenterExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D589ABF8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return GameCenterExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D589AC0C(_QWORD *a1)
{
  return GameCenterExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D589AC20@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF470C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4AC30, a1);
}

uint64_t sub_1D589AC44@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF470D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4AC48, a1);
}

uint64_t sub_1D589AC68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1D589A36C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for GameCenterExposureEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D589A36C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for GameCenterExposureEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1D589A36C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for GameCenterExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D589A36C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for GameCenterExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D589A36C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for GameCenterExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D589A36C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for GameCenterExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D589A36C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for GameCenterExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D589AFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D589A36C();
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for GameCenterExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D589B060(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D589A36C();
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D589B0DC()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D589A36C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for GameCenterExposureEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *v9 = *v10;
    v11 = *((_QWORD *)v10 + 2);
    *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
    *((_QWORD *)v9 + 2) = v11;
    *((_WORD *)v9 + 12) = *((_WORD *)v10 + 12);
    v12 = *((_QWORD *)v10 + 5);
    *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
    *((_QWORD *)v9 + 5) = v12;
    v9[48] = v10[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t initializeWithCopy for GameCenterExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  *(_WORD *)(v8 + 24) = *(_WORD *)(v9 + 24);
  v11 = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = v11;
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GameCenterExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  return a1;
}

uint64_t initializeWithTake for GameCenterExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  return a1;
}

uint64_t assignWithTake for GameCenterExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  v11 = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for GameCenterExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D589B484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for GameCenterExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D589B51C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 16) = a2;
  return result;
}

uint64_t sub_1D589B598()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for GameCenterExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D589B654 + 4 * byte_1D5AC0785[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D589B688 + 4 * byte_1D5AC0780[v4]))();
}

uint64_t sub_1D589B688(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D589B690(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D589B698);
  return result;
}

uint64_t sub_1D589B6A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D589B6ACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D589B6B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D589B6B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GameCenterExposureEvent.Model.CodingKeys()
{
  return &type metadata for GameCenterExposureEvent.Model.CodingKeys;
}

unint64_t sub_1D589B6D8()
{
  unint64_t result;

  result = qword_1EFF4AD98;
  if (!qword_1EFF4AD98)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC0914, &type metadata for GameCenterExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4AD98);
  }
  return result;
}

unint64_t sub_1D589B720()
{
  unint64_t result;

  result = qword_1EFF4ADA0;
  if (!qword_1EFF4ADA0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC0884, &type metadata for GameCenterExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4ADA0);
  }
  return result;
}

unint64_t sub_1D589B768()
{
  unint64_t result;

  result = qword_1EFF4ADA8;
  if (!qword_1EFF4ADA8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC08AC, &type metadata for GameCenterExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4ADA8);
  }
  return result;
}

uint64_t sub_1D589B7AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D589B8A4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4ADB0, MEMORY[0x1E0CF8078]);
}

uint64_t static HeartbeatEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF470D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4ADB0, a1);
}

uint64_t sub_1D589B8E4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4ADC8, MEMORY[0x1E0CF8378]);
}

uint64_t static HeartbeatEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF470E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4ADC8, a1);
}

uint64_t HeartbeatEvent.heartbeatData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D589B95C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void sub_1D589B95C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFF4ADE0)
  {
    type metadata accessor for HeartbeatData();
    sub_1D57CAE08(&qword_1EFF4ADE8, (uint64_t)&protocol conformance descriptor for HeartbeatData);
    sub_1D57CAE08(&qword_1ED9CEB50, (uint64_t)&protocol conformance descriptor for HeartbeatData);
    v0 = sub_1D5AADB48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFF4ADE0);
  }
}

uint64_t HeartbeatEvent.heartbeatData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D589B95C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*HeartbeatEvent.heartbeatData.modify())()
{
  return nullsub_1;
}

uint64_t HeartbeatEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D589B95C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t HeartbeatEvent.Model.heartbeatData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D589BA88(v1, a1);
}

uint64_t sub_1D589BA88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HeartbeatData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t HeartbeatEvent.Model.init(heartbeatData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D589BEE8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for HeartbeatData);
}

uint64_t sub_1D589BAEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6165627472616568 && a2 == 0xED00006174614474)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D589BBA4()
{
  sub_1D57CA96C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D589BBCC()
{
  sub_1D57CA96C();
  return sub_1D5AAEEE0();
}

uint64_t HeartbeatEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D57C5780(0, &qword_1ED9CEFE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57CA96C();
  sub_1D5AAEEC8();
  type metadata accessor for HeartbeatData();
  sub_1D57CAE08(&qword_1ED9CEB50, (uint64_t)&protocol conformance descriptor for HeartbeatData);
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t HeartbeatEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  char *v19;

  v17 = a2;
  v4 = type metadata accessor for HeartbeatData();
  MEMORY[0x1E0C80A78](v4);
  v19 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57C5780(0, &qword_1EFF4ADF0, MEMORY[0x1E0DED048]);
  v18 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - v8;
  v10 = type metadata accessor for HeartbeatEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57CA96C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v13 = (uint64_t)v12;
    sub_1D57CAE08(&qword_1EFF4ADE8, (uint64_t)&protocol conformance descriptor for HeartbeatData);
    v14 = (uint64_t)v19;
    v15 = v18;
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
    sub_1D589BEE8(v14, v13, (uint64_t (*)(_QWORD))type metadata accessor for HeartbeatData);
    sub_1D589BEE8(v13, v17, type metadata accessor for HeartbeatEvent.Model);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D589BEE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D589BF2C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return HeartbeatEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D589BF40@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF470D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4ADB0, a1);
}

uint64_t sub_1D589BF64@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF470E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4ADC8, a1);
}

uint64_t sub_1D589BF88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D589B95C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t initializeBufferWithCopyOfBuffer for HeartbeatEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D589B95C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for HeartbeatEvent(uint64_t a1)
{
  uint64_t v2;

  sub_1D589B95C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for HeartbeatEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D589B95C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for HeartbeatEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D589B95C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for HeartbeatEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D589B95C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for HeartbeatEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D589B95C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeartbeatEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D589C158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1D589B95C);
}

uint64_t storeEnumTagSinglePayload for HeartbeatEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D589C170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1D589B95C);
}

uint64_t type metadata accessor for HeartbeatEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4AE50);
}

uint64_t sub_1D589C190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D57CA69C(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1D589B95C);
}

uint64_t *initializeBufferWithCopyOfBuffer for HeartbeatEvent.Model(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v4 = type metadata accessor for HeartbeatData();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(v4 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AAD710();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = v6[6];
    v14 = (uint64_t *)((char *)a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = v6[7];
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = v6[8];
    v22 = (uint64_t *)((char *)a1 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for HeartbeatEvent.Model(_QWORD *a1, _QWORD *a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for HeartbeatData();
  v5 = v4[5];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1D5AAD710();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  v9 = v4[6];
  v10 = (_QWORD *)((char *)a1 + v9);
  v11 = (_QWORD *)((char *)a2 + v9);
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = v4[7];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = v4[8];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for HeartbeatEvent.Model(_OWORD *a1, _OWORD *a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = (int *)type metadata accessor for HeartbeatData();
  v5 = v4[5];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1D5AAD710();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  *(_OWORD *)((char *)a1 + v4[6]) = *(_OWORD *)((char *)a2 + v4[6]);
  *(_OWORD *)((char *)a1 + v4[7]) = *(_OWORD *)((char *)a2 + v4[7]);
  *(_OWORD *)((char *)a1 + v4[8]) = *(_OWORD *)((char *)a2 + v4[8]);
  return a1;
}

_QWORD *assignWithTake for HeartbeatEvent.Model(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = (int *)type metadata accessor for HeartbeatData();
  v6 = v5[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D5AAD710();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = v5[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  v15 = v5[7];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = v5[8];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HeartbeatEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D589C524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for HeartbeatData);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, a2, v6);
}

uint64_t storeEnumTagSinglePayload for HeartbeatEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D589C578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for HeartbeatData);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v7;

  v7 = a5(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, a2, a2, v7);
}

ValueMetadata *type metadata accessor for HeartbeatEvent.Model.CodingKeys()
{
  return &type metadata for HeartbeatEvent.Model.CodingKeys;
}

unint64_t sub_1D589C5D8()
{
  unint64_t result;

  result = qword_1EFF4AEB0;
  if (!qword_1EFF4AEB0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC0AE4, &type metadata for HeartbeatEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4AEB0);
  }
  return result;
}

uint64_t FeedJournalEntryData.init(groupResults:duration:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t FeedJournalEntryData.groupResults.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedJournalEntryData.groupResults.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*FeedJournalEntryData.groupResults.modify())()
{
  return nullsub_1;
}

uint64_t FeedJournalEntryData.duration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t FeedJournalEntryData.duration.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*FeedJournalEntryData.duration.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D589C684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D589CB54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D589C6A8()
{
  sub_1D57C8850();
  return sub_1D5AAEED4();
}

uint64_t sub_1D589C6D0()
{
  sub_1D57C8850();
  return sub_1D5AAEEE0();
}

unint64_t sub_1D589C6F8()
{
  unint64_t result;

  result = qword_1ED9D0938;
  if (!qword_1ED9D0938)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedJournalGroupResultData, &type metadata for FeedJournalGroupResultData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0938);
  }
  return result;
}

uint64_t FeedJournalEntryData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];
  uint64_t v14;

  sub_1D57C56C8(0, &qword_1EFF4AEB8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v13[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57C8850();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1D57C5B68();
  v13[15] = 0;
  sub_1D57C5B04(&qword_1EFF4AEC0, (uint64_t (*)(void))sub_1D589C8FC, MEMORY[0x1E0DEAF40]);
  sub_1D5AAECD0();
  v10 = v14;
  v13[14] = 1;
  swift_bridgeObjectRetain();
  v11 = sub_1D5AAECE8();
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  *a2 = v10;
  a2[1] = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1D589C8FC()
{
  unint64_t result;

  result = qword_1EFF4AEC8;
  if (!qword_1EFF4AEC8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedJournalGroupResultData, &type metadata for FeedJournalGroupResultData);
    atomic_store(result, (unint64_t *)&qword_1EFF4AEC8);
  }
  return result;
}

unint64_t sub_1D589C944()
{
  unint64_t result;

  result = qword_1ED9D0110;
  if (!qword_1ED9D0110)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedJournalEntryData, &type metadata for FeedJournalEntryData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0110);
  }
  return result;
}

unint64_t sub_1D589C98C()
{
  unint64_t result;

  result = qword_1ED9D0108;
  if (!qword_1ED9D0108)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedJournalEntryData, &type metadata for FeedJournalEntryData);
    atomic_store(result, (unint64_t *)&qword_1ED9D0108);
  }
  return result;
}

uint64_t sub_1D589C9D0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FeedJournalEntryData.init(from:)(a1, a2);
}

_QWORD *assignWithCopy for FeedJournalEntryData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

_QWORD *assignWithTake for FeedJournalEntryData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for FeedJournalEntryData.CodingKeys()
{
  return &type metadata for FeedJournalEntryData.CodingKeys;
}

unint64_t sub_1D589CA80()
{
  unint64_t result;

  result = qword_1EFF4AED0;
  if (!qword_1EFF4AED0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC0CC0, &type metadata for FeedJournalEntryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4AED0);
  }
  return result;
}

unint64_t sub_1D589CAC8()
{
  unint64_t result;

  result = qword_1ED9D0100;
  if (!qword_1ED9D0100)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC0C30, &type metadata for FeedJournalEntryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0100);
  }
  return result;
}

unint64_t sub_1D589CB10()
{
  unint64_t result;

  result = qword_1ED9D00F8;
  if (!qword_1ED9D00F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC0C58, &type metadata for FeedJournalEntryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D00F8);
  }
  return result;
}

uint64_t sub_1D589CB54(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73655270756F7267 && a2 == 0xEC00000073746C75;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t AMSErrorData.code.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t AMSErrorData.code.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*AMSErrorData.code.modify())()
{
  return nullsub_1;
}

uint64_t AMSErrorData.init(code:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1D589CC84()
{
  return 1701080931;
}

uint64_t sub_1D589CC94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701080931 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D589CD18()
{
  sub_1D589CE58();
  return sub_1D5AAEED4();
}

uint64_t sub_1D589CD40()
{
  sub_1D589CE58();
  return sub_1D5AAEEE0();
}

uint64_t AMSErrorData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D589CFBC(0, &qword_1EFF4AED8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D589CE58();
  sub_1D5AAEEC8();
  sub_1D5AAED78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D589CE58()
{
  unint64_t result;

  result = qword_1EFF4AEE0;
  if (!qword_1EFF4AEE0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC0EAC, &type metadata for AMSErrorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4AEE0);
  }
  return result;
}

uint64_t AMSErrorData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v12;

  sub_1D589CFBC(0, &qword_1EFF4AEE8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D589CE58();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECDC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D589CFBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D589CE58();
    v7 = a3(a1, &type metadata for AMSErrorData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D589D01C()
{
  unint64_t result;

  result = qword_1ED9C77C8;
  if (!qword_1ED9C77C8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AMSErrorData, &type metadata for AMSErrorData);
    atomic_store(result, (unint64_t *)&qword_1ED9C77C8);
  }
  return result;
}

unint64_t sub_1D589D064()
{
  unint64_t result;

  result = qword_1ED9C77C0;
  if (!qword_1ED9C77C0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AMSErrorData, &type metadata for AMSErrorData);
    atomic_store(result, (unint64_t *)&qword_1ED9C77C0);
  }
  return result;
}

uint64_t sub_1D589D0A8@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return AMSErrorData.init(from:)(a1, a2);
}

uint64_t sub_1D589D0BC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D589CFBC(0, &qword_1EFF4AED8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D589CE58();
  sub_1D5AAEEC8();
  sub_1D5AAED78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for AMSErrorData()
{
  return &type metadata for AMSErrorData;
}

uint64_t storeEnumTagSinglePayload for AMSErrorData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D589D1FC + 4 * byte_1D5AC0D38[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D589D21C + 4 * byte_1D5AC0D3D[v4]))();
}

_BYTE *sub_1D589D1FC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D589D21C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D589D224(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D589D22C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D589D234(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D589D23C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AMSErrorData.CodingKeys()
{
  return &type metadata for AMSErrorData.CodingKeys;
}

unint64_t sub_1D589D25C()
{
  unint64_t result;

  result = qword_1EFF4AEF0;
  if (!qword_1EFF4AEF0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC0E84, &type metadata for AMSErrorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4AEF0);
  }
  return result;
}

unint64_t sub_1D589D2A4()
{
  unint64_t result;

  result = qword_1EFF4AEF8;
  if (!qword_1EFF4AEF8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC0DF4, &type metadata for AMSErrorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4AEF8);
  }
  return result;
}

unint64_t sub_1D589D2EC()
{
  unint64_t result;

  result = qword_1EFF4AF00;
  if (!qword_1EFF4AF00)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC0E1C, &type metadata for AMSErrorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4AF00);
  }
  return result;
}

uint64_t sub_1D589D330(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4AF08, MEMORY[0x1E0CF8078]);
}

uint64_t static FeedEmptyEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF470E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4AF08, a1);
}

uint64_t sub_1D589D370(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4AF20, MEMORY[0x1E0CF8380]);
}

uint64_t static FeedEmptyEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF470F0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4AF20, a1);
}

uint64_t FeedEmptyEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t FeedEmptyEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*FeedEmptyEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t FeedEmptyEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedEmptyEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for FeedEmptyEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4AFA8);
}

uint64_t FeedEmptyEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedEmptyEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedEmptyEvent.feedData.modify())()
{
  type metadata accessor for FeedEmptyEvent(0);
  return nullsub_1;
}

uint64_t FeedEmptyEvent.feedConfigData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedEmptyEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedEmptyEvent.feedConfigData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedEmptyEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedEmptyEvent.feedConfigData.modify())()
{
  type metadata accessor for FeedEmptyEvent(0);
  return nullsub_1;
}

uint64_t FeedEmptyEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedEmptyEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedEmptyEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedEmptyEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedEmptyEvent.viewData.modify())()
{
  type metadata accessor for FeedEmptyEvent(0);
  return nullsub_1;
}

uint64_t FeedEmptyEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for FeedEmptyEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
}

uint64_t FeedEmptyEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t FeedEmptyEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for FeedEmptyEvent.Model(0) + 20);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FeedEmptyEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4B040);
}

uint64_t FeedEmptyEvent.Model.feedConfigData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v3 = v1 + *(int *)(type metadata accessor for FeedEmptyEvent.Model(0) + 24);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 24);
  *(_QWORD *)(a1 + 40) = v6;
  return swift_bridgeObjectRetain();
}

uint64_t FeedEmptyEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedEmptyEvent.Model(0) + 28));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

__n128 FeedEmptyEvent.Model.init(eventData:feedData:feedConfigData:viewData:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 result;
  uint64_t v20;
  __n128 v21;
  __int16 v22;
  uint64_t v23;

  v7 = *a2;
  v8 = *((_QWORD *)a2 + 1);
  v9 = *((_QWORD *)a2 + 2);
  v10 = *a3;
  v11 = a3[1];
  v12 = *((_BYTE *)a3 + 16);
  v21 = *(__n128 *)(a3 + 3);
  v13 = a3[5];
  v14 = *a4;
  v23 = a4[1];
  v22 = *((_WORD *)a4 + 8);
  v15 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a5, a1, v15);
  v16 = (int *)type metadata accessor for FeedEmptyEvent.Model(0);
  v17 = a5 + v16[5];
  *(_BYTE *)v17 = v7;
  *(_QWORD *)(v17 + 8) = v8;
  *(_QWORD *)(v17 + 16) = v9;
  v18 = a5 + v16[6];
  *(_QWORD *)v18 = v10;
  *(_QWORD *)(v18 + 8) = v11;
  *(_BYTE *)(v18 + 16) = v12;
  result = v21;
  *(__n128 *)(v18 + 24) = v21;
  *(_QWORD *)(v18 + 40) = v13;
  v20 = a5 + v16[7];
  *(_QWORD *)v20 = v14;
  *(_QWORD *)(v20 + 8) = v23;
  *(_WORD *)(v20 + 16) = v22;
  return result;
}

uint64_t sub_1D589D9F4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D589DA28 + 4 * byte_1D5AC0F00[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D589DA28()
{
  return 0x6174614464656566;
}

uint64_t sub_1D589DA40()
{
  return 0x666E6F4364656566;
}

uint64_t sub_1D589DA64()
{
  return 0x6174614477656976;
}

uint64_t sub_1D589DA7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D589F640(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D589DAA0()
{
  sub_1D589DD18();
  return sub_1D5AAEED4();
}

uint64_t sub_1D589DAC8()
{
  sub_1D589DD18();
  return sub_1D5AAEEE0();
}

uint64_t FeedEmptyEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];
  __int128 v20;
  uint64_t v21;
  char v22;

  v3 = v1;
  sub_1D589E104(0, &qword_1EFF4AF38, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v19[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D589DD18();
  sub_1D5AAEEC8();
  v19[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for FeedEmptyEvent.Model(0);
    v11 = v3 + v10[5];
    v19[0] = *(_BYTE *)v11;
    *(_OWORD *)&v19[8] = *(_OWORD *)(v11 + 8);
    v22 = 1;
    sub_1D57C65D4();
    sub_1D5AAED6C();
    v12 = v3 + v10[6];
    v13 = *(_BYTE *)(v12 + 16);
    v14 = *(_QWORD *)(v12 + 40);
    *(_OWORD *)v19 = *(_OWORD *)v12;
    v19[16] = v13;
    v20 = *(_OWORD *)(v12 + 24);
    v21 = v14;
    v22 = 2;
    sub_1D57CAA2C();
    sub_1D5AAED6C();
    v15 = (uint64_t *)(v3 + v10[7]);
    v16 = *v15;
    v17 = v15[1];
    LOWORD(v15) = *((_WORD *)v15 + 8);
    *(_QWORD *)v19 = v16;
    *(_QWORD *)&v19[8] = v17;
    *(_WORD *)&v19[16] = (_WORD)v15;
    v22 = 3;
    sub_1D57C62A4();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D589DD18()
{
  unint64_t result;

  result = qword_1EFF4AF40;
  if (!qword_1EFF4AF40)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC1104, &type metadata for FeedEmptyEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4AF40);
  }
  return result;
}

uint64_t FeedEmptyEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __int16 v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  _QWORD *v29;
  _BYTE v30[24];
  __int128 v31;
  uint64_t v32;
  char v33;

  v24 = a2;
  v3 = sub_1D5AADF98();
  v25 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v27 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D589E104(0, &qword_1EFF4AF48, MEMORY[0x1E0DED048]);
  v26 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - v7;
  v9 = (int *)type metadata accessor for FeedEmptyEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D589DD18();
  v28 = v8;
  v12 = (uint64_t)v29;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v29 = a1;
  v14 = v25;
  v30[0] = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v15 = v26;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v27, v3);
  v33 = 1;
  sub_1D57C6590();
  sub_1D5AAECD0();
  v16 = &v11[v9[5]];
  *v16 = v30[0];
  *(_OWORD *)(v16 + 8) = *(_OWORD *)&v30[8];
  v33 = 2;
  sub_1D57CA9E8();
  sub_1D5AAECD0();
  v17 = v30[16];
  v18 = v32;
  v19 = &v11[v9[6]];
  *(_OWORD *)v19 = *(_OWORD *)v30;
  v19[16] = v17;
  *(_OWORD *)(v19 + 24) = v31;
  *((_QWORD *)v19 + 5) = v18;
  v33 = 3;
  sub_1D57C6260();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v28, v15);
  v20 = *(_QWORD *)&v30[8];
  v21 = *(_WORD *)&v30[16];
  v22 = &v11[v9[7]];
  *(_QWORD *)v22 = *(_QWORD *)v30;
  *((_QWORD *)v22 + 1) = v20;
  *((_WORD *)v22 + 8) = v21;
  sub_1D589E160((uint64_t)v11, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return sub_1D589E1A4((uint64_t)v11);
}

void sub_1D589E104(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D589DD18();
    v7 = a3(a1, &type metadata for FeedEmptyEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D589E160(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedEmptyEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D589E1A4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedEmptyEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D589E1E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedEmptyEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D589E1F4(_QWORD *a1)
{
  return FeedEmptyEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D589E208@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF470E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4AF08, a1);
}

uint64_t sub_1D589E22C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF470F0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4AF20, a1);
}

uint64_t sub_1D589E250@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedEmptyEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for FeedEmptyEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t initializeWithCopy for FeedEmptyEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for FeedEmptyEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for FeedEmptyEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for FeedEmptyEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedEmptyEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D589EAE8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for FeedEmptyEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D589EC10(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D589ED34()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9CF148, (void (*)(void))sub_1D57CA9E8, (void (*)(void))sub_1D57CAA2C);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedEmptyEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    v13[16] = v14[16];
    *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
    *((_QWORD *)v13 + 5) = *((_QWORD *)v14 + 5);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = *((_QWORD *)v18 + 1);
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *((_QWORD *)v17 + 1) = v19;
    v17[16] = v18[16];
    v17[17] = v18[17];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FeedEmptyEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedEmptyEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_QWORD *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v14;
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  *(_OWORD *)(v12 + 24) = *(_OWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)(v17 + 8);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_QWORD *)(v16 + 8) = v18;
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v17 + 16);
  *(_BYTE *)(v16 + 17) = *(_BYTE *)(v17 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedEmptyEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  *(_QWORD *)(v11 + 24) = *(_QWORD *)(v12 + 24);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  *(_QWORD *)(v11 + 40) = *(_QWORD *)(v12 + 40);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  *(_BYTE *)(v14 + 17) = *(_BYTE *)(v15 + 17);
  return a1;
}

uint64_t initializeWithTake for FeedEmptyEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = (__int128 *)(a2 + v7);
  v11 = *v10;
  *(_QWORD *)(v9 + 16) = *((_QWORD *)v10 + 2);
  *(_OWORD *)v9 = v11;
  v12 = (_OWORD *)(a1 + v8);
  v13 = (_OWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v12[2] = v13[2];
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_WORD *)(v16 + 16) = *(_WORD *)(v17 + 16);
  return a1;
}

uint64_t assignWithTake for FeedEmptyEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = v11;
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_WORD *)(v17 + 16) = *(_WORD *)(v18 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedEmptyEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D589F310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedEmptyEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D589F39C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D589F418()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedEmptyEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D589F4E8 + 4 * byte_1D5AC0F09[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D589F51C + 4 * byte_1D5AC0F04[v4]))();
}

uint64_t sub_1D589F51C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D589F524(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D589F52CLL);
  return result;
}

uint64_t sub_1D589F538(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D589F540);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D589F544(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D589F54C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedEmptyEvent.Model.CodingKeys()
{
  return &type metadata for FeedEmptyEvent.Model.CodingKeys;
}

unint64_t sub_1D589F56C()
{
  unint64_t result;

  result = qword_1EFF4B080;
  if (!qword_1EFF4B080)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC10DC, &type metadata for FeedEmptyEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B080);
  }
  return result;
}

unint64_t sub_1D589F5B4()
{
  unint64_t result;

  result = qword_1EFF4B088;
  if (!qword_1EFF4B088)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC104C, &type metadata for FeedEmptyEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B088);
  }
  return result;
}

unint64_t sub_1D589F5FC()
{
  unint64_t result;

  result = qword_1EFF4B090;
  if (!qword_1EFF4B090)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC1074, &type metadata for FeedEmptyEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B090);
  }
  return result;
}

uint64_t sub_1D589F640(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x666E6F4364656566 && a2 == 0xEE00617461446769 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

BOOL CLAuthorizationStatus.isAuthorized.getter(int a1)
{
  return (a1 - 3) < 2;
}

uint64_t sub_1D589F838(uint64_t a1)
{
  return sub_1D57A8BCC(a1, 0x7469617274726F50, 0xE800000000000000, &qword_1ED9C77B8);
}

double FCFeedPersonalizedItemScoreProfile.scienceData.getter@<D0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  id v20;
  double v21;
  double v22;
  double v23;
  id v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  id v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double result;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  objc_msgSend(v1, sel_agedPersonalizationScore);
  v58 = v3;
  objc_msgSend(v1, sel_autoSubscribeCtr);
  v57 = v4;
  objc_msgSend(v1, sel_computedGlobalScoreCoefficient);
  v56 = v5;
  objc_msgSend(v1, sel_conversionMultiplier);
  v55 = v6;
  objc_msgSend(v1, sel_dampenedStaticMultiplier);
  v54 = v7;
  objc_msgSend(v1, sel_featureCtr);
  v53 = v8;
  objc_msgSend(v1, sel_paidNonpaidSubscriptionCtr);
  v52 = v9;
  objc_msgSend(v1, sel_personalizationScore);
  v51 = v10;
  objc_msgSend(v1, sel_qualitativeMultiplier);
  v50 = v11;
  objc_msgSend(v1, sel_rawPersonalizationScore);
  v49 = v12;
  objc_msgSend(v1, sel_staticMultiplier);
  v48 = v13;
  objc_msgSend(v1, sel_subscribedChannelCtr);
  v47 = v14;
  objc_msgSend(v1, sel_userFeedbackScore);
  v46 = v15;
  objc_msgSend(v1, sel_rawUserFeedbackScore);
  v45 = v16;
  v17 = sub_1D589FC78(v1);
  objc_msgSend(v1, sel_embeddingScore);
  v44 = v18;
  objc_msgSend(v1, sel_tabiScore);
  v43 = round(v19 * 10000.0) / 10000.0;
  v20 = objc_msgSend(v1, sel_coefficients);
  objc_msgSend(v20, sel_clientScoreCoefficient);
  v22 = v21;

  v23 = round(v22 * 100.0) / 100.0;
  v24 = objc_msgSend(v1, sel_coefficients);
  objc_msgSend(v24, sel_conversionCoefficient);
  v26 = v25;

  v27 = round(v26 * 100.0) / 100.0;
  objc_msgSend(v1, sel_multiplier);
  v29 = round(v28 * 1000.0) / 1000.0;
  v30 = objc_msgSend(v1, sel_coefficients);
  objc_msgSend(v30, sel_halfLifeCoefficient);
  v32 = v31;

  v33 = round(v32 * 100.0) / 100.0;
  objc_msgSend(v1, sel_serverScoreDemocratizationFactor);
  v35 = round(v34 * 100.0) / 100.0;
  v36 = objc_msgSend(v1, sel_coefficients);
  objc_msgSend(v36, sel_autofavoritedScoreCoefficient);
  v38 = v37;

  objc_msgSend(v1, sel_nicheContentMultiplier);
  v40 = round(v39 * 1000.0) / 1000.0;
  objc_msgSend(v1, sel_contentTriggerDampener);
  *(_QWORD *)a1 = v58;
  *(_QWORD *)(a1 + 8) = v57;
  *(_QWORD *)(a1 + 16) = v56;
  *(_QWORD *)(a1 + 24) = v55;
  *(_QWORD *)(a1 + 32) = v54;
  *(_QWORD *)(a1 + 40) = v53;
  result = round(v41 * 100.0) / 100.0;
  *(_QWORD *)(a1 + 48) = v52;
  *(_QWORD *)(a1 + 56) = v51;
  *(_QWORD *)(a1 + 64) = v50;
  *(_QWORD *)(a1 + 72) = v49;
  *(_QWORD *)(a1 + 80) = v48;
  *(_QWORD *)(a1 + 88) = v47;
  *(_QWORD *)(a1 + 96) = v46;
  *(_QWORD *)(a1 + 104) = v45;
  *(_QWORD *)(a1 + 112) = v17;
  *(_QWORD *)(a1 + 120) = v44;
  *(_BYTE *)(a1 + 128) = 0;
  *(double *)(a1 + 136) = v43;
  *(_BYTE *)(a1 + 144) = 0;
  *(double *)(a1 + 152) = v23;
  *(_BYTE *)(a1 + 160) = 0;
  *(double *)(a1 + 168) = v27;
  *(_BYTE *)(a1 + 176) = 0;
  *(double *)(a1 + 184) = v29;
  *(_BYTE *)(a1 + 192) = 0;
  *(double *)(a1 + 200) = v33;
  *(_BYTE *)(a1 + 208) = 0;
  *(double *)(a1 + 216) = v35;
  *(_BYTE *)(a1 + 224) = 0;
  *(double *)(a1 + 232) = round(v38 * 100.0) / 100.0;
  *(_BYTE *)(a1 + 240) = 0;
  *(double *)(a1 + 248) = v40;
  *(_BYTE *)(a1 + 256) = 0;
  *(double *)(a1 + 264) = result;
  *(_BYTE *)(a1 + 272) = 0;
  return result;
}

char *sub_1D589FC78(void *a1)
{
  id v2;
  unint64_t v3;
  uint64_t v4;
  char *result;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  v2 = objc_msgSend(a1, sel_cohortMemberships);
  sub_1D589FEA4();
  v3 = sub_1D5AAE94C();

  if (v3 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v19 = MEMORY[0x1E0DEE9D8];
      result = sub_1D5AAAFF8(0, v4 & ~(v4 >> 63), 0);
      if (v4 < 0)
        break;
      v6 = 0;
      v7 = v19;
      while (v4 != v6)
      {
        if ((v3 & 0xC000000000000001) != 0)
          v8 = (id)MEMORY[0x1D8278F6C](v6, v3);
        else
          v8 = *(id *)(v3 + 8 * v6 + 32);
        v9 = v8;
        result = (char *)objc_msgSend(v8, sel_tagID);
        if (!result)
          goto LABEL_19;
        v10 = result;
        v11 = sub_1D5AAE820();
        v13 = v12;

        objc_msgSend(v9, sel_score);
        v15 = v14;

        v17 = *(_QWORD *)(v19 + 16);
        v16 = *(_QWORD *)(v19 + 24);
        if (v17 >= v16 >> 1)
          sub_1D5AAAFF8((char *)(v16 > 1), v17 + 1, 1);
        ++v6;
        *(_QWORD *)(v19 + 16) = v17 + 1;
        v18 = (_QWORD *)(v19 + 24 * v17);
        v18[4] = v11;
        v18[5] = v13;
        v18[6] = v15;
        if (v4 == v6)
        {
          swift_bridgeObjectRelease();
          return (char *)v7;
        }
      }
      __break(1u);
LABEL_15:
      swift_bridgeObjectRetain();
      v4 = sub_1D5AAEC04();
      swift_bridgeObjectRelease();
      if (!v4)
        goto LABEL_16;
    }
    __break(1u);
LABEL_19:
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return (char *)MEMORY[0x1E0DEE9D8];
  }
  return result;
}

Swift::Double __swiftcall Double.rounded(to:)(Swift::Int to)
{
  double v1;
  double v2;
  double v3;

  v2 = v1;
  v3 = __exp10((double)to);
  return round(v3 * v2) / v3;
}

unint64_t sub_1D589FEA4()
{
  unint64_t result;

  result = qword_1ED9D0CB8;
  if (!qword_1ED9D0CB8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9D0CB8);
  }
  return result;
}

uint64_t sub_1D589FEE0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF4B098, MEMORY[0x1E0CF8078]);
}

uint64_t static JourneyMessageDismissalEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF470F8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4B098, a1);
}

uint64_t sub_1D589FF20(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF4B0B0, MEMORY[0x1E0CF8380]);
}

uint64_t static JourneyMessageDismissalEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47100, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4B0B0, a1);
}

uint64_t JourneyMessageDismissalEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t JourneyMessageDismissalEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*JourneyMessageDismissalEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t JourneyMessageDismissalEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageDismissalEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for JourneyMessageDismissalEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4B138);
}

uint64_t JourneyMessageDismissalEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageDismissalEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageDismissalEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for JourneyMessageDismissalEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageDismissalEvent.dialogStyleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageDismissalEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageDismissalEvent.dialogStyleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageDismissalEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageDismissalEvent.dialogStyleData.modify())()
{
  type metadata accessor for JourneyMessageDismissalEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageDismissalEvent.placementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageDismissalEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageDismissalEvent.placementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageDismissalEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageDismissalEvent.placementData.modify())()
{
  type metadata accessor for JourneyMessageDismissalEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageDismissalEvent.engagementPlacementOriginationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageDismissalEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageDismissalEvent.engagementPlacementOriginationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageDismissalEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageDismissalEvent.engagementPlacementOriginationData.modify())()
{
  type metadata accessor for JourneyMessageDismissalEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageDismissalEvent.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageDismissalEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t JourneyMessageDismissalEvent.purchaseData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageDismissalEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*JourneyMessageDismissalEvent.purchaseData.modify())()
{
  type metadata accessor for JourneyMessageDismissalEvent(0);
  return nullsub_1;
}

uint64_t JourneyMessageDismissalEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for JourneyMessageDismissalEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v12, v15);
}

uint64_t JourneyMessageDismissalEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t JourneyMessageDismissalEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for JourneyMessageDismissalEvent.Model(0) + 20));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for JourneyMessageDismissalEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4B1D8);
}

uint64_t JourneyMessageDismissalEvent.Model.dialogStyleData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for JourneyMessageDismissalEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t JourneyMessageDismissalEvent.Model.placementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = v1 + *(int *)(type metadata accessor for JourneyMessageDismissalEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 24);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t JourneyMessageDismissalEvent.Model.engagementPlacementOriginationData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for JourneyMessageDismissalEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t JourneyMessageDismissalEvent.Model.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for JourneyMessageDismissalEvent.Model(0) + 36));
  v5 = *v3;
  v4 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

__n128 JourneyMessageDismissalEvent.Model.init(eventData:userBundleSubscriptionContextData:dialogStyleData:placementData:engagementPlacementOriginationData:purchaseData:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, __int128 *a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 result;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  __int128 v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;

  v9 = *a2;
  v10 = *((_QWORD *)a2 + 1);
  v11 = *((_QWORD *)a2 + 2);
  v12 = a2[24];
  v13 = a2[25];
  v14 = *((_QWORD *)a2 + 4);
  v15 = *((_QWORD *)a2 + 5);
  v16 = a2[48];
  v23 = *a3;
  v26 = (__n128)a4[1];
  v27 = *a4;
  v24 = *((_QWORD *)a4 + 5);
  v25 = *((_QWORD *)a4 + 4);
  v30 = a6[1];
  v31 = *a6;
  v28 = *a5;
  v29 = *((_BYTE *)a6 + 16);
  v17 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a7, a1, v17);
  v18 = (int *)type metadata accessor for JourneyMessageDismissalEvent.Model(0);
  v19 = a7 + v18[5];
  *(_BYTE *)v19 = v9;
  *(_QWORD *)(v19 + 8) = v10;
  *(_QWORD *)(v19 + 16) = v11;
  *(_BYTE *)(v19 + 24) = v12;
  *(_BYTE *)(v19 + 25) = v13;
  *(_QWORD *)(v19 + 32) = v14;
  *(_QWORD *)(v19 + 40) = v15;
  *(_BYTE *)(v19 + 48) = v16;
  *(_BYTE *)(a7 + v18[6]) = v23;
  v20 = a7 + v18[7];
  result = v26;
  *(_OWORD *)v20 = v27;
  *(__n128 *)(v20 + 16) = v26;
  *(_QWORD *)(v20 + 32) = v25;
  *(_QWORD *)(v20 + 40) = v24;
  *(_BYTE *)(a7 + v18[8]) = v28;
  v22 = a7 + v18[9];
  *(_QWORD *)v22 = v31;
  *(_QWORD *)(v22 + 8) = v30;
  *(_BYTE *)(v22 + 16) = v29;
  return result;
}

uint64_t sub_1D58A0920(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58A0958 + 4 * byte_1D5AC1160[a1]))(0x746144746E657665, 0xE900000000000061);
}

unint64_t sub_1D58A0958()
{
  return 0xD000000000000021;
}

uint64_t sub_1D58A0974()
{
  return 0x7453676F6C616964;
}

uint64_t sub_1D58A0998()
{
  return 0x6E656D6563616C70;
}

unint64_t sub_1D58A09BC()
{
  return 0xD000000000000022;
}

uint64_t sub_1D58A09DC()
{
  return 0x6573616863727570;
}

uint64_t sub_1D58A09FC()
{
  unsigned __int8 *v0;

  return sub_1D58A0920(*v0);
}

uint64_t sub_1D58A0A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58A2E54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58A0A28()
{
  sub_1D58A0D38();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58A0A50()
{
  sub_1D58A0D38();
  return sub_1D5AAEEE0();
}

uint64_t JourneyMessageDismissalEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  char v22;
  _BYTE v23[32];
  __int128 v24;
  char v25;

  v3 = v1;
  sub_1D58A11F4(0, &qword_1EFF4B0C8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58A0D38();
  sub_1D5AAEEC8();
  v23[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for JourneyMessageDismissalEvent.Model(0);
    v11 = v3 + v10[5];
    v12 = *(_BYTE *)(v11 + 24);
    v13 = *(_BYTE *)(v11 + 25);
    v14 = *(_BYTE *)(v11 + 48);
    v23[0] = *(_BYTE *)v11;
    *(_OWORD *)&v23[8] = *(_OWORD *)(v11 + 8);
    v23[24] = v12;
    v23[25] = v13;
    v24 = *(_OWORD *)(v11 + 32);
    v25 = v14;
    v22 = 1;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v23[0] = *(_BYTE *)(v3 + v10[6]);
    v22 = 2;
    sub_1D580BB8C();
    sub_1D5AAED6C();
    v15 = v3 + v10[7];
    v16 = *(_QWORD *)(v15 + 8);
    *(_QWORD *)v23 = *(_QWORD *)v15;
    *(_QWORD *)&v23[8] = v16;
    v17 = *(_OWORD *)(v15 + 32);
    *(_OWORD *)&v23[16] = *(_OWORD *)(v15 + 16);
    v24 = v17;
    v22 = 3;
    sub_1D57C8654();
    sub_1D5AAED6C();
    v23[0] = *(_BYTE *)(v3 + v10[8]);
    v22 = 4;
    sub_1D580BEFC();
    sub_1D5AAED18();
    v18 = v3 + v10[9];
    v19 = *(_BYTE *)(v18 + 16);
    *(_OWORD *)v23 = *(_OWORD *)v18;
    v23[16] = v19;
    v22 = 5;
    sub_1D580C07C();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D58A0D38()
{
  unint64_t result;

  result = qword_1EFF4B0D0;
  if (!qword_1EFF4B0D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC13C4, &type metadata for JourneyMessageDismissalEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B0D0);
  }
  return result;
}

uint64_t JourneyMessageDismissalEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  char *v19;
  uint64_t v20;
  char *v21;
  __int128 v22;
  char v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  _QWORD *v31;
  _BYTE v32[32];
  __int128 v33;
  char v34;
  char v35;

  v26 = a2;
  v3 = sub_1D5AADF98();
  v27 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v29 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58A11F4(0, &qword_1EFF4B0D8, MEMORY[0x1E0DED048]);
  v28 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - v7;
  v9 = (int *)type metadata accessor for JourneyMessageDismissalEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58A0D38();
  v30 = v8;
  v12 = (uint64_t)v31;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v31 = a1;
  v14 = v27;
  v32[0] = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v15 = v28;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v29, v3);
  v35 = 1;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v16 = v32[24];
  v17 = v32[25];
  v18 = v34;
  v19 = &v11[v9[5]];
  *v19 = v32[0];
  *(_OWORD *)(v19 + 8) = *(_OWORD *)&v32[8];
  v19[24] = v16;
  v19[25] = v17;
  *((_OWORD *)v19 + 2) = v33;
  v19[48] = v18;
  v35 = 2;
  sub_1D580BB48();
  sub_1D5AAECD0();
  v11[v9[6]] = v32[0];
  v35 = 3;
  sub_1D57C8610();
  sub_1D5AAECD0();
  v20 = *(_QWORD *)&v32[8];
  v21 = &v11[v9[7]];
  *(_QWORD *)v21 = *(_QWORD *)v32;
  *((_QWORD *)v21 + 1) = v20;
  v22 = v33;
  *((_OWORD *)v21 + 1) = *(_OWORD *)&v32[16];
  *((_OWORD *)v21 + 2) = v22;
  v35 = 4;
  sub_1D580BEB8();
  sub_1D5AAEC7C();
  v11[v9[8]] = v32[0];
  v35 = 5;
  sub_1D580C038();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v30, v15);
  v23 = v32[16];
  v24 = &v11[v9[9]];
  *(_OWORD *)v24 = *(_OWORD *)v32;
  v24[16] = v23;
  sub_1D58A1250((uint64_t)v11, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return sub_1D58A1294((uint64_t)v11);
}

void sub_1D58A11F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58A0D38();
    v7 = a3(a1, &type metadata for JourneyMessageDismissalEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58A1250(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JourneyMessageDismissalEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D58A1294(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for JourneyMessageDismissalEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58A12D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return JourneyMessageDismissalEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58A12E4(_QWORD *a1)
{
  return JourneyMessageDismissalEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58A12F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF470F8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF4B098, a1);
}

uint64_t sub_1D58A131C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47100, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF4B0B0, a1);
}

uint64_t sub_1D58A1340@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  v13 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v13, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for JourneyMessageDismissalEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for JourneyMessageDismissalEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

uint64_t initializeWithCopy for JourneyMessageDismissalEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for JourneyMessageDismissalEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for JourneyMessageDismissalEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for JourneyMessageDismissalEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for JourneyMessageDismissalEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58A1FF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for JourneyMessageDismissalEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58A21A4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D58A2350()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9CD990, (void (*)(void))sub_1D580BB48, (void (*)(void))sub_1D580BB8C);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9CD998, (void (*)(void))sub_1D57C8610, (void (*)(void))sub_1D57C8654);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9CF1B8, (void (*)(void))sub_1D580BEB8, (void (*)(void))sub_1D580BEFC);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for JourneyMessageDismissalEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    *((_WORD *)v10 + 12) = *((_WORD *)v11 + 12);
    v13 = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
    *((_QWORD *)v10 + 5) = v13;
    v10[48] = v11[48];
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v14 = a3[7];
    v15 = a3[8];
    v16 = (_QWORD *)((char *)a1 + v14);
    v17 = (_QWORD *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = v17[3];
    v16[2] = v17[2];
    v16[3] = v19;
    v20 = v17[4];
    v21 = v17[5];
    LOBYTE(v17) = *((_BYTE *)a2 + v15);
    v16[4] = v20;
    v16[5] = v21;
    *((_BYTE *)a1 + v15) = (_BYTE)v17;
    v22 = a3[9];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = *((_QWORD *)v24 + 1);
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_QWORD *)v23 + 1) = v25;
    v23[16] = v24[16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for JourneyMessageDismissalEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for JourneyMessageDismissalEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  *(_WORD *)(v9 + 24) = *(_WORD *)(v10 + 24);
  v12 = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v9 + 40) = v12;
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v13 = a3[7];
  v14 = a3[8];
  v15 = (_QWORD *)(a1 + v13);
  v16 = (_QWORD *)(a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = v16[3];
  v15[2] = v16[2];
  v15[3] = v18;
  v19 = v16[4];
  v20 = v16[5];
  LOBYTE(v16) = *(_BYTE *)(a2 + v14);
  v15[4] = v19;
  v15[5] = v20;
  *(_BYTE *)(a1 + v14) = (_BYTE)v16;
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(_QWORD *)(v23 + 8);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_QWORD *)(v22 + 8) = v24;
  *(_BYTE *)(v22 + 16) = *(_BYTE *)(v23 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JourneyMessageDismissalEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v10 = a3[7];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *(_QWORD *)(a2 + v10);
  v11[1] = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[2] = v12[2];
  v11[3] = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[4] = v12[4];
  v11[5] = v12[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v13 = a3[9];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  return a1;
}

uint64_t initializeWithTake for JourneyMessageDismissalEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v12 = a3[7];
  v13 = a3[8];
  v14 = (_OWORD *)(a1 + v12);
  v15 = (_OWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v14[2] = v15[2];
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v17 = a3[9];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_BYTE *)(v18 + 16) = *(_BYTE *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  return a1;
}

uint64_t assignWithTake for JourneyMessageDismissalEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  v11 = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  v12 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = *(_QWORD *)(a2 + v12);
  v16 = *(_QWORD *)(a2 + v12 + 8);
  *v13 = v15;
  v13[1] = v16;
  swift_bridgeObjectRelease();
  v17 = v14[3];
  v13[2] = v14[2];
  v13[3] = v17;
  swift_bridgeObjectRelease();
  v18 = v14[5];
  v13[4] = v14[4];
  v13[5] = v18;
  swift_bridgeObjectRelease();
  v19 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_QWORD *)(v21 + 8);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_QWORD *)(v20 + 8) = v22;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v20 + 16) = *(_BYTE *)(v21 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for JourneyMessageDismissalEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58A2B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for JourneyMessageDismissalEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58A2B9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D58A2C18()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for JourneyMessageDismissalEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D58A2CFC + 4 * byte_1D5AC116B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D58A2D30 + 4 * byte_1D5AC1166[v4]))();
}

uint64_t sub_1D58A2D30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58A2D38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58A2D40);
  return result;
}

uint64_t sub_1D58A2D4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58A2D54);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D58A2D58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58A2D60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JourneyMessageDismissalEvent.Model.CodingKeys()
{
  return &type metadata for JourneyMessageDismissalEvent.Model.CodingKeys;
}

unint64_t sub_1D58A2D80()
{
  unint64_t result;

  result = qword_1EFF4B220;
  if (!qword_1EFF4B220)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC139C, &type metadata for JourneyMessageDismissalEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B220);
  }
  return result;
}

unint64_t sub_1D58A2DC8()
{
  unint64_t result;

  result = qword_1EFF4B228;
  if (!qword_1EFF4B228)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC130C, &type metadata for JourneyMessageDismissalEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B228);
  }
  return result;
}

unint64_t sub_1D58A2E10()
{
  unint64_t result;

  result = qword_1EFF4B230;
  if (!qword_1EFF4B230)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC1334, &type metadata for JourneyMessageDismissalEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B230);
  }
  return result;
}

uint64_t sub_1D58A2E54(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7453676F6C616964 && a2 == 0xEF61746144656C79 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E656D6563616C70 && a2 == 0xED00006174614474 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001D5AED470 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t AdPlacementData.placementID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdPlacementData.placementID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AdPlacementData.placementID.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D58A31A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E656D6563616C70 && a2 == 0xEB00000000444974)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D58A3250()
{
  sub_1D57A73B8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58A3278()
{
  sub_1D57A73B8();
  return sub_1D5AAEEE0();
}

uint64_t AdPlacementData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D57A735C(0, &qword_1ED9CD088, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A73B8();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t AdPlacementData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D57A735C(0, &qword_1EFF4B238, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A73B8();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECA0();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D58A34C0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return AdPlacementData.init(from:)(a1, a2);
}

uint64_t storeEnumTagSinglePayload for AdPlacementData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D58A3514 + 4 * byte_1D5AC1450[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D58A3534 + 4 * byte_1D5AC1455[v4]))();
}

_BYTE *sub_1D58A3514(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D58A3534(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58A353C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58A3544(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D58A354C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D58A3554(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AdPlacementData.CodingKeys()
{
  return &type metadata for AdPlacementData.CodingKeys;
}

unint64_t sub_1D58A3574()
{
  unint64_t result;

  result = qword_1EFF4B240;
  if (!qword_1EFF4B240)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC15A0, &type metadata for AdPlacementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B240);
  }
  return result;
}

unint64_t sub_1D58A35BC()
{
  unint64_t result;

  result = qword_1ED9CCD80;
  if (!qword_1ED9CCD80)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC1510, &type metadata for AdPlacementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CCD80);
  }
  return result;
}

unint64_t sub_1D58A3604()
{
  unint64_t result;

  result = qword_1ED9CD1A0;
  if (!qword_1ED9CD1A0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC1538, &type metadata for AdPlacementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD1A0);
  }
  return result;
}

uint64_t FeedLayoutTracker.__allocating_init(tracker:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t FeedLayoutTracker.trackFeedDidFailSubgroupLayout(subgroup:failure:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;
  __int128 v11[2];

  v4 = sub_1D5AAE4A8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  sub_1D57B6254(a1, (uint64_t)v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  sub_1D57ADBD0(v11, v8 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_1D5AADF5C();
  return swift_release();
}

char *sub_1D58A3770(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(void (*)(_QWORD), uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char *v51;
  char *v52;
  char *result;
  unint64_t v54;
  void (*v55)(_QWORD);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *isUniquelyReferenced_nonNull_native;
  char *v93;
  int64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(void (*)(_QWORD), uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  double v119;
  double v120;
  uint64_t (*v121)(char *, uint64_t);
  double v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(char *, uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(void (*)(_QWORD), uint64_t);
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  void (*v166)(_QWORD);
  char *v167;
  uint64_t v168;
  char *v169;
  char *v170;
  char *v171;
  uint64_t v172;
  __int128 v173;
  void (*v174)(char *, unint64_t, uint64_t);
  __int128 v175;
  uint64_t v176;
  __int128 v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  __int128 v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(char *, unint64_t, uint64_t);
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;

  v152 = a3;
  v156 = a1;
  v4 = sub_1D5AAD710();
  v151 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v153 = (char *)&v139 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_1D5AAE5D4();
  v149 = *(_QWORD *)(v154 - 8);
  v6 = MEMORY[0x1E0C80A78](v154);
  v150 = (char *)&v139 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v148 = (char *)&v139 - v8;
  v147 = sub_1D5AAE2EC();
  v146 = *(_QWORD *)(v147 - 8);
  MEMORY[0x1E0C80A78](v147);
  v145 = (char *)&v139 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9C6F30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v139 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v170 = (char *)&v139 - v14;
  v172 = sub_1D5AAD668();
  *(_QWORD *)&v173 = *(_QWORD *)(v172 - 8);
  v15 = MEMORY[0x1E0C80A78](v172);
  v169 = (char *)&v139 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v167 = (char *)&v139 - v17;
  sub_1D58A4BA4();
  v19 = v18;
  *(_QWORD *)&v175 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v171 = (char *)&v139 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v163 = (char *)&v139 - v22;
  v23 = sub_1D5AAE694();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x1E0C80A78](v23);
  v166 = (void (*)(_QWORD))((char *)&v139 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v139 - v28;
  MEMORY[0x1E0C80A78](v27);
  v31 = (char *)&v139 - v30;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1D5AAE520();
  if (!v183)
    return (char *)sub_1D57C03D0((uint64_t)&v181, &qword_1ED9D0C20, (uint64_t (*)(uint64_t))sub_1D57C5C78);
  sub_1D57ADBD0((__int128 *)&v181, (uint64_t)&v194);
  __swift_project_boxed_opaque_existential_1(&v194, v195);
  v32 = sub_1D5AAE4CC();
  if (!v32)
    return (char *)__swift_destroy_boxed_opaque_existential_1((uint64_t)&v194);
  v33 = v32;
  v168 = (uint64_t)v13;
  v144 = v4;
  sub_1D5AAE4FC();
  sub_1D5AAE688();
  v34 = *(void (**)(void (*)(_QWORD), uint64_t))(v24 + 8);
  v142 = v34;
  v34((void (*)(_QWORD))v31, v23);
  v141 = sub_1D5AAE6B8();
  v143 = v35;
  swift_release();
  v155 = v33;
  sub_1D5AAE4FC();
  sub_1D5AAE688();
  v34((void (*)(_QWORD))v29, v23);
  v36 = sub_1D5AAE6C4();
  swift_release();
  v37 = *(_QWORD *)(v36 + 16);
  if (v37)
  {
    v38 = v36 + ((*(unsigned __int8 *)(v175 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v175 + 80));
    v39 = *(_QWORD *)(v175 + 72);
    v174 = *(void (**)(char *, unint64_t, uint64_t))(v175 + 16);
    v162 = v36;
    swift_bridgeObjectRetain();
    v164 = (char *)MEMORY[0x1E0DEE9D8];
    v40 = (uint64_t)v170;
    v41 = v163;
    v165 = v39;
    do
    {
      v174(v41, v38, v19);
      sub_1D5AAE640();
      v42 = v173;
      v43 = v172;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v173 + 48))(v40, 1, v172) == 1)
      {
        sub_1D57C03D0(v40, (unint64_t *)&qword_1ED9C6F30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        (*(void (**)(char *, uint64_t))(v175 + 8))(v41, v19);
      }
      else
      {
        v44 = v23;
        v45 = v167;
        (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v167, v40, v43);
        v46 = sub_1D5AAD62C();
        v48 = v47;
        (*(void (**)(char *, uint64_t))(v42 + 8))(v45, v43);
        (*(void (**)(char *, uint64_t))(v175 + 8))(v41, v19);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v164 = sub_1D5873398(0, *((_QWORD *)v164 + 2) + 1, 1, v164);
        v50 = *((_QWORD *)v164 + 2);
        v49 = *((_QWORD *)v164 + 3);
        if (v50 >= v49 >> 1)
          v164 = sub_1D5873398((char *)(v49 > 1), v50 + 1, 1, v164);
        v51 = v164;
        *((_QWORD *)v164 + 2) = v50 + 1;
        v52 = &v51[16 * v50];
        *((_QWORD *)v52 + 4) = v46;
        *((_QWORD *)v52 + 5) = v48;
        v40 = (uint64_t)v170;
        v23 = v44;
        v39 = v165;
      }
      v38 += v39;
      --v37;
    }
    while (v37);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    v164 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v54 = sub_1D5AAE4E4();
  v55 = v166;
  v56 = v173;
  v158 = v23;
  if (!(v54 >> 62))
  {
    v57 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v57)
      goto LABEL_18;
LABEL_28:
    swift_bridgeObjectRelease();
    v140 = MEMORY[0x1E0DEE9D8];
LABEL_29:
    v68 = sub_1D5AAE4E4();
    v69 = v68;
    if (v68 >> 62)
      goto LABEL_79;
    v70 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
LABEL_31:
    v159 = v69;
    if (v70)
    {
      v71 = 0;
      v161 = v69 & 0xC000000000000001;
      v157 = v69 + 32;
      v167 = (char *)MEMORY[0x1E0DEE9D8];
      v72 = v168;
      v73 = v172;
      v160 = v70;
      while (1)
      {
        if (v161)
        {
          v69 = MEMORY[0x1D8278F6C](v71, v159);
          v74 = __OFADD__(v71, 1);
          v75 = v71 + 1;
          if (v74)
            goto LABEL_74;
        }
        else
        {
          v69 = *(_QWORD *)(v157 + 8 * v71);
          swift_retain();
          v74 = __OFADD__(v71, 1);
          v75 = v71 + 1;
          if (v74)
          {
LABEL_74:
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            __break(1u);
LABEL_77:
            __break(1u);
LABEL_78:
            __break(1u);
LABEL_79:
            swift_bridgeObjectRetain();
            v70 = sub_1D5AAEC04();
            goto LABEL_31;
          }
        }
        v165 = v75;
        v76 = sub_1D5AAE6C4();
        v77 = *(_QWORD *)(v76 + 16);
        if (v77)
        {
          v163 = (char *)v69;
          v78 = (*(unsigned __int8 *)(v175 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v175 + 80);
          v162 = v76;
          v79 = v76 + v78;
          v80 = *(char **)(v175 + 72);
          v174 = *(void (**)(char *, unint64_t, uint64_t))(v175 + 16);
          v81 = (char *)MEMORY[0x1E0DEE9D8];
          v82 = v171;
          v170 = v80;
          v174(v171, v76 + v78, v19);
          while (1)
          {
            sub_1D5AAE640();
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v72, 1, v73) == 1)
            {
              sub_1D57C03D0(v72, (unint64_t *)&qword_1ED9C6F30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
              (*(void (**)(char *, uint64_t))(v175 + 8))(v82, v19);
            }
            else
            {
              v83 = v169;
              (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v169, v72, v73);
              v84 = sub_1D5AAD62C();
              v86 = v85;
              (*(void (**)(char *, uint64_t))(v56 + 8))(v83, v73);
              (*(void (**)(char *, uint64_t))(v175 + 8))(v82, v19);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v81 = sub_1D5873398(0, *((_QWORD *)v81 + 2) + 1, 1, v81);
              v88 = *((_QWORD *)v81 + 2);
              v87 = *((_QWORD *)v81 + 3);
              if (v88 >= v87 >> 1)
                v81 = sub_1D5873398((char *)(v87 > 1), v88 + 1, 1, v81);
              *((_QWORD *)v81 + 2) = v88 + 1;
              v89 = &v81[16 * v88];
              *((_QWORD *)v89 + 4) = v84;
              *((_QWORD *)v89 + 5) = v86;
              v72 = v168;
              v73 = v172;
              v56 = v173;
              v82 = v171;
              v80 = v170;
            }
            v79 += (unint64_t)v80;
            if (!--v77)
              break;
            v174(v82, v79, v19);
          }
          swift_release();
          swift_bridgeObjectRelease();
          v23 = v158;
        }
        else
        {
          swift_release();
          swift_bridgeObjectRelease();
          v81 = (char *)MEMORY[0x1E0DEE9D8];
        }
        v90 = *((_QWORD *)v81 + 2);
        v69 = *((_QWORD *)v167 + 2);
        v91 = v69 + v90;
        v55 = v166;
        if (__OFADD__(v69, v90))
          goto LABEL_75;
        isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
        v93 = v167;
        if (!(_DWORD)isUniquelyReferenced_nonNull_native || v91 > *((_QWORD *)v167 + 3) >> 1)
        {
          if (v69 <= v91)
            v94 = v69 + v90;
          else
            v94 = v69;
          v93 = sub_1D5873398(isUniquelyReferenced_nonNull_native, v94, 1, v167);
        }
        v95 = *((_QWORD *)v81 + 2);
        v167 = v93;
        if (v95)
        {
          if ((*((_QWORD *)v93 + 3) >> 1) - *((_QWORD *)v93 + 2) < v90)
            goto LABEL_77;
          swift_arrayInitWithCopy();
          if (v90)
          {
            v96 = *((_QWORD *)v167 + 2);
            v74 = __OFADD__(v96, v90);
            v97 = v96 + v90;
            if (v74)
              goto LABEL_78;
            *((_QWORD *)v167 + 2) = v97;
          }
        }
        else if (v90)
        {
          goto LABEL_76;
        }
        swift_bridgeObjectRelease();
        v71 = v165;
        if (v165 == v160)
          goto LABEL_66;
      }
    }
    v167 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_66:
    swift_bridgeObjectRelease_n();
    v98 = v145;
    sub_1D5AAE73C();
    *(_QWORD *)&v175 = sub_1D5AAE2E0();
    v172 = v99;
    (*(void (**)(char *, uint64_t))(v146 + 8))(v98, v147);
    __swift_project_boxed_opaque_existential_1(&v194, v195);
    v174 = (void (*)(char *, unint64_t, uint64_t))sub_1D5AAE4D8();
    *(_QWORD *)&v173 = v100;
    v101 = v148;
    sub_1D5AAE4F0();
    v171 = (char *)sub_1D5AAE5B0();
    v103 = v102;
    v104 = *(void (**)(char *, uint64_t))(v149 + 8);
    v104(v101, v154);
    sub_1D5AAE4FC();
    v105 = sub_1D5AAE67C();
    v107 = v106;
    v108 = v142;
    v142(v55, v23);
    v181 = v105;
    *(_QWORD *)&v182 = v107;
    v176 = 14906;
    *(_QWORD *)&v177 = 0xE200000000000000;
    sub_1D57BF634();
    v109 = sub_1D5AAEAE4();
    swift_bridgeObjectRelease();
    v110 = *(_QWORD *)(v109 + 16);
    if (v110)
    {
      v111 = v109 + 16 * v110;
      v112 = *(_QWORD *)(v111 + 16);
      v113 = *(_QWORD *)(v111 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1D5AAE4FC();
      v114 = sub_1D5AAE67C();
      v115 = v23;
      v112 = v114;
      v113 = v116;
      v108(v55, v115);
    }
    v117 = v150;
    sub_1D5AAE4F0();
    v118 = v153;
    sub_1D5AAE5BC();
    v104(v117, v154);
    sub_1D5AAD6EC();
    v120 = v119;
    v121 = *(uint64_t (**)(char *, uint64_t))(v151 + 8);
    result = (char *)v121(v118, v144);
    v122 = v120 * 1000.0;
    if ((~COERCE__INT64(v120 * 1000.0) & 0x7FF0000000000000) != 0)
    {
      if (v122 > -9.22337204e18)
      {
        if (v122 < 9.22337204e18)
        {
          v181 = v141;
          *(_QWORD *)&v182 = v143;
          v170 = (char *)v121;
          *((_QWORD *)&v182 + 1) = v164;
          v183 = v140;
          v184 = v167;
          v185 = v175;
          v186 = v172;
          v187 = v174;
          v188 = v173;
          v189 = v171;
          v190 = v103;
          v191 = v112;
          v192 = v113;
          v193 = (uint64_t)v122;
          sub_1D57B1F4C(0, (unint64_t *)&qword_1ED9CC9F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
          v171 = v123;
          v124 = sub_1D5AADB54();
          v125 = *(_QWORD *)(v124 - 8);
          v126 = *(unsigned __int8 *)(v125 + 80);
          v169 = (char *)(((v126 + 32) & ~v126) + *(_QWORD *)(v125 + 72));
          v127 = (v126 + 32) & ~v126;
          v168 = v126 | 7;
          v128 = swift_allocObject();
          v175 = xmmword_1D5AB0170;
          *(_OWORD *)(v128 + 16) = xmmword_1D5AB0170;
          v163 = (char *)v127;
          LODWORD(v165) = *MEMORY[0x1E0CF8170];
          v166 = *(void (**)(_QWORD))(v125 + 104);
          v166(v128 + v127);
          sub_1D57C0AB8();
          v174 = (void (*)(char *, unint64_t, uint64_t))0x80000001D5AEE850;
          sub_1D5AADAF4();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v129 = (void *)sub_1D5AAE49C();
          swift_getErrorValue();
          Error.errorData()(v180, &v181);

          v176 = v181;
          v173 = v182;
          v177 = v182;
          v178 = v183;
          v179 = v184;
          v130 = swift_allocObject();
          *(_OWORD *)(v130 + 16) = v175;
          v131 = v130 + v127;
          v132 = v165;
          v133 = v124;
          v134 = v124;
          v135 = (void (*)(char *, uint64_t, uint64_t))v166;
          ((void (*)(uint64_t, _QWORD, uint64_t))v166)(v131, v165, v134);
          sub_1D58A4C1C();
          sub_1D5AADAF4();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v181 = sub_1D5AAE490();
          *(_QWORD *)&v182 = v136;
          v137 = swift_allocObject();
          *(_OWORD *)(v137 + 16) = v175;
          v135(&v163[v137], v132, v133);
          sub_1D58A4C60();
          sub_1D5AADAF4();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v138 = v153;
          sub_1D5AAD704();
          type metadata accessor for FeedGroupLayoutFailureEvent(0);
          v181 = 0x656D69746C616572;
          *(_QWORD *)&v182 = 0xE90000000000002DLL;
          sub_1D5AADA04();
          sub_1D5AAE898();
          swift_bridgeObjectRelease();
          sub_1D5AADAC4();
          sub_1D57A8DE4(&qword_1EFF4B268, type metadata accessor for FeedGroupLayoutFailureEvent, (uint64_t)&protocol conformance descriptor for FeedGroupLayoutFailureEvent);
          sub_1D5AADADC();
          sub_1D5AADAD0();
          swift_release();
          swift_bridgeObjectRelease();
          ((void (*)(char *, uint64_t))v170)(v138, v144);
          return (char *)__swift_destroy_boxed_opaque_existential_1((uint64_t)&v194);
        }
        goto LABEL_82;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  v57 = sub_1D5AAEC04();
  if (!v57)
    goto LABEL_28;
LABEL_18:
  v181 = MEMORY[0x1E0DEE9D8];
  result = sub_1D57C0AFC(0, v57 & ~(v57 >> 63), 0);
  if ((v57 & 0x8000000000000000) == 0)
  {
    v58 = 0;
    v59 = v181;
    v60 = v57;
    do
    {
      v61 = v59;
      if ((v54 & 0xC000000000000001) != 0)
        MEMORY[0x1D8278F6C](v58, v54);
      else
        swift_retain();
      v62 = sub_1D5AAE6B8();
      v64 = v63;
      swift_release();
      v59 = v61;
      v181 = v61;
      v65 = *(_QWORD *)(v61 + 16);
      v66 = *(_QWORD *)(v59 + 24);
      if (v65 >= v66 >> 1)
      {
        sub_1D57C0AFC((char *)(v66 > 1), v65 + 1, 1);
        v59 = v181;
      }
      ++v58;
      *(_QWORD *)(v59 + 16) = v65 + 1;
      v67 = v59 + 16 * v65;
      *(_QWORD *)(v67 + 32) = v62;
      *(_QWORD *)(v67 + 40) = v64;
      v55 = v166;
      v56 = v173;
    }
    while (v60 != v58);
    v140 = v59;
    swift_bridgeObjectRelease();
    v23 = v158;
    goto LABEL_29;
  }
LABEL_83:
  __break(1u);
  return result;
}

uint64_t FeedLayoutTracker.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t FeedLayoutTracker.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D58A4A50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;
  __int128 v11[2];

  v4 = sub_1D5AAE4A8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  sub_1D57B6254(a1, (uint64_t)v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  sub_1D57ADBD0(v11, v8 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_1D5AADF5C();
  return swift_release();
}

uint64_t method lookup function for FeedLayoutTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedLayoutTracker.__allocating_init(tracker:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

char *sub_1D58A4B64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D5AAE4A8() - 8) + 80);
  return sub_1D58A3770(a1, (_QWORD *)(v1 + 16), v1 + ((v3 + 56) & ~v3));
}

void sub_1D58A4BA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFF4B248)
  {
    sub_1D5AAE5E0();
    sub_1D57A8DE4(&qword_1EFF4B250, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5D930], MEMORY[0x1E0D5D928]);
    v0 = sub_1D5AAE64C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFF4B248);
  }
}

unint64_t sub_1D58A4C1C()
{
  unint64_t result;

  result = qword_1EFF4B258;
  if (!qword_1EFF4B258)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ErrorData, &type metadata for ErrorData);
    atomic_store(result, (unint64_t *)&qword_1EFF4B258);
  }
  return result;
}

unint64_t sub_1D58A4C60()
{
  unint64_t result;

  result = qword_1EFF4B260;
  if (!qword_1EFF4B260)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedGroupLayoutFailureDiagnosticsData, &type metadata for FeedGroupLayoutFailureDiagnosticsData);
    atomic_store(result, (unint64_t *)&qword_1EFF4B260);
  }
  return result;
}

uint64_t SportsTagListData.tagIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsTagListData.tagIDs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*SportsTagListData.tagIDs.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D58A4CE4()
{
  sub_1D57AB3EC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58A4D0C()
{
  sub_1D57AB3EC();
  return sub_1D5AAEEE0();
}

uint64_t SportsTagListData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1D57AB390(0, &qword_1EFF4B270, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AB3EC();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D57B4558();
    sub_1D57B5638((unint64_t *)&qword_1ED9CC6C0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D58A4E94@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return SportsTagListData.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for SportsTagListData.CodingKeys()
{
  return &type metadata for SportsTagListData.CodingKeys;
}

unint64_t sub_1D58A4EBC()
{
  unint64_t result;

  result = qword_1EFF4B278;
  if (!qword_1EFF4B278)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC17D0, &type metadata for SportsTagListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B278);
  }
  return result;
}

void __swiftcall UserBundleSubscriptionContextData.init(bundleSubscriptionStatus:bundleSubscriptionPurchaseID:isBundleSubscriptionPurchaser:isAmplifyUser:sBundlePurchaseID:isPaidBundleViaOfferTrialist:)(NewsAnalytics::UserBundleSubscriptionContextData *__return_ptr retstr, NewsAnalytics::BundleSubscriptionStatus bundleSubscriptionStatus, Swift::String_optional bundleSubscriptionPurchaseID, Swift::Bool isBundleSubscriptionPurchaser, Swift::Bool isAmplifyUser, Swift::String_optional sBundlePurchaseID, Swift::Bool_optional isPaidBundleViaOfferTrialist)
{
  retstr->bundleSubscriptionStatus = *(_BYTE *)bundleSubscriptionStatus;
  retstr->bundleSubscriptionPurchaseID = bundleSubscriptionPurchaseID;
  retstr->isBundleSubscriptionPurchaser = isBundleSubscriptionPurchaser;
  retstr->isAmplifyUser = isAmplifyUser;
  retstr->sBundlePurchaseID = sBundlePurchaseID;
  retstr->isPaidBundleViaOfferTrialist = isPaidBundleViaOfferTrialist;
}

void UserBundleSubscriptionContextData.bundleSubscriptionStatus.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *UserBundleSubscriptionContextData.bundleSubscriptionStatus.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*UserBundleSubscriptionContextData.bundleSubscriptionStatus.modify())()
{
  return nullsub_1;
}

uint64_t UserBundleSubscriptionContextData.bundleSubscriptionPurchaseID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserBundleSubscriptionContextData.bundleSubscriptionPurchaseID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*UserBundleSubscriptionContextData.bundleSubscriptionPurchaseID.modify())()
{
  return nullsub_1;
}

uint64_t UserBundleSubscriptionContextData.isBundleSubscriptionPurchaser.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t UserBundleSubscriptionContextData.isBundleSubscriptionPurchaser.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result;
  return result;
}

uint64_t (*UserBundleSubscriptionContextData.isBundleSubscriptionPurchaser.modify())()
{
  return nullsub_1;
}

uint64_t UserBundleSubscriptionContextData.isAmplifyUser.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t UserBundleSubscriptionContextData.isAmplifyUser.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 25) = result;
  return result;
}

uint64_t (*UserBundleSubscriptionContextData.isAmplifyUser.modify())()
{
  return nullsub_1;
}

uint64_t UserBundleSubscriptionContextData.sBundlePurchaseID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserBundleSubscriptionContextData.sBundlePurchaseID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*UserBundleSubscriptionContextData.sBundlePurchaseID.modify())()
{
  return nullsub_1;
}

uint64_t UserBundleSubscriptionContextData.isPaidBundleViaOfferTrialist.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t UserBundleSubscriptionContextData.isPaidBundleViaOfferTrialist.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = result;
  return result;
}

uint64_t (*UserBundleSubscriptionContextData.isPaidBundleViaOfferTrialist.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D58A5088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58A5244(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58A50AC()
{
  sub_1D57BA35C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58A50D4()
{
  sub_1D57BA35C();
  return sub_1D5AAEEE0();
}

uint64_t assignWithCopy for UserBundleSubscriptionContextData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for UserBundleSubscriptionContextData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for UserBundleSubscriptionContextData.CodingKeys()
{
  return &type metadata for UserBundleSubscriptionContextData.CodingKeys;
}

unint64_t sub_1D58A5200()
{
  unint64_t result;

  result = qword_1EFF4B280;
  if (!qword_1EFF4B280)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC19D0, &type metadata for UserBundleSubscriptionContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B280);
  }
  return result;
}

uint64_t sub_1D58A5244(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000018 && a2 == 0x80000001D5AEE8D0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D5AEE8F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001D5AEE910 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x66696C706D417369 && a2 == 0xED00007265735579 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AEE930 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D5AEE950)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1D58A54BC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADAB8();
  __swift_allocate_value_buffer(v0, qword_1ED9CD798);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED9CD798);
  *(_QWORD *)v1 = 0x7364612E6D6F63;
  *(_QWORD *)(v1 + 8) = 0xE700000000000000;
  *(_QWORD *)(v1 + 16) = 3;
  *(_BYTE *)(v1 + 24) = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t static AdJournalEntryEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CD7B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CD798, a1);
}

uint64_t sub_1D58A555C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADD34();
  __swift_allocate_value_buffer(v0, qword_1ED9CD7C0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED9CD7C0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0CF8378], v0);
}

uint64_t static AdJournalEntryEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CD7E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CD7C0, a1);
}

uint64_t AdJournalEntryEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t AdJournalEntryEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AdJournalEntryEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adUserData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AdJournalEntryEvent.adUserData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adUserData.modify())()
{
  type metadata accessor for AdJournalEntryEvent(0);
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AdJournalEntryEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for AdJournalEntryEvent(0);
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AdJournalEntryEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.channelData.modify())()
{
  type metadata accessor for AdJournalEntryEvent(0);
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adCreativeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9CCCE8, (void (*)(void))sub_1D58A597C, (void (*)(void))sub_1D58A59C0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D58A597C()
{
  unint64_t result;

  result = qword_1ED9CD180;
  if (!qword_1ED9CD180)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdCreativeData, &type metadata for AdCreativeData);
    atomic_store(result, (unint64_t *)&qword_1ED9CD180);
  }
  return result;
}

unint64_t sub_1D58A59C0()
{
  unint64_t result;

  result = qword_1ED9CD178;
  if (!qword_1ED9CD178)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdCreativeData, &type metadata for AdCreativeData);
    atomic_store(result, (unint64_t *)&qword_1ED9CD178);
  }
  return result;
}

uint64_t AdJournalEntryEvent.adCreativeData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9CCCE8, (void (*)(void))sub_1D58A597C, (void (*)(void))sub_1D58A59C0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adCreativeData.modify())()
{
  type metadata accessor for AdJournalEntryEvent(0);
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adPlacementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AdJournalEntryEvent.adPlacementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adPlacementData.modify())()
{
  type metadata accessor for AdJournalEntryEvent(0);
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adJournalEntryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9CD0E8, (void (*)(void))sub_1D58A5BF4, (void (*)(void))sub_1D58A5C38);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D58A5BF4()
{
  unint64_t result;

  result = qword_1ED9CCDE0;
  if (!qword_1ED9CCDE0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdJournalEntryData, &type metadata for AdJournalEntryData);
    atomic_store(result, (unint64_t *)&qword_1ED9CCDE0);
  }
  return result;
}

unint64_t sub_1D58A5C38()
{
  unint64_t result;

  result = qword_1ED9CD2B8;
  if (!qword_1ED9CD2B8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdJournalEntryData, &type metadata for AdJournalEntryData);
    atomic_store(result, (unint64_t *)&qword_1ED9CD2B8);
  }
  return result;
}

uint64_t AdJournalEntryEvent.adJournalEntryData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9CD0E8, (void (*)(void))sub_1D58A5BF4, (void (*)(void))sub_1D58A5C38);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adJournalEntryData.modify())()
{
  type metadata accessor for AdJournalEntryEvent(0);
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adSizeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1D58A5D74()
{
  unint64_t result;

  result = qword_1ED9CDA18;
  if (!qword_1ED9CDA18)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdSizeData, &type metadata for AdSizeData);
    atomic_store(result, (unint64_t *)&qword_1ED9CDA18);
  }
  return result;
}

unint64_t sub_1D58A5DB8()
{
  unint64_t result;

  result = qword_1ED9CDA10;
  if (!qword_1ED9CDA10)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdSizeData, &type metadata for AdSizeData);
    atomic_store(result, (unint64_t *)&qword_1ED9CDA10);
  }
  return result;
}

uint64_t AdJournalEntryEvent.adSizeData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adSizeData.modify())()
{
  type metadata accessor for AdJournalEntryEvent(0);
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AdJournalEntryEvent.adPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adPositionData.modify())()
{
  type metadata accessor for AdJournalEntryEvent(0);
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adFeedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AdJournalEntryEvent.adFeedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adFeedData.modify())()
{
  type metadata accessor for AdJournalEntryEvent(0);
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adGroupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AdJournalEntryEvent.adGroupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adGroupData.modify())()
{
  type metadata accessor for AdJournalEntryEvent(0);
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for AdJournalEntryEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9CCCE8, (void (*)(void))sub_1D58A597C, (void (*)(void))sub_1D58A59C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9CD0E8, (void (*)(void))sub_1D58A5BF4, (void (*)(void))sub_1D58A5C38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v10, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v10, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v10, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v10, v25);
}

uint64_t AdJournalEntryEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AdJournalEntryEvent.Model.adUserData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for AdJournalEntryEvent.Model(0) + 20));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AdJournalEntryEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF4B2F8);
}

uint64_t AdJournalEntryEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for AdJournalEntryEvent.Model(0) + 24));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t AdJournalEntryEvent.Model.channelData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AdJournalEntryEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57DD4CC(v4, v5);
}

uint64_t AdJournalEntryEvent.Model.adCreativeData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AdJournalEntryEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t AdJournalEntryEvent.Model.adPlacementData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for AdJournalEntryEvent.Model(0) + 36));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t AdJournalEntryEvent.Model.adJournalEntryData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AdJournalEntryEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t AdJournalEntryEvent.Model.adSizeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;

  result = type metadata accessor for AdJournalEntryEvent.Model(0);
  v4 = (uint64_t *)(v1 + *(int *)(result + 44));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 8);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = (_BYTE)v4;
  return result;
}

uint64_t AdJournalEntryEvent.Model.adPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for AdJournalEntryEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 48));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t AdJournalEntryEvent.Model.adFeedData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AdJournalEntryEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t AdJournalEntryEvent.Model.adGroupData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AdJournalEntryEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 56));
  return result;
}

__n128 AdJournalEntryEvent.Model.init(eventData:adUserData:userBundleSubscriptionContextData:channelData:adCreativeData:adPlacementData:adJournalEntryData:adSizeData:adPositionData:adFeedData:adGroupData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, __int128 *a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, __int16 *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, int *a10, char *a11, char *a12)
{
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 result;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  __int128 v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  __int16 v39;
  char v40;
  uint64_t v41;
  char v42;
  int v43;
  char v44;
  char v45;

  v14 = *a2;
  v15 = a2[1];
  v16 = *a3;
  v17 = *((_QWORD *)a3 + 1);
  v18 = *((_QWORD *)a3 + 2);
  v19 = a3[24];
  v20 = a3[25];
  v21 = *((_QWORD *)a3 + 4);
  v32 = *((_QWORD *)a3 + 5);
  v31 = a3[48];
  v34 = (__n128)a4[1];
  v35 = *a4;
  v33 = *((_QWORD *)a4 + 4);
  v36 = *a5;
  v38 = *a6;
  v37 = a6[1];
  v39 = *a7;
  v41 = *a8;
  v40 = *((_BYTE *)a8 + 8);
  v42 = *((_BYTE *)a10 + 4);
  v43 = *a10;
  v44 = *a11;
  v45 = *a12;
  v22 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a9, a1, v22);
  v23 = (int *)type metadata accessor for AdJournalEntryEvent.Model(0);
  v24 = (_QWORD *)(a9 + v23[5]);
  *v24 = v14;
  v24[1] = v15;
  v25 = a9 + v23[6];
  *(_BYTE *)v25 = v16;
  *(_QWORD *)(v25 + 8) = v17;
  *(_QWORD *)(v25 + 16) = v18;
  *(_BYTE *)(v25 + 24) = v19;
  *(_BYTE *)(v25 + 25) = v20;
  *(_QWORD *)(v25 + 32) = v21;
  *(_QWORD *)(v25 + 40) = v32;
  *(_BYTE *)(v25 + 48) = v31;
  v26 = a9 + v23[7];
  result = v34;
  *(_OWORD *)v26 = v35;
  *(__n128 *)(v26 + 16) = v34;
  *(_QWORD *)(v26 + 32) = v33;
  *(_BYTE *)(a9 + v23[8]) = v36;
  v28 = (_QWORD *)(a9 + v23[9]);
  *v28 = v38;
  v28[1] = v37;
  *(_WORD *)(a9 + v23[10]) = v39;
  v29 = a9 + v23[11];
  *(_QWORD *)v29 = v41;
  *(_BYTE *)(v29 + 8) = v40;
  v30 = a9 + v23[12];
  *(_DWORD *)v30 = v43;
  *(_BYTE *)(v30 + 4) = v42;
  *(_BYTE *)(a9 + v23[13]) = v44;
  *(_BYTE *)(a9 + v23[14]) = v45;
  return result;
}

uint64_t sub_1D58A68D4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58A690C + 4 * byte_1D5AC1A50[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D58A690C()
{
  return 0x6144726573556461;
}

uint64_t sub_1D58A6A00()
{
  return 0x697469736F506461;
}

uint64_t sub_1D58A6A28()
{
  unsigned __int8 *v0;

  return sub_1D58A68D4(*v0);
}

uint64_t sub_1D58A6A30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58AA2CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58A6A54()
{
  sub_1D58A6ECC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D58A6A7C()
{
  sub_1D58A6ECC();
  return sub_1D5AAEEE0();
}

uint64_t AdJournalEntryEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int *v26;
  int v27;
  _BYTE v29[32];
  __int128 v30;
  char v31;
  char v32;

  v3 = v1;
  sub_1D58A75E4(0, &qword_1EFF4B288, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v29[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D58A6ECC();
  sub_1D5AAEEC8();
  v29[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for AdJournalEntryEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v13 = *v11;
    v12 = v11[1];
    *(_QWORD *)v29 = v13;
    *(_QWORD *)&v29[8] = v12;
    v32 = 1;
    sub_1D57CBEFC();
    sub_1D5AAED6C();
    v14 = v3 + v10[6];
    v15 = *(_BYTE *)(v14 + 24);
    v16 = *(_BYTE *)(v14 + 25);
    v17 = *(_BYTE *)(v14 + 48);
    v29[0] = *(_BYTE *)v14;
    *(_OWORD *)&v29[8] = *(_OWORD *)(v14 + 8);
    v29[24] = v15;
    v29[25] = v16;
    v30 = *(_OWORD *)(v14 + 32);
    v31 = v17;
    v32 = 2;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v18 = v3 + v10[7];
    v19 = *(_QWORD *)(v18 + 32);
    v20 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)v29 = *(_OWORD *)v18;
    *(_OWORD *)&v29[16] = v20;
    *(_QWORD *)&v30 = v19;
    v32 = 3;
    sub_1D57CB8B8();
    sub_1D5AAED18();
    v29[0] = *(_BYTE *)(v3 + v10[8]);
    v32 = 4;
    sub_1D58A59C0();
    sub_1D5AAED6C();
    v21 = (uint64_t *)(v3 + v10[9]);
    v23 = *v21;
    v22 = v21[1];
    *(_QWORD *)v29 = v23;
    *(_QWORD *)&v29[8] = v22;
    v32 = 5;
    sub_1D584FF8C();
    sub_1D5AAED6C();
    *(_WORD *)v29 = *(_WORD *)(v3 + v10[10]);
    v32 = 6;
    sub_1D58A5C38();
    sub_1D5AAED6C();
    v24 = (uint64_t *)(v3 + v10[11]);
    v25 = *v24;
    LOBYTE(v24) = *((_BYTE *)v24 + 8);
    *(_QWORD *)v29 = v25;
    v29[8] = (_BYTE)v24;
    v32 = 7;
    sub_1D58A5DB8();
    sub_1D5AAED18();
    v26 = (int *)(v3 + v10[12]);
    v27 = *v26;
    LOBYTE(v26) = *((_BYTE *)v26 + 4);
    *(_DWORD *)v29 = v27;
    v29[4] = (_BYTE)v26;
    v32 = 8;
    sub_1D585010C();
    sub_1D5AAED18();
    v29[0] = *(_BYTE *)(v3 + v10[13]);
    v32 = 9;
    sub_1D57CBF9C();
    sub_1D5AAED18();
    v29[0] = *(_BYTE *)(v3 + v10[14]);
    v32 = 10;
    sub_1D5850384();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D58A6ECC()
{
  unint64_t result;

  result = qword_1EFF4B290;
  if (!qword_1EFF4B290)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC1D5C, &type metadata for AdJournalEntryEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B290);
  }
  return result;
}

uint64_t AdJournalEntryEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int *v16;
  char *v17;
  char v18;
  char v19;
  char v20;
  char *v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char v27;
  char *v28;
  char v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  int *v39;
  char *v40;
  _BYTE v41[32];
  __int128 v42;
  char v43;
  char v44;

  v5 = sub_1D5AADF98();
  v37 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58A75E4(0, &qword_1EFF4B298, MEMORY[0x1E0DED048]);
  v36 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v33 - v10;
  v39 = (int *)type metadata accessor for AdJournalEntryEvent.Model(0);
  MEMORY[0x1E0C80A78](v39);
  v40 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v38 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1D58A6ECC();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  v34 = a2;
  v35 = v9;
  v41[0] = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v14 = v40;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v40, v7, v5);
  v44 = 1;
  sub_1D57CBEB8();
  sub_1D5AAECD0();
  v15 = *(_QWORD *)&v41[8];
  v16 = v39;
  v17 = &v14[v39[5]];
  *(_QWORD *)v17 = *(_QWORD *)v41;
  *((_QWORD *)v17 + 1) = v15;
  v44 = 2;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v18 = v41[24];
  v19 = v41[25];
  v20 = v43;
  v21 = &v14[v16[6]];
  *v21 = v41[0];
  *(_OWORD *)(v21 + 8) = *(_OWORD *)&v41[8];
  v21[24] = v18;
  v21[25] = v19;
  *((_OWORD *)v21 + 2) = v42;
  v21[48] = v20;
  v44 = 3;
  sub_1D57CB874();
  sub_1D5AAEC7C();
  v22 = v42;
  v23 = &v14[v16[7]];
  v24 = *(_OWORD *)&v41[16];
  *(_OWORD *)v23 = *(_OWORD *)v41;
  *((_OWORD *)v23 + 1) = v24;
  *((_QWORD *)v23 + 4) = v22;
  v44 = 4;
  sub_1D58A597C();
  sub_1D5AAECD0();
  v14[v16[8]] = v41[0];
  v44 = 5;
  sub_1D584FF48();
  sub_1D5AAECD0();
  v25 = *(_QWORD *)&v41[8];
  v26 = &v14[v16[9]];
  *(_QWORD *)v26 = *(_QWORD *)v41;
  *((_QWORD *)v26 + 1) = v25;
  v44 = 6;
  sub_1D58A5BF4();
  sub_1D5AAECD0();
  *(_WORD *)&v14[v16[10]] = *(_WORD *)v41;
  v44 = 7;
  sub_1D58A5D74();
  sub_1D5AAEC7C();
  v27 = v41[8];
  v28 = &v14[v16[11]];
  *(_QWORD *)v28 = *(_QWORD *)v41;
  v28[8] = v27;
  v44 = 8;
  sub_1D58500C8();
  sub_1D5AAEC7C();
  v29 = v41[4];
  v30 = &v14[v16[12]];
  *(_DWORD *)v30 = *(_DWORD *)v41;
  v30[4] = v29;
  v44 = 9;
  sub_1D57CBF58();
  sub_1D5AAEC7C();
  v40[v39[13]] = v41[0];
  v44 = 10;
  sub_1D5850340();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v36);
  v31 = (uint64_t)v40;
  v40[v39[14]] = v41[0];
  sub_1D58A7640(v31, v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return sub_1D58A7684(v31);
}

void sub_1D58A75E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D58A6ECC();
    v7 = a3(a1, &type metadata for AdJournalEntryEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D58A7640(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AdJournalEntryEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D58A7684(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AdJournalEntryEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D58A76C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AdJournalEntryEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D58A76D4(_QWORD *a1)
{
  return AdJournalEntryEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D58A76E8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9CCCE8, (void (*)(void))sub_1D58A597C, (void (*)(void))sub_1D58A59C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9CD0E8, (void (*)(void))sub_1D58A5BF4, (void (*)(void))sub_1D58A5C38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v11, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v11, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v11, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v11, v26);
}

uint64_t *initializeBufferWithCopyOfBuffer for AdJournalEntryEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v48 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v48 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9CCCE8, (void (*)(void))sub_1D58A597C, (void (*)(void))sub_1D58A59C0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9CD0E8, (void (*)(void))sub_1D58A5BF4, (void (*)(void))sub_1D58A5C38);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
  }
  return a1;
}

uint64_t destroy for AdJournalEntryEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9CCCE8, (void (*)(void))sub_1D58A597C, (void (*)(void))sub_1D58A59C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9CD0E8, (void (*)(void))sub_1D58A5BF4, (void (*)(void))sub_1D58A5C38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
}

uint64_t initializeWithCopy for AdJournalEntryEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CCCE8, (void (*)(void))sub_1D58A597C, (void (*)(void))sub_1D58A59C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD0E8, (void (*)(void))sub_1D58A5BF4, (void (*)(void))sub_1D58A5C38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  return a1;
}

uint64_t assignWithCopy for AdJournalEntryEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CCCE8, (void (*)(void))sub_1D58A597C, (void (*)(void))sub_1D58A59C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD0E8, (void (*)(void))sub_1D58A5BF4, (void (*)(void))sub_1D58A5C38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

uint64_t initializeWithTake for AdJournalEntryEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CCCE8, (void (*)(void))sub_1D58A597C, (void (*)(void))sub_1D58A59C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD0E8, (void (*)(void))sub_1D58A5BF4, (void (*)(void))sub_1D58A5C38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  return a1;
}

uint64_t assignWithTake for AdJournalEntryEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9CCCE8, (void (*)(void))sub_1D58A597C, (void (*)(void))sub_1D58A59C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9CD0E8, (void (*)(void))sub_1D58A5BF4, (void (*)(void))sub_1D58A5C38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  return a1;
}

uint64_t getEnumTagSinglePayload for AdJournalEntryEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58A8DCC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9CCCE8, (void (*)(void))sub_1D58A597C, (void (*)(void))sub_1D58A59C0);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9CD0E8, (void (*)(void))sub_1D58A5BF4, (void (*)(void))sub_1D58A5C38);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
                      v8 = v22;
                      v12 = *(_QWORD *)(v22 - 8);
                      v13 = a3[14];
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AdJournalEntryEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58A90D0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9CCCE8, (void (*)(void))sub_1D58A597C, (void (*)(void))sub_1D58A59C0);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9CD0E8, (void (*)(void))sub_1D58A5BF4, (void (*)(void))sub_1D58A5C38);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
                      v10 = v24;
                      v14 = *(_QWORD *)(v24 - 8);
                      v15 = a4[14];
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D58A93D0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9CCCE8, (void (*)(void))sub_1D58A597C, (void (*)(void))sub_1D58A59C0);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9CD0E8, (void (*)(void))sub_1D58A5BF4, (void (*)(void))sub_1D58A5C38);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9CD980, (void (*)(void))sub_1D58A5D74, (void (*)(void))sub_1D58A5DB8);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9CD988, (void (*)(void))sub_1D58500C8, (void (*)(void))sub_1D585010C);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9CD978, (void (*)(void))sub_1D57CBF58, (void (*)(void))sub_1D57CBF9C);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9CF138, (void (*)(void))sub_1D5850340, (void (*)(void))sub_1D5850384);
                      if (v10 <= 0x3F)
                        swift_initStructMetadata();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for AdJournalEntryEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    *v13 = *v14;
    v15 = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
    *((_QWORD *)v13 + 2) = v15;
    *((_WORD *)v13 + 12) = *((_WORD *)v14 + 12);
    v16 = *((_QWORD *)v14 + 5);
    *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
    *((_QWORD *)v13 + 5) = v16;
    v13[48] = v14[48];
    v17 = a3[7];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = *(_QWORD *)((char *)a2 + v17 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20)
    {
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *((_QWORD *)v18 + 1) = v20;
      *((_WORD *)v18 + 8) = *((_WORD *)v19 + 8);
      v21 = *((_QWORD *)v19 + 4);
      *((_QWORD *)v18 + 3) = *((_QWORD *)v19 + 3);
      *((_QWORD *)v18 + 4) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v23 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v23;
      *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
    }
    v24 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v25 = (_QWORD *)((char *)a1 + v24);
    v26 = (_QWORD *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = a3[11];
    *(_WORD *)((char *)a1 + a3[10]) = *(_WORD *)((char *)a2 + a3[10]);
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    v31 = a3[12];
    v32 = a3[13];
    v33 = (char *)a1 + v31;
    v34 = (char *)a2 + v31;
    *(_DWORD *)v33 = *(_DWORD *)v34;
    v33[4] = v34[4];
    *((_BYTE *)a1 + v32) = *((_BYTE *)a2 + v32);
    *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AdJournalEntryEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 28) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AdJournalEntryEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = v14;
  *(_WORD *)(v12 + 24) = *(_WORD *)(v13 + 24);
  v15 = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = v15;
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19)
  {
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *(_QWORD *)(v17 + 8) = v19;
    *(_WORD *)(v17 + 16) = *(_WORD *)(v18 + 16);
    v20 = *(_QWORD *)(v18 + 32);
    *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
    *(_QWORD *)(v17 + 32) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v21;
    *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  }
  v22 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = a3[11];
  *(_WORD *)(a1 + a3[10]) = *(_WORD *)(a2 + a3[10]);
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  v29 = a3[12];
  v30 = a3[13];
  v31 = a1 + v29;
  v32 = a2 + v29;
  *(_DWORD *)v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = *(_BYTE *)(v32 + 4);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AdJournalEntryEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_BYTE *)v11 = *(_BYTE *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(a2 + v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 24) = *(_BYTE *)(v12 + 24);
  *(_BYTE *)(v11 + 25) = *(_BYTE *)(v12 + 25);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  *(_QWORD *)(v11 + 40) = *(_QWORD *)(v12 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 48) = *(_BYTE *)(v12 + 48);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = (__int128 *)(a2 + v13);
  v16 = *(_QWORD *)(a1 + v13 + 8);
  v17 = *(_QWORD *)(a2 + v13 + 8);
  if (v16)
  {
    if (v17)
    {
      *(_QWORD *)v14 = *(_QWORD *)v15;
      *(_QWORD *)(v14 + 8) = *((_QWORD *)v15 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v14 + 16) = *((_BYTE *)v15 + 16);
      *(_BYTE *)(v14 + 17) = *((_BYTE *)v15 + 17);
      *(_QWORD *)(v14 + 24) = *((_QWORD *)v15 + 3);
      *(_QWORD *)(v14 + 32) = *((_QWORD *)v15 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E1784(v14);
      v18 = *((_QWORD *)v15 + 4);
      v19 = v15[1];
      *(_OWORD *)v14 = *v15;
      *(_OWORD *)(v14 + 16) = v19;
      *(_QWORD *)(v14 + 32) = v18;
    }
  }
  else if (v17)
  {
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *(_QWORD *)(v14 + 8) = *((_QWORD *)v15 + 1);
    *(_BYTE *)(v14 + 16) = *((_BYTE *)v15 + 16);
    *(_BYTE *)(v14 + 17) = *((_BYTE *)v15 + 17);
    *(_QWORD *)(v14 + 24) = *((_QWORD *)v15 + 3);
    *(_QWORD *)(v14 + 32) = *((_QWORD *)v15 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *v15;
    v21 = v15[1];
    *(_QWORD *)(v14 + 32) = *((_QWORD *)v15 + 4);
    *(_OWORD *)v14 = v20;
    *(_OWORD *)(v14 + 16) = v21;
  }
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v22 = a3[9];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = a3[10];
  v26 = (_BYTE *)(a1 + v25);
  v27 = (_BYTE *)(a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  v28 = a3[11];
  v29 = a1 + v28;
  v30 = (uint64_t *)(a2 + v28);
  v31 = *v30;
  *(_BYTE *)(v29 + 8) = *((_BYTE *)v30 + 8);
  *(_QWORD *)v29 = v31;
  v32 = a3[12];
  v33 = a1 + v32;
  v34 = a2 + v32;
  LODWORD(v31) = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  *(_DWORD *)v33 = v31;
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t initializeWithTake for AdJournalEntryEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  v11 = a3[7];
  v12 = a3[8];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v16 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_WORD *)(a1 + v16) = *(_WORD *)(a2 + v16);
  v17 = a3[11];
  v18 = a3[12];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  v21 = a1 + v18;
  v22 = a2 + v18;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  v23 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  return a1;
}

uint64_t assignWithTake for AdJournalEntryEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_BYTE *)v13 = *(_BYTE *)(a2 + v12);
  v15 = *(_QWORD *)(a2 + v12 + 16);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)(v13 + 16) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 24) = *(_BYTE *)(v14 + 24);
  *(_BYTE *)(v13 + 25) = *(_BYTE *)(v14 + 25);
  v16 = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 40) = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 48) = *(_BYTE *)(v14 + 48);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  if (!*(_QWORD *)(a1 + v17 + 8))
    goto LABEL_5;
  v20 = *(_QWORD *)(v19 + 8);
  if (!v20)
  {
    sub_1D57E1784(v18);
LABEL_5:
    v22 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v22;
    *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
    goto LABEL_6;
  }
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(v18 + 8) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v18 + 16) = *(_BYTE *)(v19 + 16);
  *(_BYTE *)(v18 + 17) = *(_BYTE *)(v19 + 17);
  v21 = *(_QWORD *)(v19 + 32);
  *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
  *(_QWORD *)(v18 + 32) = v21;
  swift_bridgeObjectRelease();
LABEL_6:
  v23 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  v28 = a3[11];
  *(_WORD *)(a1 + a3[10]) = *(_WORD *)(a2 + a3[10]);
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v31 = a3[12];
  v32 = a3[13];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_DWORD *)v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  *(_BYTE *)(a1 + v32) = *(_BYTE *)(a2 + v32);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t getEnumTagSinglePayload for AdJournalEntryEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58A9F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AdJournalEntryEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D58A9FE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D58AA064()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AdJournalEntryEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1D58AA174 + 4 * byte_1D5AC1A60[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1D58AA1A8 + 4 * byte_1D5AC1A5B[v4]))();
}

uint64_t sub_1D58AA1A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58AA1B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D58AA1B8);
  return result;
}

uint64_t sub_1D58AA1C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D58AA1CCLL);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1D58AA1D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D58AA1D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdJournalEntryEvent.Model.CodingKeys()
{
  return &type metadata for AdJournalEntryEvent.Model.CodingKeys;
}

unint64_t sub_1D58AA1F8()
{
  unint64_t result;

  result = qword_1EFF4B358;
  if (!qword_1EFF4B358)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC1D34, &type metadata for AdJournalEntryEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B358);
  }
  return result;
}

unint64_t sub_1D58AA240()
{
  unint64_t result;

  result = qword_1EFF4B360;
  if (!qword_1EFF4B360)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC1CA4, &type metadata for AdJournalEntryEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B360);
  }
  return result;
}

unint64_t sub_1D58AA288()
{
  unint64_t result;

  result = qword_1EFF4B368;
  if (!qword_1EFF4B368)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AC1CCC, &type metadata for AdJournalEntryEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF4B368);
  }
  return result;
}

uint64_t sub_1D58AA2CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144726573556461 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6974616572436461 && a2 == 0xEE00617461446576 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D6563616C506461 && a2 == 0xEF61746144746E65 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AEE970 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6144657A69536461 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x697469736F506461 && a2 == 0xEE00617461446E6FLL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6144646565466461 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x4470756F72476461 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t sub_1D58AA7C4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_1D5AADC8C();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_1D58AB060();
  v6 = sub_1D5AAEB68();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v33 = v0;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_33;
        v19 = v35[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_33;
          v19 = v35[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v34)
              goto LABEL_33;
            v19 = v35[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v33;
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 > 63)
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v35[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v34)
                    goto LABEL_33;
                  v19 = v35[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = v5;
      v22 = *(_QWORD *)(v36 + 72);
      v23 = *(_QWORD *)(v5 + 48) + v22 * v17;
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 32);
      v24(v4, v23, v2);
      sub_1D57B6020(&qword_1ED9CD9A8, MEMORY[0x1E0CF82F0]);
      result = sub_1D5AAE7B4();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(*(_QWORD *)(v7 + 48) + v15 * v22, v4, v2);
      ++*(_QWORD *)(v7 + 16);
      v5 = v21;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

void *sub_1D58AAB24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_1D5AADC8C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D58AB060();
  v6 = *v0;
  v7 = sub_1D5AAEB5C();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1D58AAD44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_1D5AADC8C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  sub_1D58AB060();
  v7 = sub_1D5AAEB68();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v22 * v18, v2);
    sub_1D57B6020(&qword_1ED9CD9A8, MEMORY[0x1E0CF82F0]);
    result = sub_1D5AAE7B4();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v16 * v22, v5, v2);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1D58AB060()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFF4B370)
  {
    sub_1D5AADC8C();
    sub_1D57B6020(&qword_1ED9CD9A8, MEMORY[0x1E0CF82F0]);
    v0 = sub_1D5AAEB74();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFF4B370);
  }
}

uint64_t sub_1D58AB0D0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CCDC0, MEMORY[0x1E0CF8078]);
}

uint64_t static EmailSignupEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CCDD8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCDC0, a1);
}

uint64_t sub_1D58AB110(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CD760, MEMORY[0x1E0CF8380]);
}

uint64_t static EmailSignupEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CD290, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CD760, a1);
}

uint64_t EmailSignupEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t EmailSignupEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*EmailSignupEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t EmailSignupEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for EmailSignupEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t EmailSignupEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EmailSignupEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EmailSignupEvent.timedData.modify())()
{
  type metadata accessor for EmailSignupEvent(0);
  return nullsub_1;
}

uint64_t EmailSignupEvent.userActionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EmailSignupEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EmailSignupEvent.userActionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EmailSignupEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EmailSignupEvent.userActionData.modify())()
{
  type metadata accessor for EmailSignupEvent(0);
  return nullsub_1;
}

uint64_t EmailSignupEvent.newsletterSubscriptionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EmailSignupEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C7250, (void (*)(void))sub_1D57C6FE4, (void (*)(void))sub_1D57C7028);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EmailSignupEvent.newsletterSubscriptionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EmailSignupEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C7250, (void (*)(void))sub_1D57C6FE4, (void (*)(void))sub_1D57C7028);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EmailSignupEvent.newsletterSubscriptionData.modify())()
{
  type metadata accessor for EmailSignupEvent(0);
  return nullsub_1;
}

uint64_t EmailSignupEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EmailSignupEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EmailSignupEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EmailSignupEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EmailSignupEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for EmailSignupEvent(0);
  return nullsub_1;
}

uint64_t EmailSignupEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for EmailSignupEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C7240, (void (*)(void))sub_1D57C7358, (void (*)(void))sub_1D57C739C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C7250, (void (*)(void))sub_1D57C6FE4, (void (*)(void))sub_1D57C7028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
}

uint64_t EmailSignupEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t EmailSignupEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for EmailSignupEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t EmailSignupEvent.Model.userActionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EmailSignupEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t EmailSignupEvent.Model.newsletterSubscriptionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EmailSignupEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t EmailSignupEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for EmailSignupEvent.Model(0) + 32));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t EmailSignupEvent.Model.init(eventData:timedData:userActionData:newsletterSubscriptionData:userBundleSubscriptionContextData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v9 = *a3;
  v10 = *a4;
  v11 = *a5;
  v12 = *((_QWORD *)a5 + 1);
  v13 = *((_QWORD *)a5 + 2);
  v14 = a5[24];
  v24 = a5[25];
  v22 = *((_QWORD *)a5 + 5);
  v23 = *((_QWORD *)a5 + 4);
  v21 = a5[48];
  v15 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a6, a1, v15);
  v16 = (int *)type metadata accessor for EmailSignupEvent.Model(0);
  v17 = a6 + v16[5];
  v18 = sub_1D5AADFB0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a2, v18);
  *(_BYTE *)(a6 + v16[6]) = v9;
  *(_BYTE *)(a6 + v16[7]) = v10;
  v20 = a6 + v16[8];
  *(_BYTE *)v20 = v11;
  *(_QWORD *)(v20 + 8) = v12;
  *(_QWORD *)(v20 + 16) = v13;
  *(_BYTE *)(v20 + 24) = v14;
  *(_BYTE *)(v20 + 25) = v24;
  *(_QWORD *)(v20 + 32) = v23;
  *(_QWORD *)(v20 + 40) = v22;
  *(_BYTE *)(v20 + 48) = v21;
  return result;
}

uint64_t sub_1D58AB85C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D58AB894 + 4 * byte_1D5AC1DB0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D58AB894()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D58AB8A8()
{
  return 0x6974634172657375;
}

unint64_t sub_1D58AB8CC()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1D58AB8E8()
{
  return 0xD000000000000021;
}

uint64_t sub_1D58AB908()
{
  unsigned __int8 *v0;

  return sub_1D58AB85C(*v0);
}

uint64_t sub_1D58AB910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D58AD64C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D58AB934()
{
  sub_1D58ABC0C();
  return sub_1D5AAEED4();
}

