unint64_t sub_1D5A428FC()
{
  unint64_t result;

  result = qword_1EFF51568;
  if (!qword_1EFF51568)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE2274, &type metadata for SearchResultSelectEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51568);
  }
  return result;
}

uint64_t SearchResultSelectEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  _OWORD *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  __int16 v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  _QWORD *v44;
  char v45;
  uint64_t v46;
  __int128 v47;
  char v48;
  char v49;
  __int128 v50;
  char v51;
  char v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  char *v62;

  v40 = a2;
  v3 = sub_1D5AADF98();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v42 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A42F54(0, &qword_1EFF51570, MEMORY[0x1E0DED048]);
  v41 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v39 - v8;
  v10 = (int *)type metadata accessor for SearchResultSelectEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v44 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1D5A428FC();
  v43 = v9;
  v14 = v62;
  sub_1D5AAEEB0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  v15 = v7;
  v16 = v4;
  v62 = v12;
  LOBYTE(v53) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v17 = v41;
  sub_1D5AAECD0();
  v18 = (uint64_t)v62;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v62, v42, v3);
  LOBYTE(v46) = 1;
  sub_1D57CBC58();
  sub_1D5AAECD0();
  v42 = (char *)v3;
  v19 = *((_QWORD *)&v53 + 1);
  v20 = v54;
  v21 = v18 + v10[5];
  *(_QWORD *)v21 = v53;
  *(_QWORD *)(v21 + 8) = v19;
  *(_BYTE *)(v21 + 16) = v20;
  LOBYTE(v46) = 2;
  sub_1D58B5778();
  sub_1D5AAECD0();
  v22 = *((_QWORD *)&v53 + 1);
  v23 = v54;
  v24 = v18 + v10[6];
  *(_QWORD *)v24 = v53;
  *(_QWORD *)(v24 + 8) = v22;
  *(_BYTE *)(v24 + 16) = v23;
  v52 = 3;
  sub_1D581A9C4();
  sub_1D5AAECD0();
  v25 = (_OWORD *)(v18 + v10[7]);
  v26 = v58;
  v27 = v60;
  v28 = v61;
  v25[6] = v59;
  v25[7] = v27;
  v25[8] = v28;
  v29 = v56;
  v25[2] = v55;
  v25[3] = v29;
  v25[4] = v57;
  v25[5] = v26;
  v30 = v54;
  *v25 = v53;
  v25[1] = v30;
  v45 = 4;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v31 = v48;
  v32 = v49;
  v33 = v51;
  v34 = v18 + MEMORY[0x20];
  *(_BYTE *)v34 = v46;
  *(_OWORD *)(v34 + 8) = v47;
  *(_BYTE *)(v34 + 24) = v31;
  *(_BYTE *)(v34 + 25) = v32;
  *(_OWORD *)(v34 + 32) = v50;
  *(_BYTE *)(v34 + 48) = v33;
  v45 = 5;
  sub_1D57C6260();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v43, v17);
  v35 = v47;
  v36 = WORD4(v47);
  v37 = v18 + MEMORY[0x24];
  *(_QWORD *)v37 = v46;
  *(_QWORD *)(v37 + 8) = v35;
  *(_WORD *)(v37 + 16) = v36;
  sub_1D5A42FB0(v18, v40);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  return sub_1D5A42FF4(v18);
}

void sub_1D5A42F54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A428FC();
    v7 = a3(a1, &type metadata for SearchResultSelectEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A42FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchResultSelectEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A42FF4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SearchResultSelectEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A43030@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchResultSelectEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A43044(_QWORD *a1)
{
  return SearchResultSelectEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A43058@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47458, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF51528, a1);
}

uint64_t sub_1D5A4307C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47460, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF51540, a1);
}

uint64_t sub_1D5A430A0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1EFF51558, (void (*)(void))sub_1D58B5778, (void (*)(void))sub_1D58B57C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v4, v15);
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchResultSelectEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1EFF51558, (void (*)(void))sub_1D58B5778, (void (*)(void))sub_1D58B57C0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for SearchResultSelectEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1EFF51558, (void (*)(void))sub_1D58B5778, (void (*)(void))sub_1D58B57C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

uint64_t initializeWithCopy for SearchResultSelectEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF51558, (void (*)(void))sub_1D58B5778, (void (*)(void))sub_1D58B57C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for SearchResultSelectEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF51558, (void (*)(void))sub_1D58B5778, (void (*)(void))sub_1D58B57C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for SearchResultSelectEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF51558, (void (*)(void))sub_1D58B5778, (void (*)(void))sub_1D58B57C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for SearchResultSelectEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF51558, (void (*)(void))sub_1D58B5778, (void (*)(void))sub_1D58B57C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultSelectEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A43D48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF51558, (void (*)(void))sub_1D58B5778, (void (*)(void))sub_1D58B57C0);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SearchResultSelectEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A43EF8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF51558, (void (*)(void))sub_1D58B5778, (void (*)(void))sub_1D58B57C0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5A440A4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1EFF51558, (void (*)(void))sub_1D58B5778, (void (*)(void))sub_1D58B57C0);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1EFF4C8D0, (void (*)(void))sub_1D581A9C4, (void (*)(void))sub_1D581AA0C);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchResultSelectEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v35 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v10[16] = v11[16];
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    v13[16] = v14[16];
    v16 = a3[7];
    v17 = a3[8];
    v18 = (char *)a1 + v16;
    v19 = (char *)a2 + v16;
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = *((_QWORD *)v19 + 3);
    *((_QWORD *)v18 + 2) = *((_QWORD *)v19 + 2);
    *((_QWORD *)v18 + 3) = v21;
    v22 = *((_QWORD *)v19 + 5);
    *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
    *((_QWORD *)v18 + 5) = v22;
    *((_QWORD *)v18 + 6) = *((_QWORD *)v19 + 6);
    *((_DWORD *)v18 + 14) = *((_DWORD *)v19 + 14);
    v23 = *((_QWORD *)v19 + 9);
    *((_QWORD *)v18 + 8) = *((_QWORD *)v19 + 8);
    *((_QWORD *)v18 + 9) = v23;
    v18[80] = v19[80];
    v24 = *((_QWORD *)v19 + 12);
    *((_QWORD *)v18 + 11) = *((_QWORD *)v19 + 11);
    *((_QWORD *)v18 + 12) = v24;
    v25 = *((_QWORD *)v19 + 14);
    *((_QWORD *)v18 + 13) = *((_QWORD *)v19 + 13);
    *((_QWORD *)v18 + 14) = v25;
    v26 = *((_QWORD *)v19 + 16);
    *((_QWORD *)v18 + 15) = *((_QWORD *)v19 + 15);
    *((_QWORD *)v18 + 16) = v26;
    *((_QWORD *)v18 + 17) = *((_QWORD *)v19 + 17);
    v27 = (char *)a1 + v17;
    v28 = (char *)a2 + v17;
    *v27 = *v28;
    v29 = *((_QWORD *)v28 + 2);
    *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
    *((_QWORD *)v27 + 2) = v29;
    v27[24] = v28[24];
    v27[25] = v28[25];
    v30 = *((_QWORD *)v28 + 5);
    *((_QWORD *)v27 + 4) = *((_QWORD *)v28 + 4);
    *((_QWORD *)v27 + 5) = v30;
    v27[48] = v28[48];
    v31 = a3[9];
    v32 = (char *)a1 + v31;
    v33 = (char *)a2 + v31;
    v34 = *((_QWORD *)v33 + 1);
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *((_QWORD *)v32 + 1) = v34;
    v32[16] = v33[16];
    v32[17] = v33[17];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SearchResultSelectEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchResultSelectEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_QWORD *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v14;
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  v19 = *(_QWORD *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v19;
  v20 = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 24) = v20;
  v21 = *(_QWORD *)(v18 + 40);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 40) = v21;
  *(_QWORD *)(v17 + 48) = *(_QWORD *)(v18 + 48);
  *(_DWORD *)(v17 + 56) = *(_DWORD *)(v18 + 56);
  v22 = *(_QWORD *)(v18 + 72);
  *(_QWORD *)(v17 + 64) = *(_QWORD *)(v18 + 64);
  *(_QWORD *)(v17 + 72) = v22;
  *(_BYTE *)(v17 + 80) = *(_BYTE *)(v18 + 80);
  v23 = *(_QWORD *)(v18 + 96);
  *(_QWORD *)(v17 + 88) = *(_QWORD *)(v18 + 88);
  *(_QWORD *)(v17 + 96) = v23;
  v24 = *(_QWORD *)(v18 + 112);
  *(_QWORD *)(v17 + 104) = *(_QWORD *)(v18 + 104);
  *(_QWORD *)(v17 + 112) = v24;
  v25 = *(_QWORD *)(v18 + 128);
  *(_QWORD *)(v17 + 120) = *(_QWORD *)(v18 + 120);
  *(_QWORD *)(v17 + 128) = v25;
  *(_QWORD *)(v17 + 136) = *(_QWORD *)(v18 + 136);
  v26 = a1 + v16;
  v27 = a2 + v16;
  *(_BYTE *)v26 = *(_BYTE *)v27;
  v28 = *(_QWORD *)(v27 + 16);
  *(_QWORD *)(v26 + 8) = *(_QWORD *)(v27 + 8);
  *(_QWORD *)(v26 + 16) = v28;
  *(_BYTE *)(v26 + 24) = *(_BYTE *)(v27 + 24);
  *(_BYTE *)(v26 + 25) = *(_BYTE *)(v27 + 25);
  v29 = *(_QWORD *)(v27 + 40);
  *(_QWORD *)(v26 + 32) = *(_QWORD *)(v27 + 32);
  *(_QWORD *)(v26 + 40) = v29;
  *(_BYTE *)(v26 + 48) = *(_BYTE *)(v27 + 48);
  v30 = a3[9];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = *(_QWORD *)(v32 + 8);
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *(_QWORD *)(v31 + 8) = v33;
  *(_BYTE *)(v31 + 16) = *(_BYTE *)(v32 + 16);
  *(_BYTE *)(v31 + 17) = *(_BYTE *)(v32 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchResultSelectEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + 24) = *(_QWORD *)(v15 + 24);
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + 40) = *(_QWORD *)(v15 + 40);
  *(_QWORD *)(v14 + 48) = *(_QWORD *)(v15 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v14 + 56) = *(_DWORD *)(v15 + 56);
  *(_QWORD *)(v14 + 64) = *(_QWORD *)(v15 + 64);
  *(_QWORD *)(v14 + 72) = *(_QWORD *)(v15 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 80) = *(_BYTE *)(v15 + 80);
  *(_QWORD *)(v14 + 88) = *(_QWORD *)(v15 + 88);
  *(_QWORD *)(v14 + 96) = *(_QWORD *)(v15 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + 104) = *(_QWORD *)(v15 + 104);
  *(_QWORD *)(v14 + 112) = *(_QWORD *)(v15 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + 120) = *(_QWORD *)(v15 + 120);
  *(_QWORD *)(v14 + 128) = *(_QWORD *)(v15 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + 136) = *(_QWORD *)(v15 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_BYTE *)v17 = *(_BYTE *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(a2 + v16 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 24) = *(_BYTE *)(v18 + 24);
  *(_BYTE *)(v17 + 25) = *(_BYTE *)(v18 + 25);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 40) = *(_QWORD *)(v18 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 48) = *(_BYTE *)(v18 + 48);
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_QWORD *)v20 = *(_QWORD *)(a2 + v19);
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(a2 + v19 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v20 + 16) = *(_BYTE *)(v21 + 16);
  *(_BYTE *)(v20 + 17) = *(_BYTE *)(v21 + 17);
  return a1;
}

uint64_t initializeWithTake for SearchResultSelectEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  v13 = a3[7];
  v14 = a3[8];
  v15 = (_OWORD *)(a1 + v13);
  v16 = (_OWORD *)(a2 + v13);
  v17 = v16[3];
  v15[2] = v16[2];
  v15[3] = v17;
  v18 = v16[1];
  *v15 = *v16;
  v15[1] = v18;
  v19 = v16[8];
  v20 = v16[6];
  v15[7] = v16[7];
  v15[8] = v19;
  v21 = v16[5];
  v15[4] = v16[4];
  v15[5] = v21;
  v15[6] = v20;
  v22 = a1 + v14;
  v23 = a2 + v14;
  v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
  *(_BYTE *)(v22 + 48) = *(_BYTE *)(v23 + 48);
  v25 = a3[9];
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_WORD *)(v26 + 16) = *(_WORD *)(v27 + 16);
  return a1;
}

uint64_t assignWithTake for SearchResultSelectEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(v17 + 32);
  *(_QWORD *)(v16 + 24) = *(_QWORD *)(v17 + 24);
  *(_QWORD *)(v16 + 32) = v18;
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v17 + 48);
  *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
  *(_QWORD *)(v16 + 48) = v19;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v16 + 56) = *(_DWORD *)(v17 + 56);
  v20 = *(_QWORD *)(v17 + 72);
  *(_QWORD *)(v16 + 64) = *(_QWORD *)(v17 + 64);
  *(_QWORD *)(v16 + 72) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v16 + 80) = *(_BYTE *)(v17 + 80);
  v21 = *(_QWORD *)(v17 + 96);
  *(_QWORD *)(v16 + 88) = *(_QWORD *)(v17 + 88);
  *(_QWORD *)(v16 + 96) = v21;
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v17 + 112);
  *(_QWORD *)(v16 + 104) = *(_QWORD *)(v17 + 104);
  *(_QWORD *)(v16 + 112) = v22;
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v17 + 128);
  *(_QWORD *)(v16 + 120) = *(_QWORD *)(v17 + 120);
  *(_QWORD *)(v16 + 128) = v23;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 136) = *(_QWORD *)(v17 + 136);
  swift_bridgeObjectRelease();
  v24 = a3[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_BYTE *)v25 = *(_BYTE *)(a2 + v24);
  v27 = *(_QWORD *)(a2 + v24 + 16);
  *(_QWORD *)(v25 + 8) = *(_QWORD *)(a2 + v24 + 8);
  *(_QWORD *)(v25 + 16) = v27;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v25 + 24) = *(_BYTE *)(v26 + 24);
  *(_BYTE *)(v25 + 25) = *(_BYTE *)(v26 + 25);
  v28 = *(_QWORD *)(v26 + 40);
  *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
  *(_QWORD *)(v25 + 40) = v28;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v25 + 48) = *(_BYTE *)(v26 + 48);
  v29 = a3[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = *(_QWORD *)(v31 + 8);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_QWORD *)(v30 + 8) = v32;
  swift_bridgeObjectRelease();
  *(_WORD *)(v30 + 16) = *(_WORD *)(v31 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultSelectEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A44C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchResultSelectEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A44D20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5A44D9C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SearchResultSelectEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D5A44E78 + 4 * byte_1D5AE203B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D5A44EAC + 4 * byte_1D5AE2036[v4]))();
}

uint64_t sub_1D5A44EAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A44EB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A44EBCLL);
  return result;
}

uint64_t sub_1D5A44EC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A44ED0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D5A44ED4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A44EDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchResultSelectEvent.Model.CodingKeys()
{
  return &type metadata for SearchResultSelectEvent.Model.CodingKeys;
}

unint64_t sub_1D5A44EFC()
{
  unint64_t result;

  result = qword_1EFF516B8;
  if (!qword_1EFF516B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE224C, &type metadata for SearchResultSelectEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF516B8);
  }
  return result;
}

unint64_t sub_1D5A44F44()
{
  unint64_t result;

  result = qword_1EFF516C0;
  if (!qword_1EFF516C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE21BC, &type metadata for SearchResultSelectEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF516C0);
  }
  return result;
}

unint64_t sub_1D5A44F8C()
{
  unint64_t result;

  result = qword_1EFF516C8;
  if (!qword_1EFF516C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE21E4, &type metadata for SearchResultSelectEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF516C8);
  }
  return result;
}

uint64_t sub_1D5A44FD0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144686372616573 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AF2220 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AEFF80 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

NewsAnalytics::Priority_optional __swiftcall Priority.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::Priority_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t Priority.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A452CC + 4 * byte_1D5AE22C4[*v0]))(7827308, 0xE300000000000000);
}

uint64_t sub_1D5A452CC()
{
  return 0x6C616D726F6ELL;
}

uint64_t sub_1D5A452E0()
{
  return 1751607656;
}

uint64_t sub_1D5A452F0()
{
  return 0x6867694879726576;
}

void sub_1D5A45308(char *a1)
{
  sub_1D5A356A4(*a1);
}

unint64_t sub_1D5A45318()
{
  unint64_t result;

  result = qword_1EFF516D0;
  if (!qword_1EFF516D0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for Priority, &type metadata for Priority);
    atomic_store(result, (unint64_t *)&qword_1EFF516D0);
  }
  return result;
}

void sub_1D5A4535C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5A453A0()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A45404()
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A45438()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5A45488()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5A454C8()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::Priority_optional sub_1D5A4552C(Swift::String *a1)
{
  return Priority.init(rawValue:)(*a1);
}

uint64_t sub_1D5A45538()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D5A45560 + 4 * byte_1D5AE22D4[*v0]))();
}

void sub_1D5A45560(_QWORD *a1@<X8>)
{
  *a1 = 0x6C616D726F6ELL;
  a1[1] = 0xE600000000000000;
}

void sub_1D5A45578(_QWORD *a1@<X8>)
{
  *a1 = 1751607656;
  a1[1] = 0xE400000000000000;
}

void sub_1D5A4558C(_QWORD *a1@<X8>)
{
  *a1 = 0x6867694879726576;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1D5A455A8()
{
  sub_1D5A4571C();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A45604()
{
  sub_1D5A4571C();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for Priority(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D5A4569C + 4 * byte_1D5AE22DD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D5A456D0 + 4 * byte_1D5AE22D8[v4]))();
}

uint64_t sub_1D5A456D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A456D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A456E0);
  return result;
}

uint64_t sub_1D5A456EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A456F4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D5A456F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A45700(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Priority()
{
  return &type metadata for Priority;
}

unint64_t sub_1D5A4571C()
{
  unint64_t result;

  result = qword_1ED9D0B98;
  if (!qword_1ED9D0B98)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for Priority, &type metadata for Priority);
    atomic_store(result, (unint64_t *)&qword_1ED9D0B98);
  }
  return result;
}

uint64_t sub_1D5A45760()
{
  uint64_t result;
  uint64_t v1;
  unint64_t v2;
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  _BYTE *v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[40];
  __int128 v21;
  __int128 v22;

  result = sub_1D5AAD524();
  if (result)
  {
    v1 = result;
    *(_QWORD *)&v21 = 0xD000000000000012;
    *((_QWORD *)&v21 + 1) = 0x80000001D5AF2260;
    sub_1D5AAEB50();
    if (*(_QWORD *)(v1 + 16) && (v2 = sub_1D5A9E278((uint64_t)v20), (v3 & 1) != 0))
    {
      sub_1D57E6B64(*(_QWORD *)(v1 + 56) + 32 * v2, (uint64_t)&v21);
    }
    else
    {
      v21 = 0u;
      v22 = 0u;
    }
    sub_1D588EBB0((uint64_t)v20);
    if (*((_QWORD *)&v22 + 1))
    {
      v4 = swift_dynamicCast();
      if (v4)
        v5 = v18;
      else
        v5 = 0;
      if (v4)
        v6 = v19;
      else
        v6 = 0;
    }
    else
    {
      sub_1D57C5484((uint64_t)&v21);
      v5 = 0;
      v6 = 0;
    }
    *(_QWORD *)&v21 = 0x6E676961706D6163;
    *((_QWORD *)&v21 + 1) = 0xEA00000000004449;
    sub_1D5AAEB50();
    if (*(_QWORD *)(v1 + 16) && (v7 = sub_1D5A9E278((uint64_t)v20), (v8 & 1) != 0))
    {
      sub_1D57E6B64(*(_QWORD *)(v1 + 56) + 32 * v7, (uint64_t)&v21);
    }
    else
    {
      v21 = 0u;
      v22 = 0u;
    }
    sub_1D588EBB0((uint64_t)v20);
    if (*((_QWORD *)&v22 + 1))
    {
      v9 = swift_dynamicCast();
      if (v9)
        v10 = v18;
      else
        v10 = 0;
      if (v9)
        v11 = v19;
      else
        v11 = 0;
    }
    else
    {
      sub_1D57C5484((uint64_t)&v21);
      v10 = 0;
      v11 = 0;
    }
    sub_1D5AAEB50();
    if (*(_QWORD *)(v1 + 16) && (v12 = sub_1D5A9E278((uint64_t)v20), (v13 & 1) != 0))
    {
      sub_1D57E6B64(*(_QWORD *)(v1 + 56) + 32 * v12, (uint64_t)&v21);
    }
    else
    {
      v21 = 0u;
      v22 = 0u;
    }
    swift_bridgeObjectRelease();
    v14 = swift_allocObject();
    v15 = (_BYTE *)(v14 + 16);
    sub_1D588EBB0((uint64_t)v20);
    if (*((_QWORD *)&v22 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v16 = *v15;
        if (v16 == 2 || (v16 & 1) != 0)
          goto LABEL_37;
      }
    }
    else
    {
      sub_1D57C5484((uint64_t)&v21);
    }
    *v15 = 2;
LABEL_37:
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = v5;
    v17[3] = v6;
    v17[4] = v10;
    v17[5] = v11;
    v17[6] = v14;
    swift_retain();
    sub_1D5AADB9C();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D5A45A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD v22[4];
  char v23;

  sub_1D5A45D00();
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v16 = *(_BYTE *)(a6 + 16);
  v22[0] = a2;
  v22[1] = a3;
  v22[2] = a4;
  v22[3] = a5;
  v23 = v16;
  sub_1D5A45D58();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D5AADA40();
  sub_1D57BD7B0();
  v17 = sub_1D5AADB54();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1D5AB0170;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v18 + 104))(v20 + v19, *MEMORY[0x1E0CF8168], v17);
  sub_1D5AADD1C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_1D5A45CAC()
{
  return swift_deallocObject();
}

uint64_t sub_1D5A45CBC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D5A45CF0(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D5A45A5C(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

void sub_1D5A45D00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C67C0)
  {
    sub_1D5A45D58();
    v0 = sub_1D5AADA4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C67C0);
  }
}

unint64_t sub_1D5A45D58()
{
  unint64_t result;

  result = qword_1ED9C6978;
  if (!qword_1ED9C6978)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AMSMarketingItemData, &type metadata for AMSMarketingItemData);
    atomic_store(result, (unint64_t *)&qword_1ED9C6978);
  }
  return result;
}

NewsAnalytics::AlternateHeadlineTreatmentStateData_optional __swiftcall AlternateHeadlineTreatmentStateData.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::AlternateHeadlineTreatmentStateData_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AlternateHeadlineTreatmentStateData.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A45E24 + 4 * byte_1D5AE2400[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5A45E24()
{
  return 0x746C7561666564;
}

uint64_t sub_1D5A45E38()
{
  return 0x6C6F72746E6F63;
}

uint64_t sub_1D5A45E4C()
{
  return 1953719668;
}

uint64_t sub_1D5A45E5C()
{
  return 0x724172656E6E6977;
}

uint64_t sub_1D5A45E80()
{
  return 0x654472656E6E6977;
}

uint64_t sub_1D5A45EA4()
{
  return 0x6C4172656E6E6977;
}

void sub_1D5A45EC8(char *a1)
{
  sub_1D5A35BA4(*a1);
}

unint64_t sub_1D5A45ED8()
{
  unint64_t result;

  result = qword_1EFF516D8;
  if (!qword_1EFF516D8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AlternateHeadlineTreatmentStateData, &type metadata for AlternateHeadlineTreatmentStateData);
    atomic_store(result, (unint64_t *)&qword_1EFF516D8);
  }
  return result;
}

void sub_1D5A45F1C()
{
  char *v0;

  sub_1D5AAA22C(0, *v0);
}

void sub_1D5A45F28()
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A45F64()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5A4601C(uint64_t a1)
{
  char *v1;

  sub_1D5AAA22C(a1, *v1);
}

NewsAnalytics::AlternateHeadlineTreatmentStateData_optional sub_1D5A46024(Swift::String *a1)
{
  return AlternateHeadlineTreatmentStateData.init(rawValue:)(*a1);
}

uint64_t sub_1D5A46030()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D5A46060 + 4 * byte_1D5AE240E[*v0]))();
}

void sub_1D5A46060(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x746C7561666564;
  a1[1] = v1;
}

void sub_1D5A46078(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6C6F72746E6F63;
  a1[1] = v1;
}

void sub_1D5A46090(_QWORD *a1@<X8>)
{
  *a1 = 1953719668;
  a1[1] = 0xE400000000000000;
}

void sub_1D5A460A4(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "winnerArticle");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1D5A460CC(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "winnerDefault");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1D5A460F4(_QWORD *a1@<X8>)
{
  *a1 = 0x6C4172656E6E6977;
  a1[1] = 0xEF6574616E726574;
}

uint64_t sub_1D5A4611C()
{
  sub_1D5A46290();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A46178()
{
  sub_1D5A46290();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for AlternateHeadlineTreatmentStateData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D5A46210 + 4 * byte_1D5AE241A[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D5A46244 + 4 * byte_1D5AE2415[v4]))();
}

uint64_t sub_1D5A46244(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A4624C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A46254);
  return result;
}

uint64_t sub_1D5A46260(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A46268);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D5A4626C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A46274(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AlternateHeadlineTreatmentStateData()
{
  return &type metadata for AlternateHeadlineTreatmentStateData;
}

unint64_t sub_1D5A46290()
{
  unint64_t result;

  result = qword_1ED9CBFC8;
  if (!qword_1ED9CBFC8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AlternateHeadlineTreatmentStateData, &type metadata for AlternateHeadlineTreatmentStateData);
    atomic_store(result, (unint64_t *)&qword_1ED9CBFC8);
  }
  return result;
}

uint64_t ConsentScreenActionData.didConsent.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t ConsentScreenActionData.didConsent.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*ConsentScreenActionData.didConsent.modify())()
{
  return nullsub_1;
}

NewsAnalytics::ConsentScreenActionData __swiftcall ConsentScreenActionData.init(didConsent:)(NewsAnalytics::ConsentScreenActionData didConsent)
{
  NewsAnalytics::ConsentScreenActionData *v1;

  v1->didConsent = didConsent.didConsent;
  return didConsent;
}

uint64_t sub_1D5A462FC()
{
  return 0x65736E6F43646964;
}

uint64_t sub_1D5A46318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x65736E6F43646964 && a2 == 0xEA0000000000746ELL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5A463B8()
{
  sub_1D5A464F8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A463E0()
{
  sub_1D5A464F8();
  return sub_1D5AAEEE0();
}

uint64_t ConsentScreenActionData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5A46660(0, &qword_1EFF516E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A464F8();
  sub_1D5AAEEC8();
  sub_1D5AAED48();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D5A464F8()
{
  unint64_t result;

  result = qword_1EFF516E8;
  if (!qword_1EFF516E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE26EC, &type metadata for ConsentScreenActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF516E8);
  }
  return result;
}

uint64_t ConsentScreenActionData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;

  sub_1D5A46660(0, &qword_1EFF516F0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A464F8();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECAC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A46660(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A464F8();
    v7 = a3(a1, &type metadata for ConsentScreenActionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A466C4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ConsentScreenActionData.init(from:)(a1, a2);
}

uint64_t sub_1D5A466D8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5A46660(0, &qword_1EFF516E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A464F8();
  sub_1D5AAEEC8();
  sub_1D5AAED48();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t storeEnumTagSinglePayload for ConsentScreenActionData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5A46814 + 4 * byte_1D5AE2565[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D5A46848 + 4 * byte_1D5AE2560[v4]))();
}

uint64_t sub_1D5A46848(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A46850(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A46858);
  return result;
}

uint64_t sub_1D5A46864(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A4686CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5A46870(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A46878(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConsentScreenActionData()
{
  return &type metadata for ConsentScreenActionData;
}

uint64_t storeEnumTagSinglePayload for ConsentScreenActionData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5A468D4 + 4 * byte_1D5AE256A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5A468F4 + 4 * byte_1D5AE256F[v4]))();
}

_BYTE *sub_1D5A468D4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5A468F4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A468FC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A46904(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A4690C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A46914(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ConsentScreenActionData.CodingKeys()
{
  return &type metadata for ConsentScreenActionData.CodingKeys;
}

unint64_t sub_1D5A46934()
{
  unint64_t result;

  result = qword_1EFF516F8;
  if (!qword_1EFF516F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE26C4, &type metadata for ConsentScreenActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF516F8);
  }
  return result;
}

unint64_t sub_1D5A4697C()
{
  unint64_t result;

  result = qword_1EFF51700;
  if (!qword_1EFF51700)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE2634, &type metadata for ConsentScreenActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51700);
  }
  return result;
}

unint64_t sub_1D5A469C4()
{
  unint64_t result;

  result = qword_1EFF51708;
  if (!qword_1EFF51708)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE265C, &type metadata for ConsentScreenActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51708);
  }
  return result;
}

void LiveActivityOriginationData.liveActivityOrigination.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *LiveActivityOriginationData.liveActivityOrigination.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*LiveActivityOriginationData.liveActivityOrigination.modify())()
{
  return nullsub_1;
}

NewsAnalytics::LiveActivityOriginationData __swiftcall LiveActivityOriginationData.init(liveActivityOrigination:)(NewsAnalytics::LiveActivityOriginationData liveActivityOrigination)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)liveActivityOrigination.liveActivityOrigination;
  return liveActivityOrigination;
}

unint64_t sub_1D5A46A3C()
{
  return 0xD000000000000017;
}

uint64_t sub_1D5A46A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A470A4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D5A46A80()
{
  sub_1D5A46BD4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A46AA8()
{
  sub_1D5A46BD4();
  return sub_1D5AAEEE0();
}

uint64_t LiveActivityOriginationData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1D5A46D94(0, &qword_1EFF51710, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A46BD4();
  sub_1D5AAEEC8();
  v11 = v8;
  sub_1D5A46C18();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5A46BD4()
{
  unint64_t result;

  result = qword_1EFF51718;
  if (!qword_1EFF51718)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE28D0, &type metadata for LiveActivityOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51718);
  }
  return result;
}

unint64_t sub_1D5A46C18()
{
  unint64_t result;

  result = qword_1EFF51720;
  if (!qword_1EFF51720)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for LiveActivityOrigination, &type metadata for LiveActivityOrigination);
    atomic_store(result, (unint64_t *)&qword_1EFF51720);
  }
  return result;
}

uint64_t LiveActivityOriginationData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D5A46D94(0, &qword_1EFF51728, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A46BD4();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5A46DF0();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A46D94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A46BD4();
    v7 = a3(a1, &type metadata for LiveActivityOriginationData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5A46DF0()
{
  unint64_t result;

  result = qword_1EFF51730;
  if (!qword_1EFF51730)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for LiveActivityOrigination, &type metadata for LiveActivityOrigination);
    atomic_store(result, (unint64_t *)&qword_1EFF51730);
  }
  return result;
}

uint64_t sub_1D5A46E3C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return LiveActivityOriginationData.init(from:)(a1, a2);
}

uint64_t sub_1D5A46E50(_QWORD *a1)
{
  return LiveActivityOriginationData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for LiveActivityOriginationData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D5A46EB0 + 4 * byte_1D5AE2745[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D5A46EE4 + 4 * byte_1D5AE2740[v4]))();
}

uint64_t sub_1D5A46EE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A46EEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A46EF4);
  return result;
}

uint64_t sub_1D5A46F00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A46F08);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D5A46F0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A46F14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityOriginationData()
{
  return &type metadata for LiveActivityOriginationData;
}

uint64_t storeEnumTagSinglePayload for LiveActivityOriginationData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5A46F70 + 4 * byte_1D5AE274A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5A46F90 + 4 * byte_1D5AE274F[v4]))();
}

_BYTE *sub_1D5A46F70(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5A46F90(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A46F98(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A46FA0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A46FA8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A46FB0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityOriginationData.CodingKeys()
{
  return &type metadata for LiveActivityOriginationData.CodingKeys;
}

unint64_t sub_1D5A46FD0()
{
  unint64_t result;

  result = qword_1EFF51738;
  if (!qword_1EFF51738)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE28A8, &type metadata for LiveActivityOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51738);
  }
  return result;
}

unint64_t sub_1D5A47018()
{
  unint64_t result;

  result = qword_1EFF51740;
  if (!qword_1EFF51740)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE2818, &type metadata for LiveActivityOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51740);
  }
  return result;
}

unint64_t sub_1D5A47060()
{
  unint64_t result;

  result = qword_1EFF51748;
  if (!qword_1EFF51748)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE2840, &type metadata for LiveActivityOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51748);
  }
  return result;
}

uint64_t sub_1D5A470A4(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000017 && a2 == 0x80000001D5AF2330)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void AdJournalEntryData.status.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AdJournalEntryData.status.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AdJournalEntryData.status.modify())()
{
  return nullsub_1;
}

void AdJournalEntryData.error.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *AdJournalEntryData.error.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*AdJournalEntryData.error.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5A47178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A4765C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A4719C()
{
  sub_1D57A99B4();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A471C4()
{
  sub_1D57A99B4();
  return sub_1D5AAEEE0();
}

uint64_t AdJournalEntryData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;

  sub_1D57A98D0(0, &qword_1EFF51750, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A99B4();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v16 = 0;
    sub_1D5A47370();
    sub_1D5AAECD0();
    v10 = v17;
    v14 = 1;
    sub_1D5A473B4();
    sub_1D5AAEC7C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1D5A47370()
{
  unint64_t result;

  result = qword_1EFF51758;
  if (!qword_1EFF51758)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdJournalEntryStatus, &type metadata for AdJournalEntryStatus);
    atomic_store(result, (unint64_t *)&qword_1EFF51758);
  }
  return result;
}

unint64_t sub_1D5A473B4()
{
  unint64_t result;

  result = qword_1EFF51760;
  if (!qword_1EFF51760)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdJournalEntryError, &type metadata for AdJournalEntryError);
    atomic_store(result, (unint64_t *)&qword_1EFF51760);
  }
  return result;
}

uint64_t sub_1D5A47400@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return AdJournalEntryData.init(from:)(a1, a2);
}

uint64_t getEnumTagSinglePayload for AdJournalEntryData(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v6;
  int v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 65284 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65284 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65284;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65284;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65284;
  }
LABEL_17:
  if (*((unsigned __int8 *)a1 + 1) <= 4u)
    v6 = 4;
  else
    v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 - 5;
  if (*((unsigned __int8 *)a1 + 1) < 4u)
    v8 = -1;
  else
    v8 = v7;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AdJournalEntryData(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65284 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65284 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D5A47504 + 4 * byte_1D5AE2925[v4]))();
  *a1 = a2 - 252;
  return ((uint64_t (*)(void))((char *)sub_1D5A47538 + 4 * byte_1D5AE2920[v4]))();
}

uint64_t sub_1D5A47538(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1D5A47540(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1D5A47548);
  return result;
}

uint64_t sub_1D5A47554(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1D5A4755CLL);
  *(_BYTE *)(result + 1) = a2 + 4;
  return result;
}

uint64_t sub_1D5A47560(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1D5A47568(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdJournalEntryData.CodingKeys()
{
  return &type metadata for AdJournalEntryData.CodingKeys;
}

unint64_t sub_1D5A47588()
{
  unint64_t result;

  result = qword_1EFF51768;
  if (!qword_1EFF51768)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE2A80, &type metadata for AdJournalEntryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51768);
  }
  return result;
}

unint64_t sub_1D5A475D0()
{
  unint64_t result;

  result = qword_1ED9CD2B0;
  if (!qword_1ED9CD2B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE29F0, &type metadata for AdJournalEntryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD2B0);
  }
  return result;
}

unint64_t sub_1D5A47618()
{
  unint64_t result;

  result = qword_1ED9CD2A8;
  if (!qword_1ED9CD2A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE2A18, &type metadata for AdJournalEntryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD2A8);
  }
  return result;
}

uint64_t sub_1D5A4765C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x737574617473 && a2 == 0xE600000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t dispatch thunk of AggregateStateModeProviderType.mode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t FeedPositionData.position.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t FeedPositionData.position.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*FeedPositionData.position.modify())()
{
  return nullsub_1;
}

uint64_t FeedPositionData.init(position:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1D5A4776C()
{
  sub_1D5A478AC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A47794()
{
  sub_1D5A478AC();
  return sub_1D5AAEEE0();
}

uint64_t FeedPositionData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5A47A10(0, &qword_1ED9CC8F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A478AC();
  sub_1D5AAEEC8();
  sub_1D5AAED78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D5A478AC()
{
  unint64_t result;

  result = qword_1ED9C8B70;
  if (!qword_1ED9C8B70)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE2C94, &type metadata for FeedPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C8B70);
  }
  return result;
}

uint64_t FeedPositionData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v12;

  sub_1D5A47A10(0, &qword_1ED9CC7F8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A478AC();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECDC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A47A10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A478AC();
    v7 = a3(a1, &type metadata for FeedPositionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A47A74@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return FeedPositionData.init(from:)(a1, a2);
}

uint64_t sub_1D5A47A88(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5A47A10(0, &qword_1ED9CC8F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A478AC();
  sub_1D5AAEEC8();
  sub_1D5AAED78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for FeedPositionData()
{
  return &type metadata for FeedPositionData;
}

uint64_t storeEnumTagSinglePayload for FeedPositionData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5A47BC8 + 4 * byte_1D5AE2B20[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5A47BE8 + 4 * byte_1D5AE2B25[v4]))();
}

_BYTE *sub_1D5A47BC8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5A47BE8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A47BF0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A47BF8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A47C00(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A47C08(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeedPositionData.CodingKeys()
{
  return &type metadata for FeedPositionData.CodingKeys;
}

unint64_t sub_1D5A47C28()
{
  unint64_t result;

  result = qword_1EFF51770;
  if (!qword_1EFF51770)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE2C6C, &type metadata for FeedPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51770);
  }
  return result;
}

unint64_t sub_1D5A47C70()
{
  unint64_t result;

  result = qword_1ED9C8B80;
  if (!qword_1ED9C8B80)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE2BDC, &type metadata for FeedPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C8B80);
  }
  return result;
}

unint64_t sub_1D5A47CB8()
{
  unint64_t result;

  result = qword_1ED9C8B78;
  if (!qword_1ED9C8B78)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE2C04, &type metadata for FeedPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C8B78);
  }
  return result;
}

void SportScoreConcernData.concernContentType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *SportScoreConcernData.concernContentType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*SportScoreConcernData.concernContentType.modify())()
{
  return nullsub_1;
}

uint64_t SportScoreConcernData.competitorTagIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportScoreConcernData.competitorTagIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*SportScoreConcernData.competitorTagIDs.modify())()
{
  return nullsub_1;
}

uint64_t SportScoreConcernData.umcCanonicalID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportScoreConcernData.umcCanonicalID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*SportScoreConcernData.umcCanonicalID.modify())()
{
  return nullsub_1;
}

uint64_t SportScoreConcernData.embedURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportScoreConcernData.embedURL.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*SportScoreConcernData.embedURL.modify())()
{
  return nullsub_1;
}

uint64_t SportScoreConcernData.dataURLs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportScoreConcernData.dataURLs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  return result;
}

uint64_t (*SportScoreConcernData.dataURLs.modify())()
{
  return nullsub_1;
}

uint64_t SportScoreConcernData.leagueUmcId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportScoreConcernData.leagueUmcId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*SportScoreConcernData.leagueUmcId.modify())()
{
  return nullsub_1;
}

uint64_t SportScoreConcernData.leagueName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportScoreConcernData.leagueName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return result;
}

uint64_t (*SportScoreConcernData.leagueName.modify())()
{
  return nullsub_1;
}

void __swiftcall SportScoreConcernData.init(concernContentType:competitorTagIDs:umcCanonicalID:embedURL:dataURLs:leagueUmcId:leagueName:)(NewsAnalytics::SportScoreConcernData *__return_ptr retstr, NewsAnalytics::SportScoreConcernContentType concernContentType, Swift::OpaquePointer competitorTagIDs, Swift::String umcCanonicalID, Swift::String embedURL, Swift::OpaquePointer dataURLs, Swift::String_optional leagueUmcId, Swift::String_optional leagueName)
{
  retstr->concernContentType = *(_BYTE *)concernContentType;
  retstr->competitorTagIDs = competitorTagIDs;
  retstr->umcCanonicalID = umcCanonicalID;
  retstr->embedURL = embedURL;
  retstr->dataURLs = dataURLs;
  retstr->leagueUmcId.value._countAndFlagsBits = leagueUmcId.value._countAndFlagsBits;
  *(Swift::String_optional *)&retstr->leagueUmcId.value._object = *(Swift::String_optional *)&leagueUmcId.value._object;
  retstr->leagueName.value._object = leagueName.value._object;
}

uint64_t sub_1D5A47F90(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D5A47FCC + 4 * byte_1D5AE2CF0[a1]))(0xD000000000000012, 0x80000001D5AF1370);
}

unint64_t sub_1D5A47FCC()
{
  return 0xD000000000000010;
}

uint64_t sub_1D5A47FE8()
{
  return 0x6E6F6E6143636D75;
}

uint64_t sub_1D5A4800C()
{
  return 0x4C52556465626D65;
}

uint64_t sub_1D5A48024()
{
  return 0x734C525561746164;
}

uint64_t sub_1D5A4803C()
{
  return 0x6D5565756761656CLL;
}

uint64_t sub_1D5A4805C()
{
  return 0x614E65756761656CLL;
}

uint64_t sub_1D5A48078()
{
  unsigned __int8 *v0;

  return sub_1D5A47F90(*v0);
}

uint64_t sub_1D5A48080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A48E34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A480A4()
{
  sub_1D5A48384();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A480CC()
{
  sub_1D5A48384();
  return sub_1D5AAEEE0();
}

uint64_t SportScoreConcernData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[5];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  sub_1D5A488D0(0, &qword_1EFF51778, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v16 - v7;
  v9 = *v1;
  v10 = *((_QWORD *)v1 + 1);
  v21 = *((_QWORD *)v1 + 2);
  v22 = v10;
  v11 = *((_QWORD *)v1 + 3);
  v12 = *((_QWORD *)v1 + 4);
  v19 = *((_QWORD *)v1 + 5);
  v20 = v11;
  v17 = *((_QWORD *)v1 + 6);
  v18 = v12;
  v13 = *((_QWORD *)v1 + 7);
  v16[3] = *((_QWORD *)v1 + 8);
  v16[4] = v13;
  v14 = *((_QWORD *)v1 + 9);
  v16[1] = *((_QWORD *)v1 + 10);
  v16[2] = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A48384();
  sub_1D5AAEEC8();
  LOBYTE(v23) = v9;
  v24 = 0;
  sub_1D5A483C8();
  sub_1D5AAED6C();
  if (!v2)
  {
    v23 = v22;
    v24 = 1;
    sub_1D57B4558();
    sub_1D57B5638((unint64_t *)&qword_1ED9CC6B8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1D5AAED6C();
    LOBYTE(v23) = 2;
    sub_1D5AAED3C();
    LOBYTE(v23) = 3;
    sub_1D5AAED3C();
    v23 = v17;
    v24 = 4;
    sub_1D5AAED6C();
    LOBYTE(v23) = 5;
    sub_1D5AAECF4();
    LOBYTE(v23) = 6;
    sub_1D5AAECF4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D5A48384()
{
  unint64_t result;

  result = qword_1EFF51780;
  if (!qword_1EFF51780)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE2E8C, &type metadata for SportScoreConcernData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51780);
  }
  return result;
}

unint64_t sub_1D5A483C8()
{
  unint64_t result;

  result = qword_1EFF51788;
  if (!qword_1EFF51788)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SportScoreConcernContentType, &type metadata for SportScoreConcernContentType);
    atomic_store(result, (unint64_t *)&qword_1EFF51788);
  }
  return result;
}

uint64_t SportScoreConcernData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  char v42;

  sub_1D5A488D0(0, &qword_1EFF51790, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v33 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A48384();
  sub_1D5AAEEB0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v42 = 0;
    sub_1D5A4892C();
    sub_1D5AAECD0();
    v38 = a2;
    v10 = v40;
    sub_1D57B4558();
    v42 = 1;
    sub_1D57B5638((unint64_t *)&qword_1ED9CC6C0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1D5AAECD0();
    v41 = v10;
    v12 = v40;
    LOBYTE(v40) = 2;
    swift_bridgeObjectRetain();
    v36 = sub_1D5AAECA0();
    v37 = v12;
    LOBYTE(v40) = 3;
    v14 = v13;
    swift_bridgeObjectRetain();
    v15 = sub_1D5AAECA0();
    v39 = v14;
    v35 = v15;
    v42 = 4;
    v17 = v16;
    swift_bridgeObjectRetain();
    sub_1D5AAECD0();
    v18 = v17;
    v19 = v40;
    LOBYTE(v40) = 5;
    swift_bridgeObjectRetain();
    v20 = sub_1D5AAEC58();
    v22 = v21;
    v33 = v20;
    v34 = v19;
    LOBYTE(v40) = 6;
    swift_bridgeObjectRetain();
    v23 = sub_1D5AAEC58();
    v25 = v24;
    v26 = *(void (**)(char *, uint64_t))(v7 + 8);
    v27 = v23;
    v26(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v29 = v37;
    v28 = v38;
    *v38 = v41;
    v30 = v36;
    v28[1] = v29;
    v28[2] = v30;
    v32 = v34;
    v31 = v35;
    v28[3] = v39;
    v28[4] = v31;
    v28[5] = v18;
    v28[6] = v32;
    v28[7] = v33;
    v28[8] = v22;
    v28[9] = v27;
    v28[10] = v25;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D5A488D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A48384();
    v7 = a3(a1, &type metadata for SportScoreConcernData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5A4892C()
{
  unint64_t result;

  result = qword_1EFF51798;
  if (!qword_1EFF51798)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SportScoreConcernContentType, &type metadata for SportScoreConcernContentType);
    atomic_store(result, (unint64_t *)&qword_1EFF51798);
  }
  return result;
}

uint64_t sub_1D5A48978@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return SportScoreConcernData.init(from:)(a1, a2);
}

uint64_t sub_1D5A4898C(_QWORD *a1)
{
  return SportScoreConcernData.encode(to:)(a1);
}

uint64_t destroy for SportScoreConcernData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SportScoreConcernData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SportScoreConcernData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SportScoreConcernData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SportScoreConcernData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportScoreConcernData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportScoreConcernData()
{
  return &type metadata for SportScoreConcernData;
}

uint64_t storeEnumTagSinglePayload for SportScoreConcernData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D5A48CDC + 4 * byte_1D5AE2CFC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D5A48D10 + 4 * byte_1D5AE2CF7[v4]))();
}

uint64_t sub_1D5A48D10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A48D18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A48D20);
  return result;
}

uint64_t sub_1D5A48D2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A48D34);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D5A48D38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A48D40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportScoreConcernData.CodingKeys()
{
  return &type metadata for SportScoreConcernData.CodingKeys;
}

unint64_t sub_1D5A48D60()
{
  unint64_t result;

  result = qword_1EFF517A0;
  if (!qword_1EFF517A0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE2E64, &type metadata for SportScoreConcernData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF517A0);
  }
  return result;
}

unint64_t sub_1D5A48DA8()
{
  unint64_t result;

  result = qword_1EFF517A8;
  if (!qword_1EFF517A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE2DD4, &type metadata for SportScoreConcernData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF517A8);
  }
  return result;
}

unint64_t sub_1D5A48DF0()
{
  unint64_t result;

  result = qword_1EFF517B0;
  if (!qword_1EFF517B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE2DFC, &type metadata for SportScoreConcernData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF517B0);
  }
  return result;
}

uint64_t sub_1D5A48E34(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AF1370 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AF2350 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F6E6143636D75 && a2 == 0xEE0044496C616369 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4C52556465626D65 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x734C525561746164 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D5565756761656CLL && a2 == 0xEB00000000644963 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x614E65756761656CLL && a2 == 0xEA0000000000656DLL)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

NewsAnalytics::FeedType_optional __swiftcall FeedType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsAnalytics::FeedType_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1D5AAEE08();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 5;
  switch(v3)
  {
    case 0:
      goto LABEL_7;
    case 1:
      v5 = 1;
      goto LABEL_7;
    case 2:
      v5 = 2;
      goto LABEL_7;
    case 3:
      v5 = 3;
      goto LABEL_7;
    case 4:
      v5 = 4;
LABEL_7:
      v6 = v5;
      break;
    case 5:
      break;
    case 6:
      v6 = 6;
      break;
    case 7:
      v6 = 7;
      break;
    case 8:
      v6 = 8;
      break;
    case 9:
      v6 = 9;
      break;
    case 10:
      v6 = 10;
      break;
    case 11:
      v6 = 11;
      break;
    case 12:
      v6 = 12;
      break;
    case 13:
      v6 = 13;
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    case 20:
      v6 = 20;
      break;
    case 21:
      v6 = 21;
      break;
    case 22:
      v6 = 22;
      break;
    default:
      v6 = 23;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t sub_1D5A49280(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A357D8(*a1, *a2);
}

unint64_t sub_1D5A49290()
{
  unint64_t result;

  result = qword_1EFF517B8;
  if (!qword_1EFF517B8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedType, &type metadata for FeedType);
    atomic_store(result, (unint64_t *)&qword_1EFF517B8);
  }
  return result;
}

uint64_t sub_1D5A492D4()
{
  sub_1D5AAEE80();
  FeedType.rawValue.getter();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5A49338()
{
  FeedType.rawValue.getter();
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5A49388()
{
  sub_1D5AAEE80();
  FeedType.rawValue.getter();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::FeedType_optional sub_1D5A493E8(Swift::String *a1)
{
  return FeedType.init(rawValue:)(*a1);
}

uint64_t sub_1D5A493F4()
{
  sub_1D57A7520();
  return sub_1D5AAE928();
}

uint64_t storeEnumTagSinglePayload for FeedType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 22 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 22) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE9)
    return ((uint64_t (*)(void))((char *)&loc_1D5A4949C + 4 * byte_1D5AE2F0F[v4]))();
  *a1 = a2 + 22;
  return ((uint64_t (*)(void))((char *)sub_1D5A494D0 + 4 * byte_1D5AE2F0A[v4]))();
}

uint64_t sub_1D5A494D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A494D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A494E0);
  return result;
}

uint64_t sub_1D5A494EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A494F4);
  *(_BYTE *)result = a2 + 22;
  return result;
}

uint64_t sub_1D5A494F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A49500(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A4950C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF517C0, MEMORY[0x1E0CF8078]);
}

uint64_t static WebAccessEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47468, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF517C0, a1);
}

uint64_t sub_1D5A4954C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF517D8, MEMORY[0x1E0CF8380]);
}

uint64_t static WebAccessEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(qword_1EFF47470, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF517D8, a1);
}

uint64_t WebAccessEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t WebAccessEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*WebAccessEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t WebAccessEvent.userActionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebAccessEvent(0) + 20);
  sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for WebAccessEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF51870);
}

uint64_t WebAccessEvent.userActionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebAccessEvent(0) + 20);
  sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebAccessEvent.userActionData.modify())(_QWORD)
{
  type metadata accessor for WebAccessEvent(0);
  return nullsub_1;
}

uint64_t WebAccessEvent.emailShareResultData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebAccessEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF517F8, (void (*)(void))sub_1D5854570, (void (*)(void))sub_1D58545B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebAccessEvent.emailShareResultData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebAccessEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF517F8, (void (*)(void))sub_1D5854570, (void (*)(void))sub_1D58545B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebAccessEvent.emailShareResultData.modify())(_QWORD)
{
  type metadata accessor for WebAccessEvent(0);
  return nullsub_1;
}

uint64_t WebAccessEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebAccessEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebAccessEvent.tagData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebAccessEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebAccessEvent.tagData.modify())(_QWORD)
{
  type metadata accessor for WebAccessEvent(0);
  return nullsub_1;
}

uint64_t WebAccessEvent.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebAccessEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebAccessEvent.sectionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebAccessEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebAccessEvent.sectionData.modify())(_QWORD)
{
  type metadata accessor for WebAccessEvent(0);
  return nullsub_1;
}

uint64_t WebAccessEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebAccessEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebAccessEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebAccessEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebAccessEvent.articleData.modify())(_QWORD)
{
  type metadata accessor for WebAccessEvent(0);
  return nullsub_1;
}

uint64_t WebAccessEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebAccessEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebAccessEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebAccessEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebAccessEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for WebAccessEvent(0);
  return nullsub_1;
}

uint64_t WebAccessEvent.purchaseSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebAccessEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebAccessEvent.purchaseSessionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebAccessEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebAccessEvent.purchaseSessionData.modify())(_QWORD)
{
  type metadata accessor for WebAccessEvent(0);
  return nullsub_1;
}

uint64_t WebAccessEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebAccessEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebAccessEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebAccessEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebAccessEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for WebAccessEvent(0);
  return nullsub_1;
}

uint64_t WebAccessEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for WebAccessEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1EFF517F8, (void (*)(void))sub_1D5854570, (void (*)(void))sub_1D58545B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v10, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v10, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v10, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
}

uint64_t WebAccessEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t WebAccessEvent.Model.userActionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WebAccessEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for WebAccessEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF51920);
}

uint64_t WebAccessEvent.Model.emailShareResultData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WebAccessEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t WebAccessEvent.Model.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for WebAccessEvent.Model(0) + 28));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t WebAccessEvent.Model.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v3 = v1 + *(int *)(type metadata accessor for WebAccessEvent.Model(0) + 32);
  v4 = *(_BYTE *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(_BYTE *)(a1 + 24) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t WebAccessEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[136];

  v3 = type metadata accessor for WebAccessEvent.Model(0);
  sub_1D580C534(v1 + *(int *)(v3 + 36), (uint64_t)v5);
  sub_1D580C534((uint64_t)v5, a1);
  return sub_1D580D964((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1D580C5CC);
}

uint64_t WebAccessEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for WebAccessEvent.Model(0) + 40));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t WebAccessEvent.Model.purchaseSessionData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for WebAccessEvent.Model(0) + 44));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t WebAccessEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for WebAccessEvent.Model(0) + 48));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 WebAccessEvent.Model.init(eventData:userActionData:emailShareResultData:tagData:sectionData:articleData:feedData:purchaseSessionData:userBundleSubscriptionContextData:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, __int128 *a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, char *a10)
{
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  int *v22;
  _QWORD *v23;
  uint64_t v24;
  __n128 *v25;
  __n128 result;
  _QWORD *v27;
  uint64_t v28;
  char v29;
  __int128 v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  _BYTE v41[144];

  v14 = *a2;
  v15 = *a3;
  v16 = *a4;
  v17 = a4[1];
  v30 = *a5;
  v18 = *((_QWORD *)a5 + 2);
  v29 = *((_BYTE *)a5 + 24);
  sub_1D580C534(a6, (uint64_t)v41);
  v31 = *a7;
  v19 = a7[1].n128_u64[0];
  v32 = a8[1];
  v33 = *a8;
  v40 = *a10;
  v38 = *((_QWORD *)a10 + 2);
  v39 = *((_QWORD *)a10 + 1);
  v36 = a10[25];
  v37 = a10[24];
  v34 = *((_QWORD *)a10 + 5);
  v35 = *((_QWORD *)a10 + 4);
  v20 = a10[48];
  v21 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a9, a1, v21);
  v22 = (int *)type metadata accessor for WebAccessEvent.Model(0);
  *(_BYTE *)(a9 + v22[5]) = v14;
  *(_BYTE *)(a9 + v22[6]) = v15;
  v23 = (_QWORD *)(a9 + v22[7]);
  *v23 = v16;
  v23[1] = v17;
  v24 = a9 + v22[8];
  *(_OWORD *)v24 = v30;
  *(_QWORD *)(v24 + 16) = v18;
  *(_BYTE *)(v24 + 24) = v29;
  sub_1D580C534((uint64_t)v41, a9 + v22[9]);
  v25 = (__n128 *)(a9 + v22[10]);
  result = v31;
  *v25 = v31;
  v25[1].n128_u64[0] = v19;
  v27 = (_QWORD *)(a9 + v22[11]);
  *v27 = v33;
  v27[1] = v32;
  v28 = a9 + v22[12];
  *(_BYTE *)v28 = v40;
  *(_QWORD *)(v28 + 8) = v39;
  *(_QWORD *)(v28 + 16) = v38;
  *(_BYTE *)(v28 + 24) = v37;
  *(_BYTE *)(v28 + 25) = v36;
  *(_QWORD *)(v28 + 32) = v35;
  *(_QWORD *)(v28 + 40) = v34;
  *(_BYTE *)(v28 + 48) = v20;
  return result;
}

uint64_t sub_1D5A4A428(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A4A460 + 4 * byte_1D5AE3070[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5A4A460()
{
  return 0x6974634172657375;
}

unint64_t sub_1D5A4A484()
{
  return 0xD000000000000014;
}

uint64_t sub_1D5A4A53C()
{
  unsigned __int8 *v0;

  return sub_1D5A4A428(*v0);
}

uint64_t sub_1D5A4A544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A4DC04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A4A568()
{
  sub_1D5A4A96C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A4A590()
{
  sub_1D5A4A96C();
  return sub_1D5AAEEE0();
}

uint64_t WebAccessEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v21;
  char v22;
  _BYTE v23[24];
  char v24;
  char v25;
  __int128 v26;
  char v27;
  _OWORD v28[8];
  char v29;
  __int128 v30;
  uint64_t v31;
  char v32;

  v3 = v1;
  sub_1D5A4AFCC(0, &qword_1EFF51800, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A4A96C();
  sub_1D5AAEEC8();
  LOBYTE(v28[0]) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for WebAccessEvent.Model(0);
    LOBYTE(v28[0]) = *(_BYTE *)(v3 + v10[5]);
    v23[0] = 1;
    sub_1D59B28A4();
    sub_1D5AAED6C();
    LOBYTE(v28[0]) = *(_BYTE *)(v3 + v10[6]);
    v23[0] = 2;
    sub_1D58545B8();
    sub_1D5AAED6C();
    v28[0] = *(_OWORD *)(v3 + v10[7]);
    v23[0] = 3;
    sub_1D57C6738();
    sub_1D5AAED18();
    v11 = (__int128 *)(v3 + v10[8]);
    v12 = *((_QWORD *)v11 + 2);
    v13 = *((_BYTE *)v11 + 24);
    v30 = *v11;
    v31 = v12;
    v32 = v13;
    v29 = 4;
    sub_1D57CB720();
    sub_1D5AAED18();
    sub_1D580C534(v3 + v10[9], (uint64_t)v28);
    sub_1D580C534((uint64_t)v28, (uint64_t)v23);
    v22 = 5;
    sub_1D57CB940();
    sub_1D5AAED18();
    v14 = v3 + v10[10];
    v15 = *(_QWORD *)(v14 + 16);
    *(_OWORD *)v23 = *(_OWORD *)v14;
    *(_QWORD *)&v23[16] = v15;
    v22 = 6;
    sub_1D57C65D4();
    sub_1D5AAED18();
    *(_OWORD *)v23 = *(_OWORD *)(v3 + v10[11]);
    v22 = 7;
    sub_1D583239C();
    sub_1D5AAED18();
    v16 = v3 + v10[12];
    v17 = *(_BYTE *)(v16 + 24);
    v18 = *(_BYTE *)(v16 + 25);
    v19 = *(_BYTE *)(v16 + 48);
    v23[0] = *(_BYTE *)v16;
    *(_OWORD *)&v23[8] = *(_OWORD *)(v16 + 8);
    v24 = v17;
    v25 = v18;
    v26 = *(_OWORD *)(v16 + 32);
    v27 = v19;
    v22 = 8;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A4A96C()
{
  unint64_t result;

  result = qword_1EFF51808;
  if (!qword_1EFF51808)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE3324, &type metadata for WebAccessEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51808);
  }
  return result;
}

uint64_t WebAccessEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  _BYTE v36[24];
  char v37;
  char v38;
  __int128 v39;
  char v40;
  _BYTE v41[136];
  __int128 v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;

  v29 = a2;
  v3 = sub_1D5AADF98();
  v30 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v32 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A4AFCC(0, &qword_1EFF51810, MEMORY[0x1E0DED048]);
  v31 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - v7;
  v9 = (int *)type metadata accessor for WebAccessEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1D5A4A96C();
  v33 = v8;
  v13 = v35;
  sub_1D5AAEEB0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  v14 = v6;
  v15 = v30;
  v16 = (uint64_t)v11;
  LOBYTE(v42) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v17 = v31;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v16, v32, v3);
  v41[0] = 1;
  sub_1D59B285C();
  sub_1D5AAECD0();
  *(_BYTE *)(v16 + v9[5]) = v42;
  v41[0] = 2;
  sub_1D5854570();
  sub_1D5AAECD0();
  *(_BYTE *)(v16 + v9[6]) = v42;
  v41[0] = 3;
  sub_1D57C66F4();
  sub_1D5AAEC7C();
  *(_OWORD *)(v16 + v9[7]) = v42;
  v41[0] = 4;
  sub_1D57CB6DC();
  sub_1D5AAEC7C();
  v18 = v43;
  v19 = v44;
  v20 = v16 + v9[8];
  *(_OWORD *)v20 = v42;
  *(_QWORD *)(v20 + 16) = v18;
  *(_BYTE *)(v20 + 24) = v19;
  v46 = 5;
  sub_1D57CB8FC();
  sub_1D5AAEC7C();
  sub_1D580C534((uint64_t)&v42, (uint64_t)v41);
  sub_1D580C534((uint64_t)v41, v16 + v9[9]);
  v45 = 6;
  sub_1D57C6590();
  v35 = 0;
  sub_1D5AAEC7C();
  v21 = *(_QWORD *)&v36[16];
  v22 = v16 + v9[10];
  *(_OWORD *)v22 = *(_OWORD *)v36;
  *(_QWORD *)(v22 + 16) = v21;
  v45 = 7;
  sub_1D5832358();
  sub_1D5AAEC7C();
  *(_OWORD *)(v16 + v9[11]) = *(_OWORD *)v36;
  v45 = 8;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v33, v17);
  v23 = v37;
  v24 = v38;
  v25 = v40;
  v26 = v16 + v9[12];
  *(_BYTE *)v26 = v36[0];
  *(_OWORD *)(v26 + 8) = *(_OWORD *)&v36[8];
  *(_BYTE *)(v26 + 24) = v23;
  *(_BYTE *)(v26 + 25) = v24;
  *(_OWORD *)(v26 + 32) = v39;
  *(_BYTE *)(v26 + 48) = v25;
  sub_1D5A4B028(v16, v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  return sub_1D5A4B06C(v16);
}

void sub_1D5A4AFCC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A4A96C();
    v7 = a3(a1, &type metadata for WebAccessEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A4B028(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WebAccessEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A4B06C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WebAccessEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A4B0A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WebAccessEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A4B0BC(_QWORD *a1)
{
  return WebAccessEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A4B0D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47468, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF517C0, a1);
}

uint64_t sub_1D5A4B0F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(qword_1EFF47470, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF517D8, a1);
}

uint64_t sub_1D5A4B118@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1EFF517F8, (void (*)(void))sub_1D5854570, (void (*)(void))sub_1D58545B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v11, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v11, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v11, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
}

uint64_t *initializeBufferWithCopyOfBuffer for WebAccessEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v40 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1EFF517F8, (void (*)(void))sub_1D5854570, (void (*)(void))sub_1D58545B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return a1;
}

uint64_t destroy for WebAccessEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1EFF517F8, (void (*)(void))sub_1D5854570, (void (*)(void))sub_1D58545B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
}

uint64_t initializeWithCopy for WebAccessEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF517F8, (void (*)(void))sub_1D5854570, (void (*)(void))sub_1D58545B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

uint64_t assignWithCopy for WebAccessEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF517F8, (void (*)(void))sub_1D5854570, (void (*)(void))sub_1D58545B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  return a1;
}

uint64_t initializeWithTake for WebAccessEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF517F8, (void (*)(void))sub_1D5854570, (void (*)(void))sub_1D58545B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  return a1;
}

uint64_t assignWithTake for WebAccessEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF517F8, (void (*)(void))sub_1D5854570, (void (*)(void))sub_1D58545B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  return a1;
}

uint64_t getEnumTagSinglePayload for WebAccessEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A4C3EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF517F8, (void (*)(void))sub_1D5854570, (void (*)(void))sub_1D58545B8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                  v8 = v20;
                  v12 = *(_QWORD *)(v20 - 8);
                  v13 = a3[12];
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for WebAccessEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A4C668(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF517F8, (void (*)(void))sub_1D5854570, (void (*)(void))sub_1D58545B8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                  v10 = v22;
                  v14 = *(_QWORD *)(v22 - 8);
                  v15 = a4[12];
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5A4C8E0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1EFF517F8, (void (*)(void))sub_1D5854570, (void (*)(void))sub_1D58545B8);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                  if (v8 <= 0x3F)
                    swift_initStructMetadata();
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for WebAccessEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
    v9 = a3[7];
    v10 = a3[8];
    v11 = (_QWORD *)((char *)a1 + v9);
    v12 = (_QWORD *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = (char *)a1 + v10;
    v15 = (char *)a2 + v10;
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v14[24] = v15[24];
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    v17 = a3[9];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = *(_QWORD *)((char *)a2 + v17 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20)
    {
      *(_QWORD *)v18 = *(_QWORD *)v19;
      v18[8] = v19[8];
      *((_QWORD *)v18 + 2) = *((_QWORD *)v19 + 2);
      *((_QWORD *)v18 + 3) = v20;
      v18[32] = v19[32];
      v21 = *((_QWORD *)v19 + 6);
      *((_QWORD *)v18 + 5) = *((_QWORD *)v19 + 5);
      *((_QWORD *)v18 + 6) = v21;
      *((_WORD *)v18 + 28) = *((_WORD *)v19 + 28);
      v23 = *((_QWORD *)v19 + 8);
      v22 = *((_QWORD *)v19 + 9);
      v18[80] = v19[80];
      *((_QWORD *)v18 + 8) = v23;
      *((_QWORD *)v18 + 9) = v22;
      *(_OWORD *)(v18 + 88) = *(_OWORD *)(v19 + 88);
      *((_QWORD *)v18 + 13) = *((_QWORD *)v19 + 13);
      v18[112] = v19[112];
      *((_QWORD *)v18 + 15) = *((_QWORD *)v19 + 15);
      *((_DWORD *)v18 + 32) = *((_DWORD *)v19 + 32);
      v18[132] = v19[132];
      *(_WORD *)(v18 + 133) = *(_WORD *)(v19 + 133);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v25 = *((_OWORD *)v19 + 7);
      *((_OWORD *)v18 + 6) = *((_OWORD *)v19 + 6);
      *((_OWORD *)v18 + 7) = v25;
      *(_QWORD *)(v18 + 127) = *(_QWORD *)(v19 + 127);
      v26 = *((_OWORD *)v19 + 3);
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
      *((_OWORD *)v18 + 3) = v26;
      v27 = *((_OWORD *)v19 + 5);
      *((_OWORD *)v18 + 4) = *((_OWORD *)v19 + 4);
      *((_OWORD *)v18 + 5) = v27;
      v28 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v28;
    }
    v29 = a3[10];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    v32 = *((_QWORD *)v31 + 2);
    if (v32 == 1)
    {
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
    }
    else
    {
      *v30 = *v31;
      *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
      *((_QWORD *)v30 + 2) = v32;
      swift_bridgeObjectRetain();
    }
    v33 = a3[11];
    v34 = a3[12];
    v35 = (_QWORD *)((char *)a1 + v33);
    v36 = (_QWORD *)((char *)a2 + v33);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = (char *)a1 + v34;
    v39 = (char *)a2 + v34;
    *v38 = *v39;
    v40 = *((_QWORD *)v39 + 2);
    *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
    *((_QWORD *)v38 + 2) = v40;
    *((_WORD *)v38 + 12) = *((_WORD *)v39 + 12);
    v41 = *((_QWORD *)v39 + 5);
    *((_QWORD *)v38 + 4) = *((_QWORD *)v39 + 4);
    *((_QWORD *)v38 + 5) = v41;
    v38[48] = v39[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for WebAccessEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 36) + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + *(int *)(a2 + 40) + 16) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WebAccessEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[7];
  v9 = a3[8];
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = a1 + v9;
  v14 = a2 + v9;
  v15 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v15;
  *(_BYTE *)(v13 + 24) = *(_BYTE *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  v16 = a3[9];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19)
  {
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
    *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
    *(_QWORD *)(v17 + 24) = v19;
    *(_BYTE *)(v17 + 32) = *(_BYTE *)(v18 + 32);
    v20 = *(_QWORD *)(v18 + 48);
    *(_QWORD *)(v17 + 40) = *(_QWORD *)(v18 + 40);
    *(_QWORD *)(v17 + 48) = v20;
    *(_WORD *)(v17 + 56) = *(_WORD *)(v18 + 56);
    v22 = *(_QWORD *)(v18 + 64);
    v21 = *(_QWORD *)(v18 + 72);
    *(_BYTE *)(v17 + 80) = *(_BYTE *)(v18 + 80);
    *(_QWORD *)(v17 + 64) = v22;
    *(_QWORD *)(v17 + 72) = v21;
    *(_OWORD *)(v17 + 88) = *(_OWORD *)(v18 + 88);
    *(_QWORD *)(v17 + 104) = *(_QWORD *)(v18 + 104);
    *(_BYTE *)(v17 + 112) = *(_BYTE *)(v18 + 112);
    *(_QWORD *)(v17 + 120) = *(_QWORD *)(v18 + 120);
    *(_DWORD *)(v17 + 128) = *(_DWORD *)(v18 + 128);
    *(_BYTE *)(v17 + 132) = *(_BYTE *)(v18 + 132);
    *(_WORD *)(v17 + 133) = *(_WORD *)(v18 + 133);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v23 = *(_OWORD *)(v18 + 112);
    *(_OWORD *)(v17 + 96) = *(_OWORD *)(v18 + 96);
    *(_OWORD *)(v17 + 112) = v23;
    *(_QWORD *)(v17 + 127) = *(_QWORD *)(v18 + 127);
    v24 = *(_OWORD *)(v18 + 48);
    *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
    *(_OWORD *)(v17 + 48) = v24;
    v25 = *(_OWORD *)(v18 + 80);
    *(_OWORD *)(v17 + 64) = *(_OWORD *)(v18 + 64);
    *(_OWORD *)(v17 + 80) = v25;
    v26 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v26;
  }
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = *(_QWORD *)(v29 + 16);
  if (v30 == 1)
  {
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_QWORD *)(v28 + 16) = *(_QWORD *)(v29 + 16);
  }
  else
  {
    *(_BYTE *)v28 = *(_BYTE *)v29;
    *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
    *(_QWORD *)(v28 + 16) = v30;
    swift_bridgeObjectRetain();
  }
  v31 = a3[11];
  v32 = a3[12];
  v33 = (_QWORD *)(a1 + v31);
  v34 = (_QWORD *)(a2 + v31);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  v36 = a1 + v32;
  v37 = a2 + v32;
  *(_BYTE *)v36 = *(_BYTE *)v37;
  v38 = *(_QWORD *)(v37 + 16);
  *(_QWORD *)(v36 + 8) = *(_QWORD *)(v37 + 8);
  *(_QWORD *)(v36 + 16) = v38;
  *(_WORD *)(v36 + 24) = *(_WORD *)(v37 + 24);
  v39 = *(_QWORD *)(v37 + 40);
  *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
  *(_QWORD *)(v36 + 40) = v39;
  *(_BYTE *)(v36 + 48) = *(_BYTE *)(v37 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WebAccessEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 *v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v7 = a3[7];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[8];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v12 + 16);
  *(_BYTE *)(v11 + 24) = *(_BYTE *)(v12 + 24);
  *(_QWORD *)(v11 + 16) = v13;
  v14 = a3[9];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)(a1 + v14 + 24);
  v18 = *(_QWORD *)(a2 + v14 + 24);
  if (v17)
  {
    if (v18)
    {
      *(_BYTE *)v15 = *(_BYTE *)v16;
      *(_DWORD *)(v15 + 4) = *(_DWORD *)(v16 + 4);
      *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
      *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
      *(_QWORD *)(v15 + 24) = *(_QWORD *)(v16 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v15 + 32) = *(_BYTE *)(v16 + 32);
      *(_QWORD *)(v15 + 40) = *(_QWORD *)(v16 + 40);
      v19 = *(_QWORD *)(v16 + 48);
      *(_BYTE *)(v15 + 56) = *(_BYTE *)(v16 + 56);
      *(_QWORD *)(v15 + 48) = v19;
      *(_BYTE *)(v15 + 57) = *(_BYTE *)(v16 + 57);
      *(_QWORD *)(v15 + 64) = *(_QWORD *)(v16 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v20 = *(_QWORD *)(v16 + 72);
      *(_BYTE *)(v15 + 80) = *(_BYTE *)(v16 + 80);
      *(_QWORD *)(v15 + 72) = v20;
      *(_QWORD *)(v15 + 88) = *(_QWORD *)(v16 + 88);
      *(_QWORD *)(v15 + 96) = *(_QWORD *)(v16 + 96);
      *(_QWORD *)(v15 + 104) = *(_QWORD *)(v16 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v15 + 112) = *(_BYTE *)(v16 + 112);
      *(_QWORD *)(v15 + 120) = *(_QWORD *)(v16 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v15 + 128) = *(_BYTE *)(v16 + 128);
      *(_BYTE *)(v15 + 129) = *(_BYTE *)(v16 + 129);
      *(_BYTE *)(v15 + 130) = *(_BYTE *)(v16 + 130);
      *(_BYTE *)(v15 + 131) = *(_BYTE *)(v16 + 131);
      *(_BYTE *)(v15 + 132) = *(_BYTE *)(v16 + 132);
      *(_BYTE *)(v15 + 133) = *(_BYTE *)(v16 + 133);
      *(_BYTE *)(v15 + 134) = *(_BYTE *)(v16 + 134);
    }
    else
    {
      sub_1D5810518(v15);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      v23 = *(_OWORD *)(v16 + 64);
      v25 = *(_OWORD *)(v16 + 16);
      v24 = *(_OWORD *)(v16 + 32);
      *(_OWORD *)(v15 + 48) = *(_OWORD *)(v16 + 48);
      *(_OWORD *)(v15 + 64) = v23;
      *(_OWORD *)(v15 + 16) = v25;
      *(_OWORD *)(v15 + 32) = v24;
      v27 = *(_OWORD *)(v16 + 96);
      v26 = *(_OWORD *)(v16 + 112);
      v28 = *(_OWORD *)(v16 + 80);
      *(_QWORD *)(v15 + 127) = *(_QWORD *)(v16 + 127);
      *(_OWORD *)(v15 + 96) = v27;
      *(_OWORD *)(v15 + 112) = v26;
      *(_OWORD *)(v15 + 80) = v28;
    }
  }
  else if (v18)
  {
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
    *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
    *(_QWORD *)(v15 + 24) = *(_QWORD *)(v16 + 24);
    *(_BYTE *)(v15 + 32) = *(_BYTE *)(v16 + 32);
    *(_QWORD *)(v15 + 40) = *(_QWORD *)(v16 + 40);
    v21 = *(_QWORD *)(v16 + 48);
    *(_BYTE *)(v15 + 56) = *(_BYTE *)(v16 + 56);
    *(_QWORD *)(v15 + 48) = v21;
    *(_BYTE *)(v15 + 57) = *(_BYTE *)(v16 + 57);
    *(_QWORD *)(v15 + 64) = *(_QWORD *)(v16 + 64);
    v22 = *(_QWORD *)(v16 + 72);
    *(_BYTE *)(v15 + 80) = *(_BYTE *)(v16 + 80);
    *(_QWORD *)(v15 + 72) = v22;
    *(_QWORD *)(v15 + 88) = *(_QWORD *)(v16 + 88);
    *(_QWORD *)(v15 + 96) = *(_QWORD *)(v16 + 96);
    *(_QWORD *)(v15 + 104) = *(_QWORD *)(v16 + 104);
    *(_BYTE *)(v15 + 112) = *(_BYTE *)(v16 + 112);
    *(_QWORD *)(v15 + 120) = *(_QWORD *)(v16 + 120);
    *(_BYTE *)(v15 + 128) = *(_BYTE *)(v16 + 128);
    *(_BYTE *)(v15 + 129) = *(_BYTE *)(v16 + 129);
    *(_BYTE *)(v15 + 130) = *(_BYTE *)(v16 + 130);
    *(_BYTE *)(v15 + 131) = *(_BYTE *)(v16 + 131);
    *(_BYTE *)(v15 + 132) = *(_BYTE *)(v16 + 132);
    *(_BYTE *)(v15 + 133) = *(_BYTE *)(v16 + 133);
    *(_BYTE *)(v15 + 134) = *(_BYTE *)(v16 + 134);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
    v29 = *(_OWORD *)(v16 + 16);
    v30 = *(_OWORD *)(v16 + 32);
    v31 = *(_OWORD *)(v16 + 64);
    *(_OWORD *)(v15 + 48) = *(_OWORD *)(v16 + 48);
    *(_OWORD *)(v15 + 64) = v31;
    *(_OWORD *)(v15 + 16) = v29;
    *(_OWORD *)(v15 + 32) = v30;
    v32 = *(_OWORD *)(v16 + 80);
    v33 = *(_OWORD *)(v16 + 96);
    v34 = *(_OWORD *)(v16 + 112);
    *(_QWORD *)(v15 + 127) = *(_QWORD *)(v16 + 127);
    *(_OWORD *)(v15 + 96) = v33;
    *(_OWORD *)(v15 + 112) = v34;
    *(_OWORD *)(v15 + 80) = v32;
  }
  v35 = a3[10];
  v36 = a1 + v35;
  v37 = (__int128 *)(a2 + v35);
  v38 = *(_QWORD *)(a1 + v35 + 16);
  v39 = *(_QWORD *)(a2 + v35 + 16);
  if (v38 == 1)
  {
    if (v39 == 1)
    {
      v40 = *v37;
      *(_QWORD *)(v36 + 16) = *((_QWORD *)v37 + 2);
      *(_OWORD *)v36 = v40;
    }
    else
    {
      *(_BYTE *)v36 = *(_BYTE *)v37;
      *(_QWORD *)(v36 + 8) = *((_QWORD *)v37 + 1);
      *(_QWORD *)(v36 + 16) = *((_QWORD *)v37 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v39 == 1)
  {
    sub_1D57D9100(v36);
    v41 = *((_QWORD *)v37 + 2);
    *(_OWORD *)v36 = *v37;
    *(_QWORD *)(v36 + 16) = v41;
  }
  else
  {
    *(_BYTE *)v36 = *(_BYTE *)v37;
    *(_QWORD *)(v36 + 8) = *((_QWORD *)v37 + 1);
    *(_QWORD *)(v36 + 16) = *((_QWORD *)v37 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v42 = a3[11];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (_QWORD *)(a2 + v42);
  *v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v45 = a3[12];
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_BYTE *)v46 = *(_BYTE *)(a2 + v45);
  *(_QWORD *)(v46 + 8) = *(_QWORD *)(a2 + v45 + 8);
  *(_QWORD *)(v46 + 16) = *(_QWORD *)(a2 + v45 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v46 + 24) = *(_BYTE *)(v47 + 24);
  *(_BYTE *)(v46 + 25) = *(_BYTE *)(v47 + 25);
  *(_QWORD *)(v46 + 32) = *(_QWORD *)(v47 + 32);
  *(_QWORD *)(v46 + 40) = *(_QWORD *)(v47 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v46 + 48) = *(_BYTE *)(v47 + 48);
  return a1;
}

uint64_t initializeWithTake for WebAccessEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  *v9 = *v10;
  *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)v10 + 9);
  v11 = a3[9];
  v12 = a3[10];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)(v13 + 127) = *(_QWORD *)(v14 + 127);
  v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  v16 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v16;
  v17 = *(_OWORD *)(v14 + 112);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(v14 + 96);
  *(_OWORD *)(v13 + 112) = v17;
  v18 = *(_OWORD *)(v14 + 80);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v14 + 64);
  *(_OWORD *)(v13 + 80) = v18;
  v19 = a1 + v12;
  v20 = a2 + v12;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  v21 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
  *(_BYTE *)(v22 + 48) = *(_BYTE *)(v23 + 48);
  return a1;
}

uint64_t assignWithTake for WebAccessEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[7];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = a3[8];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_QWORD *)(a2 + v13 + 8);
  *(_QWORD *)v14 = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(v14 + 8) = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 24) = *(_BYTE *)(v15 + 24);
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  v17 = a3[9];
  v18 = a1 + v17;
  v19 = a2 + v17;
  if (*(_QWORD *)(a1 + v17 + 24))
  {
    v20 = *(_QWORD *)(v19 + 24);
    if (v20)
    {
      *(_BYTE *)v18 = *(_BYTE *)v19;
      *(_DWORD *)(v18 + 4) = *(_DWORD *)(v19 + 4);
      *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
      *(_QWORD *)(v18 + 16) = *(_QWORD *)(v19 + 16);
      *(_QWORD *)(v18 + 24) = v20;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v18 + 32) = *(_BYTE *)(v19 + 32);
      v21 = *(_QWORD *)(v19 + 48);
      *(_QWORD *)(v18 + 40) = *(_QWORD *)(v19 + 40);
      *(_QWORD *)(v18 + 48) = v21;
      *(_BYTE *)(v18 + 56) = *(_BYTE *)(v19 + 56);
      *(_BYTE *)(v18 + 57) = *(_BYTE *)(v19 + 57);
      *(_QWORD *)(v18 + 64) = *(_QWORD *)(v19 + 64);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 72) = *(_QWORD *)(v19 + 72);
      *(_BYTE *)(v18 + 80) = *(_BYTE *)(v19 + 80);
      *(_OWORD *)(v18 + 88) = *(_OWORD *)(v19 + 88);
      *(_QWORD *)(v18 + 104) = *(_QWORD *)(v19 + 104);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v18 + 112) = *(_BYTE *)(v19 + 112);
      *(_QWORD *)(v18 + 120) = *(_QWORD *)(v19 + 120);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v18 + 128) = *(_BYTE *)(v19 + 128);
      *(_BYTE *)(v18 + 129) = *(_BYTE *)(v19 + 129);
      *(_BYTE *)(v18 + 130) = *(_BYTE *)(v19 + 130);
      *(_BYTE *)(v18 + 131) = *(_BYTE *)(v19 + 131);
      *(_BYTE *)(v18 + 132) = *(_BYTE *)(v19 + 132);
      *(_BYTE *)(v18 + 133) = *(_BYTE *)(v19 + 133);
      *(_BYTE *)(v18 + 134) = *(_BYTE *)(v19 + 134);
      goto LABEL_6;
    }
    sub_1D5810518(v18);
  }
  v22 = *(_OWORD *)(v19 + 112);
  *(_OWORD *)(v18 + 96) = *(_OWORD *)(v19 + 96);
  *(_OWORD *)(v18 + 112) = v22;
  *(_QWORD *)(v18 + 127) = *(_QWORD *)(v19 + 127);
  v23 = *(_OWORD *)(v19 + 48);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  *(_OWORD *)(v18 + 48) = v23;
  v24 = *(_OWORD *)(v19 + 80);
  *(_OWORD *)(v18 + 64) = *(_OWORD *)(v19 + 64);
  *(_OWORD *)(v18 + 80) = v24;
  v25 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v25;
LABEL_6:
  v26 = a3[10];
  v27 = a1 + v26;
  v28 = a2 + v26;
  if (*(_QWORD *)(a1 + v26 + 16) != 1)
  {
    v29 = *(_QWORD *)(v28 + 16);
    if (v29 != 1)
    {
      *(_BYTE *)v27 = *(_BYTE *)v28;
      *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
      *(_QWORD *)(v27 + 16) = v29;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D57D9100(v27);
  }
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
LABEL_11:
  v30 = a3[11];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (uint64_t *)(a2 + v30);
  v34 = *v32;
  v33 = v32[1];
  *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  *(_BYTE *)v36 = *(_BYTE *)v37;
  v38 = *(_QWORD *)(v37 + 16);
  *(_QWORD *)(v36 + 8) = *(_QWORD *)(v37 + 8);
  *(_QWORD *)(v36 + 16) = v38;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v36 + 24) = *(_BYTE *)(v37 + 24);
  *(_BYTE *)(v36 + 25) = *(_BYTE *)(v37 + 25);
  v39 = *(_QWORD *)(v37 + 40);
  *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
  *(_QWORD *)(v36 + 40) = v39;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v36 + 48) = *(_BYTE *)(v37 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for WebAccessEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A4D89C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for WebAccessEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A4D934(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = a2;
  return result;
}

uint64_t sub_1D5A4D9B0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WebAccessEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1D5A4DAAC + 4 * byte_1D5AE307E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1D5A4DAE0 + 4 * byte_1D5AE3079[v4]))();
}

uint64_t sub_1D5A4DAE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A4DAE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A4DAF0);
  return result;
}

uint64_t sub_1D5A4DAFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A4DB04);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1D5A4DB08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A4DB10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WebAccessEvent.Model.CodingKeys()
{
  return &type metadata for WebAccessEvent.Model.CodingKeys;
}

unint64_t sub_1D5A4DB30()
{
  unint64_t result;

  result = qword_1EFF51978;
  if (!qword_1EFF51978)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE32FC, &type metadata for WebAccessEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51978);
  }
  return result;
}

unint64_t sub_1D5A4DB78()
{
  unint64_t result;

  result = qword_1EFF51980;
  if (!qword_1EFF51980)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE326C, &type metadata for WebAccessEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51980);
  }
  return result;
}

unint64_t sub_1D5A4DBC0()
{
  unint64_t result;

  result = qword_1EFF51988;
  if (!qword_1EFF51988)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE3294, &type metadata for WebAccessEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51988);
  }
  return result;
}

uint64_t sub_1D5A4DC04(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6974634172657375 && a2 == 0xEE00617461446E6FLL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AF2370 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x61746144676174 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AED700 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

void SessionObserver.subscriptionController(_:didAddTags:changeTags:moveTags:removeTags:subscriptionType:)(void *a1)
{
  uint64_t v1;
  id v3;

  if (a1)
  {
    v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                               + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_cloudContext), sel_shortcutList));
    sub_1D57BE8B8(a1, v3);

    sub_1D57BE2DC(a1);
    sub_1D57BDDE4(a1);
    SessionObserver.pushNotificationSettingsData()();
  }
  else
  {
    __break(1u);
  }
}

void SessionObserver.shortcutList(_:didAdd:changedShortcuts:removedShortcuts:)(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;

  v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_cloudContext), sel_subscriptionController);
  if (v3)
  {
    v4 = v3;
    sub_1D57BE8B8(v3, a1);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D5A4E29C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9D1588, MEMORY[0x1E0CF8078]);
}

uint64_t static AppLaunchTakeoverTriggerEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9D13C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9D1588, a1);
}

uint64_t sub_1D5A4E2DC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9D15A0, MEMORY[0x1E0CF8380]);
}

uint64_t static AppLaunchTakeoverTriggerEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(qword_1ED9D13D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9D15A0, a1);
}

uint64_t AppLaunchTakeoverTriggerEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t AppLaunchTakeoverTriggerEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AppLaunchTakeoverTriggerEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AppLaunchTakeoverTriggerEvent.altData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppLaunchTakeoverTriggerEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9D1448, (void (*)(void))sub_1D5A2AF20, (void (*)(void))sub_1D5A2AF68);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AppLaunchTakeoverTriggerEvent(uint64_t a1)
{
  return sub_1D579E448(a1, (uint64_t *)&unk_1ED9D15B8);
}

uint64_t AppLaunchTakeoverTriggerEvent.altData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppLaunchTakeoverTriggerEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9D1448, (void (*)(void))sub_1D5A2AF20, (void (*)(void))sub_1D5A2AF68);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppLaunchTakeoverTriggerEvent.altData.modify())(_QWORD)
{
  type metadata accessor for AppLaunchTakeoverTriggerEvent(0);
  return nullsub_1;
}

uint64_t AppLaunchTakeoverTriggerEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppLaunchTakeoverTriggerEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppLaunchTakeoverTriggerEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppLaunchTakeoverTriggerEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppLaunchTakeoverTriggerEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for AppLaunchTakeoverTriggerEvent(0);
  return nullsub_1;
}

uint64_t AppLaunchTakeoverTriggerEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = type metadata accessor for AppLaunchTakeoverTriggerEvent(0);
  v5 = a1 + *(int *)(v4 + 20);
  sub_1D579E208(0, &qword_1ED9D1448, (void (*)(void))sub_1D5A2AF20, (void (*)(void))sub_1D5A2AF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + *(int *)(v4 + 24);
  v8 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
}

uint64_t AppLaunchTakeoverTriggerEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AppLaunchTakeoverTriggerEvent.Model.altData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for AppLaunchTakeoverTriggerEvent.Model(0) + 20);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AppLaunchTakeoverTriggerEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF51AC0);
}

uint64_t AppLaunchTakeoverTriggerEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = v1 + *(int *)(type metadata accessor for AppLaunchTakeoverTriggerEvent.Model(0) + 24);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(v3 + 48);
  return sub_1D58D9DD8(v4, v5, v6);
}

__n128 AppLaunchTakeoverTriggerEvent.Model.init(eventData:altData:userBundleSubscriptionContextData:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 result;
  __n128 v17;
  __int128 v18;

  v6 = *a2;
  v7 = *((_QWORD *)a2 + 1);
  v8 = *((_QWORD *)a2 + 2);
  v17 = (__n128)a3[1];
  v18 = *a3;
  v9 = *((_QWORD *)a3 + 4);
  v10 = *((_QWORD *)a3 + 5);
  v11 = *((_BYTE *)a3 + 48);
  v12 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a4, a1, v12);
  v13 = type metadata accessor for AppLaunchTakeoverTriggerEvent.Model(0);
  v14 = a4 + *(int *)(v13 + 20);
  *(_BYTE *)v14 = v6;
  *(_QWORD *)(v14 + 8) = v7;
  *(_QWORD *)(v14 + 16) = v8;
  v15 = a4 + *(int *)(v13 + 24);
  result = v17;
  *(_OWORD *)v15 = v18;
  *(__n128 *)(v15 + 16) = v17;
  *(_QWORD *)(v15 + 32) = v9;
  *(_QWORD *)(v15 + 40) = v10;
  *(_BYTE *)(v15 + 48) = v11;
  return result;
}

uint64_t sub_1D5A4E7C0()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x61746144746C61;
  if (*v0 != 1)
    v1 = 0xD000000000000021;
  if (*v0)
    return v1;
  else
    return 0x746144746E657665;
}

uint64_t sub_1D5A4E824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A500F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A4E848()
{
  sub_1D5A4EA68();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A4E870()
{
  sub_1D5A4EA68();
  return sub_1D5AAEEE0();
}

uint64_t AppLaunchTakeoverTriggerEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  _BYTE v16[32];
  __int128 v17;
  char v18;
  char v19;

  v3 = v1;
  sub_1D5A4EDB4(0, &qword_1EFF51A50, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v16[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A4EA68();
  sub_1D5AAEEC8();
  v16[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = type metadata accessor for AppLaunchTakeoverTriggerEvent.Model(0);
    v11 = v3 + *(int *)(v10 + 20);
    v16[0] = *(_BYTE *)v11;
    *(_OWORD *)&v16[8] = *(_OWORD *)(v11 + 8);
    v19 = 1;
    sub_1D5A2AF68();
    sub_1D5AAED6C();
    v12 = v3 + *(int *)(v10 + 24);
    v13 = *(_BYTE *)(v12 + 48);
    v14 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)v16 = *(_OWORD *)v12;
    *(_OWORD *)&v16[16] = v14;
    v17 = *(_OWORD *)(v12 + 32);
    v18 = v13;
    v19 = 2;
    sub_1D57C6B3C();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A4EA68()
{
  unint64_t result;

  result = qword_1EFF51A58;
  if (!qword_1EFF51A58)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE356C, &type metadata for AppLaunchTakeoverTriggerEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51A58);
  }
  return result;
}

uint64_t AppLaunchTakeoverTriggerEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char v17;
  char *v18;
  __int128 v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  _BYTE v27[32];
  __int128 v28;
  char v29;
  char v30;

  v21 = a2;
  v22 = sub_1D5AADF98();
  v3 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A4EDB4(0, &qword_1EFF51A60, MEMORY[0x1E0DED048]);
  v25 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - v7;
  v9 = type metadata accessor for AppLaunchTakeoverTriggerEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A4EA68();
  v23 = v8;
  v12 = (uint64_t)v26;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v26 = a1;
  v27[0] = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v15 = v22;
  v14 = v23;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v11, v24, v15);
  v30 = 1;
  sub_1D5A2AF20();
  sub_1D5AAECD0();
  v16 = &v11[*(int *)(v9 + 20)];
  *v16 = v27[0];
  *(_OWORD *)(v16 + 8) = *(_OWORD *)&v27[8];
  v30 = 2;
  sub_1D57C6AF8();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v25);
  v17 = v29;
  v18 = &v11[*(int *)(v9 + 24)];
  v19 = *(_OWORD *)&v27[16];
  *(_OWORD *)v18 = *(_OWORD *)v27;
  *((_OWORD *)v18 + 1) = v19;
  *((_OWORD *)v18 + 2) = v28;
  v18[48] = v17;
  sub_1D5A4EE10((uint64_t)v11, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return sub_1D5A4EE54((uint64_t)v11);
}

void sub_1D5A4EDB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A4EA68();
    v7 = a3(a1, &type metadata for AppLaunchTakeoverTriggerEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A4EE10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppLaunchTakeoverTriggerEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A4EE54(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AppLaunchTakeoverTriggerEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A4EE90@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AppLaunchTakeoverTriggerEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A4EEA4(_QWORD *a1)
{
  return AppLaunchTakeoverTriggerEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A4EEB8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9D13C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9D1588, a1);
}

uint64_t sub_1D5A4EEDC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(qword_1ED9D13D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9D15A0, a1);
}

uint64_t sub_1D5A4EF00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1D579E208(0, &qword_1ED9D1448, (void (*)(void))sub_1D5A2AF20, (void (*)(void))sub_1D5A2AF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + *(int *)(a1 + 24);
  v9 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
}

uint64_t *initializeBufferWithCopyOfBuffer for AppLaunchTakeoverTriggerEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9D1448, (void (*)(void))sub_1D5A2AF20, (void (*)(void))sub_1D5A2AF68);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for AppLaunchTakeoverTriggerEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1D579E208(0, &qword_1ED9D1448, (void (*)(void))sub_1D5A2AF20, (void (*)(void))sub_1D5A2AF68);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for AppLaunchTakeoverTriggerEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9D1448, (void (*)(void))sub_1D5A2AF20, (void (*)(void))sub_1D5A2AF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for AppLaunchTakeoverTriggerEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9D1448, (void (*)(void))sub_1D5A2AF20, (void (*)(void))sub_1D5A2AF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for AppLaunchTakeoverTriggerEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9D1448, (void (*)(void))sub_1D5A2AF20, (void (*)(void))sub_1D5A2AF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for AppLaunchTakeoverTriggerEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9D1448, (void (*)(void))sub_1D5A2AF20, (void (*)(void))sub_1D5A2AF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppLaunchTakeoverTriggerEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A4F59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9D1448, (void (*)(void))sub_1D5A2AF20, (void (*)(void))sub_1D5A2AF68);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AppLaunchTakeoverTriggerEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A4F680(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9D1448, (void (*)(void))sub_1D5A2AF20, (void (*)(void))sub_1D5A2AF68);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5A4F760()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9D1448, (void (*)(void))sub_1D5A2AF20, (void (*)(void))sub_1D5A2AF68);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for AppLaunchTakeoverTriggerEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = *(uint64_t *)((char *)a2 + v9 + 16);
    swift_bridgeObjectRetain();
    if (v15 == 1)
    {
      v16 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v16;
      *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
      v13[48] = v14[48];
    }
    else
    {
      *v13 = *v14;
      *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
      *((_QWORD *)v13 + 2) = v15;
      *((_WORD *)v13 + 12) = *((_WORD *)v14 + 12);
      v18 = *((_QWORD *)v14 + 5);
      *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
      *((_QWORD *)v13 + 5) = v18;
      v13[48] = v14[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t destroy for AppLaunchTakeoverTriggerEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + *(int *)(a2 + 24) + 16);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for AppLaunchTakeoverTriggerEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_QWORD *)(a2 + v8 + 16);
  swift_bridgeObjectRetain();
  if (v14 == 1)
  {
    v15 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v15;
    *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
    *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  }
  else
  {
    *(_BYTE *)v12 = *(_BYTE *)v13;
    *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
    *(_QWORD *)(v12 + 16) = v14;
    *(_WORD *)(v12 + 24) = *(_WORD *)(v13 + 24);
    v16 = *(_QWORD *)(v13 + 40);
    *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
    *(_QWORD *)(v12 + 40) = v16;
    *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for AppLaunchTakeoverTriggerEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = (__int128 *)(a2 + v10);
  v13 = *(_QWORD *)(a1 + v10 + 16);
  v14 = *((_QWORD *)v12 + 2);
  if (v13 == 1)
  {
    if (v14 == 1)
    {
      v15 = *v12;
      v16 = v12[1];
      v17 = v12[2];
      *(_BYTE *)(v11 + 48) = *((_BYTE *)v12 + 48);
      *(_OWORD *)(v11 + 16) = v16;
      *(_OWORD *)(v11 + 32) = v17;
      *(_OWORD *)v11 = v15;
    }
    else
    {
      *(_BYTE *)v11 = *(_BYTE *)v12;
      *(_QWORD *)(v11 + 8) = *((_QWORD *)v12 + 1);
      *(_QWORD *)(v11 + 16) = *((_QWORD *)v12 + 2);
      *(_BYTE *)(v11 + 24) = *((_BYTE *)v12 + 24);
      *(_BYTE *)(v11 + 25) = *((_BYTE *)v12 + 25);
      *(_QWORD *)(v11 + 32) = *((_QWORD *)v12 + 4);
      *(_QWORD *)(v11 + 40) = *((_QWORD *)v12 + 5);
      *(_BYTE *)(v11 + 48) = *((_BYTE *)v12 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v14 == 1)
  {
    sub_1D5971944(v11);
    v19 = v12[1];
    v18 = v12[2];
    v20 = *v12;
    *(_BYTE *)(v11 + 48) = *((_BYTE *)v12 + 48);
    *(_OWORD *)(v11 + 16) = v19;
    *(_OWORD *)(v11 + 32) = v18;
    *(_OWORD *)v11 = v20;
  }
  else
  {
    *(_BYTE *)v11 = *(_BYTE *)v12;
    *(_QWORD *)(v11 + 8) = *((_QWORD *)v12 + 1);
    *(_QWORD *)(v11 + 16) = *((_QWORD *)v12 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v11 + 24) = *((_BYTE *)v12 + 24);
    *(_BYTE *)(v11 + 25) = *((_BYTE *)v12 + 25);
    *(_QWORD *)(v11 + 32) = *((_QWORD *)v12 + 4);
    *(_QWORD *)(v11 + 40) = *((_QWORD *)v12 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v11 + 48) = *((_BYTE *)v12 + 48);
  }
  return a1;
}

uint64_t initializeWithTake for AppLaunchTakeoverTriggerEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  v11 = a1 + v8;
  v12 = a2 + v8;
  v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v12 + 32);
  *(_BYTE *)(v11 + 48) = *(_BYTE *)(v12 + 48);
  return a1;
}

uint64_t assignWithTake for AppLaunchTakeoverTriggerEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = v11;
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  if (*(_QWORD *)(a1 + v12 + 16) != 1)
  {
    v15 = *(_QWORD *)(v14 + 16);
    if (v15 != 1)
    {
      *(_BYTE *)v13 = *(_BYTE *)v14;
      *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
      *(_QWORD *)(v13 + 16) = v15;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v13 + 24) = *(_BYTE *)(v14 + 24);
      *(_BYTE *)(v13 + 25) = *(_BYTE *)(v14 + 25);
      v17 = *(_QWORD *)(v14 + 40);
      *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
      *(_QWORD *)(v13 + 40) = v17;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D5971944(v13);
  }
  v16 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v16;
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
LABEL_6:
  *(_BYTE *)(v13 + 48) = *(_BYTE *)(v14 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppLaunchTakeoverTriggerEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A4FDC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for AppLaunchTakeoverTriggerEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A4FE5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 16) = a2;
  return result;
}

uint64_t sub_1D5A4FED8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AppLaunchTakeoverTriggerEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5A4FFA0 + 4 * byte_1D5AE3385[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5A4FFD4 + 4 * byte_1D5AE3380[v4]))();
}

uint64_t sub_1D5A4FFD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A4FFDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A4FFE4);
  return result;
}

uint64_t sub_1D5A4FFF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A4FFF8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5A4FFFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A50004(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppLaunchTakeoverTriggerEvent.Model.CodingKeys()
{
  return &type metadata for AppLaunchTakeoverTriggerEvent.Model.CodingKeys;
}

unint64_t sub_1D5A50024()
{
  unint64_t result;

  result = qword_1EFF51B00;
  if (!qword_1EFF51B00)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE3544, &type metadata for AppLaunchTakeoverTriggerEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51B00);
  }
  return result;
}

unint64_t sub_1D5A5006C()
{
  unint64_t result;

  result = qword_1EFF51B08;
  if (!qword_1EFF51B08)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE34B4, &type metadata for AppLaunchTakeoverTriggerEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51B08);
  }
  return result;
}

unint64_t sub_1D5A500B4()
{
  unint64_t result;

  result = qword_1EFF51B10;
  if (!qword_1EFF51B10)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE34DC, &type metadata for AppLaunchTakeoverTriggerEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51B10);
  }
  return result;
}

uint64_t sub_1D5A500F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61746144746C61 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

NewsAnalytics::SubscriptionResultType_optional __swiftcall SubscriptionResultType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::SubscriptionResultType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SubscriptionResultType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A502DC + 4 * byte_1D5AE35C0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5A502DC()
{
  return 0x73736563637573;
}

uint64_t sub_1D5A502F0()
{
  return 0x6572756C696166;
}

uint64_t sub_1D5A50304()
{
  return 0x6C65636E6163;
}

unint64_t sub_1D5A50318()
{
  return 0xD000000000000015;
}

void sub_1D5A50334(char *a1)
{
  sub_1D5A37C88(*a1);
}

unint64_t sub_1D5A50344()
{
  unint64_t result;

  result = qword_1EFF51B18;
  if (!qword_1EFF51B18)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscriptionResultType, &type metadata for SubscriptionResultType);
    atomic_store(result, (unint64_t *)&qword_1EFF51B18);
  }
  return result;
}

void sub_1D5A50388()
{
  char *v0;

  sub_1D5A812F4(*v0);
}

void sub_1D5A50390()
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A503CC()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5A50438(uint64_t a1)
{
  char *v1;

  sub_1D5AA9A60(a1, *v1);
}

NewsAnalytics::SubscriptionResultType_optional sub_1D5A50440(Swift::String *a1)
{
  return SubscriptionResultType.init(rawValue:)(*a1);
}

uint64_t sub_1D5A5044C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D5A5047C + 4 * byte_1D5AE35CA[*v0]))();
}

void sub_1D5A5047C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x73736563637573;
  a1[1] = v1;
}

void sub_1D5A50494(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6572756C696166;
  a1[1] = v1;
}

void sub_1D5A504AC(_QWORD *a1@<X8>)
{
  *a1 = 0x6C65636E6163;
  a1[1] = 0xE600000000000000;
}

void sub_1D5A504C4(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x80000001D5AEC3E0;
}

uint64_t sub_1D5A504E4()
{
  sub_1D5A50658();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A50540()
{
  sub_1D5A50658();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for SubscriptionResultType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D5A505D8 + 4 * byte_1D5AE35D4[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5A5060C + 4 * byte_1D5AE35CF[v4]))();
}

uint64_t sub_1D5A5060C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A50614(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A5061CLL);
  return result;
}

uint64_t sub_1D5A50628(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A50630);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5A50634(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A5063C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionResultType()
{
  return &type metadata for SubscriptionResultType;
}

unint64_t sub_1D5A50658()
{
  unint64_t result;

  result = qword_1EFF51B20;
  if (!qword_1EFF51B20)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscriptionResultType, &type metadata for SubscriptionResultType);
    atomic_store(result, (unint64_t *)&qword_1EFF51B20);
  }
  return result;
}

uint64_t LiveActivityData.liveActivityID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LiveActivityData.liveActivityID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*LiveActivityData.liveActivityID.modify())()
{
  return nullsub_1;
}

NewsAnalytics::LiveActivityData __swiftcall LiveActivityData.init(liveActivityID:)(NewsAnalytics::LiveActivityData liveActivityID)
{
  NewsAnalytics::LiveActivityData *v1;

  *v1 = liveActivityID;
  return liveActivityID;
}

uint64_t sub_1D5A50714()
{
  return 0x697463416576696CLL;
}

uint64_t sub_1D5A50738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x697463416576696CLL && a2 == 0xEE00444979746976)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5A507F0()
{
  sub_1D5A50934();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A50818()
{
  sub_1D5A50934();
  return sub_1D5AAEEE0();
}

uint64_t LiveActivityData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5A50A9C(0, &qword_1EFF51B28, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A50934();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D5A50934()
{
  unint64_t result;

  result = qword_1EFF51B30;
  if (!qword_1EFF51B30)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE3874, &type metadata for LiveActivityData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51B30);
  }
  return result;
}

uint64_t LiveActivityData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D5A50A9C(0, &qword_1EFF51B38, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A50934();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECA0();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A50A9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A50934();
    v7 = a3(a1, &type metadata for LiveActivityData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A50B00@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return LiveActivityData.init(from:)(a1, a2);
}

uint64_t sub_1D5A50B14(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5A50A9C(0, &qword_1EFF51B28, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A50934();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for LiveActivityData()
{
  return &type metadata for LiveActivityData;
}

uint64_t storeEnumTagSinglePayload for LiveActivityData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5A50C58 + 4 * byte_1D5AE3700[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5A50C78 + 4 * byte_1D5AE3705[v4]))();
}

_BYTE *sub_1D5A50C58(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5A50C78(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A50C80(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A50C88(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A50C90(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A50C98(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityData.CodingKeys()
{
  return &type metadata for LiveActivityData.CodingKeys;
}

unint64_t sub_1D5A50CB8()
{
  unint64_t result;

  result = qword_1EFF51B40;
  if (!qword_1EFF51B40)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE384C, &type metadata for LiveActivityData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51B40);
  }
  return result;
}

unint64_t sub_1D5A50D00()
{
  unint64_t result;

  result = qword_1EFF51B48;
  if (!qword_1EFF51B48)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE37BC, &type metadata for LiveActivityData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51B48);
  }
  return result;
}

unint64_t sub_1D5A50D48()
{
  unint64_t result;

  result = qword_1EFF51B50;
  if (!qword_1EFF51B50)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE37E4, &type metadata for LiveActivityData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51B50);
  }
  return result;
}

uint64_t sub_1D5A50D8C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9D1240, MEMORY[0x1E0CF8078]);
}

uint64_t static WebEmbedLoadFailureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9D1258, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9D1240, a1);
}

uint64_t sub_1D5A50DCC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9D1260, MEMORY[0x1E0CF8380]);
}

uint64_t static WebEmbedLoadFailureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9D1280, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9D1260, a1);
}

uint64_t WebEmbedLoadFailureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t WebEmbedLoadFailureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*WebEmbedLoadFailureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t WebEmbedLoadFailureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for WebEmbedLoadFailureEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for WebEmbedLoadFailureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9D1288);
}

uint64_t WebEmbedLoadFailureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadFailureEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedLoadFailureEvent.timedData.modify())(_QWORD)
{
  type metadata accessor for WebEmbedLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedLoadFailureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadFailureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebEmbedLoadFailureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadFailureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedLoadFailureEvent.groupData.modify())(_QWORD)
{
  type metadata accessor for WebEmbedLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedLoadFailureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadFailureEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebEmbedLoadFailureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadFailureEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedLoadFailureEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for WebEmbedLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedLoadFailureEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadFailureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebEmbedLoadFailureEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadFailureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedLoadFailureEvent.feedPositionData.modify())(_QWORD)
{
  type metadata accessor for WebEmbedLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedLoadFailureEvent.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadFailureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebEmbedLoadFailureEvent.inGroupPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadFailureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedLoadFailureEvent.inGroupPositionData.modify())(_QWORD)
{
  type metadata accessor for WebEmbedLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedLoadFailureEvent.webEmbedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadFailureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebEmbedLoadFailureEvent.webEmbedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadFailureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedLoadFailureEvent.webEmbedData.modify())(_QWORD)
{
  type metadata accessor for WebEmbedLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedLoadFailureEvent.errorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadFailureEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebEmbedLoadFailureEvent.errorData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadFailureEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedLoadFailureEvent.errorData.modify())(_QWORD)
{
  type metadata accessor for WebEmbedLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedLoadFailureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *FailureEvent;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  FailureEvent = (int *)type metadata accessor for WebEmbedLoadFailureEvent(0);
  v5 = a1 + FailureEvent[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + FailureEvent[6];
  v8 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = a1 + FailureEvent[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v8, v11);
  v12 = a1 + FailureEvent[8];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v8, v13);
  v14 = a1 + FailureEvent[9];
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v8, v15);
  v16 = a1 + FailureEvent[10];
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + FailureEvent[11];
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
}

uint64_t WebEmbedLoadFailureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t WebEmbedLoadFailureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for WebEmbedLoadFailureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for WebEmbedLoadFailureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF51BC8);
}

_QWORD *WebEmbedLoadFailureEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t Failure;
  _QWORD v5[17];

  Failure = type metadata accessor for WebEmbedLoadFailureEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(Failure + 24), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t WebEmbedLoadFailureEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for WebEmbedLoadFailureEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t WebEmbedLoadFailureEvent.Model.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for WebEmbedLoadFailureEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 32));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t WebEmbedLoadFailureEvent.Model.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for WebEmbedLoadFailureEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 36));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t WebEmbedLoadFailureEvent.Model.webEmbedData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for WebEmbedLoadFailureEvent.Model(0) + 40));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t WebEmbedLoadFailureEvent.Model.errorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedLoadFailureEvent.Model(0) + 44);
  v5 = *(_QWORD *)(v3 + 24);
  v4 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 WebEmbedLoadFailureEvent.Model.init(eventData:timedData:groupData:feedData:feedPositionData:inGroupPositionData:webEmbedData:errorData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, int *a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, __int128 *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v17;
  int v18;
  uint64_t v19;
  int *Failure;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  __n128 result;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  __int128 v34;
  _BYTE v35[144];

  sub_1D57DD5B8(a3, (uint64_t)v35);
  v29 = *a4;
  v17 = *((_QWORD *)a4 + 2);
  v18 = *a5;
  LOBYTE(a5) = *((_BYTE *)a5 + 4);
  LODWORD(a4) = *(_DWORD *)a6;
  LOBYTE(a6) = *(_BYTE *)(a6 + 4);
  v30 = a7[1];
  v31 = *a7;
  v33 = (__n128)a8[1];
  v34 = *a8;
  v32 = *((_QWORD *)a8 + 4);
  v19 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a9, a1, v19);
  Failure = (int *)type metadata accessor for WebEmbedLoadFailureEvent.Model(0);
  v21 = a9 + Failure[5];
  v22 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, a2, v22);
  sub_1D57DD5B8((uint64_t)v35, a9 + Failure[6]);
  v23 = a9 + Failure[7];
  *(_OWORD *)v23 = v29;
  *(_QWORD *)(v23 + 16) = v17;
  v24 = a9 + Failure[8];
  *(_DWORD *)v24 = v18;
  *(_BYTE *)(v24 + 4) = (_BYTE)a5;
  v25 = a9 + Failure[9];
  *(_DWORD *)v25 = (_DWORD)a4;
  *(_BYTE *)(v25 + 4) = a6;
  v26 = (_QWORD *)(a9 + Failure[10]);
  *v26 = v31;
  v26[1] = v30;
  v27 = a9 + Failure[11];
  result = v33;
  *(_OWORD *)v27 = v34;
  *(__n128 *)(v27 + 16) = v33;
  *(_QWORD *)(v27 + 32) = v32;
  return result;
}

uint64_t sub_1D5A51A48(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A51A80 + 4 * byte_1D5AE38D0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5A51A80()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D5A51A94()
{
  return 0x74614470756F7267;
}

uint64_t sub_1D5A51AA8()
{
  return 0x6174614464656566;
}

unint64_t sub_1D5A51AC0()
{
  return 0xD000000000000010;
}

unint64_t sub_1D5A51ADC()
{
  return 0xD000000000000013;
}

uint64_t sub_1D5A51AFC()
{
  return 0x6465626D45626577;
}

uint64_t sub_1D5A51B1C()
{
  return 0x746144726F727265;
}

uint64_t sub_1D5A51B30()
{
  unsigned __int8 *v0;

  return sub_1D5A51A48(*v0);
}

uint64_t sub_1D5A51B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A54E54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A51B5C()
{
  sub_1D5A51F24();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A51B84()
{
  sub_1D5A51F24();
  return sub_1D5AAEEE0();
}

uint64_t WebEmbedLoadFailureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *Failure;
  __int128 *v11;
  uint64_t v12;
  int *v13;
  int v14;
  int *v15;
  int v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _BYTE v27[144];
  char v28;
  char v29;

  v3 = v1;
  sub_1D5A52560(0, &qword_1EFF51B58, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A51F24();
  sub_1D5AAEEC8();
  v27[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    Failure = (int *)type metadata accessor for WebEmbedLoadFailureEvent.Model(0);
    v29 = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    sub_1D57DD5B8(v3 + Failure[6], (uint64_t)v27);
    sub_1D57DD5B8((uint64_t)v27, (uint64_t)&v24);
    v28 = 2;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v11 = (__int128 *)(v3 + Failure[7]);
    v12 = *((_QWORD *)v11 + 2);
    v24 = *v11;
    *(_QWORD *)&v25 = v12;
    v28 = 3;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v13 = (int *)(v3 + Failure[8]);
    v14 = *v13;
    LOBYTE(v13) = *((_BYTE *)v13 + 4);
    LODWORD(v24) = v14;
    BYTE4(v24) = (_BYTE)v13;
    v28 = 4;
    sub_1D57C9C4C();
    sub_1D5AAED18();
    v15 = (int *)(v3 + Failure[9]);
    v16 = *v15;
    LOBYTE(v15) = *((_BYTE *)v15 + 4);
    LODWORD(v24) = v16;
    BYTE4(v24) = (_BYTE)v15;
    v28 = 5;
    sub_1D57C8B9C();
    sub_1D5AAED18();
    v17 = (uint64_t *)(v3 + Failure[10]);
    v19 = *v17;
    v18 = v17[1];
    *(_QWORD *)&v24 = v19;
    *((_QWORD *)&v24 + 1) = v18;
    v28 = 6;
    sub_1D57F1894();
    sub_1D5AAED6C();
    v20 = (__int128 *)(v3 + Failure[11]);
    v21 = *((_QWORD *)v20 + 4);
    v22 = v20[1];
    v24 = *v20;
    v25 = v22;
    v26 = v21;
    v28 = 7;
    sub_1D57C6128();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A51F24()
{
  unint64_t result;

  result = qword_1EFF51B60;
  if (!qword_1EFF51B60)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE3B4C, &type metadata for WebEmbedLoadFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51B60);
  }
  return result;
}

uint64_t WebEmbedLoadFailureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t Failure;
  char *v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  _BYTE v51[136];
  char v52[144];
  char v53;
  char v54;

  v37 = a2;
  v3 = sub_1D5AADFB0();
  v39 = *(_QWORD *)(v3 - 8);
  v40 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D5AADF98();
  v41 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A52560(0, &qword_1EFF51B68, MEMORY[0x1E0DED048]);
  v43 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v36 - v11;
  Failure = type metadata accessor for WebEmbedLoadFailureEvent.Model(0);
  MEMORY[0x1E0C80A78](Failure);
  v46 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v44 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1D5A51F24();
  v42 = v12;
  v15 = v47;
  sub_1D5AAEEB0();
  v38 = v6;
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  v16 = v5;
  v17 = v10;
  v52[0] = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v18 = (uint64_t)v46;
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v46, v8, v6);
  v52[0] = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v19 = v16;
  v20 = v40;
  sub_1D5AAECD0();
  v21 = (int *)Failure;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v18 + *(int *)(Failure + 20), v19, v20);
  v54 = 2;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  v22 = v17;
  sub_1D57DD5B8((uint64_t)v52, (uint64_t)v51);
  sub_1D57DD5B8((uint64_t)v51, v18 + v21[6]);
  v53 = 3;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v23 = (uint64_t)v44;
  v24 = v49;
  v25 = v18 + v21[7];
  *(_OWORD *)v25 = v48;
  *(_QWORD *)(v25 + 16) = v24;
  v53 = 4;
  sub_1D57C9C08();
  sub_1D5AAEC7C();
  v26 = BYTE4(v48);
  v27 = v18 + v21[8];
  *(_DWORD *)v27 = v48;
  *(_BYTE *)(v27 + 4) = v26;
  v53 = 5;
  sub_1D57C8B58();
  sub_1D5AAEC7C();
  v28 = BYTE4(v48);
  v29 = v18 + v21[9];
  *(_DWORD *)v29 = v48;
  *(_BYTE *)(v29 + 4) = v28;
  v53 = 6;
  sub_1D57F1850();
  sub_1D5AAECD0();
  v30 = *((_QWORD *)&v48 + 1);
  v31 = (_QWORD *)(v18 + v21[10]);
  *v31 = v48;
  v31[1] = v30;
  v53 = 7;
  sub_1D57C60E4();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v42, v43);
  v32 = v50;
  v33 = v18 + v21[11];
  v34 = v49;
  *(_OWORD *)v33 = v48;
  *(_OWORD *)(v33 + 16) = v34;
  *(_QWORD *)(v33 + 32) = v32;
  sub_1D5A525BC(v18, v37);
  __swift_destroy_boxed_opaque_existential_1(v23);
  return sub_1D5A52600(v18);
}

void sub_1D5A52560(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A51F24();
    v7 = a3(a1, &type metadata for WebEmbedLoadFailureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A525BC(uint64_t a1, uint64_t a2)
{
  uint64_t Failure;

  Failure = type metadata accessor for WebEmbedLoadFailureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(Failure - 8) + 16))(a2, a1, Failure);
  return a2;
}

uint64_t sub_1D5A52600(uint64_t a1)
{
  uint64_t Failure;

  Failure = type metadata accessor for WebEmbedLoadFailureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(Failure - 8) + 8))(a1, Failure);
  return a1;
}

uint64_t sub_1D5A5263C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WebEmbedLoadFailureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A52650(_QWORD *a1)
{
  return WebEmbedLoadFailureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A52664@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9D1258, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9D1240, a1);
}

uint64_t sub_1D5A52688@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9D1280, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9D1260, a1);
}

uint64_t sub_1D5A526AC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  v9 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v9, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v9, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v9, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
}

uint64_t *initializeBufferWithCopyOfBuffer for WebEmbedLoadFailureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for WebEmbedLoadFailureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

uint64_t initializeWithCopy for WebEmbedLoadFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for WebEmbedLoadFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for WebEmbedLoadFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for WebEmbedLoadFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for WebEmbedLoadFailureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A53698(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
                v8 = v19;
                v12 = *(_QWORD *)(v19 - 8);
                v13 = a3[11];
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for WebEmbedLoadFailureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A538B0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
                v10 = v21;
                v14 = *(_QWORD *)(v21 - 8);
                v15 = a4[11];
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5A53AC4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C72A0, (void (*)(void))sub_1D57C60E4, (void (*)(void))sub_1D57C6128);
                if (v7 <= 0x3F)
                  swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for WebEmbedLoadFailureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = *((_QWORD *)v14 + 2);
    if (v15)
    {
      *(_WORD *)v13 = *(_WORD *)v14;
      *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
      *((_QWORD *)v13 + 2) = v15;
      *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);
      v16 = *((_QWORD *)v14 + 5);
      *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
      *((_QWORD *)v13 + 5) = v16;
      v17 = *((_QWORD *)v14 + 7);
      *((_QWORD *)v13 + 6) = *((_QWORD *)v14 + 6);
      *((_QWORD *)v13 + 7) = v17;
      v18 = *((_QWORD *)v14 + 9);
      *((_QWORD *)v13 + 8) = *((_QWORD *)v14 + 8);
      *((_QWORD *)v13 + 9) = v18;
      v13[80] = v14[80];
      v19 = *((_QWORD *)v14 + 12);
      *((_QWORD *)v13 + 11) = *((_QWORD *)v14 + 11);
      *((_QWORD *)v13 + 12) = v19;
      *((_QWORD *)v13 + 13) = *((_QWORD *)v14 + 13);
      v13[112] = v14[112];
      v20 = *((_QWORD *)v14 + 16);
      *((_QWORD *)v13 + 15) = *((_QWORD *)v14 + 15);
      *((_QWORD *)v13 + 16) = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v22 = *((_OWORD *)v14 + 7);
      *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
      *((_OWORD *)v13 + 7) = v22;
      *((_QWORD *)v13 + 16) = *((_QWORD *)v14 + 16);
      v23 = *((_OWORD *)v14 + 3);
      *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
      *((_OWORD *)v13 + 3) = v23;
      v24 = *((_OWORD *)v14 + 5);
      *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
      *((_OWORD *)v13 + 5) = v24;
      v25 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v25;
    }
    v26 = a3[7];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = *((_QWORD *)v28 + 2);
    if (v29 == 1)
    {
      *(_OWORD *)v27 = *(_OWORD *)v28;
      *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
    }
    else
    {
      *v27 = *v28;
      *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
      *((_QWORD *)v27 + 2) = v29;
      swift_bridgeObjectRetain();
    }
    v30 = a3[8];
    v31 = a3[9];
    v32 = (char *)a1 + v30;
    v33 = (char *)a2 + v30;
    *(_DWORD *)v32 = *(_DWORD *)v33;
    v32[4] = v33[4];
    v34 = (char *)a1 + v31;
    v35 = (char *)a2 + v31;
    *(_DWORD *)v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    v36 = a3[10];
    v37 = a3[11];
    v38 = (uint64_t *)((char *)a1 + v36);
    v39 = (uint64_t *)((char *)a2 + v36);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    v41 = (uint64_t *)((char *)a1 + v37);
    v42 = (uint64_t *)((char *)a2 + v37);
    v43 = v42[1];
    *v41 = *v42;
    v41[1] = v43;
    v44 = v42[3];
    v41[2] = v42[2];
    v41[3] = v44;
    v41[4] = v42[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for WebEmbedLoadFailureEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  if (*(_QWORD *)(a1 + a2[6] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[7] + 16) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WebEmbedLoadFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    *(_WORD *)v12 = *(_WORD *)v13;
    *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
    *(_QWORD *)(v12 + 16) = v14;
    *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
    v15 = *(_QWORD *)(v13 + 40);
    *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
    *(_QWORD *)(v12 + 40) = v15;
    v16 = *(_QWORD *)(v13 + 56);
    *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
    *(_QWORD *)(v12 + 56) = v16;
    v17 = *(_QWORD *)(v13 + 72);
    *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
    *(_QWORD *)(v12 + 72) = v17;
    *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
    v18 = *(_QWORD *)(v13 + 96);
    *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
    *(_QWORD *)(v12 + 96) = v18;
    *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
    *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
    v19 = *(_QWORD *)(v13 + 128);
    *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
    *(_QWORD *)(v12 + 128) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *(_OWORD *)(v13 + 112);
    *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
    *(_OWORD *)(v12 + 112) = v20;
    *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
    v21 = *(_OWORD *)(v13 + 48);
    *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
    *(_OWORD *)(v12 + 48) = v21;
    v22 = *(_OWORD *)(v13 + 80);
    *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
    *(_OWORD *)(v12 + 80) = v22;
    v23 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v23;
  }
  v24 = a3[7];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)(v26 + 16);
  if (v27 == 1)
  {
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
  }
  else
  {
    *(_BYTE *)v25 = *(_BYTE *)v26;
    *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
    *(_QWORD *)(v25 + 16) = v27;
    swift_bridgeObjectRetain();
  }
  v28 = a3[8];
  v29 = a3[9];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_DWORD *)v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  v32 = a1 + v29;
  v33 = a2 + v29;
  *(_DWORD *)v32 = *(_DWORD *)v33;
  *(_BYTE *)(v32 + 4) = *(_BYTE *)(v33 + 4);
  v34 = a3[10];
  v35 = a3[11];
  v36 = (_QWORD *)(a1 + v34);
  v37 = (_QWORD *)(a2 + v34);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  v39 = (_QWORD *)(a1 + v35);
  v40 = (_QWORD *)(a2 + v35);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = v40[3];
  v39[2] = v40[2];
  v39[3] = v42;
  v39[4] = v40[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WebEmbedLoadFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  int v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a1 + v11 + 16);
  v15 = *(_QWORD *)(a2 + v11 + 16);
  if (v14)
  {
    if (v15)
    {
      *(_BYTE *)v12 = *(_BYTE *)v13;
      *(_BYTE *)(v12 + 1) = *(_BYTE *)(v13 + 1);
      *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
      *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v12 + 24) = *(_DWORD *)(v13 + 24);
      *(_DWORD *)(v12 + 28) = *(_DWORD *)(v13 + 28);
      *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
      *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
      *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
      *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v16 = *(_QWORD *)(v13 + 104);
      *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
      *(_QWORD *)(v12 + 104) = v16;
      *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v12);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      v18 = *(_OWORD *)(v13 + 64);
      v20 = *(_OWORD *)(v13 + 16);
      v19 = *(_OWORD *)(v13 + 32);
      *(_OWORD *)(v12 + 48) = *(_OWORD *)(v13 + 48);
      *(_OWORD *)(v12 + 64) = v18;
      *(_OWORD *)(v12 + 16) = v20;
      *(_OWORD *)(v12 + 32) = v19;
      v22 = *(_OWORD *)(v13 + 96);
      v21 = *(_OWORD *)(v13 + 112);
      v23 = *(_OWORD *)(v13 + 80);
      *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
      *(_OWORD *)(v12 + 96) = v22;
      *(_OWORD *)(v12 + 112) = v21;
      *(_OWORD *)(v12 + 80) = v23;
    }
  }
  else if (v15)
  {
    *(_BYTE *)v12 = *(_BYTE *)v13;
    *(_BYTE *)(v12 + 1) = *(_BYTE *)(v13 + 1);
    *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
    *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
    *(_DWORD *)(v12 + 24) = *(_DWORD *)(v13 + 24);
    *(_DWORD *)(v12 + 28) = *(_DWORD *)(v13 + 28);
    *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
    *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
    *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
    *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
    *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
    *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
    *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
    *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
    *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
    v17 = *(_QWORD *)(v13 + 104);
    *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
    *(_QWORD *)(v12 + 104) = v17;
    *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
    *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
    v24 = *(_OWORD *)(v13 + 16);
    v25 = *(_OWORD *)(v13 + 32);
    v26 = *(_OWORD *)(v13 + 64);
    *(_OWORD *)(v12 + 48) = *(_OWORD *)(v13 + 48);
    *(_OWORD *)(v12 + 64) = v26;
    *(_OWORD *)(v12 + 16) = v24;
    *(_OWORD *)(v12 + 32) = v25;
    v27 = *(_OWORD *)(v13 + 80);
    v28 = *(_OWORD *)(v13 + 96);
    v29 = *(_OWORD *)(v13 + 112);
    *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
    *(_OWORD *)(v12 + 96) = v28;
    *(_OWORD *)(v12 + 112) = v29;
    *(_OWORD *)(v12 + 80) = v27;
  }
  v30 = a3[7];
  v31 = a1 + v30;
  v32 = (__int128 *)(a2 + v30);
  v33 = *(_QWORD *)(a1 + v30 + 16);
  v34 = *(_QWORD *)(a2 + v30 + 16);
  if (v33 == 1)
  {
    if (v34 == 1)
    {
      v35 = *v32;
      *(_QWORD *)(v31 + 16) = *((_QWORD *)v32 + 2);
      *(_OWORD *)v31 = v35;
    }
    else
    {
      *(_BYTE *)v31 = *(_BYTE *)v32;
      *(_QWORD *)(v31 + 8) = *((_QWORD *)v32 + 1);
      *(_QWORD *)(v31 + 16) = *((_QWORD *)v32 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v34 == 1)
  {
    sub_1D57D9100(v31);
    v36 = *((_QWORD *)v32 + 2);
    *(_OWORD *)v31 = *v32;
    *(_QWORD *)(v31 + 16) = v36;
  }
  else
  {
    *(_BYTE *)v31 = *(_BYTE *)v32;
    *(_QWORD *)(v31 + 8) = *((_QWORD *)v32 + 1);
    *(_QWORD *)(v31 + 16) = *((_QWORD *)v32 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v37 = a3[8];
  v38 = a1 + v37;
  v39 = (int *)(a2 + v37);
  v40 = *v39;
  *(_BYTE *)(v38 + 4) = *((_BYTE *)v39 + 4);
  *(_DWORD *)v38 = v40;
  v41 = a3[9];
  v42 = a1 + v41;
  v43 = (int *)(a2 + v41);
  v44 = *v43;
  *(_BYTE *)(v42 + 4) = *((_BYTE *)v43 + 4);
  *(_DWORD *)v42 = v44;
  v45 = a3[10];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (_QWORD *)(a2 + v45);
  *v46 = *v47;
  v46[1] = v47[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v48 = a3[11];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (_QWORD *)(a2 + v48);
  *v49 = *(_QWORD *)(a2 + v48);
  v49[1] = *(_QWORD *)(a2 + v48 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v49[2] = v50[2];
  v49[3] = v50[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v49[4] = v50[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for WebEmbedLoadFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  *(_QWORD *)(v13 + 128) = *(_QWORD *)(v14 + 128);
  v16 = *(_OWORD *)(v14 + 112);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(v14 + 96);
  *(_OWORD *)(v13 + 112) = v16;
  v17 = *(_OWORD *)(v14 + 80);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v14 + 64);
  *(_OWORD *)(v13 + 80) = v17;
  v18 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v18;
  v19 = a1 + v12;
  v20 = a2 + v12;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  v21 = a3[8];
  v22 = a3[9];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_DWORD *)v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  v25 = a1 + v22;
  v26 = a2 + v22;
  *(_DWORD *)v25 = *(_DWORD *)v26;
  v27 = a3[10];
  v28 = a3[11];
  v29 = *(_OWORD *)(a2 + v27);
  *(_BYTE *)(v25 + 4) = *(_BYTE *)(v26 + 4);
  *(_OWORD *)(a1 + v27) = v29;
  v30 = a1 + v28;
  v31 = *(_OWORD *)(a2 + v28);
  v32 = *(_OWORD *)(a2 + v28 + 16);
  *(_QWORD *)(v30 + 32) = *(_QWORD *)(a2 + v28 + 32);
  *(_OWORD *)v30 = v31;
  *(_OWORD *)(v30 + 16) = v32;
  return a1;
}

uint64_t assignWithTake for WebEmbedLoadFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  if (*(_QWORD *)(a1 + v11 + 16))
  {
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      *(_WORD *)v12 = *(_WORD *)v13;
      *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
      *(_QWORD *)(v12 + 16) = v14;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
      *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v13 + 64);
      *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
      *(_QWORD *)(v12 + 64) = v15;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
      v16 = *(_QWORD *)(v13 + 96);
      *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
      *(_QWORD *)(v12 + 96) = v16;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
      *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
      *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D57E17B8(v12);
  }
  v17 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(v12 + 112) = v17;
  *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
  v18 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(v12 + 48) = v18;
  v19 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(v12 + 80) = v19;
  v20 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v20;
LABEL_6:
  v21 = a3[7];
  v22 = a1 + v21;
  v23 = a2 + v21;
  if (*(_QWORD *)(a1 + v21 + 16) != 1)
  {
    v24 = *(_QWORD *)(v23 + 16);
    if (v24 != 1)
    {
      *(_BYTE *)v22 = *(_BYTE *)v23;
      *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
      *(_QWORD *)(v22 + 16) = v24;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D57D9100(v22);
  }
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_QWORD *)(v22 + 16) = *(_QWORD *)(v23 + 16);
LABEL_11:
  v25 = a3[8];
  v26 = a3[9];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_DWORD *)v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  v29 = a1 + v26;
  v30 = a2 + v26;
  *(_DWORD *)v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  v31 = a3[10];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (uint64_t *)(a2 + v31);
  v35 = *v33;
  v34 = v33[1];
  *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  v36 = a3[11];
  v37 = (_QWORD *)(a1 + v36);
  v38 = (_QWORD *)(a2 + v36);
  v39 = v38[1];
  *v37 = *v38;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  v40 = v38[3];
  v37[2] = v38[2];
  v37[3] = v40;
  swift_bridgeObjectRelease();
  v37[4] = v38[4];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WebEmbedLoadFailureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A54A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 40) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for WebEmbedLoadFailureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A54B50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 40) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5A54BF8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WebEmbedLoadFailureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D5A54CFC + 4 * byte_1D5AE38DD[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D5A54D30 + 4 * byte_1D5AE38D8[v4]))();
}

uint64_t sub_1D5A54D30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A54D38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A54D40);
  return result;
}

uint64_t sub_1D5A54D4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A54D54);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D5A54D58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A54D60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WebEmbedLoadFailureEvent.Model.CodingKeys()
{
  return &type metadata for WebEmbedLoadFailureEvent.Model.CodingKeys;
}

unint64_t sub_1D5A54D80()
{
  unint64_t result;

  result = qword_1EFF51C18;
  if (!qword_1EFF51C18)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE3B24, &type metadata for WebEmbedLoadFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51C18);
  }
  return result;
}

unint64_t sub_1D5A54DC8()
{
  unint64_t result;

  result = qword_1EFF51C20;
  if (!qword_1EFF51C20)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE3A94, &type metadata for WebEmbedLoadFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51C20);
  }
  return result;
}

unint64_t sub_1D5A54E10()
{
  unint64_t result;

  result = qword_1EFF51C28;
  if (!qword_1EFF51C28)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE3ABC, &type metadata for WebEmbedLoadFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51C28);
  }
  return result;
}

uint64_t sub_1D5A54E54(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AECA50 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AEDC30 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6465626D45626577 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x746144726F727265 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t DeviceData.deviceModel.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceData.deviceModel.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DeviceData.deviceModel.modify())()
{
  return nullsub_1;
}

void DeviceData.devicePlatform.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *DeviceData.devicePlatform.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*DeviceData.devicePlatform.modify())()
{
  return nullsub_1;
}

void DeviceData.osInstallVariant.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

_BYTE *DeviceData.osInstallVariant.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = *result;
  return result;
}

uint64_t (*DeviceData.osInstallVariant.modify())()
{
  return nullsub_1;
}

uint64_t DeviceData.osVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceData.osVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*DeviceData.osVersion.modify())()
{
  return nullsub_1;
}

uint64_t DeviceData.osBundleVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceData.osBundleVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*DeviceData.osBundleVersion.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5A55360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A55898(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A55384()
{
  sub_1D57B2FF8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A553AC()
{
  sub_1D57B2FF8();
  return sub_1D5AAEEE0();
}

uint64_t DeviceData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  char v27;
  char v28;
  unsigned __int8 v29;
  char v30;
  unsigned __int8 v31;
  char v32;

  sub_1D57B2F14(0, &qword_1ED9CC7B8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57B2FF8();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v32 = 0;
  v10 = sub_1D5AAECA0();
  v12 = v11;
  v30 = 1;
  sub_1D5A556AC();
  swift_bridgeObjectRetain();
  sub_1D5AAECD0();
  v25 = v31;
  v28 = 2;
  sub_1D5A556F0();
  sub_1D5AAECD0();
  v24 = v29;
  v27 = 3;
  v22 = sub_1D5AAECA0();
  v23 = v14;
  v26 = 4;
  swift_bridgeObjectRetain();
  v15 = sub_1D5AAECA0();
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19 = v15;
  v18(v9, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v25;
  *(_BYTE *)(a2 + 17) = v24;
  v20 = v23;
  *(_QWORD *)(a2 + 24) = v22;
  *(_QWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 40) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1D5A556AC()
{
  unint64_t result;

  result = qword_1ED9C7BF8;
  if (!qword_1ED9C7BF8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DevicePlatform, &type metadata for DevicePlatform);
    atomic_store(result, (unint64_t *)&qword_1ED9C7BF8);
  }
  return result;
}

unint64_t sub_1D5A556F0()
{
  unint64_t result;

  result = qword_1ED9C8DA0;
  if (!qword_1ED9C8DA0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for OsInstallVariant, &type metadata for OsInstallVariant);
    atomic_store(result, (unint64_t *)&qword_1ED9C8DA0);
  }
  return result;
}

uint64_t sub_1D5A55734@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DeviceData.init(from:)(a1, a2);
}

uint64_t assignWithCopy for DeviceData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DeviceData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DeviceData.CodingKeys()
{
  return &type metadata for DeviceData.CodingKeys;
}

unint64_t sub_1D5A55854()
{
  unint64_t result;

  result = qword_1EFF51C30;
  if (!qword_1EFF51C30)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE3CF8, &type metadata for DeviceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51C30);
  }
  return result;
}

uint64_t sub_1D5A55898(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F4D656369766564 && a2 == 0xEB000000006C6564;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C50656369766564 && a2 == 0xEE006D726F667461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AF2480 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F6973726556736FLL && a2 == 0xE90000000000006ELL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C646E7542736FLL && a2 == 0xEF6E6F6973726556)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1D5A55B18(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9D13A0, MEMORY[0x1E0CF8078]);
}

uint64_t static ANFComponentExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9D1538, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9D13A0, a1);
}

uint64_t sub_1D5A55B58(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9D1540, MEMORY[0x1E0CF8380]);
}

uint64_t static ANFComponentExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9D1560, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9D1540, a1);
}

uint64_t ANFComponentExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t ANFComponentExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ANFComponentExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ANFComponentExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for ANFComponentExposureEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for ANFComponentExposureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CB4D8);
}

uint64_t ANFComponentExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ANFComponentExposureEvent.timedData.modify())(_QWORD)
{
  type metadata accessor for ANFComponentExposureEvent(0);
  return nullsub_1;
}

uint64_t ANFComponentExposureEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ANFComponentExposureEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ANFComponentExposureEvent.articleData.modify())(_QWORD)
{
  type metadata accessor for ANFComponentExposureEvent(0);
  return nullsub_1;
}

uint64_t ANFComponentExposureEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ANFComponentExposureEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ANFComponentExposureEvent.channelData.modify())(_QWORD)
{
  type metadata accessor for ANFComponentExposureEvent(0);
  return nullsub_1;
}

uint64_t ANFComponentExposureEvent.anfComponentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ANFComponentExposureEvent.anfComponentData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ANFComponentExposureEvent.anfComponentData.modify())(_QWORD)
{
  type metadata accessor for ANFComponentExposureEvent(0);
  return nullsub_1;
}

uint64_t ANFComponentExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ANFComponentExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ANFComponentExposureEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for ANFComponentExposureEvent(0);
  return nullsub_1;
}

uint64_t ANFComponentExposureEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ANFComponentExposureEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ANFComponentExposureEvent.issueData.modify())(_QWORD)
{
  type metadata accessor for ANFComponentExposureEvent(0);
  return nullsub_1;
}

uint64_t ANFComponentExposureEvent.issueViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ANFComponentExposureEvent.issueViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ANFComponentExposureEvent.issueViewData.modify())(_QWORD)
{
  type metadata accessor for ANFComponentExposureEvent(0);
  return nullsub_1;
}

uint64_t ANFComponentExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ANFComponentExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 48);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ANFComponentExposureEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for ANFComponentExposureEvent(0);
  return nullsub_1;
}

uint64_t ANFComponentExposureEvent.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ANFComponentExposureEvent.articleScienceData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ANFComponentExposureEvent.articleScienceData.modify())(_QWORD)
{
  type metadata accessor for ANFComponentExposureEvent(0);
  return nullsub_1;
}

uint64_t ANFComponentExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ANFComponentExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v2, v14);
  v15 = a1 + v4[10];
  v16 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v16, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
}

uint64_t ANFComponentExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ANFComponentExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for ANFComponentExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for ANFComponentExposureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CB428);
}

uint64_t ANFComponentExposureEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent.Model(0) + 24);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t ANFComponentExposureEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ANFComponentExposureEvent.Model.anfComponentData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent.Model(0) + 32));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  v7 = v3[4];
  v8 = v3[5];
  v9 = v3[6];
  v10 = v3[7];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ANFComponentExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent.Model(0) + 36));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ANFComponentExposureEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent.Model(0) + 40));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t ANFComponentExposureEvent.Model.issueViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent.Model(0) + 44));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t ANFComponentExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent.Model(0) + 48));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t ANFComponentExposureEvent.Model.articleScienceData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  const void *v3;
  _BYTE __dst[280];

  v3 = (const void *)(v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent.Model(0) + 52));
  memcpy(__dst, v3, 0x111uLL);
  memcpy(a1, v3, 0x111uLL);
  return sub_1D57D42AC((uint64_t)__dst);
}

void *ANFComponentExposureEvent.Model.init(eventData:timedData:articleData:channelData:anfComponentData:userBundleSubscriptionContextData:issueData:issueViewData:viewData:articleScienceData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t *a4@<X3>, __int128 *a5@<X4>, char *a6@<X5>, __int128 *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, const void *a11)
{
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  __int16 v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _BYTE v60[23];
  _BYTE __dst[273];

  v59 = a3[6];
  *(_OWORD *)v60 = a3[7];
  *(_QWORD *)&v60[15] = *(_QWORD *)((char *)a3 + 127);
  v55 = a3[2];
  v56 = a3[3];
  v57 = a3[4];
  v58 = a3[5];
  v53 = *a3;
  v54 = a3[1];
  v14 = *a4;
  v15 = a4[1];
  v16 = *((_BYTE *)a4 + 16);
  v17 = *((_BYTE *)a4 + 17);
  v18 = a4[3];
  v19 = a4[4];
  v35 = a5[1];
  v36 = *a5;
  v34 = a5[2];
  v32 = *((_QWORD *)a5 + 7);
  v33 = *((_QWORD *)a5 + 6);
  v44 = *a6;
  v42 = *((_QWORD *)a6 + 2);
  v43 = *((_QWORD *)a6 + 1);
  v40 = a6[25];
  v41 = a6[24];
  v38 = *((_QWORD *)a6 + 5);
  v39 = *((_QWORD *)a6 + 4);
  v37 = a6[48];
  v47 = *a7;
  v45 = *((_QWORD *)a7 + 3);
  v46 = *((_QWORD *)a7 + 2);
  v48 = a8[1];
  v49 = *a8;
  v51 = a10[1];
  v52 = *a10;
  v50 = *((_WORD *)a10 + 8);
  memcpy(__dst, a11, sizeof(__dst));
  v20 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a9, a1, v20);
  v21 = (int *)type metadata accessor for ANFComponentExposureEvent.Model(0);
  v22 = a9 + v21[5];
  v23 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22, a2, v23);
  v24 = a9 + v21[6];
  *(_OWORD *)(v24 + 96) = v59;
  *(_OWORD *)(v24 + 112) = *(_OWORD *)v60;
  *(_QWORD *)(v24 + 127) = *(_QWORD *)&v60[15];
  *(_OWORD *)(v24 + 32) = v55;
  *(_OWORD *)(v24 + 48) = v56;
  *(_OWORD *)(v24 + 64) = v57;
  *(_OWORD *)(v24 + 80) = v58;
  *(_OWORD *)v24 = v53;
  *(_OWORD *)(v24 + 16) = v54;
  v25 = a9 + v21[7];
  *(_QWORD *)v25 = v14;
  *(_QWORD *)(v25 + 8) = v15;
  *(_BYTE *)(v25 + 16) = v16;
  *(_BYTE *)(v25 + 17) = v17;
  *(_QWORD *)(v25 + 24) = v18;
  *(_QWORD *)(v25 + 32) = v19;
  v26 = a9 + v21[8];
  *(_OWORD *)v26 = v36;
  *(_OWORD *)(v26 + 16) = v35;
  *(_OWORD *)(v26 + 32) = v34;
  *(_QWORD *)(v26 + 48) = v33;
  *(_QWORD *)(v26 + 56) = v32;
  v27 = a9 + v21[9];
  *(_BYTE *)v27 = v44;
  *(_QWORD *)(v27 + 8) = v43;
  *(_QWORD *)(v27 + 16) = v42;
  *(_BYTE *)(v27 + 24) = v41;
  *(_BYTE *)(v27 + 25) = v40;
  *(_QWORD *)(v27 + 32) = v39;
  *(_QWORD *)(v27 + 40) = v38;
  *(_BYTE *)(v27 + 48) = v37;
  v28 = a9 + v21[10];
  *(_OWORD *)v28 = v47;
  *(_QWORD *)(v28 + 16) = v46;
  *(_QWORD *)(v28 + 24) = v45;
  v29 = (_QWORD *)(a9 + v21[11]);
  *v29 = v49;
  v29[1] = v48;
  v30 = a9 + v21[12];
  *(_QWORD *)v30 = v52;
  *(_QWORD *)(v30 + 8) = v51;
  *(_WORD *)(v30 + 16) = v50;
  return memcpy((void *)(a9 + v21[13]), __dst, 0x111uLL);
}

uint64_t sub_1D5A56C98(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A56CD0 + 4 * byte_1D5AE3D70[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5A56CD0()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D5A56CE4()
{
  return 0x44656C6369747261;
}

unint64_t sub_1D5A56D18()
{
  return 0xD000000000000010;
}

unint64_t sub_1D5A56D34()
{
  return 0xD000000000000021;
}

uint64_t sub_1D5A56DBC()
{
  unsigned __int8 *v0;

  return sub_1D5A56C98(*v0);
}

uint64_t sub_1D5A56DC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A5AEDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A56DE8()
{
  sub_1D5A57290();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A56E10()
{
  sub_1D5A57290();
  return sub_1D5AAEEE0();
}

uint64_t ANFComponentExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  _OWORD *v33;
  __int128 v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v39[16];
  _BYTE v40[273];
  char v41;
  uint64_t v42;
  uint64_t v43;
  __int16 v44;
  char v45;

  v3 = v1;
  sub_1D5A57B84(0, &qword_1EFF51C38, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v39[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A57290();
  sub_1D5AAEEC8();
  v40[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for ANFComponentExposureEvent.Model(0);
    v45 = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = v3 + v10[6];
    v12 = *(_OWORD *)(v11 + 112);
    *(_OWORD *)&v40[96] = *(_OWORD *)(v11 + 96);
    *(_OWORD *)&v40[112] = v12;
    *(_QWORD *)&v40[127] = *(_QWORD *)(v11 + 127);
    v13 = *(_OWORD *)(v11 + 48);
    *(_OWORD *)&v40[32] = *(_OWORD *)(v11 + 32);
    *(_OWORD *)&v40[48] = v13;
    v14 = *(_OWORD *)(v11 + 80);
    *(_OWORD *)&v40[64] = *(_OWORD *)(v11 + 64);
    *(_OWORD *)&v40[80] = v14;
    v15 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)v40 = *(_OWORD *)v11;
    *(_OWORD *)&v40[16] = v15;
    LOBYTE(v42) = 2;
    sub_1D57CB940();
    sub_1D5AAED6C();
    v16 = (uint64_t *)(v3 + v10[7]);
    v17 = *v16;
    v18 = v16[1];
    v19 = *((_BYTE *)v16 + 16);
    v20 = *((_BYTE *)v16 + 17);
    v22 = v16[3];
    v21 = v16[4];
    *(_QWORD *)v40 = v17;
    *(_QWORD *)&v40[8] = v18;
    v40[16] = v19;
    v40[17] = v20;
    *(_QWORD *)&v40[24] = v22;
    *(_QWORD *)&v40[32] = v21;
    LOBYTE(v42) = 3;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v23 = (__int128 *)(v3 + v10[8]);
    v24 = *v23;
    v25 = v23[1];
    v26 = v23[2];
    v28 = *((_QWORD *)v23 + 6);
    v27 = *((_QWORD *)v23 + 7);
    *(_OWORD *)v40 = v24;
    *(_OWORD *)&v40[16] = v25;
    *(_OWORD *)&v40[32] = v26;
    *(_QWORD *)&v40[48] = v28;
    *(_QWORD *)&v40[56] = v27;
    LOBYTE(v42) = 4;
    sub_1D57E8274();
    sub_1D5AAED6C();
    v29 = v3 + v10[9];
    v30 = *(_BYTE *)(v29 + 24);
    v31 = *(_BYTE *)(v29 + 25);
    v32 = *(_BYTE *)(v29 + 48);
    v40[0] = *(_BYTE *)v29;
    *(_OWORD *)&v40[8] = *(_OWORD *)(v29 + 8);
    v40[24] = v30;
    v40[25] = v31;
    *(_OWORD *)&v40[32] = *(_OWORD *)(v29 + 32);
    v40[48] = v32;
    LOBYTE(v42) = 5;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v33 = (_OWORD *)(v3 + v10[10]);
    v34 = v33[1];
    *(_OWORD *)v40 = *v33;
    *(_OWORD *)&v40[16] = v34;
    LOBYTE(v42) = 6;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    *(_OWORD *)v40 = *(_OWORD *)(v3 + v10[11]);
    LOBYTE(v42) = 7;
    sub_1D57CAD6C();
    sub_1D5AAED18();
    v35 = (uint64_t *)(v3 + v10[12]);
    v36 = *v35;
    v37 = v35[1];
    LOWORD(v35) = *((_WORD *)v35 + 8);
    v42 = v36;
    v43 = v37;
    v44 = (__int16)v35;
    v41 = 8;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    memcpy(v40, (const void *)(v3 + v10[13]), sizeof(v40));
    v39[15] = 9;
    sub_1D57CB7A8();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A57290()
{
  unint64_t result;

  result = qword_1EFF51C40;
  if (!qword_1EFF51C40)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE4054, &type metadata for ANFComponentExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51C40);
  }
  return result;
}

uint64_t ANFComponentExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v18;
  char *v19;
  uint64_t v20;
  int *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char v38;
  char v39;
  char v40;
  char *v41;
  char *v42;
  __int128 v43;
  uint64_t v44;
  __int16 v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  _BYTE v60[273];
  char v61;
  char v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _OWORD v70[2];
  uint64_t v71;

  v50 = a2;
  v3 = sub_1D5AADFB0();
  v54 = *(_QWORD *)(v3 - 8);
  v55 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D5AADF98();
  v56 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A57B84(0, &qword_1EFF51C48, MEMORY[0x1E0DED048]);
  v51 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v48 - v11;
  v71 = type metadata accessor for ANFComponentExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v71);
  v59 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v57 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1D5A57290();
  v52 = v12;
  v15 = v58;
  sub_1D5AAEEB0();
  v53 = v6;
  if (v15)
  {
    v58 = v15;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  }
  else
  {
    v16 = v5;
    v49 = v10;
    v60[0] = 0;
    sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
    sub_1D5AAECD0();
    v18 = v59;
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v59, v8, v6);
    v60[0] = 1;
    sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
    v19 = v16;
    v20 = v55;
    sub_1D5AAECD0();
    v21 = (int *)v71;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(&v18[*(int *)(v71 + 20)], v19, v20);
    v62 = 2;
    sub_1D57CB8FC();
    sub_1D5AAECD0();
    v22 = &v18[v21[6]];
    v23 = v70[0];
    *((_OWORD *)v22 + 6) = v69;
    *((_OWORD *)v22 + 7) = v23;
    *(_QWORD *)(v22 + 127) = *(_QWORD *)((char *)v70 + 15);
    v24 = v66;
    *((_OWORD *)v22 + 2) = v65;
    *((_OWORD *)v22 + 3) = v24;
    v25 = v68;
    *((_OWORD *)v22 + 4) = v67;
    *((_OWORD *)v22 + 5) = v25;
    v26 = v64;
    *(_OWORD *)v22 = v63;
    *((_OWORD *)v22 + 1) = v26;
    v61 = 3;
    sub_1D57CB874();
    sub_1D5AAECD0();
    v27 = *(_QWORD *)&v60[8];
    v28 = v60[16];
    v29 = v60[17];
    v30 = *(_QWORD *)&v60[24];
    v31 = *(_QWORD *)&v60[32];
    v32 = &v18[v21[7]];
    *(_QWORD *)v32 = *(_QWORD *)v60;
    *((_QWORD *)v32 + 1) = v27;
    v32[16] = v28;
    v32[17] = v29;
    *((_QWORD *)v32 + 3) = v30;
    *((_QWORD *)v32 + 4) = v31;
    v61 = 4;
    sub_1D57E8230();
    sub_1D5AAECD0();
    v33 = *(_OWORD *)&v60[16];
    v34 = *(_OWORD *)&v60[32];
    v35 = *(_QWORD *)&v60[48];
    v36 = *(_QWORD *)&v60[56];
    v37 = &v18[v21[8]];
    *(_OWORD *)v37 = *(_OWORD *)v60;
    *((_OWORD *)v37 + 1) = v33;
    *((_OWORD *)v37 + 2) = v34;
    *((_QWORD *)v37 + 6) = v35;
    *((_QWORD *)v37 + 7) = v36;
    v61 = 5;
    sub_1D57C6AF8();
    sub_1D5AAECD0();
    v38 = v60[24];
    v39 = v60[25];
    v40 = v60[48];
    v41 = &v18[v21[9]];
    *v41 = v60[0];
    *(_OWORD *)(v41 + 8) = *(_OWORD *)&v60[8];
    v41[24] = v38;
    v41[25] = v39;
    *((_OWORD *)v41 + 2) = *(_OWORD *)&v60[32];
    v41[48] = v40;
    v61 = 6;
    sub_1D57C5ED8();
    sub_1D5AAEC7C();
    v42 = &v18[v21[10]];
    v43 = *(_OWORD *)&v60[16];
    *(_OWORD *)v42 = *(_OWORD *)v60;
    *((_OWORD *)v42 + 1) = v43;
    v61 = 7;
    sub_1D57CAD28();
    sub_1D5AAEC7C();
    *(_OWORD *)&v18[v21[11]] = *(_OWORD *)v60;
    v61 = 8;
    sub_1D57C6260();
    sub_1D5AAECD0();
    v44 = *(_QWORD *)&v60[8];
    v45 = *(_WORD *)&v60[16];
    v46 = &v18[v21[12]];
    *(_QWORD *)v46 = *(_QWORD *)v60;
    *((_QWORD *)v46 + 1) = v44;
    *((_WORD *)v46 + 8) = v45;
    v61 = 9;
    sub_1D57CB764();
    sub_1D5AAECD0();
    v58 = 0;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v52, v51);
    v47 = (uint64_t)v59;
    memcpy(&v59[*(int *)(v71 + 52)], v60, 0x111uLL);
    sub_1D5A57BE0(v47, v50);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
    return sub_1D5A57C24(v47);
  }
}

void sub_1D5A57B84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A57290();
    v7 = a3(a1, &type metadata for ANFComponentExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A57BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ANFComponentExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A57C24(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ANFComponentExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A57C60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ANFComponentExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A57C74(_QWORD *a1)
{
  return ANFComponentExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A57C88@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9D1538, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9D13A0, a1);
}

uint64_t sub_1D5A57CAC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9D1560, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9D1540, a1);
}

uint64_t sub_1D5A57CD0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v4, v15);
  v16 = a2 + a1[10];
  v17 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v16, v17, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v17, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
}

uint64_t *initializeBufferWithCopyOfBuffer for ANFComponentExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for ANFComponentExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
}

uint64_t initializeWithCopy for ANFComponentExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for ANFComponentExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for ANFComponentExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for ANFComponentExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for ANFComponentExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A590CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
                    v8 = v21;
                    v12 = *(_QWORD *)(v21 - 8);
                    v13 = a3[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ANFComponentExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A5936C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
                    v10 = v23;
                    v14 = *(_QWORD *)(v23 - 8);
                    v15 = a4[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5A59608()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7190, (void (*)(void))sub_1D57E8230, (void (*)(void))sub_1D57E8274);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
                    if (v9 <= 0x3F)
                      swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ANFComponentExposureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    v16 = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 3) = v16;
    v14[32] = v15[32];
    v17 = *((_QWORD *)v15 + 6);
    *((_QWORD *)v14 + 5) = *((_QWORD *)v15 + 5);
    *((_QWORD *)v14 + 6) = v17;
    v14[56] = v15[56];
    v14[57] = v15[57];
    v18 = *((_QWORD *)v15 + 9);
    *((_QWORD *)v14 + 8) = *((_QWORD *)v15 + 8);
    *((_QWORD *)v14 + 9) = v18;
    v14[80] = v15[80];
    *(_OWORD *)(v14 + 88) = *(_OWORD *)(v15 + 88);
    *((_QWORD *)v14 + 13) = *((_QWORD *)v15 + 13);
    v14[112] = v15[112];
    *((_QWORD *)v14 + 15) = *((_QWORD *)v15 + 15);
    *((_DWORD *)v14 + 32) = *((_DWORD *)v15 + 32);
    v14[132] = v15[132];
    *(_WORD *)(v14 + 133) = *(_WORD *)(v15 + 133);
    v19 = (char *)a1 + v13;
    v20 = (char *)a2 + v13;
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    *((_WORD *)v19 + 8) = *((_WORD *)v20 + 8);
    v66 = *((_QWORD *)v20 + 4);
    *((_QWORD *)v19 + 3) = *((_QWORD *)v20 + 3);
    *((_QWORD *)v19 + 4) = v66;
    v22 = a3[8];
    v23 = a3[9];
    v24 = (uint64_t *)((char *)a1 + v22);
    v25 = (uint64_t *)((char *)a2 + v22);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = v25[3];
    v24[2] = v25[2];
    v24[3] = v27;
    v28 = v25[5];
    v24[4] = v25[4];
    v24[5] = v28;
    v65 = v25[7];
    v24[6] = v25[6];
    v24[7] = v65;
    v29 = (char *)a1 + v23;
    v30 = (char *)a2 + v23;
    *v29 = *v30;
    v31 = *((_QWORD *)v30 + 2);
    *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
    *((_QWORD *)v29 + 2) = v31;
    v29[24] = v30[24];
    v29[25] = v30[25];
    v32 = *((_QWORD *)v30 + 5);
    *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
    *((_QWORD *)v29 + 5) = v32;
    v29[48] = v30[48];
    v33 = a3[10];
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    v64 = *(uint64_t *)((char *)a2 + v33 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v64)
    {
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *((_QWORD *)v34 + 1) = v64;
      *((_WORD *)v34 + 8) = *((_WORD *)v35 + 8);
      *((_QWORD *)v34 + 3) = *((_QWORD *)v35 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v37 = *((_OWORD *)v35 + 1);
      *(_OWORD *)v34 = *(_OWORD *)v35;
      *((_OWORD *)v34 + 1) = v37;
    }
    v38 = a3[11];
    v39 = a3[12];
    v40 = (uint64_t *)((char *)a1 + v38);
    v41 = (uint64_t *)((char *)a2 + v38);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    v43 = (char *)a1 + v39;
    v44 = (char *)a2 + v39;
    v45 = *((_QWORD *)v44 + 1);
    *(_QWORD *)v43 = *(_QWORD *)v44;
    *((_QWORD *)v43 + 1) = v45;
    *((_WORD *)v43 + 8) = *((_WORD *)v44 + 8);
    v46 = a3[13];
    v47 = (char *)a1 + v46;
    v48 = (char *)a2 + v46;
    v49 = *((_OWORD *)v48 + 1);
    *(_OWORD *)v47 = *(_OWORD *)v48;
    *((_OWORD *)v47 + 1) = v49;
    v50 = *((_OWORD *)v48 + 3);
    *((_OWORD *)v47 + 2) = *((_OWORD *)v48 + 2);
    *((_OWORD *)v47 + 3) = v50;
    v51 = *((_OWORD *)v48 + 5);
    *((_OWORD *)v47 + 4) = *((_OWORD *)v48 + 4);
    *((_OWORD *)v47 + 5) = v51;
    *((_OWORD *)v47 + 6) = *((_OWORD *)v48 + 6);
    v53 = *((_QWORD *)v48 + 14);
    v52 = *((_QWORD *)v48 + 15);
    v47[128] = v48[128];
    *((_QWORD *)v47 + 14) = v53;
    *((_QWORD *)v47 + 15) = v52;
    v54 = *((_QWORD *)v48 + 17);
    v47[144] = v48[144];
    *((_QWORD *)v47 + 17) = v54;
    v55 = *((_QWORD *)v48 + 19);
    v47[160] = v48[160];
    *((_QWORD *)v47 + 19) = v55;
    v56 = *((_QWORD *)v48 + 21);
    v47[176] = v48[176];
    *((_QWORD *)v47 + 21) = v56;
    v57 = *((_QWORD *)v48 + 23);
    v47[192] = v48[192];
    *((_QWORD *)v47 + 23) = v57;
    v58 = *((_QWORD *)v48 + 25);
    v47[208] = v48[208];
    *((_QWORD *)v47 + 25) = v58;
    v59 = *((_QWORD *)v48 + 27);
    v47[224] = v48[224];
    *((_QWORD *)v47 + 27) = v59;
    v60 = *((_QWORD *)v48 + 29);
    v47[240] = v48[240];
    *((_QWORD *)v47 + 29) = v60;
    v61 = *((_QWORD *)v48 + 31);
    v47[256] = v48[256];
    *((_QWORD *)v47 + 31) = v61;
    v62 = *((_QWORD *)v48 + 33);
    v47[272] = v48[272];
    *((_QWORD *)v47 + 33) = v62;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ANFComponentExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 40) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ANFComponentExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v15;
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  v16 = *(_QWORD *)(v14 + 48);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v13 + 48) = v16;
  *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
  *(_BYTE *)(v13 + 57) = *(_BYTE *)(v14 + 57);
  v17 = *(_QWORD *)(v14 + 72);
  *(_QWORD *)(v13 + 64) = *(_QWORD *)(v14 + 64);
  *(_QWORD *)(v13 + 72) = v17;
  *(_BYTE *)(v13 + 80) = *(_BYTE *)(v14 + 80);
  *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
  *(_QWORD *)(v13 + 104) = *(_QWORD *)(v14 + 104);
  *(_BYTE *)(v13 + 112) = *(_BYTE *)(v14 + 112);
  *(_QWORD *)(v13 + 120) = *(_QWORD *)(v14 + 120);
  *(_DWORD *)(v13 + 128) = *(_DWORD *)(v14 + 128);
  *(_BYTE *)(v13 + 132) = *(_BYTE *)(v14 + 132);
  *(_WORD *)(v13 + 133) = *(_WORD *)(v14 + 133);
  v18 = a1 + v12;
  v19 = a2 + v12;
  v20 = *(_QWORD *)(v19 + 8);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(v18 + 8) = v20;
  *(_WORD *)(v18 + 16) = *(_WORD *)(v19 + 16);
  v64 = *(_QWORD *)(v19 + 32);
  *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
  *(_QWORD *)(v18 + 32) = v64;
  v21 = a3[8];
  v22 = a3[9];
  v23 = (_QWORD *)(a1 + v21);
  v24 = (_QWORD *)(a2 + v21);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = v24[3];
  v23[2] = v24[2];
  v23[3] = v26;
  v27 = v24[5];
  v23[4] = v24[4];
  v23[5] = v27;
  v28 = v24[7];
  v23[6] = v24[6];
  v23[7] = v28;
  v29 = a1 + v22;
  v30 = a2 + v22;
  *(_BYTE *)v29 = *(_BYTE *)v30;
  v31 = *(_QWORD *)(v30 + 16);
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
  *(_QWORD *)(v29 + 16) = v31;
  *(_BYTE *)(v29 + 24) = *(_BYTE *)(v30 + 24);
  *(_BYTE *)(v29 + 25) = *(_BYTE *)(v30 + 25);
  v32 = *(_QWORD *)(v30 + 40);
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
  *(_QWORD *)(v29 + 40) = v32;
  *(_BYTE *)(v29 + 48) = *(_BYTE *)(v30 + 48);
  v33 = a3[10];
  v65 = a1;
  v34 = a1 + v33;
  v35 = a2 + v33;
  v63 = *(_QWORD *)(a2 + v33 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v63)
  {
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *(_QWORD *)(v34 + 8) = v63;
    *(_WORD *)(v34 + 16) = *(_WORD *)(v35 + 16);
    *(_QWORD *)(v34 + 24) = *(_QWORD *)(v35 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v36 = *(_OWORD *)(v35 + 16);
    *(_OWORD *)v34 = *(_OWORD *)v35;
    *(_OWORD *)(v34 + 16) = v36;
  }
  v37 = a3[11];
  v38 = a3[12];
  v39 = (_QWORD *)(v65 + v37);
  v40 = (_QWORD *)(a2 + v37);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = v65 + v38;
  v43 = a2 + v38;
  v44 = *(_QWORD *)(v43 + 8);
  *(_QWORD *)v42 = *(_QWORD *)v43;
  *(_QWORD *)(v42 + 8) = v44;
  *(_WORD *)(v42 + 16) = *(_WORD *)(v43 + 16);
  v45 = a3[13];
  v46 = v65 + v45;
  v47 = a2 + v45;
  v48 = *(_OWORD *)(v47 + 16);
  *(_OWORD *)v46 = *(_OWORD *)v47;
  *(_OWORD *)(v46 + 16) = v48;
  v49 = *(_OWORD *)(v47 + 48);
  *(_OWORD *)(v46 + 32) = *(_OWORD *)(v47 + 32);
  *(_OWORD *)(v46 + 48) = v49;
  v50 = *(_OWORD *)(v47 + 80);
  *(_OWORD *)(v46 + 64) = *(_OWORD *)(v47 + 64);
  *(_OWORD *)(v46 + 80) = v50;
  *(_OWORD *)(v46 + 96) = *(_OWORD *)(v47 + 96);
  v52 = *(_QWORD *)(v47 + 112);
  v51 = *(_QWORD *)(v47 + 120);
  *(_BYTE *)(v46 + 128) = *(_BYTE *)(v47 + 128);
  *(_QWORD *)(v46 + 112) = v52;
  *(_QWORD *)(v46 + 120) = v51;
  v53 = *(_QWORD *)(v47 + 136);
  *(_BYTE *)(v46 + 144) = *(_BYTE *)(v47 + 144);
  *(_QWORD *)(v46 + 136) = v53;
  v54 = *(_QWORD *)(v47 + 152);
  *(_BYTE *)(v46 + 160) = *(_BYTE *)(v47 + 160);
  *(_QWORD *)(v46 + 152) = v54;
  v55 = *(_QWORD *)(v47 + 168);
  *(_BYTE *)(v46 + 176) = *(_BYTE *)(v47 + 176);
  *(_QWORD *)(v46 + 168) = v55;
  v56 = *(_QWORD *)(v47 + 184);
  *(_BYTE *)(v46 + 192) = *(_BYTE *)(v47 + 192);
  *(_QWORD *)(v46 + 184) = v56;
  v57 = *(_QWORD *)(v47 + 200);
  *(_BYTE *)(v46 + 208) = *(_BYTE *)(v47 + 208);
  *(_QWORD *)(v46 + 200) = v57;
  v58 = *(_QWORD *)(v47 + 216);
  *(_BYTE *)(v46 + 224) = *(_BYTE *)(v47 + 224);
  *(_QWORD *)(v46 + 216) = v58;
  v59 = *(_QWORD *)(v47 + 232);
  *(_BYTE *)(v46 + 240) = *(_BYTE *)(v47 + 240);
  *(_QWORD *)(v46 + 232) = v59;
  v60 = *(_QWORD *)(v47 + 248);
  *(_BYTE *)(v46 + 256) = *(_BYTE *)(v47 + 256);
  *(_QWORD *)(v46 + 248) = v60;
  v61 = *(_QWORD *)(v47 + 264);
  *(_BYTE *)(v46 + 272) = *(_BYTE *)(v47 + 272);
  *(_QWORD *)(v46 + 264) = v61;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v65;
}

uint64_t assignWithCopy for ANFComponentExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_DWORD *)(v12 + 4) = *(_DWORD *)(a2 + v11 + 4);
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(a2 + v11 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(a2 + v11 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  v14 = *(_QWORD *)(v13 + 48);
  *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
  *(_QWORD *)(v12 + 48) = v14;
  *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 72);
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  *(_QWORD *)(v12 + 72) = v15;
  *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
  *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
  *(_BYTE *)(v12 + 130) = *(_BYTE *)(v13 + 130);
  *(_BYTE *)(v12 + 131) = *(_BYTE *)(v13 + 131);
  *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
  *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
  *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(a2 + v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *(_QWORD *)(a2 + v19);
  v20[1] = *(_QWORD *)(a2 + v19 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[2] = v21[2];
  v20[3] = v21[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[4] = v21[4];
  v20[5] = v21[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[6] = v21[6];
  v20[7] = v21[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[9];
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_BYTE *)v23 = *(_BYTE *)(a2 + v22);
  *(_QWORD *)(v23 + 8) = *(_QWORD *)(a2 + v22 + 8);
  *(_QWORD *)(v23 + 16) = *(_QWORD *)(a2 + v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v23 + 24) = *(_BYTE *)(v24 + 24);
  *(_BYTE *)(v23 + 25) = *(_BYTE *)(v24 + 25);
  *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
  *(_QWORD *)(v23 + 40) = *(_QWORD *)(v24 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v23 + 48) = *(_BYTE *)(v24 + 48);
  v25 = a3[10];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = *(_QWORD *)(a1 + v25 + 8);
  v29 = *(_QWORD *)(a2 + v25 + 8);
  if (v28)
  {
    if (v29)
    {
      *(_QWORD *)v26 = *(_QWORD *)v27;
      *(_QWORD *)(v26 + 8) = *(_QWORD *)(v27 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v26 + 16) = *(_BYTE *)(v27 + 16);
      *(_BYTE *)(v26 + 17) = *(_BYTE *)(v27 + 17);
      *(_QWORD *)(v26 + 24) = *(_QWORD *)(v27 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE47C(v26);
      v30 = *(_OWORD *)(v27 + 16);
      *(_OWORD *)v26 = *(_OWORD *)v27;
      *(_OWORD *)(v26 + 16) = v30;
    }
  }
  else if (v29)
  {
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *(_QWORD *)(v26 + 8) = *(_QWORD *)(v27 + 8);
    *(_BYTE *)(v26 + 16) = *(_BYTE *)(v27 + 16);
    *(_BYTE *)(v26 + 17) = *(_BYTE *)(v27 + 17);
    *(_QWORD *)(v26 + 24) = *(_QWORD *)(v27 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v31 = *(_OWORD *)(v27 + 16);
    *(_OWORD *)v26 = *(_OWORD *)v27;
    *(_OWORD *)(v26 + 16) = v31;
  }
  v32 = a3[11];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  *v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  *(_QWORD *)v36 = *(_QWORD *)(a2 + v35);
  *(_QWORD *)(v36 + 8) = *(_QWORD *)(a2 + v35 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v36 + 16) = *(_BYTE *)(v37 + 16);
  *(_BYTE *)(v36 + 17) = *(_BYTE *)(v37 + 17);
  v38 = a3[13];
  v39 = a1 + v38;
  v40 = a2 + v38;
  *(_QWORD *)v39 = *(_QWORD *)(a2 + v38);
  *(_QWORD *)(v39 + 8) = *(_QWORD *)(a2 + v38 + 8);
  *(_QWORD *)(v39 + 16) = *(_QWORD *)(a2 + v38 + 16);
  *(_QWORD *)(v39 + 24) = *(_QWORD *)(a2 + v38 + 24);
  *(_QWORD *)(v39 + 32) = *(_QWORD *)(a2 + v38 + 32);
  *(_QWORD *)(v39 + 40) = *(_QWORD *)(a2 + v38 + 40);
  *(_QWORD *)(v39 + 48) = *(_QWORD *)(a2 + v38 + 48);
  *(_QWORD *)(v39 + 56) = *(_QWORD *)(a2 + v38 + 56);
  *(_QWORD *)(v39 + 64) = *(_QWORD *)(a2 + v38 + 64);
  *(_QWORD *)(v39 + 72) = *(_QWORD *)(a2 + v38 + 72);
  *(_QWORD *)(v39 + 80) = *(_QWORD *)(a2 + v38 + 80);
  *(_QWORD *)(v39 + 88) = *(_QWORD *)(a2 + v38 + 88);
  *(_QWORD *)(v39 + 96) = *(_QWORD *)(a2 + v38 + 96);
  *(_QWORD *)(v39 + 104) = *(_QWORD *)(a2 + v38 + 104);
  *(_QWORD *)(v39 + 112) = *(_QWORD *)(a2 + v38 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41 = *(_QWORD *)(v40 + 120);
  *(_BYTE *)(v39 + 128) = *(_BYTE *)(v40 + 128);
  *(_QWORD *)(v39 + 120) = v41;
  v42 = *(_QWORD *)(v40 + 136);
  *(_BYTE *)(v39 + 144) = *(_BYTE *)(v40 + 144);
  *(_QWORD *)(v39 + 136) = v42;
  v43 = *(_QWORD *)(v40 + 152);
  *(_BYTE *)(v39 + 160) = *(_BYTE *)(v40 + 160);
  *(_QWORD *)(v39 + 152) = v43;
  v44 = *(_QWORD *)(v40 + 168);
  *(_BYTE *)(v39 + 176) = *(_BYTE *)(v40 + 176);
  *(_QWORD *)(v39 + 168) = v44;
  v45 = *(_QWORD *)(v40 + 184);
  *(_BYTE *)(v39 + 192) = *(_BYTE *)(v40 + 192);
  *(_QWORD *)(v39 + 184) = v45;
  v46 = *(_QWORD *)(v40 + 200);
  *(_BYTE *)(v39 + 208) = *(_BYTE *)(v40 + 208);
  *(_QWORD *)(v39 + 200) = v46;
  v47 = *(_QWORD *)(v40 + 216);
  *(_BYTE *)(v39 + 224) = *(_BYTE *)(v40 + 224);
  *(_QWORD *)(v39 + 216) = v47;
  v48 = *(_QWORD *)(v40 + 232);
  *(_BYTE *)(v39 + 240) = *(_BYTE *)(v40 + 240);
  *(_QWORD *)(v39 + 232) = v48;
  v49 = *(_QWORD *)(v40 + 248);
  *(_BYTE *)(v39 + 256) = *(_BYTE *)(v40 + 256);
  *(_QWORD *)(v39 + 248) = v49;
  v50 = *(_QWORD *)(v40 + 264);
  *(_BYTE *)(v39 + 272) = *(_BYTE *)(v40 + 272);
  *(_QWORD *)(v39 + 264) = v50;
  return a1;
}

uint64_t initializeWithTake for ANFComponentExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  _OWORD *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)(v13 + 127) = *(_QWORD *)(v14 + 127);
  v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  v16 = *(_OWORD *)(v14 + 112);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(v14 + 96);
  *(_OWORD *)(v13 + 112) = v16;
  v17 = *(_OWORD *)(v14 + 80);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v14 + 64);
  *(_OWORD *)(v13 + 80) = v17;
  v18 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v18;
  v19 = a1 + v12;
  v20 = a2 + v12;
  v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  v22 = a3[8];
  v23 = a3[9];
  v24 = (_OWORD *)(a1 + v22);
  v25 = (_OWORD *)(a2 + v22);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = v25[3];
  v24[2] = v25[2];
  v24[3] = v27;
  v28 = a1 + v23;
  v29 = a2 + v23;
  v30 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v30;
  *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
  *(_BYTE *)(v28 + 48) = *(_BYTE *)(v29 + 48);
  v31 = a3[10];
  v32 = a3[11];
  v33 = (_OWORD *)(a1 + v31);
  v34 = (_OWORD *)(a2 + v31);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  *(_OWORD *)(a1 + v32) = *(_OWORD *)(a2 + v32);
  v36 = a3[12];
  v37 = a3[13];
  v38 = a1 + v36;
  v39 = a2 + v36;
  *(_WORD *)(v38 + 16) = *(_WORD *)(v39 + 16);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  memcpy((void *)(a1 + v37), (const void *)(a2 + v37), 0x111uLL);
  return a1;
}

uint64_t assignWithTake for ANFComponentExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_DWORD *)(v12 + 4) = *(_DWORD *)(a2 + v11 + 4);
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(a2 + v11 + 8);
  v14 = *(_QWORD *)(a2 + v11 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 24) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  v15 = *(_QWORD *)(v13 + 48);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 48) = v15;
  *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
  *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
  *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
  *(_BYTE *)(v12 + 130) = *(_BYTE *)(v13 + 130);
  *(_BYTE *)(v12 + 131) = *(_BYTE *)(v13 + 131);
  *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
  *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
  *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  v20 = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 32) = v20;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  v24 = *(_QWORD *)(a2 + v21 + 8);
  *v22 = *(_QWORD *)(a2 + v21);
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v25 = v23[3];
  v22[2] = v23[2];
  v22[3] = v25;
  swift_bridgeObjectRelease();
  v26 = v23[5];
  v22[4] = v23[4];
  v22[5] = v26;
  swift_bridgeObjectRelease();
  v27 = v23[7];
  v22[6] = v23[6];
  v22[7] = v27;
  swift_bridgeObjectRelease();
  v28 = a3[9];
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_BYTE *)v29 = *(_BYTE *)(a2 + v28);
  v31 = *(_QWORD *)(a2 + v28 + 16);
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(a2 + v28 + 8);
  *(_QWORD *)(v29 + 16) = v31;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v29 + 24) = *(_BYTE *)(v30 + 24);
  *(_BYTE *)(v29 + 25) = *(_BYTE *)(v30 + 25);
  v32 = *(_QWORD *)(v30 + 40);
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
  *(_QWORD *)(v29 + 40) = v32;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v29 + 48) = *(_BYTE *)(v30 + 48);
  v33 = a3[10];
  v34 = a1 + v33;
  v35 = a2 + v33;
  if (!*(_QWORD *)(a1 + v33 + 8))
    goto LABEL_5;
  v36 = *(_QWORD *)(v35 + 8);
  if (!v36)
  {
    sub_1D57EE47C(v34);
LABEL_5:
    v37 = *(_OWORD *)(v35 + 16);
    *(_OWORD *)v34 = *(_OWORD *)v35;
    *(_OWORD *)(v34 + 16) = v37;
    goto LABEL_6;
  }
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *(_QWORD *)(v34 + 8) = v36;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v34 + 16) = *(_BYTE *)(v35 + 16);
  *(_BYTE *)(v34 + 17) = *(_BYTE *)(v35 + 17);
  *(_QWORD *)(v34 + 24) = *(_QWORD *)(v35 + 24);
  swift_bridgeObjectRelease();
LABEL_6:
  v38 = a3[11];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (uint64_t *)(a2 + v38);
  v42 = *v40;
  v41 = v40[1];
  *v39 = v42;
  v39[1] = v41;
  swift_bridgeObjectRelease();
  v43 = a3[12];
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = *(_QWORD *)(a2 + v43 + 8);
  *(_QWORD *)v44 = *(_QWORD *)(a2 + v43);
  *(_QWORD *)(v44 + 8) = v46;
  swift_bridgeObjectRelease();
  *(_WORD *)(v44 + 16) = *(_WORD *)(v45 + 16);
  v47 = a3[13];
  v48 = a1 + v47;
  v49 = a2 + v47;
  v50 = *(_OWORD *)(v49 + 16);
  *(_OWORD *)v48 = *(_OWORD *)v49;
  *(_OWORD *)(v48 + 16) = v50;
  v51 = *(_OWORD *)(v49 + 48);
  *(_OWORD *)(v48 + 32) = *(_OWORD *)(v49 + 32);
  *(_OWORD *)(v48 + 48) = v51;
  v52 = *(_OWORD *)(v49 + 80);
  *(_OWORD *)(v48 + 64) = *(_OWORD *)(v49 + 64);
  *(_OWORD *)(v48 + 80) = v52;
  *(_OWORD *)(v48 + 96) = *(_OWORD *)(v49 + 96);
  *(_QWORD *)(v48 + 112) = *(_QWORD *)(v49 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v48 + 120) = *(_QWORD *)(v49 + 120);
  *(_BYTE *)(v48 + 128) = *(_BYTE *)(v49 + 128);
  *(_QWORD *)(v48 + 136) = *(_QWORD *)(v49 + 136);
  *(_BYTE *)(v48 + 144) = *(_BYTE *)(v49 + 144);
  *(_QWORD *)(v48 + 152) = *(_QWORD *)(v49 + 152);
  *(_BYTE *)(v48 + 160) = *(_BYTE *)(v49 + 160);
  *(_BYTE *)(v48 + 176) = *(_BYTE *)(v49 + 176);
  *(_QWORD *)(v48 + 168) = *(_QWORD *)(v49 + 168);
  v53 = *(_QWORD *)(v49 + 184);
  *(_BYTE *)(v48 + 192) = *(_BYTE *)(v49 + 192);
  *(_QWORD *)(v48 + 184) = v53;
  *(_BYTE *)(v48 + 208) = *(_BYTE *)(v49 + 208);
  *(_QWORD *)(v48 + 200) = *(_QWORD *)(v49 + 200);
  *(_BYTE *)(v48 + 224) = *(_BYTE *)(v49 + 224);
  *(_QWORD *)(v48 + 216) = *(_QWORD *)(v49 + 216);
  *(_BYTE *)(v48 + 240) = *(_BYTE *)(v49 + 240);
  *(_QWORD *)(v48 + 232) = *(_QWORD *)(v49 + 232);
  *(_BYTE *)(v48 + 256) = *(_BYTE *)(v49 + 256);
  *(_QWORD *)(v48 + 248) = *(_QWORD *)(v49 + 248);
  v54 = *(_QWORD *)(v49 + 264);
  *(_BYTE *)(v48 + 272) = *(_BYTE *)(v49 + 272);
  *(_QWORD *)(v48 + 264) = v54;
  return a1;
}

uint64_t getEnumTagSinglePayload for ANFComponentExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A5AB04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for ANFComponentExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A5ABBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_1D5A5AC64()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ANFComponentExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1D5A5AD84 + 4 * byte_1D5AE3D7F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1D5A5ADB8 + 4 * byte_1D5AE3D7A[v4]))();
}

uint64_t sub_1D5A5ADB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A5ADC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A5ADC8);
  return result;
}

uint64_t sub_1D5A5ADD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A5ADDCLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1D5A5ADE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A5ADE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ANFComponentExposureEvent.Model.CodingKeys()
{
  return &type metadata for ANFComponentExposureEvent.Model.CodingKeys;
}

unint64_t sub_1D5A5AE08()
{
  unint64_t result;

  result = qword_1EFF51C50;
  if (!qword_1EFF51C50)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE402C, &type metadata for ANFComponentExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51C50);
  }
  return result;
}

unint64_t sub_1D5A5AE50()
{
  unint64_t result;

  result = qword_1EFF51C58;
  if (!qword_1EFF51C58)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE3F9C, &type metadata for ANFComponentExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51C58);
  }
  return result;
}

unint64_t sub_1D5A5AE98()
{
  unint64_t result;

  result = qword_1EFF51C60;
  if (!qword_1EFF51C60)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE3FC4, &type metadata for ANFComponentExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51C60);
  }
  return result;
}

uint64_t sub_1D5A5AEDC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AED300 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6569566575737369 && a2 == 0xED00006174614477 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AEC9D0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

NewsAnalytics::AudioEngagementOrigin_optional __swiftcall AudioEngagementOrigin.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::AudioEngagementOrigin_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 10;
  if (v3 < 0xA)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AudioEngagementOrigin.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A5B3B8 + 4 * byte_1D5AE40B0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5A5B3B8()
{
  return 0x7473696C79616C70;
}

uint64_t sub_1D5A5B3D0()
{
  return 0x776F4E79616C70;
}

uint64_t sub_1D5A5B3E4()
{
  return 0x636172547478656ELL;
}

uint64_t sub_1D5A5B400()
{
  return 0x697242796C696164;
}

uint64_t sub_1D5A5B424()
{
  return 1869768040;
}

uint64_t sub_1D5A5B434()
{
  return 1769105779;
}

unint64_t sub_1D5A5B444()
{
  return 0xD000000000000010;
}

unint64_t sub_1D5A5B460()
{
  return 0xD000000000000016;
}

uint64_t sub_1D5A5B480()
{
  return 0x6E65746E49707061;
}

void sub_1D5A5B4A0(char *a1)
{
  sub_1D5A38C38(*a1);
}

unint64_t sub_1D5A5B4B0()
{
  unint64_t result;

  result = qword_1EFF51C68;
  if (!qword_1EFF51C68)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AudioEngagementOrigin, &type metadata for AudioEngagementOrigin);
    atomic_store(result, (unint64_t *)&qword_1EFF51C68);
  }
  return result;
}

uint64_t sub_1D5A5B4F4()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1D5AAEE80();
  sub_1D5AA841C((uint64_t)v3, v1);
  return sub_1D5AAEE98();
}

void sub_1D5A5B538(uint64_t a1)
{
  char *v1;

  sub_1D5AA841C(a1, *v1);
}

uint64_t sub_1D5A5B540()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1D5AAEE80();
  sub_1D5AA841C((uint64_t)v3, v1);
  return sub_1D5AAEE98();
}

NewsAnalytics::AudioEngagementOrigin_optional sub_1D5A5B580(Swift::String *a1)
{
  return AudioEngagementOrigin.init(rawValue:)(*a1);
}

uint64_t sub_1D5A5B58C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = AudioEngagementOrigin.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D5A5B5B0()
{
  sub_1D5A5B724();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A5B60C()
{
  sub_1D5A5B724();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for AudioEngagementOrigin(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1D5A5B6A4 + 4 * byte_1D5AE40BF[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1D5A5B6D8 + 4 * byte_1D5AE40BA[v4]))();
}

uint64_t sub_1D5A5B6D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A5B6E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A5B6E8);
  return result;
}

uint64_t sub_1D5A5B6F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A5B6FCLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1D5A5B700(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A5B708(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementOrigin()
{
  return &type metadata for AudioEngagementOrigin;
}

unint64_t sub_1D5A5B724()
{
  unint64_t result;

  result = qword_1EFF51C70;
  if (!qword_1EFF51C70)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AudioEngagementOrigin, &type metadata for AudioEngagementOrigin);
    atomic_store(result, (unint64_t *)&qword_1EFF51C70);
  }
  return result;
}

uint64_t SubscriptionData.channelCount.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t SubscriptionData.channelCount.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*SubscriptionData.channelCount.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionData.topicCount.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4);
}

uint64_t SubscriptionData.topicCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*SubscriptionData.topicCount.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionData.subscribedTagList.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = v2;
  return result;
}

uint64_t (*SubscriptionData.subscribedTagList.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionData.autoSubscribedTagList.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionData.autoSubscribedTagList.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = v2;
  return result;
}

uint64_t (*SubscriptionData.autoSubscribedTagList.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionData.paidSubscribedTagList.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionData.paidSubscribedTagList.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = v2;
  return result;
}

uint64_t (*SubscriptionData.paidSubscribedTagList.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionData.webAccessTagList.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionData.webAccessTagList.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = v2;
  return result;
}

uint64_t (*SubscriptionData.webAccessTagList.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionData.mutedTagList.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionData.mutedTagList.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = v2;
  return result;
}

uint64_t (*SubscriptionData.mutedTagList.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionData.favoritesSportsTopicCount.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 48);
}

uint64_t SubscriptionData.favoritesSportsTopicCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 48) = result;
  return result;
}

uint64_t (*SubscriptionData.favoritesSportsTopicCount.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionData.favoritesTagsTopicCount.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 52);
}

uint64_t SubscriptionData.favoritesTagsTopicCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 52) = result;
  return result;
}

uint64_t (*SubscriptionData.favoritesTagsTopicCount.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionData.init(channelCount:topicCount:subscribedTagList:autoSubscribedTagList:paidSubscribedTagList:webAccessTagList:mutedTagList:favoritesSportsTopicCount:favoritesTagsTopicCount:)@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, int a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v10 = *a3;
  v11 = *a4;
  v12 = *a5;
  v13 = *a6;
  v14 = *a7;
  *(_DWORD *)a9 = result;
  *(_DWORD *)(a9 + 4) = a2;
  *(_QWORD *)(a9 + 8) = v10;
  *(_QWORD *)(a9 + 16) = v11;
  *(_QWORD *)(a9 + 24) = v12;
  *(_QWORD *)(a9 + 32) = v13;
  *(_QWORD *)(a9 + 40) = v14;
  *(_DWORD *)(a9 + 48) = a8;
  *(_DWORD *)(a9 + 52) = a10;
  return result;
}

uint64_t sub_1D5A5B960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A5BB64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A5B984()
{
  sub_1D57B2408();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A5B9AC()
{
  sub_1D57B2408();
  return sub_1D5AAEEE0();
}

uint64_t assignWithCopy for SubscriptionData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  return a1;
}

uint64_t assignWithTake for SubscriptionData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for SubscriptionData.CodingKeys()
{
  return &type metadata for SubscriptionData.CodingKeys;
}

unint64_t sub_1D5A5BB20()
{
  unint64_t result;

  result = qword_1EFF51C78;
  if (!qword_1EFF51C78)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE437C, &type metadata for SubscriptionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51C78);
  }
  return result;
}

uint64_t sub_1D5A5BB64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x436C656E6E616863 && a2 == 0xEC000000746E756FLL;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x756F436369706F74 && a2 == 0xEA0000000000746ELL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AF24A0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AF24C0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AF24E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AF2500 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x676154646574756DLL && a2 == 0xEC0000007473694CLL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001D5AF2520 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D5AF2540)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

NewsAnalytics::MediaType_optional __swiftcall MediaType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::MediaType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t MediaType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A5BF94 + 4 * byte_1D5AE43F4[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5A5BF94()
{
  return 0x6F65646976;
}

uint64_t sub_1D5A5BFA8()
{
  return 0x6567616D69;
}

uint64_t sub_1D5A5BFBC()
{
  return 0x7972656C6C6167;
}

uint64_t sub_1D5A5BFD0()
{
  return 0x6F69647561;
}

uint64_t sub_1D5A5BFE4()
{
  return 7364973;
}

void sub_1D5A5BFF4(char *a1)
{
  sub_1D5A35044(*a1);
}

unint64_t sub_1D5A5C004()
{
  unint64_t result;

  result = qword_1EFF51C80;
  if (!qword_1EFF51C80)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MediaType, &type metadata for MediaType);
    atomic_store(result, (unint64_t *)&qword_1EFF51C80);
  }
  return result;
}

void sub_1D5A5C048()
{
  char *v0;

  sub_1D5A813C4(*v0);
}

void sub_1D5A5C050()
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A5C08C()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5A5C100(uint64_t a1)
{
  char *v1;

  sub_1D5AAA494(a1, *v1);
}

NewsAnalytics::MediaType_optional sub_1D5A5C108(Swift::String *a1)
{
  return MediaType.init(rawValue:)(*a1);
}

uint64_t sub_1D5A5C114()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D5A5C144 + 4 * byte_1D5AE4400[*v0]))();
}

void sub_1D5A5C144(_QWORD *a1@<X8>)
{
  *a1 = 0x6F65646976;
  a1[1] = 0xE500000000000000;
}

void sub_1D5A5C15C(_QWORD *a1@<X8>)
{
  *a1 = 0x6567616D69;
  a1[1] = 0xE500000000000000;
}

void sub_1D5A5C174(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x7972656C6C6167;
  a1[1] = v1;
}

void sub_1D5A5C18C(_QWORD *a1@<X8>)
{
  *a1 = 0x6F69647561;
  a1[1] = 0xE500000000000000;
}

void sub_1D5A5C1A4(_QWORD *a1@<X8>)
{
  *a1 = 7364973;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1D5A5C1B8()
{
  sub_1D5A5C32C();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A5C214()
{
  sub_1D5A5C32C();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for MediaType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D5A5C2AC + 4 * byte_1D5AE440B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D5A5C2E0 + 4 * byte_1D5AE4406[v4]))();
}

uint64_t sub_1D5A5C2E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A5C2E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A5C2F0);
  return result;
}

uint64_t sub_1D5A5C2FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A5C304);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D5A5C308(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A5C310(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaType()
{
  return &type metadata for MediaType;
}

unint64_t sub_1D5A5C32C()
{
  unint64_t result;

  result = qword_1ED9CD058;
  if (!qword_1ED9CD058)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for MediaType, &type metadata for MediaType);
    atomic_store(result, (unint64_t *)&qword_1ED9CD058);
  }
  return result;
}

uint64_t sub_1D5A5C370(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CCC90, MEMORY[0x1E0CF8078]);
}

uint64_t static ViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CD678, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCC90, a1);
}

uint64_t sub_1D5A5C3B0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CD060, MEMORY[0x1E0CF8380]);
}

uint64_t static ViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CD680, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CD060, a1);
}

uint64_t ViewEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D5A5C428();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void sub_1D5A5C428()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C7298)
  {
    sub_1D57C6260();
    sub_1D57C62A4();
    v0 = sub_1D5AADB48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C7298);
  }
}

uint64_t ViewEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D5A5C428();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ViewEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t ViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D5A5C428();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t ViewEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_WORD *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

NewsAnalytics::ViewEvent::Model __swiftcall ViewEvent.Model.init(viewData:)(NewsAnalytics::ViewEvent::Model viewData)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;

  v2 = *(_QWORD *)(viewData.viewData.viewSessionID._countAndFlagsBits + 8);
  v3 = *(_WORD *)(viewData.viewData.viewSessionID._countAndFlagsBits + 16);
  *(_QWORD *)v1 = *(_QWORD *)viewData.viewData.viewSessionID._countAndFlagsBits;
  *(_QWORD *)(v1 + 8) = v2;
  *(_WORD *)(v1 + 16) = v3;
  return viewData;
}

uint64_t sub_1D5A5C540()
{
  return 0x6174614477656976;
}

uint64_t sub_1D5A5C558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5A5C5EC()
{
  sub_1D5A5C754();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A5C614()
{
  sub_1D5A5C754();
  return sub_1D5AAEEE0();
}

uint64_t ViewEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  _QWORD v11[3];
  __int16 v12;

  sub_1D5A5C8DC(0, &qword_1EFF51C88, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v11[0] = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v11 - v5;
  v8 = *v1;
  v7 = v1[1];
  v9 = *((_WORD *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A5C754();
  sub_1D5AAEEC8();
  v11[1] = v8;
  v11[2] = v7;
  v12 = v9;
  sub_1D57C62A4();
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v11[0] + 8))(v6, v4);
}

unint64_t sub_1D5A5C754()
{
  unint64_t result;

  result = qword_1EFF51C90;
  if (!qword_1EFF51C90)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE46A0, &type metadata for ViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51C90);
  }
  return result;
}

uint64_t ViewEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int16 v11;
  _QWORD v13[3];
  __int16 v14;

  sub_1D5A5C8DC(0, qword_1EFF51C98, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A5C754();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D57C6260();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v10 = v13[2];
    v11 = v14;
    *(_QWORD *)a2 = v13[1];
    *(_QWORD *)(a2 + 8) = v10;
    *(_WORD *)(a2 + 16) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A5C8DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A5C754();
    v7 = a3(a1, &type metadata for ViewEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A5C938@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A5C94C(_QWORD *a1)
{
  return ViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A5C960@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CD678, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCC90, a1);
}

uint64_t sub_1D5A5C984@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CD680, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CD060, a1);
}

uint64_t sub_1D5A5C9A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D5A5C428();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t initializeBufferWithCopyOfBuffer for ViewEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5A5C428();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for ViewEvent(uint64_t a1)
{
  uint64_t v2;

  sub_1D5A5C428();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for ViewEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5A5C428();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for ViewEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5A5C428();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for ViewEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5A5C428();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for ViewEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5A5C428();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ViewEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A5CB78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5A5C428();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ViewEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A5CBC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5A5C428();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ViewEvent()
{
  uint64_t result;

  result = qword_1ED9CC5C8;
  if (!qword_1ED9CC5C8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D5A5CC3C()
{
  unint64_t v0;

  sub_1D5A5C428();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for ViewEvent.Model()
{
  return &type metadata for ViewEvent.Model;
}

uint64_t storeEnumTagSinglePayload for ViewEvent.Model.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5A5CCF4 + 4 * byte_1D5AE4528[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5A5CD14 + 4 * byte_1D5AE452D[v4]))();
}

_BYTE *sub_1D5A5CCF4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5A5CD14(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A5CD1C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A5CD24(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A5CD2C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A5CD34(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ViewEvent.Model.CodingKeys()
{
  return &type metadata for ViewEvent.Model.CodingKeys;
}

unint64_t sub_1D5A5CD54()
{
  unint64_t result;

  result = qword_1EFF51CC8;
  if (!qword_1EFF51CC8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE4678, &type metadata for ViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51CC8);
  }
  return result;
}

unint64_t sub_1D5A5CD9C()
{
  unint64_t result;

  result = qword_1EFF51CD0;
  if (!qword_1EFF51CD0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE45E8, &type metadata for ViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51CD0);
  }
  return result;
}

unint64_t sub_1D5A5CDE4()
{
  unint64_t result;

  result = qword_1EFF51CD8;
  if (!qword_1EFF51CD8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE4610, &type metadata for ViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51CD8);
  }
  return result;
}

NewsAnalytics::TextSize_optional __swiftcall TextSize.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::TextSize_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 13;
  if (v3 < 0xD)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1D5A5CE80(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D5A35698(*a1, *a2);
}

unint64_t sub_1D5A5CE90()
{
  unint64_t result;

  result = qword_1EFF51CE0;
  if (!qword_1EFF51CE0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for TextSize, &type metadata for TextSize);
    atomic_store(result, (unint64_t *)&qword_1EFF51CE0);
  }
  return result;
}

uint64_t sub_1D5A5CED4()
{
  sub_1D5AAEE80();
  TextSize.rawValue.getter();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5A5CF38()
{
  TextSize.rawValue.getter();
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5A5CF88()
{
  sub_1D5AAEE80();
  TextSize.rawValue.getter();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::TextSize_optional sub_1D5A5CFE8(Swift::String *a1)
{
  return TextSize.init(rawValue:)(*a1);
}

uint64_t sub_1D5A5CFF4()
{
  sub_1D57A01A0();
  return sub_1D5AAE928();
}

uint64_t storeEnumTagSinglePayload for TextSize(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1D5A5D09C + 4 * byte_1D5AE4702[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1D5A5D0D0 + 4 * byte_1D5AE46FD[v4]))();
}

uint64_t sub_1D5A5D0D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A5D0D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A5D0E0);
  return result;
}

uint64_t sub_1D5A5D0EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A5D0F4);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1D5A5D0F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A5D100(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextSize()
{
  return &type metadata for TextSize;
}

uint64_t sub_1D5A5D11C(uint64_t a1)
{
  return sub_1D57A3C64(a1, 0xD000000000000015, 0x80000001D5AF25A0, (uint64_t *)&unk_1ED9CF0E0);
}

uint64_t static Settings.AppIconBadge.source.getter()
{
  return sub_1D57A73FC(&qword_1ED9CF0F0);
}

uint64_t static Settings.AppIconBadge.reportedActive.getter()
{
  return sub_1D57A73FC(&qword_1ED9CE528);
}

uint64_t static Settings.AppIconBadge.reportedSource.getter()
{
  return sub_1D57A73FC(&qword_1ED9CF0C0);
}

uint64_t sub_1D5A5D194()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AAD8E4();
  __swift_allocate_value_buffer(v0, qword_1ED9D10C8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED9D10C8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0DB58D0], v0);
}

uint64_t static Settings.AppIconBadge.AppIconBadgeSource.dataType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED9D10E8 != -1)
    swift_once();
  v2 = sub_1D5AAD8E4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED9D10C8);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static Settings.AppIconBadge.AppIconBadgeSource.dataType.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED9D10E8 != -1)
    swift_once();
  v2 = sub_1D5AAD8E4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED9D10C8);
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static Settings.AppIconBadge.AppIconBadgeSource.dataType.modify())()
{
  uint64_t v0;

  if (qword_1ED9D10E8 != -1)
    swift_once();
  v0 = sub_1D5AAD8E4();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED9D10C8);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static Settings.AppIconBadge.AppIconBadgeSource.convert(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  BOOL v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v18[4];

  sub_1D57E6B64(a1, (uint64_t)v18);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    v4 = v16 == 1937204590 && v17 == 0xE400000000000000;
    if (v4 || (sub_1D5AAEDE4() & 1) != 0)
    {
      result = swift_bridgeObjectRelease();
      *(_OWORD *)a2 = xmmword_1D5AC5810;
      return result;
    }
    v18[0] = v16;
    v18[1] = v17;
    sub_1D5A5D52C();
    sub_1D5A5D570();
    if ((sub_1D5AAE7C0() & 1) != 0)
    {
      v5 = sub_1D5AAE880();
      v6 = sub_1D5A5D840(v5, v16, v17);
      v8 = v7;
      v10 = v9;
      v12 = v11;
      swift_bridgeObjectRelease();
      v13 = MEMORY[0x1D8278C3C](v6, v8, v10, v12);
      v15 = v14;
      result = swift_bridgeObjectRelease();
      *(_QWORD *)a2 = v13;
      *(_QWORD *)(a2 + 8) = v15;
      return result;
    }
    result = swift_bridgeObjectRelease();
  }
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  return result;
}

unint64_t sub_1D5A5D52C()
{
  unint64_t result;

  result = qword_1EFF51CE8;
  if (!qword_1EFF51CE8)
  {
    result = MEMORY[0x1D8279680](MEMORY[0x1E0DEA980], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EFF51CE8);
  }
  return result;
}

unint64_t sub_1D5A5D570()
{
  unint64_t result;

  result = qword_1EFF51CF0;
  if (!qword_1EFF51CF0)
  {
    result = MEMORY[0x1D8279680](MEMORY[0x1E0DEFF48], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EFF51CF0);
  }
  return result;
}

uint64_t Settings.AppIconBadge.AppIconBadgeSource.toData()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 8);
  if (v3)
  {
    if (v3 == 1)
    {
      v4 = 0xE400000000000000;
      v5 = 1937204590;
    }
    else
    {
      result = sub_1D5AAE898();
      v5 = 0x7972756372656DLL;
      v4 = 0xE700000000000000;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v5 = 0x6E776F6E6B6E75;
  }
  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = v5;
  a1[1] = v4;
  return result;
}

Swift::String __swiftcall Settings.AppIconBadge.AppIconBadgeSource.toString()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  Swift::String result;

  v1 = *(_QWORD *)(v0 + 8);
  if (v1)
  {
    if (v1 == 1)
    {
      v2 = (void *)0xE400000000000000;
      v3 = 1937204590;
    }
    else
    {
      sub_1D5AAE898();
      v3 = 0x7972756372656DLL;
      v2 = (void *)0xE700000000000000;
    }
  }
  else
  {
    v2 = (void *)0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
  }
  result._object = v2;
  result._countAndFlagsBits = v3;
  return result;
}

uint64_t sub_1D5A5D6CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED9D10E8 != -1)
    swift_once();
  v2 = sub_1D5AAD8E4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED9D10C8);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t _s11TeaSettings0B0C13NewsAnalyticsE12AppIconBadgeV0efG6SourceO2eeoiySbAH_AHtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (!v3)
  {
    if (!v5)
    {
      v3 = 0;
      v6 = 1;
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  if (v3 != 1)
  {
    if (v5 >= 2)
    {
      if (v2 == v4 && v3 == v5)
        v6 = 1;
      else
        v6 = sub_1D5AAEDE4();
      goto LABEL_9;
    }
LABEL_8:
    v6 = 0;
LABEL_9:
    sub_1D5A5D9EC(v4, v5);
    sub_1D5A5D9EC(v2, v3);
    goto LABEL_10;
  }
  if (v5 != 1)
    goto LABEL_8;
  v3 = 1;
  v6 = 1;
LABEL_10:
  sub_1D59E4D10(v2, v3);
  sub_1D59E4D10(v4, v5);
  return v6 & 1;
}

unint64_t sub_1D5A5D840(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = sub_1D5AAE88C();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return sub_1D5AAE8EC();
  }
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for Settings.AppIconBadge()
{
  return &type metadata for Settings.AppIconBadge;
}

_QWORD *_s12AppIconBadgeV18AppIconBadgeSourceOwca(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s12AppIconBadgeV18AppIconBadgeSourceOwta(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D5A5D9EC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t ArticleLoadData.articleID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArticleLoadData.articleID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ArticleLoadData.articleID.modify())()
{
  return nullsub_1;
}

NewsAnalytics::ArticleLoadData __swiftcall ArticleLoadData.init(articleID:)(NewsAnalytics::ArticleLoadData articleID)
{
  NewsAnalytics::ArticleLoadData *v1;

  *v1 = articleID;
  return articleID;
}

uint64_t sub_1D5A5DA78()
{
  return 0x49656C6369747261;
}

uint64_t sub_1D5A5DA94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x49656C6369747261 && a2 == 0xE900000000000044)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5A5DB34()
{
  sub_1D5A5DC78();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A5DB5C()
{
  sub_1D5A5DC78();
  return sub_1D5AAEEE0();
}

uint64_t ArticleLoadData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5A5DDE0(0, &qword_1ED9D0D48, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A5DC78();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D5A5DC78()
{
  unint64_t result;

  result = qword_1ED9CF518;
  if (!qword_1ED9CF518)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE4A68, &type metadata for ArticleLoadData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CF518);
  }
  return result;
}

uint64_t ArticleLoadData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D5A5DDE0(0, &qword_1EFF51CF8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A5DC78();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECA0();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A5DDE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A5DC78();
    v7 = a3(a1, &type metadata for ArticleLoadData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A5DE44@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ArticleLoadData.init(from:)(a1, a2);
}

uint64_t sub_1D5A5DE58(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5A5DDE0(0, &qword_1ED9D0D48, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A5DC78();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for ArticleLoadData()
{
  return &type metadata for ArticleLoadData;
}

uint64_t storeEnumTagSinglePayload for ArticleLoadData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5A5DF9C + 4 * byte_1D5AE48F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5A5DFBC + 4 * byte_1D5AE48F5[v4]))();
}

_BYTE *sub_1D5A5DF9C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5A5DFBC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A5DFC4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A5DFCC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A5DFD4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A5DFDC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ArticleLoadData.CodingKeys()
{
  return &type metadata for ArticleLoadData.CodingKeys;
}

unint64_t sub_1D5A5DFFC()
{
  unint64_t result;

  result = qword_1EFF51D00;
  if (!qword_1EFF51D00)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE4A40, &type metadata for ArticleLoadData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51D00);
  }
  return result;
}

unint64_t sub_1D5A5E044()
{
  unint64_t result;

  result = qword_1ED9CF528;
  if (!qword_1ED9CF528)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE49B0, &type metadata for ArticleLoadData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CF528);
  }
  return result;
}

unint64_t sub_1D5A5E08C()
{
  unint64_t result;

  result = qword_1ED9CF520;
  if (!qword_1ED9CF520)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE49D8, &type metadata for ArticleLoadData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CF520);
  }
  return result;
}

NewsAnalytics::EmailShareResultType_optional __swiftcall EmailShareResultType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::EmailShareResultType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t EmailShareResultType.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aUnknown_91[8 * *v0];
}

uint64_t sub_1D5A5E140(char *a1, char *a2)
{
  return sub_1D5A395F4(*a1, *a2);
}

unint64_t sub_1D5A5E150()
{
  unint64_t result;

  result = qword_1EFF51D08;
  if (!qword_1EFF51D08)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EmailShareResultType, &type metadata for EmailShareResultType);
    atomic_store(result, (unint64_t *)&qword_1EFF51D08);
  }
  return result;
}

uint64_t sub_1D5A5E194()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5A5E1EC()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5A5E218()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::EmailShareResultType_optional sub_1D5A5E26C(Swift::String *a1)
{
  return EmailShareResultType.init(rawValue:)(*a1);
}

void sub_1D5A5E278(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = *(_QWORD *)&aUnknown_91[8 * *v1];
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1D5A5E294()
{
  sub_1D5A5E408();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A5E2F0()
{
  sub_1D5A5E408();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for EmailShareResultType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5A5E388 + 4 * byte_1D5AE4AC5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5A5E3BC + 4 * byte_1D5AE4AC0[v4]))();
}

uint64_t sub_1D5A5E3BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A5E3C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A5E3CCLL);
  return result;
}

uint64_t sub_1D5A5E3D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A5E3E0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5A5E3E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A5E3EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmailShareResultType()
{
  return &type metadata for EmailShareResultType;
}

unint64_t sub_1D5A5E408()
{
  unint64_t result;

  result = qword_1EFF51D10;
  if (!qword_1EFF51D10)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EmailShareResultType, &type metadata for EmailShareResultType);
    atomic_store(result, (unint64_t *)&qword_1EFF51D10);
  }
  return result;
}

uint64_t TabiRequestData.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1D5AADFB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t TabiRequestData.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1D5AADFB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*TabiRequestData.timedData.modify())()
{
  return nullsub_1;
}

uint64_t TabiRequestData.successful.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TabiRequestData() + 20));
}

uint64_t type metadata accessor for TabiRequestData()
{
  uint64_t result;

  result = qword_1ED9CF790;
  if (!qword_1ED9CF790)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t TabiRequestData.successful.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TabiRequestData();
  *(_BYTE *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*TabiRequestData.successful.modify())(_QWORD)
{
  type metadata accessor for TabiRequestData();
  return nullsub_1;
}

uint64_t TabiRequestData.init(timedData:successful:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t result;

  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for TabiRequestData();
  *(_BYTE *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t sub_1D5A5E5D8()
{
  _BYTE *v0;

  if (*v0)
    return 0x6673736563637573;
  else
    return 0x74614464656D6974;
}

uint64_t sub_1D5A5E61C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A5F158(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A5E640()
{
  sub_1D5A5E7E8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A5E668()
{
  sub_1D5A5E7E8();
  return sub_1D5AAEEE0();
}

uint64_t TabiRequestData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1D5A5EAA0(0, &qword_1ED9CEFF0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A5E7E8();
  sub_1D5AAEEC8();
  v9[15] = 0;
  sub_1D5AADFB0();
  sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
  sub_1D5AAED6C();
  if (!v1)
  {
    type metadata accessor for TabiRequestData();
    v9[14] = 1;
    sub_1D5AAED48();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5A5E7E8()
{
  unint64_t result;

  result = qword_1ED9CEBF0;
  if (!qword_1ED9CEBF0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE4DA4, &type metadata for TabiRequestData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEBF0);
  }
  return result;
}

uint64_t TabiRequestData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;

  v26 = a2;
  v4 = sub_1D5AADFB0();
  v5 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  v30 = v5;
  MEMORY[0x1E0C80A78](v4);
  v27 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A5EAA0(0, &qword_1ED9CEF80, MEMORY[0x1E0DED048]);
  v28 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v23 - v9;
  v11 = type metadata accessor for TabiRequestData();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A5E7E8();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v24 = v11;
  v25 = v13;
  v14 = v8;
  v15 = v30;
  v32 = 0;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v17 = v27;
  v16 = v28;
  v18 = v29;
  sub_1D5AAECD0();
  v19 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v20 = (uint64_t)v25;
  v19(v25, v17, v18);
  v31 = 1;
  v21 = sub_1D5AAECAC();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v16);
  *(_BYTE *)(v20 + *(int *)(v24 + 20)) = v21 & 1;
  sub_1D5A5EAFC(v20, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1D5A5EB40(v20);
}

void sub_1D5A5EAA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A5E7E8();
    v7 = a3(a1, &type metadata for TabiRequestData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A5EAFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TabiRequestData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A5EB40(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TabiRequestData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A5EB7C()
{
  return sub_1D57A8DE4(&qword_1ED9CF788, (uint64_t (*)(uint64_t))type metadata accessor for TabiRequestData, (uint64_t)&protocol conformance descriptor for TabiRequestData);
}

uint64_t sub_1D5A5EBA8()
{
  return sub_1D57A8DE4(&qword_1ED9CF780, (uint64_t (*)(uint64_t))type metadata accessor for TabiRequestData, (uint64_t)&protocol conformance descriptor for TabiRequestData);
}

uint64_t sub_1D5A5EBD4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TabiRequestData.init(from:)(a1, a2);
}

uint64_t sub_1D5A5EBE8(_QWORD *a1)
{
  return TabiRequestData.encode(to:)(a1);
}

_QWORD *initializeBufferWithCopyOfBuffer for TabiRequestData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADFB0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for TabiRequestData(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADFB0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for TabiRequestData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for TabiRequestData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for TabiRequestData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for TabiRequestData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for TabiRequestData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A5EE34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1D5AADFB0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TabiRequestData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A5EECC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADFB0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_1D5A5EF44()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADFB0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TabiRequestData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5A5F000 + 4 * byte_1D5AE4C05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D5A5F034 + 4 * asc_1D5AE4C00[v4]))();
}

uint64_t sub_1D5A5F034(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A5F03C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A5F044);
  return result;
}

uint64_t sub_1D5A5F050(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A5F058);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5A5F05C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A5F064(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TabiRequestData.CodingKeys()
{
  return &type metadata for TabiRequestData.CodingKeys;
}

unint64_t sub_1D5A5F084()
{
  unint64_t result;

  result = qword_1EFF51D18;
  if (!qword_1EFF51D18)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE4D7C, &type metadata for TabiRequestData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51D18);
  }
  return result;
}

unint64_t sub_1D5A5F0CC()
{
  unint64_t result;

  result = qword_1ED9CE468;
  if (!qword_1ED9CE468)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE4CEC, &type metadata for TabiRequestData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CE468);
  }
  return result;
}

unint64_t sub_1D5A5F114()
{
  unint64_t result;

  result = qword_1ED9CEBF8;
  if (!qword_1ED9CEBF8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE4D14, &type metadata for TabiRequestData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEBF8);
  }
  return result;
}

uint64_t sub_1D5A5F158(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74614464656D6974 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6673736563637573 && a2 == 0xEA00000000006C75)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D5A5F260(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CDF70, MEMORY[0x1E0CF8078]);
}

uint64_t static FeedLoadingSpinnerExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CD890, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CDF70, a1);
}

uint64_t sub_1D5A5F2A0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CDF88, MEMORY[0x1E0CF8380]);
}

uint64_t static FeedLoadingSpinnerExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(qword_1ED9CDFA8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CDF88, a1);
}

uint64_t FeedLoadingSpinnerExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t FeedLoadingSpinnerExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*FeedLoadingSpinnerExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t FeedLoadingSpinnerExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for FeedLoadingSpinnerExposureEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for FeedLoadingSpinnerExposureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CD898);
}

uint64_t FeedLoadingSpinnerExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadingSpinnerExposureEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedLoadingSpinnerExposureEvent.timedData.modify())(_QWORD)
{
  type metadata accessor for FeedLoadingSpinnerExposureEvent(0);
  return nullsub_1;
}

uint64_t FeedLoadingSpinnerExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadingSpinnerExposureEvent(0) + 24);
  sub_1D5A5F414();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_1D5A5F414()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C7290)
  {
    sub_1D57C6590();
    sub_1D57C65D4();
    v0 = sub_1D5AADB48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C7290);
  }
}

uint64_t FeedLoadingSpinnerExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadingSpinnerExposureEvent(0) + 24);
  sub_1D5A5F414();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedLoadingSpinnerExposureEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for FeedLoadingSpinnerExposureEvent(0);
  return nullsub_1;
}

uint64_t FeedLoadingSpinnerExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = type metadata accessor for FeedLoadingSpinnerExposureEvent(0);
  v5 = a1 + *(int *)(v4 + 20);
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + *(int *)(v4 + 24);
  sub_1D5A5F414();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
}

uint64_t FeedLoadingSpinnerExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t FeedLoadingSpinnerExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for FeedLoadingSpinnerExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for FeedLoadingSpinnerExposureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF51D90);
}

uint64_t FeedLoadingSpinnerExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadingSpinnerExposureEvent.Model(0) + 24);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t FeedLoadingSpinnerExposureEvent.Model.init(eventData:timedData:feedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v7 = *a3;
  v8 = *((_QWORD *)a3 + 1);
  v9 = *((_QWORD *)a3 + 2);
  v10 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a4, a1, v10);
  v11 = type metadata accessor for FeedLoadingSpinnerExposureEvent.Model(0);
  v12 = a4 + *(int *)(v11 + 20);
  v13 = sub_1D5AADFB0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12, a2, v13);
  v15 = a4 + *(int *)(v11 + 24);
  *(_BYTE *)v15 = v7;
  *(_QWORD *)(v15 + 8) = v8;
  *(_QWORD *)(v15 + 16) = v9;
  return result;
}

uint64_t sub_1D5A5F6A8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x74614464656D6974;
  if (*v0 != 1)
    v1 = 0x6174614464656566;
  if (*v0)
    return v1;
  else
    return 0x746144746E657665;
}

uint64_t sub_1D5A5F704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A60C9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A5F728()
{
  sub_1D5A5F958();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A5F750()
{
  sub_1D5A5F958();
  return sub_1D5AAEEE0();
}

uint64_t FeedLoadingSpinnerExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[8];
  char v14;
  __int128 v15;

  v3 = v1;
  sub_1D5A5FD0C(0, &qword_1EFF51D20, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v13[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A5F958();
  sub_1D5AAEEC8();
  v14 = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = type metadata accessor for FeedLoadingSpinnerExposureEvent.Model(0);
    v14 = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = v3 + *(int *)(v10 + 24);
    v14 = *(_BYTE *)v11;
    v15 = *(_OWORD *)(v11 + 8);
    v13[7] = 2;
    sub_1D57C65D4();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A5F958()
{
  unint64_t result;

  result = qword_1EFF51D28;
  if (!qword_1EFF51D28)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE4FD4, &type metadata for FeedLoadingSpinnerExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51D28);
  }
  return result;
}

uint64_t FeedLoadingSpinnerExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  char v33;
  __int128 v34;
  char v35;

  v24 = a2;
  v3 = sub_1D5AADFB0();
  v26 = *(_QWORD *)(v3 - 8);
  v27 = v3;
  MEMORY[0x1E0C80A78](v3);
  v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1D5AADF98();
  v5 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v29 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A5FD0C(0, &qword_1EFF51D30, MEMORY[0x1E0DED048]);
  v30 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v22 - v9;
  v11 = type metadata accessor for FeedLoadingSpinnerExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A5F958();
  v31 = v10;
  v14 = (uint64_t)v32;
  sub_1D5AAEEB0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v22 = v5;
  v23 = v8;
  v15 = (uint64_t)v13;
  v32 = a1;
  v17 = v25;
  v16 = v26;
  v18 = v27;
  v33 = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v19 = v28;
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v15, v29, v19);
  v33 = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1D5AAECD0();
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v15 + *(int *)(v11 + 20), v17, v18);
  v35 = 2;
  sub_1D57C6590();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v31, v30);
  v20 = v15 + *(int *)(v11 + 24);
  *(_BYTE *)v20 = v33;
  *(_OWORD *)(v20 + 8) = v34;
  sub_1D5A5FD68(v15, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return sub_1D5A5FDAC(v15);
}

void sub_1D5A5FD0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A5F958();
    v7 = a3(a1, &type metadata for FeedLoadingSpinnerExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A5FD68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedLoadingSpinnerExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A5FDAC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedLoadingSpinnerExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A5FDE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedLoadingSpinnerExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A5FDFC(_QWORD *a1)
{
  return FeedLoadingSpinnerExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A5FE10@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CD890, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CDF70, a1);
}

uint64_t sub_1D5A5FE34@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(qword_1ED9CDFA8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CDF88, a1);
}

uint64_t sub_1D5A5FE58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + *(int *)(a1 + 24);
  sub_1D5A5F414();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedLoadingSpinnerExposureEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D5A5F414();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for FeedLoadingSpinnerExposureEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  sub_1D5A5F414();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for FeedLoadingSpinnerExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D5A5F414();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for FeedLoadingSpinnerExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D5A5F414();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for FeedLoadingSpinnerExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D5A5F414();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for FeedLoadingSpinnerExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D5A5F414();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedLoadingSpinnerExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A60328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1D5A5F414();
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for FeedLoadingSpinnerExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A603CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1D5A5F414();
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5A6046C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D5A5F414();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedLoadingSpinnerExposureEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    *v13 = *v14;
    v15 = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
    *((_QWORD *)v13 + 2) = v15;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FeedLoadingSpinnerExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedLoadingSpinnerExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = v14;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedLoadingSpinnerExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for FeedLoadingSpinnerExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  return a1;
}

uint64_t assignWithTake for FeedLoadingSpinnerExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  v15 = *(_QWORD *)(v13 + 8);
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 8) = v15;
  *(_QWORD *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedLoadingSpinnerExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A60900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 16);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedLoadingSpinnerExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A609C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 16) = a2;
  return result;
}

uint64_t sub_1D5A60A6C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedLoadingSpinnerExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5A60B44 + 4 * byte_1D5AE4E05[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5A60B78 + 4 * byte_1D5AE4E00[v4]))();
}

uint64_t sub_1D5A60B78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A60B80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A60B88);
  return result;
}

uint64_t sub_1D5A60B94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A60B9CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5A60BA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A60BA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedLoadingSpinnerExposureEvent.Model.CodingKeys()
{
  return &type metadata for FeedLoadingSpinnerExposureEvent.Model.CodingKeys;
}

unint64_t sub_1D5A60BC8()
{
  unint64_t result;

  result = qword_1EFF51DD0;
  if (!qword_1EFF51DD0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE4FAC, &type metadata for FeedLoadingSpinnerExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51DD0);
  }
  return result;
}

unint64_t sub_1D5A60C10()
{
  unint64_t result;

  result = qword_1EFF51DD8;
  if (!qword_1EFF51DD8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE4F1C, &type metadata for FeedLoadingSpinnerExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51DD8);
  }
  return result;
}

unint64_t sub_1D5A60C58()
{
  unint64_t result;

  result = qword_1EFF51DE0;
  if (!qword_1EFF51DE0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE4F44, &type metadata for FeedLoadingSpinnerExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51DE0);
  }
  return result;
}

uint64_t sub_1D5A60C9C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1D5A60E08(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9D0EC8, MEMORY[0x1E0CF8078]);
}

uint64_t static FeedGroupLayoutEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9D0EE0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9D0EC8, a1);
}

uint64_t sub_1D5A60E48(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9D0EE8, MEMORY[0x1E0CF8380]);
}

uint64_t static FeedGroupLayoutEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9D0F08, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9D0EE8, a1);
}

uint64_t FeedGroupLayoutEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t FeedGroupLayoutEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*FeedGroupLayoutEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t FeedGroupLayoutEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for FeedGroupLayoutEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9D0F10);
}

uint64_t FeedGroupLayoutEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedGroupLayoutEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for FeedGroupLayoutEvent(0);
  return nullsub_1;
}

uint64_t FeedGroupLayoutEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedGroupLayoutEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedGroupLayoutEvent.groupData.modify())(_QWORD)
{
  type metadata accessor for FeedGroupLayoutEvent(0);
  return nullsub_1;
}

uint64_t FeedGroupLayoutEvent.feedGroupLayoutData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9CF180, (void (*)(void))sub_1D57C8BE0, (void (*)(void))sub_1D57C8C24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedGroupLayoutEvent.feedGroupLayoutData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9CF180, (void (*)(void))sub_1D57C8BE0, (void (*)(void))sub_1D57C8C24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedGroupLayoutEvent.feedGroupLayoutData.modify())(_QWORD)
{
  type metadata accessor for FeedGroupLayoutEvent(0);
  return nullsub_1;
}

uint64_t FeedGroupLayoutEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D58DAC70(type metadata accessor for FeedGroupLayoutEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t FeedGroupLayoutEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent(0) + 32);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedGroupLayoutEvent.timedData.modify())(_QWORD)
{
  type metadata accessor for FeedGroupLayoutEvent(0);
  return nullsub_1;
}

uint64_t FeedGroupLayoutEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedGroupLayoutEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent(0) + 36);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedGroupLayoutEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for FeedGroupLayoutEvent(0);
  return nullsub_1;
}

uint64_t FeedGroupLayoutEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for FeedGroupLayoutEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9CF180, (void (*)(void))sub_1D57C8BE0, (void (*)(void))sub_1D57C8C24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
}

uint64_t FeedGroupLayoutEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t FeedGroupLayoutEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent.Model(0) + 20);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FeedGroupLayoutEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF51E58);
}

uint64_t FeedGroupLayoutEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent.Model(0) + 24);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22 = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  v23 = *(_QWORD *)(v3 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(v3 + 128);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D5802B14((uint64_t)v16);
}

uint64_t FeedGroupLayoutEvent.Model.feedGroupLayoutData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FeedGroupLayoutEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t FeedGroupLayoutEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D58DAC70(type metadata accessor for FeedGroupLayoutEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t FeedGroupLayoutEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedGroupLayoutEvent.Model(0) + 36));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupLayoutEvent.Model.init(eventData:feedData:groupData:feedGroupLayoutData:timedData:viewData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, __int128 *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v10 = *a2;
  v11 = *((_QWORD *)a2 + 1);
  v12 = *((_QWORD *)a2 + 2);
  v31 = a3[6];
  v32 = a3[7];
  v33 = *((_QWORD *)a3 + 16);
  v27 = a3[2];
  v28 = a3[3];
  v29 = a3[4];
  v30 = a3[5];
  v25 = *a3;
  v26 = a3[1];
  v13 = *a4;
  v14 = *a6;
  v15 = a6[1];
  v16 = *((_WORD *)a6 + 8);
  v17 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a7, a1, v17);
  v18 = (int *)type metadata accessor for FeedGroupLayoutEvent.Model(0);
  v19 = a7 + v18[5];
  *(_BYTE *)v19 = v10;
  *(_QWORD *)(v19 + 8) = v11;
  *(_QWORD *)(v19 + 16) = v12;
  v20 = a7 + v18[6];
  *(_OWORD *)(v20 + 96) = v31;
  *(_OWORD *)(v20 + 112) = v32;
  *(_QWORD *)(v20 + 128) = v33;
  *(_OWORD *)(v20 + 32) = v27;
  *(_OWORD *)(v20 + 48) = v28;
  *(_OWORD *)(v20 + 64) = v29;
  *(_OWORD *)(v20 + 80) = v30;
  *(_OWORD *)v20 = v25;
  *(_OWORD *)(v20 + 16) = v26;
  *(_BYTE *)(a7 + v18[7]) = v13;
  v21 = a7 + v18[8];
  v22 = sub_1D5AADFB0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, a5, v22);
  v24 = a7 + v18[9];
  *(_QWORD *)v24 = v14;
  *(_QWORD *)(v24 + 8) = v15;
  *(_WORD *)(v24 + 16) = v16;
  return result;
}

uint64_t sub_1D5A617A8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A617DC + 4 * byte_1D5AE5030[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5A617DC()
{
  return 0x6174614464656566;
}

uint64_t sub_1D5A617F4()
{
  return 0x74614470756F7267;
}

unint64_t sub_1D5A61808()
{
  return 0xD000000000000013;
}

uint64_t sub_1D5A61824()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D5A61838()
{
  return 0x6174614477656976;
}

uint64_t sub_1D5A61850()
{
  sub_1D5A61B94();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A61878()
{
  sub_1D5A61B94();
  return sub_1D5AAEEE0();
}

uint64_t FeedGroupLayoutEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  char *v11;
  __int128 *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  char v33;
  __int128 v34;

  v3 = v1;
  sub_1D5A6220C(0, &qword_1EFF51DE8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A61B94();
  sub_1D5AAEEC8();
  LOBYTE(v23) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for FeedGroupLayoutEvent.Model(0);
    v11 = (char *)(v3 + v10[5]);
    v33 = *v11;
    v34 = *(_OWORD *)(v11 + 8);
    v32 = 1;
    sub_1D57C65D4();
    sub_1D5AAED6C();
    v12 = (__int128 *)(v3 + v10[6]);
    v13 = v12[7];
    v29 = v12[6];
    v30 = v13;
    v31 = *((_QWORD *)v12 + 16);
    v14 = v12[3];
    v25 = v12[2];
    v26 = v14;
    v15 = v12[5];
    v27 = v12[4];
    v28 = v15;
    v16 = v12[1];
    v23 = *v12;
    v24 = v16;
    v22 = 2;
    sub_1D57C5FEC();
    sub_1D5AAED6C();
    LOBYTE(v23) = *(_BYTE *)(v3 + v10[7]);
    v22 = 3;
    sub_1D57C8C24();
    sub_1D5AAED18();
    LOBYTE(v23) = 4;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v17 = (uint64_t *)(v3 + v10[9]);
    v18 = *v17;
    v19 = v17[1];
    LOWORD(v17) = *((_WORD *)v17 + 8);
    *(_QWORD *)&v23 = v18;
    *((_QWORD *)&v23 + 1) = v19;
    LOWORD(v24) = (_WORD)v17;
    v22 = 5;
    sub_1D57C62A4();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A61B94()
{
  unint64_t result;

  result = qword_1EFF51DF0;
  if (!qword_1EFF51DF0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE5274, &type metadata for FeedGroupLayoutEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51DF0);
  }
  return result;
}

uint64_t FeedGroupLayoutEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  char *v23;
  uint64_t v24;
  __int16 v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  __int16 v39;
  char v40;
  char v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;

  v29 = a2;
  v32 = sub_1D5AADFB0();
  v31 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v30 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1D5AADF98();
  v4 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v34 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A6220C(0, &qword_1EFF51DF8, MEMORY[0x1E0DED048]);
  v35 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v28 - v8;
  v10 = (int *)type metadata accessor for FeedGroupLayoutEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A61B94();
  v36 = v9;
  v13 = v50;
  sub_1D5AAEEB0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v14 = v7;
  v50 = v4;
  v15 = v32;
  v42[0] = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v16 = v33;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v12, v34, v16);
  LOBYTE(v37) = 1;
  sub_1D57C6590();
  sub_1D5AAECD0();
  v17 = &v12[v10[5]];
  *v17 = v42[0];
  *(_OWORD *)(v17 + 8) = *(_OWORD *)&v42[8];
  v41 = 2;
  sub_1D57C5FA8();
  sub_1D5AAECD0();
  v18 = &v12[v10[6]];
  v19 = v48;
  *((_OWORD *)v18 + 6) = v47;
  *((_OWORD *)v18 + 7) = v19;
  *((_QWORD *)v18 + 16) = v49;
  v20 = v44;
  *((_OWORD *)v18 + 2) = v43;
  *((_OWORD *)v18 + 3) = v20;
  v21 = v46;
  *((_OWORD *)v18 + 4) = v45;
  *((_OWORD *)v18 + 5) = v21;
  v22 = *(_OWORD *)&v42[16];
  *(_OWORD *)v18 = *(_OWORD *)v42;
  *((_OWORD *)v18 + 1) = v22;
  v40 = 3;
  sub_1D57C8BE0();
  v34 = 0;
  sub_1D5AAEC7C();
  v12[v10[7]] = v37;
  LOBYTE(v37) = 4;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v23 = v30;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v12[v10[8]], v23, v15);
  v40 = 5;
  sub_1D57C6260();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v36, v35);
  v24 = v38;
  v25 = v39;
  v26 = &v12[v10[9]];
  *(_QWORD *)v26 = v37;
  *((_QWORD *)v26 + 1) = v24;
  *((_WORD *)v26 + 8) = v25;
  sub_1D5A62268((uint64_t)v12, v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1D5A622AC((uint64_t)v12);
}

void sub_1D5A6220C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A61B94();
    v7 = a3(a1, &type metadata for FeedGroupLayoutEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A62268(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedGroupLayoutEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A622AC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedGroupLayoutEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A622E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedGroupLayoutEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A622FC(_QWORD *a1)
{
  return FeedGroupLayoutEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A62310@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9D0EE0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9D0EC8, a1);
}

uint64_t sub_1D5A62334@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9D0F08, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9D0EE8, a1);
}

uint64_t getEnumTagSinglePayload for FeedGroupLayoutEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A62364(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9CF180, (void (*)(void))sub_1D57C8BE0, (void (*)(void))sub_1D57C8C24);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D57A8C9C();
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for FeedGroupLayoutEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A624F4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9CF180, (void (*)(void))sub_1D57C8BE0, (void (*)(void))sub_1D57C8C24);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D57A8C9C();
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for FeedGroupLayoutEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A6268C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1D5AADFB0();
    v10 = a1 + *(int *)(a3 + 32);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 16);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedGroupLayoutEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A62744(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24) + 16) = (a2 - 1);
      return result;
    }
    v10 = sub_1D5AADFB0();
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1D5A627EC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedGroupLayoutEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D5A628E0 + 4 * byte_1D5AE503B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D5A62914 + 4 * byte_1D5AE5036[v4]))();
}

uint64_t sub_1D5A62914(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A6291C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A62924);
  return result;
}

uint64_t sub_1D5A62930(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A62938);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D5A6293C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A62944(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupLayoutEvent.Model.CodingKeys()
{
  return &type metadata for FeedGroupLayoutEvent.Model.CodingKeys;
}

unint64_t sub_1D5A62964()
{
  unint64_t result;

  result = qword_1EFF51EA0;
  if (!qword_1EFF51EA0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE524C, &type metadata for FeedGroupLayoutEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51EA0);
  }
  return result;
}

unint64_t sub_1D5A629AC()
{
  unint64_t result;

  result = qword_1EFF51EA8;
  if (!qword_1EFF51EA8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE51BC, &type metadata for FeedGroupLayoutEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51EA8);
  }
  return result;
}

unint64_t sub_1D5A629F4()
{
  unint64_t result;

  result = qword_1EFF51EB0;
  if (!qword_1EFF51EB0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE51E4, &type metadata for FeedGroupLayoutEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51EB0);
  }
  return result;
}

__n128 FormatSubgroupData.init(layoutIdentifier:layoutReferences:themeIdentifiers:themeReferences:formatVersion:parentGroupName:contentIdentifier:contentSubgroupIdentifier:contentPublishDate:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __n128 a11, uint64_t a12, uint64_t a13)
{
  __n128 result;

  result = a11;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(__n128 *)(a9 + 80) = a11;
  *(_QWORD *)(a9 + 96) = a12;
  *(_QWORD *)(a9 + 104) = a13;
  return result;
}

uint64_t FormatSubgroupData.layoutIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSubgroupData.layoutIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FormatSubgroupData.layoutIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t FormatSubgroupData.layoutReferences.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSubgroupData.layoutReferences.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*FormatSubgroupData.layoutReferences.modify())()
{
  return nullsub_1;
}

uint64_t FormatSubgroupData.themeIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSubgroupData.themeIdentifiers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*FormatSubgroupData.themeIdentifiers.modify())()
{
  return nullsub_1;
}

uint64_t FormatSubgroupData.themeReferences.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSubgroupData.themeReferences.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*FormatSubgroupData.themeReferences.modify())()
{
  return nullsub_1;
}

uint64_t FormatSubgroupData.formatVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSubgroupData.formatVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*FormatSubgroupData.formatVersion.modify())()
{
  return nullsub_1;
}

uint64_t FormatSubgroupData.parentGroupName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSubgroupData.parentGroupName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*FormatSubgroupData.parentGroupName.modify())()
{
  return nullsub_1;
}

uint64_t FormatSubgroupData.contentIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSubgroupData.contentIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return result;
}

uint64_t (*FormatSubgroupData.contentIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t FormatSubgroupData.contentSubgroupIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSubgroupData.contentSubgroupIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  return result;
}

uint64_t (*FormatSubgroupData.contentSubgroupIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t FormatSubgroupData.contentPublishDate.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 104);
}

uint64_t FormatSubgroupData.contentPublishDate.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = result;
  return result;
}

uint64_t (*FormatSubgroupData.contentPublishDate.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5A62D6C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D5A62DA4 + 4 * byte_1D5AE52D0[a1]))(0xD000000000000010, 0x80000001D5AF25E0);
}

uint64_t sub_1D5A62E60()
{
  unsigned __int8 *v0;

  return sub_1D5A62D6C(*v0);
}

uint64_t sub_1D5A62E68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A63D80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A62E8C()
{
  sub_1D5A631EC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A62EB4()
{
  sub_1D5A631EC();
  return sub_1D5AAEEE0();
}

uint64_t FormatSubgroupData.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[9];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  sub_1D5A63914(0, &qword_1EFF51EB8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v19 - v6;
  v8 = v1[2];
  v21 = v1[3];
  v22 = v8;
  v9 = v1[4];
  v19[8] = v1[5];
  v20 = v9;
  v10 = v1[6];
  v11 = v1[7];
  v19[6] = v1[8];
  v19[7] = v10;
  v12 = v1[9];
  v19[4] = v1[10];
  v19[5] = v11;
  v13 = v1[11];
  v19[2] = v1[12];
  v19[3] = v12;
  v19[0] = v1[13];
  v19[1] = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A631EC();
  sub_1D5AAEEC8();
  LOBYTE(v25) = 0;
  v14 = v7;
  v15 = v23;
  sub_1D5AAED3C();
  if (!v15)
  {
    v17 = v20;
    v16 = v21;
    v25 = v22;
    v24 = 1;
    sub_1D57B5700(0, &qword_1EFF51EC8);
    sub_1D5A63970(&qword_1EFF51ED0, (uint64_t (*)(void))sub_1D5907170, MEMORY[0x1E0DEAF10]);
    sub_1D5AAED6C();
    v25 = v16;
    v24 = 2;
    sub_1D57B5700(0, (unint64_t *)&qword_1ED9CC6B0);
    sub_1D57B5694((unint64_t *)&qword_1ED9CC6B8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1D5AAED6C();
    v25 = v17;
    v24 = 3;
    sub_1D5AAED6C();
    LOBYTE(v25) = 4;
    sub_1D5AAED3C();
    LOBYTE(v25) = 5;
    sub_1D5AAED3C();
    LOBYTE(v25) = 6;
    sub_1D5AAED3C();
    LOBYTE(v25) = 7;
    sub_1D5AAED3C();
    LOBYTE(v25) = 8;
    sub_1D5AAED84();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v14, v4);
}

unint64_t sub_1D5A631EC()
{
  unint64_t result;

  result = qword_1EFF51EC0;
  if (!qword_1EFF51EC0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE5478, &type metadata for FormatSubgroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51EC0);
  }
  return result;
}

uint64_t FormatSubgroupData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  char v46;
  uint64_t v47;

  sub_1D5A63914(0, &qword_1EFF51ED8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v33 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A631EC();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v47) = 0;
  v10 = sub_1D5AAECA0();
  v13 = v12;
  v44 = v10;
  v45 = a2;
  sub_1D57B5700(0, &qword_1EFF51EC8);
  v46 = 1;
  sub_1D5A63970(&qword_1EFF51EE0, (uint64_t (*)(void))sub_1D5907128, MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1D5AAECD0();
  v43 = v13;
  v14 = v47;
  sub_1D57B5700(0, (unint64_t *)&qword_1ED9CC6B0);
  v46 = 2;
  sub_1D57B5694((unint64_t *)&qword_1ED9CC6C0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1D5AAECD0();
  v46 = 3;
  v42 = v47;
  swift_bridgeObjectRetain();
  sub_1D5AAECD0();
  v15 = v47;
  LOBYTE(v47) = 4;
  swift_bridgeObjectRetain();
  v39 = sub_1D5AAECA0();
  LOBYTE(v47) = 5;
  v17 = v16;
  swift_bridgeObjectRetain();
  v18 = sub_1D5AAECA0();
  v40 = v19;
  v41 = v14;
  v36 = v18;
  LOBYTE(v47) = 6;
  swift_bridgeObjectRetain();
  v37 = 0;
  v34 = sub_1D5AAECA0();
  v35 = v15;
  LOBYTE(v47) = 7;
  v38 = v20;
  swift_bridgeObjectRetain();
  v21 = sub_1D5AAECA0();
  v23 = v22;
  v33 = v21;
  LOBYTE(v47) = 8;
  swift_bridgeObjectRetain();
  v24 = sub_1D5AAECE8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v25 = v45;
  v27 = v42;
  v26 = v43;
  *v45 = v44;
  v25[1] = v26;
  v25[2] = v14;
  v25[3] = v27;
  v29 = v38;
  v28 = v39;
  v25[4] = v35;
  v25[5] = v28;
  v30 = v36;
  v25[6] = v17;
  v25[7] = v30;
  v31 = v34;
  v25[8] = v40;
  v25[9] = v31;
  v32 = v33;
  v25[10] = v29;
  v25[11] = v32;
  v25[12] = v23;
  v25[13] = v24;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D5A63914(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A631EC();
    v7 = a3(a1, &type metadata for FormatSubgroupData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A63970(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1D57B5700(255, &qword_1EFF51EC8);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1D8279680](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D5A639E4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatSubgroupData.init(from:)(a1, a2);
}

uint64_t sub_1D5A639F8(_QWORD *a1)
{
  return FormatSubgroupData.encode(to:)(a1);
}

_QWORD *assignWithCopy for FormatSubgroupData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  return a1;
}

uint64_t assignWithTake for FormatSubgroupData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

ValueMetadata *type metadata accessor for FormatSubgroupData()
{
  return &type metadata for FormatSubgroupData;
}

uint64_t storeEnumTagSinglePayload for FormatSubgroupData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1D5A63C28 + 4 * byte_1D5AE52DE[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1D5A63C5C + 4 * byte_1D5AE52D9[v4]))();
}

uint64_t sub_1D5A63C5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A63C64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A63C6CLL);
  return result;
}

uint64_t sub_1D5A63C78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A63C80);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1D5A63C84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A63C8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatSubgroupData.CodingKeys()
{
  return &type metadata for FormatSubgroupData.CodingKeys;
}

unint64_t sub_1D5A63CAC()
{
  unint64_t result;

  result = qword_1EFF51EE8;
  if (!qword_1EFF51EE8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE5450, &type metadata for FormatSubgroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51EE8);
  }
  return result;
}

unint64_t sub_1D5A63CF4()
{
  unint64_t result;

  result = qword_1EFF51EF0;
  if (!qword_1EFF51EF0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE53C0, &type metadata for FormatSubgroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51EF0);
  }
  return result;
}

unint64_t sub_1D5A63D3C()
{
  unint64_t result;

  result = qword_1EFF51EF8;
  if (!qword_1EFF51EF8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE53E8, &type metadata for FormatSubgroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51EF8);
  }
  return result;
}

uint64_t sub_1D5A63D80(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AF25E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AF2600 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AF2620 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x666552656D656874 && a2 == 0xEF7365636E657265 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x655674616D726F66 && a2 == 0xED00006E6F697372 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7247746E65726170 && a2 == 0xEF656D614E70756FLL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AF2640 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001D5AF2660 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AF2680)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_1D5A64158(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CCBE8, MEMORY[0x1E0CF8078]);
}

uint64_t static PaywallExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CD480, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCBE8, a1);
}

uint64_t sub_1D5A64198(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CCF08, MEMORY[0x1E0CF8380]);
}

uint64_t static PaywallExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CD488, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCF08, a1);
}

uint64_t PaywallExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t PaywallExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*PaywallExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t PaywallExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for PaywallExposureEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for PaywallExposureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CA590);
}

uint64_t PaywallExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.timedData.modify())(_QWORD)
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PaywallExposureEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.articleData.modify())(_QWORD)
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PaywallExposureEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.channelData.modify())(_QWORD)
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PaywallExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PaywallExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.groupData.modify())(_QWORD)
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.paywallData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PaywallExposureEvent.paywallData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.paywallData.modify())(_QWORD)
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PaywallExposureEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.issueData.modify())(_QWORD)
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PaywallExposureEvent.purchaseData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.purchaseData.modify())(_QWORD)
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.purchaseSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PaywallExposureEvent.purchaseSessionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.purchaseSessionData.modify())(_QWORD)
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PaywallExposureEvent.sectionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.sectionData.modify())(_QWORD)
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 60);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PaywallExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 60);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 64);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PaywallExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 64);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.puzzleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PaywallExposureEvent.puzzleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.puzzleData.modify())(_QWORD)
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.exposedPaywallContentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 72);
  sub_1D579E208(0, &qword_1ED9CF1A0, (void (*)(void))sub_1D59E86C0, (void (*)(void))sub_1D59E8708);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PaywallExposureEvent.exposedPaywallContentData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 72);
  sub_1D579E208(0, &qword_1ED9CF1A0, (void (*)(void))sub_1D59E86C0, (void (*)(void))sub_1D59E8708);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.exposedPaywallContentData.modify())(_QWORD)
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.purchaseOffersData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 76);
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PaywallExposureEvent.purchaseOffersData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 76);
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.purchaseOffersData.modify())(_QWORD)
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for PaywallExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  v8 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v8, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v8, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v8, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v8, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v8, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v2, v27);
  v28 = a1 + v4[16];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v2, v29);
  v30 = a1 + v4[17];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v30, v8, v31);
  v32 = a1 + v4[18];
  sub_1D579E208(0, &qword_1ED9CF1A0, (void (*)(void))sub_1D59E86C0, (void (*)(void))sub_1D59E8708);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v32, v8, v33);
  v34 = a1 + v4[19];
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v34, v8, v35);
}

uint64_t PaywallExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t PaywallExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for PaywallExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for PaywallExposureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CA4C8);
}

uint64_t PaywallExposureEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[136];

  v3 = type metadata accessor for PaywallExposureEvent.Model(0);
  sub_1D57E4810(v1 + *(int *)(v3 + 24), (uint64_t)v5, (unint64_t *)&qword_1ED9CE420);
  sub_1D57E4810((uint64_t)v5, a1, (unint64_t *)&qword_1ED9CE420);
  return sub_1D580D964((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1D580C5CC);
}

uint64_t PaywallExposureEvent.Model.channelData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57DD4CC(v4, v5);
}

uint64_t PaywallExposureEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

_QWORD *PaywallExposureEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for PaywallExposureEvent.Model(0);
  sub_1D57E4810(v1 + *(int *)(v3 + 36), (uint64_t)v5, (unint64_t *)&qword_1ED9CEEE0);
  sub_1D57E4810((uint64_t)v5, a1, (unint64_t *)&qword_1ED9CEEE0);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t PaywallExposureEvent.Model.paywallData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PaywallExposureEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t PaywallExposureEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 44));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t PaywallExposureEvent.Model.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 48));
  v5 = *v3;
  v4 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t PaywallExposureEvent.Model.purchaseSessionData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 52));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t PaywallExposureEvent.Model.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 56);
  v4 = *(_BYTE *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(_BYTE *)(a1 + 24) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t PaywallExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 60));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t PaywallExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 64));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t PaywallExposureEvent.Model.puzzleData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 68));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v13 = v3[8];
  v12 = v3[9];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v13;
  a1[9] = v12;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t PaywallExposureEvent.Model.exposedPaywallContentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 72));
  *a1 = v3;
  return sub_1D5802C8C(v3);
}

uint64_t PaywallExposureEvent.Model.purchaseOffersData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 76));
  return swift_bridgeObjectRetain();
}

__n128 PaywallExposureEvent.Model.init(eventData:timedData:articleData:channelData:feedData:groupData:paywallData:issueData:purchaseData:purchaseSessionData:sectionData:viewData:userBundleSubscriptionContextData:puzzleData:exposedPaywallContentData:purchaseOffersData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, uint64_t a6@<X5>, __int16 *a7@<X6>, __int128 *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, uint64_t *a11, __int128 *a12, uint64_t *a13, char *a14, __int128 *a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 result;
  __int128 v43;
  __int128 v44;
  __int16 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  __int128 v58;
  __int16 v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  __int128 v70;
  __int128 v72;
  __int128 v74;
  _BYTE v75[136];
  _BYTE v76[144];

  sub_1D57E4810(a3, (uint64_t)v75, (unint64_t *)&qword_1ED9CE420);
  v43 = a4[1];
  v44 = *a4;
  v21 = *((_QWORD *)a4 + 4);
  v46 = *a5;
  v22 = *((_QWORD *)a5 + 2);
  sub_1D57E4810(a6, (uint64_t)v76, (unint64_t *)&qword_1ED9CEEE0);
  v45 = *a7;
  v49 = *a8;
  v47 = *((_QWORD *)a8 + 3);
  v48 = *((_QWORD *)a8 + 2);
  v51 = a10[1];
  v52 = *a10;
  v50 = *((_BYTE *)a10 + 16);
  v54 = a11[1];
  v55 = *a11;
  v58 = *a12;
  v57 = *((_QWORD *)a12 + 2);
  v56 = *((_BYTE *)a12 + 24);
  v60 = a13[1];
  v61 = *a13;
  v59 = *((_WORD *)a13 + 8);
  v23 = *a14;
  v67 = *((_QWORD *)a14 + 2);
  v68 = *((_QWORD *)a14 + 1);
  v66 = a14[24];
  v65 = a14[25];
  v63 = *((_QWORD *)a14 + 5);
  v64 = *((_QWORD *)a14 + 4);
  v62 = a14[48];
  v72 = a15[1];
  v74 = *a15;
  v69 = (__n128)a15[3];
  v70 = a15[2];
  v25 = *((_QWORD *)a15 + 8);
  v24 = *((_QWORD *)a15 + 9);
  v26 = *a16;
  v27 = *a17;
  v28 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(a9, a1, v28);
  v29 = (int *)type metadata accessor for PaywallExposureEvent.Model(0);
  v30 = a9 + v29[5];
  v31 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v30, a2, v31);
  sub_1D57E4810((uint64_t)v75, a9 + v29[6], (unint64_t *)&qword_1ED9CE420);
  v32 = a9 + v29[7];
  *(_OWORD *)v32 = v44;
  *(_OWORD *)(v32 + 16) = v43;
  *(_QWORD *)(v32 + 32) = v21;
  v33 = a9 + v29[8];
  *(_OWORD *)v33 = v46;
  *(_QWORD *)(v33 + 16) = v22;
  sub_1D57E4810((uint64_t)v76, a9 + v29[9], (unint64_t *)&qword_1ED9CEEE0);
  *(_WORD *)(a9 + v29[10]) = v45;
  v34 = a9 + v29[11];
  *(_OWORD *)v34 = v49;
  *(_QWORD *)(v34 + 16) = v48;
  *(_QWORD *)(v34 + 24) = v47;
  v35 = a9 + v29[12];
  *(_QWORD *)v35 = v52;
  *(_QWORD *)(v35 + 8) = v51;
  *(_BYTE *)(v35 + 16) = v50;
  v36 = (_QWORD *)(a9 + v29[13]);
  *v36 = v55;
  v36[1] = v54;
  v37 = a9 + v29[14];
  *(_OWORD *)v37 = v58;
  *(_QWORD *)(v37 + 16) = v57;
  *(_BYTE *)(v37 + 24) = v56;
  v38 = a9 + v29[15];
  *(_QWORD *)v38 = v61;
  *(_QWORD *)(v38 + 8) = v60;
  *(_WORD *)(v38 + 16) = v59;
  v39 = a9 + v29[16];
  *(_BYTE *)v39 = v23;
  *(_QWORD *)(v39 + 8) = v68;
  *(_QWORD *)(v39 + 16) = v67;
  *(_BYTE *)(v39 + 24) = v66;
  *(_BYTE *)(v39 + 25) = v65;
  *(_QWORD *)(v39 + 32) = v64;
  *(_QWORD *)(v39 + 40) = v63;
  *(_BYTE *)(v39 + 48) = v62;
  v40 = a9 + v29[17];
  *(_OWORD *)v40 = v74;
  *(_OWORD *)(v40 + 16) = v72;
  result = v69;
  *(_OWORD *)(v40 + 32) = v70;
  *(__n128 *)(v40 + 48) = v69;
  *(_QWORD *)(v40 + 64) = v25;
  *(_QWORD *)(v40 + 72) = v24;
  *(_QWORD *)(a9 + v29[18]) = v26;
  *(_QWORD *)(a9 + v29[19]) = v27;
  return result;
}

uint64_t sub_1D5A65C78(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A65CB0 + 4 * byte_1D5AE54D0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5A65CB0()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D5A65CC4()
{
  return 0x44656C6369747261;
}

void sub_1D5A65D8C()
{
  JUMPOUT(0x1D5A65D98);
}

unint64_t sub_1D5A65DA4()
{
  return 0xD000000000000021;
}

uint64_t sub_1D5A65DBC()
{
  return 0x6144656C7A7A7570;
}

void sub_1D5A65DD8()
{
  JUMPOUT(0x1D5A65DECLL);
}

unint64_t sub_1D5A65DF8()
{
  return 0xD000000000000012;
}

uint64_t sub_1D5A65E14()
{
  unsigned __int8 *v0;

  return sub_1D5A65C78(*v0);
}

uint64_t sub_1D5A65E1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A6C0D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A65E40()
{
  sub_1D5A664CC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A65E68()
{
  sub_1D5A664CC();
  return sub_1D5AAEEE0();
}

uint64_t PaywallExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 *v14;
  uint64_t v15;
  _OWORD *v16;
  __int128 v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  _OWORD *v34;
  __int128 v35;
  __int128 v36;
  uint64_t v38;
  char v39;
  _OWORD v40[2];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _OWORD v44[2];
  uint64_t v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  _BYTE v49[152];

  v3 = v1;
  sub_1D5A6715C(0, &qword_1EFF51F00, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v38 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A664CC();
  sub_1D5AAEEC8();
  LOBYTE(v44[0]) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for PaywallExposureEvent.Model(0);
    v49[135] = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    sub_1D57E4810(v3 + v10[6], (uint64_t)v49, (unint64_t *)&qword_1ED9CE420);
    sub_1D57E4810((uint64_t)v49, (uint64_t)v44, (unint64_t *)&qword_1ED9CE420);
    LOBYTE(v40[0]) = 2;
    sub_1D57CB940();
    sub_1D5AAED18();
    v11 = v3 + v10[7];
    v12 = *(_QWORD *)(v11 + 32);
    v13 = *(_OWORD *)(v11 + 16);
    v44[0] = *(_OWORD *)v11;
    v44[1] = v13;
    v45 = v12;
    LOBYTE(v40[0]) = 3;
    sub_1D57CB8B8();
    sub_1D5AAED18();
    v14 = (__int128 *)(v3 + v10[8]);
    v15 = *((_QWORD *)v14 + 2);
    v47 = *v14;
    v48 = v15;
    v46 = 4;
    sub_1D57C65D4();
    sub_1D5AAED18();
    sub_1D57E4810(v3 + v10[9], (uint64_t)v44, (unint64_t *)&qword_1ED9CEEE0);
    sub_1D57E4810((uint64_t)v44, (uint64_t)v40, (unint64_t *)&qword_1ED9CEEE0);
    v39 = 5;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    LOWORD(v40[0]) = *(_WORD *)(v3 + v10[10]);
    v39 = 6;
    sub_1D57CB830();
    sub_1D5AAED6C();
    v16 = (_OWORD *)(v3 + v10[11]);
    v17 = v16[1];
    v40[0] = *v16;
    v40[1] = v17;
    v39 = 7;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    v18 = (uint64_t *)(v3 + v10[12]);
    v19 = *v18;
    v20 = v18[1];
    LOBYTE(v18) = *((_BYTE *)v18 + 16);
    *(_QWORD *)&v40[0] = v19;
    *((_QWORD *)&v40[0] + 1) = v20;
    LOBYTE(v40[1]) = (_BYTE)v18;
    v39 = 8;
    sub_1D580C07C();
    sub_1D5AAED6C();
    v21 = (uint64_t *)(v3 + v10[13]);
    v23 = *v21;
    v22 = v21[1];
    *(_QWORD *)&v40[0] = v23;
    *((_QWORD *)&v40[0] + 1) = v22;
    v39 = 9;
    sub_1D583239C();
    sub_1D5AAED6C();
    v24 = v3 + v10[14];
    v25 = *(_QWORD *)(v24 + 16);
    v26 = *(_BYTE *)(v24 + 24);
    v40[0] = *(_OWORD *)v24;
    *(_QWORD *)&v40[1] = v25;
    BYTE8(v40[1]) = v26;
    v39 = 10;
    sub_1D57CB720();
    sub_1D5AAED18();
    v27 = (uint64_t *)(v3 + v10[15]);
    v28 = *v27;
    v29 = v27[1];
    LOWORD(v27) = *((_WORD *)v27 + 8);
    *(_QWORD *)&v40[0] = v28;
    *((_QWORD *)&v40[0] + 1) = v29;
    LOWORD(v40[1]) = (_WORD)v27;
    v39 = 11;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    v30 = v3 + v10[16];
    v31 = *(_BYTE *)(v30 + 24);
    v32 = *(_BYTE *)(v30 + 25);
    v33 = *(_BYTE *)(v30 + 48);
    LOBYTE(v40[0]) = *(_BYTE *)v30;
    *(_OWORD *)((char *)v40 + 8) = *(_OWORD *)(v30 + 8);
    BYTE8(v40[1]) = v31;
    BYTE9(v40[1]) = v32;
    v41 = *(_OWORD *)(v30 + 32);
    LOBYTE(v42) = v33;
    v39 = 12;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v34 = (_OWORD *)(v3 + v10[17]);
    v35 = v34[1];
    v40[0] = *v34;
    v40[1] = v35;
    v36 = v34[3];
    v41 = v34[2];
    v42 = v36;
    v43 = v34[4];
    v39 = 13;
    sub_1D57CBD34();
    sub_1D5AAED18();
    *(_QWORD *)&v40[0] = *(_QWORD *)(v3 + v10[18]);
    v39 = 14;
    sub_1D59E8708();
    sub_1D5AAED18();
    *(_QWORD *)&v40[0] = *(_QWORD *)(v3 + v10[19]);
    v39 = 15;
    sub_1D57C90A0();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A664CC()
{
  unint64_t result;

  result = qword_1EFF51F08;
  if (!qword_1EFF51F08)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE58B4, &type metadata for PaywallExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51F08);
  }
  return result;
}

uint64_t PaywallExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  char *v16;
  int *v17;
  uint64_t result;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  char *v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  char *v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  __int16 v45;
  char *v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  char *v51;
  uint64_t v52;
  char *v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  int *v70;
  _OWORD v71[2];
  __int128 v72;
  __int128 v73;
  __int128 v74;
  _BYTE v75[136];
  _BYTE v76[136];
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  _BOOL4 v81;
  char v82;
  char v83;
  char v84;

  v63 = a2;
  v64 = sub_1D5AADFB0();
  v61 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v4 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D5AADF98();
  v62 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A6715C(0, &qword_1EFF51F10, MEMORY[0x1E0DED048]);
  v65 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v59 - v10;
  v70 = (int *)type metadata accessor for PaywallExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v70);
  v69 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v66 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1D5A664CC();
  v67 = v11;
  v14 = v68;
  sub_1D5AAEEB0();
  v60 = v5;
  if (v14)
  {
    v68 = v14;
    LODWORD(v67) = 0;
    v15 = 0;
  }
  else
  {
    v59 = v9;
    LOBYTE(v78) = 0;
    sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
    sub_1D5AAECD0();
    v24 = v69;
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v69, v7, v5);
    LOBYTE(v78) = 1;
    sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
    v25 = v64;
    sub_1D5AAECD0();
    v26 = v70;
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(&v24[v70[5]], v4, v25);
    v84 = 2;
    sub_1D57CB8FC();
    sub_1D5AAEC7C();
    sub_1D57E4810((uint64_t)&v77, (uint64_t)v76, (unint64_t *)&qword_1ED9CE420);
    sub_1D57E4810((uint64_t)v76, (uint64_t)&v24[v26[6]], (unint64_t *)&qword_1ED9CE420);
    v75[0] = 3;
    sub_1D57CB874();
    sub_1D5AAEC7C();
    v27 = v80;
    v28 = &v24[v26[7]];
    v29 = v79;
    *(_OWORD *)v28 = v78;
    *((_OWORD *)v28 + 1) = v29;
    *((_QWORD *)v28 + 4) = v27;
    v75[0] = 4;
    sub_1D57C6590();
    sub_1D5AAEC7C();
    v30 = v79;
    v31 = &v24[v26[8]];
    *(_OWORD *)v31 = v78;
    *((_QWORD *)v31 + 2) = v30;
    v83 = 5;
    sub_1D57C5FA8();
    sub_1D5AAEC7C();
    sub_1D57E4810((uint64_t)&v78, (uint64_t)v75, (unint64_t *)&qword_1ED9CEEE0);
    sub_1D57E4810((uint64_t)v75, (uint64_t)&v24[v26[9]], (unint64_t *)&qword_1ED9CEEE0);
    v82 = 6;
    sub_1D57CB7EC();
    sub_1D5AAECD0();
    *(_WORD *)&v24[v26[10]] = v71[0];
    v82 = 7;
    sub_1D57C5ED8();
    sub_1D5AAEC7C();
    v32 = &v24[v26[11]];
    v33 = v71[1];
    *(_OWORD *)v32 = v71[0];
    *((_OWORD *)v32 + 1) = v33;
    v82 = 8;
    sub_1D580C038();
    sub_1D5AAECD0();
    v34 = *((_QWORD *)&v71[0] + 1);
    v35 = v71[1];
    v36 = &v24[v26[12]];
    *(_QWORD *)v36 = *(_QWORD *)&v71[0];
    *((_QWORD *)v36 + 1) = v34;
    v36[16] = v35;
    v82 = 9;
    sub_1D5832358();
    sub_1D5AAECD0();
    v68 = 0;
    v37 = *((_QWORD *)&v71[0] + 1);
    v38 = &v69[v70[13]];
    *(_QWORD *)v38 = *(_QWORD *)&v71[0];
    *((_QWORD *)v38 + 1) = v37;
    v82 = 10;
    sub_1D57CB6DC();
    v39 = v68;
    sub_1D5AAEC7C();
    v68 = v39;
    if (v39)
    {
      (*(void (**)(char *, uint64_t))(v59 + 8))(v67, v65);
      LODWORD(v67) = 0;
      v15 = 959;
    }
    else
    {
      v40 = *(_QWORD *)&v71[1];
      v41 = BYTE8(v71[1]);
      v42 = &v69[v70[14]];
      *(_OWORD *)v42 = v71[0];
      *((_QWORD *)v42 + 2) = v40;
      v42[24] = v41;
      v82 = 11;
      sub_1D57C6260();
      v43 = v68;
      sub_1D5AAECD0();
      v68 = v43;
      if (!v43)
      {
        v44 = *((_QWORD *)&v71[0] + 1);
        v45 = v71[1];
        v46 = &v69[v70[15]];
        *(_QWORD *)v46 = *(_QWORD *)&v71[0];
        *((_QWORD *)v46 + 1) = v44;
        *((_WORD *)v46 + 8) = v45;
        v82 = 12;
        sub_1D57C6AF8();
        v47 = v68;
        sub_1D5AAECD0();
        v81 = v47 == 0;
        v68 = v47;
        if (v47)
          goto LABEL_41;
        v48 = BYTE8(v71[1]);
        v49 = BYTE9(v71[1]);
        v50 = v73;
        v51 = &v69[v70[16]];
        *v51 = v71[0];
        *(_OWORD *)(v51 + 8) = *(_OWORD *)((char *)v71 + 8);
        v51[24] = v48;
        v51[25] = v49;
        *((_OWORD *)v51 + 2) = v72;
        v51[48] = v50;
        v82 = 13;
        sub_1D57CBCF0();
        v52 = v68;
        sub_1D5AAEC7C();
        v68 = v52;
        if (v52)
        {
LABEL_41:
          (*(void (**)(char *, uint64_t))(v59 + 8))(v67, v65);
          __swift_destroy_boxed_opaque_existential_1(v66);
          LODWORD(v65) = 0;
          LODWORD(v66) = 0;
        }
        else
        {
          v53 = &v69[v70[17]];
          v54 = v71[1];
          *(_OWORD *)v53 = v71[0];
          *((_OWORD *)v53 + 1) = v54;
          v55 = v73;
          *((_OWORD *)v53 + 2) = v72;
          *((_OWORD *)v53 + 3) = v55;
          *((_OWORD *)v53 + 4) = v74;
          v82 = 14;
          sub_1D59E86C0();
          v56 = v68;
          sub_1D5AAEC7C();
          v68 = v56;
          if (v56)
          {
            (*(void (**)(char *, uint64_t))(v59 + 8))(v67, v65);
            __swift_destroy_boxed_opaque_existential_1(v66);
            LODWORD(v66) = 0;
            LODWORD(v65) = 1;
          }
          else
          {
            *(_QWORD *)&v69[v70[18]] = *(_QWORD *)&v71[0];
            v82 = 15;
            sub_1D57C905C();
            v57 = v68;
            sub_1D5AAEC7C();
            v68 = v57;
            if (!v57)
            {
              (*(void (**)(char *, uint64_t))(v59 + 8))(v67, v65);
              v58 = (uint64_t)v69;
              *(_QWORD *)&v69[v70[19]] = *(_QWORD *)&v71[0];
              sub_1D5A671B8(v58, v63);
              __swift_destroy_boxed_opaque_existential_1(v66);
              return sub_1D5A671FC(v58);
            }
            (*(void (**)(char *, uint64_t))(v59 + 8))(v67, v65);
            __swift_destroy_boxed_opaque_existential_1(v66);
            LODWORD(v65) = 1;
            LODWORD(v66) = 1;
          }
        }
        v16 = v69;
        (*(void (**)(char *, uint64_t))(v62 + 8))(v69, v60);
        v17 = v70;
        (*(void (**)(char *, uint64_t))(v61 + 8))(&v16[v70[5]], v64);
        LOBYTE(v19) = 1;
        v20 = 1;
        v21 = 1;
        v22 = 1;
        v23 = 1;
        LODWORD(v63) = 1;
        LODWORD(v67) = 1;
        LODWORD(v64) = 1;
LABEL_9:
        sub_1D57E4810((uint64_t)&v16[v17[6]], (uint64_t)&v78, (unint64_t *)&qword_1ED9CE420);
        result = sub_1D580D964((uint64_t)&v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1D580D9D8);
        if ((v19 & 1) != 0)
          goto LABEL_10;
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v59 + 8))(v67, v65);
      v15 = 1983;
      LODWORD(v67) = 1;
    }
  }
  v16 = v69;
  v17 = v70;
  result = __swift_destroy_boxed_opaque_existential_1(v66);
  v19 = (v15 >> 3) & 1;
  v20 = (v15 >> 4) & 1;
  v21 = (v15 >> 5) & 1;
  v22 = (v15 >> 7) & 1;
  v23 = (v15 >> 8) & 1;
  LODWORD(v63) = (v15 >> 9) & 1;
  if ((v15 & 1) != 0)
    result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v16, v60);
  if ((v15 & 2) != 0)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(&v16[v17[5]], v64);
    if ((v15 & 4) != 0)
      goto LABEL_8;
  }
  else if ((v15 & 4) != 0)
  {
LABEL_8:
    LODWORD(v64) = 0;
    v81 = 0;
    LODWORD(v65) = 0;
    LODWORD(v66) = 0;
    goto LABEL_9;
  }
  LODWORD(v66) = 0;
  LODWORD(v65) = 0;
  v81 = 0;
  LODWORD(v64) = 0;
  if ((v15 & 8) != 0)
  {
LABEL_10:
    result = sub_1D57DEAB8(*(_QWORD *)&v16[v17[7]], *(_QWORD *)&v16[v17[7] + 8]);
    if ((v20 & 1) == 0)
      goto LABEL_11;
    goto LABEL_24;
  }
LABEL_23:
  if (!v20)
  {
LABEL_11:
    if (v21)
      goto LABEL_12;
    goto LABEL_25;
  }
LABEL_24:
  result = sub_1D57DAEDC(*(_QWORD *)&v16[v17[8]], *(_QWORD *)&v16[v17[8] + 8], *(_QWORD *)&v16[v17[8] + 16]);
  if ((v21 & 1) != 0)
  {
LABEL_12:
    sub_1D57E4810((uint64_t)&v16[v17[9]], (uint64_t)&v78, (unint64_t *)&qword_1ED9CEEE0);
    result = (uint64_t)sub_1D57DE9C8(&v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DEA24);
    if ((v22 & 1) == 0)
      goto LABEL_13;
    goto LABEL_26;
  }
LABEL_25:
  if (!v22)
  {
LABEL_13:
    if (v23)
      goto LABEL_14;
    goto LABEL_27;
  }
LABEL_26:
  result = sub_1D57EA700(*(_QWORD *)&v16[v17[11]], *(_QWORD *)&v16[v17[11] + 8]);
  if ((v23 & 1) != 0)
  {
LABEL_14:
    result = swift_bridgeObjectRelease();
    if ((v63 & 1) == 0)
      goto LABEL_15;
    goto LABEL_28;
  }
LABEL_27:
  if (!(_DWORD)v63)
  {
LABEL_15:
    if ((_DWORD)v67)
      goto LABEL_16;
    goto LABEL_29;
  }
LABEL_28:
  result = swift_bridgeObjectRelease();
  if ((v67 & 1) != 0)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    if ((v64 & 1) == 0)
      goto LABEL_17;
    goto LABEL_30;
  }
LABEL_29:
  if (!(_DWORD)v64)
  {
LABEL_17:
    if (v81)
      goto LABEL_18;
    goto LABEL_31;
  }
LABEL_30:
  result = swift_bridgeObjectRelease();
  if (v81)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v65 & 1) == 0)
      goto LABEL_19;
LABEL_32:
    result = sub_1D57EA700(*(_QWORD *)&v16[v17[17]], *(_QWORD *)&v16[v17[17] + 8]);
    if ((v66 & 1) == 0)
      return result;
    return sub_1D5803C68(*(_QWORD *)&v16[v17[18]]);
  }
LABEL_31:
  if ((_DWORD)v65)
    goto LABEL_32;
LABEL_19:
  if (!(_DWORD)v66)
    return result;
  return sub_1D5803C68(*(_QWORD *)&v16[v17[18]]);
}

void sub_1D5A6715C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A664CC();
    v7 = a3(a1, &type metadata for PaywallExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A671B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PaywallExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A671FC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PaywallExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A67238@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PaywallExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A6724C(_QWORD *a1)
{
  return PaywallExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A67260@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CD480, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCBE8, a1);
}

uint64_t sub_1D5A67284@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CD488, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCF08, a1);
}

uint64_t sub_1D5A672A8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  v9 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v9, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v9, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v9, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v9, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v9, v26);
  v27 = a2 + a1[15];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v4, v28);
  v29 = a2 + a1[16];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v4, v30);
  v31 = a2 + a1[17];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v31, v9, v32);
  v33 = a2 + a1[18];
  sub_1D579E208(0, &qword_1ED9CF1A0, (void (*)(void))sub_1D59E86C0, (void (*)(void))sub_1D59E8708);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v33, v9, v34);
  v35 = a2 + a1[19];
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v35, v9, v36);
}

uint64_t *initializeBufferWithCopyOfBuffer for PaywallExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v68 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v68 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
    v56 = a3[17];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
    v60 = a3[18];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    sub_1D579E208(0, &qword_1ED9CF1A0, (void (*)(void))sub_1D59E86C0, (void (*)(void))sub_1D59E8708);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
    v64 = a3[19];
    v65 = (char *)a1 + v64;
    v66 = (char *)a2 + v64;
    sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
  }
  return a1;
}

uint64_t destroy for PaywallExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  v29 = a1 + a2[17];
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
  v31 = a1 + a2[18];
  sub_1D579E208(0, &qword_1ED9CF1A0, (void (*)(void))sub_1D59E86C0, (void (*)(void))sub_1D59E8708);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
  v33 = a1 + a2[19];
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
}

uint64_t initializeWithCopy for PaywallExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9CF1A0, (void (*)(void))sub_1D59E86C0, (void (*)(void))sub_1D59E8708);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v64, v65, v66);
  return a1;
}

uint64_t assignWithCopy for PaywallExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9CF1A0, (void (*)(void))sub_1D59E86C0, (void (*)(void))sub_1D59E8708);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 24))(v64, v65, v66);
  return a1;
}

uint64_t initializeWithTake for PaywallExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9CF1A0, (void (*)(void))sub_1D59E86C0, (void (*)(void))sub_1D59E8708);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v64, v65, v66);
  return a1;
}

uint64_t assignWithTake for PaywallExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1D579E208(0, &qword_1ED9CF1A0, (void (*)(void))sub_1D59E86C0, (void (*)(void))sub_1D59E8708);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 40))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 40))(v64, v65, v66);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaywallExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A692D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                          v12 = *(_QWORD *)(v24 - 8);
                          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                          {
                            v8 = v24;
                            v13 = a3[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
                            v12 = *(_QWORD *)(v25 - 8);
                            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                            {
                              v8 = v25;
                              v13 = a3[17];
                            }
                            else
                            {
                              sub_1D579E208(0, &qword_1ED9CF1A0, (void (*)(void))sub_1D59E86C0, (void (*)(void))sub_1D59E8708);
                              v12 = *(_QWORD *)(v26 - 8);
                              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                              {
                                v8 = v26;
                                v13 = a3[18];
                              }
                              else
                              {
                                sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
                                v8 = v27;
                                v12 = *(_QWORD *)(v27 - 8);
                                v13 = a3[19];
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for PaywallExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A6970C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                          v14 = *(_QWORD *)(v26 - 8);
                          if (*(_DWORD *)(v14 + 84) == a3)
                          {
                            v10 = v26;
                            v15 = a4[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
                            v14 = *(_QWORD *)(v27 - 8);
                            if (*(_DWORD *)(v14 + 84) == a3)
                            {
                              v10 = v27;
                              v15 = a4[17];
                            }
                            else
                            {
                              sub_1D579E208(0, &qword_1ED9CF1A0, (void (*)(void))sub_1D59E86C0, (void (*)(void))sub_1D59E8708);
                              v14 = *(_QWORD *)(v28 - 8);
                              if (*(_DWORD *)(v14 + 84) == a3)
                              {
                                v10 = v28;
                                v15 = a4[18];
                              }
                              else
                              {
                                sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
                                v10 = v29;
                                v14 = *(_QWORD *)(v29 - 8);
                                v15 = a4[19];
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5A69B40()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C70F0, (void (*)(void))sub_1D57CB7EC, (void (*)(void))sub_1D57CB830);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C7130, (void (*)(void))sub_1D580C038, (void (*)(void))sub_1D580C07C);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9C7100, (void (*)(void))sub_1D57CB6DC, (void (*)(void))sub_1D57CB720);
                      if (v10 <= 0x3F)
                      {
                        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                        if (v11 <= 0x3F)
                        {
                          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                          if (v12 <= 0x3F)
                          {
                            sub_1D579E208(319, &qword_1ED9CF128, (void (*)(void))sub_1D57CBCF0, (void (*)(void))sub_1D57CBD34);
                            if (v13 <= 0x3F)
                            {
                              sub_1D579E208(319, &qword_1ED9CF1A0, (void (*)(void))sub_1D59E86C0, (void (*)(void))sub_1D59E8708);
                              if (v14 <= 0x3F)
                              {
                                sub_1D579E208(319, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
                                if (v15 <= 0x3F)
                                  swift_initStructMetadata();
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for PaywallExposureEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v84;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = *((_QWORD *)v14 + 3);
    if (v15)
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      v13[8] = v14[8];
      *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
      *((_QWORD *)v13 + 3) = v15;
      v13[32] = v14[32];
      v16 = *((_QWORD *)v14 + 6);
      *((_QWORD *)v13 + 5) = *((_QWORD *)v14 + 5);
      *((_QWORD *)v13 + 6) = v16;
      *((_WORD *)v13 + 28) = *((_WORD *)v14 + 28);
      v18 = *((_QWORD *)v14 + 8);
      v17 = *((_QWORD *)v14 + 9);
      v13[80] = v14[80];
      *((_QWORD *)v13 + 8) = v18;
      *((_QWORD *)v13 + 9) = v17;
      *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
      *((_QWORD *)v13 + 13) = *((_QWORD *)v14 + 13);
      v13[112] = v14[112];
      *((_QWORD *)v13 + 15) = *((_QWORD *)v14 + 15);
      *((_DWORD *)v13 + 32) = *((_DWORD *)v14 + 32);
      v13[132] = v14[132];
      *(_WORD *)(v13 + 133) = *(_WORD *)(v14 + 133);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v20 = *((_OWORD *)v14 + 7);
      *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
      *((_OWORD *)v13 + 7) = v20;
      *(_QWORD *)(v13 + 127) = *(_QWORD *)(v14 + 127);
      v21 = *((_OWORD *)v14 + 3);
      *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
      *((_OWORD *)v13 + 3) = v21;
      v22 = *((_OWORD *)v14 + 5);
      *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
      *((_OWORD *)v13 + 5) = v22;
      v23 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v23;
    }
    v24 = a3[7];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = *((_QWORD *)v26 + 1);
    if (v27)
    {
      *(_QWORD *)v25 = *(_QWORD *)v26;
      *((_QWORD *)v25 + 1) = v27;
      *((_WORD *)v25 + 8) = *((_WORD *)v26 + 8);
      v28 = *((_QWORD *)v26 + 4);
      *((_QWORD *)v25 + 3) = *((_QWORD *)v26 + 3);
      *((_QWORD *)v25 + 4) = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v29 = *((_OWORD *)v26 + 1);
      *(_OWORD *)v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v29;
      *((_QWORD *)v25 + 4) = *((_QWORD *)v26 + 4);
    }
    v30 = a3[8];
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    v33 = *((_QWORD *)v32 + 2);
    if (v33 == 1)
    {
      *(_OWORD *)v31 = *(_OWORD *)v32;
      *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
    }
    else
    {
      *v31 = *v32;
      *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
      *((_QWORD *)v31 + 2) = v33;
      swift_bridgeObjectRetain();
    }
    v34 = a3[9];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    v37 = *((_QWORD *)v36 + 2);
    if (v37)
    {
      *(_WORD *)v35 = *(_WORD *)v36;
      *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
      *((_QWORD *)v35 + 2) = v37;
      *((_QWORD *)v35 + 3) = *((_QWORD *)v36 + 3);
      v38 = *((_QWORD *)v36 + 5);
      *((_QWORD *)v35 + 4) = *((_QWORD *)v36 + 4);
      *((_QWORD *)v35 + 5) = v38;
      v39 = *((_QWORD *)v36 + 7);
      *((_QWORD *)v35 + 6) = *((_QWORD *)v36 + 6);
      *((_QWORD *)v35 + 7) = v39;
      v40 = *((_QWORD *)v36 + 9);
      *((_QWORD *)v35 + 8) = *((_QWORD *)v36 + 8);
      *((_QWORD *)v35 + 9) = v40;
      v35[80] = v36[80];
      v41 = *((_QWORD *)v36 + 12);
      *((_QWORD *)v35 + 11) = *((_QWORD *)v36 + 11);
      *((_QWORD *)v35 + 12) = v41;
      *((_QWORD *)v35 + 13) = *((_QWORD *)v36 + 13);
      v35[112] = v36[112];
      v42 = *((_QWORD *)v36 + 16);
      *((_QWORD *)v35 + 15) = *((_QWORD *)v36 + 15);
      *((_QWORD *)v35 + 16) = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v43 = *((_OWORD *)v36 + 7);
      *((_OWORD *)v35 + 6) = *((_OWORD *)v36 + 6);
      *((_OWORD *)v35 + 7) = v43;
      *((_QWORD *)v35 + 16) = *((_QWORD *)v36 + 16);
      v44 = *((_OWORD *)v36 + 3);
      *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
      *((_OWORD *)v35 + 3) = v44;
      v45 = *((_OWORD *)v36 + 5);
      *((_OWORD *)v35 + 4) = *((_OWORD *)v36 + 4);
      *((_OWORD *)v35 + 5) = v45;
      v46 = *((_OWORD *)v36 + 1);
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *((_OWORD *)v35 + 1) = v46;
    }
    v47 = a3[11];
    *(_WORD *)((char *)a1 + a3[10]) = *(_WORD *)((char *)a2 + a3[10]);
    v48 = (char *)a1 + v47;
    v49 = (char *)a2 + v47;
    v50 = *((_QWORD *)v49 + 1);
    if (v50)
    {
      *(_QWORD *)v48 = *(_QWORD *)v49;
      *((_QWORD *)v48 + 1) = v50;
      *((_WORD *)v48 + 8) = *((_WORD *)v49 + 8);
      *((_QWORD *)v48 + 3) = *((_QWORD *)v49 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v51 = *((_OWORD *)v49 + 1);
      *(_OWORD *)v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v51;
    }
    v52 = a3[12];
    v53 = a3[13];
    v54 = (char *)a1 + v52;
    v55 = (char *)a2 + v52;
    v56 = *((_QWORD *)v55 + 1);
    *(_QWORD *)v54 = *(_QWORD *)v55;
    *((_QWORD *)v54 + 1) = v56;
    v54[16] = v55[16];
    v57 = (_QWORD *)((char *)a1 + v53);
    v58 = (_QWORD *)((char *)a2 + v53);
    v59 = v58[1];
    *v57 = *v58;
    v57[1] = v59;
    v60 = a3[14];
    v61 = a3[15];
    v62 = (char *)a1 + v60;
    v63 = (char *)a2 + v60;
    v64 = *((_QWORD *)v63 + 1);
    *(_QWORD *)v62 = *(_QWORD *)v63;
    *((_QWORD *)v62 + 1) = v64;
    *((_QWORD *)v62 + 2) = *((_QWORD *)v63 + 2);
    v62[24] = v63[24];
    v65 = (char *)a1 + v61;
    v66 = (char *)a2 + v61;
    v67 = *((_QWORD *)v66 + 1);
    *(_QWORD *)v65 = *(_QWORD *)v66;
    *((_QWORD *)v65 + 1) = v67;
    v65[16] = v66[16];
    v65[17] = v66[17];
    v68 = a3[16];
    v69 = a3[17];
    v70 = (char *)a1 + v68;
    v71 = (char *)a2 + v68;
    *v70 = *v71;
    v72 = *((_QWORD *)v71 + 2);
    *((_QWORD *)v70 + 1) = *((_QWORD *)v71 + 1);
    *((_QWORD *)v70 + 2) = v72;
    v70[24] = v71[24];
    v70[25] = v71[25];
    v73 = *((_QWORD *)v71 + 5);
    *((_QWORD *)v70 + 4) = *((_QWORD *)v71 + 4);
    *((_QWORD *)v70 + 5) = v73;
    v70[48] = v71[48];
    v74 = (char *)a1 + v69;
    v84 = a2;
    v75 = (char *)a2 + v69;
    v76 = *((_QWORD *)v75 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v76)
    {
      *(_QWORD *)v74 = *(_QWORD *)v75;
      *((_QWORD *)v74 + 1) = v76;
      v77 = *((_QWORD *)v75 + 3);
      *((_QWORD *)v74 + 2) = *((_QWORD *)v75 + 2);
      *((_QWORD *)v74 + 3) = v77;
      v78 = *((_OWORD *)v75 + 3);
      *((_OWORD *)v74 + 2) = *((_OWORD *)v75 + 2);
      *((_OWORD *)v74 + 3) = v78;
      *((_WORD *)v74 + 32) = *((_WORD *)v75 + 32);
      *((_QWORD *)v74 + 9) = *((_QWORD *)v75 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v79 = *((_OWORD *)v75 + 3);
      *((_OWORD *)v74 + 2) = *((_OWORD *)v75 + 2);
      *((_OWORD *)v74 + 3) = v79;
      *((_OWORD *)v74 + 4) = *((_OWORD *)v75 + 4);
      v80 = *((_OWORD *)v75 + 1);
      *(_OWORD *)v74 = *(_OWORD *)v75;
      *((_OWORD *)v74 + 1) = v80;
    }
    v81 = a3[18];
    v82 = *(_QWORD *)((char *)v84 + v81);
    if (v82 != 1)
      v82 = swift_bridgeObjectRetain();
    *(_QWORD *)((char *)a1 + v81) = v82;
    *(_QWORD *)((char *)a1 + a3[19]) = *(_QWORD *)((char *)v84 + a3[19]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PaywallExposureEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  if (*(_QWORD *)(a1 + a2[6] + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[7] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[8] + 16) != 1)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[9] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[11] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[17] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[18]) != 1)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PaywallExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  int *v82;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(v13 + 24);
  if (v14)
  {
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
    *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
    *(_QWORD *)(v12 + 24) = v14;
    *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
    v15 = *(_QWORD *)(v13 + 48);
    *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
    *(_QWORD *)(v12 + 48) = v15;
    *(_WORD *)(v12 + 56) = *(_WORD *)(v13 + 56);
    v17 = *(_QWORD *)(v13 + 64);
    v16 = *(_QWORD *)(v13 + 72);
    *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
    *(_QWORD *)(v12 + 64) = v17;
    *(_QWORD *)(v12 + 72) = v16;
    *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
    *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
    *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
    *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
    *(_DWORD *)(v12 + 128) = *(_DWORD *)(v13 + 128);
    *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
    *(_WORD *)(v12 + 133) = *(_WORD *)(v13 + 133);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v18 = *(_OWORD *)(v13 + 112);
    *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
    *(_OWORD *)(v12 + 112) = v18;
    *(_QWORD *)(v12 + 127) = *(_QWORD *)(v13 + 127);
    v19 = *(_OWORD *)(v13 + 48);
    *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
    *(_OWORD *)(v12 + 48) = v19;
    v20 = *(_OWORD *)(v13 + 80);
    *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
    *(_OWORD *)(v12 + 80) = v20;
    v21 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v21;
  }
  v22 = a3[7];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_QWORD *)(v24 + 8);
  if (v25)
  {
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *(_QWORD *)(v23 + 8) = v25;
    *(_WORD *)(v23 + 16) = *(_WORD *)(v24 + 16);
    v26 = *(_QWORD *)(v24 + 32);
    *(_QWORD *)(v23 + 24) = *(_QWORD *)(v24 + 24);
    *(_QWORD *)(v23 + 32) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v27 = *(_OWORD *)(v24 + 16);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 16) = v27;
    *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
  }
  v28 = a3[8];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = *(_QWORD *)(v30 + 16);
  if (v31 == 1)
  {
    *(_OWORD *)v29 = *(_OWORD *)v30;
    *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
  }
  else
  {
    *(_BYTE *)v29 = *(_BYTE *)v30;
    *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
    *(_QWORD *)(v29 + 16) = v31;
    swift_bridgeObjectRetain();
  }
  v32 = a3[9];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_QWORD *)(v34 + 16);
  if (v35)
  {
    *(_WORD *)v33 = *(_WORD *)v34;
    *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
    *(_QWORD *)(v33 + 16) = v35;
    *(_QWORD *)(v33 + 24) = *(_QWORD *)(v34 + 24);
    v36 = *(_QWORD *)(v34 + 40);
    *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
    *(_QWORD *)(v33 + 40) = v36;
    v37 = *(_QWORD *)(v34 + 56);
    *(_QWORD *)(v33 + 48) = *(_QWORD *)(v34 + 48);
    *(_QWORD *)(v33 + 56) = v37;
    v38 = *(_QWORD *)(v34 + 72);
    *(_QWORD *)(v33 + 64) = *(_QWORD *)(v34 + 64);
    *(_QWORD *)(v33 + 72) = v38;
    *(_BYTE *)(v33 + 80) = *(_BYTE *)(v34 + 80);
    v39 = *(_QWORD *)(v34 + 96);
    *(_QWORD *)(v33 + 88) = *(_QWORD *)(v34 + 88);
    *(_QWORD *)(v33 + 96) = v39;
    *(_QWORD *)(v33 + 104) = *(_QWORD *)(v34 + 104);
    *(_BYTE *)(v33 + 112) = *(_BYTE *)(v34 + 112);
    v40 = *(_QWORD *)(v34 + 128);
    *(_QWORD *)(v33 + 120) = *(_QWORD *)(v34 + 120);
    *(_QWORD *)(v33 + 128) = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v41 = *(_OWORD *)(v34 + 112);
    *(_OWORD *)(v33 + 96) = *(_OWORD *)(v34 + 96);
    *(_OWORD *)(v33 + 112) = v41;
    *(_QWORD *)(v33 + 128) = *(_QWORD *)(v34 + 128);
    v42 = *(_OWORD *)(v34 + 48);
    *(_OWORD *)(v33 + 32) = *(_OWORD *)(v34 + 32);
    *(_OWORD *)(v33 + 48) = v42;
    v43 = *(_OWORD *)(v34 + 80);
    *(_OWORD *)(v33 + 64) = *(_OWORD *)(v34 + 64);
    *(_OWORD *)(v33 + 80) = v43;
    v44 = *(_OWORD *)(v34 + 16);
    *(_OWORD *)v33 = *(_OWORD *)v34;
    *(_OWORD *)(v33 + 16) = v44;
  }
  v45 = a3[11];
  *(_WORD *)(a1 + a3[10]) = *(_WORD *)(a2 + a3[10]);
  v46 = a1 + v45;
  v47 = a2 + v45;
  v48 = *(_QWORD *)(v47 + 8);
  if (v48)
  {
    *(_QWORD *)v46 = *(_QWORD *)v47;
    *(_QWORD *)(v46 + 8) = v48;
    *(_WORD *)(v46 + 16) = *(_WORD *)(v47 + 16);
    *(_QWORD *)(v46 + 24) = *(_QWORD *)(v47 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v49 = *(_OWORD *)(v47 + 16);
    *(_OWORD *)v46 = *(_OWORD *)v47;
    *(_OWORD *)(v46 + 16) = v49;
  }
  v50 = a3[12];
  v51 = a3[13];
  v52 = a1 + v50;
  v53 = a2 + v50;
  v54 = *(_QWORD *)(v53 + 8);
  *(_QWORD *)v52 = *(_QWORD *)v53;
  *(_QWORD *)(v52 + 8) = v54;
  *(_BYTE *)(v52 + 16) = *(_BYTE *)(v53 + 16);
  v55 = (_QWORD *)(a1 + v51);
  v56 = (_QWORD *)(a2 + v51);
  v57 = v56[1];
  *v55 = *v56;
  v55[1] = v57;
  v58 = a3[14];
  v59 = a3[15];
  v60 = a1 + v58;
  v61 = a2 + v58;
  v62 = *(_QWORD *)(v61 + 8);
  *(_QWORD *)v60 = *(_QWORD *)v61;
  *(_QWORD *)(v60 + 8) = v62;
  *(_QWORD *)(v60 + 16) = *(_QWORD *)(v61 + 16);
  *(_BYTE *)(v60 + 24) = *(_BYTE *)(v61 + 24);
  v63 = a1 + v59;
  v64 = a2 + v59;
  v65 = *(_QWORD *)(v64 + 8);
  *(_QWORD *)v63 = *(_QWORD *)v64;
  *(_QWORD *)(v63 + 8) = v65;
  *(_BYTE *)(v63 + 16) = *(_BYTE *)(v64 + 16);
  *(_BYTE *)(v63 + 17) = *(_BYTE *)(v64 + 17);
  v66 = a3[16];
  v67 = a3[17];
  v82 = a3;
  v68 = a1 + v66;
  v69 = a2 + v66;
  *(_BYTE *)v68 = *(_BYTE *)v69;
  v70 = *(_QWORD *)(v69 + 16);
  *(_QWORD *)(v68 + 8) = *(_QWORD *)(v69 + 8);
  *(_QWORD *)(v68 + 16) = v70;
  *(_BYTE *)(v68 + 24) = *(_BYTE *)(v69 + 24);
  *(_BYTE *)(v68 + 25) = *(_BYTE *)(v69 + 25);
  v71 = *(_QWORD *)(v69 + 40);
  *(_QWORD *)(v68 + 32) = *(_QWORD *)(v69 + 32);
  *(_QWORD *)(v68 + 40) = v71;
  *(_BYTE *)(v68 + 48) = *(_BYTE *)(v69 + 48);
  v72 = a1 + v67;
  v73 = a2 + v67;
  v74 = *(_QWORD *)(a2 + v67 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v74)
  {
    *(_QWORD *)v72 = *(_QWORD *)v73;
    *(_QWORD *)(v72 + 8) = v74;
    v75 = *(_QWORD *)(v73 + 24);
    *(_QWORD *)(v72 + 16) = *(_QWORD *)(v73 + 16);
    *(_QWORD *)(v72 + 24) = v75;
    v76 = *(_OWORD *)(v73 + 48);
    *(_OWORD *)(v72 + 32) = *(_OWORD *)(v73 + 32);
    *(_OWORD *)(v72 + 48) = v76;
    *(_WORD *)(v72 + 64) = *(_WORD *)(v73 + 64);
    *(_QWORD *)(v72 + 72) = *(_QWORD *)(v73 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v77 = *(_OWORD *)(v73 + 48);
    *(_OWORD *)(v72 + 32) = *(_OWORD *)(v73 + 32);
    *(_OWORD *)(v72 + 48) = v77;
    *(_OWORD *)(v72 + 64) = *(_OWORD *)(v73 + 64);
    v78 = *(_OWORD *)(v73 + 16);
    *(_OWORD *)v72 = *(_OWORD *)v73;
    *(_OWORD *)(v72 + 16) = v78;
  }
  v79 = v82[18];
  v80 = *(_QWORD *)(a2 + v79);
  if (v80 != 1)
    v80 = swift_bridgeObjectRetain();
  *(_QWORD *)(a1 + v79) = v80;
  *(_QWORD *)(a1 + v82[19]) = *(_QWORD *)(a2 + v82[19]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PaywallExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  __int128 *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a1 + v11 + 24);
  v15 = *(_QWORD *)(a2 + v11 + 24);
  if (v14)
  {
    if (v15)
    {
      *(_BYTE *)v12 = *(_BYTE *)v13;
      *(_DWORD *)(v12 + 4) = *(_DWORD *)(v13 + 4);
      *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
      *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
      *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
      *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
      v16 = *(_QWORD *)(v13 + 48);
      *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
      *(_QWORD *)(v12 + 48) = v16;
      *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
      *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)(v13 + 72);
      *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
      *(_QWORD *)(v12 + 72) = v17;
      *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
      *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
      *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
      *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
      *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
      *(_BYTE *)(v12 + 130) = *(_BYTE *)(v13 + 130);
      *(_BYTE *)(v12 + 131) = *(_BYTE *)(v13 + 131);
      *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
      *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
      *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
    }
    else
    {
      sub_1D5810518(v12);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      v20 = *(_OWORD *)(v13 + 64);
      v22 = *(_OWORD *)(v13 + 16);
      v21 = *(_OWORD *)(v13 + 32);
      *(_OWORD *)(v12 + 48) = *(_OWORD *)(v13 + 48);
      *(_OWORD *)(v12 + 64) = v20;
      *(_OWORD *)(v12 + 16) = v22;
      *(_OWORD *)(v12 + 32) = v21;
      v24 = *(_OWORD *)(v13 + 96);
      v23 = *(_OWORD *)(v13 + 112);
      v25 = *(_OWORD *)(v13 + 80);
      *(_QWORD *)(v12 + 127) = *(_QWORD *)(v13 + 127);
      *(_OWORD *)(v12 + 96) = v24;
      *(_OWORD *)(v12 + 112) = v23;
      *(_OWORD *)(v12 + 80) = v25;
    }
  }
  else if (v15)
  {
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
    *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
    *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
    *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
    *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
    v18 = *(_QWORD *)(v13 + 48);
    *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
    *(_QWORD *)(v12 + 48) = v18;
    *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
    *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
    v19 = *(_QWORD *)(v13 + 72);
    *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
    *(_QWORD *)(v12 + 72) = v19;
    *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
    *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
    *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
    *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
    *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
    *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
    *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
    *(_BYTE *)(v12 + 130) = *(_BYTE *)(v13 + 130);
    *(_BYTE *)(v12 + 131) = *(_BYTE *)(v13 + 131);
    *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
    *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
    *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
    v26 = *(_OWORD *)(v13 + 16);
    v27 = *(_OWORD *)(v13 + 32);
    v28 = *(_OWORD *)(v13 + 64);
    *(_OWORD *)(v12 + 48) = *(_OWORD *)(v13 + 48);
    *(_OWORD *)(v12 + 64) = v28;
    *(_OWORD *)(v12 + 16) = v26;
    *(_OWORD *)(v12 + 32) = v27;
    v29 = *(_OWORD *)(v13 + 80);
    v30 = *(_OWORD *)(v13 + 96);
    v31 = *(_OWORD *)(v13 + 112);
    *(_QWORD *)(v12 + 127) = *(_QWORD *)(v13 + 127);
    *(_OWORD *)(v12 + 96) = v30;
    *(_OWORD *)(v12 + 112) = v31;
    *(_OWORD *)(v12 + 80) = v29;
  }
  v32 = a3[7];
  v33 = a1 + v32;
  v34 = (__int128 *)(a2 + v32);
  v35 = *(_QWORD *)(a1 + v32 + 8);
  v36 = *(_QWORD *)(a2 + v32 + 8);
  if (v35)
  {
    if (v36)
    {
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *(_QWORD *)(v33 + 8) = *((_QWORD *)v34 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v33 + 16) = *((_BYTE *)v34 + 16);
      *(_BYTE *)(v33 + 17) = *((_BYTE *)v34 + 17);
      *(_QWORD *)(v33 + 24) = *((_QWORD *)v34 + 3);
      *(_QWORD *)(v33 + 32) = *((_QWORD *)v34 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E1784(v33);
      v37 = *((_QWORD *)v34 + 4);
      v38 = v34[1];
      *(_OWORD *)v33 = *v34;
      *(_OWORD *)(v33 + 16) = v38;
      *(_QWORD *)(v33 + 32) = v37;
    }
  }
  else if (v36)
  {
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *(_QWORD *)(v33 + 8) = *((_QWORD *)v34 + 1);
    *(_BYTE *)(v33 + 16) = *((_BYTE *)v34 + 16);
    *(_BYTE *)(v33 + 17) = *((_BYTE *)v34 + 17);
    *(_QWORD *)(v33 + 24) = *((_QWORD *)v34 + 3);
    *(_QWORD *)(v33 + 32) = *((_QWORD *)v34 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v39 = *v34;
    v40 = v34[1];
    *(_QWORD *)(v33 + 32) = *((_QWORD *)v34 + 4);
    *(_OWORD *)v33 = v39;
    *(_OWORD *)(v33 + 16) = v40;
  }
  v41 = a3[8];
  v42 = a1 + v41;
  v43 = (__int128 *)(a2 + v41);
  v44 = *(_QWORD *)(a1 + v41 + 16);
  v45 = *(_QWORD *)(a2 + v41 + 16);
  if (v44 == 1)
  {
    if (v45 == 1)
    {
      v46 = *v43;
      *(_QWORD *)(v42 + 16) = *((_QWORD *)v43 + 2);
      *(_OWORD *)v42 = v46;
    }
    else
    {
      *(_BYTE *)v42 = *(_BYTE *)v43;
      *(_QWORD *)(v42 + 8) = *((_QWORD *)v43 + 1);
      *(_QWORD *)(v42 + 16) = *((_QWORD *)v43 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v45 == 1)
  {
    sub_1D57D9100(v42);
    v47 = *((_QWORD *)v43 + 2);
    *(_OWORD *)v42 = *v43;
    *(_QWORD *)(v42 + 16) = v47;
  }
  else
  {
    *(_BYTE *)v42 = *(_BYTE *)v43;
    *(_QWORD *)(v42 + 8) = *((_QWORD *)v43 + 1);
    *(_QWORD *)(v42 + 16) = *((_QWORD *)v43 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v48 = a3[9];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = *(_QWORD *)(a1 + v48 + 16);
  v52 = *(_QWORD *)(a2 + v48 + 16);
  if (v51)
  {
    if (v52)
    {
      *(_BYTE *)v49 = *(_BYTE *)v50;
      *(_BYTE *)(v49 + 1) = *(_BYTE *)(v50 + 1);
      *(_QWORD *)(v49 + 8) = *(_QWORD *)(v50 + 8);
      *(_QWORD *)(v49 + 16) = *(_QWORD *)(v50 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v49 + 24) = *(_DWORD *)(v50 + 24);
      *(_DWORD *)(v49 + 28) = *(_DWORD *)(v50 + 28);
      *(_QWORD *)(v49 + 32) = *(_QWORD *)(v50 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v49 + 40) = *(_QWORD *)(v50 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v49 + 48) = *(_QWORD *)(v50 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v49 + 56) = *(_QWORD *)(v50 + 56);
      *(_QWORD *)(v49 + 64) = *(_QWORD *)(v50 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v49 + 72) = *(_QWORD *)(v50 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v49 + 80) = *(_BYTE *)(v50 + 80);
      *(_QWORD *)(v49 + 88) = *(_QWORD *)(v50 + 88);
      *(_QWORD *)(v49 + 96) = *(_QWORD *)(v50 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v53 = *(_QWORD *)(v50 + 104);
      *(_BYTE *)(v49 + 112) = *(_BYTE *)(v50 + 112);
      *(_QWORD *)(v49 + 104) = v53;
      *(_QWORD *)(v49 + 120) = *(_QWORD *)(v50 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v49 + 128) = *(_QWORD *)(v50 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v49);
      *(_OWORD *)v49 = *(_OWORD *)v50;
      v55 = *(_OWORD *)(v50 + 64);
      v57 = *(_OWORD *)(v50 + 16);
      v56 = *(_OWORD *)(v50 + 32);
      *(_OWORD *)(v49 + 48) = *(_OWORD *)(v50 + 48);
      *(_OWORD *)(v49 + 64) = v55;
      *(_OWORD *)(v49 + 16) = v57;
      *(_OWORD *)(v49 + 32) = v56;
      v59 = *(_OWORD *)(v50 + 96);
      v58 = *(_OWORD *)(v50 + 112);
      v60 = *(_OWORD *)(v50 + 80);
      *(_QWORD *)(v49 + 128) = *(_QWORD *)(v50 + 128);
      *(_OWORD *)(v49 + 96) = v59;
      *(_OWORD *)(v49 + 112) = v58;
      *(_OWORD *)(v49 + 80) = v60;
    }
  }
  else if (v52)
  {
    *(_BYTE *)v49 = *(_BYTE *)v50;
    *(_BYTE *)(v49 + 1) = *(_BYTE *)(v50 + 1);
    *(_QWORD *)(v49 + 8) = *(_QWORD *)(v50 + 8);
    *(_QWORD *)(v49 + 16) = *(_QWORD *)(v50 + 16);
    *(_DWORD *)(v49 + 24) = *(_DWORD *)(v50 + 24);
    *(_DWORD *)(v49 + 28) = *(_DWORD *)(v50 + 28);
    *(_QWORD *)(v49 + 32) = *(_QWORD *)(v50 + 32);
    *(_QWORD *)(v49 + 40) = *(_QWORD *)(v50 + 40);
    *(_QWORD *)(v49 + 48) = *(_QWORD *)(v50 + 48);
    *(_QWORD *)(v49 + 56) = *(_QWORD *)(v50 + 56);
    *(_QWORD *)(v49 + 64) = *(_QWORD *)(v50 + 64);
    *(_QWORD *)(v49 + 72) = *(_QWORD *)(v50 + 72);
    *(_BYTE *)(v49 + 80) = *(_BYTE *)(v50 + 80);
    *(_QWORD *)(v49 + 88) = *(_QWORD *)(v50 + 88);
    *(_QWORD *)(v49 + 96) = *(_QWORD *)(v50 + 96);
    v54 = *(_QWORD *)(v50 + 104);
    *(_BYTE *)(v49 + 112) = *(_BYTE *)(v50 + 112);
    *(_QWORD *)(v49 + 104) = v54;
    *(_QWORD *)(v49 + 120) = *(_QWORD *)(v50 + 120);
    *(_QWORD *)(v49 + 128) = *(_QWORD *)(v50 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v49 = *(_OWORD *)v50;
    v61 = *(_OWORD *)(v50 + 16);
    v62 = *(_OWORD *)(v50 + 32);
    v63 = *(_OWORD *)(v50 + 64);
    *(_OWORD *)(v49 + 48) = *(_OWORD *)(v50 + 48);
    *(_OWORD *)(v49 + 64) = v63;
    *(_OWORD *)(v49 + 16) = v61;
    *(_OWORD *)(v49 + 32) = v62;
    v64 = *(_OWORD *)(v50 + 80);
    v65 = *(_OWORD *)(v50 + 96);
    v66 = *(_OWORD *)(v50 + 112);
    *(_QWORD *)(v49 + 128) = *(_QWORD *)(v50 + 128);
    *(_OWORD *)(v49 + 96) = v65;
    *(_OWORD *)(v49 + 112) = v66;
    *(_OWORD *)(v49 + 80) = v64;
  }
  v67 = a3[10];
  v68 = (_BYTE *)(a1 + v67);
  v69 = (_BYTE *)(a2 + v67);
  *v68 = *v69;
  v68[1] = v69[1];
  v70 = a3[11];
  v71 = a1 + v70;
  v72 = a2 + v70;
  v73 = *(_QWORD *)(a1 + v70 + 8);
  v74 = *(_QWORD *)(a2 + v70 + 8);
  if (v73)
  {
    if (v74)
    {
      *(_QWORD *)v71 = *(_QWORD *)v72;
      *(_QWORD *)(v71 + 8) = *(_QWORD *)(v72 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v71 + 16) = *(_BYTE *)(v72 + 16);
      *(_BYTE *)(v71 + 17) = *(_BYTE *)(v72 + 17);
      *(_QWORD *)(v71 + 24) = *(_QWORD *)(v72 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE47C(v71);
      v75 = *(_OWORD *)(v72 + 16);
      *(_OWORD *)v71 = *(_OWORD *)v72;
      *(_OWORD *)(v71 + 16) = v75;
    }
  }
  else if (v74)
  {
    *(_QWORD *)v71 = *(_QWORD *)v72;
    *(_QWORD *)(v71 + 8) = *(_QWORD *)(v72 + 8);
    *(_BYTE *)(v71 + 16) = *(_BYTE *)(v72 + 16);
    *(_BYTE *)(v71 + 17) = *(_BYTE *)(v72 + 17);
    *(_QWORD *)(v71 + 24) = *(_QWORD *)(v72 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v76 = *(_OWORD *)(v72 + 16);
    *(_OWORD *)v71 = *(_OWORD *)v72;
    *(_OWORD *)(v71 + 16) = v76;
  }
  v77 = a3[12];
  v78 = a1 + v77;
  v79 = a2 + v77;
  *(_QWORD *)v78 = *(_QWORD *)(a2 + v77);
  *(_QWORD *)(v78 + 8) = *(_QWORD *)(a2 + v77 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v78 + 16) = *(_BYTE *)(v79 + 16);
  v80 = a3[13];
  v81 = (_QWORD *)(a1 + v80);
  v82 = (_QWORD *)(a2 + v80);
  *v81 = *v82;
  v81[1] = v82[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v83 = a3[14];
  v84 = a1 + v83;
  v85 = a2 + v83;
  *(_QWORD *)v84 = *(_QWORD *)(a2 + v83);
  *(_QWORD *)(v84 + 8) = *(_QWORD *)(a2 + v83 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v86 = *(_QWORD *)(v85 + 16);
  *(_BYTE *)(v84 + 24) = *(_BYTE *)(v85 + 24);
  *(_QWORD *)(v84 + 16) = v86;
  v87 = a3[15];
  v88 = a1 + v87;
  v89 = a2 + v87;
  *(_QWORD *)v88 = *(_QWORD *)(a2 + v87);
  *(_QWORD *)(v88 + 8) = *(_QWORD *)(a2 + v87 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v88 + 16) = *(_BYTE *)(v89 + 16);
  *(_BYTE *)(v88 + 17) = *(_BYTE *)(v89 + 17);
  v90 = a3[16];
  v91 = a1 + v90;
  v92 = a2 + v90;
  *(_BYTE *)v91 = *(_BYTE *)(a2 + v90);
  *(_QWORD *)(v91 + 8) = *(_QWORD *)(a2 + v90 + 8);
  *(_QWORD *)(v91 + 16) = *(_QWORD *)(a2 + v90 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v91 + 24) = *(_BYTE *)(v92 + 24);
  *(_BYTE *)(v91 + 25) = *(_BYTE *)(v92 + 25);
  *(_QWORD *)(v91 + 32) = *(_QWORD *)(v92 + 32);
  *(_QWORD *)(v91 + 40) = *(_QWORD *)(v92 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v91 + 48) = *(_BYTE *)(v92 + 48);
  v93 = a3[17];
  v94 = a1 + v93;
  v95 = a2 + v93;
  v96 = *(_QWORD *)(a1 + v93 + 8);
  v97 = *(_QWORD *)(a2 + v93 + 8);
  if (v96)
  {
    if (v97)
    {
      *(_QWORD *)v94 = *(_QWORD *)v95;
      *(_QWORD *)(v94 + 8) = *(_QWORD *)(v95 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v94 + 16) = *(_QWORD *)(v95 + 16);
      *(_QWORD *)(v94 + 24) = *(_QWORD *)(v95 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v94 + 32) = *(_DWORD *)(v95 + 32);
      v98 = *(_QWORD *)(v95 + 40);
      *(_BYTE *)(v94 + 48) = *(_BYTE *)(v95 + 48);
      *(_QWORD *)(v94 + 40) = v98;
      v99 = *(_QWORD *)(v95 + 56);
      *(_BYTE *)(v94 + 64) = *(_BYTE *)(v95 + 64);
      *(_QWORD *)(v94 + 56) = v99;
      *(_BYTE *)(v94 + 65) = *(_BYTE *)(v95 + 65);
      *(_QWORD *)(v94 + 72) = *(_QWORD *)(v95 + 72);
    }
    else
    {
      sub_1D58388FC(v94);
      *(_OWORD *)v94 = *(_OWORD *)v95;
      v102 = *(_OWORD *)(v95 + 64);
      v104 = *(_OWORD *)(v95 + 16);
      v103 = *(_OWORD *)(v95 + 32);
      *(_OWORD *)(v94 + 48) = *(_OWORD *)(v95 + 48);
      *(_OWORD *)(v94 + 64) = v102;
      *(_OWORD *)(v94 + 16) = v104;
      *(_OWORD *)(v94 + 32) = v103;
    }
  }
  else if (v97)
  {
    *(_QWORD *)v94 = *(_QWORD *)v95;
    *(_QWORD *)(v94 + 8) = *(_QWORD *)(v95 + 8);
    *(_QWORD *)(v94 + 16) = *(_QWORD *)(v95 + 16);
    *(_QWORD *)(v94 + 24) = *(_QWORD *)(v95 + 24);
    v100 = *(_OWORD *)(v95 + 32);
    v101 = *(_OWORD *)(v95 + 48);
    *(_BYTE *)(v94 + 64) = *(_BYTE *)(v95 + 64);
    *(_OWORD *)(v94 + 32) = v100;
    *(_OWORD *)(v94 + 48) = v101;
    *(_BYTE *)(v94 + 65) = *(_BYTE *)(v95 + 65);
    *(_QWORD *)(v94 + 72) = *(_QWORD *)(v95 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v94 = *(_OWORD *)v95;
    v105 = *(_OWORD *)(v95 + 16);
    v106 = *(_OWORD *)(v95 + 32);
    v107 = *(_OWORD *)(v95 + 64);
    *(_OWORD *)(v94 + 48) = *(_OWORD *)(v95 + 48);
    *(_OWORD *)(v94 + 64) = v107;
    *(_OWORD *)(v94 + 16) = v105;
    *(_OWORD *)(v94 + 32) = v106;
  }
  v108 = a3[18];
  v109 = (uint64_t *)(a1 + v108);
  v110 = *(_QWORD *)(a2 + v108);
  if (*(_QWORD *)(a1 + v108) == 1)
  {
    if (v110 != 1)
    {
      *v109 = v110;
      swift_bridgeObjectRetain();
      goto LABEL_51;
    }
    v111 = 1;
  }
  else
  {
    if (v110 != 1)
    {
      *v109 = v110;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_51;
    }
    sub_1D5A6B50C(a1 + v108);
    v111 = *(_QWORD *)(a2 + v108);
  }
  *v109 = v111;
LABEL_51:
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D5A6B50C(uint64_t a1)
{
  destroy for GroupSectionData();
  return a1;
}

uint64_t initializeWithTake for PaywallExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _OWORD *v33;
  _OWORD *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  _OWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  _OWORD *v53;
  __int128 *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  *(_QWORD *)(v13 + 127) = *(_QWORD *)(v14 + 127);
  v16 = *(_OWORD *)(v14 + 112);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(v14 + 96);
  *(_OWORD *)(v13 + 112) = v16;
  v17 = *(_OWORD *)(v14 + 80);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v14 + 64);
  *(_OWORD *)(v13 + 80) = v17;
  v18 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v18;
  v19 = a1 + v12;
  v20 = a2 + v12;
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  v22 = a3[8];
  v23 = a3[9];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  v26 = a1 + v23;
  v27 = a2 + v23;
  v28 = *(_OWORD *)(v27 + 48);
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  *(_OWORD *)(v26 + 48) = v28;
  *(_QWORD *)(v26 + 128) = *(_QWORD *)(v27 + 128);
  v29 = *(_OWORD *)(v27 + 112);
  *(_OWORD *)(v26 + 96) = *(_OWORD *)(v27 + 96);
  *(_OWORD *)(v26 + 112) = v29;
  v30 = *(_OWORD *)(v27 + 80);
  *(_OWORD *)(v26 + 64) = *(_OWORD *)(v27 + 64);
  *(_OWORD *)(v26 + 80) = v30;
  v31 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v31;
  v32 = a3[11];
  *(_WORD *)(a1 + a3[10]) = *(_WORD *)(a2 + a3[10]);
  v33 = (_OWORD *)(a1 + v32);
  v34 = (_OWORD *)(a2 + v32);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  v36 = a3[12];
  v37 = a3[13];
  v38 = a1 + v36;
  v39 = a2 + v36;
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_BYTE *)(v38 + 16) = *(_BYTE *)(v39 + 16);
  *(_OWORD *)(a1 + v37) = *(_OWORD *)(a2 + v37);
  v40 = a3[14];
  v41 = a3[15];
  v42 = (_OWORD *)(a1 + v40);
  v43 = (_OWORD *)(a2 + v40);
  *v42 = *v43;
  *(_OWORD *)((char *)v42 + 9) = *(_OWORD *)((char *)v43 + 9);
  v44 = a1 + v41;
  v45 = a2 + v41;
  *(_OWORD *)v44 = *(_OWORD *)v45;
  *(_WORD *)(v44 + 16) = *(_WORD *)(v45 + 16);
  v46 = a3[16];
  v47 = a3[17];
  v48 = a1 + v46;
  v49 = (__int128 *)(a2 + v46);
  v50 = *v49;
  v51 = v49[1];
  v52 = v49[2];
  *(_BYTE *)(v48 + 48) = *((_BYTE *)v49 + 48);
  *(_OWORD *)(v48 + 16) = v51;
  *(_OWORD *)(v48 + 32) = v52;
  *(_OWORD *)v48 = v50;
  v53 = (_OWORD *)(a1 + v47);
  v54 = (__int128 *)(a2 + v47);
  v55 = v54[4];
  v56 = v54[2];
  v53[3] = v54[3];
  v53[4] = v55;
  v57 = *v54;
  v53[1] = v54[1];
  v53[2] = v56;
  *v53 = v57;
  v58 = a3[19];
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  *(_QWORD *)(a1 + v58) = *(_QWORD *)(a2 + v58);
  return a1;
}

uint64_t assignWithTake for PaywallExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  if (*(_QWORD *)(a1 + v11 + 24))
  {
    v14 = *(_QWORD *)(v13 + 24);
    if (v14)
    {
      *(_BYTE *)v12 = *(_BYTE *)v13;
      *(_DWORD *)(v12 + 4) = *(_DWORD *)(v13 + 4);
      *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
      *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
      *(_QWORD *)(v12 + 24) = v14;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
      v15 = *(_QWORD *)(v13 + 48);
      *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
      *(_QWORD *)(v12 + 48) = v15;
      *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
      *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
      *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
      *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
      *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
      *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
      *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
      *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
      *(_BYTE *)(v12 + 130) = *(_BYTE *)(v13 + 130);
      *(_BYTE *)(v12 + 131) = *(_BYTE *)(v13 + 131);
      *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
      *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
      *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
      goto LABEL_6;
    }
    sub_1D5810518(v12);
  }
  v16 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(v12 + 112) = v16;
  *(_QWORD *)(v12 + 127) = *(_QWORD *)(v13 + 127);
  v17 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(v12 + 48) = v17;
  v18 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(v12 + 80) = v18;
  v19 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v19;
LABEL_6:
  v20 = a3[7];
  v21 = a1 + v20;
  v22 = a2 + v20;
  if (*(_QWORD *)(a1 + v20 + 8))
  {
    v23 = *(_QWORD *)(v22 + 8);
    if (v23)
    {
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *(_QWORD *)(v21 + 8) = v23;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v21 + 16) = *(_BYTE *)(v22 + 16);
      *(_BYTE *)(v21 + 17) = *(_BYTE *)(v22 + 17);
      v24 = *(_QWORD *)(v22 + 32);
      *(_QWORD *)(v21 + 24) = *(_QWORD *)(v22 + 24);
      *(_QWORD *)(v21 + 32) = v24;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D57E1784(v21);
  }
  v25 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v25;
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
LABEL_11:
  v26 = a3[8];
  v27 = a1 + v26;
  v28 = a2 + v26;
  if (*(_QWORD *)(a1 + v26 + 16) == 1)
  {
LABEL_14:
    *(_OWORD *)v27 = *(_OWORD *)v28;
    *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
    goto LABEL_16;
  }
  v29 = *(_QWORD *)(v28 + 16);
  if (v29 == 1)
  {
    sub_1D57D9100(v27);
    goto LABEL_14;
  }
  *(_BYTE *)v27 = *(_BYTE *)v28;
  *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
  *(_QWORD *)(v27 + 16) = v29;
  swift_bridgeObjectRelease();
LABEL_16:
  v30 = a3[9];
  v31 = a1 + v30;
  v32 = a2 + v30;
  if (*(_QWORD *)(a1 + v30 + 16))
  {
    v33 = *(_QWORD *)(v32 + 16);
    if (v33)
    {
      *(_WORD *)v31 = *(_WORD *)v32;
      *(_QWORD *)(v31 + 8) = *(_QWORD *)(v32 + 8);
      *(_QWORD *)(v31 + 16) = v33;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 24) = *(_QWORD *)(v32 + 24);
      *(_QWORD *)(v31 + 32) = *(_QWORD *)(v32 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 40) = *(_QWORD *)(v32 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 48) = *(_QWORD *)(v32 + 48);
      swift_bridgeObjectRelease();
      v34 = *(_QWORD *)(v32 + 64);
      *(_QWORD *)(v31 + 56) = *(_QWORD *)(v32 + 56);
      *(_QWORD *)(v31 + 64) = v34;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 72) = *(_QWORD *)(v32 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v31 + 80) = *(_BYTE *)(v32 + 80);
      v35 = *(_QWORD *)(v32 + 96);
      *(_QWORD *)(v31 + 88) = *(_QWORD *)(v32 + 88);
      *(_QWORD *)(v31 + 96) = v35;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 104) = *(_QWORD *)(v32 + 104);
      *(_BYTE *)(v31 + 112) = *(_BYTE *)(v32 + 112);
      *(_QWORD *)(v31 + 120) = *(_QWORD *)(v32 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 128) = *(_QWORD *)(v32 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1D57E17B8(v31);
  }
  v36 = *(_OWORD *)(v32 + 112);
  *(_OWORD *)(v31 + 96) = *(_OWORD *)(v32 + 96);
  *(_OWORD *)(v31 + 112) = v36;
  *(_QWORD *)(v31 + 128) = *(_QWORD *)(v32 + 128);
  v37 = *(_OWORD *)(v32 + 48);
  *(_OWORD *)(v31 + 32) = *(_OWORD *)(v32 + 32);
  *(_OWORD *)(v31 + 48) = v37;
  v38 = *(_OWORD *)(v32 + 80);
  *(_OWORD *)(v31 + 64) = *(_OWORD *)(v32 + 64);
  *(_OWORD *)(v31 + 80) = v38;
  v39 = *(_OWORD *)(v32 + 16);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v39;
LABEL_21:
  v40 = a3[11];
  *(_WORD *)(a1 + a3[10]) = *(_WORD *)(a2 + a3[10]);
  v41 = a1 + v40;
  v42 = a2 + v40;
  if (*(_QWORD *)(a1 + v40 + 8))
  {
    v43 = *(_QWORD *)(v42 + 8);
    if (v43)
    {
      *(_QWORD *)v41 = *(_QWORD *)v42;
      *(_QWORD *)(v41 + 8) = v43;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v41 + 16) = *(_BYTE *)(v42 + 16);
      *(_BYTE *)(v41 + 17) = *(_BYTE *)(v42 + 17);
      *(_QWORD *)(v41 + 24) = *(_QWORD *)(v42 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_1D57EE47C(a1 + v40);
  }
  v44 = *(_OWORD *)(v42 + 16);
  *(_OWORD *)v41 = *(_OWORD *)v42;
  *(_OWORD *)(v41 + 16) = v44;
LABEL_26:
  v45 = a3[12];
  v46 = a1 + v45;
  v47 = a2 + v45;
  v48 = *(_QWORD *)(a2 + v45 + 8);
  *(_QWORD *)v46 = *(_QWORD *)(a2 + v45);
  *(_QWORD *)(v46 + 8) = v48;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v46 + 16) = *(_BYTE *)(v47 + 16);
  v49 = a3[13];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (uint64_t *)(a2 + v49);
  v53 = *v51;
  v52 = v51[1];
  *v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  v54 = a3[14];
  v55 = a1 + v54;
  v56 = a2 + v54;
  v57 = *(_QWORD *)(a2 + v54 + 8);
  *(_QWORD *)v55 = *(_QWORD *)(a2 + v54);
  *(_QWORD *)(v55 + 8) = v57;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v55 + 16) = *(_QWORD *)(v56 + 16);
  *(_BYTE *)(v55 + 24) = *(_BYTE *)(v56 + 24);
  v58 = a3[15];
  v59 = a1 + v58;
  v60 = a2 + v58;
  v61 = *(_QWORD *)(a2 + v58 + 8);
  *(_QWORD *)v59 = *(_QWORD *)(a2 + v58);
  *(_QWORD *)(v59 + 8) = v61;
  swift_bridgeObjectRelease();
  *(_WORD *)(v59 + 16) = *(_WORD *)(v60 + 16);
  v62 = a3[16];
  v63 = a1 + v62;
  v64 = a2 + v62;
  *(_BYTE *)v63 = *(_BYTE *)(a2 + v62);
  v65 = *(_QWORD *)(a2 + v62 + 16);
  *(_QWORD *)(v63 + 8) = *(_QWORD *)(a2 + v62 + 8);
  *(_QWORD *)(v63 + 16) = v65;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v63 + 24) = *(_BYTE *)(v64 + 24);
  *(_BYTE *)(v63 + 25) = *(_BYTE *)(v64 + 25);
  v66 = *(_QWORD *)(v64 + 40);
  *(_QWORD *)(v63 + 32) = *(_QWORD *)(v64 + 32);
  *(_QWORD *)(v63 + 40) = v66;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v63 + 48) = *(_BYTE *)(v64 + 48);
  v67 = a3[17];
  v68 = a1 + v67;
  v69 = a2 + v67;
  if (*(_QWORD *)(a1 + v67 + 8))
  {
    v70 = *(_QWORD *)(v69 + 8);
    if (v70)
    {
      *(_QWORD *)v68 = *(_QWORD *)v69;
      *(_QWORD *)(v68 + 8) = v70;
      swift_bridgeObjectRelease();
      v71 = *(_QWORD *)(v69 + 24);
      *(_QWORD *)(v68 + 16) = *(_QWORD *)(v69 + 16);
      *(_QWORD *)(v68 + 24) = v71;
      swift_bridgeObjectRelease();
      *(_DWORD *)(v68 + 32) = *(_DWORD *)(v69 + 32);
      *(_QWORD *)(v68 + 40) = *(_QWORD *)(v69 + 40);
      *(_BYTE *)(v68 + 48) = *(_BYTE *)(v69 + 48);
      *(_QWORD *)(v68 + 56) = *(_QWORD *)(v69 + 56);
      *(_BYTE *)(v68 + 64) = *(_BYTE *)(v69 + 64);
      *(_BYTE *)(v68 + 65) = *(_BYTE *)(v69 + 65);
      *(_QWORD *)(v68 + 72) = *(_QWORD *)(v69 + 72);
      goto LABEL_31;
    }
    sub_1D58388FC(v68);
  }
  v72 = *(_OWORD *)(v69 + 48);
  *(_OWORD *)(v68 + 32) = *(_OWORD *)(v69 + 32);
  *(_OWORD *)(v68 + 48) = v72;
  *(_OWORD *)(v68 + 64) = *(_OWORD *)(v69 + 64);
  v73 = *(_OWORD *)(v69 + 16);
  *(_OWORD *)v68 = *(_OWORD *)v69;
  *(_OWORD *)(v68 + 16) = v73;
LABEL_31:
  v74 = a3[18];
  v75 = (_QWORD *)(a1 + v74);
  v76 = *(_QWORD *)(a2 + v74);
  if (*(_QWORD *)(a1 + v74) != 1)
  {
    if (v76 != 1)
    {
      *v75 = v76;
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    sub_1D5A6B50C(a1 + v74);
    v76 = *(_QWORD *)(a2 + v74);
  }
  *v75 = v76;
LABEL_36:
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PaywallExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A6BCBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 48) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for PaywallExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A6BD74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 48) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5A6BE1C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PaywallExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_1D5A6BF78 + 4 * byte_1D5AE54E5[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1D5A6BFAC + 4 * byte_1D5AE54E0[v4]))();
}

uint64_t sub_1D5A6BFAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A6BFB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A6BFBCLL);
  return result;
}

uint64_t sub_1D5A6BFC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A6BFD0);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_1D5A6BFD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A6BFDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaywallExposureEvent.Model.CodingKeys()
{
  return &type metadata for PaywallExposureEvent.Model.CodingKeys;
}

unint64_t sub_1D5A6BFFC()
{
  unint64_t result;

  result = qword_1EFF51F18;
  if (!qword_1EFF51F18)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE588C, &type metadata for PaywallExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51F18);
  }
  return result;
}

unint64_t sub_1D5A6C044()
{
  unint64_t result;

  result = qword_1EFF51F20;
  if (!qword_1EFF51F20)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE57FC, &type metadata for PaywallExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51F20);
  }
  return result;
}

unint64_t sub_1D5A6C08C()
{
  unint64_t result;

  result = qword_1EFF51F28;
  if (!qword_1EFF51F28)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE5824, &type metadata for PaywallExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51F28);
  }
  return result;
}

uint64_t sub_1D5A6C0D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x446C6C6177796170 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AED700 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6144656C7A7A7570 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001D5AF26A0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AF1020)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 15;
    else
      return 16;
  }
}

uint64_t SportsRemoveFavoritesSyncData.removedCount.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t SportsRemoveFavoritesSyncData.removedCount.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*SportsRemoveFavoritesSyncData.removedCount.modify())()
{
  return nullsub_1;
}

uint64_t SportsRemoveFavoritesSyncData.init(removedCount:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1D5A6C7B4()
{
  return 0x436465766F6D6572;
}

uint64_t sub_1D5A6C7D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x436465766F6D6572 && a2 == 0xEC000000746E756FLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5A6C880()
{
  sub_1D5A6C9C0();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A6C8A8()
{
  sub_1D5A6C9C0();
  return sub_1D5AAEEE0();
}

uint64_t SportsRemoveFavoritesSyncData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5A6CB24(0, &qword_1EFF51F30, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A6C9C0();
  sub_1D5AAEEC8();
  sub_1D5AAED78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D5A6C9C0()
{
  unint64_t result;

  result = qword_1EFF51F38;
  if (!qword_1EFF51F38)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE5A94, &type metadata for SportsRemoveFavoritesSyncData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51F38);
  }
  return result;
}

uint64_t SportsRemoveFavoritesSyncData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v12;

  sub_1D5A6CB24(0, &qword_1EFF51F40, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A6C9C0();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECDC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A6CB24(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A6C9C0();
    v7 = a3(a1, &type metadata for SportsRemoveFavoritesSyncData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A6CB88@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return SportsRemoveFavoritesSyncData.init(from:)(a1, a2);
}

uint64_t sub_1D5A6CB9C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5A6CB24(0, &qword_1EFF51F30, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A6C9C0();
  sub_1D5AAEEC8();
  sub_1D5AAED78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for SportsRemoveFavoritesSyncData()
{
  return &type metadata for SportsRemoveFavoritesSyncData;
}

uint64_t storeEnumTagSinglePayload for SportsRemoveFavoritesSyncData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5A6CCDC + 4 * byte_1D5AE5910[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5A6CCFC + 4 * byte_1D5AE5915[v4]))();
}

_BYTE *sub_1D5A6CCDC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5A6CCFC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A6CD04(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A6CD0C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A6CD14(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A6CD1C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsRemoveFavoritesSyncData.CodingKeys()
{
  return &type metadata for SportsRemoveFavoritesSyncData.CodingKeys;
}

unint64_t sub_1D5A6CD3C()
{
  unint64_t result;

  result = qword_1EFF51F48;
  if (!qword_1EFF51F48)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE5A6C, &type metadata for SportsRemoveFavoritesSyncData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51F48);
  }
  return result;
}

unint64_t sub_1D5A6CD84()
{
  unint64_t result;

  result = qword_1EFF51F50;
  if (!qword_1EFF51F50)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE59DC, &type metadata for SportsRemoveFavoritesSyncData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51F50);
  }
  return result;
}

unint64_t sub_1D5A6CDCC()
{
  unint64_t result;

  result = qword_1EFF51F58;
  if (!qword_1EFF51F58)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE5A04, &type metadata for SportsRemoveFavoritesSyncData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51F58);
  }
  return result;
}

NewsAnalytics::AuxiliaryData_optional __swiftcall FormatContent.Resolved.auxiliaryData(itemIdentifier:)(Swift::String itemIdentifier)
{
  char **v1;
  void *object;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  Swift::Bool v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  void (*v39)(char *, unint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void (*v56)(char *, unint64_t, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  id *v72;
  int v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  id *v90;
  int v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  unint64_t v102;
  _QWORD *v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  char *v109;
  char *v110;
  char **v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  id *v119;
  char *v120;
  id *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t countAndFlagsBits;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  NewsAnalytics::AuxiliaryData_optional result;

  object = itemIdentifier._object;
  countAndFlagsBits = itemIdentifier._countAndFlagsBits;
  v111 = v1;
  v114 = sub_1D5AAE700();
  v116 = *(_QWORD *)(v114 - 8);
  MEMORY[0x1E0C80A78](v114);
  v113 = (char *)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D5AAE6E8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v121 = (id *)((char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v119 = (id *)((char *)&v98 - v8);
  v9 = sub_1D5AAE730();
  v130 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v120 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v118 = (char *)&v98 - v12;
  sub_1D57B76A8(0, &qword_1ED9CEF10, (void (*)(uint64_t))MEMORY[0x1E0D5FCF0]);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v98 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v125 = (char *)&v98 - v17;
  v18 = sub_1D5AAE718();
  v127 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x1E0C80A78](v18);
  v110 = (char *)&v98 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v109 = (char *)&v98 - v21;
  v22 = sub_1D5AAE604();
  v131 = *(_QWORD *)(v22 - 8);
  v132 = v22;
  v23 = MEMORY[0x1E0C80A78](v22);
  v128 = (char *)&v98 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v98 - v25;
  v112 = sub_1D5AAE670();
  v27 = *(_QWORD *)(v112 - 8);
  MEMORY[0x1E0C80A78](v112);
  v115 = (char *)&v98 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = (_QWORD *)sub_1D5AAE5C8();
  v31 = v29[2];
  if (v31)
  {
    v32 = 0;
    v33 = (char *)v29 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
    v122 = v5;
    v123 = v4;
    v126 = v9;
    v105 = v26;
    v108 = v29;
    v107 = v27;
    v101 = v31;
    v100 = v33;
    while (v32 < v29[2])
    {
      v34 = *(_QWORD *)(v27 + 72);
      v104 = v32;
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v115, &v33[v34 * v32], v112);
      v35 = sub_1D5AAE658();
      v36 = *(_QWORD *)(v35 + 16);
      if (v36)
      {
        v37 = (*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
        v106 = v35;
        v38 = v35 + v37;
        v124 = *(_QWORD *)(v131 + 72);
        v39 = *(void (**)(char *, unint64_t, uint64_t))(v131 + 16);
        v40 = v132;
        while (1)
        {
          v39(v26, v38, v40);
          v41 = sub_1D5AAE5F8();
          if (*(_QWORD *)(v41 + 16))
          {
            swift_bridgeObjectRetain();
            v42 = sub_1D5948F70(countAndFlagsBits, (uint64_t)object);
            v44 = v127;
            v45 = (uint64_t)v125;
            if ((v43 & 1) != 0)
            {
              (*(void (**)(char *, unint64_t, uint64_t))(v127 + 16))(v125, *(_QWORD *)(v41 + 56) + *(_QWORD *)(v127 + 72) * v42, v18);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v45, 0, 1, v18);
            }
            else
            {
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v127 + 56))(v125, 1, 1, v18);
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            v44 = v127;
            v45 = (uint64_t)v125;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v127 + 56))(v125, 1, 1, v18);
          }
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v45, 1, v18) != 1)
            break;
          v40 = v132;
          (*(void (**)(char *, uint64_t))(v131 + 8))(v26, v132);
          sub_1D5A6D968(v45);
          v38 += v124;
          if (!--v36)
            goto LABEL_14;
        }
        v81 = v127;
        (*(void (**)(char *, uint64_t, uint64_t))(v127 + 32))(v109, v45, v18);
        v82 = sub_1D5AAE70C();
        v83 = *(_QWORD *)(v82 + 16);
        if (v83)
        {
          v84 = v82 + ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80));
          v85 = *(_QWORD *)(v130 + 72);
          v128 = *(char **)(v130 + 16);
          countAndFlagsBits = v85;
          LODWORD(v125) = *MEMORY[0x1E0D5F7C8];
          swift_bridgeObjectRetain();
          v64 = (char *)MEMORY[0x1E0DEE9D8];
          v87 = v122;
          v86 = v123;
          v88 = v126;
          v89 = v118;
          v90 = v119;
          do
          {
            ((void (*)(char *, unint64_t, uint64_t))v128)(v89, v84, v88);
            sub_1D5AAE724();
            v91 = (*(uint64_t (**)(id *, uint64_t))(v87 + 88))(v90, v86);
            if (v91 == (_DWORD)v125)
            {
              (*(void (**)(id *, uint64_t))(v87 + 96))(v90, v86);
              v92 = objc_msgSend(*v90, sel_identifier);
              v124 = sub_1D5AAE820();
              v94 = v93;
              swift_unknownObjectRelease();

              v88 = v126;
              (*(void (**)(char *, uint64_t))(v130 + 8))(v89, v126);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v64 = sub_1D5873168(0, *((_QWORD *)v64 + 2) + 1, 1, v64);
              v96 = *((_QWORD *)v64 + 2);
              v95 = *((_QWORD *)v64 + 3);
              if (v96 >= v95 >> 1)
                v64 = sub_1D5873168((char *)(v95 > 1), v96 + 1, 1, v64);
              *((_QWORD *)v64 + 2) = v96 + 1;
              v97 = &v64[16 * v96];
              *((_QWORD *)v97 + 4) = v124;
              *((_QWORD *)v97 + 5) = v94;
              v87 = v122;
              v86 = v123;
              v89 = v118;
              v90 = v119;
            }
            else
            {
              (*(void (**)(id *, uint64_t))(v87 + 8))(v90, v86);
              (*(void (**)(char *, uint64_t))(v130 + 8))(v89, v88);
            }
            v84 += countAndFlagsBits;
            --v83;
          }
          while (v83);
          swift_bridgeObjectRelease_n();
          v26 = v105;
          v81 = v127;
        }
        else
        {
          swift_bridgeObjectRelease();
          v64 = (char *)MEMORY[0x1E0DEE9D8];
        }
        (*(void (**)(char *, uint64_t))(v81 + 8))(v109, v18);
        (*(void (**)(char *, uint64_t))(v131 + 8))(v26, v132);
        goto LABEL_58;
      }
LABEL_14:
      swift_bridgeObjectRelease();
      v29 = (_QWORD *)sub_1D5AAE664();
      v46 = v29;
      v47 = v29[2];
      v48 = v127;
      if (v47)
      {
        v49 = 0;
        v124 = (uint64_t)v29
             + ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80));
        v103 = v29;
        v99 = v47;
        while (1)
        {
          if (v49 >= v46[2])
          {
            __break(1u);
            goto LABEL_61;
          }
          (*(void (**)(char *, unint64_t, uint64_t))(v116 + 16))(v113, v124 + *(_QWORD *)(v116 + 72) * v49, v114);
          v50 = sub_1D5AAE6F4();
          v51 = *(_QWORD *)(v50 + 16);
          if (v51)
            break;
          swift_bridgeObjectRelease();
LABEL_29:
          ++v49;
          v29 = (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v116 + 8))(v113, v114);
          if (v49 == v47)
            goto LABEL_30;
        }
        v102 = v49;
        v52 = v48;
        v53 = (*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
        v106 = v50;
        v54 = v50 + v53;
        v55 = *(_QWORD *)(v131 + 72);
        v56 = *(void (**)(char *, unint64_t, uint64_t))(v131 + 16);
        v57 = v132;
        v58 = v128;
        while (1)
        {
          v56(v58, v54, v57);
          v59 = sub_1D5AAE5F8();
          if (*(_QWORD *)(v59 + 16))
          {
            swift_bridgeObjectRetain();
            v60 = sub_1D5948F70(countAndFlagsBits, (uint64_t)object);
            v61 = v52;
            if ((v62 & 1) != 0)
            {
              (*(void (**)(char *, unint64_t, uint64_t))(v52 + 16))(v16, *(_QWORD *)(v59 + 56) + *(_QWORD *)(v52 + 72) * v60, v18);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v16, 0, 1, v18);
            }
            else
            {
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v16, 1, 1, v18);
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            v61 = v52;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v16, 1, 1, v18);
          }
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v16, 1, v18) != 1)
            break;
          v57 = v132;
          v58 = v128;
          (*(void (**)(char *, uint64_t))(v131 + 8))(v128, v132);
          sub_1D5A6D968((uint64_t)v16);
          v54 += v55;
          if (!--v51)
          {
            swift_bridgeObjectRelease();
            v48 = v52;
            v26 = v105;
            v46 = v103;
            v47 = v99;
            v49 = v102;
            goto LABEL_29;
          }
        }
        (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v110, v16, v18);
        v65 = sub_1D5AAE70C();
        v66 = *(_QWORD *)(v65 + 16);
        if (v66)
        {
          v67 = v65 + ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80));
          countAndFlagsBits = *(_QWORD *)(v130 + 72);
          v125 = *(char **)(v130 + 16);
          LODWORD(v124) = *MEMORY[0x1E0D5F7C8];
          v119 = (id *)v65;
          swift_bridgeObjectRetain();
          v64 = (char *)MEMORY[0x1E0DEE9D8];
          v69 = v122;
          v68 = v123;
          v70 = v126;
          v71 = v120;
          v72 = v121;
          v117 = v18;
          do
          {
            ((void (*)(char *, unint64_t, uint64_t))v125)(v71, v67, v70);
            sub_1D5AAE724();
            v73 = (*(uint64_t (**)(id *, uint64_t))(v69 + 88))(v72, v68);
            if (v73 == (_DWORD)v124)
            {
              (*(void (**)(id *, uint64_t))(v69 + 96))(v72, v68);
              v74 = objc_msgSend(*v72, sel_identifier);
              v75 = sub_1D5AAE820();
              v77 = v76;
              swift_unknownObjectRelease();

              (*(void (**)(char *, uint64_t))(v130 + 8))(v71, v126);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v64 = sub_1D5873168(0, *((_QWORD *)v64 + 2) + 1, 1, v64);
              v79 = *((_QWORD *)v64 + 2);
              v78 = *((_QWORD *)v64 + 3);
              if (v79 >= v78 >> 1)
                v64 = sub_1D5873168((char *)(v78 > 1), v79 + 1, 1, v64);
              *((_QWORD *)v64 + 2) = v79 + 1;
              v80 = &v64[16 * v79];
              *((_QWORD *)v80 + 4) = v75;
              *((_QWORD *)v80 + 5) = v77;
              v69 = v122;
              v68 = v123;
              v70 = v126;
              v71 = v120;
              v72 = v121;
              v18 = v117;
            }
            else
            {
              (*(void (**)(id *, uint64_t))(v69 + 8))(v72, v68);
              (*(void (**)(char *, uint64_t))(v130 + 8))(v71, v70);
            }
            v67 += countAndFlagsBits;
            --v66;
          }
          while (v66);
          swift_bridgeObjectRelease_n();
        }
        else
        {
          swift_bridgeObjectRelease();
          v64 = (char *)MEMORY[0x1E0DEE9D8];
        }
        (*(void (**)(char *, uint64_t))(v61 + 8))(v110, v18);
        (*(void (**)(char *, uint64_t))(v131 + 8))(v128, v132);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v116 + 8))(v113, v114);
LABEL_58:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v107 + 8))(v115, v112);
        v29 = (_QWORD *)swift_bridgeObjectRelease();
        goto LABEL_59;
      }
LABEL_30:
      swift_bridgeObjectRelease();
      v63 = v104 + 1;
      v27 = v107;
      (*(void (**)(char *, uint64_t))(v107 + 8))(v115, v112);
      v32 = v63;
      v29 = v108;
      v33 = v100;
      if (v63 == v101)
        goto LABEL_31;
    }
LABEL_61:
    __break(1u);
  }
  else
  {
LABEL_31:
    v29 = (_QWORD *)swift_bridgeObjectRelease();
    v64 = 0;
LABEL_59:
    *v111 = v64;
  }
  result.value.articleIDs._rawValue = v29;
  result.is_nil = v30;
  return result;
}

uint64_t sub_1D5A6D968(uint64_t a1)
{
  uint64_t v2;

  sub_1D57B76A8(0, &qword_1ED9CEF10, (void (*)(uint64_t))MEMORY[0x1E0D5FCF0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ScienceData.init(agedPersonalizationScore:autoSubscribeCtr:computedGlobalScoreCoefficient:conversionMultiplier:dampenedStaticMultiplier:featureCtr:paidNonPaidSubscriptionCtr:personalizationScore:qualitativeMultiplier:rawPersonalizationScore:staticMultiplier:subscribedChannelCtr:userFeedbackScore:rawUserFeedbackScore:fractionalCohortMembership:titleEmbeddingScore:tabiScore:clientScoreCoefficient:conversionCoefficient:multiplier:halfLifeCoefficient:serverScoreDemocratizationFactor:autofavoritedScoreCoefficient:nicheContentMuliplier:contentTriggerDampenerCoefficient:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, double a14@<D4>, double a15@<D5>, double a16@<D6>, double a17@<D7>, __int128 a18, __int128 a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32,uint64_t a33,char a34)
{
  *(double *)a9 = a10;
  *(double *)(a9 + 8) = a11;
  *(double *)(a9 + 16) = a12;
  *(double *)(a9 + 24) = a13;
  *(double *)(a9 + 32) = a14;
  *(double *)(a9 + 40) = a15;
  *(double *)(a9 + 48) = a16;
  *(double *)(a9 + 56) = a17;
  *(_OWORD *)(a9 + 64) = a18;
  *(_OWORD *)(a9 + 80) = a19;
  *(_QWORD *)(a9 + 96) = a20;
  *(_QWORD *)(a9 + 104) = a21;
  *(_QWORD *)(a9 + 112) = result;
  *(_QWORD *)(a9 + 120) = a2;
  *(_BYTE *)(a9 + 128) = a3 & 1;
  *(_QWORD *)(a9 + 136) = a4;
  *(_BYTE *)(a9 + 144) = a5 & 1;
  *(_QWORD *)(a9 + 152) = a6;
  *(_BYTE *)(a9 + 160) = a7 & 1;
  *(_QWORD *)(a9 + 168) = a8;
  *(_BYTE *)(a9 + 176) = a22 & 1;
  *(_QWORD *)(a9 + 184) = a23;
  *(_BYTE *)(a9 + 192) = a24 & 1;
  *(_QWORD *)(a9 + 200) = a25;
  *(_BYTE *)(a9 + 208) = a26 & 1;
  *(_QWORD *)(a9 + 216) = a27;
  *(_BYTE *)(a9 + 224) = a28 & 1;
  *(_QWORD *)(a9 + 232) = a29;
  *(_BYTE *)(a9 + 240) = a30 & 1;
  *(_QWORD *)(a9 + 248) = a31;
  *(_BYTE *)(a9 + 256) = a32 & 1;
  *(_QWORD *)(a9 + 264) = a33;
  *(_BYTE *)(a9 + 272) = a34 & 1;
  return result;
}

double ScienceData.agedPersonalizationScore.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void ScienceData.agedPersonalizationScore.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*ScienceData.agedPersonalizationScore.modify())()
{
  return nullsub_1;
}

double ScienceData.autoSubscribeCtr.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void ScienceData.autoSubscribeCtr.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*ScienceData.autoSubscribeCtr.modify())()
{
  return nullsub_1;
}

double ScienceData.computedGlobalScoreCoefficient.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void ScienceData.computedGlobalScoreCoefficient.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*ScienceData.computedGlobalScoreCoefficient.modify())()
{
  return nullsub_1;
}

double ScienceData.conversionMultiplier.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void ScienceData.conversionMultiplier.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t (*ScienceData.conversionMultiplier.modify())()
{
  return nullsub_1;
}

double ScienceData.dampenedStaticMultiplier.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void ScienceData.dampenedStaticMultiplier.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

uint64_t (*ScienceData.dampenedStaticMultiplier.modify())()
{
  return nullsub_1;
}

double ScienceData.featureCtr.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

void ScienceData.featureCtr.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 40) = a1;
}

uint64_t (*ScienceData.featureCtr.modify())()
{
  return nullsub_1;
}

double ScienceData.paidNonPaidSubscriptionCtr.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

void ScienceData.paidNonPaidSubscriptionCtr.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 48) = a1;
}

uint64_t (*ScienceData.paidNonPaidSubscriptionCtr.modify())()
{
  return nullsub_1;
}

double ScienceData.personalizationScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

void ScienceData.personalizationScore.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 56) = a1;
}

uint64_t (*ScienceData.personalizationScore.modify())()
{
  return nullsub_1;
}

double ScienceData.qualitativeMultiplier.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

void ScienceData.qualitativeMultiplier.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 64) = a1;
}

uint64_t (*ScienceData.qualitativeMultiplier.modify())()
{
  return nullsub_1;
}

double ScienceData.rawPersonalizationScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

void ScienceData.rawPersonalizationScore.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 72) = a1;
}

uint64_t (*ScienceData.rawPersonalizationScore.modify())()
{
  return nullsub_1;
}

double ScienceData.staticMultiplier.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

void ScienceData.staticMultiplier.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 80) = a1;
}

uint64_t (*ScienceData.staticMultiplier.modify())()
{
  return nullsub_1;
}

double ScienceData.subscribedChannelCtr.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 88);
}

void ScienceData.subscribedChannelCtr.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 88) = a1;
}

uint64_t (*ScienceData.subscribedChannelCtr.modify())()
{
  return nullsub_1;
}

double ScienceData.userFeedbackScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 96);
}

void ScienceData.userFeedbackScore.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 96) = a1;
}

uint64_t (*ScienceData.userFeedbackScore.modify())()
{
  return nullsub_1;
}

double ScienceData.rawUserFeedbackScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 104);
}

void ScienceData.rawUserFeedbackScore.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 104) = a1;
}

uint64_t (*ScienceData.rawUserFeedbackScore.modify())()
{
  return nullsub_1;
}

uint64_t ScienceData.fractionalCohortMembership.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ScienceData.fractionalCohortMembership.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 112) = a1;
  return result;
}

uint64_t (*ScienceData.fractionalCohortMembership.modify())()
{
  return nullsub_1;
}

uint64_t ScienceData.titleEmbeddingScore.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 120);
}

uint64_t ScienceData.titleEmbeddingScore.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = result;
  *(_BYTE *)(v2 + 128) = a2 & 1;
  return result;
}

uint64_t (*ScienceData.titleEmbeddingScore.modify())()
{
  return nullsub_1;
}

uint64_t ScienceData.tabiScore.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 136);
}

uint64_t ScienceData.tabiScore.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 136) = result;
  *(_BYTE *)(v2 + 144) = a2 & 1;
  return result;
}

uint64_t (*ScienceData.tabiScore.modify())()
{
  return nullsub_1;
}

uint64_t ScienceData.clientScoreCoefficient.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 152);
}

uint64_t ScienceData.clientScoreCoefficient.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 152) = result;
  *(_BYTE *)(v2 + 160) = a2 & 1;
  return result;
}

uint64_t (*ScienceData.clientScoreCoefficient.modify())()
{
  return nullsub_1;
}

uint64_t ScienceData.conversionCoefficient.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 168);
}

uint64_t ScienceData.conversionCoefficient.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 168) = result;
  *(_BYTE *)(v2 + 176) = a2 & 1;
  return result;
}

uint64_t (*ScienceData.conversionCoefficient.modify())()
{
  return nullsub_1;
}

uint64_t ScienceData.multiplier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 184);
}

uint64_t ScienceData.multiplier.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 184) = result;
  *(_BYTE *)(v2 + 192) = a2 & 1;
  return result;
}

uint64_t (*ScienceData.multiplier.modify())()
{
  return nullsub_1;
}

uint64_t ScienceData.halfLifeCoefficient.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 200);
}

uint64_t ScienceData.halfLifeCoefficient.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 200) = result;
  *(_BYTE *)(v2 + 208) = a2 & 1;
  return result;
}

uint64_t (*ScienceData.halfLifeCoefficient.modify())()
{
  return nullsub_1;
}

uint64_t ScienceData.serverScoreDemocratizationFactor.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 216);
}

uint64_t ScienceData.serverScoreDemocratizationFactor.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 216) = result;
  *(_BYTE *)(v2 + 224) = a2 & 1;
  return result;
}

uint64_t (*ScienceData.serverScoreDemocratizationFactor.modify())()
{
  return nullsub_1;
}

uint64_t ScienceData.autofavoritedScoreCoefficient.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 232);
}

uint64_t ScienceData.autofavoritedScoreCoefficient.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 232) = result;
  *(_BYTE *)(v2 + 240) = a2 & 1;
  return result;
}

uint64_t (*ScienceData.autofavoritedScoreCoefficient.modify())()
{
  return nullsub_1;
}

uint64_t ScienceData.nicheContentMuliplier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 248);
}

uint64_t ScienceData.nicheContentMuliplier.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 248) = result;
  *(_BYTE *)(v2 + 256) = a2 & 1;
  return result;
}

uint64_t (*ScienceData.nicheContentMuliplier.modify())()
{
  return nullsub_1;
}

uint64_t ScienceData.contentTriggerDampenerCoefficient.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 264);
}

uint64_t ScienceData.contentTriggerDampenerCoefficient.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 264) = result;
  *(_BYTE *)(v2 + 272) = a2 & 1;
  return result;
}

uint64_t (*ScienceData.contentTriggerDampenerCoefficient.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5A6DEC0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D5A6DEFC + 4 * byte_1D5AE5AE8[a1]))(0xD000000000000018, 0x80000001D5AF26D0);
}

uint64_t sub_1D5A6DEFC()
{
  uint64_t v0;

  return v0 - 4;
}

uint64_t sub_1D5A6E0AC()
{
  unsigned __int8 *v0;

  return sub_1D5A6DEC0(*v0);
}

uint64_t sub_1D5A6E0B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A6F95C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D5A6E0D8(_BYTE *a1@<X8>)
{
  *a1 = 25;
}

uint64_t sub_1D5A6E0E4()
{
  sub_1D5A6E7CC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A6E10C()
{
  sub_1D5A6E7CC();
  return sub_1D5AAEEE0();
}

uint64_t ScienceData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _DWORD v17[2];
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;

  sub_1D5A6F21C(0, &qword_1ED9CC8C0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v17 - v6;
  v8 = *(_QWORD *)(v1 + 8);
  v40 = *(_QWORD *)(v1 + 16);
  v41 = v8;
  v9 = *(_QWORD *)(v1 + 24);
  v36 = *(_QWORD *)(v1 + 32);
  v37 = v9;
  v10 = *(_QWORD *)(v1 + 40);
  v34 = *(_QWORD *)(v1 + 48);
  v35 = v10;
  v39 = *(_QWORD *)(v1 + 112);
  v11 = *(_QWORD *)(v1 + 120);
  v38 = *(unsigned __int8 *)(v1 + 128);
  v32 = *(_QWORD *)(v1 + 136);
  v33 = v11;
  v31 = *(unsigned __int8 *)(v1 + 144);
  v18 = *(_QWORD *)(v1 + 152);
  v17[1] = *(unsigned __int8 *)(v1 + 160);
  v20 = *(_QWORD *)(v1 + 168);
  v19 = *(unsigned __int8 *)(v1 + 176);
  v22 = *(_QWORD *)(v1 + 184);
  v21 = *(unsigned __int8 *)(v1 + 192);
  v24 = *(_QWORD *)(v1 + 200);
  v23 = *(unsigned __int8 *)(v1 + 208);
  v26 = *(_QWORD *)(v1 + 216);
  v25 = *(unsigned __int8 *)(v1 + 224);
  v28 = *(_QWORD *)(v1 + 232);
  v27 = *(unsigned __int8 *)(v1 + 240);
  v30 = *(_QWORD *)(v1 + 248);
  v29 = *(unsigned __int8 *)(v1 + 256);
  v12 = *(unsigned __int8 *)(v1 + 272);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A6E7CC();
  sub_1D5AAEEC8();
  LOBYTE(v44) = 0;
  v13 = v4;
  v14 = v42;
  sub_1D5AAED54();
  if (v14)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v16 = v39;
  LODWORD(v42) = v12;
  LOBYTE(v44) = 1;
  sub_1D5AAED54();
  LOBYTE(v44) = 2;
  sub_1D5AAED54();
  LOBYTE(v44) = 3;
  sub_1D5AAED54();
  LOBYTE(v44) = 4;
  sub_1D5AAED54();
  LOBYTE(v44) = 5;
  sub_1D5AAED54();
  LOBYTE(v44) = 6;
  sub_1D5AAED54();
  LOBYTE(v44) = 7;
  sub_1D5AAED54();
  LOBYTE(v44) = 8;
  sub_1D5AAED54();
  LOBYTE(v44) = 9;
  sub_1D5AAED54();
  LOBYTE(v44) = 10;
  sub_1D5AAED54();
  LOBYTE(v44) = 11;
  sub_1D5AAED54();
  LOBYTE(v44) = 12;
  sub_1D5AAED54();
  LOBYTE(v44) = 13;
  sub_1D5AAED54();
  v44 = v16;
  v43 = 14;
  sub_1D5A6E810();
  sub_1D5A6F278(&qword_1ED9CC6A0, (uint64_t (*)(void))sub_1D5A11778, MEMORY[0x1E0DEAF10]);
  sub_1D5AAED6C();
  LOBYTE(v44) = 15;
  sub_1D5AAED0C();
  LOBYTE(v44) = 16;
  sub_1D5AAED0C();
  LOBYTE(v44) = 17;
  sub_1D5AAED0C();
  LOBYTE(v44) = 18;
  sub_1D5AAED0C();
  LOBYTE(v44) = 19;
  sub_1D5AAED0C();
  LOBYTE(v44) = 20;
  sub_1D5AAED0C();
  LOBYTE(v44) = 21;
  sub_1D5AAED0C();
  LOBYTE(v44) = 22;
  sub_1D5AAED0C();
  LOBYTE(v44) = 23;
  sub_1D5AAED0C();
  LOBYTE(v44) = 24;
  sub_1D5AAED0C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

unint64_t sub_1D5A6E7CC()
{
  unint64_t result;

  result = qword_1ED9C7720;
  if (!qword_1ED9C7720)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE5CD4, &type metadata for ScienceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C7720);
  }
  return result;
}

void sub_1D5A6E810()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CC698)
  {
    v0 = sub_1D5AAE97C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CC698);
  }
}

uint64_t ScienceData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  char v43;
  char v44;
  char v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  int v56;
  int v57;
  int v58;
  _DWORD *v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  _BYTE v86[7];
  char v87;
  _BYTE v88[7];
  char v89;
  _BYTE v90[7];
  char v91;
  _BYTE v92[7];
  char v93;
  _BYTE v94[7];
  char v95;
  _BYTE v96[7];
  char v97;
  _BYTE v98[7];
  char v99;
  _BYTE v100[7];
  char v101;
  _BYTE v102[7];
  char v103;
  _QWORD v104[16];
  char v105;
  _BYTE v106[7];
  uint64_t v107;
  char v108;
  _BYTE v109[7];
  uint64_t v110;
  char v111;
  _BYTE v112[7];
  uint64_t v113;
  char v114;
  _BYTE v115[7];
  uint64_t v116;
  char v117;
  _BYTE v118[7];
  uint64_t v119;
  char v120;
  _BYTE v121[7];
  uint64_t v122;
  char v123;
  _BYTE v124[7];
  uint64_t v125;
  char v126;
  _BYTE v127[7];
  uint64_t v128;
  char v129;
  _BYTE v130[7];
  uint64_t v131;
  char v132;
  char v133;
  char v134;
  _BYTE v135[7];
  char v136;
  _BYTE v137[7];
  char v138;
  _BYTE v139[7];
  char v140;
  _BYTE v141[7];
  char v142;
  _BYTE v143[7];
  char v144;
  _BYTE v145[7];
  char v146;
  _BYTE v147[7];
  char v148;
  _BYTE v149[7];
  char v150;
  _BYTE v151[7];
  char v152;
  uint64_t v153;

  sub_1D5A6F21C(0, &qword_1ED9CC7D8, MEMORY[0x1E0DED048]);
  v153 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v60 - v7;
  v152 = 1;
  v150 = 1;
  v148 = 1;
  v146 = 1;
  v144 = 1;
  v142 = 1;
  v140 = 1;
  v138 = 1;
  v136 = 1;
  v134 = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A6E7CC();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  LOBYTE(v104[0]) = 0;
  sub_1D5AAECB8();
  v11 = v10;
  LOBYTE(v104[0]) = 1;
  sub_1D5AAECB8();
  v13 = v12;
  LOBYTE(v104[0]) = 2;
  sub_1D5AAECB8();
  v15 = v14;
  LOBYTE(v104[0]) = 3;
  sub_1D5AAECB8();
  v17 = v16;
  LOBYTE(v104[0]) = 4;
  sub_1D5AAECB8();
  v19 = v18;
  LOBYTE(v104[0]) = 5;
  sub_1D5AAECB8();
  v21 = v20;
  LOBYTE(v104[0]) = 6;
  sub_1D5AAECB8();
  v23 = v22;
  LOBYTE(v104[0]) = 7;
  sub_1D5AAECB8();
  v84 = v24;
  LOBYTE(v104[0]) = 8;
  sub_1D5AAECB8();
  v26 = v25;
  LOBYTE(v104[0]) = 9;
  sub_1D5AAECB8();
  v83 = v27;
  LOBYTE(v104[0]) = 10;
  sub_1D5AAECB8();
  v82 = v28;
  LOBYTE(v104[0]) = 11;
  sub_1D5AAECB8();
  v81 = v29;
  LOBYTE(v104[0]) = 12;
  sub_1D5AAECB8();
  v80 = v30;
  LOBYTE(v104[0]) = 13;
  sub_1D5AAECB8();
  v79 = v31;
  sub_1D5A6E810();
  v102[0] = 14;
  sub_1D5A6F278(&qword_1ED9CC6A8, (uint64_t (*)(void))sub_1D5A11730, MEMORY[0x1E0DEAF40]);
  sub_1D5AAECD0();
  v32 = v104[0];
  LOBYTE(v104[0]) = 15;
  swift_bridgeObjectRetain();
  v33 = sub_1D5AAEC70();
  v78 = v34;
  v35 = v33;
  v152 = v34 & 1;
  LOBYTE(v104[0]) = 16;
  v76 = sub_1D5AAEC70();
  v77 = v36;
  v150 = v36 & 1;
  LOBYTE(v104[0]) = 17;
  v74 = sub_1D5AAEC70();
  v75 = v37;
  v148 = v37 & 1;
  LOBYTE(v104[0]) = 18;
  v72 = sub_1D5AAEC70();
  v73 = v38;
  v146 = v38 & 1;
  LOBYTE(v104[0]) = 19;
  v70 = sub_1D5AAEC70();
  v71 = v39;
  v144 = v39 & 1;
  LOBYTE(v104[0]) = 20;
  v68 = sub_1D5AAEC70();
  v69 = v40;
  v142 = v40 & 1;
  LOBYTE(v104[0]) = 21;
  v66 = sub_1D5AAEC70();
  v67 = v41;
  v140 = v41 & 1;
  LOBYTE(v104[0]) = 22;
  v64 = sub_1D5AAEC70();
  v65 = v42;
  v138 = v42 & 1;
  LOBYTE(v104[0]) = 23;
  v63 = sub_1D5AAEC70();
  v61 = v43 & 1;
  v136 = v43 & 1;
  v133 = 24;
  v62 = sub_1D5AAEC70();
  v45 = v44;
  v46 = *(void (**)(char *, uint64_t))(v9 + 8);
  v60 = (_DWORD *)(a2 + 257);
  v46(v8, v153);
  v134 = v45 & 1;
  v103 = v78 & 1;
  v101 = v77 & 1;
  v99 = v75 & 1;
  v97 = v73 & 1;
  v95 = v71 & 1;
  v93 = v69 & 1;
  v91 = v67 & 1;
  v89 = v65 & 1;
  v87 = v61;
  v85 = v45 & 1;
  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = v13;
  *(_QWORD *)(a2 + 16) = v15;
  *(_QWORD *)(a2 + 24) = v17;
  *(_QWORD *)(a2 + 32) = v19;
  *(_QWORD *)(a2 + 40) = v21;
  v47 = v84;
  *(_QWORD *)(a2 + 48) = v23;
  *(_QWORD *)(a2 + 56) = v47;
  v48 = v83;
  *(_QWORD *)(a2 + 64) = v26;
  *(_QWORD *)(a2 + 72) = v48;
  v49 = v81;
  *(_QWORD *)(a2 + 80) = v82;
  *(_QWORD *)(a2 + 88) = v49;
  v50 = v79;
  *(_QWORD *)(a2 + 96) = v80;
  *(_QWORD *)(a2 + 104) = v50;
  *(_QWORD *)(a2 + 112) = v32;
  *(_QWORD *)(a2 + 120) = v35;
  *(_BYTE *)(a2 + 128) = v103;
  *(_DWORD *)(a2 + 129) = *(_DWORD *)v102;
  *(_DWORD *)(a2 + 132) = *(_DWORD *)&v102[3];
  v51 = v76;
  *(_QWORD *)(a2 + 136) = v76;
  *(_BYTE *)(a2 + 144) = v101;
  *(_DWORD *)(a2 + 145) = *(_DWORD *)v100;
  *(_DWORD *)(a2 + 148) = *(_DWORD *)&v100[3];
  v52 = v74;
  *(_QWORD *)(a2 + 152) = v74;
  *(_BYTE *)(a2 + 160) = v99;
  v53 = *(_DWORD *)v98;
  *(_DWORD *)(a2 + 164) = *(_DWORD *)&v98[3];
  *(_DWORD *)(a2 + 161) = v53;
  v54 = v72;
  *(_QWORD *)(a2 + 168) = v72;
  *(_BYTE *)(a2 + 176) = v97;
  *(_DWORD *)(a2 + 180) = *(_DWORD *)&v96[3];
  *(_DWORD *)(a2 + 177) = *(_DWORD *)v96;
  *(_QWORD *)(a2 + 184) = v70;
  *(_BYTE *)(a2 + 192) = v95;
  *(_DWORD *)(a2 + 196) = *(_DWORD *)&v94[3];
  *(_DWORD *)(a2 + 193) = *(_DWORD *)v94;
  *(_QWORD *)(a2 + 200) = v68;
  *(_BYTE *)(a2 + 208) = v93;
  v55 = *(_DWORD *)v92;
  *(_DWORD *)(a2 + 212) = *(_DWORD *)&v92[3];
  *(_DWORD *)(a2 + 209) = v55;
  *(_QWORD *)(a2 + 216) = v66;
  *(_BYTE *)(a2 + 224) = v91;
  v56 = *(_DWORD *)v90;
  *(_DWORD *)(a2 + 228) = *(_DWORD *)&v90[3];
  *(_DWORD *)(a2 + 225) = v56;
  *(_QWORD *)(a2 + 232) = v64;
  *(_BYTE *)(a2 + 240) = v89;
  v57 = *(_DWORD *)v88;
  *(_DWORD *)(a2 + 244) = *(_DWORD *)&v88[3];
  *(_DWORD *)(a2 + 241) = v57;
  *(_QWORD *)(a2 + 248) = v63;
  *(_BYTE *)(a2 + 256) = v87;
  v58 = *(_DWORD *)v86;
  *(_DWORD *)(a2 + 260) = *(_DWORD *)&v86[3];
  *v60 = v58;
  *(_QWORD *)(a2 + 264) = v62;
  *(_BYTE *)(a2 + 272) = v85;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v104[0] = v11;
  v104[1] = v13;
  v104[2] = v15;
  v104[3] = v17;
  v104[4] = v19;
  v104[5] = v21;
  v104[6] = v23;
  v104[7] = v84;
  v104[8] = v26;
  v104[9] = v83;
  v104[10] = v82;
  v104[11] = v81;
  v104[12] = v80;
  v104[13] = v79;
  v104[14] = v32;
  v104[15] = v35;
  v105 = v152;
  *(_DWORD *)&v106[3] = *(_DWORD *)&v151[3];
  *(_DWORD *)v106 = *(_DWORD *)v151;
  v107 = v51;
  v108 = v150;
  *(_DWORD *)v109 = *(_DWORD *)v149;
  *(_DWORD *)&v109[3] = *(_DWORD *)&v149[3];
  v110 = v52;
  v111 = v148;
  *(_DWORD *)v112 = *(_DWORD *)v147;
  *(_DWORD *)&v112[3] = *(_DWORD *)&v147[3];
  v113 = v54;
  v114 = v146;
  *(_DWORD *)&v115[3] = *(_DWORD *)&v145[3];
  *(_DWORD *)v115 = *(_DWORD *)v145;
  v116 = v70;
  v117 = v144;
  *(_DWORD *)&v118[3] = *(_DWORD *)&v143[3];
  *(_DWORD *)v118 = *(_DWORD *)v143;
  v119 = v68;
  v120 = v142;
  *(_DWORD *)&v121[3] = *(_DWORD *)&v141[3];
  *(_DWORD *)v121 = *(_DWORD *)v141;
  v122 = v66;
  v123 = v140;
  *(_DWORD *)&v124[3] = *(_DWORD *)&v139[3];
  *(_DWORD *)v124 = *(_DWORD *)v139;
  v125 = v64;
  v126 = v138;
  *(_DWORD *)&v127[3] = *(_DWORD *)&v137[3];
  *(_DWORD *)v127 = *(_DWORD *)v137;
  v128 = v63;
  v129 = v136;
  *(_DWORD *)v130 = *(_DWORD *)v135;
  *(_DWORD *)&v130[3] = *(_DWORD *)&v135[3];
  v131 = v62;
  v132 = v134;
  return sub_1D57D5AB8((uint64_t)v104);
}

void sub_1D5A6F21C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A6E7CC();
    v7 = a3(a1, &type metadata for ScienceData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A6F278(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1D5A6E810();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1D8279680](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D5A6F2E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ScienceData.init(from:)(a1, a2);
}

uint64_t sub_1D5A6F2F8(_QWORD *a1)
{
  return ScienceData.encode(to:)(a1);
}

uint64_t destroy for ScienceData()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ScienceData(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  v6 = *(_QWORD *)(a2 + 112);
  v7 = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 112) = v6;
  *(_QWORD *)(a1 + 120) = v7;
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  v8 = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = v8;
  v9 = *(_QWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = v9;
  v10 = *(_QWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = v10;
  v11 = *(_QWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = v11;
  v12 = *(_QWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = v12;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScienceData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = v4;
  v5 = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = v5;
  v6 = *(_QWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = v6;
  v7 = *(_QWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = v7;
  v8 = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = v8;
  v9 = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = v9;
  v10 = *(_QWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = v10;
  v11 = *(_QWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = v11;
  v12 = *(_QWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = v12;
  v13 = *(_QWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = v13;
  return a1;
}

void *__swift_memcpy273_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x111uLL);
}

uint64_t assignWithTake for ScienceData(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  v7 = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = v7;
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  v8 = *(_QWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = v8;
  return a1;
}

uint64_t getEnumTagSinglePayload for ScienceData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 273))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 112);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScienceData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 272) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 273) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 112) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 273) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScienceData()
{
  return &type metadata for ScienceData;
}

uint64_t getEnumTagSinglePayload for ScienceData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE8)
    goto LABEL_17;
  if (a2 + 24 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 24) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 24;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 24;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 24;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x19;
  v8 = v6 - 25;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ScienceData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 24 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 24) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE7)
    return ((uint64_t (*)(void))((char *)&loc_1D5A6F804 + 4 * byte_1D5AE5B06[v4]))();
  *a1 = a2 + 24;
  return ((uint64_t (*)(void))((char *)sub_1D5A6F838 + 4 * byte_1D5AE5B01[v4]))();
}

uint64_t sub_1D5A6F838(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A6F840(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A6F848);
  return result;
}

uint64_t sub_1D5A6F854(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A6F85CLL);
  *(_BYTE *)result = a2 + 24;
  return result;
}

uint64_t sub_1D5A6F860(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A6F868(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScienceData.CodingKeys()
{
  return &type metadata for ScienceData.CodingKeys;
}

unint64_t sub_1D5A6F888()
{
  unint64_t result;

  result = qword_1EFF51F60;
  if (!qword_1EFF51F60)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE5CAC, &type metadata for ScienceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51F60);
  }
  return result;
}

unint64_t sub_1D5A6F8D0()
{
  unint64_t result;

  result = qword_1ED9C7730;
  if (!qword_1ED9C7730)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE5C1C, &type metadata for ScienceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C7730);
  }
  return result;
}

unint64_t sub_1D5A6F918()
{
  unint64_t result;

  result = qword_1ED9C7728;
  if (!qword_1ED9C7728)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE5C44, &type metadata for ScienceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C7728);
  }
  return result;
}

uint64_t sub_1D5A6F95C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000018 && a2 == 0x80000001D5AF26D0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AF26F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001D5AF2710 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AF2730 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5AF2750 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4365727574616566 && a2 == 0xEA00000000007274 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AF2770 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AEE6C0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AF2790 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D5AF27B0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AF27D0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AF27F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AF2810 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AF2830 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AF2850 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AF2870 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x726F635369626174 && a2 == 0xE900000000000065 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AF2890 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AF28B0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x696C7069746C756DLL && a2 == 0xEA00000000007265 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AF28D0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001D5AF28F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001D5AF2920 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AF2940 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AF2960)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 24;
    else
      return 25;
  }
}

NewsAnalytics::WidgetLocation_optional __swiftcall WidgetLocation.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::WidgetLocation_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t WidgetLocation.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A702C0 + 4 * byte_1D5AE5D24[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5A702C0()
{
  return 0x6761507961646F74;
}

unint64_t sub_1D5A702DC()
{
  return 0xD000000000000011;
}

unint64_t sub_1D5A70304()
{
  return 0xD000000000000013;
}

void sub_1D5A7033C(char *a1)
{
  sub_1D5A3C284(*a1);
}

unint64_t sub_1D5A7034C()
{
  unint64_t result;

  result = qword_1EFF51F68;
  if (!qword_1EFF51F68)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetLocation, &type metadata for WidgetLocation);
    atomic_store(result, (unint64_t *)&qword_1EFF51F68);
  }
  return result;
}

void sub_1D5A70390()
{
  char *v0;

  sub_1D5A8149C(*v0);
}

void sub_1D5A70398(uint64_t a1)
{
  char *v1;

  sub_1D5AA8A78(a1, *v1);
}

void sub_1D5A703A0(uint64_t a1)
{
  char *v1;

  sub_1D5AA9028(a1, *v1);
}

NewsAnalytics::WidgetLocation_optional sub_1D5A703A8(Swift::String *a1)
{
  return WidgetLocation.init(rawValue:)(*a1);
}

uint64_t sub_1D5A703B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = WidgetLocation.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D5A703D8()
{
  sub_1D5A7054C();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A70434()
{
  sub_1D5A7054C();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for WidgetLocation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D5A704CC + 4 * byte_1D5AE5D2F[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D5A70500 + 4 * byte_1D5AE5D2A[v4]))();
}

uint64_t sub_1D5A70500(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A70508(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A70510);
  return result;
}

uint64_t sub_1D5A7051C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A70524);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D5A70528(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A70530(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetLocation()
{
  return &type metadata for WidgetLocation;
}

unint64_t sub_1D5A7054C()
{
  unint64_t result;

  result = qword_1ED9D1470;
  if (!qword_1ED9D1470)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetLocation, &type metadata for WidgetLocation);
    atomic_store(result, (unint64_t *)&qword_1ED9D1470);
  }
  return result;
}

void SubscribeButtonContextData.location.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *SubscribeButtonContextData.location.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*SubscribeButtonContextData.location.modify())()
{
  return nullsub_1;
}

void SubscribeButtonContextData.targetType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *SubscribeButtonContextData.targetType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*SubscribeButtonContextData.targetType.modify())()
{
  return nullsub_1;
}

NewsAnalytics::SubscribeButtonContextData __swiftcall SubscribeButtonContextData.init(location:targetType:)(NewsAnalytics::SubscribeButtonLocation location, NewsAnalytics::SubscribeButtonTargetType_optional targetType)
{
  _BYTE *v2;
  char v3;
  NewsAnalytics::SubscribeButtonContextData result;

  v3 = *(_BYTE *)targetType.value;
  *v2 = *(_BYTE *)location;
  v2[1] = v3;
  result.location = location;
  return result;
}

uint64_t sub_1D5A705F4()
{
  _BYTE *v0;

  if (*v0)
    return 0x7954746567726174;
  else
    return 0x6E6F697461636F6CLL;
}

uint64_t sub_1D5A70634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A70E74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A70658()
{
  sub_1D5A707FC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A70680()
{
  sub_1D5A707FC();
  return sub_1D5AAEEE0();
}

uint64_t SubscribeButtonContextData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  int v12;
  char v13;
  char v14;
  char v15;
  char v16;

  sub_1D5A70A4C(0, &qword_1EFF51F70, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *v1;
  v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A707FC();
  sub_1D5AAEEC8();
  v16 = v9;
  v15 = 0;
  sub_1D5A70840();
  sub_1D5AAED6C();
  if (!v2)
  {
    v14 = v12;
    v13 = 1;
    sub_1D5A70884();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D5A707FC()
{
  unint64_t result;

  result = qword_1EFF51F78;
  if (!qword_1EFF51F78)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE5FF0, &type metadata for SubscribeButtonContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51F78);
  }
  return result;
}

unint64_t sub_1D5A70840()
{
  unint64_t result;

  result = qword_1EFF51F80;
  if (!qword_1EFF51F80)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscribeButtonLocation, &type metadata for SubscribeButtonLocation);
    atomic_store(result, (unint64_t *)&qword_1EFF51F80);
  }
  return result;
}

unint64_t sub_1D5A70884()
{
  unint64_t result;

  result = qword_1EFF51F88;
  if (!qword_1EFF51F88)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscribeButtonTargetType, &type metadata for SubscribeButtonTargetType);
    atomic_store(result, (unint64_t *)&qword_1EFF51F88);
  }
  return result;
}

uint64_t SubscribeButtonContextData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;

  sub_1D5A70A4C(0, &qword_1EFF51F90, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A707FC();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v16 = 0;
    sub_1D5A70AA8();
    sub_1D5AAECD0();
    v10 = v17;
    v14 = 1;
    sub_1D5A70AEC();
    sub_1D5AAEC7C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A70A4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A707FC();
    v7 = a3(a1, &type metadata for SubscribeButtonContextData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5A70AA8()
{
  unint64_t result;

  result = qword_1EFF51F98;
  if (!qword_1EFF51F98)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscribeButtonLocation, &type metadata for SubscribeButtonLocation);
    atomic_store(result, (unint64_t *)&qword_1EFF51F98);
  }
  return result;
}

unint64_t sub_1D5A70AEC()
{
  unint64_t result;

  result = qword_1EFF51FA0;
  if (!qword_1EFF51FA0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscribeButtonTargetType, &type metadata for SubscribeButtonTargetType);
    atomic_store(result, (unint64_t *)&qword_1EFF51FA0);
  }
  return result;
}

uint64_t sub_1D5A70B38@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return SubscribeButtonContextData.init(from:)(a1, a2);
}

uint64_t sub_1D5A70B4C(_QWORD *a1)
{
  return SubscribeButtonContextData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for SubscribeButtonContextData(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v6;
  int v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 65285 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65285 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65285;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65285;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65285;
  }
LABEL_17:
  if (*((unsigned __int8 *)a1 + 1) <= 5u)
    v6 = 5;
  else
    v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 - 6;
  if (*((unsigned __int8 *)a1 + 1) < 5u)
    v8 = -1;
  else
    v8 = v7;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscribeButtonContextData(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65285 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65285 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D5A70C50 + 4 * byte_1D5AE5E65[v4]))();
  *a1 = a2 - 251;
  return ((uint64_t (*)(void))((char *)sub_1D5A70C84 + 4 * byte_1D5AE5E60[v4]))();
}

uint64_t sub_1D5A70C84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1D5A70C8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1D5A70C94);
  return result;
}

uint64_t sub_1D5A70CA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1D5A70CA8);
  *(_BYTE *)(result + 1) = a2 + 5;
  return result;
}

uint64_t sub_1D5A70CAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1D5A70CB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscribeButtonContextData()
{
  return &type metadata for SubscribeButtonContextData;
}

uint64_t storeEnumTagSinglePayload for SubscribeButtonContextData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5A70D1C + 4 * byte_1D5AE5E6F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D5A70D50 + 4 * byte_1D5AE5E6A[v4]))();
}

uint64_t sub_1D5A70D50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A70D58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A70D60);
  return result;
}

uint64_t sub_1D5A70D6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A70D74);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5A70D78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A70D80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscribeButtonContextData.CodingKeys()
{
  return &type metadata for SubscribeButtonContextData.CodingKeys;
}

unint64_t sub_1D5A70DA0()
{
  unint64_t result;

  result = qword_1EFF51FA8;
  if (!qword_1EFF51FA8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE5FC8, &type metadata for SubscribeButtonContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51FA8);
  }
  return result;
}

unint64_t sub_1D5A70DE8()
{
  unint64_t result;

  result = qword_1EFF51FB0;
  if (!qword_1EFF51FB0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE5F38, &type metadata for SubscribeButtonContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51FB0);
  }
  return result;
}

unint64_t sub_1D5A70E30()
{
  unint64_t result;

  result = qword_1EFF51FB8;
  if (!qword_1EFF51FB8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE5F60, &type metadata for SubscribeButtonContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51FB8);
  }
  return result;
}

uint64_t sub_1D5A70E74(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7954746567726174 && a2 == 0xEA00000000006570)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t IssueExposureData.issueSessionID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IssueExposureData.issueSessionID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*IssueExposureData.issueSessionID.modify())()
{
  return nullsub_1;
}

NewsAnalytics::IssueExposureData __swiftcall IssueExposureData.init(issueSessionID:)(NewsAnalytics::IssueExposureData issueSessionID)
{
  NewsAnalytics::IssueExposureData *v1;

  *v1 = issueSessionID;
  return issueSessionID;
}

uint64_t sub_1D5A70FE8()
{
  return 0x7365536575737369;
}

uint64_t sub_1D5A7100C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7365536575737369 && a2 == 0xEE0044496E6F6973)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5A710C4()
{
  sub_1D5A71208();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A710EC()
{
  sub_1D5A71208();
  return sub_1D5AAEEE0();
}

uint64_t IssueExposureData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5A71370(0, &qword_1EFF51FC0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A71208();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D5A71208()
{
  unint64_t result;

  result = qword_1EFF51FC8;
  if (!qword_1EFF51FC8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE61B8, &type metadata for IssueExposureData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51FC8);
  }
  return result;
}

uint64_t IssueExposureData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D5A71370(0, &qword_1EFF51FD0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A71208();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECA0();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A71370(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A71208();
    v7 = a3(a1, &type metadata for IssueExposureData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5A713D0()
{
  unint64_t result;

  result = qword_1ED9C9418;
  if (!qword_1ED9C9418)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for IssueExposureData, &type metadata for IssueExposureData);
    atomic_store(result, (unint64_t *)&qword_1ED9C9418);
  }
  return result;
}

unint64_t sub_1D5A71418()
{
  unint64_t result;

  result = qword_1ED9C9410;
  if (!qword_1ED9C9410)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for IssueExposureData, &type metadata for IssueExposureData);
    atomic_store(result, (unint64_t *)&qword_1ED9C9410);
  }
  return result;
}

uint64_t sub_1D5A7145C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return IssueExposureData.init(from:)(a1, a2);
}

uint64_t sub_1D5A71470(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5A71370(0, &qword_1EFF51FC0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A71208();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for IssueExposureData()
{
  return &type metadata for IssueExposureData;
}

uint64_t storeEnumTagSinglePayload for IssueExposureData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5A715B4 + 4 * byte_1D5AE6040[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5A715D4 + 4 * byte_1D5AE6045[v4]))();
}

_BYTE *sub_1D5A715B4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5A715D4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A715DC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A715E4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A715EC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A715F4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IssueExposureData.CodingKeys()
{
  return &type metadata for IssueExposureData.CodingKeys;
}

unint64_t sub_1D5A71614()
{
  unint64_t result;

  result = qword_1EFF51FD8;
  if (!qword_1EFF51FD8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE6190, &type metadata for IssueExposureData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51FD8);
  }
  return result;
}

unint64_t sub_1D5A7165C()
{
  unint64_t result;

  result = qword_1EFF51FE0;
  if (!qword_1EFF51FE0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE6100, &type metadata for IssueExposureData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51FE0);
  }
  return result;
}

unint64_t sub_1D5A716A4()
{
  unint64_t result;

  result = qword_1EFF51FE8;
  if (!qword_1EFF51FE8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE6128, &type metadata for IssueExposureData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF51FE8);
  }
  return result;
}

uint64_t sub_1D5A716E8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF51FF0, MEMORY[0x1E0CF8078]);
}

uint64_t static NotificationIgnoreSubscribeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47480, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF51FF0, a1);
}

uint64_t sub_1D5A71728(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF52008, MEMORY[0x1E0CF8380]);
}

uint64_t static NotificationIgnoreSubscribeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47488, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF52008, a1);
}

uint64_t NotificationIgnoreSubscribeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t NotificationIgnoreSubscribeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*NotificationIgnoreSubscribeEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NotificationIgnoreSubscribeEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationIgnoreSubscribeEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for NotificationIgnoreSubscribeEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF52090);
}

uint64_t NotificationIgnoreSubscribeEvent.tagData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationIgnoreSubscribeEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NotificationIgnoreSubscribeEvent.tagData.modify())(_QWORD)
{
  type metadata accessor for NotificationIgnoreSubscribeEvent(0);
  return nullsub_1;
}

uint64_t NotificationIgnoreSubscribeEvent.notificationSubscribedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationIgnoreSubscribeEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NotificationIgnoreSubscribeEvent.notificationSubscribedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationIgnoreSubscribeEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NotificationIgnoreSubscribeEvent.notificationSubscribedData.modify())(_QWORD)
{
  type metadata accessor for NotificationIgnoreSubscribeEvent(0);
  return nullsub_1;
}

uint64_t NotificationIgnoreSubscribeEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationIgnoreSubscribeEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NotificationIgnoreSubscribeEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationIgnoreSubscribeEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NotificationIgnoreSubscribeEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for NotificationIgnoreSubscribeEvent(0);
  return nullsub_1;
}

uint64_t NotificationIgnoreSubscribeEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationIgnoreSubscribeEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NotificationIgnoreSubscribeEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationIgnoreSubscribeEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NotificationIgnoreSubscribeEvent.userChannelContextData.modify())(_QWORD)
{
  type metadata accessor for NotificationIgnoreSubscribeEvent(0);
  return nullsub_1;
}

uint64_t NotificationIgnoreSubscribeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for NotificationIgnoreSubscribeEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  v8 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v2, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
}

uint64_t NotificationIgnoreSubscribeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t NotificationIgnoreSubscribeEvent.Model.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for NotificationIgnoreSubscribeEvent.Model(0) + 20));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for NotificationIgnoreSubscribeEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF52130);
}

uint64_t NotificationIgnoreSubscribeEvent.Model.notificationSubscribedData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NotificationIgnoreSubscribeEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t NotificationIgnoreSubscribeEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for NotificationIgnoreSubscribeEvent.Model(0) + 28));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t NotificationIgnoreSubscribeEvent.Model.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = type metadata accessor for NotificationIgnoreSubscribeEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 32));
  v5 = *v4;
  v6 = v4[1];
  LOWORD(v4) = *((_WORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_BYTE *)(a1 + 1) = v6;
  *(_WORD *)(a1 + 2) = (_WORD)v4;
  return result;
}

int *NotificationIgnoreSubscribeEvent.Model.init(eventData:tagData:notificationSubscribedData:userBundleSubscriptionContextData:userChannelContextData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __int16 *a3@<X2>, char *a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  int *result;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  char v25;
  char v26;

  v8 = *a2;
  v9 = a2[1];
  v10 = *a3;
  v11 = *a4;
  v12 = *((_QWORD *)a4 + 1);
  v13 = *((_QWORD *)a4 + 2);
  v14 = a4[24];
  v15 = a4[25];
  v22 = *((_QWORD *)a4 + 5);
  v23 = *((_QWORD *)a4 + 4);
  v21 = a4[48];
  v25 = a5[1];
  v26 = *a5;
  v24 = *((_WORD *)a5 + 1);
  v16 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a6, a1, v16);
  result = (int *)type metadata accessor for NotificationIgnoreSubscribeEvent.Model(0);
  v18 = (_QWORD *)(a6 + result[5]);
  *v18 = v8;
  v18[1] = v9;
  *(_WORD *)(a6 + result[6]) = v10;
  v19 = a6 + result[7];
  *(_BYTE *)v19 = v11;
  *(_QWORD *)(v19 + 8) = v12;
  *(_QWORD *)(v19 + 16) = v13;
  *(_BYTE *)(v19 + 24) = v14;
  *(_BYTE *)(v19 + 25) = v15;
  *(_QWORD *)(v19 + 32) = v23;
  *(_QWORD *)(v19 + 40) = v22;
  *(_BYTE *)(v19 + 48) = v21;
  v20 = a6 + result[8];
  *(_BYTE *)v20 = v26;
  *(_BYTE *)(v20 + 1) = v25;
  *(_WORD *)(v20 + 2) = v24;
  return result;
}

uint64_t sub_1D5A71F78(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A71FB0 + 4 * byte_1D5AE6210[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5A71FB0()
{
  return 0x61746144676174;
}

unint64_t sub_1D5A71FC8()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1D5A72000()
{
  return 0xD000000000000016;
}

uint64_t sub_1D5A7201C()
{
  unsigned __int8 *v0;

  return sub_1D5A71F78(*v0);
}

uint64_t sub_1D5A72024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A73F94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A72048()
{
  sub_1D5A72314();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A72070()
{
  sub_1D5A72314();
  return sub_1D5AAEEE0();
}

uint64_t NotificationIgnoreSubscribeEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char *v18;
  char v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  char v25;
  char v26;
  __int128 v27;
  char v28;
  char v29;

  v3 = v1;
  sub_1D5A72768(0, &qword_1EFF52020, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A72314();
  sub_1D5AAEEC8();
  LOBYTE(v23) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for NotificationIgnoreSubscribeEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v13 = *v11;
    v12 = v11[1];
    v23 = v13;
    *(_QWORD *)&v24 = v12;
    v29 = 1;
    sub_1D57C6738();
    sub_1D5AAED6C();
    LOWORD(v23) = *(_WORD *)(v3 + v10[6]);
    v29 = 2;
    sub_1D5849A00();
    sub_1D5AAED18();
    v14 = v3 + v10[7];
    v15 = *(_BYTE *)(v14 + 24);
    v16 = *(_BYTE *)(v14 + 25);
    v17 = *(_BYTE *)(v14 + 48);
    LOBYTE(v23) = *(_BYTE *)v14;
    v24 = *(_OWORD *)(v14 + 8);
    v25 = v15;
    v26 = v16;
    v27 = *(_OWORD *)(v14 + 32);
    v28 = v17;
    v29 = 3;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v18 = (char *)(v3 + v10[8]);
    v19 = *v18;
    v20 = v18[1];
    LOWORD(v18) = *((_WORD *)v18 + 1);
    LOBYTE(v23) = v19;
    BYTE1(v23) = v20;
    WORD1(v23) = (_WORD)v18;
    v29 = 4;
    sub_1D57C7B24();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A72314()
{
  unint64_t result;

  result = qword_1EFF52028;
  if (!qword_1EFF52028)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE644C, &type metadata for NotificationIgnoreSubscribeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52028);
  }
  return result;
}

uint64_t NotificationIgnoreSubscribeEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  char v17;
  char v18;
  char *v19;
  char v20;
  __int16 v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  __int128 v32;
  char v33;
  char v34;
  __int128 v35;
  char v36;
  char v37;

  v25 = a2;
  v3 = sub_1D5AADF98();
  v26 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v28 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A72768(0, &qword_1EFF52030, MEMORY[0x1E0DED048]);
  v27 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v24 - v6;
  v8 = (int *)type metadata accessor for NotificationIgnoreSubscribeEvent.Model(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A72314();
  v29 = v7;
  v11 = (uint64_t)v30;
  sub_1D5AAEEB0();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v30 = a1;
  v12 = v26;
  LOBYTE(v31) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v13 = v27;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v10, v28, v3);
  v37 = 1;
  sub_1D57C66F4();
  sub_1D5AAECD0();
  v14 = v32;
  v15 = &v10[v8[5]];
  *(_QWORD *)v15 = v31;
  *((_QWORD *)v15 + 1) = v14;
  v37 = 2;
  sub_1D58499BC();
  sub_1D5AAEC7C();
  *(_WORD *)&v10[v8[6]] = v31;
  v37 = 3;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v16 = v33;
  v17 = v34;
  v18 = v36;
  v19 = &v10[v8[7]];
  *v19 = v31;
  *(_OWORD *)(v19 + 8) = v32;
  v19[24] = v16;
  v19[25] = v17;
  *((_OWORD *)v19 + 2) = v35;
  v19[48] = v18;
  v37 = 4;
  sub_1D57C7AE0();
  sub_1D5AAECD0();
  MEMORY[8](v29, v13);
  v20 = BYTE1(v31);
  v21 = WORD1(v31);
  v22 = &v10[v8[8]];
  *v22 = v31;
  v22[1] = v20;
  *((_WORD *)v22 + 1) = v21;
  sub_1D5A727C4((uint64_t)v10, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return sub_1D5A72808((uint64_t)v10);
}

void sub_1D5A72768(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A72314();
    v7 = a3(a1, &type metadata for NotificationIgnoreSubscribeEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A727C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NotificationIgnoreSubscribeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A72808(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NotificationIgnoreSubscribeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A72844@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NotificationIgnoreSubscribeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A72858(_QWORD *a1)
{
  return NotificationIgnoreSubscribeEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A7286C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47480, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF51FF0, a1);
}

uint64_t sub_1D5A72890@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47488, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF52008, a1);
}

uint64_t sub_1D5A728B4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  v9 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v4, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for NotificationIgnoreSubscribeEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for NotificationIgnoreSubscribeEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t initializeWithCopy for NotificationIgnoreSubscribeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for NotificationIgnoreSubscribeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for NotificationIgnoreSubscribeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for NotificationIgnoreSubscribeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationIgnoreSubscribeEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A73368(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
          v8 = v16;
          v12 = *(_QWORD *)(v16 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for NotificationIgnoreSubscribeEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A734D4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
          v10 = v18;
          v14 = *(_QWORD *)(v18 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5A7363C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C7258, (void (*)(void))sub_1D58499BC, (void (*)(void))sub_1D5849A00);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for NotificationIgnoreSubscribeEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(_WORD *)((char *)a1 + v9) = *(_WORD *)((char *)a2 + v9);
    v13 = a3[7];
    v14 = a3[8];
    v15 = (char *)a1 + v13;
    v16 = (char *)a2 + v13;
    *v15 = *v16;
    v17 = *((_QWORD *)v16 + 2);
    *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
    *((_QWORD *)v15 + 2) = v17;
    v15[24] = v16[24];
    v15[25] = v16[25];
    v18 = *((_QWORD *)v16 + 5);
    *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
    *((_QWORD *)v15 + 5) = v18;
    v15[48] = v16[48];
    *(_DWORD *)((char *)a1 + v14) = *(_DWORD *)((char *)a2 + v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for NotificationIgnoreSubscribeEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NotificationIgnoreSubscribeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_WORD *)(a1 + v8) = *(_WORD *)(a2 + v8);
  v12 = a3[7];
  v13 = a3[8];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_BYTE *)v14 = *(_BYTE *)v15;
  v16 = *(_QWORD *)(v15 + 16);
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  *(_QWORD *)(v14 + 16) = v16;
  *(_BYTE *)(v14 + 24) = *(_BYTE *)(v15 + 24);
  *(_BYTE *)(v14 + 25) = *(_BYTE *)(v15 + 25);
  v17 = *(_QWORD *)(v15 + 40);
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  *(_QWORD *)(v14 + 40) = v17;
  *(_BYTE *)(v14 + 48) = *(_BYTE *)(v15 + 48);
  *(_DWORD *)(a1 + v13) = *(_DWORD *)(a2 + v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NotificationIgnoreSubscribeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + a3[6]) = *(_WORD *)(a2 + a3[6]);
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_BYTE *)v11 = *(_BYTE *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(a2 + v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 24) = *(_BYTE *)(v12 + 24);
  *(_BYTE *)(v11 + 25) = *(_BYTE *)(v12 + 25);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  *(_QWORD *)(v11 + 40) = *(_QWORD *)(v12 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 48) = *(_BYTE *)(v12 + 48);
  v13 = a3[8];
  v14 = (_BYTE *)(a1 + v13);
  v15 = (_BYTE *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  v14[2] = v15[2];
  v14[3] = v15[3];
  return a1;
}

uint64_t initializeWithTake for NotificationIgnoreSubscribeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 *v11;
  __int128 v12;
  __int128 v13;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a3[8];
  v10 = a1 + v8;
  v11 = (__int128 *)(a2 + v8);
  *(_BYTE *)(v10 + 48) = *((_BYTE *)v11 + 48);
  v12 = v11[2];
  v13 = *v11;
  *(_OWORD *)(v10 + 16) = v11[1];
  *(_OWORD *)(v10 + 32) = v12;
  *(_OWORD *)v10 = v13;
  *(_DWORD *)(a1 + v9) = *(_DWORD *)(a2 + v9);
  return a1;
}

uint64_t assignWithTake for NotificationIgnoreSubscribeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[7];
  *(_WORD *)(a1 + a3[6]) = *(_WORD *)(a2 + a3[6]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_BYTE *)v13 = *(_BYTE *)(a2 + v12);
  v15 = *(_QWORD *)(a2 + v12 + 8);
  v16 = *(_QWORD *)(a2 + v12 + 16);
  *(_QWORD *)(v13 + 8) = v15;
  *(_QWORD *)(v13 + 16) = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 24) = *(_BYTE *)(v14 + 24);
  *(_BYTE *)(v13 + 25) = *(_BYTE *)(v14 + 25);
  v17 = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 40) = v17;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 48) = *(_BYTE *)(v14 + 48);
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_BYTE *)v19 = *(_BYTE *)v20;
  *(_BYTE *)(v19 + 1) = *(_BYTE *)(v20 + 1);
  *(_WORD *)(v19 + 2) = *(_WORD *)(v20 + 2);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationIgnoreSubscribeEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A73C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationIgnoreSubscribeEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A73CE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5A73D60()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NotificationIgnoreSubscribeEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D5A73E3C + 4 * byte_1D5AE621A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5A73E70 + 4 * byte_1D5AE6215[v4]))();
}

uint64_t sub_1D5A73E70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A73E78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A73E80);
  return result;
}

uint64_t sub_1D5A73E8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A73E94);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5A73E98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A73EA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationIgnoreSubscribeEvent.Model.CodingKeys()
{
  return &type metadata for NotificationIgnoreSubscribeEvent.Model.CodingKeys;
}

unint64_t sub_1D5A73EC0()
{
  unint64_t result;

  result = qword_1EFF52178;
  if (!qword_1EFF52178)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE6424, &type metadata for NotificationIgnoreSubscribeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52178);
  }
  return result;
}

unint64_t sub_1D5A73F08()
{
  unint64_t result;

  result = qword_1EFF52180;
  if (!qword_1EFF52180)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE6394, &type metadata for NotificationIgnoreSubscribeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52180);
  }
  return result;
}

unint64_t sub_1D5A73F50()
{
  unint64_t result;

  result = qword_1EFF52188;
  if (!qword_1EFF52188)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE63BC, &type metadata for NotificationIgnoreSubscribeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52188);
  }
  return result;
}

uint64_t sub_1D5A73F94(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61746144676174 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AED960 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEC9F0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1D5A741A8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF52190, MEMORY[0x1E0CF8078]);
}

uint64_t static AppBadgeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47490, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF52190, a1);
}

uint64_t sub_1D5A741E8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF521A8, MEMORY[0x1E0CF8380]);
}

uint64_t static AppBadgeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF47498, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF521A8, a1);
}

uint64_t AppBadgeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t AppBadgeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AppBadgeEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AppBadgeEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppBadgeEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AppBadgeEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF52238);
}

uint64_t AppBadgeEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppBadgeEvent(0) + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppBadgeEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for AppBadgeEvent(0);
  return nullsub_1;
}

uint64_t AppBadgeEvent.badgeOriginationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppBadgeEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF521C0, (void (*)(void))sub_1D58C5198, (void (*)(void))sub_1D57A9D90);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppBadgeEvent.badgeOriginationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppBadgeEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF521C0, (void (*)(void))sub_1D58C5198, (void (*)(void))sub_1D57A9D90);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppBadgeEvent.badgeOriginationData.modify())(_QWORD)
{
  type metadata accessor for AppBadgeEvent(0);
  return nullsub_1;
}

uint64_t AppBadgeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = type metadata accessor for AppBadgeEvent(0);
  v5 = a1 + *(int *)(v4 + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + *(int *)(v4 + 24);
  sub_1D579E208(0, &qword_1EFF521C0, (void (*)(void))sub_1D58C5198, (void (*)(void))sub_1D57A9D90);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
}

uint64_t AppBadgeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AppBadgeEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for AppBadgeEvent.Model(0) + 20));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AppBadgeEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF522D0);
}

uint64_t AppBadgeEvent.Model.badgeOriginationData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AppBadgeEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t AppBadgeEvent.Model.init(eventData:userBundleSubscriptionContextData:badgeOriginationData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char v17;

  v6 = *a2;
  v7 = *((_QWORD *)a2 + 1);
  v8 = *((_QWORD *)a2 + 2);
  v9 = a2[24];
  v10 = a2[25];
  v11 = *((_QWORD *)a2 + 4);
  v12 = *((_QWORD *)a2 + 5);
  v13 = a2[48];
  v17 = *a3;
  v14 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a4, a1, v14);
  result = type metadata accessor for AppBadgeEvent.Model(0);
  v16 = a4 + *(int *)(result + 20);
  *(_BYTE *)v16 = v6;
  *(_QWORD *)(v16 + 8) = v7;
  *(_QWORD *)(v16 + 16) = v8;
  *(_BYTE *)(v16 + 24) = v9;
  *(_BYTE *)(v16 + 25) = v10;
  *(_QWORD *)(v16 + 32) = v11;
  *(_QWORD *)(v16 + 40) = v12;
  *(_BYTE *)(v16 + 48) = v13;
  *(_BYTE *)(a4 + *(int *)(result + 24)) = v17;
  return result;
}

uint64_t sub_1D5A746D8()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000021;
  if (*v0 != 1)
    v1 = 0xD000000000000014;
  if (*v0)
    return v1;
  else
    return 0x746144746E657665;
}

uint64_t sub_1D5A74744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A75E30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A74768()
{
  sub_1D5A74994();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A74790()
{
  sub_1D5A74994();
  return sub_1D5AAEEE0();
}

uint64_t AppBadgeEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char v12;
  char v13;
  char v14;
  uint64_t v16;
  char v17;
  __int128 v18;
  char v19;
  char v20;
  __int128 v21;
  char v22;

  v3 = v1;
  sub_1D5A74D18(0, &qword_1EFF521C8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A74994();
  sub_1D5AAEEC8();
  v17 = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = type metadata accessor for AppBadgeEvent.Model(0);
    v11 = (char *)(v3 + *(int *)(v10 + 20));
    v12 = v11[24];
    v13 = v11[25];
    v14 = v11[48];
    v17 = *v11;
    v18 = *(_OWORD *)(v11 + 8);
    v19 = v12;
    v20 = v13;
    v21 = *((_OWORD *)v11 + 2);
    v22 = v14;
    HIBYTE(v16) = 1;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v17 = *(_BYTE *)(v3 + *(int *)(v10 + 24));
    HIBYTE(v16) = 2;
    sub_1D57A9D90();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A74994()
{
  unint64_t result;

  result = qword_1EFF521D0;
  if (!qword_1EFF521D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE6674, &type metadata for AppBadgeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF521D0);
  }
  return result;
}

uint64_t AppBadgeEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char v28;
  __int128 v29;
  char v30;
  char v31;
  __int128 v32;
  char v33;
  char v34;

  v22 = a2;
  v3 = sub_1D5AADF98();
  v24 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v25 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A74D18(0, &qword_1EFF521D8, MEMORY[0x1E0DED048]);
  v23 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - v7;
  v9 = type metadata accessor for AppBadgeEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A74994();
  v26 = v8;
  v12 = v27;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = v9;
  v13 = (uint64_t)a1;
  v14 = v24;
  v28 = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v25, v3);
  v34 = 1;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v15 = v30;
  v16 = v31;
  v17 = v33;
  v18 = v27;
  v19 = &v11[*(int *)(v27 + 20)];
  *v19 = v28;
  *(_OWORD *)(v19 + 8) = v29;
  v19[24] = v15;
  v19[25] = v16;
  *((_OWORD *)v19 + 2) = v32;
  v19[48] = v17;
  v34 = 2;
  sub_1D58C5198();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v26, v23);
  v11[*(int *)(v18 + 24)] = v28;
  sub_1D5A74D74((uint64_t)v11, v22);
  __swift_destroy_boxed_opaque_existential_1(v13);
  return sub_1D5A74DB8((uint64_t)v11);
}

void sub_1D5A74D18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A74994();
    v7 = a3(a1, &type metadata for AppBadgeEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A74D74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppBadgeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A74DB8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AppBadgeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A74DF4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AppBadgeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A74E08(_QWORD *a1)
{
  return AppBadgeEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A74E1C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47490, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF52190, a1);
}

uint64_t sub_1D5A74E40@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF47498, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF521A8, a1);
}

uint64_t sub_1D5A74E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + *(int *)(a1 + 24);
  sub_1D579E208(0, &qword_1EFF521C0, (void (*)(void))sub_1D58C5198, (void (*)(void))sub_1D57A9D90);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for AppBadgeEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1EFF521C0, (void (*)(void))sub_1D58C5198, (void (*)(void))sub_1D57A9D90);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for AppBadgeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  sub_1D579E208(0, &qword_1EFF521C0, (void (*)(void))sub_1D58C5198, (void (*)(void))sub_1D57A9D90);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for AppBadgeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF521C0, (void (*)(void))sub_1D58C5198, (void (*)(void))sub_1D57A9D90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for AppBadgeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF521C0, (void (*)(void))sub_1D58C5198, (void (*)(void))sub_1D57A9D90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for AppBadgeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF521C0, (void (*)(void))sub_1D58C5198, (void (*)(void))sub_1D57A9D90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for AppBadgeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF521C0, (void (*)(void))sub_1D58C5198, (void (*)(void))sub_1D57A9D90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppBadgeEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A754F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF521C0, (void (*)(void))sub_1D58C5198, (void (*)(void))sub_1D57A9D90);
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AppBadgeEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A755D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF521C0, (void (*)(void))sub_1D58C5198, (void (*)(void))sub_1D57A9D90);
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5A756B8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1EFF521C0, (void (*)(void))sub_1D58C5198, (void (*)(void))sub_1D57A9D90);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for AppBadgeEvent.Model(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    *((_WORD *)v10 + 12) = *((_WORD *)v11 + 12);
    v13 = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
    *((_QWORD *)v10 + 5) = v13;
    v10[48] = v11[48];
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t initializeWithCopy for AppBadgeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  *(_WORD *)(v9 + 24) = *(_WORD *)(v10 + 24);
  v12 = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v9 + 40) = v12;
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AppBadgeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for AppBadgeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for AppBadgeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 24) = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v8 + 25) = *(_BYTE *)(v9 + 25);
  v11 = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for AppBadgeEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A75AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for AppBadgeEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A75B94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 16) = a2;
  return result;
}

uint64_t sub_1D5A75C10()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AppBadgeEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5A75CD8 + 4 * byte_1D5AE64A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5A75D0C + 4 * byte_1D5AE64A0[v4]))();
}

uint64_t sub_1D5A75D0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A75D14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A75D1CLL);
  return result;
}

uint64_t sub_1D5A75D28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A75D30);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5A75D34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A75D3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppBadgeEvent.Model.CodingKeys()
{
  return &type metadata for AppBadgeEvent.Model.CodingKeys;
}

unint64_t sub_1D5A75D5C()
{
  unint64_t result;

  result = qword_1EFF52310;
  if (!qword_1EFF52310)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE664C, &type metadata for AppBadgeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52310);
  }
  return result;
}

unint64_t sub_1D5A75DA4()
{
  unint64_t result;

  result = qword_1EFF52318;
  if (!qword_1EFF52318)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE65BC, &type metadata for AppBadgeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52318);
  }
  return result;
}

unint64_t sub_1D5A75DEC()
{
  unint64_t result;

  result = qword_1EFF52320;
  if (!qword_1EFF52320)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE65E4, &type metadata for AppBadgeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52320);
  }
  return result;
}

uint64_t sub_1D5A75E30(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AF0BF0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t TodayFeedPoolMyArticlesData.feedItemCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t TodayFeedPoolMyArticlesData.feedItemCount.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*TodayFeedPoolMyArticlesData.feedItemCount.modify())()
{
  return nullsub_1;
}

uint64_t TodayFeedPoolMyArticlesData.totalDuration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t TodayFeedPoolMyArticlesData.totalDuration.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*TodayFeedPoolMyArticlesData.totalDuration.modify())()
{
  return nullsub_1;
}

uint64_t TodayFeedPoolMyArticlesData.feedsNetworkDuration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t TodayFeedPoolMyArticlesData.feedsNetworkDuration.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*TodayFeedPoolMyArticlesData.feedsNetworkDuration.modify())()
{
  return nullsub_1;
}

uint64_t TodayFeedPoolMyArticlesData.evergreenNetworkDuration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t TodayFeedPoolMyArticlesData.evergreenNetworkDuration.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = result;
  *(_BYTE *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t (*TodayFeedPoolMyArticlesData.evergreenNetworkDuration.modify())()
{
  return nullsub_1;
}

uint64_t TodayFeedPoolMyArticlesData.scoringDuration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t TodayFeedPoolMyArticlesData.scoringDuration.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = result;
  *(_BYTE *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t (*TodayFeedPoolMyArticlesData.scoringDuration.modify())()
{
  return nullsub_1;
}

uint64_t TodayFeedPoolMyArticlesData.init(feedItemCount:totalDuration:feedsNetworkDuration:evergreenNetworkDuration:scoringDuration:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 24) = a4 & 1;
  *(_QWORD *)(a9 + 32) = a5;
  *(_BYTE *)(a9 + 40) = a6 & 1;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = a8 & 1;
  return result;
}

uint64_t sub_1D5A76078(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A760B8 + 4 * byte_1D5AE66D0[a1]))(0x6D65744964656566, 0xED0000746E756F43);
}

uint64_t sub_1D5A760B8()
{
  return 0x7275446C61746F74;
}

unint64_t sub_1D5A760DC()
{
  return 0xD000000000000014;
}

unint64_t sub_1D5A760F8()
{
  return 0xD000000000000018;
}

uint64_t sub_1D5A76118()
{
  return 0x44676E69726F6373;
}

uint64_t sub_1D5A7613C()
{
  unsigned __int8 *v0;

  return sub_1D5A76078(*v0);
}

uint64_t sub_1D5A76144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A76890(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A76168()
{
  sub_1D5A76398();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A76190()
{
  sub_1D5A76398();
  return sub_1D5AAEEE0();
}

uint64_t TodayFeedPoolMyArticlesData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _DWORD v11[4];
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;

  sub_1D5A765E8(0, &qword_1ED9D0DC8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v11 - v7;
  v9 = *(_QWORD *)(v1 + 8);
  v16 = *(_QWORD *)(v1 + 16);
  v17 = v9;
  v15 = *(unsigned __int8 *)(v1 + 24);
  v14 = *(_QWORD *)(v1 + 32);
  v13 = *(unsigned __int8 *)(v1 + 40);
  v12 = *(_QWORD *)(v1 + 48);
  v11[3] = *(unsigned __int8 *)(v1 + 56);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A76398();
  sub_1D5AAEEC8();
  v22 = 0;
  sub_1D5AAED84();
  if (!v2)
  {
    v21 = 1;
    sub_1D5AAED84();
    v20 = 2;
    sub_1D5AAED30();
    v19 = 3;
    sub_1D5AAED30();
    v18 = 4;
    sub_1D5AAED30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D5A76398()
{
  unint64_t result;

  result = qword_1ED9D09C0;
  if (!qword_1ED9D09C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE6870, &type metadata for TodayFeedPoolMyArticlesData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D09C0);
  }
  return result;
}

uint64_t TodayFeedPoolMyArticlesData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v17;
  char *v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;

  sub_1D5A765E8(0, &qword_1EFF52328, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A76398();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v29 = 0;
    v10 = sub_1D5AAECE8();
    v28 = 1;
    v11 = sub_1D5AAECE8();
    v27 = 2;
    v12 = sub_1D5AAEC94();
    v23 = v13;
    v24 = v12;
    v26 = 3;
    v14 = sub_1D5AAEC94();
    HIDWORD(v21) = v15;
    v22 = v14;
    v25 = 4;
    v17 = sub_1D5AAEC94();
    v18 = v9;
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v6);
    *(_QWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v11;
    *(_QWORD *)(a2 + 16) = v24;
    *(_BYTE *)(a2 + 24) = v23 & 1;
    *(_QWORD *)(a2 + 32) = v22;
    *(_BYTE *)(a2 + 40) = BYTE4(v21) & 1;
    *(_QWORD *)(a2 + 48) = v17;
    *(_BYTE *)(a2 + 56) = v20 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A765E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A76398();
    v7 = a3(a1, &type metadata for TodayFeedPoolMyArticlesData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A7664C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TodayFeedPoolMyArticlesData.init(from:)(a1, a2);
}

uint64_t sub_1D5A76660(_QWORD *a1)
{
  return TodayFeedPoolMyArticlesData.encode(to:)(a1);
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for TodayFeedPoolMyArticlesData(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TodayFeedPoolMyArticlesData(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 57) = v3;
  return result;
}

uint64_t storeEnumTagSinglePayload for TodayFeedPoolMyArticlesData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D5A76738 + 4 * byte_1D5AE66DA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5A7676C + 4 * byte_1D5AE66D5[v4]))();
}

uint64_t sub_1D5A7676C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A76774(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A7677CLL);
  return result;
}

uint64_t sub_1D5A76788(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A76790);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5A76794(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A7679C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TodayFeedPoolMyArticlesData.CodingKeys()
{
  return &type metadata for TodayFeedPoolMyArticlesData.CodingKeys;
}

unint64_t sub_1D5A767BC()
{
  unint64_t result;

  result = qword_1EFF52330;
  if (!qword_1EFF52330)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE6848, &type metadata for TodayFeedPoolMyArticlesData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52330);
  }
  return result;
}

unint64_t sub_1D5A76804()
{
  unint64_t result;

  result = qword_1ED9D09D0;
  if (!qword_1ED9D09D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE67B8, &type metadata for TodayFeedPoolMyArticlesData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D09D0);
  }
  return result;
}

unint64_t sub_1D5A7684C()
{
  unint64_t result;

  result = qword_1ED9D09C8;
  if (!qword_1ED9D09C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE67E0, &type metadata for TodayFeedPoolMyArticlesData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D09C8);
  }
  return result;
}

uint64_t sub_1D5A76890(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D65744964656566 && a2 == 0xED0000746E756F43;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7275446C61746F74 && a2 == 0xED00006E6F697461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AF2990 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5AF29B0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x44676E69726F6373 && a2 == 0xEF6E6F6974617275)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1D5A76B0C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF52338, MEMORY[0x1E0CF8078]);
}

uint64_t static ArticleUnlikeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF474A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF52338, a1);
}

uint64_t sub_1D5A76B4C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF52350, MEMORY[0x1E0CF8380]);
}

uint64_t static ArticleUnlikeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF474A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF52350, a1);
}

uint64_t ArticleUnlikeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t ArticleUnlikeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ArticleUnlikeEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleUnlikeEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUnlikeEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUnlikeEvent.articleData.modify())(_QWORD)
{
  type metadata accessor for ArticleUnlikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleUnlikeEvent.actionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUnlikeEvent.actionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUnlikeEvent.actionData.modify())(_QWORD)
{
  type metadata accessor for ArticleUnlikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleUnlikeEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUnlikeEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUnlikeEvent.channelData.modify())(_QWORD)
{
  type metadata accessor for ArticleUnlikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleUnlikeEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUnlikeEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUnlikeEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for ArticleUnlikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleUnlikeEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUnlikeEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUnlikeEvent.groupData.modify())(_QWORD)
{
  type metadata accessor for ArticleUnlikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleUnlikeEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUnlikeEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUnlikeEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for ArticleUnlikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleUnlikeEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUnlikeEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUnlikeEvent.issueData.modify())(_QWORD)
{
  type metadata accessor for ArticleUnlikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleUnlikeEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUnlikeEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUnlikeEvent.userChannelContextData.modify())(_QWORD)
{
  type metadata accessor for ArticleUnlikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleUnlikeEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent(0) + 52);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleUnlikeEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent(0) + 52);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleUnlikeEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for ArticleUnlikeEvent(0);
  return nullsub_1;
}

uint64_t ArticleUnlikeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ArticleUnlikeEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v12, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v12, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v12, v23);
}

uint64_t ArticleUnlikeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ArticleUnlikeEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent.Model(0) + 20);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t ArticleUnlikeEvent.Model.actionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ArticleUnlikeEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t ArticleUnlikeEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleUnlikeEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent.Model(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

_QWORD *ArticleUnlikeEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for ArticleUnlikeEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 36), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t ArticleUnlikeEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent.Model(0) + 40));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleUnlikeEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent.Model(0) + 44));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t ArticleUnlikeEvent.Model.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = type metadata accessor for ArticleUnlikeEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 48));
  v5 = *v4;
  v6 = v4[1];
  LOWORD(v4) = *((_WORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_BYTE *)(a1 + 1) = v6;
  *(_WORD *)(a1 + 2) = (_WORD)v4;
  return result;
}

uint64_t ArticleUnlikeEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleUnlikeEvent.Model(0) + 52));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

__n128 ArticleUnlikeEvent.Model.init(eventData:articleData:actionData:channelData:feedData:groupData:userBundleSubscriptionContextData:issueData:userChannelContextData:viewData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, __int128 *a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, __n128 *a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t *a11)
{
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 *v29;
  __n128 result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  __n128 v46;
  __int16 v47;
  char v48;
  char v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _BYTE v58[23];
  _BYTE v59[144];

  v57 = a2[6];
  *(_OWORD *)v58 = a2[7];
  *(_QWORD *)&v58[15] = *(_QWORD *)((char *)a2 + 127);
  v53 = a2[2];
  v54 = a2[3];
  v55 = a2[4];
  v56 = a2[5];
  v51 = *a2;
  v52 = a2[1];
  v15 = *a3;
  v34 = a4[1];
  v35 = *a4;
  v16 = *((_BYTE *)a4 + 16);
  v17 = *((_BYTE *)a4 + 17);
  v18 = a4[3];
  v33 = a4[4];
  v37 = *a5;
  v36 = *((_QWORD *)a5 + 2);
  sub_1D57DD5B8(a6, (uint64_t)v59);
  v44 = *a7;
  v42 = *((_QWORD *)a7 + 2);
  v43 = *((_QWORD *)a7 + 1);
  v40 = a7[25];
  v41 = a7[24];
  v38 = *((_QWORD *)a7 + 5);
  v39 = *((_QWORD *)a7 + 4);
  LOBYTE(a7) = a7[48];
  v46 = *a8;
  v19 = a8[1].n128_u64[0];
  v20 = a8[1].n128_u64[1];
  v45 = v19;
  v48 = a10[1];
  v49 = *a10;
  v47 = *((_WORD *)a10 + 1);
  v21 = *a11;
  v50 = a11[1];
  v22 = *((_WORD *)a11 + 8);
  v23 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a9, a1, v23);
  v24 = (int *)type metadata accessor for ArticleUnlikeEvent.Model(0);
  v25 = a9 + v24[5];
  *(_OWORD *)(v25 + 96) = v57;
  *(_OWORD *)(v25 + 112) = *(_OWORD *)v58;
  *(_QWORD *)(v25 + 127) = *(_QWORD *)&v58[15];
  *(_OWORD *)(v25 + 32) = v53;
  *(_OWORD *)(v25 + 48) = v54;
  *(_OWORD *)(v25 + 64) = v55;
  *(_OWORD *)(v25 + 80) = v56;
  *(_OWORD *)v25 = v51;
  *(_OWORD *)(v25 + 16) = v52;
  *(_BYTE *)(a9 + v24[6]) = v15;
  v26 = a9 + v24[7];
  *(_QWORD *)v26 = v35;
  *(_QWORD *)(v26 + 8) = v34;
  *(_BYTE *)(v26 + 16) = v16;
  *(_BYTE *)(v26 + 17) = v17;
  *(_QWORD *)(v26 + 24) = v18;
  *(_QWORD *)(v26 + 32) = v33;
  v27 = a9 + v24[8];
  *(_OWORD *)v27 = v37;
  *(_QWORD *)(v27 + 16) = v36;
  sub_1D57DD5B8((uint64_t)v59, a9 + v24[9]);
  v28 = a9 + v24[10];
  *(_BYTE *)v28 = v44;
  *(_QWORD *)(v28 + 8) = v43;
  *(_QWORD *)(v28 + 16) = v42;
  *(_BYTE *)(v28 + 24) = v41;
  *(_BYTE *)(v28 + 25) = v40;
  *(_QWORD *)(v28 + 32) = v39;
  *(_QWORD *)(v28 + 40) = v38;
  *(_BYTE *)(v28 + 48) = (_BYTE)a7;
  v29 = (__n128 *)(a9 + v24[11]);
  result = v46;
  *v29 = v46;
  v29[1].n128_u64[0] = v45;
  v29[1].n128_u64[1] = v20;
  v31 = a9 + v24[12];
  *(_BYTE *)v31 = v49;
  *(_BYTE *)(v31 + 1) = v48;
  *(_WORD *)(v31 + 2) = v47;
  v32 = a9 + v24[13];
  *(_QWORD *)v32 = v21;
  *(_QWORD *)(v32 + 8) = v50;
  *(_WORD *)(v32 + 16) = v22;
  return result;
}

uint64_t sub_1D5A77CB8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A77CF0 + 4 * byte_1D5AE68C0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5A77CF0()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D5A77D40()
{
  return 0x6174614464656566;
}

uint64_t sub_1D5A77D58()
{
  return 0x74614470756F7267;
}

unint64_t sub_1D5A77D6C()
{
  return 0xD000000000000021;
}

uint64_t sub_1D5A77D8C()
{
  return 0x7461446575737369;
}

unint64_t sub_1D5A77DA0()
{
  return 0xD000000000000016;
}

uint64_t sub_1D5A77DBC()
{
  return 0x6174614477656976;
}

uint64_t sub_1D5A77DD4()
{
  unsigned __int8 *v0;

  return sub_1D5A77CB8(*v0);
}

uint64_t sub_1D5A77DDC()
{
  sub_1D5A78274();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A77E04()
{
  sub_1D5A78274();
  return sub_1D5AAEEE0();
}

uint64_t ArticleUnlikeEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  _OWORD *v29;
  __int128 v30;
  char *v31;
  char v32;
  char v33;
  uint64_t v34;
  __int16 v35;
  uint64_t v37;
  char v38;
  _OWORD v39[3];
  char v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _BYTE v48[23];
  char v49;
  __int128 v50;
  uint64_t v51;
  char v52;

  v3 = v1;
  sub_1D5A78A68(0, &qword_1EFF52368, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v37 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A78274();
  sub_1D5AAEEC8();
  v52 = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for ArticleUnlikeEvent.Model(0);
    v11 = (__int128 *)(v3 + v10[5]);
    v12 = v11[7];
    v47 = v11[6];
    *(_OWORD *)v48 = v12;
    *(_QWORD *)&v48[15] = *(_QWORD *)((char *)v11 + 127);
    v13 = v11[3];
    v43 = v11[2];
    v44 = v13;
    v14 = v11[5];
    v45 = v11[4];
    v46 = v14;
    v15 = v11[1];
    v41 = *v11;
    v42 = v15;
    LOBYTE(v39[0]) = 1;
    sub_1D57CB940();
    sub_1D5AAED6C();
    LOBYTE(v41) = *(_BYTE *)(v3 + v10[6]);
    LOBYTE(v39[0]) = 2;
    sub_1D57CC038();
    sub_1D5AAED6C();
    v16 = (uint64_t *)(v3 + v10[7]);
    v17 = *v16;
    v18 = v16[1];
    v19 = *((_BYTE *)v16 + 16);
    v20 = *((_BYTE *)v16 + 17);
    v22 = v16[3];
    v21 = v16[4];
    *(_QWORD *)&v41 = v17;
    *((_QWORD *)&v41 + 1) = v18;
    LOBYTE(v42) = v19;
    BYTE1(v42) = v20;
    *((_QWORD *)&v42 + 1) = v22;
    *(_QWORD *)&v43 = v21;
    LOBYTE(v39[0]) = 3;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v23 = (__int128 *)(v3 + v10[8]);
    v24 = *((_QWORD *)v23 + 2);
    v50 = *v23;
    v51 = v24;
    v49 = 4;
    sub_1D57C65D4();
    sub_1D5AAED18();
    sub_1D57DD5B8(v3 + v10[9], (uint64_t)&v41);
    sub_1D57DD5B8((uint64_t)&v41, (uint64_t)v39);
    v38 = 5;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v25 = v3 + v10[10];
    v26 = *(_BYTE *)(v25 + 24);
    v27 = *(_BYTE *)(v25 + 25);
    v28 = *(_BYTE *)(v25 + 48);
    LOBYTE(v39[0]) = *(_BYTE *)v25;
    *(_OWORD *)((char *)v39 + 8) = *(_OWORD *)(v25 + 8);
    BYTE8(v39[1]) = v26;
    BYTE9(v39[1]) = v27;
    v39[2] = *(_OWORD *)(v25 + 32);
    v40 = v28;
    v38 = 6;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v29 = (_OWORD *)(v3 + v10[11]);
    v30 = v29[1];
    v39[0] = *v29;
    v39[1] = v30;
    v38 = 7;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    v31 = (char *)(v3 + v10[12]);
    v32 = *v31;
    v33 = v31[1];
    LOWORD(v31) = *((_WORD *)v31 + 1);
    LOBYTE(v39[0]) = v32;
    BYTE1(v39[0]) = v33;
    WORD1(v39[0]) = (_WORD)v31;
    v38 = 8;
    sub_1D57C7B24();
    sub_1D5AAED6C();
    v34 = v3 + v10[13];
    v35 = *(_WORD *)(v34 + 16);
    v39[0] = *(_OWORD *)v34;
    LOWORD(v39[1]) = v35;
    v38 = 9;
    sub_1D57C62A4();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A78274()
{
  unint64_t result;

  result = qword_1EFF52370;
  if (!qword_1EFF52370)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE6BBC, &type metadata for ArticleUnlikeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52370);
  }
  return result;
}

uint64_t ArticleUnlikeEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char v28;
  char v29;
  char v30;
  char *v31;
  char *v32;
  __int128 v33;
  char v34;
  __int16 v35;
  char *v36;
  __int16 v37;
  uint64_t v38;
  char *v39;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  int *v48;
  char v49;
  _OWORD v50[3];
  char v51;
  _BYTE v52[144];
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _BYTE v60[23];
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;

  v43 = a2;
  v4 = sub_1D5AADF98();
  v46 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A78A68(0, &qword_1EFF52378, MEMORY[0x1E0DED048]);
  v45 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v41 - v9;
  v48 = (int *)type metadata accessor for ArticleUnlikeEvent.Model(0);
  MEMORY[0x1E0C80A78](v48);
  v65 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1D5A78274();
  v44 = v10;
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  v42 = v8;
  LOBYTE(v61) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v13 = v65;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v65, v6, v4);
  v52[143] = 1;
  sub_1D57CB8FC();
  sub_1D5AAECD0();
  v41[1] = v4;
  v14 = v48;
  v15 = &v13[v48[5]];
  v16 = *(_OWORD *)v60;
  *((_OWORD *)v15 + 6) = v59;
  *((_OWORD *)v15 + 7) = v16;
  *(_QWORD *)(v15 + 127) = *(_QWORD *)&v60[15];
  v17 = v56;
  *((_OWORD *)v15 + 2) = v55;
  *((_OWORD *)v15 + 3) = v17;
  v18 = v58;
  *((_OWORD *)v15 + 4) = v57;
  *((_OWORD *)v15 + 5) = v18;
  v19 = v54;
  *(_OWORD *)v15 = v53;
  *((_OWORD *)v15 + 1) = v19;
  v52[0] = 2;
  sub_1D57CBFF4();
  sub_1D5AAECD0();
  v13[v14[6]] = v61;
  v52[0] = 3;
  sub_1D57CB874();
  sub_1D5AAECD0();
  v20 = *((_QWORD *)&v61 + 1);
  v21 = v62;
  v22 = BYTE1(v62);
  v23 = v63;
  v24 = v64;
  v25 = &v13[v14[7]];
  *(_QWORD *)v25 = v61;
  *((_QWORD *)v25 + 1) = v20;
  v25[16] = v21;
  v25[17] = v22;
  *((_QWORD *)v25 + 3) = v23;
  *((_QWORD *)v25 + 4) = v24;
  v52[0] = 4;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v26 = v62;
  v27 = &v13[v14[8]];
  *(_OWORD *)v27 = v61;
  *((_QWORD *)v27 + 2) = v26;
  v52[142] = 5;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  sub_1D57DD5B8((uint64_t)&v61, (uint64_t)v52);
  sub_1D57DD5B8((uint64_t)v52, (uint64_t)&v13[v14[9]]);
  v49 = 6;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v28 = BYTE8(v50[1]);
  v29 = BYTE9(v50[1]);
  v30 = v51;
  v31 = &v13[v14[10]];
  *v31 = v50[0];
  *(_OWORD *)(v31 + 8) = *(_OWORD *)((char *)v50 + 8);
  v31[24] = v28;
  v31[25] = v29;
  *((_OWORD *)v31 + 2) = v50[2];
  v31[48] = v30;
  v49 = 7;
  sub_1D57C5ED8();
  sub_1D5AAEC7C();
  v32 = &v13[v48[11]];
  v33 = v50[1];
  *(_OWORD *)v32 = v50[0];
  *((_OWORD *)v32 + 1) = v33;
  v49 = 8;
  sub_1D57C7AE0();
  sub_1D5AAECD0();
  v34 = BYTE1(v50[0]);
  v35 = WORD1(v50[0]);
  v36 = &v13[v48[12]];
  *v36 = v50[0];
  v36[1] = v34;
  *((_WORD *)v36 + 1) = v35;
  v49 = 9;
  sub_1D57C6260();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v45);
  v37 = v50[1];
  v38 = (uint64_t)v65;
  v39 = &v65[v48[13]];
  *(_OWORD *)v39 = v50[0];
  *((_WORD *)v39 + 8) = v37;
  sub_1D5A78AC4(v38, v43);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  return sub_1D5A78B08(v38);
}

void sub_1D5A78A68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A78274();
    v7 = a3(a1, &type metadata for ArticleUnlikeEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A78AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArticleUnlikeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A78B08(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArticleUnlikeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A78B44@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleUnlikeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A78B58(_QWORD *a1)
{
  return ArticleUnlikeEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A78B6C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF474A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF52338, a1);
}

uint64_t sub_1D5A78B90@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF474A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF52350, a1);
}

uint64_t getEnumTagSinglePayload for ArticleUnlikeEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A78BC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                    v8 = v21;
                    v12 = *(_QWORD *)(v21 - 8);
                    v13 = a3[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ArticleUnlikeEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A78E80(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70C0, (void (*)(void))sub_1D57CBFF4, (void (*)(void))sub_1D57CC038);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
                    v10 = v23;
                    v14 = *(_QWORD *)(v23 - 8);
                    v15 = a4[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for ArticleUnlikeEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A79148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleUnlikeEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A791D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for ArticleUnlikeEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1D5A7929C + 4 * byte_1D5AE68CF[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1D5A792D0 + 4 * byte_1D5AE68CA[v4]))();
}

uint64_t sub_1D5A792D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A792D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A792E0);
  return result;
}

uint64_t sub_1D5A792EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A792F4);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1D5A792F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A79300(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleUnlikeEvent.Model.CodingKeys()
{
  return &type metadata for ArticleUnlikeEvent.Model.CodingKeys;
}

unint64_t sub_1D5A79320()
{
  unint64_t result;

  result = qword_1EFF52380;
  if (!qword_1EFF52380)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE6B94, &type metadata for ArticleUnlikeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52380);
  }
  return result;
}

unint64_t sub_1D5A79368()
{
  unint64_t result;

  result = qword_1EFF52388;
  if (!qword_1EFF52388)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE6B04, &type metadata for ArticleUnlikeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52388);
  }
  return result;
}

unint64_t sub_1D5A793B0()
{
  unint64_t result;

  result = qword_1EFF52390;
  if (!qword_1EFF52390)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE6B2C, &type metadata for ArticleUnlikeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52390);
  }
  return result;
}

uint64_t NetworkEventData.startTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1D5AAD710();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t NetworkEventData.startTime.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1D5AAD710();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*NetworkEventData.startTime.modify())()
{
  return nullsub_1;
}

uint64_t NetworkEventData.dnsDuration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 20));
}

uint64_t NetworkEventData.dnsDuration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetworkEventData();
  *(_QWORD *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*NetworkEventData.dnsDuration.modify())(_QWORD)
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.connectDuration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 24));
}

uint64_t NetworkEventData.connectDuration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetworkEventData();
  *(_QWORD *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*NetworkEventData.connectDuration.modify())(_QWORD)
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.requestDuration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 28));
}

uint64_t NetworkEventData.requestDuration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetworkEventData();
  *(_QWORD *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*NetworkEventData.requestDuration.modify())(_QWORD)
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.responseDuration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 32));
}

uint64_t NetworkEventData.responseDuration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetworkEventData();
  *(_QWORD *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*NetworkEventData.responseDuration.modify())(_QWORD)
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.responseSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 36));
}

uint64_t NetworkEventData.responseSize.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetworkEventData();
  *(_QWORD *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*NetworkEventData.responseSize.modify())(_QWORD)
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.cacheState.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetworkEventData();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t NetworkEventData.cacheState.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for NetworkEventData();
  *(_BYTE *)(v1 + *(int *)(result + 40)) = v2;
  return result;
}

uint64_t (*NetworkEventData.cacheState.modify())(_QWORD)
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.statusCode.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 44));
}

uint64_t NetworkEventData.statusCode.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetworkEventData();
  *(_QWORD *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*NetworkEventData.statusCode.modify())(_QWORD)
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.errorCode.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 48));
}

uint64_t NetworkEventData.errorCode.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetworkEventData();
  *(_QWORD *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*NetworkEventData.errorCode.modify())(_QWORD)
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.eventType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetworkEventData();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t NetworkEventData.eventType.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for NetworkEventData();
  *(_BYTE *)(v1 + *(int *)(result + 52)) = v2;
  return result;
}

uint64_t (*NetworkEventData.eventType.modify())(_QWORD)
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.wifiReachabilityStatus.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 56));
}

uint64_t NetworkEventData.wifiReachabilityStatus.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetworkEventData();
  *(_BYTE *)(v1 + *(int *)(result + 56)) = a1;
  return result;
}

uint64_t (*NetworkEventData.wifiReachabilityStatus.modify())(_QWORD)
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.cellularRadioAccessTechnology.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetworkEventData();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 60));
  return result;
}

uint64_t NetworkEventData.cellularRadioAccessTechnology.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for NetworkEventData();
  *(_BYTE *)(v1 + *(int *)(result + 60)) = v2;
  return result;
}

uint64_t (*NetworkEventData.cellularRadioAccessTechnology.modify())(_QWORD)
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.respondingPop.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NetworkEventData.respondingPop.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for NetworkEventData() + 64));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*NetworkEventData.respondingPop.modify())(_QWORD)
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.isProxyConnection.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 68));
}

uint64_t NetworkEventData.isProxyConnection.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetworkEventData();
  *(_BYTE *)(v1 + *(int *)(result + 68)) = a1;
  return result;
}

uint64_t (*NetworkEventData.isProxyConnection.modify())(_QWORD)
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t sub_1D5A79ABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A7A5E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A79AE0()
{
  sub_1D57B4B6C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A79B08()
{
  sub_1D57B4B6C();
  return sub_1D5AAEEE0();
}

uint64_t NetworkEventData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  char v32;
  char v33;

  v26 = a2;
  v27 = sub_1D5AAD710();
  v3 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D57B4A88(0, &qword_1EFF52398, MEMORY[0x1E0DED048]);
  v28 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - v7;
  v9 = type metadata accessor for NetworkEventData();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57B4B6C();
  v30 = v8;
  v12 = v31;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v25 = (int *)v9;
  v31 = v11;
  v33 = 0;
  sub_1D57A8DE4(&qword_1EFF50E98, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v13 = v27;
  sub_1D5AAECD0();
  v14 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v15 = v31;
  v14(v31, v29, v13);
  v33 = 1;
  *(_QWORD *)&v15[v25[5]] = sub_1D5AAECE8();
  v33 = 2;
  *(_QWORD *)&v15[v25[6]] = sub_1D5AAECE8();
  v33 = 3;
  *(_QWORD *)&v15[v25[7]] = sub_1D5AAECE8();
  v33 = 4;
  *(_QWORD *)&v15[v25[8]] = sub_1D5AAECE8();
  v33 = 5;
  *(_QWORD *)&v15[v25[9]] = sub_1D5AAECE8();
  v32 = 6;
  sub_1D5A7A0A4();
  sub_1D5AAECD0();
  v15[v25[10]] = v33;
  v33 = 7;
  *(_QWORD *)&v15[v25[11]] = sub_1D5AAECE8();
  v33 = 8;
  *(_QWORD *)&v15[v25[12]] = sub_1D5AAECE8();
  v32 = 9;
  sub_1D5A7A0E8();
  sub_1D5AAECD0();
  v31[v25[13]] = v33;
  v33 = 10;
  v31[v25[14]] = sub_1D5AAECAC() & 1;
  v32 = 11;
  sub_1D5A7A12C();
  sub_1D5AAECD0();
  v31[v25[15]] = v33;
  v33 = 12;
  v16 = sub_1D5AAECA0();
  v17 = (uint64_t *)&v31[v25[16]];
  *v17 = v16;
  v17[1] = v18;
  v33 = 13;
  v19 = sub_1D5AAECAC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v30, v28);
  v20 = v26;
  v21 = v19 & 1;
  v22 = (uint64_t)v31;
  v31[v25[17]] = v21;
  sub_1D58C8BB0(v22, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1D5A7A170(v22);
}

unint64_t sub_1D5A7A0A4()
{
  unint64_t result;

  result = qword_1EFF523A0;
  if (!qword_1EFF523A0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for CacheState, &type metadata for CacheState);
    atomic_store(result, (unint64_t *)&qword_1EFF523A0);
  }
  return result;
}

unint64_t sub_1D5A7A0E8()
{
  unint64_t result;

  result = qword_1EFF523A8;
  if (!qword_1EFF523A8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for NetworkEventType, &type metadata for NetworkEventType);
    atomic_store(result, (unint64_t *)&qword_1EFF523A8);
  }
  return result;
}

unint64_t sub_1D5A7A12C()
{
  unint64_t result;

  result = qword_1EFF523B0;
  if (!qword_1EFF523B0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for CellularRadioAccessTechnology, &type metadata for CellularRadioAccessTechnology);
    atomic_store(result, (unint64_t *)&qword_1EFF523B0);
  }
  return result;
}

uint64_t sub_1D5A7A170(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NetworkEventData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A7A1AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NetworkEventData.init(from:)(a1, a2);
}

uint64_t assignWithCopy for NetworkEventData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1D5AAD710();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v7 = a3[16];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t initializeWithTake for NetworkEventData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1D5AAD710();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v10 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  v11 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t assignWithTake for NetworkEventData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1D5AAD710();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v10 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  v11 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t sub_1D5A7A484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AAD710();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 64) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for NetworkEventData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A7A510(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AAD710();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 64) + 8) = (a2 - 1);
  return result;
}

ValueMetadata *type metadata accessor for NetworkEventData.CodingKeys()
{
  return &type metadata for NetworkEventData.CodingKeys;
}

unint64_t sub_1D5A7A5A0()
{
  unint64_t result;

  result = qword_1EFF523B8;
  if (!qword_1EFF523B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE6E5C, &type metadata for NetworkEventData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF523B8);
  }
  return result;
}

uint64_t sub_1D5A7A5E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D69547472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461727544736E64 && a2 == 0xEB000000006E6F69 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x447463656E6E6F63 && a2 == 0xEF6E6F6974617275 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4474736575716572 && a2 == 0xEF6E6F6974617275 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AF29D0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xEC000000657A6953 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6174536568636163 && a2 == 0xEA00000000006574 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6F43737574617473 && a2 == 0xEA00000000006564 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x646F43726F727265 && a2 == 0xE900000000000065 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x707954746E657665 && a2 == 0xE900000000000065 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AF29F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001D5AF2A10 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x69646E6F70736572 && a2 == 0xED0000706F50676ELL || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AF2A30)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

NewsAnalytics::WidgetType_optional __swiftcall WidgetType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::WidgetType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t WidgetType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A7AC9C + 4 * byte_1D5AE6ED4[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5A7AC9C()
{
  return 0x695764656E6E6970;
}

uint64_t sub_1D5A7ACBC()
{
  return 0x6174537472616D73;
}

uint64_t sub_1D5A7ACD8()
{
  return 0x7472616D536E6F6ELL;
}

void sub_1D5A7ACFC(char *a1)
{
  sub_1D5A3DA90(*a1);
}

unint64_t sub_1D5A7AD0C()
{
  unint64_t result;

  result = qword_1EFF523C0;
  if (!qword_1EFF523C0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetType, &type metadata for WidgetType);
    atomic_store(result, (unint64_t *)&qword_1EFF523C0);
  }
  return result;
}

void sub_1D5A7AD50()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5A7AD9C()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A7AE24()
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A7AE60()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5A7AED4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5A7AF1C()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::WidgetType_optional sub_1D5A7AFA4(Swift::String *a1)
{
  return WidgetType.init(rawValue:)(*a1);
}

uint64_t sub_1D5A7AFB0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D5A7AFE0 + 4 * byte_1D5AE6EE4[*v0]))();
}

void sub_1D5A7AFE0(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "pinnedWidget");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1D5A7B004(_QWORD *a1@<X8>)
{
  *a1 = 0x6174537472616D73;
  a1[1] = 0xEA00000000006B63;
}

void sub_1D5A7B024(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "nonSmartStack");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_1D5A7B04C()
{
  sub_1D5A7B1C0();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A7B0A8()
{
  sub_1D5A7B1C0();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for WidgetType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D5A7B140 + 4 * byte_1D5AE6EED[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D5A7B174 + 4 * byte_1D5AE6EE8[v4]))();
}

uint64_t sub_1D5A7B174(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A7B17C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A7B184);
  return result;
}

uint64_t sub_1D5A7B190(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A7B198);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D5A7B19C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A7B1A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetType()
{
  return &type metadata for WidgetType;
}

unint64_t sub_1D5A7B1C0()
{
  unint64_t result;

  result = qword_1ED9D1458;
  if (!qword_1ED9D1458)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetType, &type metadata for WidgetType);
    atomic_store(result, (unint64_t *)&qword_1ED9D1458);
  }
  return result;
}

NewsAnalytics::WidgetAppearanceType_optional __swiftcall WidgetAppearanceType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::WidgetAppearanceType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t WidgetAppearanceType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A7B28C + 4 * byte_1D5AE7010[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5A7B28C()
{
  return 0x45736569726F7473;
}

uint64_t sub_1D5A7B2B0()
{
  return 0x6569726F74536F6ELL;
}

uint64_t sub_1D5A7B2CC()
{
  return 0x726F727265;
}

uint64_t sub_1D5A7B2E0()
{
  return 0x656E696C66666FLL;
}

void sub_1D5A7B2F4(char *a1)
{
  sub_1D5A3911C(*a1);
}

unint64_t sub_1D5A7B304()
{
  unint64_t result;

  result = qword_1EFF523C8;
  if (!qword_1EFF523C8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetAppearanceType, &type metadata for WidgetAppearanceType);
    atomic_store(result, (unint64_t *)&qword_1EFF523C8);
  }
  return result;
}

void sub_1D5A7B348()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5A7B394()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A7B424()
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A7B460()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5A7B4DC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5A7B524()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::WidgetAppearanceType_optional sub_1D5A7B5B4(Swift::String *a1)
{
  return WidgetAppearanceType.init(rawValue:)(*a1);
}

uint64_t sub_1D5A7B5C0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D5A7B5F0 + 4 * byte_1D5AE7024[*v0]))();
}

void sub_1D5A7B5F0(char *a1@<X8>)
{
  strcpy(a1, "storiesExposed");
  a1[15] = -18;
}

void sub_1D5A7B618(_QWORD *a1@<X8>)
{
  *a1 = 0x6569726F74536F6ELL;
  a1[1] = 0xE900000000000073;
}

void sub_1D5A7B638(_QWORD *a1@<X8>)
{
  *a1 = 0x726F727265;
  a1[1] = 0xE500000000000000;
}

void sub_1D5A7B650(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x656E696C66666FLL;
  a1[1] = v1;
}

uint64_t sub_1D5A7B668()
{
  sub_1D5A7B7DC();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A7B6C4()
{
  sub_1D5A7B7DC();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for WidgetAppearanceType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D5A7B75C + 4 * byte_1D5AE702E[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5A7B790 + 4 * byte_1D5AE7029[v4]))();
}

uint64_t sub_1D5A7B790(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A7B798(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A7B7A0);
  return result;
}

uint64_t sub_1D5A7B7AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A7B7B4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5A7B7B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A7B7C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetAppearanceType()
{
  return &type metadata for WidgetAppearanceType;
}

unint64_t sub_1D5A7B7DC()
{
  unint64_t result;

  result = qword_1EFF523D0;
  if (!qword_1EFF523D0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for WidgetAppearanceType, &type metadata for WidgetAppearanceType);
    atomic_store(result, (unint64_t *)&qword_1EFF523D0);
  }
  return result;
}

uint64_t sub_1D5A7B820(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF523D8, MEMORY[0x1E0CF8078]);
}

uint64_t static TagEmailSignupEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF474B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF523D8, a1);
}

uint64_t sub_1D5A7B860(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF523F0, MEMORY[0x1E0CF8380]);
}

uint64_t static TagEmailSignupEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF474B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF523F0, a1);
}

uint64_t TagEmailSignupEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t TagEmailSignupEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*TagEmailSignupEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t TagEmailSignupEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TagEmailSignupEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for TagEmailSignupEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF52478);
}

uint64_t TagEmailSignupEvent.tagData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TagEmailSignupEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TagEmailSignupEvent.tagData.modify())(_QWORD)
{
  type metadata accessor for TagEmailSignupEvent(0);
  return nullsub_1;
}

uint64_t TagEmailSignupEvent.userActionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TagEmailSignupEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TagEmailSignupEvent.userActionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TagEmailSignupEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TagEmailSignupEvent.userActionData.modify())(_QWORD)
{
  type metadata accessor for TagEmailSignupEvent(0);
  return nullsub_1;
}

uint64_t TagEmailSignupEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = type metadata accessor for TagEmailSignupEvent(0);
  v5 = a1 + *(int *)(v4 + 20);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + *(int *)(v4 + 24);
  sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
}

uint64_t TagEmailSignupEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t TagEmailSignupEvent.Model.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for TagEmailSignupEvent.Model(0) + 20));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for TagEmailSignupEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF52510);
}

uint64_t TagEmailSignupEvent.Model.userActionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TagEmailSignupEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t TagEmailSignupEvent.Model.init(eventData:tagData:userActionData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  _QWORD *v11;

  v6 = *a2;
  v7 = a2[1];
  v8 = *a3;
  v9 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a4, a1, v9);
  result = type metadata accessor for TagEmailSignupEvent.Model(0);
  v11 = (_QWORD *)(a4 + *(int *)(result + 20));
  *v11 = v6;
  v11[1] = v7;
  *(_BYTE *)(a4 + *(int *)(result + 24)) = v8;
  return result;
}

uint64_t sub_1D5A7BCD8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x61746144676174;
  if (*v0 != 1)
    v1 = 0x6974634172657375;
  if (*v0)
    return v1;
  else
    return 0x746144746E657665;
}

uint64_t sub_1D5A7BD44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A7D30C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A7BD68()
{
  sub_1D5A7BF6C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A7BD90()
{
  sub_1D5A7BF6C();
  return sub_1D5AAEEE0();
}

uint64_t TagEmailSignupEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v1;
  sub_1D5A7C2A0(0, &qword_1EFF52408, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A7BF6C();
  sub_1D5AAEEC8();
  LOBYTE(v17) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = type metadata accessor for TagEmailSignupEvent.Model(0);
    v11 = (uint64_t *)(v3 + *(int *)(v10 + 20));
    v13 = *v11;
    v12 = v11[1];
    v17 = v13;
    v18 = v12;
    v16 = 1;
    sub_1D57C6738();
    sub_1D5AAED6C();
    LOBYTE(v17) = *(_BYTE *)(v3 + *(int *)(v10 + 24));
    v16 = 2;
    sub_1D59B28A4();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A7BF6C()
{
  unint64_t result;

  result = qword_1EFF52410;
  if (!qword_1EFF52410)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE7344, &type metadata for TagEmailSignupEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52410);
  }
  return result;
}

uint64_t TagEmailSignupEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v18 = a2;
  v3 = sub_1D5AADF98();
  v19 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v21 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A7C2A0(0, &qword_1EFF52418, MEMORY[0x1E0DED048]);
  v22 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - v7;
  v9 = type metadata accessor for TagEmailSignupEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A7BF6C();
  v20 = v8;
  v12 = v23;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v23 = v6;
  v13 = v19;
  LOBYTE(v24) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v14 = v20;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v21, v3);
  v26 = 1;
  sub_1D57C66F4();
  sub_1D5AAECD0();
  v15 = v25;
  v16 = &v11[*(int *)(v9 + 20)];
  *(_QWORD *)v16 = v24;
  *((_QWORD *)v16 + 1) = v15;
  v26 = 2;
  sub_1D59B285C();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v22);
  v11[*(int *)(v9 + 24)] = v24;
  sub_1D5A7C2FC((uint64_t)v11, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1D5A7C340((uint64_t)v11);
}

void sub_1D5A7C2A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A7BF6C();
    v7 = a3(a1, &type metadata for TagEmailSignupEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A7C2FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TagEmailSignupEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A7C340(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TagEmailSignupEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A7C37C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TagEmailSignupEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A7C390(_QWORD *a1)
{
  return TagEmailSignupEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A7C3A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF474B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF523D8, a1);
}

uint64_t sub_1D5A7C3C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF474B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF523F0, a1);
}

uint64_t sub_1D5A7C3EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + *(int *)(a1 + 24);
  sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for TagEmailSignupEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for TagEmailSignupEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for TagEmailSignupEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for TagEmailSignupEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for TagEmailSignupEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for TagEmailSignupEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for TagEmailSignupEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A7CA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for TagEmailSignupEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A7CB60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5A7CC40()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1EFF517F0, (void (*)(void))sub_1D59B285C, (void (*)(void))sub_1D59B28A4);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for TagEmailSignupEvent.Model(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TagEmailSignupEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TagEmailSignupEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TagEmailSignupEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for TagEmailSignupEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for TagEmailSignupEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for TagEmailSignupEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A7CFE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for TagEmailSignupEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A7D070(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5A7D0EC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TagEmailSignupEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5A7D1B4 + 4 * byte_1D5AE7165[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5A7D1E8 + 4 * byte_1D5AE7160[v4]))();
}

uint64_t sub_1D5A7D1E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A7D1F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A7D1F8);
  return result;
}

uint64_t sub_1D5A7D204(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A7D20CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5A7D210(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A7D218(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TagEmailSignupEvent.Model.CodingKeys()
{
  return &type metadata for TagEmailSignupEvent.Model.CodingKeys;
}

unint64_t sub_1D5A7D238()
{
  unint64_t result;

  result = qword_1EFF52550;
  if (!qword_1EFF52550)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE731C, &type metadata for TagEmailSignupEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52550);
  }
  return result;
}

unint64_t sub_1D5A7D280()
{
  unint64_t result;

  result = qword_1EFF52558;
  if (!qword_1EFF52558)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE728C, &type metadata for TagEmailSignupEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52558);
  }
  return result;
}

unint64_t sub_1D5A7D2C8()
{
  unint64_t result;

  result = qword_1EFF52560;
  if (!qword_1EFF52560)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE72B4, &type metadata for TagEmailSignupEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52560);
  }
  return result;
}

uint64_t sub_1D5A7D30C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61746144676174 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974634172657375 && a2 == 0xEE00617461446E6FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t TodayFeedPoolData.timeSpan.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t TodayFeedPoolData.timeSpan.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*TodayFeedPoolData.timeSpan.modify())()
{
  return nullsub_1;
}

void TodayFeedPoolData.priority.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

_BYTE *TodayFeedPoolData.priority.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = *result;
  return result;
}

uint64_t (*TodayFeedPoolData.priority.modify())()
{
  return nullsub_1;
}

uint64_t TodayFeedPoolData.init(timeSpan:priority:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3;

  v3 = *a2;
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = v3;
  return result;
}

uint64_t sub_1D5A7D4E8()
{
  _BYTE *v0;

  if (*v0)
    return 0x797469726F697270;
  else
    return 0x6E617053656D6974;
}

uint64_t sub_1D5A7D51C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A7DBD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A7D540()
{
  sub_1D5A7D6D0();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A7D568()
{
  sub_1D5A7D6D0();
  return sub_1D5AAEEE0();
}

uint64_t TodayFeedPoolData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  int v11;
  char v12;
  char v13;
  char v14;

  sub_1D5A7D8C4(0, &qword_1ED9D0D58, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v10 - v7;
  v11 = *(unsigned __int8 *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A7D6D0();
  sub_1D5AAEEC8();
  v14 = 0;
  sub_1D5AAED84();
  if (!v2)
  {
    v13 = v11;
    v12 = 1;
    sub_1D5A7D714();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D5A7D6D0()
{
  unint64_t result;

  result = qword_1ED9CFC58;
  if (!qword_1ED9CFC58)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE7528, &type metadata for TodayFeedPoolData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CFC58);
  }
  return result;
}

unint64_t sub_1D5A7D714()
{
  unint64_t result;

  result = qword_1ED9D0B90;
  if (!qword_1ED9D0B90)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for Priority, &type metadata for Priority);
    atomic_store(result, (unint64_t *)&qword_1ED9D0B90);
  }
  return result;
}

uint64_t TodayFeedPoolData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;

  sub_1D5A7D8C4(0, &qword_1EFF52568, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A7D6D0();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v16 = 0;
    v10 = sub_1D5AAECE8();
    v14 = 1;
    sub_1D5A7D920();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
    *(_QWORD *)a2 = v10;
    *(_BYTE *)(a2 + 8) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A7D8C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A7D6D0();
    v7 = a3(a1, &type metadata for TodayFeedPoolData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5A7D920()
{
  unint64_t result;

  result = qword_1EFF52570;
  if (!qword_1EFF52570)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for Priority, &type metadata for Priority);
    atomic_store(result, (unint64_t *)&qword_1EFF52570);
  }
  return result;
}

uint64_t sub_1D5A7D96C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TodayFeedPoolData.init(from:)(a1, a2);
}

uint64_t sub_1D5A7D980(_QWORD *a1)
{
  return TodayFeedPoolData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for TodayFeedPoolData(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 4;
  v5 = v3 - 4;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TodayFeedPoolData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for TodayFeedPoolData()
{
  return &type metadata for TodayFeedPoolData;
}

uint64_t storeEnumTagSinglePayload for TodayFeedPoolData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5A7DA78 + 4 * byte_1D5AE73A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D5A7DAAC + 4 * byte_1D5AE73A0[v4]))();
}

uint64_t sub_1D5A7DAAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A7DAB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A7DABCLL);
  return result;
}

uint64_t sub_1D5A7DAC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A7DAD0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5A7DAD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A7DADC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TodayFeedPoolData.CodingKeys()
{
  return &type metadata for TodayFeedPoolData.CodingKeys;
}

unint64_t sub_1D5A7DAFC()
{
  unint64_t result;

  result = qword_1EFF52578;
  if (!qword_1EFF52578)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE7500, &type metadata for TodayFeedPoolData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52578);
  }
  return result;
}

unint64_t sub_1D5A7DB44()
{
  unint64_t result;

  result = qword_1ED9CFC68;
  if (!qword_1ED9CFC68)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE7470, &type metadata for TodayFeedPoolData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CFC68);
  }
  return result;
}

unint64_t sub_1D5A7DB8C()
{
  unint64_t result;

  result = qword_1ED9CFC60;
  if (!qword_1ED9CFC60)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE7498, &type metadata for TodayFeedPoolData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CFC60);
  }
  return result;
}

uint64_t sub_1D5A7DBD0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E617053656D6974 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

NewsAnalytics::Role_optional __swiftcall Role.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::Role_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 9;
  if (v3 < 9)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t Role.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A7DD48 + 4 * byte_1D5AE7578[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5A7DD48()
{
  return 0x656C6369747261;
}

uint64_t sub_1D5A7DD5C()
{
  return 0x7265766F63;
}

unint64_t sub_1D5A7DD70()
{
  return 0xD000000000000014;
}

uint64_t sub_1D5A7DDA8()
{
  return 0x6867696C746F7073;
}

uint64_t sub_1D5A7DDC4()
{
  return 0x65727574616566;
}

uint64_t sub_1D5A7DDD8()
{
  return 0x737349664F646E65;
}

unint64_t sub_1D5A7DDF4()
{
  return 0xD000000000000012;
}

void sub_1D5A7DE10(char *a1)
{
  sub_1D5A35938(*a1);
}

unint64_t sub_1D5A7DE20()
{
  unint64_t result;

  result = qword_1EFF52580;
  if (!qword_1EFF52580)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for Role, &type metadata for Role);
    atomic_store(result, (unint64_t *)&qword_1EFF52580);
  }
  return result;
}

uint64_t sub_1D5A7DE64()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1D5AAEE80();
  sub_1D5AA7D48((uint64_t)v3, v1);
  return sub_1D5AAEE98();
}

void sub_1D5A7DEA8(uint64_t a1)
{
  char *v1;

  sub_1D5AA7D48(a1, *v1);
}

uint64_t sub_1D5A7DEB0()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1D5AAEE80();
  sub_1D5AA7D48((uint64_t)v3, v1);
  return sub_1D5AAEE98();
}

NewsAnalytics::Role_optional sub_1D5A7DEF0(Swift::String *a1)
{
  return Role.init(rawValue:)(*a1);
}

uint64_t sub_1D5A7DEFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Role.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D5A7DF20()
{
  sub_1D5A7E084();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A7DF7C()
{
  sub_1D5A7E084();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for Role(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1D5A7E014 + 4 * byte_1D5AE7586[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1D5A7E048 + 4 * byte_1D5AE7581[v4]))();
}

uint64_t sub_1D5A7E048(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A7E050(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A7E058);
  return result;
}

uint64_t sub_1D5A7E064(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A7E06CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1D5A7E070(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A7E078(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1D5A7E084()
{
  unint64_t result;

  result = qword_1ED9CC390;
  if (!qword_1ED9CC390)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for Role, &type metadata for Role);
    atomic_store(result, (unint64_t *)&qword_1ED9CC390);
  }
  return result;
}

uint64_t type metadata accessor for MediaEngageCompletedEventQueryItemsGenerator()
{
  return objc_opt_self();
}

void sub_1D5A7E0E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D5A7E250(a1, a2, a3);
}

_QWORD *sub_1D5A7E0FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;

  v0 = sub_1D5AAD560();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - v5;
  sub_1D5AAD53C();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  v7 = (_QWORD *)sub_1D5873060(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v9 = v7[2];
  v8 = v7[3];
  if (v9 >= v8 >> 1)
    v7 = (_QWORD *)sub_1D5873060(v8 > 1, v9 + 1, 1, v7);
  v7[2] = v9 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))((unint64_t)v7+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * v9, v4, v0);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  return v7;
}

void sub_1D5A7E250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  char *v33;
  _DWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;

  v45 = a3;
  v44 = a2;
  v43 = sub_1D5AAD560();
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v46 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for MediaEngageCompleteEvent.Model(0);
  MEMORY[0x1E0C80A78](v48);
  v47 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A7EA00();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D5AADAAC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v34 - v12;
  sub_1D5A7EA54();
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  v19 = swift_dynamicCast();
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  if (v19)
  {
    v20(v9, 0, 1, v15);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v9, v15);
    v21 = (void *)sub_1D5AADA7C();
    v22 = sub_1D5AADE3C();
    if (!v3)
    {
      v24 = v23;
      v41 = v18;
      v25 = v22;

      sub_1D5AAD4B8();
      swift_allocObject();
      sub_1D5AAD4AC();
      sub_1D57A8DE4(&qword_1EFF52590, type metadata accessor for MediaEngageCompleteEvent.Model, (uint64_t)&protocol conformance descriptor for MediaEngageCompleteEvent.Model);
      v26 = v47;
      v27 = v48;
      sub_1D5AAD4A0();
      v37 = v25;
      v38 = v24;
      swift_release();
      v28 = &v26[*(int *)(v27 + 36)];
      v29 = *v28;
      v30 = *((_QWORD *)v28 + 1);
      v40 = *((_QWORD *)v28 + 2);
      v31 = *((unsigned int *)v28 + 6);
      v32 = v28[28];
      v33 = (char *)sub_1D5A7E630 + 4 * byte_1D5AE76B0[v29];
      v39 = v29;
      v36 = v30;
      v35 = v31;
      v34[1] = v32;
      __asm { BR              X9 }
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);

  }
  else
  {
    v20(v9, 1, 1, v15);
    sub_1D5820E20((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1D5A7EA00);
    sub_1D5820DDC();
    swift_allocError();
    swift_willThrow();
  }
}

uint64_t sub_1D5A7E630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  int *v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  size_t v25;
  size_t v26;
  _QWORD *v27;

  v6 = sub_1D5AAEDE4();
  swift_bridgeObjectRetain();
  v7 = swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    sub_1D5AAD53C();
    v9 = (_QWORD *)sub_1D5873060(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v11 = v9[2];
    v10 = v9[3];
    if (v11 >= v10 >> 1)
      v9 = (_QWORD *)sub_1D5873060(v10 > 1, v11 + 1, 1, v9);
    v9[2] = v11 + 1;
    (*(void (**)(unint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5 - 352) + 32))((unint64_t)v9+ ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 352) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 352) + 80))+ *(_QWORD *)(*(_QWORD *)(v5 - 352) + 72) * v11, v3, *(_QWORD *)(v5 - 344));
    *(_QWORD *)(v5 - 296) = v9;
    v12 = *(int **)(v5 - 72);
    v13 = v4 + v12[5];
    v14 = *(_OWORD *)(v13 + 48);
    *(_OWORD *)(v5 - 256) = *(_OWORD *)(v13 + 32);
    *(_OWORD *)(v5 - 240) = v14;
    v15 = v5 - 288;
    *(_QWORD *)(v15 + 127) = *(_QWORD *)(v13 + 127);
    v16 = *(_OWORD *)(v13 + 112);
    *(_OWORD *)(v5 - 192) = *(_OWORD *)(v13 + 96);
    *(_OWORD *)(v5 - 176) = v16;
    v17 = *(_OWORD *)(v13 + 80);
    *(_OWORD *)(v5 - 224) = *(_OWORD *)(v13 + 64);
    *(_OWORD *)(v5 - 208) = v17;
    v18 = *(_OWORD *)v13;
    *(_OWORD *)(v5 - 272) = *(_OWORD *)(v13 + 16);
    *(_OWORD *)(v5 - 288) = v18;
    v19 = v4 + v12[6];
    *(_QWORD *)(v15 + 176) = *(_QWORD *)(v19 + 32);
    v20 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)(v15 + 144) = *(_OWORD *)v19;
    *(_OWORD *)(v15 + 160) = v20;
    v21 = (uint64_t *)(v4 + v12[8]);
    v22 = *v21;
    v23 = v21[1];
    v24 = v21[2];
    sub_1D57D41B8(v5 - 288);
    sub_1D59B3C2C(v5 - 144);
    sub_1D57D4528(v22, v23, v24);
    v25 = sub_1D59B30AC(v5 - 288, v5 - 144, v22, v23, v24, *(_QWORD *)(v5 - 336), *(_QWORD *)(v5 - 328));
    sub_1D57DAEDC(v22, v23, v24);
    sub_1D59B3C60(v5 - 144);
    sub_1D57D5AE0(v5 - 288);
    sub_1D5820354(v25);
    *(_BYTE *)(v5 - 300) = *(_DWORD *)(v5 - 412);
    v26 = sub_1D59D3420(*(_QWORD *)(v5 - 376), *(_QWORD *)(v5 - 400), *(_QWORD *)(v5 - 368), *(_QWORD *)(v5 - 408) | ((unint64_t)*(unsigned __int8 *)(v5 - 300) << 32));
    swift_bridgeObjectRelease();
    sub_1D5820354(v26);
    v27 = sub_1D5A7E0FC();
    sub_1D5820354((size_t)v27);
    sub_1D57E69C4(*(_QWORD *)(v5 - 392), *(_QWORD *)(v5 - 384));
    sub_1D5820E20(v4, type metadata accessor for MediaEngageCompleteEvent.Model);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
    JUMPOUT(0x1D5A7E4A8);
  }
  return ((uint64_t (*)(uint64_t))((char *)&loc_1D5A7E6E8
                                          + 4 * byte_1D5AE76B6[*(_QWORD *)(v5 - 376)]))(v7);
}

void sub_1D5A7EA00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFF52588)
  {
    sub_1D5A7EA54();
    v0 = sub_1D5AAEACC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFF52588);
  }
}

void sub_1D5A7EA54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9C7080)
  {
    type metadata accessor for MediaEngageCompleteEvent(255);
    sub_1D57A8DE4(&qword_1ED9CB328, type metadata accessor for MediaEngageCompleteEvent, (uint64_t)&protocol conformance descriptor for MediaEngageCompleteEvent);
    v0 = sub_1D5AADAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9C7080);
  }
}

uint64_t DynamicEndpoint.__allocating_init(appConfigurationManager:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = FCDefaultsReadEndpointEnvironment();
  return v2;
}

uint64_t DynamicEndpoint.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t DynamicEndpoint.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

void DynamicEndpoint.url.getter()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(objc_msgSend(*(id *)(v0 + 16), sel_appConfiguration), sel_appAnalyticsEndpointUrlForEnvironment_, *(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease();
  sub_1D5AAD650();

}

uint64_t DynamicEndpoint.sharedContainerIdentifier.getter()
{
  return 0;
}

uint64_t sub_1D5A7ECEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D57CC7FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t method lookup function for DynamicEndpoint()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DynamicEndpoint.__allocating_init(appConfigurationManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t MediaEngagementData.mediaTimePlayed.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t MediaEngagementData.mediaTimePlayed.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*MediaEngagementData.mediaTimePlayed.modify())()
{
  return nullsub_1;
}

void MediaEngagementData.mediaUserAction.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

_BYTE *MediaEngagementData.mediaUserAction.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = *result;
  return result;
}

uint64_t (*MediaEngagementData.mediaUserAction.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngagementData.position.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 12);
}

uint64_t MediaEngagementData.position.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 12) = result;
  return result;
}

uint64_t (*MediaEngagementData.position.modify())()
{
  return nullsub_1;
}

void MediaEngagementData.mediaPlayMethod.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *MediaEngagementData.mediaPlayMethod.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*MediaEngagementData.mediaPlayMethod.modify())()
{
  return nullsub_1;
}

void MediaEngagementData.mediaPlayLocation.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

_BYTE *MediaEngagementData.mediaPlayLocation.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = *result;
  return result;
}

uint64_t (*MediaEngagementData.mediaPlayLocation.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngagementData.init(mediaTimePlayed:mediaUserAction:position:mediaPlayMethod:mediaPlayLocation:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, int a3@<W2>, char *a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  char v6;
  char v7;
  char v8;

  v6 = *a2;
  v7 = *a4;
  v8 = *a5;
  *(_QWORD *)a6 = result;
  *(_BYTE *)(a6 + 8) = v6;
  *(_DWORD *)(a6 + 12) = a3;
  *(_BYTE *)(a6 + 16) = v7;
  *(_BYTE *)(a6 + 17) = v8;
  return result;
}

uint64_t sub_1D5A7EE20()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A7EE5C + 4 * byte_1D5AE7750[*v0]))(0x6D6954616964656DLL, 0xEF646579616C5065);
}

uint64_t sub_1D5A7EE5C()
{
  return 0x657355616964656DLL;
}

uint64_t sub_1D5A7EE80()
{
  return 0x6E6F697469736F70;
}

uint64_t sub_1D5A7EE98()
{
  return 0x616C50616964656DLL;
}

unint64_t sub_1D5A7EEBC()
{
  return 0xD000000000000011;
}

uint64_t sub_1D5A7EED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A7F680(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A7EEFC()
{
  sub_1D5A7F148();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A7EF24()
{
  sub_1D5A7F148();
  return sub_1D5AAEEE0();
}

uint64_t MediaEngagementData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  char v11;
  char v12;
  int v14;
  int v15;
  int v16;
  int v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  sub_1D5A7F3B8(0, &qword_1EFF52598, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  v9 = *(unsigned __int8 *)(v1 + 8);
  v16 = *(_DWORD *)(v1 + 12);
  v17 = v9;
  v10 = *(unsigned __int8 *)(v1 + 16);
  v14 = *(unsigned __int8 *)(v1 + 17);
  v15 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A7F148();
  sub_1D5AAEEC8();
  v25 = 0;
  sub_1D5AAED84();
  if (!v2)
  {
    v11 = v15;
    v12 = v14;
    v24 = v17;
    v23 = 1;
    sub_1D57F5184();
    sub_1D5AAED6C();
    v22 = 2;
    sub_1D5AAED78();
    v21 = v11;
    v20 = 3;
    sub_1D57F51C8();
    sub_1D5AAED18();
    v19 = v12;
    v18 = 4;
    sub_1D59AFCAC();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D5A7F148()
{
  unint64_t result;

  result = qword_1EFF525A0;
  if (!qword_1EFF525A0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE78E8, &type metadata for MediaEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF525A0);
  }
  return result;
}

uint64_t MediaEngagementData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  char v13;
  uint64_t v14;
  int v15;
  int v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  unsigned __int8 v23;
  char v24;

  sub_1D5A7F3B8(0, &qword_1EFF525A8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A7F148();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v24 = 0;
    v10 = sub_1D5AAECE8();
    v22 = 1;
    sub_1D57F5580();
    sub_1D5AAECD0();
    v11 = v23;
    v21 = 2;
    v15 = sub_1D5AAECDC();
    v16 = v11;
    v19 = 3;
    sub_1D57F55C4();
    sub_1D5AAEC7C();
    LOBYTE(v11) = v20;
    v17 = 4;
    sub_1D59AFEB8();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v13 = v18;
    *(_QWORD *)a2 = v10;
    *(_BYTE *)(a2 + 8) = v16;
    *(_DWORD *)(a2 + 12) = v15;
    *(_BYTE *)(a2 + 16) = v11;
    *(_BYTE *)(a2 + 17) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A7F3B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A7F148();
    v7 = a3(a1, &type metadata for MediaEngagementData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A7F41C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaEngagementData.init(from:)(a1, a2);
}

uint64_t sub_1D5A7F430(_QWORD *a1)
{
  return MediaEngagementData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for MediaEngagementData(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 18))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 17);
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaEngagementData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 18) = 0;
    if (a2)
      *(_BYTE *)(result + 17) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaEngagementData()
{
  return &type metadata for MediaEngagementData;
}

uint64_t storeEnumTagSinglePayload for MediaEngagementData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D5A7F528 + 4 * byte_1D5AE775A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5A7F55C + 4 * byte_1D5AE7755[v4]))();
}

uint64_t sub_1D5A7F55C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A7F564(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A7F56CLL);
  return result;
}

uint64_t sub_1D5A7F578(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A7F580);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5A7F584(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A7F58C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaEngagementData.CodingKeys()
{
  return &type metadata for MediaEngagementData.CodingKeys;
}

unint64_t sub_1D5A7F5AC()
{
  unint64_t result;

  result = qword_1EFF525B0;
  if (!qword_1EFF525B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE78C0, &type metadata for MediaEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF525B0);
  }
  return result;
}

unint64_t sub_1D5A7F5F4()
{
  unint64_t result;

  result = qword_1EFF525B8;
  if (!qword_1EFF525B8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE7830, &type metadata for MediaEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF525B8);
  }
  return result;
}

unint64_t sub_1D5A7F63C()
{
  unint64_t result;

  result = qword_1EFF525C0;
  if (!qword_1EFF525C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE7858, &type metadata for MediaEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF525C0);
  }
  return result;
}

uint64_t sub_1D5A7F680(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D6954616964656DLL && a2 == 0xEF646579616C5065;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657355616964656DLL && a2 == 0xEF6E6F6974634172 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x616C50616964656DLL && a2 == 0xEF646F6874654D79 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AF1160)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t UserEventHistoryAggregateStoreCountsData.init(tagAggregatesCount:channelTopicAggregatesCount:groupCount:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  *(_QWORD *)a7 = result;
  *(_BYTE *)(a7 + 8) = a2 & 1;
  *(_QWORD *)(a7 + 16) = a3;
  *(_BYTE *)(a7 + 24) = a4 & 1;
  *(_QWORD *)(a7 + 32) = a5;
  *(_BYTE *)(a7 + 40) = a6 & 1;
  return result;
}

uint64_t UserEventHistoryAggregateStoreCountsData.tagAggregatesCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t UserEventHistoryAggregateStoreCountsData.tagAggregatesCount.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*UserEventHistoryAggregateStoreCountsData.tagAggregatesCount.modify())()
{
  return nullsub_1;
}

uint64_t UserEventHistoryAggregateStoreCountsData.channelTopicAggregatesCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t UserEventHistoryAggregateStoreCountsData.channelTopicAggregatesCount.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*UserEventHistoryAggregateStoreCountsData.channelTopicAggregatesCount.modify())()
{
  return nullsub_1;
}

uint64_t UserEventHistoryAggregateStoreCountsData.groupCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t UserEventHistoryAggregateStoreCountsData.groupCount.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = result;
  *(_BYTE *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t (*UserEventHistoryAggregateStoreCountsData.groupCount.modify())()
{
  return nullsub_1;
}

unint64_t sub_1D5A7F9B0()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD00000000000001BLL;
  if (*v0 != 1)
    v1 = 0x756F4370756F7267;
  if (*v0)
    return v1;
  else
    return 0xD000000000000012;
}

uint64_t sub_1D5A7FA14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A80090(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A7FA38()
{
  sub_1D5A7FC04();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A7FA60()
{
  sub_1D5A7FC04();
  return sub_1D5AAEEE0();
}

uint64_t UserEventHistoryAggregateStoreCountsData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD v11[2];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char v16;
  char v17;
  char v18;

  sub_1D5A7FDF8(0, &qword_1ED9CF030, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v15 = *(unsigned __int8 *)(v1 + 24);
  v12 = *(_QWORD *)(v1 + 32);
  v13 = v8;
  v11[1] = *(unsigned __int8 *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A7FC04();
  sub_1D5AAEEC8();
  v18 = 0;
  v9 = v14;
  sub_1D5AAED30();
  if (!v9)
  {
    v17 = 1;
    sub_1D5AAED30();
    v16 = 2;
    sub_1D5AAED30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5A7FC04()
{
  unint64_t result;

  result = qword_1ED9CEE78;
  if (!qword_1ED9CEE78)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE7ADC, &type metadata for UserEventHistoryAggregateStoreCountsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEE78);
  }
  return result;
}

uint64_t UserEventHistoryAggregateStoreCountsData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  int v14;
  uint64_t v16;
  char *v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  char v23;
  char v24;
  char v25;

  sub_1D5A7FDF8(0, &qword_1ED9CEFA0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A7FC04();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v25 = 0;
    v10 = sub_1D5AAEC94();
    v12 = v11;
    v24 = 1;
    v13 = sub_1D5AAEC94();
    v22 = v14;
    v21 = v13;
    v23 = 2;
    v16 = sub_1D5AAEC94();
    v17 = v9;
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
    *(_QWORD *)a2 = v10;
    *(_BYTE *)(a2 + 8) = v12 & 1;
    *(_QWORD *)(a2 + 16) = v21;
    *(_BYTE *)(a2 + 24) = v22 & 1;
    *(_QWORD *)(a2 + 32) = v16;
    *(_BYTE *)(a2 + 40) = v19 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A7FDF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A7FC04();
    v7 = a3(a1, &type metadata for UserEventHistoryAggregateStoreCountsData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A7FE5C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UserEventHistoryAggregateStoreCountsData.init(from:)(a1, a2);
}

uint64_t sub_1D5A7FE70(_QWORD *a1)
{
  return UserEventHistoryAggregateStoreCountsData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for UserEventHistoryAggregateStoreCountsData(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for UserEventHistoryAggregateStoreCountsData(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 41) = v3;
  return result;
}

ValueMetadata *type metadata accessor for UserEventHistoryAggregateStoreCountsData()
{
  return &type metadata for UserEventHistoryAggregateStoreCountsData;
}

uint64_t storeEnumTagSinglePayload for UserEventHistoryAggregateStoreCountsData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5A7FF38 + 4 * byte_1D5AE7945[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5A7FF6C + 4 * byte_1D5AE7940[v4]))();
}

uint64_t sub_1D5A7FF6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A7FF74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A7FF7CLL);
  return result;
}

uint64_t sub_1D5A7FF88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A7FF90);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5A7FF94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A7FF9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserEventHistoryAggregateStoreCountsData.CodingKeys()
{
  return &type metadata for UserEventHistoryAggregateStoreCountsData.CodingKeys;
}

unint64_t sub_1D5A7FFBC()
{
  unint64_t result;

  result = qword_1EFF525C8;
  if (!qword_1EFF525C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE7AB4, &type metadata for UserEventHistoryAggregateStoreCountsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF525C8);
  }
  return result;
}

unint64_t sub_1D5A80004()
{
  unint64_t result;

  result = qword_1ED9CEE88;
  if (!qword_1ED9CEE88)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE7A24, &type metadata for UserEventHistoryAggregateStoreCountsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEE88);
  }
  return result;
}

unint64_t sub_1D5A8004C()
{
  unint64_t result;

  result = qword_1ED9CEE80;
  if (!qword_1ED9CEE80)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE7A4C, &type metadata for UserEventHistoryAggregateStoreCountsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEE80);
  }
  return result;
}

uint64_t sub_1D5A80090(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AF2AF0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001D5AF2B10 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x756F4370756F7267 && a2 == 0xEA0000000000746ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

NewsAnalytics::DisplayModeData_optional __swiftcall DisplayModeData.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::DisplayModeData_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t DisplayModeData.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A80270 + 4 * byte_1D5AE7B2C[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5A80270()
{
  return 0x6F775479426F7774;
}

uint64_t sub_1D5A80288()
{
  return 0x756F4679426F7774;
}

uint64_t sub_1D5A802CC()
{
  return 0x6F77547942656E6FLL;
}

void sub_1D5A802E4(char *a1)
{
  sub_1D5A3C0C8(*a1);
}

unint64_t sub_1D5A802F4()
{
  unint64_t result;

  result = qword_1EFF525D0;
  if (!qword_1EFF525D0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DisplayModeData, &type metadata for DisplayModeData);
    atomic_store(result, (unint64_t *)&qword_1EFF525D0);
  }
  return result;
}

void sub_1D5A80338()
{
  char *v0;

  sub_1D5A81590(*v0);
}

void sub_1D5A80340()
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A8037C()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5A803FC(uint64_t a1)
{
  char *v1;

  sub_1D5AA9118(a1, *v1);
}

NewsAnalytics::DisplayModeData_optional sub_1D5A80404(Swift::String *a1)
{
  return DisplayModeData.init(rawValue:)(*a1);
}

uint64_t sub_1D5A80410()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D5A80440 + 4 * byte_1D5AE7B38[*v0]))();
}

void sub_1D5A80440(_QWORD *a1@<X8>)
{
  *a1 = 0x6F775479426F7774;
  a1[1] = 0xE800000000000000;
}

void sub_1D5A8045C(_QWORD *a1@<X8>)
{
  *a1 = 0x756F4679426F7774;
  a1[1] = 0xE900000000000072;
}

void sub_1D5A804A8(_QWORD *a1@<X8>)
{
  *a1 = 0x6F77547942656E6FLL;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1D5A804C4()
{
  sub_1D5A80638();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A80520()
{
  sub_1D5A80638();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for DisplayModeData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D5A805B8 + 4 * byte_1D5AE7B43[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D5A805EC + 4 * byte_1D5AE7B3E[v4]))();
}

uint64_t sub_1D5A805EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A805F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A805FCLL);
  return result;
}

uint64_t sub_1D5A80608(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A80610);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D5A80614(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A8061C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DisplayModeData()
{
  return &type metadata for DisplayModeData;
}

unint64_t sub_1D5A80638()
{
  unint64_t result;

  result = qword_1ED9D14B0;
  if (!qword_1ED9D14B0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for DisplayModeData, &type metadata for DisplayModeData);
    atomic_store(result, (unint64_t *)&qword_1ED9D14B0);
  }
  return result;
}

void sub_1D5A8067C(char a1)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5A806D8()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A80750(char a1)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5A807A0()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A80858(char a1)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5A808A8()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5A80950()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A809FC(char a1)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5A80A4C()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A80AF8(char a1)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5A80B48()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A80BBC(char a1)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5A80C04()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A80CAC(char a1)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5A80CF4()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A80D90(char a1)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5A80DEC()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A80EA4(char a1)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5A80EF4()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A80F64(char a1)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5A80FB4()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A81048(char a1)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5A81098()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A8114C(char a1)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5A811A4()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A8121C(char a1)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5A81268()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A812F4(char a1)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5A81344()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A813C4(char a1)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5A81414()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A8149C(char a1)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5A814EC()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A81590(char a1)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5A815E0()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5A81674(char a1)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5A816C4()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::AdJournalEntryStatus_optional __swiftcall AdJournalEntryStatus.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::AdJournalEntryStatus_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AdJournalEntryStatus.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A817E0 + 4 * byte_1D5AE7CD0[*v0]))(0x64657461657263, 0xE700000000000000);
}

uint64_t sub_1D5A817E0()
{
  return 0x64656C696166;
}

uint64_t sub_1D5A817F4()
{
  return 0x676E69646E6570;
}

uint64_t sub_1D5A81808()
{
  return 0x6564726163736964;
}

void sub_1D5A8184C(char *a1)
{
  sub_1D5A39760(*a1);
}

unint64_t sub_1D5A8185C()
{
  unint64_t result;

  result = qword_1EFF525D8;
  if (!qword_1EFF525D8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdJournalEntryStatus, &type metadata for AdJournalEntryStatus);
    atomic_store(result, (unint64_t *)&qword_1EFF525D8);
  }
  return result;
}

void sub_1D5A818A0()
{
  char *v0;

  sub_1D5A81674(*v0);
}

void sub_1D5A818A8()
{
  __asm { BR              X10 }
}

uint64_t sub_1D5A818E4()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5A81964(uint64_t a1)
{
  char *v1;

  sub_1D5AA9600(a1, *v1);
}

NewsAnalytics::AdJournalEntryStatus_optional sub_1D5A8196C(Swift::String *a1)
{
  return AdJournalEntryStatus.init(rawValue:)(*a1);
}

uint64_t sub_1D5A81978()
{
  sub_1D57A152C();
  return sub_1D5AAE928();
}

uint64_t storeEnumTagSinglePayload for AdJournalEntryStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D5A81A20 + 4 * byte_1D5AE7CE7[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D5A81A54 + 4 * byte_1D5AE7CE2[v4]))();
}

uint64_t sub_1D5A81A54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A81A5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A81A64);
  return result;
}

uint64_t sub_1D5A81A70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A81A78);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D5A81A7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A81A84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A81A90(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CCB70, MEMORY[0x1E0CF8078]);
}

uint64_t static ArticleScrollEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CCE30, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCB70, a1);
}

uint64_t sub_1D5A81AD0(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CCE38, MEMORY[0x1E0CF8380]);
}

uint64_t static ArticleScrollEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CD398, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCE38, a1);
}

uint64_t ArticleScrollEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t ArticleScrollEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ArticleScrollEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScrollEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for ArticleScrollEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for ArticleScrollEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C9838);
}

uint64_t ArticleScrollEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.timedData.modify())(_QWORD)
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleScrollEvent.articleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.articleData.modify())(_QWORD)
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleScrollEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.channelData.modify())(_QWORD)
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleScrollEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleScrollEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.groupData.modify())(_QWORD)
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleScrollEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.scrollStartData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C7188, (void (*)(void))sub_1D58C00A8, (void (*)(void))sub_1D58C00F0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleScrollEvent.scrollStartData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C7188, (void (*)(void))sub_1D58C00A8, (void (*)(void))sub_1D58C00F0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.scrollStartData.modify())(_QWORD)
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.scrollEndData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7158, (void (*)(void))sub_1D5979ECC, (void (*)(void))sub_1D5979F14);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleScrollEvent.scrollEndData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7158, (void (*)(void))sub_1D5979ECC, (void (*)(void))sub_1D5979F14);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.scrollEndData.modify())(_QWORD)
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleScrollEvent.articleScienceData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.articleScienceData.modify())(_QWORD)
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleScrollEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.userChannelContextData.modify())(_QWORD)
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 60);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleScrollEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 60);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleScrollEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.issueData.modify())(_QWORD)
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.issueViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleScrollEvent.issueViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.issueViewData.modify())(_QWORD)
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ArticleScrollEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v12, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C7188, (void (*)(void))sub_1D58C00A8, (void (*)(void))sub_1D58C00F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C7158, (void (*)(void))sub_1D5979ECC, (void (*)(void))sub_1D5979F14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v12, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v2, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v2, v27);
  v28 = a1 + v4[16];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v12, v29);
  v30 = a1 + v4[17];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v30, v12, v31);
}

uint64_t ArticleScrollEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ArticleScrollEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for ArticleScrollEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for ArticleScrollEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C9778);
}

uint64_t ArticleScrollEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 24);
  v4 = *(_OWORD *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 112);
  v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 48);
  v17 = *(_OWORD *)(v3 + 32);
  v8 = v17;
  v18 = v7;
  v9 = *(_OWORD *)(v3 + 48);
  v10 = *(_OWORD *)(v3 + 80);
  v19 = *(_OWORD *)(v3 + 64);
  v11 = v19;
  v20 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v13 = v16[0];
  v16[1] = v12;
  v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)((char *)v22 + 15) = *(_QWORD *)(v3 + 127);
  *(_QWORD *)(a1 + 127) = *(_QWORD *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1D57D41B8((uint64_t)v16);
}

uint64_t ArticleScrollEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleScrollEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

_QWORD *ArticleScrollEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for ArticleScrollEvent.Model(0);
  sub_1D57E4810(v1 + *(int *)(v3 + 36), (uint64_t)v5, (unint64_t *)&qword_1ED9CEEE0);
  sub_1D57E4810((uint64_t)v5, a1, (unint64_t *)&qword_1ED9CEEE0);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t ArticleScrollEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 40));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

float ArticleScrollEvent.Model.scrollStartData.getter@<S0>(float *a1@<X8>)
{
  uint64_t v1;
  float result;

  result = *(float *)(v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 44));
  *a1 = result;
  return result;
}

double ArticleScrollEvent.Model.scrollEndData.getter@<D0>(double *a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 48));
  *a1 = result;
  return result;
}

uint64_t ArticleScrollEvent.Model.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[280];

  v3 = type metadata accessor for ArticleScrollEvent.Model(0);
  sub_1D57E4810(v1 + *(int *)(v3 + 52), (uint64_t)v5, &qword_1ED9CE428);
  sub_1D57E4810((uint64_t)v5, a1, &qword_1ED9CE428);
  return sub_1D57D42AC((uint64_t)v5);
}

uint64_t ArticleScrollEvent.Model.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = type metadata accessor for ArticleScrollEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 56));
  v5 = *v4;
  v6 = v4[1];
  LOWORD(v4) = *((_WORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_BYTE *)(a1 + 1) = v6;
  *(_WORD *)(a1 + 2) = (_WORD)v4;
  return result;
}

uint64_t ArticleScrollEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 60));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleScrollEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 64));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1D57E8FE4(v4, v5);
}

uint64_t ArticleScrollEvent.Model.issueViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 68));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

__n128 ArticleScrollEvent.Model.init(eventData:timedData:articleData:channelData:feedData:groupData:viewData:scrollStartData:scrollEndData:articleScienceData:userChannelContextData:userBundleSubscriptionContextData:issueData:issueViewData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t *a4@<X3>, __int128 *a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, int *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, uint64_t a11, uint64_t a12, char *a13, __n128 *a14, uint64_t *a15)
{
  int v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 *v35;
  __n128 result;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  __int16 v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  __n128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  _BYTE v67[23];
  _BYTE v68[136];
  _BYTE v69[288];

  v66 = a3[6];
  *(_OWORD *)v67 = a3[7];
  *(_QWORD *)&v67[15] = *(_QWORD *)((char *)a3 + 127);
  v62 = a3[2];
  v63 = a3[3];
  v64 = a3[4];
  v65 = a3[5];
  v60 = *a3;
  v61 = a3[1];
  v42 = a4[1];
  v43 = *a4;
  v40 = *((_BYTE *)a4 + 17);
  v41 = *((_BYTE *)a4 + 16);
  v38 = a4[4];
  v39 = a4[3];
  v46 = *a5;
  v45 = *((_QWORD *)a5 + 2);
  sub_1D57E4810(a6, (uint64_t)v68, (unint64_t *)&qword_1ED9CEEE0);
  v47 = a7[1];
  v48 = *a7;
  LOWORD(a7) = *((_WORD *)a7 + 8);
  v19 = *a8;
  sub_1D57E4810(a11, (uint64_t)v69, &qword_1ED9CE428);
  LOBYTE(a8) = *(_BYTE *)a12;
  v49 = *(_WORD *)(a12 + 2);
  v50 = *(_BYTE *)(a12 + 1);
  v58 = *a13;
  v56 = *((_QWORD *)a13 + 2);
  v57 = *((_QWORD *)a13 + 1);
  v54 = a13[25];
  v55 = a13[24];
  v52 = *((_QWORD *)a13 + 5);
  v53 = *((_QWORD *)a13 + 4);
  v51 = a13[48];
  v59 = *a14;
  v21 = a14[1].n128_u64[0];
  v20 = a14[1].n128_u64[1];
  v23 = *a15;
  v22 = a15[1];
  v24 = sub_1D5AADF98();
  v25 = *a10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a9, a1, v24);
  v26 = (int *)type metadata accessor for ArticleScrollEvent.Model(0);
  v27 = a9 + v26[5];
  v28 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v27, a2, v28);
  v29 = a9 + v26[6];
  *(_OWORD *)(v29 + 96) = v66;
  *(_OWORD *)(v29 + 112) = *(_OWORD *)v67;
  *(_QWORD *)(v29 + 127) = *(_QWORD *)&v67[15];
  *(_OWORD *)(v29 + 32) = v62;
  *(_OWORD *)(v29 + 48) = v63;
  *(_OWORD *)(v29 + 64) = v64;
  *(_OWORD *)(v29 + 80) = v65;
  *(_OWORD *)v29 = v60;
  *(_OWORD *)(v29 + 16) = v61;
  v30 = a9 + v26[7];
  *(_QWORD *)v30 = v43;
  *(_QWORD *)(v30 + 8) = v42;
  *(_BYTE *)(v30 + 16) = v41;
  *(_BYTE *)(v30 + 17) = v40;
  *(_QWORD *)(v30 + 24) = v39;
  *(_QWORD *)(v30 + 32) = v38;
  v31 = a9 + v26[8];
  *(_OWORD *)v31 = v46;
  *(_QWORD *)(v31 + 16) = v45;
  sub_1D57E4810((uint64_t)v68, a9 + v26[9], (unint64_t *)&qword_1ED9CEEE0);
  v32 = a9 + v26[10];
  *(_QWORD *)v32 = v48;
  *(_QWORD *)(v32 + 8) = v47;
  *(_WORD *)(v32 + 16) = (_WORD)a7;
  *(_DWORD *)(a9 + v26[11]) = v19;
  *(_QWORD *)(a9 + v26[12]) = v25;
  sub_1D57E4810((uint64_t)v69, a9 + v26[13], &qword_1ED9CE428);
  v33 = a9 + v26[14];
  *(_BYTE *)v33 = (_BYTE)a8;
  *(_BYTE *)(v33 + 1) = v50;
  *(_WORD *)(v33 + 2) = v49;
  v34 = a9 + v26[15];
  *(_BYTE *)v34 = v58;
  *(_QWORD *)(v34 + 8) = v57;
  *(_QWORD *)(v34 + 16) = v56;
  *(_BYTE *)(v34 + 24) = v55;
  *(_BYTE *)(v34 + 25) = v54;
  *(_QWORD *)(v34 + 32) = v53;
  *(_QWORD *)(v34 + 40) = v52;
  *(_BYTE *)(v34 + 48) = v51;
  v35 = (__n128 *)(a9 + v26[16]);
  result = v59;
  *v35 = v59;
  v35[1].n128_u64[0] = v21;
  v35[1].n128_u64[1] = v20;
  v37 = (_QWORD *)(a9 + v26[17]);
  *v37 = v23;
  v37[1] = v22;
  return result;
}

uint64_t sub_1D5A832B0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A832E8 + 4 * byte_1D5AE7E10[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5A832E8()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D5A832FC()
{
  return 0x44656C6369747261;
}

uint64_t sub_1D5A83330()
{
  return 0x6174614464656566;
}

uint64_t sub_1D5A8336C()
{
  return 0x74536C6C6F726373;
}

uint64_t sub_1D5A83390()
{
  return 0x6E456C6C6F726373;
}

unint64_t sub_1D5A833B4()
{
  return 0xD000000000000012;
}

unint64_t sub_1D5A833D0()
{
  return 0xD000000000000016;
}

uint64_t sub_1D5A83408()
{
  return 0x7461446575737369;
}

uint64_t sub_1D5A8341C()
{
  return 0x6569566575737369;
}

uint64_t sub_1D5A83448()
{
  unsigned __int8 *v0;

  return sub_1D5A832B0(*v0);
}

uint64_t sub_1D5A83450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A88B18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A83474()
{
  sub_1D5A83A88();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A8349C()
{
  sub_1D5A83A88();
  return sub_1D5AAEEE0();
}

uint64_t ArticleScrollEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char v29;
  char v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  _OWORD *v35;
  __int128 v36;
  uint64_t v38;
  char v39;
  _OWORD v40[3];
  char v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _OWORD v49[10];
  char v50;
  uint64_t v51;
  _BYTE v52[144];
  __int128 v53;
  uint64_t v54;
  char v55;

  v3 = v1;
  sub_1D5A845B0(0, &qword_1EFF525E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v38 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A83A88();
  sub_1D5AAEEC8();
  LOBYTE(v42) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for ArticleScrollEvent.Model(0);
    v55 = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = (__int128 *)(v3 + v10[6]);
    v12 = v11[7];
    v48 = v11[6];
    v49[0] = v12;
    *(_QWORD *)((char *)v49 + 15) = *(_QWORD *)((char *)v11 + 127);
    v13 = v11[3];
    v44 = v11[2];
    v45 = v13;
    v14 = v11[5];
    v46 = v11[4];
    v47 = v14;
    v15 = v11[1];
    v42 = *v11;
    v43 = v15;
    LOBYTE(v40[0]) = 2;
    sub_1D57CB940();
    sub_1D5AAED6C();
    v16 = (uint64_t *)(v3 + v10[7]);
    v17 = *v16;
    v18 = v16[1];
    v19 = *((_BYTE *)v16 + 16);
    v20 = *((_BYTE *)v16 + 17);
    v22 = v16[3];
    v21 = v16[4];
    *(_QWORD *)&v42 = v17;
    *((_QWORD *)&v42 + 1) = v18;
    LOBYTE(v43) = v19;
    BYTE1(v43) = v20;
    *((_QWORD *)&v43 + 1) = v22;
    *(_QWORD *)&v44 = v21;
    LOBYTE(v40[0]) = 3;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v23 = (__int128 *)(v3 + v10[8]);
    v24 = *((_QWORD *)v23 + 2);
    v53 = *v23;
    v54 = v24;
    v52[143] = 4;
    sub_1D57C65D4();
    sub_1D5AAED18();
    sub_1D57E4810(v3 + v10[9], (uint64_t)v52, (unint64_t *)&qword_1ED9CEEE0);
    sub_1D57E4810((uint64_t)v52, (uint64_t)&v42, (unint64_t *)&qword_1ED9CEEE0);
    LOBYTE(v40[0]) = 5;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v25 = (uint64_t *)(v3 + v10[10]);
    v26 = *v25;
    v27 = v25[1];
    LOWORD(v25) = *((_WORD *)v25 + 8);
    *(_QWORD *)&v42 = v26;
    *((_QWORD *)&v42 + 1) = v27;
    LOWORD(v43) = (_WORD)v25;
    LOBYTE(v40[0]) = 6;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    LODWORD(v42) = *(_DWORD *)(v3 + v10[11]);
    LOBYTE(v40[0]) = 7;
    sub_1D58C00F0();
    sub_1D5AAED6C();
    v51 = *(_QWORD *)(v3 + v10[12]);
    v50 = 8;
    sub_1D5979F14();
    sub_1D5AAED6C();
    sub_1D57E4810(v3 + v10[13], (uint64_t)&v42, &qword_1ED9CE428);
    sub_1D57E4810((uint64_t)&v42, (uint64_t)v40, &qword_1ED9CE428);
    v39 = 9;
    sub_1D57CB7A8();
    sub_1D5AAED18();
    v28 = (char *)(v3 + v10[14]);
    v29 = *v28;
    v30 = v28[1];
    LOWORD(v28) = *((_WORD *)v28 + 1);
    LOBYTE(v40[0]) = v29;
    BYTE1(v40[0]) = v30;
    WORD1(v40[0]) = (_WORD)v28;
    v39 = 10;
    sub_1D57C7B24();
    sub_1D5AAED6C();
    v31 = v3 + v10[15];
    v32 = *(_BYTE *)(v31 + 24);
    v33 = *(_BYTE *)(v31 + 25);
    v34 = *(_BYTE *)(v31 + 48);
    LOBYTE(v40[0]) = *(_BYTE *)v31;
    *(_OWORD *)((char *)v40 + 8) = *(_OWORD *)(v31 + 8);
    BYTE8(v40[1]) = v32;
    BYTE9(v40[1]) = v33;
    v40[2] = *(_OWORD *)(v31 + 32);
    v41 = v34;
    v39 = 11;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v35 = (_OWORD *)(v3 + v10[16]);
    v36 = v35[1];
    v40[0] = *v35;
    v40[1] = v36;
    v39 = 12;
    sub_1D57C5F1C();
    sub_1D5AAED18();
    v40[0] = *(_OWORD *)(v3 + v10[17]);
    v39 = 13;
    sub_1D57CAD6C();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A83A88()
{
  unint64_t result;

  result = qword_1ED9CFCA0;
  if (!qword_1ED9CFCA0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE817C, &type metadata for ArticleScrollEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CFCA0);
  }
  return result;
}

uint64_t ArticleScrollEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  int v22;
  int v23;
  int v24;
  int *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int *v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  __int16 v44;
  char *v45;
  uint64_t v46;
  char v47;
  __int16 v48;
  char *v49;
  uint64_t v50;
  char v51;
  char v52;
  char v53;
  char *v54;
  uint64_t v55;
  char *v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  char *v69;
  _OWORD v70[3];
  char v71;
  char v72;
  _BYTE v73[280];
  _BYTE v74[144];
  _BYTE v75[144];
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  _BYTE v83[23];
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  _OWORD v91[12];
  int *v92;

  v60 = a2;
  v65 = sub_1D5AADFB0();
  v63 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v4 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D5AADF98();
  v64 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A845B0(0, &qword_1ED9D0CE8, MEMORY[0x1E0DED048]);
  v66 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v60 - v10;
  v92 = (int *)type metadata accessor for ArticleScrollEvent.Model(0);
  MEMORY[0x1E0C80A78](v92);
  v69 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v67 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1D5A83A88();
  v61 = v11;
  v14 = v68;
  sub_1D5AAEEB0();
  v62 = v5;
  if (v14)
  {
    v68 = v14;
    LODWORD(v66) = 0;
    v15 = v69;
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
    v22 = 0;
    v23 = 0;
    v24 = 0;
    v25 = v92;
    if ((_DWORD)v66)
      goto LABEL_10;
LABEL_5:
    if (!v24)
      goto LABEL_11;
LABEL_6:
    sub_1D57E4810((uint64_t)&v15[v25[13]], (uint64_t)&v84, &qword_1ED9CE428);
    result = sub_1D57D5AB8((uint64_t)&v84);
    if ((v23 & 1) != 0)
      goto LABEL_12;
    goto LABEL_7;
  }
  LOBYTE(v84) = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v26 = v5;
  v27 = v69;
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v69, v7, v26);
  LOBYTE(v84) = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v28 = v65;
  sub_1D5AAECD0();
  v29 = v92;
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(&v27[v92[5]], v4, v28);
  v75[143] = 2;
  sub_1D57CB8FC();
  sub_1D5AAECD0();
  v30 = &v27[v29[6]];
  v31 = *(_OWORD *)v83;
  *((_OWORD *)v30 + 6) = v82;
  *((_OWORD *)v30 + 7) = v31;
  *(_QWORD *)(v30 + 127) = *(_QWORD *)&v83[15];
  v32 = v79;
  *((_OWORD *)v30 + 2) = v78;
  *((_OWORD *)v30 + 3) = v32;
  v33 = v81;
  *((_OWORD *)v30 + 4) = v80;
  *((_OWORD *)v30 + 5) = v33;
  v34 = v77;
  *(_OWORD *)v30 = v76;
  *((_OWORD *)v30 + 1) = v34;
  v73[0] = 3;
  sub_1D57CB874();
  sub_1D5AAECD0();
  v35 = *((_QWORD *)&v84 + 1);
  v36 = v85;
  v37 = BYTE1(v85);
  v38 = *((_QWORD *)&v85 + 1);
  v39 = v86;
  v40 = &v27[v29[7]];
  *(_QWORD *)v40 = v84;
  *((_QWORD *)v40 + 1) = v35;
  v40[16] = v36;
  v40[17] = v37;
  *((_QWORD *)v40 + 3) = v38;
  *((_QWORD *)v40 + 4) = v39;
  v73[0] = 4;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v41 = v85;
  v42 = &v27[v29[8]];
  *(_OWORD *)v42 = v84;
  *((_QWORD *)v42 + 2) = v41;
  v74[143] = 5;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  sub_1D57E4810((uint64_t)v75, (uint64_t)v74, (unint64_t *)&qword_1ED9CEEE0);
  sub_1D57E4810((uint64_t)v74, (uint64_t)&v27[v29[9]], (unint64_t *)&qword_1ED9CEEE0);
  v73[0] = 6;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v43 = *((_QWORD *)&v84 + 1);
  v44 = v85;
  v45 = &v27[v29[10]];
  *(_QWORD *)v45 = v84;
  *((_QWORD *)v45 + 1) = v43;
  *((_WORD *)v45 + 8) = v44;
  v73[0] = 7;
  sub_1D58C00A8();
  sub_1D5AAECD0();
  *(_DWORD *)&v27[v29[11]] = v84;
  v73[0] = 8;
  sub_1D5979ECC();
  sub_1D5AAECD0();
  *(_QWORD *)&v27[v92[12]] = v84;
  v73[279] = 9;
  sub_1D57CB764();
  sub_1D5AAEC7C();
  v68 = 0;
  sub_1D57E4810((uint64_t)&v84, (uint64_t)v73, &qword_1ED9CE428);
  sub_1D57E4810((uint64_t)v73, (uint64_t)&v69[v92[13]], &qword_1ED9CE428);
  v72 = 10;
  sub_1D57C7AE0();
  v46 = v68;
  sub_1D5AAECD0();
  v68 = v46;
  if (v46)
    goto LABEL_17;
  v47 = BYTE1(v70[0]);
  v48 = WORD1(v70[0]);
  v49 = &v69[v92[14]];
  *v49 = v70[0];
  v49[1] = v47;
  *((_WORD *)v49 + 1) = v48;
  v72 = 11;
  sub_1D57C6AF8();
  v50 = v68;
  sub_1D5AAECD0();
  v68 = v50;
  if (v50)
  {
LABEL_17:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v61, v66);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
    v23 = 0;
    v22 = 0;
  }
  else
  {
    v51 = BYTE8(v70[1]);
    v52 = BYTE9(v70[1]);
    v53 = v71;
    v54 = &v69[v92[15]];
    *v54 = v70[0];
    *(_OWORD *)(v54 + 8) = *(_OWORD *)((char *)v70 + 8);
    v54[24] = v51;
    v54[25] = v52;
    *((_OWORD *)v54 + 2) = v70[2];
    v54[48] = v53;
    v72 = 12;
    sub_1D57C5ED8();
    v55 = v68;
    sub_1D5AAEC7C();
    v68 = v55;
    if (v55)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v61, v66);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
      v22 = 0;
      v23 = 1;
    }
    else
    {
      v56 = &v69[v92[16]];
      v57 = v70[1];
      *(_OWORD *)v56 = v70[0];
      *((_OWORD *)v56 + 1) = v57;
      v72 = 13;
      sub_1D57CAD28();
      v58 = v68;
      sub_1D5AAEC7C();
      v68 = v58;
      if (!v58)
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v61, v66);
        v59 = (uint64_t)v69;
        *(_OWORD *)&v69[v92[17]] = v70[0];
        sub_1D5A8460C(v59, v60);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
        return sub_1D5A84650(v59);
      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v61, v66);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
      v23 = 1;
      v22 = 1;
    }
  }
  v15 = v69;
  (*(void (**)(char *, uint64_t))(v64 + 8))(v69, v62);
  (*(void (**)(char *, uint64_t))(v63 + 8))(&v15[v92[5]], v65);
  LODWORD(v66) = 1;
  v24 = 1;
  v17 = &v15[v92[6]];
  v18 = *((_OWORD *)v17 + 7);
  v90 = *((_OWORD *)v17 + 6);
  v91[0] = v18;
  *(_QWORD *)((char *)v91 + 15) = *(_QWORD *)(v17 + 127);
  v19 = *((_OWORD *)v17 + 3);
  v86 = *((_OWORD *)v17 + 2);
  v87 = v19;
  v20 = *((_OWORD *)v17 + 5);
  v88 = *((_OWORD *)v17 + 4);
  v89 = v20;
  v21 = *((_OWORD *)v17 + 1);
  v84 = *(_OWORD *)v17;
  v85 = v21;
  sub_1D57D5AE0((uint64_t)&v84);
  v25 = v92;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D57DAEDC(*(_QWORD *)&v15[v25[8]], *(_QWORD *)&v15[v25[8] + 8], *(_QWORD *)&v15[v25[8] + 16]);
  sub_1D57E4810((uint64_t)&v15[v25[9]], (uint64_t)&v84, (unint64_t *)&qword_1ED9CEEE0);
  result = (uint64_t)sub_1D57DE9C8(&v84, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DEA24);
  if ((v66 & 1) == 0)
    goto LABEL_5;
LABEL_10:
  result = swift_bridgeObjectRelease();
  if ((v24 & 1) != 0)
    goto LABEL_6;
LABEL_11:
  if (v23)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
      return result;
    return sub_1D57EA700(*(_QWORD *)&v15[v25[16]], *(_QWORD *)&v15[v25[16] + 8]);
  }
LABEL_7:
  if (!v22)
    return result;
  return sub_1D57EA700(*(_QWORD *)&v15[v25[16]], *(_QWORD *)&v15[v25[16] + 8]);
}

void sub_1D5A845B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A83A88();
    v7 = a3(a1, &type metadata for ArticleScrollEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A8460C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArticleScrollEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A84650(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArticleScrollEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A8468C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleScrollEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A846A0(_QWORD *a1)
{
  return ArticleScrollEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A846B4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CCE30, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCB70, a1);
}

uint64_t sub_1D5A846D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CD398, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCE38, a1);
}

uint64_t sub_1D5A846FC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  v13 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v13, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C7188, (void (*)(void))sub_1D58C00A8, (void (*)(void))sub_1D58C00F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C7158, (void (*)(void))sub_1D5979ECC, (void (*)(void))sub_1D5979F14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v13, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v4, v26);
  v27 = a2 + a1[15];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v4, v28);
  v29 = a2 + a1[16];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v13, v30);
  v31 = a2 + a1[17];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v31, v13, v32);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleScrollEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v60 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v60 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C7188, (void (*)(void))sub_1D58C00A8, (void (*)(void))sub_1D58C00F0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C7158, (void (*)(void))sub_1D5979ECC, (void (*)(void))sub_1D5979F14);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
    v56 = a3[17];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
  }
  return a1;
}

uint64_t destroy for ArticleScrollEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C7188, (void (*)(void))sub_1D58C00A8, (void (*)(void))sub_1D58C00F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C7158, (void (*)(void))sub_1D5979ECC, (void (*)(void))sub_1D5979F14);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  v29 = a1 + a2[17];
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
}

uint64_t initializeWithCopy for ArticleScrollEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7188, (void (*)(void))sub_1D58C00A8, (void (*)(void))sub_1D58C00F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7158, (void (*)(void))sub_1D5979ECC, (void (*)(void))sub_1D5979F14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
  return a1;
}

uint64_t assignWithCopy for ArticleScrollEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7188, (void (*)(void))sub_1D58C00A8, (void (*)(void))sub_1D58C00F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7158, (void (*)(void))sub_1D5979ECC, (void (*)(void))sub_1D5979F14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v56, v57, v58);
  return a1;
}

uint64_t initializeWithTake for ArticleScrollEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7188, (void (*)(void))sub_1D58C00A8, (void (*)(void))sub_1D58C00F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7158, (void (*)(void))sub_1D5979ECC, (void (*)(void))sub_1D5979F14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
  return a1;
}

uint64_t assignWithTake for ArticleScrollEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C7188, (void (*)(void))sub_1D58C00A8, (void (*)(void))sub_1D58C00F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7158, (void (*)(void))sub_1D5979ECC, (void (*)(void))sub_1D5979F14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleScrollEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A86318(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C7188, (void (*)(void))sub_1D58C00A8, (void (*)(void))sub_1D58C00F0);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7158, (void (*)(void))sub_1D5979ECC, (void (*)(void))sub_1D5979F14);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                          v12 = *(_QWORD *)(v24 - 8);
                          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                          {
                            v8 = v24;
                            v13 = a3[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                            v8 = v25;
                            v12 = *(_QWORD *)(v25 - 8);
                            v13 = a3[17];
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ArticleScrollEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A866C8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C7188, (void (*)(void))sub_1D58C00A8, (void (*)(void))sub_1D58C00F0);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7158, (void (*)(void))sub_1D5979ECC, (void (*)(void))sub_1D5979F14);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                          v14 = *(_QWORD *)(v26 - 8);
                          if (*(_DWORD *)(v14 + 84) == a3)
                          {
                            v10 = v26;
                            v15 = a4[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                            v10 = v27;
                            v14 = *(_QWORD *)(v27 - 8);
                            v15 = a4[17];
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5A86A74()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C70D8, (void (*)(void))sub_1D57CB8FC, (void (*)(void))sub_1D57CB940);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9C7188, (void (*)(void))sub_1D58C00A8, (void (*)(void))sub_1D58C00F0);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C7158, (void (*)(void))sub_1D5979ECC, (void (*)(void))sub_1D5979F14);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9C70F8, (void (*)(void))sub_1D57CB764, (void (*)(void))sub_1D57CB7A8);
                    if (v9 <= 0x3F)
                    {
                      sub_1D579E208(319, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
                      if (v10 <= 0x3F)
                      {
                        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                        if (v11 <= 0x3F)
                        {
                          sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
                          if (v12 <= 0x3F)
                          {
                            sub_1D579E208(319, &qword_1ED9C7150, (void (*)(void))sub_1D57CAD28, (void (*)(void))sub_1D57CAD6C);
                            if (v13 <= 0x3F)
                              swift_initStructMetadata();
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ArticleScrollEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  _QWORD *v78;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    v16 = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 3) = v16;
    v14[32] = v15[32];
    v17 = *((_QWORD *)v15 + 6);
    *((_QWORD *)v14 + 5) = *((_QWORD *)v15 + 5);
    *((_QWORD *)v14 + 6) = v17;
    v14[56] = v15[56];
    v14[57] = v15[57];
    v18 = *((_QWORD *)v15 + 9);
    *((_QWORD *)v14 + 8) = *((_QWORD *)v15 + 8);
    *((_QWORD *)v14 + 9) = v18;
    v14[80] = v15[80];
    *(_OWORD *)(v14 + 88) = *(_OWORD *)(v15 + 88);
    *((_QWORD *)v14 + 13) = *((_QWORD *)v15 + 13);
    v14[112] = v15[112];
    *((_QWORD *)v14 + 15) = *((_QWORD *)v15 + 15);
    *((_DWORD *)v14 + 32) = *((_DWORD *)v15 + 32);
    v14[132] = v15[132];
    *(_WORD *)(v14 + 133) = *(_WORD *)(v15 + 133);
    v19 = (char *)a1 + v13;
    v20 = (char *)a2 + v13;
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    *((_WORD *)v19 + 8) = *((_WORD *)v20 + 8);
    v22 = *((_QWORD *)v20 + 4);
    *((_QWORD *)v19 + 3) = *((_QWORD *)v20 + 3);
    *((_QWORD *)v19 + 4) = v22;
    v23 = a3[8];
    v24 = (char *)a1 + v23;
    v78 = a2;
    v25 = (char *)a2 + v23;
    v26 = *((_QWORD *)v25 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26 == 1)
    {
      *(_OWORD *)v24 = *(_OWORD *)v25;
      *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
    }
    else
    {
      *v24 = *v25;
      *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
      *((_QWORD *)v24 + 2) = v26;
      swift_bridgeObjectRetain();
    }
    v28 = a3[9];
    v29 = (char *)a1 + v28;
    v30 = (char *)v78 + v28;
    v31 = *((_QWORD *)v30 + 2);
    if (v31)
    {
      *(_WORD *)v29 = *(_WORD *)v30;
      *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
      *((_QWORD *)v29 + 2) = v31;
      *((_QWORD *)v29 + 3) = *((_QWORD *)v30 + 3);
      v32 = *((_QWORD *)v30 + 5);
      *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
      *((_QWORD *)v29 + 5) = v32;
      v33 = *((_QWORD *)v30 + 7);
      *((_QWORD *)v29 + 6) = *((_QWORD *)v30 + 6);
      *((_QWORD *)v29 + 7) = v33;
      v34 = *((_QWORD *)v30 + 9);
      *((_QWORD *)v29 + 8) = *((_QWORD *)v30 + 8);
      *((_QWORD *)v29 + 9) = v34;
      v29[80] = v30[80];
      v35 = *((_QWORD *)v30 + 12);
      *((_QWORD *)v29 + 11) = *((_QWORD *)v30 + 11);
      *((_QWORD *)v29 + 12) = v35;
      *((_QWORD *)v29 + 13) = *((_QWORD *)v30 + 13);
      v29[112] = v30[112];
      v36 = *((_QWORD *)v30 + 16);
      *((_QWORD *)v29 + 15) = *((_QWORD *)v30 + 15);
      *((_QWORD *)v29 + 16) = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v37 = *((_OWORD *)v30 + 7);
      *((_OWORD *)v29 + 6) = *((_OWORD *)v30 + 6);
      *((_OWORD *)v29 + 7) = v37;
      *((_QWORD *)v29 + 16) = *((_QWORD *)v30 + 16);
      v38 = *((_OWORD *)v30 + 3);
      *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
      *((_OWORD *)v29 + 3) = v38;
      v39 = *((_OWORD *)v30 + 5);
      *((_OWORD *)v29 + 4) = *((_OWORD *)v30 + 4);
      *((_OWORD *)v29 + 5) = v39;
      v40 = *((_OWORD *)v30 + 1);
      *(_OWORD *)v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v40;
    }
    v41 = a3[10];
    v42 = a3[11];
    v43 = (char *)a1 + v41;
    v44 = (char *)v78 + v41;
    v45 = *((_QWORD *)v44 + 1);
    *(_QWORD *)v43 = *(_QWORD *)v44;
    *((_QWORD *)v43 + 1) = v45;
    *((_WORD *)v43 + 8) = *((_WORD *)v44 + 8);
    *(_DWORD *)((char *)a1 + v42) = *(_DWORD *)((char *)v78 + v42);
    v46 = a3[13];
    *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)v78 + a3[12]);
    v47 = (char *)a1 + v46;
    v48 = (char *)v78 + v46;
    v49 = *((_OWORD *)v48 + 1);
    *(_OWORD *)v47 = *(_OWORD *)v48;
    *((_OWORD *)v47 + 1) = v49;
    v50 = *((_OWORD *)v48 + 3);
    *((_OWORD *)v47 + 2) = *((_OWORD *)v48 + 2);
    *((_OWORD *)v47 + 3) = v50;
    v51 = *((_OWORD *)v48 + 5);
    *((_OWORD *)v47 + 4) = *((_OWORD *)v48 + 4);
    *((_OWORD *)v47 + 5) = v51;
    *((_OWORD *)v47 + 6) = *((_OWORD *)v48 + 6);
    v53 = *((_QWORD *)v48 + 14);
    v52 = *((_QWORD *)v48 + 15);
    v47[128] = v48[128];
    *((_QWORD *)v47 + 14) = v53;
    *((_QWORD *)v47 + 15) = v52;
    v54 = *((_QWORD *)v48 + 17);
    v47[144] = v48[144];
    *((_QWORD *)v47 + 17) = v54;
    v55 = *((_QWORD *)v48 + 19);
    v47[160] = v48[160];
    *((_QWORD *)v47 + 19) = v55;
    v56 = *((_QWORD *)v48 + 21);
    v47[176] = v48[176];
    *((_QWORD *)v47 + 21) = v56;
    v57 = *((_QWORD *)v48 + 23);
    v47[192] = v48[192];
    *((_QWORD *)v47 + 23) = v57;
    v58 = *((_QWORD *)v48 + 25);
    v47[208] = v48[208];
    *((_QWORD *)v47 + 25) = v58;
    v59 = *((_QWORD *)v48 + 27);
    v47[224] = v48[224];
    *((_QWORD *)v47 + 27) = v59;
    v60 = *((_QWORD *)v48 + 29);
    v47[240] = v48[240];
    *((_QWORD *)v47 + 29) = v60;
    v61 = *((_QWORD *)v48 + 31);
    v47[256] = v48[256];
    *((_QWORD *)v47 + 31) = v61;
    v62 = *((_QWORD *)v48 + 33);
    v47[272] = v48[272];
    *((_QWORD *)v47 + 33) = v62;
    v63 = a3[15];
    *(_DWORD *)((char *)a1 + a3[14]) = *(_DWORD *)((char *)v78 + a3[14]);
    v64 = (char *)a1 + v63;
    v65 = (char *)v78 + v63;
    *v64 = *v65;
    v66 = *((_QWORD *)v65 + 2);
    *((_QWORD *)v64 + 1) = *((_QWORD *)v65 + 1);
    *((_QWORD *)v64 + 2) = v66;
    v64[24] = v65[24];
    v64[25] = v65[25];
    v67 = *((_QWORD *)v65 + 5);
    *((_QWORD *)v64 + 4) = *((_QWORD *)v65 + 4);
    *((_QWORD *)v64 + 5) = v67;
    v64[48] = v65[48];
    v68 = a3[16];
    v69 = (char *)a1 + v68;
    v70 = (char *)v78 + v68;
    v71 = *(_QWORD *)((char *)v78 + v68 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v71)
    {
      *(_QWORD *)v69 = *(_QWORD *)v70;
      *((_QWORD *)v69 + 1) = v71;
      *((_WORD *)v69 + 8) = *((_WORD *)v70 + 8);
      *((_QWORD *)v69 + 3) = *((_QWORD *)v70 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v72 = *((_OWORD *)v70 + 1);
      *(_OWORD *)v69 = *(_OWORD *)v70;
      *((_OWORD *)v69 + 1) = v72;
    }
    v73 = a3[17];
    v74 = (_QWORD *)((char *)a1 + v73);
    v75 = (_QWORD *)((char *)v78 + v73);
    v76 = v75[1];
    *v74 = *v75;
    v74[1] = v76;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ArticleScrollEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[8] + 16) != 1)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[9] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[16] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArticleScrollEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  int *v76;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v15;
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  v16 = *(_QWORD *)(v14 + 48);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v13 + 48) = v16;
  *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
  *(_BYTE *)(v13 + 57) = *(_BYTE *)(v14 + 57);
  v17 = *(_QWORD *)(v14 + 72);
  *(_QWORD *)(v13 + 64) = *(_QWORD *)(v14 + 64);
  *(_QWORD *)(v13 + 72) = v17;
  *(_BYTE *)(v13 + 80) = *(_BYTE *)(v14 + 80);
  *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
  *(_QWORD *)(v13 + 104) = *(_QWORD *)(v14 + 104);
  *(_BYTE *)(v13 + 112) = *(_BYTE *)(v14 + 112);
  *(_QWORD *)(v13 + 120) = *(_QWORD *)(v14 + 120);
  *(_DWORD *)(v13 + 128) = *(_DWORD *)(v14 + 128);
  *(_BYTE *)(v13 + 132) = *(_BYTE *)(v14 + 132);
  *(_WORD *)(v13 + 133) = *(_WORD *)(v14 + 133);
  v18 = a1 + v12;
  v19 = a2 + v12;
  v20 = *(_QWORD *)(v19 + 8);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(v18 + 8) = v20;
  *(_WORD *)(v18 + 16) = *(_WORD *)(v19 + 16);
  v21 = *(_QWORD *)(v19 + 32);
  *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
  *(_QWORD *)(v18 + 32) = v21;
  v76 = a3;
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_QWORD *)(a2 + v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25 == 1)
  {
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
  }
  else
  {
    *(_BYTE *)v23 = *(_BYTE *)v24;
    *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
    *(_QWORD *)(v23 + 16) = v25;
    swift_bridgeObjectRetain();
  }
  v26 = v76[9];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_QWORD *)(v28 + 16);
  if (v29)
  {
    *(_WORD *)v27 = *(_WORD *)v28;
    *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
    *(_QWORD *)(v27 + 16) = v29;
    *(_QWORD *)(v27 + 24) = *(_QWORD *)(v28 + 24);
    v30 = *(_QWORD *)(v28 + 40);
    *(_QWORD *)(v27 + 32) = *(_QWORD *)(v28 + 32);
    *(_QWORD *)(v27 + 40) = v30;
    v31 = *(_QWORD *)(v28 + 56);
    *(_QWORD *)(v27 + 48) = *(_QWORD *)(v28 + 48);
    *(_QWORD *)(v27 + 56) = v31;
    v32 = *(_QWORD *)(v28 + 72);
    *(_QWORD *)(v27 + 64) = *(_QWORD *)(v28 + 64);
    *(_QWORD *)(v27 + 72) = v32;
    *(_BYTE *)(v27 + 80) = *(_BYTE *)(v28 + 80);
    v33 = *(_QWORD *)(v28 + 96);
    *(_QWORD *)(v27 + 88) = *(_QWORD *)(v28 + 88);
    *(_QWORD *)(v27 + 96) = v33;
    *(_QWORD *)(v27 + 104) = *(_QWORD *)(v28 + 104);
    *(_BYTE *)(v27 + 112) = *(_BYTE *)(v28 + 112);
    v34 = *(_QWORD *)(v28 + 128);
    *(_QWORD *)(v27 + 120) = *(_QWORD *)(v28 + 120);
    *(_QWORD *)(v27 + 128) = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v35 = *(_OWORD *)(v28 + 112);
    *(_OWORD *)(v27 + 96) = *(_OWORD *)(v28 + 96);
    *(_OWORD *)(v27 + 112) = v35;
    *(_QWORD *)(v27 + 128) = *(_QWORD *)(v28 + 128);
    v36 = *(_OWORD *)(v28 + 48);
    *(_OWORD *)(v27 + 32) = *(_OWORD *)(v28 + 32);
    *(_OWORD *)(v27 + 48) = v36;
    v37 = *(_OWORD *)(v28 + 80);
    *(_OWORD *)(v27 + 64) = *(_OWORD *)(v28 + 64);
    *(_OWORD *)(v27 + 80) = v37;
    v38 = *(_OWORD *)(v28 + 16);
    *(_OWORD *)v27 = *(_OWORD *)v28;
    *(_OWORD *)(v27 + 16) = v38;
  }
  v39 = v76[10];
  v40 = v76[11];
  v41 = a1 + v39;
  v42 = a2 + v39;
  v43 = *(_QWORD *)(v42 + 8);
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *(_QWORD *)(v41 + 8) = v43;
  *(_WORD *)(v41 + 16) = *(_WORD *)(v42 + 16);
  *(_DWORD *)(a1 + v40) = *(_DWORD *)(a2 + v40);
  v44 = v76[13];
  *(_QWORD *)(a1 + v76[12]) = *(_QWORD *)(a2 + v76[12]);
  v45 = a1 + v44;
  v46 = a2 + v44;
  v47 = *(_OWORD *)(v46 + 16);
  *(_OWORD *)v45 = *(_OWORD *)v46;
  *(_OWORD *)(v45 + 16) = v47;
  v48 = *(_OWORD *)(v46 + 48);
  *(_OWORD *)(v45 + 32) = *(_OWORD *)(v46 + 32);
  *(_OWORD *)(v45 + 48) = v48;
  v49 = *(_OWORD *)(v46 + 80);
  *(_OWORD *)(v45 + 64) = *(_OWORD *)(v46 + 64);
  *(_OWORD *)(v45 + 80) = v49;
  *(_OWORD *)(v45 + 96) = *(_OWORD *)(v46 + 96);
  v51 = *(_QWORD *)(v46 + 112);
  v50 = *(_QWORD *)(v46 + 120);
  *(_BYTE *)(v45 + 128) = *(_BYTE *)(v46 + 128);
  *(_QWORD *)(v45 + 112) = v51;
  *(_QWORD *)(v45 + 120) = v50;
  v52 = *(_QWORD *)(v46 + 136);
  *(_BYTE *)(v45 + 144) = *(_BYTE *)(v46 + 144);
  *(_QWORD *)(v45 + 136) = v52;
  v53 = *(_QWORD *)(v46 + 152);
  *(_BYTE *)(v45 + 160) = *(_BYTE *)(v46 + 160);
  *(_QWORD *)(v45 + 152) = v53;
  v54 = *(_QWORD *)(v46 + 168);
  *(_BYTE *)(v45 + 176) = *(_BYTE *)(v46 + 176);
  *(_QWORD *)(v45 + 168) = v54;
  v55 = *(_QWORD *)(v46 + 184);
  *(_BYTE *)(v45 + 192) = *(_BYTE *)(v46 + 192);
  *(_QWORD *)(v45 + 184) = v55;
  v56 = *(_QWORD *)(v46 + 200);
  *(_BYTE *)(v45 + 208) = *(_BYTE *)(v46 + 208);
  *(_QWORD *)(v45 + 200) = v56;
  v57 = *(_QWORD *)(v46 + 216);
  *(_BYTE *)(v45 + 224) = *(_BYTE *)(v46 + 224);
  *(_QWORD *)(v45 + 216) = v57;
  v58 = *(_QWORD *)(v46 + 232);
  *(_BYTE *)(v45 + 240) = *(_BYTE *)(v46 + 240);
  *(_QWORD *)(v45 + 232) = v58;
  v59 = *(_QWORD *)(v46 + 248);
  *(_BYTE *)(v45 + 256) = *(_BYTE *)(v46 + 256);
  *(_QWORD *)(v45 + 248) = v59;
  v60 = *(_QWORD *)(v46 + 264);
  *(_BYTE *)(v45 + 272) = *(_BYTE *)(v46 + 272);
  *(_QWORD *)(v45 + 264) = v60;
  v61 = v76[15];
  *(_DWORD *)(a1 + v76[14]) = *(_DWORD *)(a2 + v76[14]);
  v62 = a1 + v61;
  v63 = a2 + v61;
  *(_BYTE *)v62 = *(_BYTE *)v63;
  v64 = *(_QWORD *)(v63 + 16);
  *(_QWORD *)(v62 + 8) = *(_QWORD *)(v63 + 8);
  *(_QWORD *)(v62 + 16) = v64;
  *(_BYTE *)(v62 + 24) = *(_BYTE *)(v63 + 24);
  *(_BYTE *)(v62 + 25) = *(_BYTE *)(v63 + 25);
  v65 = *(_QWORD *)(v63 + 40);
  *(_QWORD *)(v62 + 32) = *(_QWORD *)(v63 + 32);
  *(_QWORD *)(v62 + 40) = v65;
  *(_BYTE *)(v62 + 48) = *(_BYTE *)(v63 + 48);
  v66 = v76[16];
  v67 = a1 + v66;
  v68 = a2 + v66;
  v69 = *(_QWORD *)(a2 + v66 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v69)
  {
    *(_QWORD *)v67 = *(_QWORD *)v68;
    *(_QWORD *)(v67 + 8) = v69;
    *(_WORD *)(v67 + 16) = *(_WORD *)(v68 + 16);
    *(_QWORD *)(v67 + 24) = *(_QWORD *)(v68 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v70 = *(_OWORD *)(v68 + 16);
    *(_OWORD *)v67 = *(_OWORD *)v68;
    *(_OWORD *)(v67 + 16) = v70;
  }
  v71 = v76[17];
  v72 = (_QWORD *)(a1 + v71);
  v73 = (_QWORD *)(a2 + v71);
  v74 = v73[1];
  *v72 = *v73;
  v72[1] = v74;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArticleScrollEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _DWORD *v49;
  _DWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_DWORD *)(v12 + 4) = *(_DWORD *)(a2 + v11 + 4);
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(a2 + v11 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(a2 + v11 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  v14 = *(_QWORD *)(v13 + 48);
  *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
  *(_QWORD *)(v12 + 48) = v14;
  *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 72);
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  *(_QWORD *)(v12 + 72) = v15;
  *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
  *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
  *(_BYTE *)(v12 + 130) = *(_BYTE *)(v13 + 130);
  *(_BYTE *)(v12 + 131) = *(_BYTE *)(v13 + 131);
  *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
  *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
  *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(a2 + v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = (__int128 *)(a2 + v19);
  v22 = *(_QWORD *)(a1 + v19 + 16);
  v23 = *(_QWORD *)(a2 + v19 + 16);
  if (v22 == 1)
  {
    if (v23 == 1)
    {
      v24 = *v21;
      *(_QWORD *)(v20 + 16) = *((_QWORD *)v21 + 2);
      *(_OWORD *)v20 = v24;
    }
    else
    {
      *(_BYTE *)v20 = *(_BYTE *)v21;
      *(_QWORD *)(v20 + 8) = *((_QWORD *)v21 + 1);
      *(_QWORD *)(v20 + 16) = *((_QWORD *)v21 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v23 == 1)
  {
    sub_1D57D9100(v20);
    v25 = *((_QWORD *)v21 + 2);
    *(_OWORD *)v20 = *v21;
    *(_QWORD *)(v20 + 16) = v25;
  }
  else
  {
    *(_BYTE *)v20 = *(_BYTE *)v21;
    *(_QWORD *)(v20 + 8) = *((_QWORD *)v21 + 1);
    *(_QWORD *)(v20 + 16) = *((_QWORD *)v21 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v26 = a3[9];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_QWORD *)(a1 + v26 + 16);
  v30 = *(_QWORD *)(a2 + v26 + 16);
  if (v29)
  {
    if (v30)
    {
      *(_BYTE *)v27 = *(_BYTE *)v28;
      *(_BYTE *)(v27 + 1) = *(_BYTE *)(v28 + 1);
      *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
      *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v27 + 24) = *(_DWORD *)(v28 + 24);
      *(_DWORD *)(v27 + 28) = *(_DWORD *)(v28 + 28);
      *(_QWORD *)(v27 + 32) = *(_QWORD *)(v28 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v27 + 40) = *(_QWORD *)(v28 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v27 + 48) = *(_QWORD *)(v28 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v27 + 56) = *(_QWORD *)(v28 + 56);
      *(_QWORD *)(v27 + 64) = *(_QWORD *)(v28 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v27 + 72) = *(_QWORD *)(v28 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v27 + 80) = *(_BYTE *)(v28 + 80);
      *(_QWORD *)(v27 + 88) = *(_QWORD *)(v28 + 88);
      *(_QWORD *)(v27 + 96) = *(_QWORD *)(v28 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v31 = *(_QWORD *)(v28 + 104);
      *(_BYTE *)(v27 + 112) = *(_BYTE *)(v28 + 112);
      *(_QWORD *)(v27 + 104) = v31;
      *(_QWORD *)(v27 + 120) = *(_QWORD *)(v28 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v27 + 128) = *(_QWORD *)(v28 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v27);
      *(_OWORD *)v27 = *(_OWORD *)v28;
      v33 = *(_OWORD *)(v28 + 64);
      v35 = *(_OWORD *)(v28 + 16);
      v34 = *(_OWORD *)(v28 + 32);
      *(_OWORD *)(v27 + 48) = *(_OWORD *)(v28 + 48);
      *(_OWORD *)(v27 + 64) = v33;
      *(_OWORD *)(v27 + 16) = v35;
      *(_OWORD *)(v27 + 32) = v34;
      v37 = *(_OWORD *)(v28 + 96);
      v36 = *(_OWORD *)(v28 + 112);
      v38 = *(_OWORD *)(v28 + 80);
      *(_QWORD *)(v27 + 128) = *(_QWORD *)(v28 + 128);
      *(_OWORD *)(v27 + 96) = v37;
      *(_OWORD *)(v27 + 112) = v36;
      *(_OWORD *)(v27 + 80) = v38;
    }
  }
  else if (v30)
  {
    *(_BYTE *)v27 = *(_BYTE *)v28;
    *(_BYTE *)(v27 + 1) = *(_BYTE *)(v28 + 1);
    *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
    *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
    *(_DWORD *)(v27 + 24) = *(_DWORD *)(v28 + 24);
    *(_DWORD *)(v27 + 28) = *(_DWORD *)(v28 + 28);
    *(_QWORD *)(v27 + 32) = *(_QWORD *)(v28 + 32);
    *(_QWORD *)(v27 + 40) = *(_QWORD *)(v28 + 40);
    *(_QWORD *)(v27 + 48) = *(_QWORD *)(v28 + 48);
    *(_QWORD *)(v27 + 56) = *(_QWORD *)(v28 + 56);
    *(_QWORD *)(v27 + 64) = *(_QWORD *)(v28 + 64);
    *(_QWORD *)(v27 + 72) = *(_QWORD *)(v28 + 72);
    *(_BYTE *)(v27 + 80) = *(_BYTE *)(v28 + 80);
    *(_QWORD *)(v27 + 88) = *(_QWORD *)(v28 + 88);
    *(_QWORD *)(v27 + 96) = *(_QWORD *)(v28 + 96);
    v32 = *(_QWORD *)(v28 + 104);
    *(_BYTE *)(v27 + 112) = *(_BYTE *)(v28 + 112);
    *(_QWORD *)(v27 + 104) = v32;
    *(_QWORD *)(v27 + 120) = *(_QWORD *)(v28 + 120);
    *(_QWORD *)(v27 + 128) = *(_QWORD *)(v28 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v27 = *(_OWORD *)v28;
    v39 = *(_OWORD *)(v28 + 16);
    v40 = *(_OWORD *)(v28 + 32);
    v41 = *(_OWORD *)(v28 + 64);
    *(_OWORD *)(v27 + 48) = *(_OWORD *)(v28 + 48);
    *(_OWORD *)(v27 + 64) = v41;
    *(_OWORD *)(v27 + 16) = v39;
    *(_OWORD *)(v27 + 32) = v40;
    v42 = *(_OWORD *)(v28 + 80);
    v43 = *(_OWORD *)(v28 + 96);
    v44 = *(_OWORD *)(v28 + 112);
    *(_QWORD *)(v27 + 128) = *(_QWORD *)(v28 + 128);
    *(_OWORD *)(v27 + 96) = v43;
    *(_OWORD *)(v27 + 112) = v44;
    *(_OWORD *)(v27 + 80) = v42;
  }
  v45 = a3[10];
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_QWORD *)v46 = *(_QWORD *)(a2 + v45);
  *(_QWORD *)(v46 + 8) = *(_QWORD *)(a2 + v45 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v46 + 16) = *(_BYTE *)(v47 + 16);
  *(_BYTE *)(v46 + 17) = *(_BYTE *)(v47 + 17);
  *(_DWORD *)(a1 + a3[11]) = *(_DWORD *)(a2 + a3[11]);
  v48 = a3[12];
  v49 = (_DWORD *)(a1 + v48);
  v50 = (_DWORD *)(a2 + v48);
  *v49 = *v50;
  v49[1] = v50[1];
  v51 = a3[13];
  v52 = a1 + v51;
  v53 = a2 + v51;
  *(_QWORD *)v52 = *(_QWORD *)(a2 + v51);
  *(_QWORD *)(v52 + 8) = *(_QWORD *)(a2 + v51 + 8);
  *(_QWORD *)(v52 + 16) = *(_QWORD *)(a2 + v51 + 16);
  *(_QWORD *)(v52 + 24) = *(_QWORD *)(a2 + v51 + 24);
  *(_QWORD *)(v52 + 32) = *(_QWORD *)(a2 + v51 + 32);
  *(_QWORD *)(v52 + 40) = *(_QWORD *)(a2 + v51 + 40);
  *(_QWORD *)(v52 + 48) = *(_QWORD *)(a2 + v51 + 48);
  *(_QWORD *)(v52 + 56) = *(_QWORD *)(a2 + v51 + 56);
  *(_QWORD *)(v52 + 64) = *(_QWORD *)(a2 + v51 + 64);
  *(_QWORD *)(v52 + 72) = *(_QWORD *)(a2 + v51 + 72);
  *(_QWORD *)(v52 + 80) = *(_QWORD *)(a2 + v51 + 80);
  *(_QWORD *)(v52 + 88) = *(_QWORD *)(a2 + v51 + 88);
  *(_QWORD *)(v52 + 96) = *(_QWORD *)(a2 + v51 + 96);
  *(_QWORD *)(v52 + 104) = *(_QWORD *)(a2 + v51 + 104);
  *(_QWORD *)(v52 + 112) = *(_QWORD *)(a2 + v51 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v54 = *(_QWORD *)(v53 + 120);
  *(_BYTE *)(v52 + 128) = *(_BYTE *)(v53 + 128);
  *(_QWORD *)(v52 + 120) = v54;
  v55 = *(_QWORD *)(v53 + 136);
  *(_BYTE *)(v52 + 144) = *(_BYTE *)(v53 + 144);
  *(_QWORD *)(v52 + 136) = v55;
  v56 = *(_QWORD *)(v53 + 152);
  *(_BYTE *)(v52 + 160) = *(_BYTE *)(v53 + 160);
  *(_QWORD *)(v52 + 152) = v56;
  v57 = *(_QWORD *)(v53 + 168);
  *(_BYTE *)(v52 + 176) = *(_BYTE *)(v53 + 176);
  *(_QWORD *)(v52 + 168) = v57;
  v58 = *(_QWORD *)(v53 + 184);
  *(_BYTE *)(v52 + 192) = *(_BYTE *)(v53 + 192);
  *(_QWORD *)(v52 + 184) = v58;
  v59 = *(_QWORD *)(v53 + 200);
  *(_BYTE *)(v52 + 208) = *(_BYTE *)(v53 + 208);
  *(_QWORD *)(v52 + 200) = v59;
  v60 = *(_QWORD *)(v53 + 216);
  *(_BYTE *)(v52 + 224) = *(_BYTE *)(v53 + 224);
  *(_QWORD *)(v52 + 216) = v60;
  v61 = *(_QWORD *)(v53 + 232);
  *(_BYTE *)(v52 + 240) = *(_BYTE *)(v53 + 240);
  *(_QWORD *)(v52 + 232) = v61;
  v62 = *(_QWORD *)(v53 + 248);
  *(_BYTE *)(v52 + 256) = *(_BYTE *)(v53 + 256);
  *(_QWORD *)(v52 + 248) = v62;
  v63 = *(_QWORD *)(v53 + 264);
  *(_BYTE *)(v52 + 272) = *(_BYTE *)(v53 + 272);
  *(_QWORD *)(v52 + 264) = v63;
  v64 = a3[14];
  v65 = (_BYTE *)(a1 + v64);
  v66 = (_BYTE *)(a2 + v64);
  *v65 = *v66;
  v65[1] = v66[1];
  v65[2] = v66[2];
  v65[3] = v66[3];
  v67 = a3[15];
  v68 = a1 + v67;
  v69 = a2 + v67;
  *(_BYTE *)v68 = *(_BYTE *)(a2 + v67);
  *(_QWORD *)(v68 + 8) = *(_QWORD *)(a2 + v67 + 8);
  *(_QWORD *)(v68 + 16) = *(_QWORD *)(a2 + v67 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v68 + 24) = *(_BYTE *)(v69 + 24);
  *(_BYTE *)(v68 + 25) = *(_BYTE *)(v69 + 25);
  *(_QWORD *)(v68 + 32) = *(_QWORD *)(v69 + 32);
  *(_QWORD *)(v68 + 40) = *(_QWORD *)(v69 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v68 + 48) = *(_BYTE *)(v69 + 48);
  v70 = a3[16];
  v71 = a1 + v70;
  v72 = a2 + v70;
  v73 = *(_QWORD *)(a1 + v70 + 8);
  v74 = *(_QWORD *)(a2 + v70 + 8);
  if (v73)
  {
    if (v74)
    {
      *(_QWORD *)v71 = *(_QWORD *)v72;
      *(_QWORD *)(v71 + 8) = *(_QWORD *)(v72 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v71 + 16) = *(_BYTE *)(v72 + 16);
      *(_BYTE *)(v71 + 17) = *(_BYTE *)(v72 + 17);
      *(_QWORD *)(v71 + 24) = *(_QWORD *)(v72 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57EE47C(v71);
      v75 = *(_OWORD *)(v72 + 16);
      *(_OWORD *)v71 = *(_OWORD *)v72;
      *(_OWORD *)(v71 + 16) = v75;
    }
  }
  else if (v74)
  {
    *(_QWORD *)v71 = *(_QWORD *)v72;
    *(_QWORD *)(v71 + 8) = *(_QWORD *)(v72 + 8);
    *(_BYTE *)(v71 + 16) = *(_BYTE *)(v72 + 16);
    *(_BYTE *)(v71 + 17) = *(_BYTE *)(v72 + 17);
    *(_QWORD *)(v71 + 24) = *(_QWORD *)(v72 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v76 = *(_OWORD *)(v72 + 16);
    *(_OWORD *)v71 = *(_OWORD *)v72;
    *(_OWORD *)(v71 + 16) = v76;
  }
  v77 = a3[17];
  v78 = (_QWORD *)(a1 + v77);
  v79 = (_QWORD *)(a2 + v77);
  *v78 = *v79;
  v78[1] = v79[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ArticleScrollEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  _OWORD *v44;
  __int128 v45;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  *(_QWORD *)(v13 + 127) = *(_QWORD *)(v14 + 127);
  v16 = *(_OWORD *)(v14 + 112);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(v14 + 96);
  *(_OWORD *)(v13 + 112) = v16;
  v17 = *(_OWORD *)(v14 + 80);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v14 + 64);
  *(_OWORD *)(v13 + 80) = v17;
  v18 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v18;
  v19 = a1 + v12;
  v20 = a2 + v12;
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  v22 = a3[8];
  v23 = a3[9];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  v26 = a1 + v23;
  v27 = a2 + v23;
  v28 = *(_OWORD *)(v27 + 48);
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  *(_OWORD *)(v26 + 48) = v28;
  *(_QWORD *)(v26 + 128) = *(_QWORD *)(v27 + 128);
  v29 = *(_OWORD *)(v27 + 112);
  *(_OWORD *)(v26 + 96) = *(_OWORD *)(v27 + 96);
  *(_OWORD *)(v26 + 112) = v29;
  v30 = *(_OWORD *)(v27 + 80);
  *(_OWORD *)(v26 + 64) = *(_OWORD *)(v27 + 64);
  *(_OWORD *)(v26 + 80) = v30;
  v31 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v31;
  v32 = a3[10];
  v33 = a3[11];
  v34 = a1 + v32;
  v35 = a2 + v32;
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *(_WORD *)(v34 + 16) = *(_WORD *)(v35 + 16);
  *(_DWORD *)(a1 + v33) = *(_DWORD *)(a2 + v33);
  v36 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  memcpy((void *)(a1 + v36), (const void *)(a2 + v36), 0x111uLL);
  v37 = a3[15];
  *(_DWORD *)(a1 + a3[14]) = *(_DWORD *)(a2 + a3[14]);
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = *(_OWORD *)(v39 + 16);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v40;
  *(_OWORD *)(v38 + 32) = *(_OWORD *)(v39 + 32);
  *(_BYTE *)(v38 + 48) = *(_BYTE *)(v39 + 48);
  v41 = a3[16];
  v42 = a3[17];
  v43 = (_OWORD *)(a1 + v41);
  v44 = (_OWORD *)(a2 + v41);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  *(_OWORD *)(a1 + v42) = *(_OWORD *)(a2 + v42);
  return a1;
}

uint64_t assignWithTake for ArticleScrollEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_DWORD *)(v12 + 4) = *(_DWORD *)(a2 + v11 + 4);
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(a2 + v11 + 8);
  v14 = *(_QWORD *)(a2 + v11 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 24) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  v15 = *(_QWORD *)(v13 + 48);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 48) = v15;
  *(_BYTE *)(v12 + 56) = *(_BYTE *)(v13 + 56);
  *(_BYTE *)(v12 + 57) = *(_BYTE *)(v13 + 57);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 128) = *(_BYTE *)(v13 + 128);
  *(_BYTE *)(v12 + 129) = *(_BYTE *)(v13 + 129);
  *(_BYTE *)(v12 + 130) = *(_BYTE *)(v13 + 130);
  *(_BYTE *)(v12 + 131) = *(_BYTE *)(v13 + 131);
  *(_BYTE *)(v12 + 132) = *(_BYTE *)(v13 + 132);
  *(_BYTE *)(v12 + 133) = *(_BYTE *)(v13 + 133);
  *(_BYTE *)(v12 + 134) = *(_BYTE *)(v13 + 134);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v18 + 17);
  v20 = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 32) = v20;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  if (*(_QWORD *)(a1 + v21 + 16) == 1)
    goto LABEL_4;
  v24 = *(_QWORD *)(v23 + 16);
  if (v24 == 1)
  {
    sub_1D57D9100(v22);
LABEL_4:
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_QWORD *)(v22 + 16) = *(_QWORD *)(v23 + 16);
    goto LABEL_6;
  }
  *(_BYTE *)v22 = *(_BYTE *)v23;
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
  *(_QWORD *)(v22 + 16) = v24;
  swift_bridgeObjectRelease();
LABEL_6:
  v25 = a3[9];
  v26 = a1 + v25;
  v27 = a2 + v25;
  if (*(_QWORD *)(a1 + v25 + 16))
  {
    v28 = *(_QWORD *)(v27 + 16);
    if (v28)
    {
      *(_WORD *)v26 = *(_WORD *)v27;
      *(_QWORD *)(v26 + 8) = *(_QWORD *)(v27 + 8);
      *(_QWORD *)(v26 + 16) = v28;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v26 + 24) = *(_QWORD *)(v27 + 24);
      *(_QWORD *)(v26 + 32) = *(_QWORD *)(v27 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v26 + 40) = *(_QWORD *)(v27 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v26 + 48) = *(_QWORD *)(v27 + 48);
      swift_bridgeObjectRelease();
      v29 = *(_QWORD *)(v27 + 64);
      *(_QWORD *)(v26 + 56) = *(_QWORD *)(v27 + 56);
      *(_QWORD *)(v26 + 64) = v29;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v26 + 72) = *(_QWORD *)(v27 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v26 + 80) = *(_BYTE *)(v27 + 80);
      v30 = *(_QWORD *)(v27 + 96);
      *(_QWORD *)(v26 + 88) = *(_QWORD *)(v27 + 88);
      *(_QWORD *)(v26 + 96) = v30;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v26 + 104) = *(_QWORD *)(v27 + 104);
      *(_BYTE *)(v26 + 112) = *(_BYTE *)(v27 + 112);
      *(_QWORD *)(v26 + 120) = *(_QWORD *)(v27 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v26 + 128) = *(_QWORD *)(v27 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D57E17B8(v26);
  }
  v31 = *(_OWORD *)(v27 + 112);
  *(_OWORD *)(v26 + 96) = *(_OWORD *)(v27 + 96);
  *(_OWORD *)(v26 + 112) = v31;
  *(_QWORD *)(v26 + 128) = *(_QWORD *)(v27 + 128);
  v32 = *(_OWORD *)(v27 + 48);
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  *(_OWORD *)(v26 + 48) = v32;
  v33 = *(_OWORD *)(v27 + 80);
  *(_OWORD *)(v26 + 64) = *(_OWORD *)(v27 + 64);
  *(_OWORD *)(v26 + 80) = v33;
  v34 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v34;
LABEL_11:
  v35 = a3[10];
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = *(_QWORD *)(a2 + v35 + 8);
  *(_QWORD *)v36 = *(_QWORD *)(a2 + v35);
  *(_QWORD *)(v36 + 8) = v38;
  swift_bridgeObjectRelease();
  *(_WORD *)(v36 + 16) = *(_WORD *)(v37 + 16);
  v39 = a3[12];
  *(_DWORD *)(a1 + a3[11]) = *(_DWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v39) = *(_QWORD *)(a2 + v39);
  v40 = a3[13];
  v41 = a1 + v40;
  v42 = a2 + v40;
  v43 = *(_OWORD *)(a2 + v40 + 16);
  *(_OWORD *)v41 = *(_OWORD *)(a2 + v40);
  *(_OWORD *)(v41 + 16) = v43;
  v44 = *(_OWORD *)(a2 + v40 + 48);
  *(_OWORD *)(v41 + 32) = *(_OWORD *)(a2 + v40 + 32);
  *(_OWORD *)(v41 + 48) = v44;
  v45 = *(_OWORD *)(a2 + v40 + 80);
  *(_OWORD *)(v41 + 64) = *(_OWORD *)(a2 + v40 + 64);
  *(_OWORD *)(v41 + 80) = v45;
  *(_OWORD *)(v41 + 96) = *(_OWORD *)(a2 + v40 + 96);
  *(_QWORD *)(v41 + 112) = *(_QWORD *)(a2 + v40 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v41 + 120) = *(_QWORD *)(v42 + 120);
  *(_BYTE *)(v41 + 128) = *(_BYTE *)(v42 + 128);
  *(_QWORD *)(v41 + 136) = *(_QWORD *)(v42 + 136);
  *(_BYTE *)(v41 + 144) = *(_BYTE *)(v42 + 144);
  *(_QWORD *)(v41 + 152) = *(_QWORD *)(v42 + 152);
  *(_BYTE *)(v41 + 160) = *(_BYTE *)(v42 + 160);
  *(_BYTE *)(v41 + 176) = *(_BYTE *)(v42 + 176);
  *(_QWORD *)(v41 + 168) = *(_QWORD *)(v42 + 168);
  v46 = *(_QWORD *)(v42 + 184);
  *(_BYTE *)(v41 + 192) = *(_BYTE *)(v42 + 192);
  *(_QWORD *)(v41 + 184) = v46;
  *(_QWORD *)(v41 + 200) = *(_QWORD *)(v42 + 200);
  *(_BYTE *)(v41 + 208) = *(_BYTE *)(v42 + 208);
  *(_QWORD *)(v41 + 216) = *(_QWORD *)(v42 + 216);
  *(_BYTE *)(v41 + 224) = *(_BYTE *)(v42 + 224);
  *(_QWORD *)(v41 + 232) = *(_QWORD *)(v42 + 232);
  *(_BYTE *)(v41 + 240) = *(_BYTE *)(v42 + 240);
  *(_BYTE *)(v41 + 256) = *(_BYTE *)(v42 + 256);
  *(_QWORD *)(v41 + 248) = *(_QWORD *)(v42 + 248);
  *(_BYTE *)(v41 + 272) = *(_BYTE *)(v42 + 272);
  *(_QWORD *)(v41 + 264) = *(_QWORD *)(v42 + 264);
  v47 = a3[14];
  v48 = a3[15];
  v49 = a1 + v47;
  v50 = a2 + v47;
  *(_BYTE *)v49 = *(_BYTE *)v50;
  *(_BYTE *)(v49 + 1) = *(_BYTE *)(v50 + 1);
  *(_WORD *)(v49 + 2) = *(_WORD *)(v50 + 2);
  v51 = a1 + v48;
  v52 = a2 + v48;
  *(_BYTE *)v51 = *(_BYTE *)(a2 + v48);
  v53 = *(_QWORD *)(a2 + v48 + 8);
  v54 = *(_QWORD *)(a2 + v48 + 16);
  *(_QWORD *)(v51 + 8) = v53;
  *(_QWORD *)(v51 + 16) = v54;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v51 + 24) = *(_BYTE *)(v52 + 24);
  *(_BYTE *)(v51 + 25) = *(_BYTE *)(v52 + 25);
  v55 = *(_QWORD *)(v52 + 40);
  *(_QWORD *)(v51 + 32) = *(_QWORD *)(v52 + 32);
  *(_QWORD *)(v51 + 40) = v55;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v51 + 48) = *(_BYTE *)(v52 + 48);
  v56 = a3[16];
  v57 = a1 + v56;
  v58 = a2 + v56;
  if (!*(_QWORD *)(a1 + v56 + 8))
  {
LABEL_15:
    v60 = *(_OWORD *)(v58 + 16);
    *(_OWORD *)v57 = *(_OWORD *)v58;
    *(_OWORD *)(v57 + 16) = v60;
    goto LABEL_16;
  }
  v59 = *(_QWORD *)(v58 + 8);
  if (!v59)
  {
    sub_1D57EE47C(v57);
    goto LABEL_15;
  }
  *(_QWORD *)v57 = *(_QWORD *)v58;
  *(_QWORD *)(v57 + 8) = v59;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v57 + 16) = *(_BYTE *)(v58 + 16);
  *(_BYTE *)(v57 + 17) = *(_BYTE *)(v58 + 17);
  *(_QWORD *)(v57 + 24) = *(_QWORD *)(v58 + 24);
  swift_bridgeObjectRelease();
LABEL_16:
  v61 = a3[17];
  v62 = (_QWORD *)(a1 + v61);
  v63 = (uint64_t *)(a2 + v61);
  v65 = *v63;
  v64 = v63[1];
  *v62 = v65;
  v62[1] = v64;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleScrollEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A88714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleScrollEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A887CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_1D5A88874()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ArticleScrollEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1D5A889C0 + 4 * byte_1D5AE7E23[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_1D5A889F4 + 4 * byte_1D5AE7E1E[v4]))();
}

uint64_t sub_1D5A889F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A889FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A88A04);
  return result;
}

uint64_t sub_1D5A88A10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A88A18);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_1D5A88A1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A88A24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleScrollEvent.Model.CodingKeys()
{
  return &type metadata for ArticleScrollEvent.Model.CodingKeys;
}

unint64_t sub_1D5A88A44()
{
  unint64_t result;

  result = qword_1EFF525E8;
  if (!qword_1EFF525E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE8154, &type metadata for ArticleScrollEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF525E8);
  }
  return result;
}

unint64_t sub_1D5A88A8C()
{
  unint64_t result;

  result = qword_1ED9CFCB0;
  if (!qword_1ED9CFCB0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE80C4, &type metadata for ArticleScrollEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CFCB0);
  }
  return result;
}

unint64_t sub_1D5A88AD4()
{
  unint64_t result;

  result = qword_1ED9CFCA8;
  if (!qword_1ED9CFCA8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE80EC, &type metadata for ArticleScrollEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CFCA8);
  }
  return result;
}

uint64_t sub_1D5A88B18(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x74536C6C6F726373 && a2 == 0xEF61746144747261 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6E456C6C6F726373 && a2 == 0xED00006174614464 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AEC9D0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEC9F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6569566575737369 && a2 == 0xED00006174614477)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

NewsAnalytics::SubscriptionAdLocation_optional __swiftcall SubscriptionAdLocation.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::SubscriptionAdLocation_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SubscriptionAdLocation.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C6369747261;
  if (*v0 != 1)
    v1 = 0x6E776F6E6B6E75;
  if (*v0)
    return v1;
  else
    return 1684366694;
}

uint64_t sub_1D5A891D4(char *a1, unsigned __int8 *a2)
{
  return sub_1D5A37E08(*a1, *a2);
}

unint64_t sub_1D5A891E4()
{
  unint64_t result;

  result = qword_1EFF525F0;
  if (!qword_1EFF525F0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscriptionAdLocation, &type metadata for SubscriptionAdLocation);
    atomic_store(result, (unint64_t *)&qword_1EFF525F0);
  }
  return result;
}

uint64_t sub_1D5A89228()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5A892C0()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5A89334()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::SubscriptionAdLocation_optional sub_1D5A893C8(Swift::String *a1)
{
  return SubscriptionAdLocation.init(rawValue:)(*a1);
}

void sub_1D5A893D4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0x656C6369747261;
  if (v2 != 1)
    v4 = 0x6E776F6E6B6E75;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 1684366694;
  if (!v5)
    v3 = 0xE700000000000000;
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_1D5A8942C()
{
  sub_1D5A895A0();
  return sub_1D5AAE928();
}

uint64_t sub_1D5A89488()
{
  sub_1D5A895A0();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for SubscriptionAdLocation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5A89520 + 4 * byte_1D5AE81D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5A89554 + 4 * byte_1D5AE81D0[v4]))();
}

uint64_t sub_1D5A89554(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A8955C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A89564);
  return result;
}

uint64_t sub_1D5A89570(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A89578);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5A8957C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A89584(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionAdLocation()
{
  return &type metadata for SubscriptionAdLocation;
}

unint64_t sub_1D5A895A0()
{
  unint64_t result;

  result = qword_1EFF525F8;
  if (!qword_1EFF525F8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for SubscriptionAdLocation, &type metadata for SubscriptionAdLocation);
    atomic_store(result, (unint64_t *)&qword_1EFF525F8);
  }
  return result;
}

uint64_t sub_1D5A895E4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF52600, MEMORY[0x1E0CF8078]);
}

uint64_t static DownloadIssueEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF474C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF52600, a1);
}

uint64_t sub_1D5A89624(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF52618, MEMORY[0x1E0CF8380]);
}

uint64_t static DownloadIssueEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF474C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF52618, a1);
}

uint64_t DownloadIssueEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t DownloadIssueEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*DownloadIssueEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t DownloadIssueEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DownloadIssueEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for DownloadIssueEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C9A88);
}

uint64_t DownloadIssueEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DownloadIssueEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*DownloadIssueEvent.issueData.modify())(_QWORD)
{
  type metadata accessor for DownloadIssueEvent(0);
  return nullsub_1;
}

uint64_t DownloadIssueEvent.downloadLocationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DownloadIssueEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7200, (void (*)(void))sub_1D59902EC, (void (*)(void))sub_1D5990334);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DownloadIssueEvent.downloadLocationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DownloadIssueEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C7200, (void (*)(void))sub_1D59902EC, (void (*)(void))sub_1D5990334);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*DownloadIssueEvent.downloadLocationData.modify())(_QWORD)
{
  type metadata accessor for DownloadIssueEvent(0);
  return nullsub_1;
}

uint64_t DownloadIssueEvent.downloadStateData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DownloadIssueEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C71C0, (void (*)(void))sub_1D58E066C, (void (*)(void))sub_1D58E06B4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DownloadIssueEvent.downloadStateData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DownloadIssueEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C71C0, (void (*)(void))sub_1D58E066C, (void (*)(void))sub_1D58E06B4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*DownloadIssueEvent.downloadStateData.modify())(_QWORD)
{
  type metadata accessor for DownloadIssueEvent(0);
  return nullsub_1;
}

uint64_t DownloadIssueEvent.downloadData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DownloadIssueEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7120, (void (*)(void))sub_1D58317C8, (void (*)(void))sub_1D5831810);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DownloadIssueEvent.downloadData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DownloadIssueEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7120, (void (*)(void))sub_1D58317C8, (void (*)(void))sub_1D5831810);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*DownloadIssueEvent.downloadData.modify())(_QWORD)
{
  type metadata accessor for DownloadIssueEvent(0);
  return nullsub_1;
}

uint64_t DownloadIssueEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DownloadIssueEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DownloadIssueEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DownloadIssueEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*DownloadIssueEvent.channelData.modify())(_QWORD)
{
  type metadata accessor for DownloadIssueEvent(0);
  return nullsub_1;
}

uint64_t DownloadIssueEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DownloadIssueEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DownloadIssueEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DownloadIssueEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*DownloadIssueEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for DownloadIssueEvent(0);
  return nullsub_1;
}

uint64_t DownloadIssueEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for DownloadIssueEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1ED9C7200, (void (*)(void))sub_1D59902EC, (void (*)(void))sub_1D5990334);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C71C0, (void (*)(void))sub_1D58E066C, (void (*)(void))sub_1D58E06B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C7120, (void (*)(void))sub_1D58317C8, (void (*)(void))sub_1D5831810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v2, v14);
  v15 = a1 + v4[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v2, v16);
}

uint64_t DownloadIssueEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t DownloadIssueEvent.Model.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for DownloadIssueEvent.Model(0) + 20);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for DownloadIssueEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9C99E0);
}

uint64_t DownloadIssueEvent.Model.downloadLocationData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for DownloadIssueEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t DownloadIssueEvent.Model.downloadStateData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for DownloadIssueEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t DownloadIssueEvent.Model.downloadData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for DownloadIssueEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t DownloadIssueEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for DownloadIssueEvent.Model(0) + 36);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t DownloadIssueEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for DownloadIssueEvent.Model(0) + 40));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

int *DownloadIssueEvent.Model.init(eventData:issueData:downloadLocationData:downloadStateData:downloadData:channelData:userBundleSubscriptionContextData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, char *a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, char *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  int *result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  v10 = *a2;
  v11 = a2[1];
  v12 = *((_BYTE *)a2 + 16);
  v13 = *((_BYTE *)a2 + 17);
  v14 = a2[3];
  v15 = *a3;
  v16 = *a4;
  v17 = *a5;
  v27 = a6[1];
  v28 = *a6;
  v25 = *((_BYTE *)a6 + 17);
  v26 = *((_BYTE *)a6 + 16);
  v23 = a6[4];
  v24 = a6[3];
  v36 = *a7;
  v34 = *((_QWORD *)a7 + 2);
  v35 = *((_QWORD *)a7 + 1);
  v32 = a7[25];
  v33 = a7[24];
  v30 = *((_QWORD *)a7 + 5);
  v31 = *((_QWORD *)a7 + 4);
  v29 = a7[48];
  v18 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a8, a1, v18);
  result = (int *)type metadata accessor for DownloadIssueEvent.Model(0);
  v20 = a8 + result[5];
  *(_QWORD *)v20 = v10;
  *(_QWORD *)(v20 + 8) = v11;
  *(_BYTE *)(v20 + 16) = v12;
  *(_BYTE *)(v20 + 17) = v13;
  *(_QWORD *)(v20 + 24) = v14;
  *(_BYTE *)(a8 + result[6]) = v15;
  *(_BYTE *)(a8 + result[7]) = v16;
  *(_BYTE *)(a8 + result[8]) = v17;
  v21 = a8 + result[9];
  *(_QWORD *)v21 = v28;
  *(_QWORD *)(v21 + 8) = v27;
  *(_BYTE *)(v21 + 16) = v26;
  *(_BYTE *)(v21 + 17) = v25;
  *(_QWORD *)(v21 + 24) = v24;
  *(_QWORD *)(v21 + 32) = v23;
  v22 = a8 + result[10];
  *(_BYTE *)v22 = v36;
  *(_QWORD *)(v22 + 8) = v35;
  *(_QWORD *)(v22 + 16) = v34;
  *(_BYTE *)(v22 + 24) = v33;
  *(_BYTE *)(v22 + 25) = v32;
  *(_QWORD *)(v22 + 32) = v31;
  *(_QWORD *)(v22 + 40) = v30;
  *(_BYTE *)(v22 + 48) = v29;
  return result;
}

uint64_t sub_1D5A8A1E4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A8A21C + 4 * byte_1D5AE8300[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5A8A21C()
{
  return 0x7461446575737369;
}

unint64_t sub_1D5A8A230()
{
  return 0xD000000000000014;
}

uint64_t sub_1D5A8A2C4()
{
  unsigned __int8 *v0;

  return sub_1D5A8A1E4(*v0);
}

uint64_t sub_1D5A8A2CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A8CB2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A8A2F0()
{
  sub_1D5A8A664();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A8A318()
{
  sub_1D5A8A664();
  return sub_1D5AAEEE0();
}

uint64_t DownloadIssueEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  char v34;
  char v35;

  v3 = v1;
  sub_1D5A8AB98(0, &qword_1EFF52630, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v29 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A8A664();
  sub_1D5AAEEC8();
  LOBYTE(v30) = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for DownloadIssueEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    v14 = *((_BYTE *)v11 + 16);
    v15 = *((_BYTE *)v11 + 17);
    v16 = v11[3];
    v30 = v12;
    *(_QWORD *)&v31 = v13;
    BYTE8(v31) = v14;
    BYTE9(v31) = v15;
    v32 = v16;
    v35 = 1;
    sub_1D57C5F1C();
    sub_1D5AAED6C();
    LOBYTE(v30) = *(_BYTE *)(v3 + v10[6]);
    v35 = 2;
    sub_1D5990334();
    sub_1D5AAED6C();
    LOBYTE(v30) = *(_BYTE *)(v3 + v10[7]);
    v35 = 3;
    sub_1D58E06B4();
    sub_1D5AAED6C();
    LOBYTE(v30) = *(_BYTE *)(v3 + v10[8]);
    v35 = 4;
    sub_1D5831810();
    sub_1D5AAED6C();
    v17 = (uint64_t *)(v3 + v10[9]);
    v18 = *v17;
    v19 = v17[1];
    v20 = *((_BYTE *)v17 + 16);
    v21 = *((_BYTE *)v17 + 17);
    v23 = v17[3];
    v22 = v17[4];
    v30 = v18;
    *(_QWORD *)&v31 = v19;
    BYTE8(v31) = v20;
    BYTE9(v31) = v21;
    v32 = v23;
    *(_QWORD *)&v33 = v22;
    v35 = 5;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v24 = v3 + v10[10];
    v25 = *(_BYTE *)(v24 + 24);
    v26 = *(_BYTE *)(v24 + 25);
    v27 = *(_BYTE *)(v24 + 48);
    LOBYTE(v30) = *(_BYTE *)v24;
    v31 = *(_OWORD *)(v24 + 8);
    LOBYTE(v32) = v25;
    BYTE1(v32) = v26;
    v33 = *(_OWORD *)(v24 + 32);
    v34 = v27;
    v35 = 6;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A8A664()
{
  unint64_t result;

  result = qword_1EFF52638;
  if (!qword_1EFF52638)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE856C, &type metadata for DownloadIssueEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52638);
  }
  return result;
}

uint64_t DownloadIssueEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  char v28;
  char v29;
  char *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  char v43;
  char v44;

  v33 = a2;
  v3 = sub_1D5AADF98();
  v34 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v36 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A8AB98(0, &qword_1EFF52640, MEMORY[0x1E0DED048]);
  v35 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v32 - v7;
  v9 = (int *)type metadata accessor for DownloadIssueEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A8A664();
  v37 = v8;
  v12 = (uint64_t)v38;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v14 = v34;
  v38 = a1;
  LOBYTE(v39) = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v15 = v35;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v36, v3);
  v44 = 1;
  sub_1D57C5ED8();
  sub_1D5AAECD0();
  v16 = v40;
  v17 = BYTE8(v40);
  v18 = BYTE9(v40);
  v19 = v41;
  v20 = &v11[v9[5]];
  *(_QWORD *)v20 = v39;
  *((_QWORD *)v20 + 1) = v16;
  v20[16] = v17;
  v20[17] = v18;
  *((_QWORD *)v20 + 3) = v19;
  v44 = 2;
  sub_1D59902EC();
  sub_1D5AAECD0();
  v11[v9[6]] = v39;
  v44 = 3;
  sub_1D58E066C();
  sub_1D5AAECD0();
  v11[v9[7]] = v39;
  v44 = 4;
  sub_1D58317C8();
  sub_1D5AAECD0();
  v11[v9[8]] = v39;
  v44 = 5;
  sub_1D57CB874();
  sub_1D5AAECD0();
  v21 = v40;
  v22 = BYTE8(v40);
  v23 = BYTE9(v40);
  v24 = v41;
  v25 = v42;
  v26 = &v11[v9[9]];
  *(_QWORD *)v26 = v39;
  *((_QWORD *)v26 + 1) = v21;
  v26[16] = v22;
  v26[17] = v23;
  *((_QWORD *)v26 + 3) = v24;
  *((_QWORD *)v26 + 4) = v25;
  v44 = 6;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v37, v15);
  v27 = v41;
  v28 = BYTE1(v41);
  v29 = v43;
  v30 = &v11[v9[10]];
  *v30 = v39;
  *(_OWORD *)(v30 + 8) = v40;
  v30[24] = v27;
  v30[25] = v28;
  *((_OWORD *)v30 + 2) = v42;
  v30[48] = v29;
  sub_1D5A8ABF4((uint64_t)v11, v33);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return sub_1D5A8AC38((uint64_t)v11);
}

void sub_1D5A8AB98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A8A664();
    v7 = a3(a1, &type metadata for DownloadIssueEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A8ABF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DownloadIssueEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A8AC38(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DownloadIssueEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A8AC74@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DownloadIssueEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A8AC88(_QWORD *a1)
{
  return DownloadIssueEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A8AC9C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF474C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF52600, a1);
}

uint64_t sub_1D5A8ACC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF474C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF52618, a1);
}

uint64_t sub_1D5A8ACE4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1ED9C7200, (void (*)(void))sub_1D59902EC, (void (*)(void))sub_1D5990334);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C71C0, (void (*)(void))sub_1D58E066C, (void (*)(void))sub_1D58E06B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C7120, (void (*)(void))sub_1D58317C8, (void (*)(void))sub_1D5831810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v4, v15);
  v16 = a2 + a1[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v4, v17);
}

uint64_t *initializeBufferWithCopyOfBuffer for DownloadIssueEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C7200, (void (*)(void))sub_1D59902EC, (void (*)(void))sub_1D5990334);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C71C0, (void (*)(void))sub_1D58E066C, (void (*)(void))sub_1D58E06B4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7120, (void (*)(void))sub_1D58317C8, (void (*)(void))sub_1D5831810);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return a1;
}

uint64_t destroy for DownloadIssueEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C7200, (void (*)(void))sub_1D59902EC, (void (*)(void))sub_1D5990334);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C71C0, (void (*)(void))sub_1D58E066C, (void (*)(void))sub_1D58E06B4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7120, (void (*)(void))sub_1D58317C8, (void (*)(void))sub_1D5831810);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
}

uint64_t initializeWithCopy for DownloadIssueEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7200, (void (*)(void))sub_1D59902EC, (void (*)(void))sub_1D5990334);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C71C0, (void (*)(void))sub_1D58E066C, (void (*)(void))sub_1D58E06B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7120, (void (*)(void))sub_1D58317C8, (void (*)(void))sub_1D5831810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

uint64_t assignWithCopy for DownloadIssueEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7200, (void (*)(void))sub_1D59902EC, (void (*)(void))sub_1D5990334);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C71C0, (void (*)(void))sub_1D58E066C, (void (*)(void))sub_1D58E06B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7120, (void (*)(void))sub_1D58317C8, (void (*)(void))sub_1D5831810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t initializeWithTake for DownloadIssueEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7200, (void (*)(void))sub_1D59902EC, (void (*)(void))sub_1D5990334);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C71C0, (void (*)(void))sub_1D58E066C, (void (*)(void))sub_1D58E06B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7120, (void (*)(void))sub_1D58317C8, (void (*)(void))sub_1D5831810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for DownloadIssueEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C7200, (void (*)(void))sub_1D59902EC, (void (*)(void))sub_1D5990334);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C71C0, (void (*)(void))sub_1D58E066C, (void (*)(void))sub_1D58E06B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7120, (void (*)(void))sub_1D58317C8, (void (*)(void))sub_1D5831810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadIssueEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A8BB94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7200, (void (*)(void))sub_1D59902EC, (void (*)(void))sub_1D5990334);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C71C0, (void (*)(void))sub_1D58E066C, (void (*)(void))sub_1D58E06B4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7120, (void (*)(void))sub_1D58317C8, (void (*)(void))sub_1D5831810);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
              v8 = v18;
              v12 = *(_QWORD *)(v18 - 8);
              v13 = a3[10];
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for DownloadIssueEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A8BD88(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C7200, (void (*)(void))sub_1D59902EC, (void (*)(void))sub_1D5990334);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C71C0, (void (*)(void))sub_1D58E066C, (void (*)(void))sub_1D58E06B4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7120, (void (*)(void))sub_1D58317C8, (void (*)(void))sub_1D5831810);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
              v10 = v20;
              v14 = *(_QWORD *)(v20 - 8);
              v15 = a4[10];
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5A8BF78()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C72B0, (void (*)(void))sub_1D57C5ED8, (void (*)(void))sub_1D57C5F1C);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C7200, (void (*)(void))sub_1D59902EC, (void (*)(void))sub_1D5990334);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C71C0, (void (*)(void))sub_1D58E066C, (void (*)(void))sub_1D58E06B4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7120, (void (*)(void))sub_1D58317C8, (void (*)(void))sub_1D5831810);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
              if (v6 <= 0x3F)
                swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for DownloadIssueEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v13 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
    v14 = a3[9];
    v15 = a3[10];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    v16[16] = v17[16];
    v16[17] = v17[17];
    v19 = *((_QWORD *)v17 + 4);
    *((_QWORD *)v16 + 3) = *((_QWORD *)v17 + 3);
    *((_QWORD *)v16 + 4) = v19;
    v20 = (char *)a1 + v15;
    v21 = (char *)a2 + v15;
    *v20 = *v21;
    v22 = *((_QWORD *)v21 + 2);
    *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
    *((_QWORD *)v20 + 2) = v22;
    v20[24] = v21[24];
    v20[25] = v21[25];
    v23 = *((_QWORD *)v21 + 5);
    *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
    *((_QWORD *)v20 + 5) = v23;
    v20[48] = v21[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DownloadIssueEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DownloadIssueEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = *(_QWORD *)(v10 + 24);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v12 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v13 = a3[9];
  v14 = a3[10];
  v15 = a1 + v13;
  v16 = a2 + v13;
  v17 = *(_QWORD *)(v16 + 8);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_QWORD *)(v15 + 8) = v17;
  *(_BYTE *)(v15 + 16) = *(_BYTE *)(v16 + 16);
  *(_BYTE *)(v15 + 17) = *(_BYTE *)(v16 + 17);
  v18 = *(_QWORD *)(v16 + 32);
  *(_QWORD *)(v15 + 24) = *(_QWORD *)(v16 + 24);
  *(_QWORD *)(v15 + 32) = v18;
  v19 = a1 + v14;
  v20 = a2 + v14;
  *(_BYTE *)v19 = *(_BYTE *)v20;
  v21 = *(_QWORD *)(v20 + 16);
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  *(_QWORD *)(v19 + 16) = v21;
  *(_BYTE *)(v19 + 24) = *(_BYTE *)(v20 + 24);
  *(_BYTE *)(v19 + 25) = *(_BYTE *)(v20 + 25);
  v22 = *(_QWORD *)(v20 + 40);
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  *(_QWORD *)(v19 + 40) = v22;
  *(_BYTE *)(v19 + 48) = *(_BYTE *)(v20 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DownloadIssueEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(v9 + 17);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v10 = a3[9];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  *(_BYTE *)(v11 + 17) = *(_BYTE *)(v12 + 17);
  *(_QWORD *)(v11 + 24) = *(_QWORD *)(v12 + 24);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[10];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_BYTE *)v14 = *(_BYTE *)(a2 + v13);
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(a2 + v13 + 8);
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(a2 + v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 24) = *(_BYTE *)(v15 + 24);
  *(_BYTE *)(v14 + 25) = *(_BYTE *)(v15 + 25);
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  *(_QWORD *)(v14 + 40) = *(_QWORD *)(v15 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 48) = *(_BYTE *)(v15 + 48);
  return a1;
}

uint64_t initializeWithTake for DownloadIssueEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_OWORD *)(a1 + v7);
  v10 = (_OWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v12 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v13 = a3[9];
  v14 = a3[10];
  v15 = a1 + v13;
  v16 = a2 + v13;
  v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  v18 = a1 + v14;
  v19 = a2 + v14;
  v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  *(_BYTE *)(v18 + 48) = *(_BYTE *)(v19 + 48);
  return a1;
}

uint64_t assignWithTake for DownloadIssueEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(v9 + 17);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRelease();
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12);
  v16 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = v15;
  *(_QWORD *)(v13 + 8) = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_BYTE *)(v13 + 17) = *(_BYTE *)(v14 + 17);
  v17 = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 32) = v17;
  swift_bridgeObjectRelease();
  v18 = a3[10];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_BYTE *)v19 = *(_BYTE *)v20;
  v21 = *(_QWORD *)(v20 + 16);
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  *(_QWORD *)(v19 + 16) = v21;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v19 + 24) = *(_BYTE *)(v20 + 24);
  *(_BYTE *)(v19 + 25) = *(_BYTE *)(v20 + 25);
  v22 = *(_QWORD *)(v20 + 40);
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  *(_QWORD *)(v19 + 40) = v22;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v19 + 48) = *(_BYTE *)(v20 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadIssueEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A8C7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for DownloadIssueEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A8C870(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5A8C8EC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DownloadIssueEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D5A8C9D4 + 4 * byte_1D5AE830C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D5A8CA08 + 4 * byte_1D5AE8307[v4]))();
}

uint64_t sub_1D5A8CA08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A8CA10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A8CA18);
  return result;
}

uint64_t sub_1D5A8CA24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A8CA2CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D5A8CA30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A8CA38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DownloadIssueEvent.Model.CodingKeys()
{
  return &type metadata for DownloadIssueEvent.Model.CodingKeys;
}

unint64_t sub_1D5A8CA58()
{
  unint64_t result;

  result = qword_1EFF52648;
  if (!qword_1EFF52648)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE8544, &type metadata for DownloadIssueEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52648);
  }
  return result;
}

unint64_t sub_1D5A8CAA0()
{
  unint64_t result;

  result = qword_1EFF52650;
  if (!qword_1EFF52650)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE84B4, &type metadata for DownloadIssueEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52650);
  }
  return result;
}

unint64_t sub_1D5A8CAE8()
{
  unint64_t result;

  result = qword_1EFF52658;
  if (!qword_1EFF52658)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE84DC, &type metadata for DownloadIssueEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52658);
  }
  return result;
}

uint64_t sub_1D5A8CB2C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AF2B30 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AF2B50 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64616F6C6E776F64 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

void AdCreativeData.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AdCreativeData.type.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AdCreativeData.type.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5A8CE60()
{
  sub_1D57A583C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A8CE88()
{
  sub_1D57A583C();
  return sub_1D5AAEEE0();
}

uint64_t AdCreativeData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1D57A579C(0, &qword_1EFF52660, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57A583C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5A8CFE8();
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1D5A8CFE8()
{
  unint64_t result;

  result = qword_1EFF52668;
  if (!qword_1EFF52668)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for AdCreativeType, &type metadata for AdCreativeType);
    atomic_store(result, (unint64_t *)&qword_1EFF52668);
  }
  return result;
}

uint64_t sub_1D5A8D034@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return AdCreativeData.init(from:)(a1, a2);
}

uint64_t storeEnumTagSinglePayload for AdCreativeData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D5A8D094 + 4 * byte_1D5AE85C1[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5A8D0C8 + 4 * byte_1D5AE85BC[v4]))();
}

uint64_t sub_1D5A8D0C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A8D0D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A8D0D8);
  return result;
}

uint64_t sub_1D5A8D0E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A8D0ECLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5A8D0F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A8D0F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdCreativeData.CodingKeys()
{
  return &type metadata for AdCreativeData.CodingKeys;
}

unint64_t sub_1D5A8D118()
{
  unint64_t result;

  result = qword_1EFF52670;
  if (!qword_1EFF52670)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE8710, &type metadata for AdCreativeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52670);
  }
  return result;
}

unint64_t sub_1D5A8D160()
{
  unint64_t result;

  result = qword_1ED9CCD60;
  if (!qword_1ED9CCD60)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE8680, &type metadata for AdCreativeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CCD60);
  }
  return result;
}

unint64_t sub_1D5A8D1A8()
{
  unint64_t result;

  result = qword_1ED9CD170;
  if (!qword_1ED9CD170)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE86A8, &type metadata for AdCreativeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CD170);
  }
  return result;
}

uint64_t sub_1D5A8D1EC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF52678, MEMORY[0x1E0CF8078]);
}

uint64_t static SubscriptionOffersExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF474D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF52678, a1);
}

uint64_t sub_1D5A8D22C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF52690, MEMORY[0x1E0CF8380]);
}

uint64_t static SubscriptionOffersExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF474D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF52690, a1);
}

uint64_t SubscriptionOffersExposureEvent.adReferralData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SubscriptionOffersExposureEvent.adReferralData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SubscriptionOffersExposureEvent.adReferralData.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionOffersExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for SubscriptionOffersExposureEvent, (uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t type metadata accessor for SubscriptionOffersExposureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, (uint64_t *)&unk_1ED9CBD30);
}

uint64_t SubscriptionOffersExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionOffersExposureEvent(0) + 20);
  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionOffersExposureEvent.eventData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionOffersExposureEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionOffersExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5824B58(type metadata accessor for SubscriptionOffersExposureEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t SubscriptionOffersExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionOffersExposureEvent(0) + 24);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionOffersExposureEvent.timedData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionOffersExposureEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionOffersExposureEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionOffersExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionOffersExposureEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionOffersExposureEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionOffersExposureEvent.channelData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionOffersExposureEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionOffersExposureEvent.campaignData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionOffersExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionOffersExposureEvent.campaignData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionOffersExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionOffersExposureEvent.campaignData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionOffersExposureEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionOffersExposureEvent.purchaseOffersData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionOffersExposureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionOffersExposureEvent.purchaseOffersData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionOffersExposureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionOffersExposureEvent.purchaseOffersData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionOffersExposureEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionOffersExposureEvent.purchaseSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionOffersExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionOffersExposureEvent.purchaseSessionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionOffersExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionOffersExposureEvent.purchaseSessionData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionOffersExposureEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionOffersExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionOffersExposureEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionOffersExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionOffersExposureEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionOffersExposureEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionOffersExposureEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionOffersExposureEvent.subscribeButtonContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionOffersExposureEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionOffersExposureEvent.subscribeButtonContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionOffersExposureEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionOffersExposureEvent.subscribeButtonContextData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionOffersExposureEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionOffersExposureEvent.subscriptionAdLocationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionOffersExposureEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C67E8, (void (*)(void))sub_1D59D30F8, (void (*)(void))sub_1D59D3140);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionOffersExposureEvent.subscriptionAdLocationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionOffersExposureEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C67E8, (void (*)(void))sub_1D59D30F8, (void (*)(void))sub_1D59D3140);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionOffersExposureEvent.subscriptionAdLocationData.modify())(_QWORD)
{
  type metadata accessor for SubscriptionOffersExposureEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionOffersExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for SubscriptionOffersExposureEvent(0);
  v5 = a1 + v4[5];
  v6 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = a1 + v4[6];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v6, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v2, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v6, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9C67E8, (void (*)(void))sub_1D59D30F8, (void (*)(void))sub_1D59D3140);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
}

uint64_t SubscriptionOffersExposureEvent.Model.adReferralData.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionOffersExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for SubscriptionOffersExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t type metadata accessor for SubscriptionOffersExposureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CBC80);
}

uint64_t SubscriptionOffersExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5824B58(type metadata accessor for SubscriptionOffersExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t SubscriptionOffersExposureEvent.Model.channelData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionOffersExposureEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57DD4CC(v4, v5);
}

uint64_t SubscriptionOffersExposureEvent.Model.campaignData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionOffersExposureEvent.Model(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1D5828094(v4, v5);
}

uint64_t SubscriptionOffersExposureEvent.Model.purchaseOffersData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for SubscriptionOffersExposureEvent.Model(0) + 36));
  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionOffersExposureEvent.Model.purchaseSessionData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for SubscriptionOffersExposureEvent.Model(0) + 40));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionOffersExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionOffersExposureEvent.Model(0) + 44);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(v3 + 48);
  return sub_1D58D9DD8(v4, v5, v6);
}

uint64_t SubscriptionOffersExposureEvent.Model.subscribeButtonContextData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SubscriptionOffersExposureEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t SubscriptionOffersExposureEvent.Model.subscriptionAdLocationData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SubscriptionOffersExposureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 52));
  return result;
}

__n128 SubscriptionOffersExposureEvent.Model.init(adReferralData:eventData:timedData:channelData:campaignData:purchaseOffersData:purchaseSessionData:userBundleSubscriptionContextData:subscribeButtonContextData:subscriptionAdLocationData:)@<Q0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, __n128 *a8@<X7>, _OWORD *a9@<X8>, __int16 *a10, char *a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  _QWORD *v26;
  __n128 *v27;
  __n128 result;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  __n128 v37;
  __n128 v38;
  __int16 v39;
  char v40;

  v29 = a4[1];
  v30 = *a4;
  v14 = *((_QWORD *)a4 + 4);
  v31 = a5[1];
  v32 = *a5;
  v15 = *((_QWORD *)a5 + 4);
  v16 = *((_QWORD *)a5 + 5);
  v17 = *a6;
  v18 = a7[1];
  v33 = *a7;
  v37 = a8[1];
  v38 = *a8;
  v35 = a8[2].n128_u64[1];
  v36 = a8[2].n128_u64[0];
  v34 = a8[3].n128_i8[0];
  v39 = *a10;
  v40 = *a11;
  *a9 = *a1;
  v19 = (int *)type metadata accessor for SubscriptionOffersExposureEvent.Model(0);
  v20 = (char *)a9 + v19[5];
  v21 = sub_1D5AADF98();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a2, v21);
  v22 = (char *)a9 + v19[6];
  v23 = sub_1D5AADFB0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22, a3, v23);
  v24 = (char *)a9 + v19[7];
  *(_OWORD *)v24 = v30;
  *((_OWORD *)v24 + 1) = v29;
  *((_QWORD *)v24 + 4) = v14;
  v25 = (char *)a9 + v19[8];
  *(_OWORD *)v25 = v32;
  *((_OWORD *)v25 + 1) = v31;
  *((_QWORD *)v25 + 4) = v15;
  *((_QWORD *)v25 + 5) = v16;
  *(_QWORD *)((char *)a9 + v19[9]) = v17;
  v26 = (_QWORD *)((char *)a9 + v19[10]);
  *v26 = v33;
  v26[1] = v18;
  v27 = (__n128 *)((char *)a9 + v19[11]);
  result = v37;
  *v27 = v38;
  v27[1] = v37;
  v27[2].n128_u64[0] = v36;
  v27[2].n128_u64[1] = v35;
  v27[3].n128_u8[0] = v34;
  *(_WORD *)((char *)a9 + v19[12]) = v39;
  *((_BYTE *)a9 + v19[13]) = v40;
  return result;
}

uint64_t sub_1D5A8E158(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A8E198 + 4 * byte_1D5AE8790[a1]))(0x7272656665526461, 0xEE00617461446C61);
}

uint64_t sub_1D5A8E198()
{
  return 0x746144746E657665;
}

uint64_t sub_1D5A8E1C4()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1D5A8E1E4()
{
  return 0x6E676961706D6163;
}

unint64_t sub_1D5A8E204()
{
  return 0xD000000000000012;
}

unint64_t sub_1D5A8E254()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1D5A8E27C()
{
  unsigned __int8 *v0;

  return sub_1D5A8E158(*v0);
}

uint64_t sub_1D5A8E284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A91BB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A8E2A8()
{
  sub_1D5A8E6DC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A8E2D0()
{
  sub_1D5A8E6DC();
  return sub_1D5AAEEE0();
}

uint64_t SubscriptionOffersExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  _OWORD *v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  char *v11;
  uint64_t v12;
  __int128 v13;
  __int128 *v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  __int128 v21;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  char v26;
  char v27;

  v3 = v1;
  sub_1D5A8EEA4(0, &qword_1EFF526A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A8E6DC();
  sub_1D5AAEEC8();
  v23 = *v3;
  v27 = 0;
  sub_1D58FB808();
  sub_1D5AAED18();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for SubscriptionOffersExposureEvent.Model(0);
    LOBYTE(v23) = 1;
    sub_1D5AADF98();
    sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
    sub_1D5AAED6C();
    LOBYTE(v23) = 2;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = (char *)v3 + v10[7];
    v12 = *((_QWORD *)v11 + 4);
    v13 = *((_OWORD *)v11 + 1);
    v23 = *(_OWORD *)v11;
    v24 = v13;
    *(_QWORD *)&v25 = v12;
    v27 = 3;
    sub_1D57CB8B8();
    sub_1D5AAED18();
    v14 = (_OWORD *)((char *)v3 + v10[8]);
    v15 = v14[1];
    v23 = *v14;
    v24 = v15;
    v25 = v14[2];
    v27 = 4;
    sub_1D57CB460();
    sub_1D5AAED18();
    *(_QWORD *)&v23 = *(_QWORD *)((char *)v3 + v10[9]);
    v27 = 5;
    sub_1D57C90A0();
    sub_1D5AAED18();
    v16 = (uint64_t *)((char *)v3 + v10[10]);
    v18 = *v16;
    v17 = v16[1];
    *(_QWORD *)&v23 = v18;
    *((_QWORD *)&v23 + 1) = v17;
    v27 = 6;
    sub_1D583239C();
    sub_1D5AAED6C();
    v19 = (char *)v3 + v10[11];
    v20 = v19[48];
    v21 = *((_OWORD *)v19 + 1);
    v23 = *(_OWORD *)v19;
    v24 = v21;
    v25 = *((_OWORD *)v19 + 2);
    v26 = v20;
    v27 = 7;
    sub_1D57C6B3C();
    sub_1D5AAED18();
    LOWORD(v23) = *(_WORD *)((char *)v3 + v10[12]);
    v27 = 8;
    sub_1D583270C();
    sub_1D5AAED18();
    LOBYTE(v23) = *((_BYTE *)v3 + v10[13]);
    v27 = 9;
    sub_1D59D3140();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A8E6DC()
{
  unint64_t result;

  result = qword_1EFF526B0;
  if (!qword_1EFF526B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE8A7C, &type metadata for SubscriptionOffersExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF526B0);
  }
  return result;
}

uint64_t SubscriptionOffersExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  char v44;
  char v45;

  v5 = sub_1D5AADFB0();
  v33 = *(_QWORD *)(v5 - 8);
  v34 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_1D5AADF98();
  v35 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A8EEA4(0, &qword_1EFF526B8, MEMORY[0x1E0DED048]);
  v36 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v31 - v12;
  v39 = type metadata accessor for SubscriptionOffersExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v39);
  v37 = a1;
  v38 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A8E6DC();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  v31 = a2;
  v32 = v11;
  v45 = 0;
  sub_1D58FB7C0();
  sub_1D5AAEC7C();
  v15 = v38;
  *(_OWORD *)v38 = v41;
  LOBYTE(v41) = 1;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v16 = v40;
  sub_1D5AAECD0();
  v17 = (int *)v39;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v15[*(int *)(v39 + 20)], v9, v16);
  LOBYTE(v41) = 2;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v18 = v34;
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v15[v17[6]], v7, v18);
  v45 = 3;
  sub_1D57CB874();
  sub_1D5AAEC7C();
  v19 = v43;
  v20 = &v15[v17[7]];
  v21 = v42;
  *(_OWORD *)v20 = v41;
  *((_OWORD *)v20 + 1) = v21;
  *((_QWORD *)v20 + 4) = v19;
  v45 = 4;
  sub_1D57CB41C();
  sub_1D5AAEC7C();
  v22 = &v15[v17[8]];
  v23 = v42;
  *(_OWORD *)v22 = v41;
  *((_OWORD *)v22 + 1) = v23;
  *((_OWORD *)v22 + 2) = v43;
  v45 = 5;
  sub_1D57C905C();
  sub_1D5AAEC7C();
  *(_QWORD *)&v15[v17[9]] = v41;
  v45 = 6;
  sub_1D5832358();
  sub_1D5AAECD0();
  v24 = *((_QWORD *)&v41 + 1);
  v25 = &v15[v17[10]];
  *(_QWORD *)v25 = v41;
  *((_QWORD *)v25 + 1) = v24;
  v45 = 7;
  sub_1D57C6AF8();
  sub_1D5AAEC7C();
  v26 = v44;
  v27 = &v15[v17[11]];
  v28 = v42;
  *(_OWORD *)v27 = v41;
  *((_OWORD *)v27 + 1) = v28;
  *((_OWORD *)v27 + 2) = v43;
  v27[48] = v26;
  v45 = 8;
  sub_1D58326C8();
  sub_1D5AAEC7C();
  *(_WORD *)&v15[v17[12]] = v41;
  v45 = 9;
  sub_1D59D30F8();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v36);
  v29 = (uint64_t)v38;
  v38[*(int *)(v39 + 52)] = v41;
  sub_1D5A8EF00(v29, v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  return sub_1D5A8EF44(v29);
}

void sub_1D5A8EEA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A8E6DC();
    v7 = a3(a1, &type metadata for SubscriptionOffersExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A8EF00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SubscriptionOffersExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A8EF44(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SubscriptionOffersExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A8EF80@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SubscriptionOffersExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A8EF94(_QWORD *a1)
{
  return SubscriptionOffersExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A8EFA8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF474D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF52678, a1);
}

uint64_t sub_1D5A8EFCC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF474D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF52690, a1);
}

uint64_t sub_1D5A8EFF0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  v7 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  v9 = a2 + a1[6];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v7, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v4, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v7, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1ED9C67E8, (void (*)(void))sub_1D59D30F8, (void (*)(void))sub_1D59D3140);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
}

uint64_t *initializeBufferWithCopyOfBuffer for SubscriptionOffersExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8D40();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9C67E8, (void (*)(void))sub_1D59D30F8, (void (*)(void))sub_1D59D3140);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for SubscriptionOffersExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9C67E8, (void (*)(void))sub_1D59D30F8, (void (*)(void))sub_1D59D3140);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
}

uint64_t initializeWithCopy for SubscriptionOffersExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C67E8, (void (*)(void))sub_1D59D30F8, (void (*)(void))sub_1D59D3140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for SubscriptionOffersExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C67E8, (void (*)(void))sub_1D59D30F8, (void (*)(void))sub_1D59D3140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for SubscriptionOffersExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C67E8, (void (*)(void))sub_1D59D30F8, (void (*)(void))sub_1D59D3140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for SubscriptionOffersExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C67E8, (void (*)(void))sub_1D59D30F8, (void (*)(void))sub_1D59D3140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionOffersExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A903EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8D40();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D57A8C9C();
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C67E8, (void (*)(void))sub_1D59D30F8, (void (*)(void))sub_1D59D3140);
                    v8 = v21;
                    v12 = *(_QWORD *)(v21 - 8);
                    v13 = a3[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SubscriptionOffersExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A9068C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1D579E208(0, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8D40();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D57A8C9C();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C67E8, (void (*)(void))sub_1D59D30F8, (void (*)(void))sub_1D59D3140);
                    v10 = v23;
                    v14 = *(_QWORD *)(v23 - 8);
                    v15 = a4[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5A90928()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  sub_1D579E208(319, &qword_1ED9C7160, (void (*)(void))sub_1D58FB7C0, (void (*)(void))sub_1D58FB808);
  if (v0 <= 0x3F)
  {
    sub_1D57A8D40();
    if (v1 <= 0x3F)
    {
      sub_1D57A8C9C();
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C71D8, (void (*)(void))sub_1D57C905C, (void (*)(void))sub_1D57C90A0);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C71F8, (void (*)(void))sub_1D5832358, (void (*)(void))sub_1D583239C);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                if (v7 <= 0x3F)
                {
                  sub_1D579E208(319, &qword_1ED9C7260, (void (*)(void))sub_1D58326C8, (void (*)(void))sub_1D583270C);
                  if (v8 <= 0x3F)
                  {
                    sub_1D579E208(319, &qword_1ED9C67E8, (void (*)(void))sub_1D59D30F8, (void (*)(void))sub_1D59D3140);
                    if (v9 <= 0x3F)
                      swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for SubscriptionOffersExposureEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADF98();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[7];
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    v20 = *((_QWORD *)v19 + 1);
    if (v20)
    {
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *((_QWORD *)v18 + 1) = v20;
      *((_WORD *)v18 + 8) = *((_WORD *)v19 + 8);
      v21 = *((_QWORD *)v19 + 4);
      *((_QWORD *)v18 + 3) = *((_QWORD *)v19 + 3);
      *((_QWORD *)v18 + 4) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v23 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v23;
      *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
    }
    v24 = a3[8];
    v25 = (_QWORD *)((char *)v4 + v24);
    v26 = (_QWORD *)((char *)a2 + v24);
    v27 = v26[1];
    if (v27)
    {
      *v25 = *v26;
      v25[1] = v27;
      v28 = v26[3];
      v25[2] = v26[2];
      v25[3] = v28;
      v29 = v26[5];
      v25[4] = v26[4];
      v25[5] = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v30 = *((_OWORD *)v26 + 1);
      *(_OWORD *)v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v30;
      *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
    }
    v31 = a3[10];
    *(_QWORD *)((char *)v4 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
    v32 = (_QWORD *)((char *)v4 + v31);
    v33 = (_QWORD *)((char *)a2 + v31);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = a3[11];
    v36 = (char *)v4 + v35;
    v37 = (char *)a2 + v35;
    v38 = *(_QWORD *)((char *)a2 + v35 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v38 == 1)
    {
      v39 = *((_OWORD *)v37 + 1);
      *(_OWORD *)v36 = *(_OWORD *)v37;
      *((_OWORD *)v36 + 1) = v39;
      *((_OWORD *)v36 + 2) = *((_OWORD *)v37 + 2);
      v36[48] = v37[48];
    }
    else
    {
      *v36 = *v37;
      *((_QWORD *)v36 + 1) = *((_QWORD *)v37 + 1);
      *((_QWORD *)v36 + 2) = v38;
      *((_WORD *)v36 + 12) = *((_WORD *)v37 + 12);
      v40 = *((_QWORD *)v37 + 5);
      *((_QWORD *)v36 + 4) = *((_QWORD *)v37 + 4);
      *((_QWORD *)v36 + 5) = v40;
      v36[48] = v37[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v41 = a3[13];
    *(_WORD *)((char *)v4 + a3[12]) = *(_WORD *)((char *)a2 + a3[12]);
    *((_BYTE *)v4 + v41) = *((_BYTE *)a2 + v41);
  }
  return v4;
}

uint64_t destroy for SubscriptionOffersExposureEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  if (*(_QWORD *)(a1 + a2[7] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[8] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + a2[11] + 16);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for SubscriptionOffersExposureEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D5AADF98();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1D5AADFB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *((_QWORD *)v18 + 1);
  if (v19)
  {
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *((_QWORD *)v17 + 1) = v19;
    *((_WORD *)v17 + 8) = *((_WORD *)v18 + 8);
    v20 = *((_QWORD *)v18 + 4);
    *((_QWORD *)v17 + 3) = *((_QWORD *)v18 + 3);
    *((_QWORD *)v17 + 4) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *((_OWORD *)v18 + 1);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v21;
    *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
  }
  v22 = a3[8];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = v24[1];
  if (v25)
  {
    *v23 = *v24;
    v23[1] = v25;
    v26 = v24[3];
    v23[2] = v24[2];
    v23[3] = v26;
    v27 = v24[5];
    v23[4] = v24[4];
    v23[5] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v28 = *((_OWORD *)v24 + 1);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = v28;
    *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
  }
  v29 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (_QWORD *)((char *)a2 + v29);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  v33 = a3[11];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = *(_QWORD *)((char *)a2 + v33 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v36 == 1)
  {
    v37 = *((_OWORD *)v35 + 1);
    *(_OWORD *)v34 = *(_OWORD *)v35;
    *((_OWORD *)v34 + 1) = v37;
    *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
    v34[48] = v35[48];
  }
  else
  {
    *v34 = *v35;
    *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
    *((_QWORD *)v34 + 2) = v36;
    *((_WORD *)v34 + 12) = *((_WORD *)v35 + 12);
    v38 = *((_QWORD *)v35 + 5);
    *((_QWORD *)v34 + 4) = *((_QWORD *)v35 + 4);
    *((_QWORD *)v34 + 5) = v38;
    v34[48] = v35[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v39 = a3[13];
  *(_WORD *)((char *)a1 + a3[12]) = *(_WORD *)((char *)a2 + a3[12]);
  *((_BYTE *)a1 + v39) = *((_BYTE *)a2 + v39);
  return a1;
}

_QWORD *assignWithCopy for SubscriptionOffersExposureEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D5AADF98();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1D5AADFB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[7];
  v15 = (uint64_t)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = *(_QWORD *)((char *)a1 + v14 + 8);
  v18 = *(_QWORD *)((char *)a2 + v14 + 8);
  if (v17)
  {
    if (v18)
    {
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *(_QWORD *)(v15 + 8) = *((_QWORD *)v16 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v15 + 16) = v16[16];
      *(_BYTE *)(v15 + 17) = v16[17];
      *(_QWORD *)(v15 + 24) = *((_QWORD *)v16 + 3);
      *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E1784(v15);
      v19 = *((_QWORD *)v16 + 4);
      v20 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *(_OWORD *)(v15 + 16) = v20;
      *(_QWORD *)(v15 + 32) = v19;
    }
  }
  else if (v18)
  {
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *(_QWORD *)(v15 + 8) = *((_QWORD *)v16 + 1);
    *(_BYTE *)(v15 + 16) = v16[16];
    *(_BYTE *)(v15 + 17) = v16[17];
    *(_QWORD *)(v15 + 24) = *((_QWORD *)v16 + 3);
    *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *(_OWORD *)v16;
    v22 = *((_OWORD *)v16 + 1);
    *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
    *(_OWORD *)v15 = v21;
    *(_OWORD *)(v15 + 16) = v22;
  }
  v23 = a3[8];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  v26 = *(_QWORD *)((char *)a1 + v23 + 8);
  v27 = *(_QWORD *)((char *)a2 + v23 + 8);
  if (v26)
  {
    if (v27)
    {
      *v24 = *v25;
      v24[1] = v25[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v24[2] = v25[2];
      v24[3] = v25[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v24[4] = v25[4];
      v24[5] = v25[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D5829E98((uint64_t)v24);
      v29 = *((_OWORD *)v25 + 1);
      v28 = *((_OWORD *)v25 + 2);
      *(_OWORD *)v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v29;
      *((_OWORD *)v24 + 2) = v28;
    }
  }
  else if (v27)
  {
    *v24 = *v25;
    v24[1] = v25[1];
    v24[2] = v25[2];
    v24[3] = v25[3];
    v24[4] = v25[4];
    v24[5] = v25[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v30 = *(_OWORD *)v25;
    v31 = *((_OWORD *)v25 + 2);
    *((_OWORD *)v24 + 1) = *((_OWORD *)v25 + 1);
    *((_OWORD *)v24 + 2) = v31;
    *(_OWORD *)v24 = v30;
  }
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = a3[10];
  v33 = (_QWORD *)((char *)a1 + v32);
  v34 = (_QWORD *)((char *)a2 + v32);
  *v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35 = a3[11];
  v36 = (uint64_t)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = *(_QWORD *)((char *)a1 + v35 + 16);
  v39 = *(_QWORD *)((char *)a2 + v35 + 16);
  if (v38 == 1)
  {
    if (v39 == 1)
    {
      v40 = *(_OWORD *)v37;
      v41 = *((_OWORD *)v37 + 1);
      v42 = *((_OWORD *)v37 + 2);
      *(_BYTE *)(v36 + 48) = v37[48];
      *(_OWORD *)(v36 + 16) = v41;
      *(_OWORD *)(v36 + 32) = v42;
      *(_OWORD *)v36 = v40;
    }
    else
    {
      *(_BYTE *)v36 = *v37;
      *(_QWORD *)(v36 + 8) = *((_QWORD *)v37 + 1);
      *(_QWORD *)(v36 + 16) = *((_QWORD *)v37 + 2);
      *(_BYTE *)(v36 + 24) = v37[24];
      *(_BYTE *)(v36 + 25) = v37[25];
      *(_QWORD *)(v36 + 32) = *((_QWORD *)v37 + 4);
      *(_QWORD *)(v36 + 40) = *((_QWORD *)v37 + 5);
      *(_BYTE *)(v36 + 48) = v37[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v39 == 1)
  {
    sub_1D5971944(v36);
    v44 = *((_OWORD *)v37 + 1);
    v43 = *((_OWORD *)v37 + 2);
    v45 = *(_OWORD *)v37;
    *(_BYTE *)(v36 + 48) = v37[48];
    *(_OWORD *)(v36 + 16) = v44;
    *(_OWORD *)(v36 + 32) = v43;
    *(_OWORD *)v36 = v45;
  }
  else
  {
    *(_BYTE *)v36 = *v37;
    *(_QWORD *)(v36 + 8) = *((_QWORD *)v37 + 1);
    *(_QWORD *)(v36 + 16) = *((_QWORD *)v37 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v36 + 24) = v37[24];
    *(_BYTE *)(v36 + 25) = v37[25];
    *(_QWORD *)(v36 + 32) = *((_QWORD *)v37 + 4);
    *(_QWORD *)(v36 + 40) = *((_QWORD *)v37 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v36 + 48) = v37[48];
  }
  *(_WORD *)((char *)a1 + a3[12]) = *(_WORD *)((char *)a2 + a3[12]);
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  return a1;
}

_OWORD *initializeWithTake for SubscriptionOffersExposureEvent.Model(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int128 v27;
  __int128 v28;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D5AADF98();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1D5AADFB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[7];
  v15 = a3[8];
  v16 = (char *)a1 + v14;
  v17 = (char *)a2 + v14;
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
  v19 = (_OWORD *)((char *)a1 + v15);
  v20 = (_OWORD *)((char *)a2 + v15);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v19[2] = v20[2];
  v22 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v22) = *(_OWORD *)((char *)a2 + v22);
  v23 = a3[11];
  v24 = a3[12];
  v25 = (char *)a1 + v23;
  v26 = (char *)a2 + v23;
  v27 = *((_OWORD *)v26 + 1);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v27;
  v28 = *((_OWORD *)v26 + 2);
  v25[48] = v26[48];
  *((_OWORD *)v25 + 2) = v28;
  *(_WORD *)((char *)a1 + v24) = *(_WORD *)((char *)a2 + v24);
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  return a1;
}

_QWORD *assignWithTake for SubscriptionOffersExposureEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D5AADF98();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1D5AADFB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = (uint64_t)a1 + v15;
  v17 = (char *)a2 + v15;
  if (*(_QWORD *)((char *)a1 + v15 + 8))
  {
    v18 = *((_QWORD *)v17 + 1);
    if (v18)
    {
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *(_QWORD *)(v16 + 8) = v18;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v16 + 16) = v17[16];
      *(_BYTE *)(v16 + 17) = v17[17];
      v19 = *((_QWORD *)v17 + 4);
      *(_QWORD *)(v16 + 24) = *((_QWORD *)v17 + 3);
      *(_QWORD *)(v16 + 32) = v19;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D57E1784(v16);
  }
  v20 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v20;
  *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
LABEL_6:
  v21 = a3[8];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  if (*(_QWORD *)((char *)a1 + v21 + 8))
  {
    v24 = v23[1];
    if (v24)
    {
      *v22 = *v23;
      v22[1] = v24;
      swift_bridgeObjectRelease();
      v25 = v23[3];
      v22[2] = v23[2];
      v22[3] = v25;
      swift_bridgeObjectRelease();
      v26 = v23[5];
      v22[4] = v23[4];
      v22[5] = v26;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D5829E98((uint64_t)v22);
  }
  v27 = *((_OWORD *)v23 + 1);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v27;
  *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
LABEL_11:
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  v28 = a3[10];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  v32 = *v30;
  v31 = v30[1];
  *v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  v33 = a3[11];
  v34 = (uint64_t)a1 + v33;
  v35 = (char *)a2 + v33;
  if (*(_QWORD *)((char *)a1 + v33 + 16) != 1)
  {
    v36 = *((_QWORD *)v35 + 2);
    if (v36 != 1)
    {
      *(_BYTE *)v34 = *v35;
      *(_QWORD *)(v34 + 8) = *((_QWORD *)v35 + 1);
      *(_QWORD *)(v34 + 16) = v36;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v34 + 24) = v35[24];
      *(_BYTE *)(v34 + 25) = v35[25];
      v38 = *((_QWORD *)v35 + 5);
      *(_QWORD *)(v34 + 32) = *((_QWORD *)v35 + 4);
      *(_QWORD *)(v34 + 40) = v38;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1D5971944(v34);
  }
  v37 = *((_OWORD *)v35 + 1);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v37;
  *(_OWORD *)(v34 + 32) = *((_OWORD *)v35 + 2);
LABEL_16:
  *(_BYTE *)(v34 + 48) = v35[48];
  v39 = a3[13];
  *(_WORD *)((char *)a1 + a3[12]) = *(_WORD *)((char *)a2 + a3[12]);
  *((_BYTE *)a1 + v39) = *((_BYTE *)a2 + v39);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionOffersExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A917E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = sub_1D5AADFB0();
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(_QWORD *)(a1 + a3[10] + 8);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionOffersExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A91898(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_QWORD *)(a1 + a4[10] + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5A9193C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SubscriptionOffersExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1D5A91A5C + 4 * byte_1D5AE879F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1D5A91A90 + 4 * byte_1D5AE879A[v4]))();
}

uint64_t sub_1D5A91A90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A91A98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A91AA0);
  return result;
}

uint64_t sub_1D5A91AAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A91AB4);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1D5A91AB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A91AC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionOffersExposureEvent.Model.CodingKeys()
{
  return &type metadata for SubscriptionOffersExposureEvent.Model.CodingKeys;
}

unint64_t sub_1D5A91AE0()
{
  unint64_t result;

  result = qword_1EFF526C0;
  if (!qword_1EFF526C0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE8A54, &type metadata for SubscriptionOffersExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF526C0);
  }
  return result;
}

unint64_t sub_1D5A91B28()
{
  unint64_t result;

  result = qword_1EFF526C8;
  if (!qword_1EFF526C8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE89C4, &type metadata for SubscriptionOffersExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF526C8);
  }
  return result;
}

unint64_t sub_1D5A91B70()
{
  unint64_t result;

  result = qword_1EFF526D0;
  if (!qword_1EFF526D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE89EC, &type metadata for SubscriptionOffersExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF526D0);
  }
  return result;
}

uint64_t sub_1D5A91BB4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7272656665526461 && a2 == 0xEE00617461446C61;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E676961706D6163 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5AF1020 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AED700 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AED720 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AF2B70)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_1D5A91FF8(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EFF526D8, MEMORY[0x1E0CF8078]);
}

uint64_t static NotificationReceivedEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF474E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF526D8, a1);
}

uint64_t sub_1D5A92038(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EFF526F0, MEMORY[0x1E0CF8380]);
}

uint64_t static NotificationReceivedEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF474E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF526F0, a1);
}

uint64_t NotificationReceivedEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t NotificationReceivedEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*NotificationReceivedEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NotificationReceivedEvent.notificationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationReceivedEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for NotificationReceivedEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF52780);
}

uint64_t NotificationReceivedEvent.notificationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationReceivedEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NotificationReceivedEvent.notificationData.modify())(_QWORD)
{
  type metadata accessor for NotificationReceivedEvent(0);
  return nullsub_1;
}

uint64_t NotificationReceivedEvent.notificationStatusData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationReceivedEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF52708, (void (*)(void))sub_1D584812C, (void (*)(void))sub_1D5848174);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NotificationReceivedEvent.notificationStatusData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationReceivedEvent(0) + 24);
  sub_1D579E208(0, &qword_1EFF52708, (void (*)(void))sub_1D584812C, (void (*)(void))sub_1D5848174);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NotificationReceivedEvent.notificationStatusData.modify())(_QWORD)
{
  type metadata accessor for NotificationReceivedEvent(0);
  return nullsub_1;
}

uint64_t NotificationReceivedEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationReceivedEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NotificationReceivedEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationReceivedEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NotificationReceivedEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for NotificationReceivedEvent(0);
  return nullsub_1;
}

uint64_t NotificationReceivedEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationReceivedEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NotificationReceivedEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationReceivedEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NotificationReceivedEvent.userChannelContextData.modify())(_QWORD)
{
  type metadata accessor for NotificationReceivedEvent(0);
  return nullsub_1;
}

uint64_t NotificationReceivedEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationReceivedEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NotificationReceivedEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationReceivedEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NotificationReceivedEvent.channelData.modify())(_QWORD)
{
  type metadata accessor for NotificationReceivedEvent(0);
  return nullsub_1;
}

uint64_t NotificationReceivedEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for NotificationReceivedEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, &qword_1EFF52708, (void (*)(void))sub_1D584812C, (void (*)(void))sub_1D5848174);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v12, v15);
}

uint64_t NotificationReceivedEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t NotificationReceivedEvent.Model.notificationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  __int128 v9;

  v3 = v1 + *(int *)(type metadata accessor for NotificationReceivedEvent.Model(0) + 20);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(_QWORD *)(v3 + 64);
  v8 = *(_WORD *)(v3 + 72);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v9 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 64) = v7;
  *(_WORD *)(a1 + 72) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for NotificationReceivedEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF52820);
}

uint64_t NotificationReceivedEvent.Model.notificationStatusData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NotificationReceivedEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t NotificationReceivedEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for NotificationReceivedEvent.Model(0) + 28));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t NotificationReceivedEvent.Model.userChannelContextData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NotificationReceivedEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t NotificationReceivedEvent.Model.channelData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NotificationReceivedEvent.Model(0) + 36));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1D57DD4CC(v4, v5);
}

__n128 NotificationReceivedEvent.Model.init(eventData:notificationData:notificationStatusData:userBundleSubscriptionContextData:userChannelContextData:channelData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, char *a4@<X3>, int *a5@<X4>, __int128 *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  char v15;
  char v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 result;
  __int128 v23;
  __int128 v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  __n128 v34;
  __int128 v35;

  v9 = *a2;
  v10 = a2[1];
  v11 = *((_BYTE *)a2 + 16);
  v23 = *(_OWORD *)(a2 + 5);
  v24 = *(_OWORD *)(a2 + 3);
  v12 = a2[7];
  v13 = a2[8];
  v14 = *((_WORD *)a2 + 36);
  v15 = *a3;
  v16 = *a4;
  v30 = *((_QWORD *)a4 + 2);
  v31 = *((_QWORD *)a4 + 1);
  v28 = a4[25];
  v29 = a4[24];
  v26 = *((_QWORD *)a4 + 5);
  v27 = *((_QWORD *)a4 + 4);
  v25 = a4[48];
  v32 = *a5;
  v35 = *a6;
  v34 = (__n128)a6[1];
  v33 = *((_QWORD *)a6 + 4);
  v17 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a7, a1, v17);
  v18 = (int *)type metadata accessor for NotificationReceivedEvent.Model(0);
  v19 = a7 + v18[5];
  *(_QWORD *)v19 = v9;
  *(_QWORD *)(v19 + 8) = v10;
  *(_BYTE *)(v19 + 16) = v11;
  *(_OWORD *)(v19 + 24) = v24;
  *(_OWORD *)(v19 + 40) = v23;
  *(_QWORD *)(v19 + 56) = v12;
  *(_QWORD *)(v19 + 64) = v13;
  *(_WORD *)(v19 + 72) = v14;
  *(_BYTE *)(a7 + v18[6]) = v15;
  v20 = a7 + v18[7];
  *(_BYTE *)v20 = v16;
  *(_QWORD *)(v20 + 8) = v31;
  *(_QWORD *)(v20 + 16) = v30;
  *(_BYTE *)(v20 + 24) = v29;
  *(_BYTE *)(v20 + 25) = v28;
  *(_QWORD *)(v20 + 32) = v27;
  *(_QWORD *)(v20 + 40) = v26;
  *(_BYTE *)(v20 + 48) = v25;
  *(_DWORD *)(a7 + v18[8]) = v32;
  v21 = a7 + v18[9];
  result = v34;
  *(_OWORD *)v21 = v35;
  *(__n128 *)(v21 + 16) = v34;
  *(_QWORD *)(v21 + 32) = v33;
  return result;
}

uint64_t sub_1D5A92AA4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A92ADC + 4 * byte_1D5AE8AD0[a1]))(0x746144746E657665, 0xE900000000000061);
}

unint64_t sub_1D5A92ADC()
{
  return 0xD000000000000010;
}

uint64_t sub_1D5A92B3C()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1D5A92B5C()
{
  unsigned __int8 *v0;

  return sub_1D5A92AA4(*v0);
}

uint64_t sub_1D5A92B64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A95228(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A92B88()
{
  sub_1D5A92EB8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A92BB0()
{
  sub_1D5A92EB8();
  return sub_1D5AAEEE0();
}

uint64_t NotificationReceivedEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char v12;
  __int16 v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v22;
  char v23;
  _BYTE v24[56];
  __int128 v25;
  __int16 v26;

  v3 = v1;
  sub_1D5A933A8(0, &qword_1EFF52710, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A92EB8();
  sub_1D5AAEEC8();
  v24[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for NotificationReceivedEvent.Model(0);
    v11 = v3 + v10[5];
    v12 = *(_BYTE *)(v11 + 16);
    v13 = *(_WORD *)(v11 + 72);
    *(_OWORD *)v24 = *(_OWORD *)v11;
    v24[16] = v12;
    *(_OWORD *)&v24[24] = *(_OWORD *)(v11 + 24);
    *(_OWORD *)&v24[40] = *(_OWORD *)(v11 + 40);
    v25 = *(_OWORD *)(v11 + 56);
    v26 = v13;
    v23 = 1;
    sub_1D57C99E4();
    sub_1D5AAED6C();
    v24[0] = *(_BYTE *)(v3 + v10[6]);
    v23 = 2;
    sub_1D5848174();
    sub_1D5AAED6C();
    v14 = v3 + v10[7];
    v15 = *(_BYTE *)(v14 + 24);
    v16 = *(_BYTE *)(v14 + 25);
    v17 = *(_BYTE *)(v14 + 48);
    v24[0] = *(_BYTE *)v14;
    *(_OWORD *)&v24[8] = *(_OWORD *)(v14 + 8);
    v24[24] = v15;
    v24[25] = v16;
    *(_OWORD *)&v24[32] = *(_OWORD *)(v14 + 32);
    v24[48] = v17;
    v23 = 3;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    *(_DWORD *)v24 = *(_DWORD *)(v3 + v10[8]);
    v23 = 4;
    sub_1D57C7B24();
    sub_1D5AAED18();
    v18 = v3 + v10[9];
    v19 = *(_QWORD *)(v18 + 32);
    v20 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)v24 = *(_OWORD *)v18;
    *(_OWORD *)&v24[16] = v20;
    *(_QWORD *)&v24[32] = v19;
    v23 = 5;
    sub_1D57CB8B8();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A92EB8()
{
  unint64_t result;

  result = qword_1EFF52718;
  if (!qword_1EFF52718)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE8D2C, &type metadata for NotificationReceivedEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52718);
  }
  return result;
}

uint64_t NotificationReceivedEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int16 v16;
  char *v17;
  char v18;
  char v19;
  char v20;
  char *v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  _QWORD *v31;
  _BYTE v32[56];
  __int128 v33;
  __int16 v34;
  char v35;

  v26 = a2;
  v3 = sub_1D5AADF98();
  v27 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v29 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A933A8(0, &qword_1EFF52720, MEMORY[0x1E0DED048]);
  v28 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - v7;
  v9 = (int *)type metadata accessor for NotificationReceivedEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A92EB8();
  v30 = v8;
  v12 = (uint64_t)v31;
  sub_1D5AAEEB0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v31 = a1;
  v14 = v27;
  v32[0] = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v29, v3);
  v35 = 1;
  sub_1D57C99A0();
  sub_1D5AAECD0();
  v15 = v32[16];
  v16 = v34;
  v17 = &v11[v9[5]];
  *(_OWORD *)v17 = *(_OWORD *)v32;
  v17[16] = v15;
  *(_OWORD *)(v17 + 24) = *(_OWORD *)&v32[24];
  *(_OWORD *)(v17 + 40) = *(_OWORD *)&v32[40];
  *(_OWORD *)(v17 + 56) = v33;
  *((_WORD *)v17 + 36) = v16;
  v35 = 2;
  sub_1D584812C();
  sub_1D5AAECD0();
  v11[v9[6]] = v32[0];
  v35 = 3;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v18 = v32[24];
  v19 = v32[25];
  v20 = v32[48];
  v21 = &v11[v9[7]];
  *v21 = v32[0];
  *(_OWORD *)(v21 + 8) = *(_OWORD *)&v32[8];
  v21[24] = v18;
  v21[25] = v19;
  *((_OWORD *)v21 + 2) = *(_OWORD *)&v32[32];
  v21[48] = v20;
  v35 = 4;
  sub_1D57C7AE0();
  sub_1D5AAEC7C();
  *(_DWORD *)&v11[v9[8]] = *(_DWORD *)v32;
  v35 = 5;
  sub_1D57CB874();
  sub_1D5AAEC7C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v30, v28);
  v22 = *(_QWORD *)&v32[32];
  v23 = &v11[v9[9]];
  v24 = *(_OWORD *)&v32[16];
  *(_OWORD *)v23 = *(_OWORD *)v32;
  *((_OWORD *)v23 + 1) = v24;
  *((_QWORD *)v23 + 4) = v22;
  sub_1D5A93404((uint64_t)v11, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return sub_1D5A93448((uint64_t)v11);
}

void sub_1D5A933A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A92EB8();
    v7 = a3(a1, &type metadata for NotificationReceivedEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A93404(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NotificationReceivedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A93448(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NotificationReceivedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A93484@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NotificationReceivedEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A93498(_QWORD *a1)
{
  return NotificationReceivedEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A934AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF474E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF526D8, a1);
}

uint64_t sub_1D5A934D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF474E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF526F0, a1);
}

uint64_t sub_1D5A934F4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, &qword_1EFF52708, (void (*)(void))sub_1D584812C, (void (*)(void))sub_1D5848174);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  v13 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v13, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for NotificationReceivedEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1EFF52708, (void (*)(void))sub_1D584812C, (void (*)(void))sub_1D5848174);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for NotificationReceivedEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1EFF52708, (void (*)(void))sub_1D584812C, (void (*)(void))sub_1D5848174);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

uint64_t initializeWithCopy for NotificationReceivedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF52708, (void (*)(void))sub_1D584812C, (void (*)(void))sub_1D5848174);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for NotificationReceivedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF52708, (void (*)(void))sub_1D584812C, (void (*)(void))sub_1D5848174);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for NotificationReceivedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF52708, (void (*)(void))sub_1D584812C, (void (*)(void))sub_1D5848174);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for NotificationReceivedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1EFF52708, (void (*)(void))sub_1D584812C, (void (*)(void))sub_1D5848174);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationReceivedEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A941A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF52708, (void (*)(void))sub_1D584812C, (void (*)(void))sub_1D5848174);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for NotificationReceivedEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A94358(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1EFF52708, (void (*)(void))sub_1D584812C, (void (*)(void))sub_1D5848174);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5A94504()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9C71A8, (void (*)(void))sub_1D57C99A0, (void (*)(void))sub_1D57C99E4);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1EFF52708, (void (*)(void))sub_1D584812C, (void (*)(void))sub_1D5848174);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7228, (void (*)(void))sub_1D57C7AE0, (void (*)(void))sub_1D57C7B24);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for NotificationReceivedEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v10[16] = v11[16];
    v13 = *((_QWORD *)v11 + 4);
    *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 4) = v13;
    v14 = *((_QWORD *)v11 + 6);
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 6) = v14;
    v15 = *((_QWORD *)v11 + 8);
    *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
    *((_QWORD *)v10 + 8) = v15;
    *((_WORD *)v10 + 36) = *((_WORD *)v11 + 36);
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v16 = a3[7];
    v17 = a3[8];
    v18 = (char *)a1 + v16;
    v19 = (char *)a2 + v16;
    *v18 = *v19;
    v20 = *((_QWORD *)v19 + 2);
    *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
    *((_QWORD *)v18 + 2) = v20;
    *((_WORD *)v18 + 12) = *((_WORD *)v19 + 12);
    v18[48] = v19[48];
    v21 = *((_QWORD *)v19 + 5);
    *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
    *((_QWORD *)v18 + 5) = v21;
    *(_DWORD *)((char *)a1 + v17) = *(_DWORD *)((char *)a2 + v17);
    v22 = a3[9];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = *(_QWORD *)((char *)a2 + v22 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v25)
    {
      *(_QWORD *)v23 = *(_QWORD *)v24;
      *((_QWORD *)v23 + 1) = v25;
      *((_WORD *)v23 + 8) = *((_WORD *)v24 + 8);
      v26 = *((_QWORD *)v24 + 3);
      v27 = *((_QWORD *)v24 + 4);
      *((_QWORD *)v23 + 3) = v26;
      *((_QWORD *)v23 + 4) = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v29 = *((_OWORD *)v24 + 1);
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v29;
      *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
    }
  }
  return a1;
}

uint64_t destroy for NotificationReceivedEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + *(int *)(a2 + 36) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for NotificationReceivedEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v9 + 24) = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 32) = v12;
  v13 = *(_QWORD *)(v10 + 48);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 48) = v13;
  v14 = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v9 + 56) = *(_QWORD *)(v10 + 56);
  *(_QWORD *)(v9 + 64) = v14;
  *(_WORD *)(v9 + 72) = *(_WORD *)(v10 + 72);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_BYTE *)v17 = *(_BYTE *)v18;
  v19 = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  *(_QWORD *)(v17 + 16) = v19;
  *(_WORD *)(v17 + 24) = *(_WORD *)(v18 + 24);
  *(_BYTE *)(v17 + 48) = *(_BYTE *)(v18 + 48);
  v20 = *(_QWORD *)(v18 + 40);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 40) = v20;
  *(_DWORD *)(a1 + v16) = *(_DWORD *)(a2 + v16);
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(_QWORD *)(a2 + v21 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24)
  {
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *(_QWORD *)(v22 + 8) = v24;
    *(_WORD *)(v22 + 16) = *(_WORD *)(v23 + 16);
    v25 = *(_QWORD *)(v23 + 24);
    v26 = *(_QWORD *)(v23 + 32);
    *(_QWORD *)(v22 + 24) = v25;
    *(_QWORD *)(v22 + 32) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v27 = *(_OWORD *)(v23 + 16);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 16) = v27;
    *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for NotificationReceivedEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 72) = *(_BYTE *)(v9 + 72);
  *(_BYTE *)(v8 + 73) = *(_BYTE *)(v9 + 73);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_BYTE *)v11 = *(_BYTE *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(a2 + v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 24) = *(_BYTE *)(v12 + 24);
  *(_BYTE *)(v11 + 25) = *(_BYTE *)(v12 + 25);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  *(_QWORD *)(v11 + 40) = *(_QWORD *)(v12 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 48) = *(_BYTE *)(v12 + 48);
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  v13 = a3[9];
  v14 = a1 + v13;
  v15 = (__int128 *)(a2 + v13);
  v16 = *(_QWORD *)(a1 + v13 + 8);
  v17 = *((_QWORD *)v15 + 1);
  if (v16)
  {
    if (v17)
    {
      *(_QWORD *)v14 = *(_QWORD *)v15;
      *(_QWORD *)(v14 + 8) = *((_QWORD *)v15 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v14 + 16) = *((_BYTE *)v15 + 16);
      *(_BYTE *)(v14 + 17) = *((_BYTE *)v15 + 17);
      *(_QWORD *)(v14 + 24) = *((_QWORD *)v15 + 3);
      *(_QWORD *)(v14 + 32) = *((_QWORD *)v15 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E1784(v14);
      v18 = *((_QWORD *)v15 + 4);
      v19 = v15[1];
      *(_OWORD *)v14 = *v15;
      *(_OWORD *)(v14 + 16) = v19;
      *(_QWORD *)(v14 + 32) = v18;
    }
  }
  else if (v17)
  {
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *(_QWORD *)(v14 + 8) = *((_QWORD *)v15 + 1);
    *(_BYTE *)(v14 + 16) = *((_BYTE *)v15 + 16);
    *(_BYTE *)(v14 + 17) = *((_BYTE *)v15 + 17);
    *(_QWORD *)(v14 + 24) = *((_QWORD *)v15 + 3);
    *(_QWORD *)(v14 + 32) = *((_QWORD *)v15 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *v15;
    v21 = v15[1];
    *(_QWORD *)(v14 + 32) = *((_QWORD *)v15 + 4);
    *(_OWORD *)v14 = v20;
    *(_OWORD *)(v14 + 16) = v21;
  }
  return a1;
}

uint64_t initializeWithTake for NotificationReceivedEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_OWORD *)(a1 + v7);
  v10 = (_OWORD *)(a2 + v7);
  v11 = v10[3];
  v9[2] = v10[2];
  v9[3] = v11;
  *(_OWORD *)((char *)v9 + 58) = *(_OWORD *)((char *)v10 + 58);
  v12 = v10[1];
  *v9 = *v10;
  v9[1] = v12;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = (__int128 *)(a2 + v13);
  v17 = *v16;
  v18 = v16[1];
  v19 = v16[2];
  *(_BYTE *)(v15 + 48) = *((_BYTE *)v16 + 48);
  *(_OWORD *)v15 = v17;
  *(_OWORD *)(v15 + 16) = v18;
  *(_OWORD *)(v15 + 32) = v19;
  *(_DWORD *)(a1 + v14) = *(_DWORD *)(a2 + v14);
  v20 = a3[9];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  return a1;
}

uint64_t assignWithTake for NotificationReceivedEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v9 + 64);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_QWORD *)(v8 + 64) = v13;
  swift_bridgeObjectRelease();
  v14 = a3[6];
  v15 = a3[7];
  v16 = *(_BYTE *)(a2 + v14);
  *(_WORD *)(v8 + 72) = *(_WORD *)(v9 + 72);
  *(_BYTE *)(a1 + v14) = v16;
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_BYTE *)v17 = *(_BYTE *)(a2 + v15);
  v19 = *(_QWORD *)(a2 + v15 + 16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(a2 + v15 + 8);
  *(_QWORD *)(v17 + 16) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 24) = *(_BYTE *)(v18 + 24);
  *(_BYTE *)(v17 + 25) = *(_BYTE *)(v18 + 25);
  v20 = *(_QWORD *)(v18 + 40);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 40) = v20;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = a3[9];
  v23 = *(_DWORD *)(a2 + v21);
  *(_BYTE *)(v17 + 48) = *(_BYTE *)(v18 + 48);
  *(_DWORD *)(a1 + v21) = v23;
  v24 = a1 + v22;
  v25 = a2 + v22;
  if (!*(_QWORD *)(a1 + v22 + 8))
    goto LABEL_5;
  v26 = *(_QWORD *)(v25 + 8);
  if (!v26)
  {
    sub_1D57E1784(a1 + v22);
LABEL_5:
    v28 = *(_OWORD *)(v25 + 16);
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 16) = v28;
    *(_QWORD *)(v24 + 32) = *(_QWORD *)(v25 + 32);
    return a1;
  }
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_QWORD *)(v24 + 8) = v26;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v24 + 16) = *(_BYTE *)(v25 + 16);
  *(_BYTE *)(v24 + 17) = *(_BYTE *)(v25 + 17);
  v27 = *(_QWORD *)(v25 + 32);
  *(_QWORD *)(v24 + 24) = *(_QWORD *)(v25 + 24);
  *(_QWORD *)(v24 + 32) = v27;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationReceivedEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A94ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationReceivedEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A94F70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_1D5A94FEC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NotificationReceivedEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D5A950D0 + 4 * byte_1D5AE8ADB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D5A95104 + 4 * byte_1D5AE8AD6[v4]))();
}

uint64_t sub_1D5A95104(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A9510C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A95114);
  return result;
}

uint64_t sub_1D5A95120(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A95128);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D5A9512C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A95134(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationReceivedEvent.Model.CodingKeys()
{
  return &type metadata for NotificationReceivedEvent.Model.CodingKeys;
}

unint64_t sub_1D5A95154()
{
  unint64_t result;

  result = qword_1EFF52868;
  if (!qword_1EFF52868)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE8D04, &type metadata for NotificationReceivedEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52868);
  }
  return result;
}

unint64_t sub_1D5A9519C()
{
  unint64_t result;

  result = qword_1EFF52870;
  if (!qword_1EFF52870)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE8C74, &type metadata for NotificationReceivedEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52870);
  }
  return result;
}

unint64_t sub_1D5A951E4()
{
  unint64_t result;

  result = qword_1EFF52878;
  if (!qword_1EFF52878)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE8C9C, &type metadata for NotificationReceivedEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52878);
  }
  return result;
}

uint64_t sub_1D5A95228(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AEE9D0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AF2B90 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AEC9F0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1D5A954A4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CCAF8, MEMORY[0x1E0CF8078]);
}

uint64_t static FeedViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CD160, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCAF8, a1);
}

uint64_t sub_1D5A954E4(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CCD38, MEMORY[0x1E0CF8380]);
}

uint64_t static FeedViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CCD58, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCD38, a1);
}

uint64_t FeedViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t FeedViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*FeedViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t FeedViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for FeedViewEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t FeedViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedViewEvent.timedData.modify())(_QWORD)
{
  type metadata accessor for FeedViewEvent(0);
  return nullsub_1;
}

uint64_t FeedViewEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedViewEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedViewEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for FeedViewEvent(0);
  return nullsub_1;
}

uint64_t FeedViewEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedViewEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedViewEvent.viewData.modify())(_QWORD)
{
  type metadata accessor for FeedViewEvent(0);
  return nullsub_1;
}

uint64_t FeedViewEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedViewEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedViewEvent.orientationData.modify())(_QWORD)
{
  type metadata accessor for FeedViewEvent(0);
  return nullsub_1;
}

uint64_t FeedViewEvent.campaignData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedViewEvent.campaignData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedViewEvent.campaignData.modify())(_QWORD)
{
  type metadata accessor for FeedViewEvent(0);
  return nullsub_1;
}

uint64_t FeedViewEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedViewEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 40);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedViewEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for FeedViewEvent(0);
  return nullsub_1;
}

uint64_t FeedViewEvent.searchData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedViewEvent.searchData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedViewEvent.searchData.modify())(_QWORD)
{
  type metadata accessor for FeedViewEvent(0);
  return nullsub_1;
}

uint64_t FeedViewEvent.viewEndData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedViewEvent.viewEndData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 48);
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedViewEvent.viewEndData.modify())(_QWORD)
{
  type metadata accessor for FeedViewEvent(0);
  return nullsub_1;
}

uint64_t FeedViewEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedViewEvent.tagData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 52);
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedViewEvent.tagData.modify())(_QWORD)
{
  type metadata accessor for FeedViewEvent(0);
  return nullsub_1;
}

uint64_t FeedViewEvent.referralData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedViewEvent.referralData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 56);
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedViewEvent.referralData.modify())(_QWORD)
{
  type metadata accessor for FeedViewEvent(0);
  return nullsub_1;
}

uint64_t FeedViewEvent.referralGroupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9CF168, (void (*)(void))sub_1D57C9450, (void (*)(void))sub_1D57C9494);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedViewEvent.referralGroupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 60);
  sub_1D579E208(0, &qword_1ED9CF168, (void (*)(void))sub_1D57C9450, (void (*)(void))sub_1D57C9494);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedViewEvent.referralGroupData.modify())(_QWORD)
{
  type metadata accessor for FeedViewEvent(0);
  return nullsub_1;
}

uint64_t FeedViewEvent.referralFeedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9CF158, (void (*)(void))sub_1D57C9800, (void (*)(void))sub_1D57C9844);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedViewEvent.referralFeedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 64);
  sub_1D579E208(0, &qword_1ED9CF158, (void (*)(void))sub_1D57C9800, (void (*)(void))sub_1D57C9844);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedViewEvent.referralFeedData.modify())(_QWORD)
{
  type metadata accessor for FeedViewEvent(0);
  return nullsub_1;
}

uint64_t FeedViewEvent.referralArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedViewEvent.referralArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 68);
  sub_1D579E208(0, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedViewEvent.referralArticleData.modify())(_QWORD)
{
  type metadata accessor for FeedViewEvent(0);
  return nullsub_1;
}

uint64_t FeedViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for FeedViewEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  v14 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v14, v19);
  v20 = a1 + v4[12];
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v14, v23);
  v24 = a1 + v4[14];
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v14, v25);
  v26 = a1 + v4[15];
  sub_1D579E208(0, &qword_1ED9CF168, (void (*)(void))sub_1D57C9450, (void (*)(void))sub_1D57C9494);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v14, v27);
  v28 = a1 + v4[16];
  sub_1D579E208(0, &qword_1ED9CF158, (void (*)(void))sub_1D57C9800, (void (*)(void))sub_1D57C9844);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v14, v29);
  v30 = a1 + v4[17];
  sub_1D579E208(0, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v30, v14, v31);
}

uint64_t FeedViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t FeedViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for FeedViewEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t FeedViewEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent.Model(0) + 24);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t FeedViewEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedViewEvent.Model(0) + 28));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t FeedViewEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FeedViewEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t FeedViewEvent.Model.campaignData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedViewEvent.Model(0) + 36));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1D5828094(v4, v5);
}

uint64_t FeedViewEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for FeedViewEvent.Model(0) + 40));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FeedViewEvent.Model.searchData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedViewEvent.Model(0) + 44));
  v5 = *v3;
  v4 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t FeedViewEvent.Model.viewEndData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FeedViewEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t FeedViewEvent.Model.tagData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for FeedViewEvent.Model(0) + 52));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t FeedViewEvent.Model.referralData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedViewEvent.Model(0) + 56));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1D5828094(v4, v5);
}

_QWORD *FeedViewEvent.Model.referralGroupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for FeedViewEvent.Model(0);
  sub_1D5A96844(v1 + *(int *)(v3 + 60), (uint64_t)v5);
  sub_1D5A96844((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t sub_1D5A96844(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D5A96888();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D5A96888()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CEC20)
  {
    v0 = sub_1D5AAEACC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CEC20);
  }
}

uint64_t FeedViewEvent.Model.referralFeedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedViewEvent.Model(0) + 64));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t FeedViewEvent.Model.referralArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent.Model(0) + 68);
  v4 = *(_BYTE *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(_BYTE *)(a1 + 24) = v4;
  return swift_bridgeObjectRetain();
}

__n128 FeedViewEvent.Model.init(eventData:timedData:feedData:viewData:orientationData:campaignData:userBundleSubscriptionContextData:searchData:viewEndData:tagData:referralData:referralGroupData:referralFeedData:referralArticleData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, __int16 *a5@<X4>, __int128 *a6@<X5>, char *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t *a11, __int128 *a12, uint64_t a13, __int128 *a14, __n128 *a15)
{
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  unint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  __n128 *v36;
  __n128 result;
  uint64_t v38;
  __int16 v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  unsigned __int8 v64;
  __n128 v65;
  _BYTE v66[144];

  v18 = *a3;
  v19 = *((_QWORD *)a3 + 1);
  v20 = *((_QWORD *)a3 + 2);
  v21 = a4[1];
  v38 = *a4;
  v22 = *((_WORD *)a4 + 8);
  v39 = *a5;
  v42 = a6[1];
  v43 = *a6;
  v41 = *((_QWORD *)a6 + 4);
  v40 = *((_QWORD *)a6 + 5);
  v51 = *a7;
  v50 = *((_QWORD *)a7 + 1);
  v49 = *((_QWORD *)a7 + 2);
  v48 = a7[24];
  v47 = a7[25];
  v46 = *((_QWORD *)a7 + 4);
  v45 = *((_QWORD *)a7 + 5);
  v44 = a7[48];
  v54 = *a8;
  v53 = a8[1];
  v52 = *((_BYTE *)a8 + 16);
  v55 = *a10;
  v56 = a11[1];
  v57 = *a11;
  v60 = a12[1];
  v61 = *a12;
  v58 = *((_QWORD *)a12 + 5);
  v59 = *((_QWORD *)a12 + 4);
  sub_1D5A96844(a13, (uint64_t)v66);
  v63 = *a14;
  v62 = *((_QWORD *)a14 + 2);
  v65 = *a15;
  v23 = a15[1].n128_u64[0];
  v64 = a15[1].n128_u8[8];
  v24 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a9, a1, v24);
  v25 = (int *)type metadata accessor for FeedViewEvent.Model(0);
  v26 = a9 + v25[5];
  v27 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v26, a2, v27);
  v28 = a9 + v25[6];
  *(_BYTE *)v28 = v18;
  *(_QWORD *)(v28 + 8) = v19;
  *(_QWORD *)(v28 + 16) = v20;
  v29 = a9 + v25[7];
  *(_QWORD *)v29 = v38;
  *(_QWORD *)(v29 + 8) = v21;
  *(_WORD *)(v29 + 16) = v22;
  *(_WORD *)(a9 + v25[8]) = v39;
  v30 = a9 + v25[9];
  *(_OWORD *)v30 = v43;
  *(_OWORD *)(v30 + 16) = v42;
  *(_QWORD *)(v30 + 32) = v41;
  *(_QWORD *)(v30 + 40) = v40;
  v31 = a9 + v25[10];
  *(_BYTE *)v31 = v51;
  *(_QWORD *)(v31 + 8) = v50;
  *(_QWORD *)(v31 + 16) = v49;
  *(_BYTE *)(v31 + 24) = v48;
  *(_BYTE *)(v31 + 25) = v47;
  *(_QWORD *)(v31 + 32) = v46;
  *(_QWORD *)(v31 + 40) = v45;
  *(_BYTE *)(v31 + 48) = v44;
  v32 = a9 + v25[11];
  *(_QWORD *)v32 = v54;
  *(_QWORD *)(v32 + 8) = v53;
  *(_BYTE *)(v32 + 16) = v52;
  *(_BYTE *)(a9 + v25[12]) = v55;
  v33 = (_QWORD *)(a9 + v25[13]);
  *v33 = v57;
  v33[1] = v56;
  v34 = a9 + v25[14];
  *(_OWORD *)v34 = v61;
  *(_OWORD *)(v34 + 16) = v60;
  *(_QWORD *)(v34 + 32) = v59;
  *(_QWORD *)(v34 + 40) = v58;
  sub_1D5A96844((uint64_t)v66, a9 + v25[15]);
  v35 = a9 + v25[16];
  *(_OWORD *)v35 = v63;
  *(_QWORD *)(v35 + 16) = v62;
  v36 = (__n128 *)(a9 + v25[17]);
  result = v65;
  *v36 = v65;
  v36[1].n128_u64[0] = v23;
  v36[1].n128_u8[8] = v64;
  return result;
}

uint64_t sub_1D5A96C1C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5A96C54 + 4 * byte_1D5AE8D80[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5A96C54()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D5A96C68()
{
  return 0x6174614464656566;
}

uint64_t sub_1D5A96C90()
{
  return 0x7461746E6569726FLL;
}

uint64_t sub_1D5A96CB4()
{
  return 0x6E676961706D6163;
}

unint64_t sub_1D5A96D54()
{
  return 0xD000000000000011;
}

unint64_t sub_1D5A96D6C()
{
  return 0xD000000000000010;
}

void sub_1D5A96D88()
{
  JUMPOUT(0x1D5A96D9CLL);
}

uint64_t sub_1D5A96DA8()
{
  unsigned __int8 *v0;

  return sub_1D5A96C1C(*v0);
}

uint64_t sub_1D5A96DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A9BBCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A96DD4()
{
  sub_1D5A9738C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A96DFC()
{
  sub_1D5A9738C();
  return sub_1D5AAEEE0();
}

uint64_t FeedViewEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  __int128 *v23;
  __int128 v24;
  __int128 *v25;
  uint64_t v26;
  __int128 *v27;
  uint64_t v28;
  char v29;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  _OWORD v36[2];
  __int128 v37;
  char v38;
  char v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;

  v3 = v1;
  sub_1D5A97E64(0, &qword_1EFF52880, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A9738C();
  sub_1D5AAEEC8();
  LOBYTE(v36[0]) = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for FeedViewEvent.Model(0);
    LOBYTE(v36[0]) = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    v11 = v3 + v10[6];
    LOBYTE(v36[0]) = *(_BYTE *)v11;
    *(_OWORD *)((char *)v36 + 8) = *(_OWORD *)(v11 + 8);
    LOBYTE(v33) = 2;
    sub_1D57C65D4();
    sub_1D5AAED6C();
    v12 = (uint64_t *)(v3 + v10[7]);
    v13 = *v12;
    v14 = v12[1];
    LOWORD(v12) = *((_WORD *)v12 + 8);
    *(_QWORD *)&v36[0] = v13;
    *((_QWORD *)&v36[0] + 1) = v14;
    LOWORD(v36[1]) = (_WORD)v12;
    LOBYTE(v33) = 3;
    sub_1D57C62A4();
    sub_1D5AAED6C();
    LOWORD(v36[0]) = *(_WORD *)(v3 + v10[8]);
    LOBYTE(v33) = 4;
    sub_1D57CA4E4();
    sub_1D5AAED6C();
    v15 = (_OWORD *)(v3 + v10[9]);
    v16 = v15[1];
    v36[0] = *v15;
    v36[1] = v16;
    v37 = v15[2];
    LOBYTE(v33) = 5;
    sub_1D57CB460();
    sub_1D5AAED18();
    v17 = v3 + v10[10];
    v18 = *(_BYTE *)(v17 + 24);
    v19 = *(_BYTE *)(v17 + 25);
    v20 = *(_BYTE *)(v17 + 48);
    LOBYTE(v36[0]) = *(_BYTE *)v17;
    *(_OWORD *)((char *)v36 + 8) = *(_OWORD *)(v17 + 8);
    BYTE8(v36[1]) = v18;
    BYTE9(v36[1]) = v19;
    v37 = *(_OWORD *)(v17 + 32);
    v38 = v20;
    LOBYTE(v33) = 6;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v21 = v3 + v10[11];
    v22 = *(_BYTE *)(v21 + 16);
    v36[0] = *(_OWORD *)v21;
    LOBYTE(v36[1]) = v22;
    LOBYTE(v33) = 7;
    sub_1D57CBC9C();
    sub_1D5AAED18();
    LOBYTE(v36[0]) = *(_BYTE *)(v3 + v10[12]);
    LOBYTE(v33) = 8;
    sub_1D57CB654();
    sub_1D5AAED6C();
    v36[0] = *(_OWORD *)(v3 + v10[13]);
    LOBYTE(v33) = 9;
    sub_1D57C6738();
    sub_1D5AAED18();
    v23 = (__int128 *)(v3 + v10[14]);
    v24 = v23[1];
    v40 = *v23;
    v41 = v24;
    v42 = v23[2];
    v39 = 10;
    sub_1D57CB330();
    sub_1D5AAED18();
    sub_1D5A96844(v3 + v10[15], (uint64_t)v36);
    sub_1D5A96844((uint64_t)v36, (uint64_t)&v33);
    v32 = 11;
    sub_1D57C9494();
    sub_1D5AAED18();
    v25 = (__int128 *)(v3 + v10[16]);
    v26 = *((_QWORD *)v25 + 2);
    v33 = *v25;
    v34 = v26;
    v32 = 12;
    sub_1D57C9844();
    sub_1D5AAED18();
    v27 = (__int128 *)(v3 + v10[17]);
    v28 = *((_QWORD *)v27 + 2);
    v29 = *((_BYTE *)v27 + 24);
    v33 = *v27;
    v34 = v28;
    v35 = v29;
    v32 = 13;
    sub_1D57C85C4();
    sub_1D5AAED18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5A9738C()
{
  unint64_t result;

  result = qword_1ED9C79E8;
  if (!qword_1ED9C79E8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE90EC, &type metadata for FeedViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C79E8);
  }
  return result;
}

uint64_t FeedViewEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  int v17;
  int v18;
  int *v19;
  char *v20;
  uint64_t v21;
  int *v22;
  char *v23;
  uint64_t v24;
  __int16 v25;
  char *v26;
  char *v27;
  __int128 v28;
  char v29;
  char v30;
  char v31;
  char *v32;
  char v33;
  char *v34;
  uint64_t v35;
  BOOL v36;
  char *v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  __int128 v58;
  uint64_t v59;
  char v60;
  char v61;
  _BYTE v62[144];
  _BYTE v63[32];
  __int128 v64;
  char v65;
  int *v66;

  v49 = a2;
  v53 = sub_1D5AADFB0();
  v51 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D5AADF98();
  v52 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A97E64(0, &qword_1ED9CC7E8, MEMORY[0x1E0DED048]);
  v50 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v48 - v10;
  v66 = (int *)type metadata accessor for FeedViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v66);
  v57 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1D5A9738C();
  v54 = v11;
  v14 = v56;
  sub_1D5AAEEB0();
  if (v14)
  {
    v56 = v14;
    v15 = v57;
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
    v17 = 0;
    v18 = 0;
    v19 = v66;
    goto LABEL_5;
  }
  v48 = v9;
  v63[0] = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v20 = v57;
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v57, v7, v5);
  v63[0] = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v21 = v53;
  sub_1D5AAECD0();
  v22 = v66;
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(&v20[v66[5]], v4, v21);
  v62[0] = 2;
  sub_1D57C6590();
  sub_1D5AAECD0();
  v23 = &v20[v22[6]];
  *v23 = v63[0];
  *(_OWORD *)(v23 + 8) = *(_OWORD *)&v63[8];
  v62[0] = 3;
  sub_1D57C6260();
  sub_1D5AAECD0();
  v24 = *(_QWORD *)&v63[8];
  v25 = *(_WORD *)&v63[16];
  v26 = &v20[v22[7]];
  *(_QWORD *)v26 = *(_QWORD *)v63;
  *((_QWORD *)v26 + 1) = v24;
  *((_WORD *)v26 + 8) = v25;
  v62[0] = 4;
  sub_1D57CA4A0();
  sub_1D5AAECD0();
  *(_WORD *)&v20[v22[8]] = *(_WORD *)v63;
  v62[0] = 5;
  sub_1D57CB41C();
  sub_1D5AAEC7C();
  v27 = &v20[v22[9]];
  v28 = *(_OWORD *)&v63[16];
  *(_OWORD *)v27 = *(_OWORD *)v63;
  *((_OWORD *)v27 + 1) = v28;
  *((_OWORD *)v27 + 2) = v64;
  v62[0] = 6;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v29 = v63[24];
  v30 = v63[25];
  v31 = v65;
  v32 = &v20[v22[10]];
  *v32 = v63[0];
  *(_OWORD *)(v32 + 8) = *(_OWORD *)&v63[8];
  v32[24] = v29;
  v32[25] = v30;
  *((_OWORD *)v32 + 2) = v64;
  v32[48] = v31;
  v62[0] = 7;
  sub_1D57CBC58();
  sub_1D5AAEC7C();
  v33 = v63[16];
  v34 = &v20[v22[11]];
  *(_OWORD *)v34 = *(_OWORD *)v63;
  v34[16] = v33;
  v62[0] = 8;
  sub_1D57CB610();
  sub_1D5AAECD0();
  v20[v66[12]] = v63[0];
  v62[0] = 9;
  sub_1D57C66F4();
  sub_1D5AAEC7C();
  v56 = 0;
  *(_OWORD *)&v57[v66[13]] = *(_OWORD *)v63;
  v62[0] = 10;
  sub_1D57CB2EC();
  v35 = v56;
  sub_1D5AAEC7C();
  v36 = v35 == 0;
  v56 = v35;
  if (v35)
    goto LABEL_14;
  v37 = &v57[v66[14]];
  v38 = *(_OWORD *)&v63[16];
  *(_OWORD *)v37 = *(_OWORD *)v63;
  *((_OWORD *)v37 + 1) = v38;
  *((_OWORD *)v37 + 2) = v64;
  v62[143] = 11;
  sub_1D57C9450();
  v39 = v56;
  sub_1D5AAEC7C();
  v56 = v39;
  if (v39)
  {
LABEL_14:
    (*(void (**)(char *, uint64_t))(v48 + 8))(v54, v50);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
    v18 = 0;
    v17 = 0;
  }
  else
  {
    sub_1D5A96844((uint64_t)v63, (uint64_t)v62);
    sub_1D5A96844((uint64_t)v62, (uint64_t)&v57[v66[15]]);
    v61 = 12;
    sub_1D57C9800();
    v40 = v56;
    sub_1D5AAEC7C();
    v56 = v40;
    if (v40)
    {
      (*(void (**)(char *, uint64_t))(v48 + 8))(v54, v50);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
      v17 = 0;
      v18 = 1;
    }
    else
    {
      v41 = v59;
      v42 = &v57[v66[16]];
      *(_OWORD *)v42 = v58;
      *((_QWORD *)v42 + 2) = v41;
      v61 = 13;
      sub_1D57C8580();
      v43 = v56;
      sub_1D5AAEC7C();
      v56 = v43;
      if (!v43)
      {
        (*(void (**)(char *, uint64_t))(v48 + 8))(v54, v50);
        v44 = v59;
        v45 = v60;
        v46 = (uint64_t)v57;
        v47 = &v57[v66[17]];
        *(_OWORD *)v47 = v58;
        *((_QWORD *)v47 + 2) = v44;
        v47[24] = v45;
        sub_1D5A97EC0(v46, v49);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
        return sub_1D5A97F04(v46);
      }
      (*(void (**)(char *, uint64_t))(v48 + 8))(v54, v50);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
      v18 = 1;
      v17 = 1;
    }
  }
  v15 = v57;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v57, v5);
  (*(void (**)(char *, uint64_t))(v51 + 8))(&v15[v66[5]], v53);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D584ABF4(*(_QWORD *)&v15[v66[9]], *(_QWORD *)&v15[v66[9] + 8]);
  v19 = v66;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v36)
  {
LABEL_5:
    if (v18)
      goto LABEL_6;
LABEL_9:
    if (!v17)
      return result;
    return sub_1D57DAEDC(*(_QWORD *)&v15[v19[16]], *(_QWORD *)&v15[v19[16] + 8], *(_QWORD *)&v15[v19[16] + 16]);
  }
  result = sub_1D584ABF4(*(_QWORD *)&v15[v19[14]], *(_QWORD *)&v15[v19[14] + 8]);
  if ((v18 & 1) == 0)
    goto LABEL_9;
LABEL_6:
  sub_1D5A96844((uint64_t)&v15[v19[15]], (uint64_t)v63);
  result = (uint64_t)sub_1D57DE9C8(v63, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DEA24);
  if ((v17 & 1) == 0)
    return result;
  return sub_1D57DAEDC(*(_QWORD *)&v15[v19[16]], *(_QWORD *)&v15[v19[16] + 8], *(_QWORD *)&v15[v19[16] + 16]);
}

void sub_1D5A97E64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A9738C();
    v7 = a3(a1, &type metadata for FeedViewEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A97EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A97F04(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A97F40@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5A97F54(_QWORD *a1)
{
  return FeedViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5A97F68@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CD160, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCAF8, a1);
}

uint64_t sub_1D5A97F8C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CCD58, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCD38, a1);
}

uint64_t sub_1D5A97FB0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  v15 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v15, v20);
  v21 = a2 + a1[12];
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v15, v24);
  v25 = a2 + a1[14];
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v15, v26);
  v27 = a2 + a1[15];
  sub_1D579E208(0, &qword_1ED9CF168, (void (*)(void))sub_1D57C9450, (void (*)(void))sub_1D57C9494);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v15, v28);
  v29 = a2 + a1[16];
  sub_1D579E208(0, &qword_1ED9CF158, (void (*)(void))sub_1D57C9800, (void (*)(void))sub_1D57C9844);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v15, v30);
  v31 = a2 + a1[17];
  sub_1D579E208(0, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v31, v15, v32);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v60 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v60 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1D579E208(0, &qword_1ED9CF168, (void (*)(void))sub_1D57C9450, (void (*)(void))sub_1D57C9494);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1D579E208(0, &qword_1ED9CF158, (void (*)(void))sub_1D57C9800, (void (*)(void))sub_1D57C9844);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
    v56 = a3[17];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    sub_1D579E208(0, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
  }
  return a1;
}

uint64_t destroy for FeedViewEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1D579E208(0, &qword_1ED9CF168, (void (*)(void))sub_1D57C9450, (void (*)(void))sub_1D57C9494);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1D579E208(0, &qword_1ED9CF158, (void (*)(void))sub_1D57C9800, (void (*)(void))sub_1D57C9844);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  v29 = a1 + a2[17];
  sub_1D579E208(0, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
}

uint64_t initializeWithCopy for FeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9CF168, (void (*)(void))sub_1D57C9450, (void (*)(void))sub_1D57C9494);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9CF158, (void (*)(void))sub_1D57C9800, (void (*)(void))sub_1D57C9844);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
  return a1;
}

uint64_t assignWithCopy for FeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9CF168, (void (*)(void))sub_1D57C9450, (void (*)(void))sub_1D57C9494);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9CF158, (void (*)(void))sub_1D57C9800, (void (*)(void))sub_1D57C9844);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v56, v57, v58);
  return a1;
}

uint64_t initializeWithTake for FeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9CF168, (void (*)(void))sub_1D57C9450, (void (*)(void))sub_1D57C9494);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9CF158, (void (*)(void))sub_1D57C9800, (void (*)(void))sub_1D57C9844);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
  return a1;
}

uint64_t assignWithTake for FeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1D579E208(0, &qword_1ED9CF168, (void (*)(void))sub_1D57C9450, (void (*)(void))sub_1D57C9494);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1D579E208(0, &qword_1ED9CF158, (void (*)(void))sub_1D57C9800, (void (*)(void))sub_1D57C9844);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1D579E208(0, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedViewEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A99BCC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9CF168, (void (*)(void))sub_1D57C9450, (void (*)(void))sub_1D57C9494);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9CF158, (void (*)(void))sub_1D57C9800, (void (*)(void))sub_1D57C9844);
                          v12 = *(_QWORD *)(v24 - 8);
                          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                          {
                            v8 = v24;
                            v13 = a3[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
                            v8 = v25;
                            v12 = *(_QWORD *)(v25 - 8);
                            v13 = a3[17];
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for FeedViewEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A99F7C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7298, (void (*)(void))sub_1D57C6260, (void (*)(void))sub_1D57C62A4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7180, (void (*)(void))sub_1D57CA4A0, (void (*)(void))sub_1D57CA4E4);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C7118, (void (*)(void))sub_1D57CB41C, (void (*)(void))sub_1D57CB460);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9C70D0, (void (*)(void))sub_1D57CBC58, (void (*)(void))sub_1D57CBC9C);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1D579E208(0, &qword_1ED9C7108, (void (*)(void))sub_1D57CB610, (void (*)(void))sub_1D57CB654);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1D579E208(0, &qword_1ED9C7288, (void (*)(void))sub_1D57C66F4, (void (*)(void))sub_1D57C6738);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1D579E208(0, &qword_1ED9C7138, (void (*)(void))sub_1D57CB2EC, (void (*)(void))sub_1D57CB330);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1D579E208(0, &qword_1ED9CF168, (void (*)(void))sub_1D57C9450, (void (*)(void))sub_1D57C9494);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1D579E208(0, &qword_1ED9CF158, (void (*)(void))sub_1D57C9800, (void (*)(void))sub_1D57C9844);
                          v14 = *(_QWORD *)(v26 - 8);
                          if (*(_DWORD *)(v14 + 84) == a3)
                          {
                            v10 = v26;
                            v15 = a4[16];
                          }
                          else
                          {
                            sub_1D579E208(0, &qword_1ED9C7210, (void (*)(void))sub_1D57C8580, (void (*)(void))sub_1D57C85C4);
                            v10 = v27;
                            v14 = *(_QWORD *)(v27 - 8);
                            v15 = a4[17];
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

_QWORD *initializeBufferWithCopyOfBuffer for FeedViewEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *v14 = *v15;
    v16 = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
    *((_QWORD *)v14 + 2) = v16;
    v17 = (char *)a1 + v13;
    v18 = (char *)a2 + v13;
    v19 = *(_QWORD *)v18;
    v20 = *((_QWORD *)v18 + 1);
    *((_WORD *)v17 + 8) = *((_WORD *)v18 + 8);
    v21 = a3[8];
    v22 = a3[9];
    v23 = *(_WORD *)((char *)a2 + v21);
    *(_QWORD *)v17 = v19;
    *((_QWORD *)v17 + 1) = v20;
    *(_WORD *)((char *)a1 + v21) = v23;
    v24 = (_QWORD *)((char *)a1 + v22);
    v25 = (_QWORD *)((char *)a2 + v22);
    v26 = *(_QWORD *)((char *)a2 + v22 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26)
    {
      *v24 = *v25;
      v24[1] = v26;
      v27 = v25[3];
      v24[2] = v25[2];
      v24[3] = v27;
      v28 = v25[4];
      v29 = v25[5];
      v24[4] = v28;
      v24[5] = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v31 = *((_OWORD *)v25 + 1);
      *(_OWORD *)v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v31;
      *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
    }
    v32 = a3[10];
    v33 = a3[11];
    v34 = (char *)a1 + v32;
    v35 = (char *)a2 + v32;
    *v34 = *v35;
    v36 = *((_QWORD *)v35 + 2);
    *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
    *((_QWORD *)v34 + 2) = v36;
    *((_WORD *)v34 + 12) = *((_WORD *)v35 + 12);
    v37 = *((_QWORD *)v35 + 5);
    *((_QWORD *)v34 + 4) = *((_QWORD *)v35 + 4);
    *((_QWORD *)v34 + 5) = v37;
    v34[48] = v35[48];
    v38 = (char *)a1 + v33;
    v39 = (char *)a2 + v33;
    v40 = *((_QWORD *)v39 + 1);
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *((_QWORD *)v38 + 1) = v40;
    v38[16] = v39[16];
    v41 = a3[13];
    *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    v42 = (_QWORD *)((char *)a1 + v41);
    v43 = (_QWORD *)((char *)a2 + v41);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    v45 = a3[14];
    v46 = (_QWORD *)((char *)a1 + v45);
    v47 = (_QWORD *)((char *)a2 + v45);
    v48 = *(_QWORD *)((char *)a2 + v45 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v48)
    {
      *v46 = *v47;
      v46[1] = v48;
      v49 = v47[3];
      v46[2] = v47[2];
      v46[3] = v49;
      v50 = v47[5];
      v46[4] = v47[4];
      v46[5] = v50;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v51 = *((_OWORD *)v47 + 1);
      *(_OWORD *)v46 = *(_OWORD *)v47;
      *((_OWORD *)v46 + 1) = v51;
      *((_OWORD *)v46 + 2) = *((_OWORD *)v47 + 2);
    }
    v52 = a3[15];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    v55 = *((_QWORD *)v54 + 2);
    if (v55)
    {
      *(_WORD *)v53 = *(_WORD *)v54;
      *((_QWORD *)v53 + 1) = *((_QWORD *)v54 + 1);
      *((_QWORD *)v53 + 2) = v55;
      *((_QWORD *)v53 + 3) = *((_QWORD *)v54 + 3);
      v56 = *((_QWORD *)v54 + 5);
      *((_QWORD *)v53 + 4) = *((_QWORD *)v54 + 4);
      *((_QWORD *)v53 + 5) = v56;
      v57 = *((_QWORD *)v54 + 7);
      *((_QWORD *)v53 + 6) = *((_QWORD *)v54 + 6);
      *((_QWORD *)v53 + 7) = v57;
      v58 = *((_QWORD *)v54 + 9);
      *((_QWORD *)v53 + 8) = *((_QWORD *)v54 + 8);
      *((_QWORD *)v53 + 9) = v58;
      v53[80] = v54[80];
      v59 = *((_QWORD *)v54 + 12);
      *((_QWORD *)v53 + 11) = *((_QWORD *)v54 + 11);
      *((_QWORD *)v53 + 12) = v59;
      *((_QWORD *)v53 + 13) = *((_QWORD *)v54 + 13);
      v53[112] = v54[112];
      v60 = *((_QWORD *)v54 + 16);
      *((_QWORD *)v53 + 15) = *((_QWORD *)v54 + 15);
      *((_QWORD *)v53 + 16) = v60;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v61 = *((_OWORD *)v54 + 7);
      *((_OWORD *)v53 + 6) = *((_OWORD *)v54 + 6);
      *((_OWORD *)v53 + 7) = v61;
      *((_QWORD *)v53 + 16) = *((_QWORD *)v54 + 16);
      v62 = *((_OWORD *)v54 + 3);
      *((_OWORD *)v53 + 2) = *((_OWORD *)v54 + 2);
      *((_OWORD *)v53 + 3) = v62;
      v63 = *((_OWORD *)v54 + 5);
      *((_OWORD *)v53 + 4) = *((_OWORD *)v54 + 4);
      *((_OWORD *)v53 + 5) = v63;
      v64 = *((_OWORD *)v54 + 1);
      *(_OWORD *)v53 = *(_OWORD *)v54;
      *((_OWORD *)v53 + 1) = v64;
    }
    v65 = a3[16];
    v66 = (char *)a1 + v65;
    v67 = (char *)a2 + v65;
    v68 = *((_QWORD *)v67 + 2);
    if (v68 == 1)
    {
      *(_OWORD *)v66 = *(_OWORD *)v67;
      *((_QWORD *)v66 + 2) = *((_QWORD *)v67 + 2);
    }
    else
    {
      *v66 = *v67;
      *((_QWORD *)v66 + 1) = *((_QWORD *)v67 + 1);
      *((_QWORD *)v66 + 2) = v68;
      swift_bridgeObjectRetain();
    }
    v69 = a3[17];
    v70 = (char *)a1 + v69;
    v71 = (char *)a2 + v69;
    v72 = *((_QWORD *)v71 + 1);
    *(_QWORD *)v70 = *(_QWORD *)v71;
    *((_QWORD *)v70 + 1) = v72;
    *((_QWORD *)v70 + 2) = *((_QWORD *)v71 + 2);
    v70[24] = v71[24];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FeedViewEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[9] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[14] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[15] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[16] + 16) != 1)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_BYTE *)v13 = *(_BYTE *)v14;
  v15 = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 16) = v15;
  v16 = a1 + v12;
  v17 = (uint64_t *)(a2 + v12);
  v18 = *v17;
  v19 = v17[1];
  *(_WORD *)(v16 + 16) = *((_WORD *)v17 + 8);
  v20 = a3[8];
  v21 = a3[9];
  v22 = *(_WORD *)(a2 + v20);
  *(_QWORD *)v16 = v18;
  *(_QWORD *)(v16 + 8) = v19;
  *(_WORD *)(a1 + v20) = v22;
  v23 = (_QWORD *)(a1 + v21);
  v24 = (_QWORD *)(a2 + v21);
  v25 = *(_QWORD *)(a2 + v21 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25)
  {
    *v23 = *v24;
    v23[1] = v25;
    v26 = v24[3];
    v23[2] = v24[2];
    v23[3] = v26;
    v27 = v24[4];
    v28 = v24[5];
    v23[4] = v27;
    v23[5] = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v29 = *((_OWORD *)v24 + 1);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = v29;
    *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
  }
  v30 = a3[10];
  v31 = a3[11];
  v32 = a1 + v30;
  v33 = a2 + v30;
  *(_BYTE *)v32 = *(_BYTE *)v33;
  v34 = *(_QWORD *)(v33 + 16);
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
  *(_QWORD *)(v32 + 16) = v34;
  *(_WORD *)(v32 + 24) = *(_WORD *)(v33 + 24);
  v35 = *(_QWORD *)(v33 + 40);
  *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
  *(_QWORD *)(v32 + 40) = v35;
  *(_BYTE *)(v32 + 48) = *(_BYTE *)(v33 + 48);
  v36 = a1 + v31;
  v37 = a2 + v31;
  v38 = *(_QWORD *)(v37 + 8);
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *(_QWORD *)(v36 + 8) = v38;
  *(_BYTE *)(v36 + 16) = *(_BYTE *)(v37 + 16);
  v39 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v40 = (_QWORD *)(a1 + v39);
  v41 = (_QWORD *)(a2 + v39);
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  v43 = a3[14];
  v44 = (_QWORD *)(a1 + v43);
  v45 = (_QWORD *)(a2 + v43);
  v46 = *(_QWORD *)(a2 + v43 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v46)
  {
    *v44 = *v45;
    v44[1] = v46;
    v47 = v45[3];
    v44[2] = v45[2];
    v44[3] = v47;
    v48 = v45[5];
    v44[4] = v45[4];
    v44[5] = v48;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v49 = *((_OWORD *)v45 + 1);
    *(_OWORD *)v44 = *(_OWORD *)v45;
    *((_OWORD *)v44 + 1) = v49;
    *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
  }
  v50 = a3[15];
  v51 = a1 + v50;
  v52 = a2 + v50;
  v53 = *(_QWORD *)(v52 + 16);
  if (v53)
  {
    *(_WORD *)v51 = *(_WORD *)v52;
    *(_QWORD *)(v51 + 8) = *(_QWORD *)(v52 + 8);
    *(_QWORD *)(v51 + 16) = v53;
    *(_QWORD *)(v51 + 24) = *(_QWORD *)(v52 + 24);
    v54 = *(_QWORD *)(v52 + 40);
    *(_QWORD *)(v51 + 32) = *(_QWORD *)(v52 + 32);
    *(_QWORD *)(v51 + 40) = v54;
    v55 = *(_QWORD *)(v52 + 56);
    *(_QWORD *)(v51 + 48) = *(_QWORD *)(v52 + 48);
    *(_QWORD *)(v51 + 56) = v55;
    v56 = *(_QWORD *)(v52 + 72);
    *(_QWORD *)(v51 + 64) = *(_QWORD *)(v52 + 64);
    *(_QWORD *)(v51 + 72) = v56;
    *(_BYTE *)(v51 + 80) = *(_BYTE *)(v52 + 80);
    v57 = *(_QWORD *)(v52 + 96);
    *(_QWORD *)(v51 + 88) = *(_QWORD *)(v52 + 88);
    *(_QWORD *)(v51 + 96) = v57;
    *(_QWORD *)(v51 + 104) = *(_QWORD *)(v52 + 104);
    *(_BYTE *)(v51 + 112) = *(_BYTE *)(v52 + 112);
    v58 = *(_QWORD *)(v52 + 128);
    *(_QWORD *)(v51 + 120) = *(_QWORD *)(v52 + 120);
    *(_QWORD *)(v51 + 128) = v58;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v59 = *(_OWORD *)(v52 + 112);
    *(_OWORD *)(v51 + 96) = *(_OWORD *)(v52 + 96);
    *(_OWORD *)(v51 + 112) = v59;
    *(_QWORD *)(v51 + 128) = *(_QWORD *)(v52 + 128);
    v60 = *(_OWORD *)(v52 + 48);
    *(_OWORD *)(v51 + 32) = *(_OWORD *)(v52 + 32);
    *(_OWORD *)(v51 + 48) = v60;
    v61 = *(_OWORD *)(v52 + 80);
    *(_OWORD *)(v51 + 64) = *(_OWORD *)(v52 + 64);
    *(_OWORD *)(v51 + 80) = v61;
    v62 = *(_OWORD *)(v52 + 16);
    *(_OWORD *)v51 = *(_OWORD *)v52;
    *(_OWORD *)(v51 + 16) = v62;
  }
  v63 = a3[16];
  v64 = a1 + v63;
  v65 = a2 + v63;
  v66 = *(_QWORD *)(v65 + 16);
  if (v66 == 1)
  {
    *(_OWORD *)v64 = *(_OWORD *)v65;
    *(_QWORD *)(v64 + 16) = *(_QWORD *)(v65 + 16);
  }
  else
  {
    *(_BYTE *)v64 = *(_BYTE *)v65;
    *(_QWORD *)(v64 + 8) = *(_QWORD *)(v65 + 8);
    *(_QWORD *)(v64 + 16) = v66;
    swift_bridgeObjectRetain();
  }
  v67 = a3[17];
  v68 = a1 + v67;
  v69 = a2 + v67;
  v70 = *(_QWORD *)(v69 + 8);
  *(_QWORD *)v68 = *(_QWORD *)v69;
  *(_QWORD *)(v68 + 8) = v70;
  *(_QWORD *)(v68 + 16) = *(_QWORD *)(v69 + 16);
  *(_BYTE *)(v68 + 24) = *(_BYTE *)(v69 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  __int128 *v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_QWORD *)v15 = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v15 + 16) = *(_BYTE *)(v16 + 16);
  *(_BYTE *)(v15 + 17) = *(_BYTE *)(v16 + 17);
  v17 = a3[8];
  v18 = (_BYTE *)(a1 + v17);
  v19 = (_BYTE *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  v20 = a3[9];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  v23 = *(_QWORD *)(a1 + v20 + 8);
  v24 = *(_QWORD *)(a2 + v20 + 8);
  if (v23)
  {
    if (v24)
    {
      *v21 = *v22;
      v21[1] = v22[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v21[2] = v22[2];
      v21[3] = v22[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v21[4] = v22[4];
      v21[5] = v22[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D5829E98((uint64_t)v21);
      v26 = *((_OWORD *)v22 + 1);
      v25 = *((_OWORD *)v22 + 2);
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v26;
      *((_OWORD *)v21 + 2) = v25;
    }
  }
  else if (v24)
  {
    *v21 = *v22;
    v21[1] = v22[1];
    v21[2] = v22[2];
    v21[3] = v22[3];
    v21[4] = v22[4];
    v21[5] = v22[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v27 = *(_OWORD *)v22;
    v28 = *((_OWORD *)v22 + 2);
    *((_OWORD *)v21 + 1) = *((_OWORD *)v22 + 1);
    *((_OWORD *)v21 + 2) = v28;
    *(_OWORD *)v21 = v27;
  }
  v29 = a3[10];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_BYTE *)v30 = *(_BYTE *)(a2 + v29);
  *(_QWORD *)(v30 + 8) = *(_QWORD *)(a2 + v29 + 8);
  *(_QWORD *)(v30 + 16) = *(_QWORD *)(a2 + v29 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v30 + 24) = *(_BYTE *)(v31 + 24);
  *(_BYTE *)(v30 + 25) = *(_BYTE *)(v31 + 25);
  *(_QWORD *)(v30 + 32) = *(_QWORD *)(v31 + 32);
  *(_QWORD *)(v30 + 40) = *(_QWORD *)(v31 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v30 + 48) = *(_BYTE *)(v31 + 48);
  v32 = a3[11];
  v33 = a1 + v32;
  v34 = a2 + v32;
  *(_QWORD *)v33 = *(_QWORD *)(a2 + v32);
  *(_QWORD *)(v33 + 8) = *(_QWORD *)(a2 + v32 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v33 + 16) = *(_BYTE *)(v34 + 16);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v35 = a3[13];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = a3[14];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (_QWORD *)(a2 + v38);
  v41 = *(_QWORD *)(a1 + v38 + 8);
  v42 = *(_QWORD *)(a2 + v38 + 8);
  if (v41)
  {
    if (v42)
    {
      *v39 = *v40;
      v39[1] = v40[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v39[2] = v40[2];
      v39[3] = v40[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v39[4] = v40[4];
      v39[5] = v40[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D59315F8((uint64_t)v39);
      v44 = *((_OWORD *)v40 + 1);
      v43 = *((_OWORD *)v40 + 2);
      *(_OWORD *)v39 = *(_OWORD *)v40;
      *((_OWORD *)v39 + 1) = v44;
      *((_OWORD *)v39 + 2) = v43;
    }
  }
  else if (v42)
  {
    *v39 = *v40;
    v39[1] = v40[1];
    v39[2] = v40[2];
    v39[3] = v40[3];
    v39[4] = v40[4];
    v39[5] = v40[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v45 = *(_OWORD *)v40;
    v46 = *((_OWORD *)v40 + 2);
    *((_OWORD *)v39 + 1) = *((_OWORD *)v40 + 1);
    *((_OWORD *)v39 + 2) = v46;
    *(_OWORD *)v39 = v45;
  }
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  v50 = *(_QWORD *)(a1 + v47 + 16);
  v51 = *(_QWORD *)(a2 + v47 + 16);
  if (v50)
  {
    if (v51)
    {
      *(_BYTE *)v48 = *(_BYTE *)v49;
      *(_BYTE *)(v48 + 1) = *(_BYTE *)(v49 + 1);
      *(_QWORD *)(v48 + 8) = *(_QWORD *)(v49 + 8);
      *(_QWORD *)(v48 + 16) = *(_QWORD *)(v49 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v48 + 24) = *(_DWORD *)(v49 + 24);
      *(_DWORD *)(v48 + 28) = *(_DWORD *)(v49 + 28);
      *(_QWORD *)(v48 + 32) = *(_QWORD *)(v49 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v48 + 40) = *(_QWORD *)(v49 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v48 + 48) = *(_QWORD *)(v49 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v48 + 56) = *(_QWORD *)(v49 + 56);
      *(_QWORD *)(v48 + 64) = *(_QWORD *)(v49 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v48 + 72) = *(_QWORD *)(v49 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v48 + 80) = *(_BYTE *)(v49 + 80);
      *(_QWORD *)(v48 + 88) = *(_QWORD *)(v49 + 88);
      *(_QWORD *)(v48 + 96) = *(_QWORD *)(v49 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v52 = *(_QWORD *)(v49 + 104);
      *(_BYTE *)(v48 + 112) = *(_BYTE *)(v49 + 112);
      *(_QWORD *)(v48 + 104) = v52;
      *(_QWORD *)(v48 + 120) = *(_QWORD *)(v49 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v48 + 128) = *(_QWORD *)(v49 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D5A9B2F4(v48);
      *(_OWORD *)v48 = *(_OWORD *)v49;
      v54 = *(_OWORD *)(v49 + 64);
      v56 = *(_OWORD *)(v49 + 16);
      v55 = *(_OWORD *)(v49 + 32);
      *(_OWORD *)(v48 + 48) = *(_OWORD *)(v49 + 48);
      *(_OWORD *)(v48 + 64) = v54;
      *(_OWORD *)(v48 + 16) = v56;
      *(_OWORD *)(v48 + 32) = v55;
      v58 = *(_OWORD *)(v49 + 96);
      v57 = *(_OWORD *)(v49 + 112);
      v59 = *(_OWORD *)(v49 + 80);
      *(_QWORD *)(v48 + 128) = *(_QWORD *)(v49 + 128);
      *(_OWORD *)(v48 + 96) = v58;
      *(_OWORD *)(v48 + 112) = v57;
      *(_OWORD *)(v48 + 80) = v59;
    }
  }
  else if (v51)
  {
    *(_BYTE *)v48 = *(_BYTE *)v49;
    *(_BYTE *)(v48 + 1) = *(_BYTE *)(v49 + 1);
    *(_QWORD *)(v48 + 8) = *(_QWORD *)(v49 + 8);
    *(_QWORD *)(v48 + 16) = *(_QWORD *)(v49 + 16);
    *(_DWORD *)(v48 + 24) = *(_DWORD *)(v49 + 24);
    *(_DWORD *)(v48 + 28) = *(_DWORD *)(v49 + 28);
    *(_QWORD *)(v48 + 32) = *(_QWORD *)(v49 + 32);
    *(_QWORD *)(v48 + 40) = *(_QWORD *)(v49 + 40);
    *(_QWORD *)(v48 + 48) = *(_QWORD *)(v49 + 48);
    *(_QWORD *)(v48 + 56) = *(_QWORD *)(v49 + 56);
    *(_QWORD *)(v48 + 64) = *(_QWORD *)(v49 + 64);
    *(_QWORD *)(v48 + 72) = *(_QWORD *)(v49 + 72);
    *(_BYTE *)(v48 + 80) = *(_BYTE *)(v49 + 80);
    *(_QWORD *)(v48 + 88) = *(_QWORD *)(v49 + 88);
    *(_QWORD *)(v48 + 96) = *(_QWORD *)(v49 + 96);
    v53 = *(_QWORD *)(v49 + 104);
    *(_BYTE *)(v48 + 112) = *(_BYTE *)(v49 + 112);
    *(_QWORD *)(v48 + 104) = v53;
    *(_QWORD *)(v48 + 120) = *(_QWORD *)(v49 + 120);
    *(_QWORD *)(v48 + 128) = *(_QWORD *)(v49 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v48 = *(_OWORD *)v49;
    v60 = *(_OWORD *)(v49 + 16);
    v61 = *(_OWORD *)(v49 + 32);
    v62 = *(_OWORD *)(v49 + 64);
    *(_OWORD *)(v48 + 48) = *(_OWORD *)(v49 + 48);
    *(_OWORD *)(v48 + 64) = v62;
    *(_OWORD *)(v48 + 16) = v60;
    *(_OWORD *)(v48 + 32) = v61;
    v63 = *(_OWORD *)(v49 + 80);
    v64 = *(_OWORD *)(v49 + 96);
    v65 = *(_OWORD *)(v49 + 112);
    *(_QWORD *)(v48 + 128) = *(_QWORD *)(v49 + 128);
    *(_OWORD *)(v48 + 96) = v64;
    *(_OWORD *)(v48 + 112) = v65;
    *(_OWORD *)(v48 + 80) = v63;
  }
  v66 = a3[16];
  v67 = a1 + v66;
  v68 = (__int128 *)(a2 + v66);
  v69 = *(_QWORD *)(a1 + v66 + 16);
  v70 = *(_QWORD *)(a2 + v66 + 16);
  if (v69 == 1)
  {
    if (v70 == 1)
    {
      v71 = *v68;
      *(_QWORD *)(v67 + 16) = *((_QWORD *)v68 + 2);
      *(_OWORD *)v67 = v71;
    }
    else
    {
      *(_BYTE *)v67 = *(_BYTE *)v68;
      *(_QWORD *)(v67 + 8) = *((_QWORD *)v68 + 1);
      *(_QWORD *)(v67 + 16) = *((_QWORD *)v68 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v70 == 1)
  {
    sub_1D5A9B328(v67);
    v72 = *((_QWORD *)v68 + 2);
    *(_OWORD *)v67 = *v68;
    *(_QWORD *)(v67 + 16) = v72;
  }
  else
  {
    *(_BYTE *)v67 = *(_BYTE *)v68;
    *(_QWORD *)(v67 + 8) = *((_QWORD *)v68 + 1);
    *(_QWORD *)(v67 + 16) = *((_QWORD *)v68 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v73 = a3[17];
  v74 = a1 + v73;
  v75 = a2 + v73;
  *(_QWORD *)v74 = *(_QWORD *)(a2 + v73);
  *(_QWORD *)(v74 + 8) = *(_QWORD *)(a2 + v73 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v74 + 16) = *(_QWORD *)(v75 + 16);
  *(_BYTE *)(v74 + 24) = *(_BYTE *)(v75 + 24);
  return a1;
}

uint64_t sub_1D5A9B2F4(uint64_t a1)
{
  destroy for GroupData();
  return a1;
}

uint64_t sub_1D5A9B328(uint64_t a1)
{
  destroy for FeedData();
  return a1;
}

uint64_t initializeWithTake for FeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  _OWORD *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  _OWORD *v45;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  v15 = a1 + v12;
  v16 = a2 + v12;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_WORD *)(v15 + 16) = *(_WORD *)(v16 + 16);
  v17 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  v18 = (_OWORD *)(a1 + v17);
  v19 = (_OWORD *)(a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v18[2] = v19[2];
  v21 = a3[10];
  v22 = a3[11];
  v23 = a1 + v21;
  v24 = a2 + v21;
  v25 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v25;
  *(_OWORD *)(v23 + 32) = *(_OWORD *)(v24 + 32);
  *(_BYTE *)(v23 + 48) = *(_BYTE *)(v24 + 48);
  v26 = a1 + v22;
  v27 = a2 + v22;
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_BYTE *)(v26 + 16) = *(_BYTE *)(v27 + 16);
  v28 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v28) = *(_OWORD *)(a2 + v28);
  v29 = a3[14];
  v30 = a3[15];
  v31 = (_OWORD *)(a1 + v29);
  v32 = (_OWORD *)(a2 + v29);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v31[2] = v32[2];
  v34 = a1 + v30;
  v35 = a2 + v30;
  v36 = *(_OWORD *)(v35 + 48);
  *(_OWORD *)(v34 + 32) = *(_OWORD *)(v35 + 32);
  *(_OWORD *)(v34 + 48) = v36;
  v37 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v37;
  *(_QWORD *)(v34 + 128) = *(_QWORD *)(v35 + 128);
  v38 = *(_OWORD *)(v35 + 112);
  *(_OWORD *)(v34 + 96) = *(_OWORD *)(v35 + 96);
  *(_OWORD *)(v34 + 112) = v38;
  v39 = *(_OWORD *)(v35 + 80);
  *(_OWORD *)(v34 + 64) = *(_OWORD *)(v35 + 64);
  *(_OWORD *)(v34 + 80) = v39;
  v40 = a3[16];
  v41 = a3[17];
  v42 = a1 + v40;
  v43 = a2 + v40;
  *(_OWORD *)v42 = *(_OWORD *)v43;
  *(_QWORD *)(v42 + 16) = *(_QWORD *)(v43 + 16);
  v44 = (_OWORD *)(a1 + v41);
  v45 = (_OWORD *)(a2 + v41);
  *v44 = *v45;
  *(_OWORD *)((char *)v44 + 9) = *(_OWORD *)((char *)v45 + 9);
  return a1;
}

uint64_t assignWithTake for FeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  v15 = *(_QWORD *)(v13 + 8);
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 8) = v15;
  *(_QWORD *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = a3[9];
  v22 = *(_WORD *)(a2 + v20);
  *(_WORD *)(v17 + 16) = *(_WORD *)(v18 + 16);
  *(_WORD *)(a1 + v20) = v22;
  v23 = (_QWORD *)(a1 + v21);
  v24 = (_QWORD *)(a2 + v21);
  if (*(_QWORD *)(a1 + v21 + 8))
  {
    v25 = v24[1];
    if (v25)
    {
      *v23 = *v24;
      v23[1] = v25;
      swift_bridgeObjectRelease();
      v26 = v24[3];
      v23[2] = v24[2];
      v23[3] = v26;
      swift_bridgeObjectRelease();
      v27 = v24[5];
      v23[4] = v24[4];
      v23[5] = v27;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D5829E98(a1 + v21);
  }
  v28 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v28;
  *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
LABEL_6:
  v29 = a3[10];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_BYTE *)v30 = *(_BYTE *)(a2 + v29);
  v32 = *(_QWORD *)(a2 + v29 + 16);
  *(_QWORD *)(v30 + 8) = *(_QWORD *)(a2 + v29 + 8);
  *(_QWORD *)(v30 + 16) = v32;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v30 + 24) = *(_BYTE *)(v31 + 24);
  *(_BYTE *)(v30 + 25) = *(_BYTE *)(v31 + 25);
  v33 = *(_QWORD *)(v31 + 40);
  *(_QWORD *)(v30 + 32) = *(_QWORD *)(v31 + 32);
  *(_QWORD *)(v30 + 40) = v33;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v30 + 48) = *(_BYTE *)(v31 + 48);
  v34 = a3[11];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = *(_QWORD *)(a2 + v34 + 8);
  *(_QWORD *)v35 = *(_QWORD *)(a2 + v34);
  *(_QWORD *)(v35 + 8) = v37;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v35 + 16) = *(_BYTE *)(v36 + 16);
  v38 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v39 = (_QWORD *)(a1 + v38);
  v40 = (uint64_t *)(a2 + v38);
  v42 = *v40;
  v41 = v40[1];
  *v39 = v42;
  v39[1] = v41;
  swift_bridgeObjectRelease();
  v43 = a3[14];
  v44 = (_QWORD *)(a1 + v43);
  v45 = (_QWORD *)(a2 + v43);
  if (*(_QWORD *)(a1 + v43 + 8))
  {
    v46 = v45[1];
    if (v46)
    {
      *v44 = *v45;
      v44[1] = v46;
      swift_bridgeObjectRelease();
      v47 = v45[3];
      v44[2] = v45[2];
      v44[3] = v47;
      swift_bridgeObjectRelease();
      v48 = v45[5];
      v44[4] = v45[4];
      v44[5] = v48;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D59315F8((uint64_t)v44);
  }
  v49 = *((_OWORD *)v45 + 1);
  *(_OWORD *)v44 = *(_OWORD *)v45;
  *((_OWORD *)v44 + 1) = v49;
  *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
LABEL_11:
  v50 = a3[15];
  v51 = a1 + v50;
  v52 = a2 + v50;
  if (*(_QWORD *)(a1 + v50 + 16))
  {
    v53 = *(_QWORD *)(v52 + 16);
    if (v53)
    {
      *(_WORD *)v51 = *(_WORD *)v52;
      *(_QWORD *)(v51 + 8) = *(_QWORD *)(v52 + 8);
      *(_QWORD *)(v51 + 16) = v53;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v51 + 24) = *(_QWORD *)(v52 + 24);
      *(_QWORD *)(v51 + 32) = *(_QWORD *)(v52 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v51 + 40) = *(_QWORD *)(v52 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v51 + 48) = *(_QWORD *)(v52 + 48);
      swift_bridgeObjectRelease();
      v54 = *(_QWORD *)(v52 + 64);
      *(_QWORD *)(v51 + 56) = *(_QWORD *)(v52 + 56);
      *(_QWORD *)(v51 + 64) = v54;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v51 + 72) = *(_QWORD *)(v52 + 72);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v51 + 80) = *(_BYTE *)(v52 + 80);
      v55 = *(_QWORD *)(v52 + 96);
      *(_QWORD *)(v51 + 88) = *(_QWORD *)(v52 + 88);
      *(_QWORD *)(v51 + 96) = v55;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v51 + 104) = *(_QWORD *)(v52 + 104);
      *(_BYTE *)(v51 + 112) = *(_BYTE *)(v52 + 112);
      *(_QWORD *)(v51 + 120) = *(_QWORD *)(v52 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v51 + 128) = *(_QWORD *)(v52 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1D5A9B2F4(v51);
  }
  v56 = *(_OWORD *)(v52 + 112);
  *(_OWORD *)(v51 + 96) = *(_OWORD *)(v52 + 96);
  *(_OWORD *)(v51 + 112) = v56;
  *(_QWORD *)(v51 + 128) = *(_QWORD *)(v52 + 128);
  v57 = *(_OWORD *)(v52 + 48);
  *(_OWORD *)(v51 + 32) = *(_OWORD *)(v52 + 32);
  *(_OWORD *)(v51 + 48) = v57;
  v58 = *(_OWORD *)(v52 + 80);
  *(_OWORD *)(v51 + 64) = *(_OWORD *)(v52 + 64);
  *(_OWORD *)(v51 + 80) = v58;
  v59 = *(_OWORD *)(v52 + 16);
  *(_OWORD *)v51 = *(_OWORD *)v52;
  *(_OWORD *)(v51 + 16) = v59;
LABEL_16:
  v60 = a3[16];
  v61 = a1 + v60;
  v62 = a2 + v60;
  if (*(_QWORD *)(a1 + v60 + 16) != 1)
  {
    v63 = *(_QWORD *)(v62 + 16);
    if (v63 != 1)
    {
      *(_BYTE *)v61 = *(_BYTE *)v62;
      *(_QWORD *)(v61 + 8) = *(_QWORD *)(v62 + 8);
      *(_QWORD *)(v61 + 16) = v63;
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1D5A9B328(v61);
  }
  *(_OWORD *)v61 = *(_OWORD *)v62;
  *(_QWORD *)(v61 + 16) = *(_QWORD *)(v62 + 16);
LABEL_21:
  v64 = a3[17];
  v65 = a1 + v64;
  v66 = a2 + v64;
  v67 = *(_QWORD *)(v66 + 8);
  *(_QWORD *)v65 = *(_QWORD *)v66;
  *(_QWORD *)(v65 + 8) = v67;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v65 + 16) = *(_QWORD *)(v66 + 16);
  *(_BYTE *)(v65 + 24) = *(_BYTE *)(v66 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedViewEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A9B8C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedViewEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5A9B980(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedViewEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1D5A9BA74 + 4 * byte_1D5AE8D93[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_1D5A9BAA8 + 4 * byte_1D5AE8D8E[v4]))();
}

uint64_t sub_1D5A9BAA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A9BAB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A9BAB8);
  return result;
}

uint64_t sub_1D5A9BAC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A9BACCLL);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_1D5A9BAD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A9BAD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedViewEvent.Model.CodingKeys()
{
  return &type metadata for FeedViewEvent.Model.CodingKeys;
}

unint64_t sub_1D5A9BAF8()
{
  unint64_t result;

  result = qword_1EFF52888;
  if (!qword_1EFF52888)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE90C4, &type metadata for FeedViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52888);
  }
  return result;
}

unint64_t sub_1D5A9BB40()
{
  unint64_t result;

  result = qword_1ED9C79F8;
  if (!qword_1ED9C79F8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE9034, &type metadata for FeedViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C79F8);
  }
  return result;
}

unint64_t sub_1D5A9BB88()
{
  unint64_t result;

  result = qword_1ED9C79F0;
  if (!qword_1ED9C79F0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE905C, &type metadata for FeedViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C79F0);
  }
  return result;
}

uint64_t sub_1D5A9BBCC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E676961706D6163 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6144686372616573 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x44646E4577656976 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x61746144676174 && a2 == 0xE700000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6C61727265666572 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AF2BB0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AF2BD0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AF2BF0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

uint64_t AutoSubscribedData.internalAutoSubscribedCount.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t AutoSubscribedData.internalAutoSubscribedCount.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*AutoSubscribedData.internalAutoSubscribedCount.modify())()
{
  return nullsub_1;
}

uint64_t AutoSubscribedData.init(internalAutoSubscribedCount:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1D5A9C204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A9C450(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D5A9C22C()
{
  sub_1D57AA350();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A9C254()
{
  sub_1D57AA350();
  return sub_1D5AAEEE0();
}

uint64_t AutoSubscribedData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D57AA394(0, &qword_1ED9CC918, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57AA350();
  sub_1D5AAEEC8();
  sub_1D5AAED78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t storeEnumTagSinglePayload for AutoSubscribedData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5A9C3AC + 4 * byte_1D5AE9140[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5A9C3CC + 4 * byte_1D5AE9145[v4]))();
}

_BYTE *sub_1D5A9C3AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5A9C3CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A9C3D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A9C3DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A9C3E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A9C3EC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AutoSubscribedData.CodingKeys()
{
  return &type metadata for AutoSubscribedData.CodingKeys;
}

unint64_t sub_1D5A9C40C()
{
  unint64_t result;

  result = qword_1EFF52890;
  if (!qword_1EFF52890)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE9290, &type metadata for AutoSubscribedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52890);
  }
  return result;
}

uint64_t sub_1D5A9C450(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD00000000000001BLL && a2 == 0x80000001D5AF2C10)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1D5A9C4D4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FeedJournalGroupResultData.init(groupName:emitterName:output:duration:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v7;

  v7 = *a5;
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  *(_BYTE *)(a7 + 32) = v7;
  *(_QWORD *)(a7 + 40) = a6;
  return result;
}

uint64_t FeedJournalGroupResultData.groupName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedJournalGroupResultData.groupName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FeedJournalGroupResultData.groupName.modify())()
{
  return nullsub_1;
}

uint64_t FeedJournalGroupResultData.emitterName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedJournalGroupResultData.emitterName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FeedJournalGroupResultData.emitterName.modify())()
{
  return nullsub_1;
}

void FeedJournalGroupResultData.output.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

_BYTE *FeedJournalGroupResultData.output.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = *result;
  return result;
}

uint64_t (*FeedJournalGroupResultData.output.modify())()
{
  return nullsub_1;
}

uint64_t FeedJournalGroupResultData.duration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t FeedJournalGroupResultData.duration.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*FeedJournalGroupResultData.duration.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5A9C640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A9CB40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5A9C664()
{
  sub_1D57C713C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A9C68C()
{
  sub_1D57C713C();
  return sub_1D5AAEEE0();
}

uint64_t FeedJournalGroupResultData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  unsigned __int8 v24;
  char v25;
  char v26;

  sub_1D57C566C(0, &qword_1EFF52898, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D57C713C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v26 = 0;
    v10 = sub_1D5AAEC58();
    v13 = v12;
    v21 = v10;
    v25 = 1;
    swift_bridgeObjectRetain();
    v14 = sub_1D5AAEC58();
    v16 = v15;
    v20 = v14;
    v23 = 2;
    sub_1D5A9C918();
    swift_bridgeObjectRetain();
    sub_1D5AAECD0();
    v19 = v24;
    v22 = 3;
    v17 = sub_1D5AAECE8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_QWORD *)a2 = v21;
    *(_QWORD *)(a2 + 8) = v13;
    *(_QWORD *)(a2 + 16) = v20;
    *(_QWORD *)(a2 + 24) = v16;
    *(_BYTE *)(a2 + 32) = v19;
    *(_QWORD *)(a2 + 40) = v17;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1D5A9C918()
{
  unint64_t result;

  result = qword_1EFF528A0;
  if (!qword_1EFF528A0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FeedJournalGroupResultOutput, &type metadata for FeedJournalGroupResultOutput);
    atomic_store(result, (unint64_t *)&qword_1EFF528A0);
  }
  return result;
}

uint64_t sub_1D5A9C964@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedJournalGroupResultData.init(from:)(a1, a2);
}

uint64_t assignWithCopy for FeedJournalGroupResultData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for FeedJournalGroupResultData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for FeedJournalGroupResultData()
{
  return &type metadata for FeedJournalGroupResultData;
}

ValueMetadata *type metadata accessor for FeedJournalGroupResultData.CodingKeys()
{
  return &type metadata for FeedJournalGroupResultData.CodingKeys;
}

unint64_t sub_1D5A9CA6C()
{
  unint64_t result;

  result = qword_1EFF528A8;
  if (!qword_1EFF528A8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE94D8, &type metadata for FeedJournalGroupResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF528A8);
  }
  return result;
}

unint64_t sub_1D5A9CAB4()
{
  unint64_t result;

  result = qword_1ED9D0930;
  if (!qword_1ED9D0930)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE9448, &type metadata for FeedJournalGroupResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0930);
  }
  return result;
}

unint64_t sub_1D5A9CAFC()
{
  unint64_t result;

  result = qword_1ED9D0928;
  if (!qword_1ED9D0928)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE9470, &type metadata for FeedJournalGroupResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9D0928);
  }
  return result;
}

uint64_t sub_1D5A9CB40(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D614E70756F7267 && a2 == 0xE900000000000065;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E72657474696D65 && a2 == 0xEB00000000656D61 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74757074756FLL && a2 == 0xE600000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

NewsAnalytics::WebEmbedData __swiftcall WebEmbedData.init(embedUrl:)(NewsAnalytics::WebEmbedData embedUrl)
{
  NewsAnalytics::WebEmbedData *v1;

  *v1 = embedUrl;
  return embedUrl;
}

uint64_t WebEmbedData.embedUrl.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WebEmbedData.embedUrl.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*WebEmbedData.embedUrl.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5A9CD8C()
{
  return 0x6C72556465626D65;
}

uint64_t sub_1D5A9CDA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6C72556465626D65 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5AAEDE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5A9CE38()
{
  sub_1D5A9CF7C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A9CE60()
{
  sub_1D5A9CF7C();
  return sub_1D5AAEEE0();
}

uint64_t WebEmbedData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5A9D0E4(0, &qword_1ED9C6EF0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A9CF7C();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D5A9CF7C()
{
  unint64_t result;

  result = qword_1ED9C6838;
  if (!qword_1ED9C6838)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE96C4, &type metadata for WebEmbedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C6838);
  }
  return result;
}

uint64_t WebEmbedData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D5A9D0E4(0, &qword_1ED9C6EC8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A9CF7C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECA0();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A9D0E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A9CF7C();
    v7 = a3(a1, &type metadata for WebEmbedData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A9D148@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return WebEmbedData.init(from:)(a1, a2);
}

uint64_t sub_1D5A9D15C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5A9D0E4(0, &qword_1ED9C6EF0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A9CF7C();
  sub_1D5AAEEC8();
  sub_1D5AAED3C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for WebEmbedData()
{
  return &type metadata for WebEmbedData;
}

uint64_t storeEnumTagSinglePayload for WebEmbedData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5A9D2A0 + 4 * byte_1D5AE9550[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5A9D2C0 + 4 * byte_1D5AE9555[v4]))();
}

_BYTE *sub_1D5A9D2A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5A9D2C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A9D2C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A9D2D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A9D2D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A9D2E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WebEmbedData.CodingKeys()
{
  return &type metadata for WebEmbedData.CodingKeys;
}

unint64_t sub_1D5A9D300()
{
  unint64_t result;

  result = qword_1EFF528B0;
  if (!qword_1EFF528B0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE969C, &type metadata for WebEmbedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF528B0);
  }
  return result;
}

unint64_t sub_1D5A9D348()
{
  unint64_t result;

  result = qword_1ED9C7878;
  if (!qword_1ED9C7878)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE960C, &type metadata for WebEmbedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C7878);
  }
  return result;
}

unint64_t sub_1D5A9D390()
{
  unint64_t result;

  result = qword_1ED9C6840;
  if (!qword_1ED9C6840)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE9634, &type metadata for WebEmbedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C6840);
  }
  return result;
}

uint64_t URLHandlerContext<A>.urlReferralData()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  id v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  __int128 v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int16 v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  id v72;
  void *v73;
  id v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  void (*v105)(char *, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(uint64_t, uint64_t);
  char *v110;
  _OWORD v111[28];
  uint64_t v112[58];

  v102 = sub_1D5AAE0D0();
  v100 = *(_QWORD *)(v102 - 8);
  v3 = MEMORY[0x1E0C80A78](v102);
  v101 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v99 = (char *)&v84 - v5;
  sub_1D5A9DB84();
  v7 = v6;
  v108 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v103 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D5AAD668();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v84 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v110 = (char *)&v84 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v84 - v15;
  v17 = sub_1D5AAE0F4();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v98 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v19);
  v97 = (char *)&v84 - v22;
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v84 - v23;
  v96 = v7;
  v25 = v1;
  sub_1D5AAE190();
  sub_1D5AAE0C4();
  v105 = *(void (**)(char *, uint64_t))(v18 + 8);
  v106 = v17;
  v105(v24, v17);
  v26 = sub_1D57EF548(0x6163696669746F6ELL, 0xEE0044496E6F6974);
  v28 = v27;
  v29 = *(void (**)(char *, uint64_t))(v10 + 8);
  v104 = (uint64_t)v16;
  v29(v16, v9);
  v107 = v9;
  if (v28)
  {
    v93 = v28;
    v89 = v26;
    sub_1D5A9DBD8((char *)v112);
    v88 = (LOBYTE(v112[0]) << 8) | 2;
    v87 = 1;
  }
  else
  {
    v89 = 0;
    v87 = 0;
    v88 = 0;
    v93 = 1;
  }
  v30 = v96;
  v31 = sub_1D5AAE184();
  if (*(_QWORD *)(v31 + 16))
  {
    v32 = v25;
    v33 = v29;
    v34 = (id)*MEMORY[0x1E0DC4810];
    v35 = sub_1D5A9E300((uint64_t)v34);
    if ((v36 & 1) != 0)
      sub_1D57E6B64(*(_QWORD *)(v31 + 56) + 32 * v35, (uint64_t)v112);
    else
      memset(v112, 0, 32);

    v37 = v107;
    v29 = v33;
    v25 = v32;
  }
  else
  {
    memset(v112, 0, 32);
    v37 = v107;
  }
  swift_bridgeObjectRelease();
  v109 = (void (*)(uint64_t, uint64_t))v29;
  if (!v112[3])
  {
    sub_1D57C5484((uint64_t)v112);
    goto LABEL_15;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v103, v25, v30);
    goto LABEL_16;
  }
  v38 = v111[0];
  v39 = v103;
  (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v103, v25, v30);
  if (*((_QWORD *)&v38 + 1))
  {
    v40 = v37;
    v85 = *((_QWORD *)&v38 + 1);
    v86 = v38;
    v41 = v39;
    goto LABEL_20;
  }
LABEL_16:
  sub_1D5AAE190();
  v42 = v104;
  sub_1D5AAE0C4();
  v105(v24, v106);
  v43 = sub_1D57EF548(0x724664656E65706FLL, 0xEA00000000006D6FLL);
  v45 = v44;
  v29((char *)v42, v37);
  v40 = v37;
  if (v45)
  {
    v85 = v45;
    v86 = v43;
  }
  else
  {
    v85 = 0xE000000000000000;
    v86 = 0;
  }
  v41 = v103;
LABEL_20:
  (*(void (**)(char *, uint64_t))(v108 + 8))(v41, v30);
  sub_1D5AAE190();
  v46 = v104;
  sub_1D5AAE0C4();
  v47 = v24;
  v49 = v105;
  v48 = v106;
  v105(v47, v106);
  sub_1D5AAD620();
  v109(v46, v40);
  v50 = sub_1D5AAD62C();
  v91 = v51;
  v92 = v50;
  sub_1D5A9DFC0(v25, v112);
  v108 = v112[0];
  v103 = (char *)v112[2];
  v104 = v112[1];
  v95 = v112[4];
  v96 = v112[3];
  v94 = v112[5];
  v52 = v97;
  sub_1D5AAE190();
  v53 = v99;
  sub_1D5AAE0E8();
  v49(v52, v48);
  v90 = sub_1D5AAE0DC();
  v97 = v54;
  v55 = *(void (**)(char *, uint64_t))(v100 + 8);
  v56 = v102;
  v55(v53, v102);
  v57 = v98;
  sub_1D5AAE190();
  v58 = v101;
  sub_1D5AAE0E8();
  v49(v57, v48);
  sub_1D5AAE820();
  sub_1D5AAE0DC();
  v60 = v59;
  swift_bridgeObjectRelease();
  v55(v58, v56);
  if (v60)
  {
    sub_1D5AAD638();
    swift_bridgeObjectRelease();
    v69 = sub_1D5AAD674();
    v71 = v70;
    v72 = objc_allocWithZone(MEMORY[0x1E0D628B8]);
    sub_1D581B6EC(v69, v71);
    v73 = (void *)sub_1D5AAD68C();
    sub_1D57E69C4(v69, v71);
    v74 = objc_msgSend(v72, sel_initWithData_, v73);

    v75 = v107;
    v62 = v89;
    if (v74)
    {
      sub_1D586D508((uint64_t)v112);

      sub_1D57E69C4(v69, v71);
      v64 = (void (*)(char *, uint64_t))v109;
      v109((uint64_t)v84, v75);
      memcpy(v111, v112, sizeof(v111));
      nullsub_1(v111);
    }
    else
    {
      v64 = (void (*)(char *, uint64_t))v109;
      v109((uint64_t)v84, v107);
      sub_1D57E69C4(v69, v71);
      sub_1D5A9E380(v111);
    }
    sub_1D5975960((uint64_t)v111, (uint64_t)v112);
    v61 = v75;
    v63 = v88;
    v65 = v87;
    v68 = v90;
    v67 = v91;
    v66 = v92;
  }
  else
  {
    sub_1D5A9E380(v111);
    sub_1D5975960((uint64_t)v111, (uint64_t)v112);
    v61 = v107;
    v62 = v89;
    v63 = v88;
    v64 = (void (*)(char *, uint64_t))v109;
    v65 = v87;
    v67 = v91;
    v66 = v92;
    v68 = v90;
  }
  v76 = v97;
  if (v97)
    v77 = v68;
  else
    v77 = 0;
  v64(v110, v61);
  v78 = v85;
  *(_QWORD *)a1 = v86;
  *(_QWORD *)(a1 + 8) = v78;
  *(_QWORD *)(a1 + 16) = v66;
  *(_QWORD *)(a1 + 24) = v67;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  v79 = v104;
  *(_QWORD *)(a1 + 48) = v108;
  *(_QWORD *)(a1 + 56) = v79;
  v80 = v96;
  *(_QWORD *)(a1 + 64) = v103;
  *(_QWORD *)(a1 + 72) = v80;
  v81 = v94;
  *(_QWORD *)(a1 + 80) = v95;
  *(_QWORD *)(a1 + 88) = v81;
  *(_QWORD *)(a1 + 96) = v77;
  *(_QWORD *)(a1 + 104) = v76;
  v82 = v93;
  *(_QWORD *)(a1 + 112) = v62;
  *(_QWORD *)(a1 + 120) = v82;
  *(_QWORD *)(a1 + 128) = v65;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_WORD *)(a1 + 184) = v63;
  return sub_1D5975960((uint64_t)v112, a1 + 192);
}

void sub_1D5A9DB84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9D0BF0)
  {
    sub_1D5AAE34C();
    v0 = sub_1D5AAE19C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9D0BF0);
  }
}

uint64_t sub_1D5A9DBD8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unint64_t v19;
  char v20;
  char v21;
  unsigned __int8 v22;
  BOOL v23;
  unint64_t v24;
  uint64_t v25;
  unsigned __int8 *v26;
  unsigned int v27;
  char v28;
  char v29;
  uint64_t v30;
  unsigned __int8 *v31;
  unsigned int v32;
  unsigned __int8 v33;
  unint64_t v34;
  uint64_t v35;
  unsigned __int8 *v36;
  unsigned int v37;
  char v38;
  _QWORD v40[3];

  v2 = sub_1D5AAD668();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v40[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D5AAE0F4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v40[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A9DB84();
  sub_1D5AAE190();
  sub_1D5AAE0C4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v10 = sub_1D57EF548(0xD00000000000001DLL, 0x80000001D5AF0AD0);
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v12)
    result = v10;
  else
    result = 0;
  if (v12)
    v14 = v12;
  else
    v14 = 0xE000000000000000;
  v15 = HIBYTE(v14) & 0xF;
  v16 = result & 0xFFFFFFFFFFFFLL;
  if ((v14 & 0x2000000000000000) != 0)
    v17 = HIBYTE(v14) & 0xF;
  else
    v17 = result & 0xFFFFFFFFFFFFLL;
  if (!v17)
  {
    result = swift_bridgeObjectRelease();
    v29 = 5;
LABEL_49:
    *a1 = v29;
    return result;
  }
  if ((v14 & 0x1000000000000000) != 0)
  {
    v19 = (unint64_t)sub_1D5A9E6D0(result, v14, 10);
    v21 = v38;
    goto LABEL_43;
  }
  if ((v14 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v18 = (unsigned __int8 *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v18 = (unsigned __int8 *)sub_1D5AAEBA4();
    v19 = (unint64_t)sub_1D5A9E7B4(v18, v16, 10);
    v21 = v20 & 1;
    goto LABEL_43;
  }
  v40[0] = result;
  v40[1] = v14 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v15)
    {
      if (v15 != 1 && (BYTE1(result) - 48) <= 9u)
      {
        v19 = (BYTE1(result) - 48);
        if (v15 == 2)
          goto LABEL_42;
        if ((BYTE2(result) - 48) <= 9u)
        {
          v19 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
          v25 = v15 - 3;
          if (v25)
          {
            v26 = (unsigned __int8 *)v40 + 3;
            while (1)
            {
              v27 = *v26 - 48;
              if (v27 > 9)
                goto LABEL_39;
              if (!is_mul_ok(v19, 0xAuLL))
                goto LABEL_39;
              v23 = __CFADD__(10 * v19, v27);
              v19 = 10 * v19 + v27;
              if (v23)
                goto LABEL_39;
              v21 = 0;
              ++v26;
              if (!--v25)
                goto LABEL_43;
            }
          }
          goto LABEL_42;
        }
      }
      goto LABEL_39;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v15 && (result - 48) <= 9u)
      {
        v19 = (result - 48);
        if (v15 == 1)
          goto LABEL_42;
        if ((BYTE1(result) - 48) <= 9u)
        {
          v19 = 10 * (result - 48) + (BYTE1(result) - 48);
          v30 = v15 - 2;
          if (v30)
          {
            v31 = (unsigned __int8 *)v40 + 2;
            while (1)
            {
              v32 = *v31 - 48;
              if (v32 > 9)
                goto LABEL_39;
              if (!is_mul_ok(v19, 0xAuLL))
                goto LABEL_39;
              v23 = __CFADD__(10 * v19, v32);
              v19 = 10 * v19 + v32;
              if (v23)
                goto LABEL_39;
              v21 = 0;
              ++v31;
              if (!--v30)
                goto LABEL_43;
            }
          }
          goto LABEL_42;
        }
      }
LABEL_39:
      v19 = 0;
LABEL_40:
      v21 = 1;
      goto LABEL_43;
    }
    if (v15)
    {
      if (v15 != 1)
      {
        v22 = BYTE1(result) - 48;
        if ((BYTE1(result) - 48) <= 9u)
        {
          v19 = 0;
          v23 = v22 == 0;
          v24 = -(uint64_t)v22;
          if (!v23)
            goto LABEL_40;
          if (v15 == 2)
          {
            v21 = 0;
            v19 = v24;
LABEL_43:
            result = swift_bridgeObjectRelease();
            if (v19 <= 3)
              v28 = v19 + 1;
            else
              v28 = 0;
            if ((v21 & 1) != 0)
              v29 = 5;
            else
              v29 = v28;
            goto LABEL_49;
          }
          v33 = BYTE2(result) - 48;
          if ((BYTE2(result) - 48) <= 9u && is_mul_ok(v24, 0xAuLL))
          {
            v34 = 10 * v24;
            v19 = v34 - v33;
            if (v34 >= v33)
            {
              v35 = v15 - 3;
              if (v35)
              {
                v36 = (unsigned __int8 *)v40 + 3;
                while (1)
                {
                  v37 = *v36 - 48;
                  if (v37 > 9)
                    goto LABEL_39;
                  if (!is_mul_ok(v19, 0xAuLL))
                    goto LABEL_39;
                  v23 = 10 * v19 >= v37;
                  v19 = 10 * v19 - v37;
                  if (!v23)
                    goto LABEL_39;
                  v21 = 0;
                  ++v36;
                  if (!--v35)
                    goto LABEL_43;
                }
              }
LABEL_42:
              v21 = 0;
              goto LABEL_43;
            }
          }
        }
      }
      goto LABEL_39;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D5A9DFC0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t);
  uint64_t result;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;

  v4 = sub_1D5AAE0D0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v45 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v43 = (char *)&v39 - v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v39 - v10;
  v12 = sub_1D5AAE0F4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v42 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v39 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v39 - v19;
  sub_1D5A9DB84();
  v44 = a1;
  sub_1D5AAE190();
  sub_1D5AAE0E8();
  v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v20, v12);
  v41 = sub_1D5AAE0DC();
  v23 = v22;
  v24 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  v46 = v4;
  result = v24(v11, v4);
  if (v23)
  {
    v40 = v23;
    sub_1D5AAE190();
    v26 = v43;
    sub_1D5AAE0E8();
    v21(v18, v12);
    v39 = sub_1D5AAE0DC();
    v28 = v27;
    v29 = v26;
    v30 = v46;
    v24(v29, v46);
    v31 = v42;
    sub_1D5AAE190();
    v32 = v45;
    sub_1D5AAE0E8();
    v21(v31, v12);
    v33 = sub_1D5AAE0DC();
    v35 = v34;
    v36 = v32;
    v23 = v40;
    result = v24(v36, v30);
    v37 = v39;
    v38 = v41;
  }
  else
  {
    v38 = 0;
    v37 = 0;
    v28 = 0;
    v33 = 0;
    v35 = 0;
  }
  *a2 = v38;
  a2[1] = v23;
  a2[2] = v37;
  a2[3] = v28;
  a2[4] = v33;
  a2[5] = v35;
  return result;
}

unint64_t sub_1D5A9E278(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D5AAEB38();
  return sub_1D5A9E3C0(a1, v2);
}

unint64_t sub_1D5A9E2A8(uint64_t a1)
{
  uint64_t v2;

  sub_1D5AAEE80();
  sub_1D5AAEE8C();
  v2 = sub_1D5AAEE98();
  return sub_1D5A9E4C0(a1, v2);
}

unint64_t sub_1D5A9E300(uint64_t a1)
{
  uint64_t v2;

  sub_1D5AAE820();
  sub_1D5AAEE80();
  sub_1D5AAE874();
  v2 = sub_1D5AAEE98();
  swift_bridgeObjectRelease();
  return sub_1D5A9E55C(a1, v2);
}

double sub_1D5A9E380(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[26] = 0u;
  a1[27] = 0u;
  a1[24] = 0u;
  a1[25] = 0u;
  a1[22] = 0u;
  a1[23] = 0u;
  a1[20] = 0u;
  a1[21] = 0u;
  a1[18] = 0u;
  a1[19] = 0u;
  a1[16] = 0u;
  a1[17] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

unint64_t sub_1D5A9E3C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1D5A9E484(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1D8278F24](v9, a1);
      sub_1D588EBB0((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1D5A9E484(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

unint64_t sub_1D5A9E4C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1D5A9E55C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1D5AAE820();
    v8 = v7;
    if (v6 == sub_1D5AAE820() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1D5AAE820();
          v15 = v14;
          if (v13 == sub_1D5AAE820() && v15 == v16)
            break;
          v18 = sub_1D5AAEDE4();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unsigned __int8 *sub_1D5A9E6D0(uint64_t a1, uint64_t a2, int64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1D5AAE8E0();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1D5A9EA30();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1D5AAEBA4();
  }
LABEL_7:
  v11 = sub_1D5A9E7B4(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1D5A9E7B4(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  unint64_t v13;
  unsigned __int8 v14;
  BOOL v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  unint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unint64_t v28;
  unsigned int v29;
  char v30;
  unint64_t v31;
  unsigned __int8 v32;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              if (!is_mul_ok(v9, a3))
                return 0;
              v13 = v9 * a3;
              v14 = v11 + v12;
              v15 = v13 >= v14;
              v9 = v13 - v14;
              if (!v15)
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v25 = a3 + 48;
      v26 = a3 + 55;
      v27 = a3 + 87;
      if (a3 > 10)
      {
        v25 = 58;
      }
      else
      {
        v27 = 97;
        v26 = 65;
      }
      if (result)
      {
        v28 = 0;
        do
        {
          v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27)
                return 0;
              v30 = -87;
            }
            else
            {
              v30 = -55;
            }
          }
          else
          {
            v30 = -48;
          }
          if (!is_mul_ok(v28, a3))
            return 0;
          v31 = v28 * a3;
          v32 = v29 + v30;
          v15 = __CFADD__(v31, v32);
          v28 = v31 + v32;
          if (v15)
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v16 = a2 - 1;
  if (a2 == 1)
    return 0;
  v17 = a3 + 48;
  v18 = a3 + 55;
  v19 = a3 + 87;
  if (a3 > 10)
  {
    v17 = 58;
  }
  else
  {
    v19 = 97;
    v18 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v20 = result + 1;
  do
  {
    v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19)
          return 0;
        v22 = -87;
      }
      else
      {
        v22 = -55;
      }
    }
    else
    {
      v22 = -48;
    }
    if (!is_mul_ok(v9, a3))
      return 0;
    v23 = v9 * a3;
    v24 = v21 + v22;
    v15 = __CFADD__(v23, v24);
    v9 = v23 + v24;
    if (v15)
      return 0;
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1D5A9EA30()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1D5AAE8EC();
  v4 = sub_1D5A9EAAC(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1D5A9EAAC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_1D5A9EBF0(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1D5A9ECDC(v9, 0);
      v12 = sub_1D5A9ED54((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x1D8278C48](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1D8278C48);
LABEL_9:
      sub_1D5AAEBA4();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1D8278C48]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1D5A9EBF0(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1D5A9EF64(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1D5A9EF64(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_1D5AAE8BC();
  }
  __break(1u);
  return result;
}

_QWORD *sub_1D5A9ECDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1D57C5CCC(0, &qword_1EFF528B8, MEMORY[0x1E0DEDE70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unint64_t sub_1D5A9ED54(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_1D5A9EF64(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_1D5AAE8C8();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_1D5AAEBA4();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_1D5A9EF64(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_1D5AAE8A4();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1D5A9EF64(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1D5AAE8D4();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1D8278C90](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t ArticleScoreSummaryDataList.articleScoreSummaryData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ArticleScoreSummaryDataList.articleScoreSummaryData.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*ArticleScoreSummaryDataList.articleScoreSummaryData.modify())()
{
  return nullsub_1;
}

NewsAnalytics::ArticleScoreSummaryDataList __swiftcall ArticleScoreSummaryDataList.init(articleScoreSummaryData:)(NewsAnalytics::ArticleScoreSummaryDataList articleScoreSummaryData)
{
  NewsAnalytics::ArticleScoreSummaryDataList *v1;

  v1->articleScoreSummaryData._rawValue = articleScoreSummaryData.articleScoreSummaryData._rawValue;
  return articleScoreSummaryData;
}

unint64_t sub_1D5A9F024()
{
  return 0xD000000000000017;
}

uint64_t sub_1D5A9F040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5A9F630(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D5A9F068()
{
  sub_1D5A9F1DC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5A9F090()
{
  sub_1D5A9F1DC();
  return sub_1D5AAEEE0();
}

uint64_t ArticleScoreSummaryDataList.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1D5A9F3CC(0, &qword_1ED9CF020, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A9F1DC();
  sub_1D5AAEEC8();
  v10[1] = v8;
  sub_1D5A9F220();
  sub_1D5A9F428(&qword_1ED9CEF28, (uint64_t (*)(void))sub_1D590D518, MEMORY[0x1E0DEAF10]);
  sub_1D5AAED6C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1D5A9F1DC()
{
  unint64_t result;

  result = qword_1ED9CEE10;
  if (!qword_1ED9CEE10)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE98A0, &type metadata for ArticleScoreSummaryDataList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEE10);
  }
  return result;
}

void sub_1D5A9F220()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9CEF20)
  {
    v0 = sub_1D5AAE97C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9CEF20);
  }
}

uint64_t ArticleScoreSummaryDataList.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1D5A9F3CC(0, &qword_1EFF528C0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5A9F1DC();
  sub_1D5AAEEB0();
  if (!v2)
  {
    sub_1D5A9F220();
    sub_1D5A9F428(&qword_1EFF528C8, (uint64_t (*)(void))sub_1D590D4D0, MEMORY[0x1E0DEAF40]);
    sub_1D5AAECD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5A9F3CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5A9F1DC();
    v7 = a3(a1, &type metadata for ArticleScoreSummaryDataList.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5A9F428(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1D5A9F220();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1D8279680](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D5A9F494@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ArticleScoreSummaryDataList.init(from:)(a1, a2);
}

uint64_t sub_1D5A9F4A8(_QWORD *a1)
{
  return ArticleScoreSummaryDataList.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for ArticleScoreSummaryDataList.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5A9F4FC + 4 * byte_1D5AE9720[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5A9F51C + 4 * byte_1D5AE9725[v4]))();
}

_BYTE *sub_1D5A9F4FC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5A9F51C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A9F524(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A9F52C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5A9F534(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5A9F53C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ArticleScoreSummaryDataList.CodingKeys()
{
  return &type metadata for ArticleScoreSummaryDataList.CodingKeys;
}

unint64_t sub_1D5A9F55C()
{
  unint64_t result;

  result = qword_1EFF528D0;
  if (!qword_1EFF528D0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE9878, &type metadata for ArticleScoreSummaryDataList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF528D0);
  }
  return result;
}

unint64_t sub_1D5A9F5A4()
{
  unint64_t result;

  result = qword_1ED9CEE20;
  if (!qword_1ED9CEE20)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE97E8, &type metadata for ArticleScoreSummaryDataList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEE20);
  }
  return result;
}

unint64_t sub_1D5A9F5EC()
{
  unint64_t result;

  result = qword_1ED9CEE18;
  if (!qword_1ED9CEE18)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE9810, &type metadata for ArticleScoreSummaryDataList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CEE18);
  }
  return result;
}

uint64_t sub_1D5A9F630(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000017 && a2 == 0x80000001D5AF2C70)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1D5A9F6B4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADAB8();
  __swift_allocate_value_buffer(v0, qword_1EFF528D8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFF528D8);
  *(_QWORD *)v1 = 0x7364612E6D6F63;
  *(_QWORD *)(v1 + 8) = 0xE700000000000000;
  *(_QWORD *)(v1 + 16) = 3;
  *(_BYTE *)(v1 + 24) = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t static VideoAdEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF474F0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF528D8, a1);
}

uint64_t sub_1D5A9F754()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D5AADD34();
  __swift_allocate_value_buffer(v0, qword_1EFF528F0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFF528F0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0CF8378], v0);
}

uint64_t static VideoAdEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1EFF474F8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF528F0, a1);
}

uint64_t VideoAdEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t VideoAdEngagementEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*VideoAdEngagementEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdEngagementEvent.adUserData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for VideoAdEngagementEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF52980);
}

uint64_t VideoAdEngagementEvent.adUserData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 20);
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdEngagementEvent.adUserData.modify())(_QWORD)
{
  type metadata accessor for VideoAdEngagementEvent(0);
  return nullsub_1;
}

uint64_t VideoAdEngagementEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdEngagementEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 24);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdEngagementEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for VideoAdEngagementEvent(0);
  return nullsub_1;
}

uint64_t VideoAdEngagementEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdEngagementEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 28);
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdEngagementEvent.channelData.modify())(_QWORD)
{
  type metadata accessor for VideoAdEngagementEvent(0);
  return nullsub_1;
}

uint64_t VideoAdEngagementEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdEngagementEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 32);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdEngagementEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for VideoAdEngagementEvent(0);
  return nullsub_1;
}

uint64_t VideoAdEngagementEvent.videoAdData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 36);
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdEngagementEvent.videoAdData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 36);
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdEngagementEvent.videoAdData.modify())(_QWORD)
{
  type metadata accessor for VideoAdEngagementEvent(0);
  return nullsub_1;
}

uint64_t VideoAdEngagementEvent.videoAdEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 40);
  sub_1D579E208(0, &qword_1EFF52908, (void (*)(void))sub_1D5A22104, (void (*)(void))sub_1D5A2214C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdEngagementEvent.videoAdEngagementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 40);
  sub_1D579E208(0, &qword_1EFF52908, (void (*)(void))sub_1D5A22104, (void (*)(void))sub_1D5A2214C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdEngagementEvent.videoAdEngagementData.modify())(_QWORD)
{
  type metadata accessor for VideoAdEngagementEvent(0);
  return nullsub_1;
}

uint64_t VideoAdEngagementEvent.adPlacementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdEngagementEvent.adPlacementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 44);
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdEngagementEvent.adPlacementData.modify())(_QWORD)
{
  type metadata accessor for VideoAdEngagementEvent(0);
  return nullsub_1;
}

uint64_t VideoAdEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for VideoAdEngagementEvent(0);
  v5 = a1 + v4[5];
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1EFF52908, (void (*)(void))sub_1D5A22104, (void (*)(void))sub_1D5A2214C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
}

uint64_t VideoAdEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t VideoAdEngagementEvent.Model.adUserData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent.Model(0) + 20));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for VideoAdEngagementEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1EFF52A28);
}

uint64_t VideoAdEngagementEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent.Model(0) + 24));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdEngagementEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 17);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdEngagementEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent.Model(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1D57D4528(v4, v5, v6);
}

uint64_t VideoAdEngagementEvent.Model.videoAdData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent.Model(0) + 36);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_DWORD *)a1 = *(_DWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdEngagementEvent.Model.videoAdEngagementData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for VideoAdEngagementEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t VideoAdEngagementEvent.Model.adPlacementData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent.Model(0) + 44));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

__n128 VideoAdEngagementEvent.Model.init(eventData:adUserData:userBundleSubscriptionContextData:channelData:feedData:videoAdData:videoAdEngagementData:adPlacementData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, __n128 *a5@<X4>, int *a6@<X5>, __int16 *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 *v24;
  __n128 result;
  uint64_t v26;
  _QWORD *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  __int16 v41;
  uint64_t v42;
  uint64_t v43;

  v11 = *a2;
  v12 = a2[1];
  v13 = *a3;
  v14 = *((_QWORD *)a3 + 1);
  v15 = *((_QWORD *)a3 + 2);
  v16 = a3[24];
  v17 = a3[25];
  v18 = *((_QWORD *)a3 + 4);
  v28 = a3[48];
  v34 = a4[1];
  v35 = *a4;
  v32 = *((_BYTE *)a4 + 17);
  v33 = *((_BYTE *)a4 + 16);
  v31 = a4[3];
  v29 = *((_QWORD *)a3 + 5);
  v30 = a4[4];
  v37 = *a5;
  v36 = a5[1].n128_u64[0];
  v40 = *a6;
  v38 = *((_QWORD *)a6 + 2);
  v39 = *((_QWORD *)a6 + 1);
  v41 = *a7;
  v42 = a8[1];
  v43 = *a8;
  v19 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a9, a1, v19);
  v20 = (int *)type metadata accessor for VideoAdEngagementEvent.Model(0);
  v21 = (_QWORD *)(a9 + v20[5]);
  *v21 = v11;
  v21[1] = v12;
  v22 = a9 + v20[6];
  *(_BYTE *)v22 = v13;
  *(_QWORD *)(v22 + 8) = v14;
  *(_QWORD *)(v22 + 16) = v15;
  *(_BYTE *)(v22 + 24) = v16;
  *(_BYTE *)(v22 + 25) = v17;
  *(_QWORD *)(v22 + 32) = v18;
  *(_QWORD *)(v22 + 40) = v29;
  *(_BYTE *)(v22 + 48) = v28;
  v23 = a9 + v20[7];
  *(_QWORD *)v23 = v35;
  *(_QWORD *)(v23 + 8) = v34;
  *(_BYTE *)(v23 + 16) = v33;
  *(_BYTE *)(v23 + 17) = v32;
  *(_QWORD *)(v23 + 24) = v31;
  *(_QWORD *)(v23 + 32) = v30;
  v24 = (__n128 *)(a9 + v20[8]);
  result = v37;
  *v24 = v37;
  v24[1].n128_u64[0] = v36;
  v26 = a9 + v20[9];
  *(_DWORD *)v26 = v40;
  *(_QWORD *)(v26 + 8) = v39;
  *(_QWORD *)(v26 + 16) = v38;
  *(_WORD *)(a9 + v20[10]) = v41;
  v27 = (_QWORD *)(a9 + v20[11]);
  *v27 = v43;
  v27[1] = v42;
  return result;
}

uint64_t sub_1D5AA04F4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5AA052C + 4 * byte_1D5AE98F0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5AA052C()
{
  return 0x6144726573556461;
}

unint64_t sub_1D5AA0548()
{
  return 0xD000000000000021;
}

uint64_t sub_1D5AA0568()
{
  return 0x446C656E6E616863;
}

unint64_t sub_1D5AA05B4()
{
  return 0xD000000000000015;
}

uint64_t sub_1D5AA05D0()
{
  return 0x6D6563616C506461;
}

uint64_t sub_1D5AA05F4()
{
  unsigned __int8 *v0;

  return sub_1D5AA04F4(*v0);
}

uint64_t sub_1D5AA05FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5AA34E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5AA0620()
{
  sub_1D5AA09DC();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5AA0648()
{
  sub_1D5AA09DC();
  return sub_1D5AAEEE0();
}

uint64_t VideoAdEngagementEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v35[24];
  uint64_t v36;
  __int128 v37;
  char v38;
  char v39;

  v3 = v1;
  sub_1D5AA1030(0, &qword_1EFF52910, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v35[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5AA09DC();
  sub_1D5AAEEC8();
  v35[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8E24(&qword_1ED9C72F0, MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for VideoAdEngagementEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v13 = *v11;
    v12 = v11[1];
    *(_QWORD *)v35 = v13;
    *(_QWORD *)&v35[8] = v12;
    v39 = 1;
    sub_1D57CBEFC();
    sub_1D5AAED6C();
    v14 = v3 + v10[6];
    v15 = *(_BYTE *)(v14 + 24);
    v16 = *(_BYTE *)(v14 + 25);
    v17 = *(_BYTE *)(v14 + 48);
    v35[0] = *(_BYTE *)v14;
    *(_OWORD *)&v35[8] = *(_OWORD *)(v14 + 8);
    LOBYTE(v36) = v15;
    BYTE1(v36) = v16;
    v37 = *(_OWORD *)(v14 + 32);
    v38 = v17;
    v39 = 2;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
    v18 = (uint64_t *)(v3 + v10[7]);
    v19 = *v18;
    v20 = v18[1];
    v21 = *((_BYTE *)v18 + 16);
    v22 = *((_BYTE *)v18 + 17);
    v24 = v18[3];
    v23 = v18[4];
    *(_QWORD *)v35 = v19;
    *(_QWORD *)&v35[8] = v20;
    v35[16] = v21;
    v35[17] = v22;
    v36 = v24;
    *(_QWORD *)&v37 = v23;
    v39 = 3;
    sub_1D57CB8B8();
    sub_1D5AAED6C();
    v25 = v3 + v10[8];
    v26 = *(_QWORD *)(v25 + 16);
    *(_OWORD *)v35 = *(_OWORD *)v25;
    *(_QWORD *)&v35[16] = v26;
    v39 = 4;
    sub_1D57C65D4();
    sub_1D5AAED18();
    v27 = (int *)(v3 + v10[9]);
    v28 = *v27;
    v30 = *((_QWORD *)v27 + 1);
    v29 = *((_QWORD *)v27 + 2);
    *(_DWORD *)v35 = v28;
    *(_QWORD *)&v35[8] = v30;
    *(_QWORD *)&v35[16] = v29;
    v39 = 5;
    sub_1D58E61F4();
    sub_1D5AAED6C();
    *(_WORD *)v35 = *(_WORD *)(v3 + v10[10]);
    v39 = 6;
    sub_1D5A2214C();
    sub_1D5AAED6C();
    v31 = (uint64_t *)(v3 + v10[11]);
    v33 = *v31;
    v32 = v31[1];
    *(_QWORD *)v35 = v33;
    *(_QWORD *)&v35[8] = v32;
    v39 = 7;
    sub_1D584FF8C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5AA09DC()
{
  unint64_t result;

  result = qword_1EFF52918;
  if (!qword_1EFF52918)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE9B84, &type metadata for VideoAdEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52918);
  }
  return result;
}

uint64_t VideoAdEngagementEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  _QWORD *v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  char *v46;
  _BYTE v47[24];
  uint64_t v48;
  __int128 v49;
  char v50;
  char v51;

  v41 = a2;
  v4 = sub_1D5AADF98();
  v43 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5AA1030(0, &qword_1EFF52920, MEMORY[0x1E0DED048]);
  v42 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v39 - v9;
  v45 = type metadata accessor for VideoAdEngagementEvent.Model(0);
  MEMORY[0x1E0C80A78](v45);
  v46 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v44 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1D5AA09DC();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  v40 = v8;
  v47[0] = 0;
  sub_1D57A8E24(&qword_1ED9C72F8, MEMORY[0x1E0CF8688]);
  v13 = v10;
  sub_1D5AAECD0();
  v14 = v4;
  v15 = (uint64_t)v46;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v46, v6, v14);
  v51 = 1;
  sub_1D57CBEB8();
  sub_1D5AAECD0();
  v16 = *(_QWORD *)&v47[8];
  v17 = (int *)v45;
  v18 = (_QWORD *)(v15 + *(int *)(v45 + 20));
  *v18 = *(_QWORD *)v47;
  v18[1] = v16;
  v51 = 2;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  v19 = v48;
  v20 = BYTE1(v48);
  v21 = v50;
  v22 = v15 + v17[6];
  *(_BYTE *)v22 = v47[0];
  *(_OWORD *)(v22 + 8) = *(_OWORD *)&v47[8];
  *(_BYTE *)(v22 + 24) = v19;
  *(_BYTE *)(v22 + 25) = v20;
  *(_OWORD *)(v22 + 32) = v49;
  *(_BYTE *)(v22 + 48) = v21;
  v51 = 3;
  sub_1D57CB874();
  sub_1D5AAECD0();
  v23 = (uint64_t)v44;
  v24 = v40;
  v25 = *(_QWORD *)&v47[8];
  v26 = v47[16];
  v27 = v47[17];
  v28 = v48;
  v29 = v49;
  v30 = v15 + v17[7];
  *(_QWORD *)v30 = *(_QWORD *)v47;
  *(_QWORD *)(v30 + 8) = v25;
  *(_BYTE *)(v30 + 16) = v26;
  *(_BYTE *)(v30 + 17) = v27;
  *(_QWORD *)(v30 + 24) = v28;
  *(_QWORD *)(v30 + 32) = v29;
  v51 = 4;
  sub_1D57C6590();
  sub_1D5AAEC7C();
  v31 = *(_QWORD *)&v47[16];
  v32 = v15 + v17[8];
  *(_OWORD *)v32 = *(_OWORD *)v47;
  *(_QWORD *)(v32 + 16) = v31;
  v51 = 5;
  sub_1D58E61B0();
  sub_1D5AAECD0();
  v33 = *(_QWORD *)&v47[8];
  v34 = *(_QWORD *)&v47[16];
  v35 = v15 + v17[9];
  *(_DWORD *)v35 = *(_DWORD *)v47;
  *(_QWORD *)(v35 + 8) = v33;
  *(_QWORD *)(v35 + 16) = v34;
  v51 = 6;
  sub_1D5A22104();
  sub_1D5AAECD0();
  *(_WORD *)(v15 + v17[10]) = *(_WORD *)v47;
  v51 = 7;
  sub_1D584FF48();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v42);
  v36 = *(_QWORD *)&v47[8];
  v37 = (_QWORD *)(v15 + v17[11]);
  *v37 = *(_QWORD *)v47;
  v37[1] = v36;
  sub_1D5AA108C(v15, v41);
  __swift_destroy_boxed_opaque_existential_1(v23);
  return sub_1D5AA10D0(v15);
}

void sub_1D5AA1030(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5AA09DC();
    v7 = a3(a1, &type metadata for VideoAdEngagementEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5AA108C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VideoAdEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5AA10D0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for VideoAdEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5AA110C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return VideoAdEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5AA1120(_QWORD *a1)
{
  return VideoAdEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5AA1134@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF474F0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EFF528D8, a1);
}

uint64_t sub_1D5AA1158@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1EFF474F8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EFF528F0, a1);
}

uint64_t sub_1D5AA117C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  v13 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1EFF52908, (void (*)(void))sub_1D5A22104, (void (*)(void))sub_1D5A2214C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
}

uint64_t *initializeBufferWithCopyOfBuffer for VideoAdEngagementEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1EFF52908, (void (*)(void))sub_1D5A22104, (void (*)(void))sub_1D5A2214C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for VideoAdEngagementEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1EFF52908, (void (*)(void))sub_1D5A22104, (void (*)(void))sub_1D5A2214C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

uint64_t initializeWithCopy for VideoAdEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1EFF52908, (void (*)(void))sub_1D5A22104, (void (*)(void))sub_1D5A2214C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for VideoAdEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1EFF52908, (void (*)(void))sub_1D5A22104, (void (*)(void))sub_1D5A2214C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for VideoAdEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1EFF52908, (void (*)(void))sub_1D5A22104, (void (*)(void))sub_1D5A2214C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for VideoAdEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1EFF52908, (void (*)(void))sub_1D5A22104, (void (*)(void))sub_1D5A2214C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoAdEngagementEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5AA2248(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1EFF52908, (void (*)(void))sub_1D5A22104, (void (*)(void))sub_1D5A2214C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
                v8 = v19;
                v12 = *(_QWORD *)(v19 - 8);
                v13 = a3[11];
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for VideoAdEngagementEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5AA2480(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D579E208(0, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1EFF52908, (void (*)(void))sub_1D5A22104, (void (*)(void))sub_1D5A2214C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
                v10 = v21;
                v14 = *(_QWORD *)(v21 - 8);
                v15 = a4[11];
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5AA26B4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D579E208(319, &qword_1ED9CD740, (void (*)(void))sub_1D57CBEB8, (void (*)(void))sub_1D57CBEFC);
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, &qword_1ED9C70E0, (void (*)(void))sub_1D57CB874, (void (*)(void))sub_1D57CB8B8);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1EFF4C050, (void (*)(void))sub_1D58E61B0, (void (*)(void))sub_1D58E61F4);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1EFF52908, (void (*)(void))sub_1D5A22104, (void (*)(void))sub_1D5A2214C);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, &qword_1ED9CD0E0, (void (*)(void))sub_1D584FF48, (void (*)(void))sub_1D584FF8C);
                if (v7 <= 0x3F)
                  swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for VideoAdEngagementEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    *v13 = *v14;
    v15 = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
    *((_QWORD *)v13 + 2) = v15;
    *((_WORD *)v13 + 12) = *((_WORD *)v14 + 12);
    v16 = *((_QWORD *)v14 + 5);
    *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
    *((_QWORD *)v13 + 5) = v16;
    v13[48] = v14[48];
    v17 = a3[7];
    v18 = a3[8];
    v19 = (char *)a1 + v17;
    v20 = (char *)a2 + v17;
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    v19[16] = v20[16];
    v19[17] = v20[17];
    v22 = *((_QWORD *)v20 + 4);
    *((_QWORD *)v19 + 3) = *((_QWORD *)v20 + 3);
    *((_QWORD *)v19 + 4) = v22;
    v23 = (char *)a1 + v18;
    v24 = (char *)a2 + v18;
    v25 = *(uint64_t *)((char *)a2 + v18 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v25 == 1)
    {
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *((_QWORD *)v23 + 2) = *((_QWORD *)v24 + 2);
    }
    else
    {
      *v23 = *v24;
      *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
      *((_QWORD *)v23 + 2) = v25;
      swift_bridgeObjectRetain();
    }
    v27 = a3[9];
    v28 = a3[10];
    v29 = (char *)a1 + v27;
    v30 = (char *)a2 + v27;
    *(_DWORD *)v29 = *(_DWORD *)v30;
    v31 = *((_QWORD *)v30 + 2);
    *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
    *((_QWORD *)v29 + 2) = v31;
    *(_WORD *)((char *)a1 + v28) = *(_WORD *)((char *)a2 + v28);
    v32 = a3[11];
    v33 = (uint64_t *)((char *)a1 + v32);
    v34 = (uint64_t *)((char *)a2 + v32);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for VideoAdEngagementEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 32) + 16) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VideoAdEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = v14;
  *(_WORD *)(v12 + 24) = *(_WORD *)(v13 + 24);
  v15 = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = v15;
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  v16 = a3[7];
  v17 = a3[8];
  v18 = a1 + v16;
  v19 = a2 + v16;
  v20 = *(_QWORD *)(v19 + 8);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(v18 + 8) = v20;
  *(_BYTE *)(v18 + 16) = *(_BYTE *)(v19 + 16);
  *(_BYTE *)(v18 + 17) = *(_BYTE *)(v19 + 17);
  v21 = *(_QWORD *)(v19 + 32);
  *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
  *(_QWORD *)(v18 + 32) = v21;
  v22 = a1 + v17;
  v23 = a2 + v17;
  v24 = *(_QWORD *)(a2 + v17 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24 == 1)
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_QWORD *)(v22 + 16) = *(_QWORD *)(v23 + 16);
  }
  else
  {
    *(_BYTE *)v22 = *(_BYTE *)v23;
    *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
    *(_QWORD *)(v22 + 16) = v24;
    swift_bridgeObjectRetain();
  }
  v25 = a3[9];
  v26 = a3[10];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_DWORD *)v27 = *(_DWORD *)v28;
  v29 = *(_QWORD *)(v28 + 16);
  *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
  *(_QWORD *)(v27 + 16) = v29;
  *(_WORD *)(a1 + v26) = *(_WORD *)(a2 + v26);
  v30 = a3[11];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (_QWORD *)(a2 + v30);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VideoAdEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_BYTE *)v11 = *(_BYTE *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(a2 + v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 24) = *(_BYTE *)(v12 + 24);
  *(_BYTE *)(v11 + 25) = *(_BYTE *)(v12 + 25);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  *(_QWORD *)(v11 + 40) = *(_QWORD *)(v12 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 48) = *(_BYTE *)(v12 + 48);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  *(_BYTE *)(v14 + 17) = *(_BYTE *)(v15 + 17);
  *(_QWORD *)(v14 + 24) = *(_QWORD *)(v15 + 24);
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = (__int128 *)(a2 + v16);
  v19 = *(_QWORD *)(a1 + v16 + 16);
  v20 = *(_QWORD *)(a2 + v16 + 16);
  if (v19 == 1)
  {
    if (v20 == 1)
    {
      v21 = *v18;
      *(_QWORD *)(v17 + 16) = *((_QWORD *)v18 + 2);
      *(_OWORD *)v17 = v21;
    }
    else
    {
      *(_BYTE *)v17 = *(_BYTE *)v18;
      *(_QWORD *)(v17 + 8) = *((_QWORD *)v18 + 1);
      *(_QWORD *)(v17 + 16) = *((_QWORD *)v18 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v20 == 1)
  {
    sub_1D57D9100(v17);
    v22 = *((_QWORD *)v18 + 2);
    *(_OWORD *)v17 = *v18;
    *(_QWORD *)(v17 + 16) = v22;
  }
  else
  {
    *(_BYTE *)v17 = *(_BYTE *)v18;
    *(_QWORD *)(v17 + 8) = *((_QWORD *)v18 + 1);
    *(_QWORD *)(v17 + 16) = *((_QWORD *)v18 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
  *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = a3[10];
  v27 = (_BYTE *)(a1 + v26);
  v28 = (_BYTE *)(a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  v29 = a3[11];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for VideoAdEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  __int128 v22;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  v11 = a3[7];
  v12 = a3[8];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  v16 = a1 + v12;
  v17 = a2 + v12;
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  v18 = a3[9];
  v19 = a3[10];
  v20 = a1 + v18;
  v21 = (__int128 *)(a2 + v18);
  v22 = *v21;
  *(_QWORD *)(v20 + 16) = *((_QWORD *)v21 + 2);
  *(_OWORD *)v20 = v22;
  *(_WORD *)(a1 + v19) = *(_WORD *)(a2 + v19);
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for VideoAdEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_BYTE *)v13 = *(_BYTE *)(a2 + v12);
  v15 = *(_QWORD *)(a2 + v12 + 16);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)(v13 + 16) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 24) = *(_BYTE *)(v14 + 24);
  *(_BYTE *)(v13 + 25) = *(_BYTE *)(v14 + 25);
  v16 = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 40) = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 48) = *(_BYTE *)(v14 + 48);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)(a2 + v17 + 8);
  *(_QWORD *)v18 = *(_QWORD *)(a2 + v17);
  *(_QWORD *)(v18 + 8) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v18 + 16) = *(_BYTE *)(v19 + 16);
  *(_BYTE *)(v18 + 17) = *(_BYTE *)(v19 + 17);
  v21 = *(_QWORD *)(v19 + 32);
  *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
  *(_QWORD *)(v18 + 32) = v21;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  if (*(_QWORD *)(a1 + v22 + 16) != 1)
  {
    v25 = *(_QWORD *)(v24 + 16);
    if (v25 != 1)
    {
      *(_BYTE *)v23 = *(_BYTE *)v24;
      *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
      *(_QWORD *)(v23 + 16) = v25;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D57D9100(v23);
  }
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
LABEL_6:
  v26 = a3[9];
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_DWORD *)v27 = *(_DWORD *)v28;
  v30 = *(_QWORD *)(v28 + 8);
  v29 = *(_QWORD *)(v28 + 16);
  *(_QWORD *)(v27 + 8) = v30;
  *(_QWORD *)(v27 + 16) = v29;
  swift_bridgeObjectRelease();
  v31 = a3[11];
  *(_WORD *)(a1 + a3[10]) = *(_WORD *)(a2 + a3[10]);
  v32 = (_QWORD *)(a1 + v31);
  v33 = (uint64_t *)(a2 + v31);
  v35 = *v33;
  v34 = v33[1];
  *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoAdEngagementEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5AA3190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for VideoAdEngagementEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5AA321C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D5AADF98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5AA3298()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for VideoAdEngagementEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D5AA3388 + 4 * byte_1D5AE98FD[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D5AA33BC + 4 * byte_1D5AE98F8[v4]))();
}

uint64_t sub_1D5AA33BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5AA33C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5AA33CCLL);
  return result;
}

uint64_t sub_1D5AA33D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5AA33E0);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D5AA33E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5AA33EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoAdEngagementEvent.Model.CodingKeys()
{
  return &type metadata for VideoAdEngagementEvent.Model.CodingKeys;
}

unint64_t sub_1D5AA340C()
{
  unint64_t result;

  result = qword_1EFF52A78;
  if (!qword_1EFF52A78)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE9B5C, &type metadata for VideoAdEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52A78);
  }
  return result;
}

unint64_t sub_1D5AA3454()
{
  unint64_t result;

  result = qword_1EFF52A80;
  if (!qword_1EFF52A80)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE9ACC, &type metadata for VideoAdEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52A80);
  }
  return result;
}

unint64_t sub_1D5AA349C()
{
  unint64_t result;

  result = qword_1EFF52A88;
  if (!qword_1EFF52A88)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE9AF4, &type metadata for VideoAdEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52A88);
  }
  return result;
}

uint64_t sub_1D5AA34E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144726573556461 && a2 == 0xEA00000000006174 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4464416F65646976 && a2 == 0xEB00000000617461 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AF2C90 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6D6563616C506461 && a2 == 0xEF61746144746E65)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1D5AA387C(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1ED9CCC48, MEMORY[0x1E0CF8078]);
}

uint64_t static WebEmbedExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9CE5D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCC48, a1);
}

uint64_t sub_1D5AA38BC(uint64_t a1)
{
  return sub_1D57A5880(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1ED9CCC60, MEMORY[0x1E0CF8380]);
}

uint64_t static WebEmbedExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CEE54(&qword_1ED9D05B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCC60, a1);
}

uint64_t WebEmbedExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))sub_1D57A8D40, a1);
}

uint64_t WebEmbedExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D57A8D40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*WebEmbedExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t WebEmbedExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for WebEmbedExposureEvent, (uint64_t (*)(_QWORD))sub_1D57A8C9C, a1);
}

uint64_t type metadata accessor for WebEmbedExposureEvent(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CABD8);
}

uint64_t WebEmbedExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedExposureEvent(0) + 20);
  sub_1D57A8C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedExposureEvent.timedData.modify())(_QWORD)
{
  type metadata accessor for WebEmbedExposureEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebEmbedExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedExposureEvent(0) + 24);
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedExposureEvent.groupData.modify())(_QWORD)
{
  type metadata accessor for WebEmbedExposureEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedExposureEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebEmbedExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedExposureEvent(0) + 28);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedExposureEvent.feedData.modify())(_QWORD)
{
  type metadata accessor for WebEmbedExposureEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedExposureEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebEmbedExposureEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedExposureEvent(0) + 32);
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedExposureEvent.feedPositionData.modify())(_QWORD)
{
  type metadata accessor for WebEmbedExposureEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedExposureEvent.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedExposureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebEmbedExposureEvent.inGroupPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedExposureEvent(0) + 36);
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedExposureEvent.inGroupPositionData.modify())(_QWORD)
{
  type metadata accessor for WebEmbedExposureEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedExposureEvent.webEmbedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebEmbedExposureEvent.webEmbedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedExposureEvent(0) + 40);
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedExposureEvent.webEmbedData.modify())(_QWORD)
{
  type metadata accessor for WebEmbedExposureEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedExposureEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebEmbedExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedExposureEvent(0) + 44);
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebEmbedExposureEvent.userBundleSubscriptionContextData.modify())(_QWORD)
{
  type metadata accessor for WebEmbedExposureEvent(0);
  return nullsub_1;
}

uint64_t WebEmbedExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for WebEmbedExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  v8 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = a1 + v4[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v2, v11);
  v12 = a1 + v4[8];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v8, v15);
  v16 = a1 + v4[10];
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
}

uint64_t WebEmbedExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF340((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t WebEmbedExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57CF390(type metadata accessor for WebEmbedExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for WebEmbedExposureEvent.Model(uint64_t a1)
{
  return sub_1D579E448(a1, qword_1ED9CAB30);
}

_QWORD *WebEmbedExposureEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[17];

  v3 = type metadata accessor for WebEmbedExposureEvent.Model(0);
  sub_1D57DD5B8(v1 + *(int *)(v3 + 24), (uint64_t)v5);
  sub_1D57DD5B8((uint64_t)v5, a1);
  return sub_1D57DE9C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D57DD650);
}

uint64_t WebEmbedExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for WebEmbedExposureEvent.Model(0) + 28);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t WebEmbedExposureEvent.Model.feedPositionData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WebEmbedExposureEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t WebEmbedExposureEvent.Model.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for WebEmbedExposureEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 36));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t WebEmbedExposureEvent.Model.webEmbedData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for WebEmbedExposureEvent.Model(0) + 40));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t WebEmbedExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for WebEmbedExposureEvent.Model(0) + 44));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = v3[24];
  v8 = v3[25];
  v10 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t WebEmbedExposureEvent.Model.init(eventData:timedData:groupData:feedData:feedPositionData:inGroupPositionData:webEmbedData:userBundleSubscriptionContextData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, _DWORD *a5@<X4>, int *a6@<X5>, uint64_t *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  _BYTE v40[144];

  sub_1D57DD5B8(a3, (uint64_t)v40);
  v17 = *a4;
  v19 = *((_QWORD *)a4 + 1);
  v18 = *((_QWORD *)a4 + 2);
  LODWORD(a5) = *a5;
  v29 = *a6;
  LOBYTE(a6) = *((_BYTE *)a6 + 4);
  v30 = a7[1];
  v31 = *a7;
  v39 = *a8;
  v37 = *((_QWORD *)a8 + 2);
  v38 = *((_QWORD *)a8 + 1);
  v35 = a8[25];
  v36 = a8[24];
  v33 = *((_QWORD *)a8 + 5);
  v34 = *((_QWORD *)a8 + 4);
  v32 = a8[48];
  v20 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a9, a1, v20);
  v21 = (int *)type metadata accessor for WebEmbedExposureEvent.Model(0);
  v22 = a9 + v21[5];
  v23 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22, a2, v23);
  result = sub_1D57DD5B8((uint64_t)v40, a9 + v21[6]);
  v25 = a9 + v21[7];
  *(_BYTE *)v25 = v17;
  *(_QWORD *)(v25 + 8) = v19;
  *(_QWORD *)(v25 + 16) = v18;
  *(_DWORD *)(a9 + v21[8]) = (_DWORD)a5;
  v26 = a9 + v21[9];
  *(_DWORD *)v26 = v29;
  *(_BYTE *)(v26 + 4) = (_BYTE)a6;
  v27 = (_QWORD *)(a9 + v21[10]);
  *v27 = v31;
  v27[1] = v30;
  v28 = a9 + v21[11];
  *(_BYTE *)v28 = v39;
  *(_QWORD *)(v28 + 8) = v38;
  *(_QWORD *)(v28 + 16) = v37;
  *(_BYTE *)(v28 + 24) = v36;
  *(_BYTE *)(v28 + 25) = v35;
  *(_QWORD *)(v28 + 32) = v34;
  *(_QWORD *)(v28 + 40) = v33;
  *(_BYTE *)(v28 + 48) = v32;
  return result;
}

uint64_t sub_1D5AA4570(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5AA45A8 + 4 * byte_1D5AE9BE0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1D5AA45A8()
{
  return 0x74614464656D6974;
}

uint64_t sub_1D5AA45BC()
{
  return 0x74614470756F7267;
}

uint64_t sub_1D5AA45D0()
{
  return 0x6174614464656566;
}

unint64_t sub_1D5AA45E8()
{
  return 0xD000000000000010;
}

unint64_t sub_1D5AA4604()
{
  return 0xD000000000000013;
}

uint64_t sub_1D5AA465C()
{
  unsigned __int8 *v0;

  return sub_1D5AA4570(*v0);
}

uint64_t sub_1D5AA4664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5AA78BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5AA4688()
{
  sub_1D5AA4A64();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5AA46B0()
{
  sub_1D5AA4A64();
  return sub_1D5AAEEE0();
}

uint64_t WebEmbedExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  int *v12;
  int v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  char v25;
  char v26;
  __int128 v27;
  char v28;
  _BYTE v29[144];
  char v30;
  char v31;

  v3 = v1;
  sub_1D5AA50B0(0, &qword_1EFF52A90, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5AA4A64();
  sub_1D5AAEEC8();
  v29[0] = 0;
  sub_1D5AADF98();
  sub_1D57A8DE4(&qword_1ED9C72F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1D5AAED6C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for WebEmbedExposureEvent.Model(0);
    v31 = 1;
    sub_1D5AADFB0();
    sub_1D57A8DE4(&qword_1ED9C7300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1D5AAED6C();
    sub_1D57DD5B8(v3 + v10[6], (uint64_t)v29);
    sub_1D57DD5B8((uint64_t)v29, (uint64_t)&v23);
    v30 = 2;
    sub_1D57C5FEC();
    sub_1D5AAED18();
    v11 = v3 + v10[7];
    LOBYTE(v23) = *(_BYTE *)v11;
    v24 = *(_OWORD *)(v11 + 8);
    v30 = 3;
    sub_1D57C65D4();
    sub_1D5AAED6C();
    LODWORD(v23) = *(_DWORD *)(v3 + v10[8]);
    v30 = 4;
    sub_1D57C9C4C();
    sub_1D5AAED6C();
    v12 = (int *)(v3 + v10[9]);
    v13 = *v12;
    LOBYTE(v12) = *((_BYTE *)v12 + 4);
    LODWORD(v23) = v13;
    BYTE4(v23) = (_BYTE)v12;
    v30 = 5;
    sub_1D57C8B9C();
    sub_1D5AAED18();
    v14 = (uint64_t *)(v3 + v10[10]);
    v16 = *v14;
    v15 = v14[1];
    v23 = v16;
    *(_QWORD *)&v24 = v15;
    v30 = 6;
    sub_1D57F1894();
    sub_1D5AAED6C();
    v17 = v3 + v10[11];
    v18 = *(_BYTE *)(v17 + 24);
    v19 = *(_BYTE *)(v17 + 25);
    v20 = *(_BYTE *)(v17 + 48);
    LOBYTE(v23) = *(_BYTE *)v17;
    v24 = *(_OWORD *)(v17 + 8);
    v25 = v18;
    v26 = v19;
    v27 = *(_OWORD *)(v17 + 32);
    v28 = v20;
    v30 = 7;
    sub_1D57C6B3C();
    sub_1D5AAED6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1D5AA4A64()
{
  unint64_t result;

  result = qword_1ED9C6A68;
  if (!qword_1ED9C6A68)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE9E5C, &type metadata for WebEmbedExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C6A68);
  }
  return result;
}

uint64_t WebEmbedExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  char v45;
  char v46;
  __int128 v47;
  char v48;
  _BYTE v49[136];
  char v50[144];
  char v51;
  char v52;

  v33 = a2;
  v3 = sub_1D5AADFB0();
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D5AADF98();
  v36 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5AA50B0(0, &qword_1ED9C6ED8, MEMORY[0x1E0DED048]);
  v38 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v33 - v11;
  v40 = type metadata accessor for WebEmbedExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v40);
  v41 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v39 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1D5AA4A64();
  v37 = v12;
  v15 = v42;
  sub_1D5AAEEB0();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  v16 = v10;
  v50[0] = 0;
  sub_1D57A8DE4(&qword_1ED9C72F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1D5AAECD0();
  v17 = (uint64_t)v41;
  (*(void (**)(char *, char *))(v36 + 32))(v41, v8);
  v50[0] = 1;
  sub_1D57A8DE4((unint64_t *)&unk_1ED9C7308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v18 = v5;
  v19 = v35;
  sub_1D5AAECD0();
  v20 = (int *)v40;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v17 + *(int *)(v40 + 20), v18, v19);
  v52 = 2;
  sub_1D57C5FA8();
  sub_1D5AAEC7C();
  v21 = v16;
  sub_1D57DD5B8((uint64_t)v50, (uint64_t)v49);
  sub_1D57DD5B8((uint64_t)v49, v17 + v20[6]);
  v51 = 3;
  sub_1D57C6590();
  sub_1D5AAECD0();
  v22 = (uint64_t)v39;
  v23 = v17 + v20[7];
  *(_BYTE *)v23 = v43;
  *(_OWORD *)(v23 + 8) = v44;
  v51 = 4;
  sub_1D57C9C08();
  sub_1D5AAECD0();
  *(_DWORD *)(v17 + v20[8]) = v43;
  v51 = 5;
  sub_1D57C8B58();
  sub_1D5AAEC7C();
  v24 = BYTE4(v43);
  v25 = v17 + v20[9];
  *(_DWORD *)v25 = v43;
  *(_BYTE *)(v25 + 4) = v24;
  v51 = 6;
  sub_1D57F1850();
  sub_1D5AAECD0();
  v26 = v44;
  v27 = (_QWORD *)(v17 + v20[10]);
  *v27 = v43;
  v27[1] = v26;
  v51 = 7;
  sub_1D57C6AF8();
  sub_1D5AAECD0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v37, v38);
  v28 = v45;
  v29 = v46;
  v30 = v48;
  v31 = v17 + v20[11];
  *(_BYTE *)v31 = v43;
  *(_OWORD *)(v31 + 8) = v44;
  *(_BYTE *)(v31 + 24) = v28;
  *(_BYTE *)(v31 + 25) = v29;
  *(_OWORD *)(v31 + 32) = v47;
  *(_BYTE *)(v31 + 48) = v30;
  sub_1D5AA510C(v17, v33);
  __swift_destroy_boxed_opaque_existential_1(v22);
  return sub_1D5AA5150(v17);
}

void sub_1D5AA50B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5AA4A64();
    v7 = a3(a1, &type metadata for WebEmbedExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5AA510C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WebEmbedExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5AA5150(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WebEmbedExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5AA518C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WebEmbedExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1D5AA51A0(_QWORD *a1)
{
  return WebEmbedExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1D5AA51B4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9CE5D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1ED9CCC48, a1);
}

uint64_t sub_1D5AA51D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D57A58D8(&qword_1ED9D05B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1ED9CCC60, a1);
}

uint64_t sub_1D5AA51FC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  v9 = *MEMORY[0x1E0CF8120];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = a2 + a1[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v4, v12);
  v13 = a2 + a1[8];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
  v15 = a2 + a1[9];
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v9, v16);
  v17 = a2 + a1[10];
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
}

uint64_t *initializeBufferWithCopyOfBuffer for WebEmbedExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1D57A8D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1D57A8C9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for WebEmbedExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

uint64_t initializeWithCopy for WebEmbedExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for WebEmbedExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for WebEmbedExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for WebEmbedExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D57A8D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1D57A8C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for WebEmbedExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5AA61E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D57A8D40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                v8 = v19;
                v12 = *(_QWORD *)(v19 - 8);
                v13 = a3[11];
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for WebEmbedExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5AA6400(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1D57A8D40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1D57A8C9C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1D579E208(0, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1D579E208(0, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1D579E208(0, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1D579E208(0, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1D579E208(0, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1D579E208(0, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                v10 = v21;
                v14 = *(_QWORD *)(v21 - 8);
                v15 = a4[11];
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D5AA6614()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1D57A8D40();
  if (v0 <= 0x3F)
  {
    sub_1D57A8C9C();
    if (v1 <= 0x3F)
    {
      sub_1D579E208(319, &qword_1ED9C72A8, (void (*)(void))sub_1D57C5FA8, (void (*)(void))sub_1D57C5FEC);
      if (v2 <= 0x3F)
      {
        sub_1D579E208(319, (unint64_t *)&qword_1ED9C7290, (void (*)(void))sub_1D57C6590, (void (*)(void))sub_1D57C65D4);
        if (v3 <= 0x3F)
        {
          sub_1D579E208(319, &qword_1ED9C7198, (void (*)(void))sub_1D57C9C08, (void (*)(void))sub_1D57C9C4C);
          if (v4 <= 0x3F)
          {
            sub_1D579E208(319, &qword_1ED9C71E8, (void (*)(void))sub_1D57C8B58, (void (*)(void))sub_1D57C8B9C);
            if (v5 <= 0x3F)
            {
              sub_1D579E208(319, &qword_1ED9C7140, (void (*)(void))sub_1D57F1850, (void (*)(void))sub_1D57F1894);
              if (v6 <= 0x3F)
              {
                sub_1D579E208(319, (unint64_t *)&qword_1ED9C7278, (void (*)(void))sub_1D57C6AF8, (void (*)(void))sub_1D57C6B3C);
                if (v7 <= 0x3F)
                  swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for WebEmbedExposureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D5AADF98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D5AADFB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = *((_QWORD *)v14 + 2);
    if (v15)
    {
      *(_WORD *)v13 = *(_WORD *)v14;
      *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
      *((_QWORD *)v13 + 2) = v15;
      *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);
      v16 = *((_QWORD *)v14 + 5);
      *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
      *((_QWORD *)v13 + 5) = v16;
      v17 = *((_QWORD *)v14 + 7);
      *((_QWORD *)v13 + 6) = *((_QWORD *)v14 + 6);
      *((_QWORD *)v13 + 7) = v17;
      v18 = *((_QWORD *)v14 + 9);
      *((_QWORD *)v13 + 8) = *((_QWORD *)v14 + 8);
      *((_QWORD *)v13 + 9) = v18;
      v13[80] = v14[80];
      v19 = *((_QWORD *)v14 + 12);
      *((_QWORD *)v13 + 11) = *((_QWORD *)v14 + 11);
      *((_QWORD *)v13 + 12) = v19;
      *((_QWORD *)v13 + 13) = *((_QWORD *)v14 + 13);
      v13[112] = v14[112];
      v20 = *((_QWORD *)v14 + 16);
      *((_QWORD *)v13 + 15) = *((_QWORD *)v14 + 15);
      *((_QWORD *)v13 + 16) = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v22 = *((_OWORD *)v14 + 7);
      *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
      *((_OWORD *)v13 + 7) = v22;
      *((_QWORD *)v13 + 16) = *((_QWORD *)v14 + 16);
      v23 = *((_OWORD *)v14 + 3);
      *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
      *((_OWORD *)v13 + 3) = v23;
      v24 = *((_OWORD *)v14 + 5);
      *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
      *((_OWORD *)v13 + 5) = v24;
      v25 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v25;
    }
    v26 = a3[7];
    v27 = a3[8];
    v28 = (char *)a1 + v26;
    v29 = (char *)a2 + v26;
    *v28 = *v29;
    v31 = *((_QWORD *)v29 + 1);
    v30 = *((_QWORD *)v29 + 2);
    LODWORD(v29) = *(_DWORD *)((char *)a2 + v27);
    *((_QWORD *)v28 + 1) = v31;
    *((_QWORD *)v28 + 2) = v30;
    *(_DWORD *)((char *)a1 + v27) = (_DWORD)v29;
    v32 = a3[9];
    v33 = a3[10];
    v34 = (char *)a1 + v32;
    v35 = (char *)a2 + v32;
    *(_DWORD *)v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    v36 = (uint64_t *)((char *)a1 + v33);
    v37 = (uint64_t *)((char *)a2 + v33);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    v39 = a3[11];
    v40 = (char *)a1 + v39;
    v41 = (char *)a2 + v39;
    *v40 = *v41;
    v42 = *((_QWORD *)v41 + 2);
    *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
    *((_QWORD *)v40 + 2) = v42;
    v40[24] = v41[24];
    v40[25] = v41[25];
    v43 = *((_QWORD *)v41 + 5);
    *((_QWORD *)v40 + 4) = *((_QWORD *)v41 + 4);
    *((_QWORD *)v40 + 5) = v43;
    v40[48] = v41[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for WebEmbedExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  if (*(_QWORD *)(a1 + *(int *)(a2 + 24) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WebEmbedExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    *(_WORD *)v12 = *(_WORD *)v13;
    *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
    *(_QWORD *)(v12 + 16) = v14;
    *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
    v15 = *(_QWORD *)(v13 + 40);
    *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
    *(_QWORD *)(v12 + 40) = v15;
    v16 = *(_QWORD *)(v13 + 56);
    *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
    *(_QWORD *)(v12 + 56) = v16;
    v17 = *(_QWORD *)(v13 + 72);
    *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
    *(_QWORD *)(v12 + 72) = v17;
    *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
    v18 = *(_QWORD *)(v13 + 96);
    *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
    *(_QWORD *)(v12 + 96) = v18;
    *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
    *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
    v19 = *(_QWORD *)(v13 + 128);
    *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
    *(_QWORD *)(v12 + 128) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *(_OWORD *)(v13 + 112);
    *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
    *(_OWORD *)(v12 + 112) = v20;
    *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
    v21 = *(_OWORD *)(v13 + 48);
    *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
    *(_OWORD *)(v12 + 48) = v21;
    v22 = *(_OWORD *)(v13 + 80);
    *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
    *(_OWORD *)(v12 + 80) = v22;
    v23 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v23;
  }
  v24 = a3[7];
  v25 = a3[8];
  v26 = a1 + v24;
  v27 = a2 + v24;
  *(_BYTE *)v26 = *(_BYTE *)v27;
  v29 = *(_QWORD *)(v27 + 8);
  v28 = *(_QWORD *)(v27 + 16);
  LODWORD(v27) = *(_DWORD *)(a2 + v25);
  *(_QWORD *)(v26 + 8) = v29;
  *(_QWORD *)(v26 + 16) = v28;
  *(_DWORD *)(a1 + v25) = v27;
  v30 = a3[9];
  v31 = a3[10];
  v32 = a1 + v30;
  v33 = a2 + v30;
  *(_DWORD *)v32 = *(_DWORD *)v33;
  *(_BYTE *)(v32 + 4) = *(_BYTE *)(v33 + 4);
  v34 = (_QWORD *)(a1 + v31);
  v35 = (_QWORD *)(a2 + v31);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  v37 = a3[11];
  v38 = a1 + v37;
  v39 = a2 + v37;
  *(_BYTE *)v38 = *(_BYTE *)v39;
  v40 = *(_QWORD *)(v39 + 16);
  *(_QWORD *)(v38 + 8) = *(_QWORD *)(v39 + 8);
  *(_QWORD *)(v38 + 16) = v40;
  *(_BYTE *)(v38 + 24) = *(_BYTE *)(v39 + 24);
  *(_BYTE *)(v38 + 25) = *(_BYTE *)(v39 + 25);
  v41 = *(_QWORD *)(v39 + 40);
  *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
  *(_QWORD *)(v38 + 40) = v41;
  *(_BYTE *)(v38 + 48) = *(_BYTE *)(v39 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WebEmbedExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a1 + v11 + 16);
  v15 = *(_QWORD *)(a2 + v11 + 16);
  if (v14)
  {
    if (v15)
    {
      *(_BYTE *)v12 = *(_BYTE *)v13;
      *(_BYTE *)(v12 + 1) = *(_BYTE *)(v13 + 1);
      *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
      *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v12 + 24) = *(_DWORD *)(v13 + 24);
      *(_DWORD *)(v12 + 28) = *(_DWORD *)(v13 + 28);
      *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
      *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
      *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
      *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v16 = *(_QWORD *)(v13 + 104);
      *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
      *(_QWORD *)(v12 + 104) = v16;
      *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D57E17B8(v12);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      v18 = *(_OWORD *)(v13 + 64);
      v20 = *(_OWORD *)(v13 + 16);
      v19 = *(_OWORD *)(v13 + 32);
      *(_OWORD *)(v12 + 48) = *(_OWORD *)(v13 + 48);
      *(_OWORD *)(v12 + 64) = v18;
      *(_OWORD *)(v12 + 16) = v20;
      *(_OWORD *)(v12 + 32) = v19;
      v22 = *(_OWORD *)(v13 + 96);
      v21 = *(_OWORD *)(v13 + 112);
      v23 = *(_OWORD *)(v13 + 80);
      *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
      *(_OWORD *)(v12 + 96) = v22;
      *(_OWORD *)(v12 + 112) = v21;
      *(_OWORD *)(v12 + 80) = v23;
    }
  }
  else if (v15)
  {
    *(_BYTE *)v12 = *(_BYTE *)v13;
    *(_BYTE *)(v12 + 1) = *(_BYTE *)(v13 + 1);
    *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
    *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
    *(_DWORD *)(v12 + 24) = *(_DWORD *)(v13 + 24);
    *(_DWORD *)(v12 + 28) = *(_DWORD *)(v13 + 28);
    *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
    *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
    *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
    *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
    *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
    *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
    *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
    *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
    *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
    v17 = *(_QWORD *)(v13 + 104);
    *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
    *(_QWORD *)(v12 + 104) = v17;
    *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
    *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
    v24 = *(_OWORD *)(v13 + 16);
    v25 = *(_OWORD *)(v13 + 32);
    v26 = *(_OWORD *)(v13 + 64);
    *(_OWORD *)(v12 + 48) = *(_OWORD *)(v13 + 48);
    *(_OWORD *)(v12 + 64) = v26;
    *(_OWORD *)(v12 + 16) = v24;
    *(_OWORD *)(v12 + 32) = v25;
    v27 = *(_OWORD *)(v13 + 80);
    v28 = *(_OWORD *)(v13 + 96);
    v29 = *(_OWORD *)(v13 + 112);
    *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
    *(_OWORD *)(v12 + 96) = v28;
    *(_OWORD *)(v12 + 112) = v29;
    *(_OWORD *)(v12 + 80) = v27;
  }
  v30 = a3[7];
  v31 = a1 + v30;
  v32 = a2 + v30;
  *(_BYTE *)v31 = *(_BYTE *)v32;
  *(_QWORD *)(v31 + 8) = *(_QWORD *)(v32 + 8);
  *(_QWORD *)(v31 + 16) = *(_QWORD *)(v32 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  v33 = a3[9];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = *(_BYTE *)(v35 + 4);
  *(_DWORD *)v34 = *(_DWORD *)v35;
  *(_BYTE *)(v34 + 4) = v36;
  v37 = a3[10];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (_QWORD *)(a2 + v37);
  *v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40 = a3[11];
  v41 = a1 + v40;
  v42 = a2 + v40;
  *(_BYTE *)v41 = *(_BYTE *)(a2 + v40);
  *(_QWORD *)(v41 + 8) = *(_QWORD *)(a2 + v40 + 8);
  *(_QWORD *)(v41 + 16) = *(_QWORD *)(a2 + v40 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v41 + 24) = *(_BYTE *)(v42 + 24);
  *(_BYTE *)(v41 + 25) = *(_BYTE *)(v42 + 25);
  *(_QWORD *)(v41 + 32) = *(_QWORD *)(v42 + 32);
  *(_QWORD *)(v41 + 40) = *(_QWORD *)(v42 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v41 + 48) = *(_BYTE *)(v42 + 48);
  return a1;
}

uint64_t initializeWithTake for WebEmbedExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)(v13 + 128) = *(_QWORD *)(v14 + 128);
  v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  v16 = *(_OWORD *)(v14 + 112);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(v14 + 96);
  *(_OWORD *)(v13 + 112) = v16;
  v17 = *(_OWORD *)(v14 + 80);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v14 + 64);
  *(_OWORD *)(v13 + 80) = v17;
  v18 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v18;
  v19 = a1 + v12;
  v20 = a2 + v12;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  v21 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_DWORD *)v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  v24 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v27;
  *(_OWORD *)(v25 + 32) = *(_OWORD *)(v26 + 32);
  *(_BYTE *)(v25 + 48) = *(_BYTE *)(v26 + 48);
  return a1;
}

uint64_t assignWithTake for WebEmbedExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = sub_1D5AADF98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D5AADFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  if (!*(_QWORD *)(a1 + v11 + 16))
    goto LABEL_5;
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
    sub_1D57E17B8(v12);
LABEL_5:
    v17 = *(_OWORD *)(v13 + 112);
    *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
    *(_OWORD *)(v12 + 112) = v17;
    *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
    v18 = *(_OWORD *)(v13 + 48);
    *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
    *(_OWORD *)(v12 + 48) = v18;
    v19 = *(_OWORD *)(v13 + 80);
    *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
    *(_OWORD *)(v12 + 80) = v19;
    v20 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v20;
    goto LABEL_6;
  }
  *(_WORD *)v12 = *(_WORD *)v13;
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 64);
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_QWORD *)(v12 + 64) = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  v16 = *(_QWORD *)(v13 + 96);
  *(_QWORD *)(v12 + 88) = *(_QWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 96) = v16;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  *(_BYTE *)(v12 + 112) = *(_BYTE *)(v13 + 112);
  *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
  swift_bridgeObjectRelease();
LABEL_6:
  v21 = a3[7];
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_BYTE *)v22 = *(_BYTE *)v23;
  v25 = *(_QWORD *)(v23 + 8);
  v24 = *(_QWORD *)(v23 + 16);
  *(_QWORD *)(v22 + 8) = v25;
  *(_QWORD *)(v22 + 16) = v24;
  swift_bridgeObjectRelease();
  v26 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_DWORD *)v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  v29 = a3[10];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  v34 = a3[11];
  v35 = a1 + v34;
  v36 = a2 + v34;
  *(_BYTE *)v35 = *(_BYTE *)v36;
  v37 = *(_QWORD *)(v36 + 16);
  *(_QWORD *)(v35 + 8) = *(_QWORD *)(v36 + 8);
  *(_QWORD *)(v35 + 16) = v37;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v35 + 24) = *(_BYTE *)(v36 + 24);
  *(_BYTE *)(v35 + 25) = *(_BYTE *)(v36 + 25);
  v38 = *(_QWORD *)(v36 + 40);
  *(_QWORD *)(v35 + 32) = *(_QWORD *)(v36 + 32);
  *(_QWORD *)(v35 + 40) = v38;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v35 + 48) = *(_BYTE *)(v36 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for WebEmbedExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5AA74F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D5AADF98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D5AADFB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 40) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for WebEmbedExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D5AA75AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D5AADF98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D5AADFB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 40) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D5AA7654()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D5AADF98();
  if (v1 <= 0x3F)
  {
    result = sub_1D5AADFB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WebEmbedExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D5AA7764 + 4 * byte_1D5AE9BED[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D5AA7798 + 4 * byte_1D5AE9BE8[v4]))();
}

uint64_t sub_1D5AA7798(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5AA77A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5AA77A8);
  return result;
}

uint64_t sub_1D5AA77B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5AA77BCLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D5AA77C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5AA77C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WebEmbedExposureEvent.Model.CodingKeys()
{
  return &type metadata for WebEmbedExposureEvent.Model.CodingKeys;
}

unint64_t sub_1D5AA77E8()
{
  unint64_t result;

  result = qword_1EFF52A98;
  if (!qword_1EFF52A98)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE9E34, &type metadata for WebEmbedExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52A98);
  }
  return result;
}

unint64_t sub_1D5AA7830()
{
  unint64_t result;

  result = qword_1ED9C6A78[0];
  if (!qword_1ED9C6A78[0])
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE9DA4, &type metadata for WebEmbedExposureEvent.Model.CodingKeys);
    atomic_store(result, qword_1ED9C6A78);
  }
  return result;
}

unint64_t sub_1D5AA7878()
{
  unint64_t result;

  result = qword_1ED9C6A70;
  if (!qword_1ED9C6A70)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AE9DCC, &type metadata for WebEmbedExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C6A70);
  }
  return result;
}

uint64_t sub_1D5AA78BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AECA50 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5AEDC30 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6465626D45626577 && a2 == 0xEC00000061746144 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AEC8E0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

void sub_1D5AA7C18(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5AA7C58()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5AA7D48(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5AA7D88()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5AA7E64(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5AA7EA4()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5AA7F9C(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1D5AA7FE4()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5AA8044(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5AA8090()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5AA8134(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5AA8174()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5AA8214(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5AA8258()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5AA82B4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5AA82F4()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5AA841C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5AA845C()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5AA8558(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5AA8598()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5AA8644(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5AA8684()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5AA8728(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5AA8768()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5AA8860(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5AA88A0()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5AA8964(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5AA89A4()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5AA8A78(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5AA8AB8()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5AA8B48(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5AA8B88()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5AA8C20(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D5AA8C60()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5AA8D30(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AA8D7C()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AA8E24(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AA8E70()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AA8F30(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AA8F7C()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AA9028(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AA9074()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AA9118(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AA9164()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AA91F8(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AA9244()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AA931C(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AA9368()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AA9420(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AA946C()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AA952C(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AA9574()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AA9600(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AA964C()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AA96E0(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AA972C()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AA97C0(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AA980C()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AA98D8(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AA991C()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t sub_1D5AA99B8()
{
  sub_1D5AAEE80();
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AA9A60(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AA9AAC()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AA9B2C(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AA9B78()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AA9C2C(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AA9C78()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AA9CEC(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AA9D40()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AA9DB8(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AA9E04()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AA9E74(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AA9EC0()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AA9F74(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AA9FC0()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AAA04C(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AAA0A4()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AAA15C(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AAA1B4()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AAA22C(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AAA278()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AAA344(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AAA390()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AAA494(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AAA4E0()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AAA568(uint64_t a1, char a2)
{
  sub_1D5AAEE80();
  __asm { BR              X10 }
}

uint64_t sub_1D5AAA5AC()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

uint64_t EndReason.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5AAA684 + 4 * byte_1D5AE9FC5[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5AAA684()
{
  return 0x676B636142707061;
}

uint64_t sub_1D5AAA6A8()
{
  return 0x636142656E656373;
}

unint64_t sub_1D5AAA6CC()
{
  return 0xD000000000000015;
}

uint64_t sub_1D5AAA6E8()
{
  return 0x6975516563726F66;
}

uint64_t sub_1D5AAA704()
{
  return 0x72617073646C6566;
}

uint64_t sub_1D5AAA728()
{
  return 0x6976614E72657375;
}

uint64_t sub_1D5AAA74C()
{
  return 0x6873617263;
}

NewsAnalytics::EndReason_optional __swiftcall EndReason.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::EndReason_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1D5AAA7B8(char *a1)
{
  sub_1D5A352DC(*a1);
}

unint64_t sub_1D5AAA7C8()
{
  unint64_t result;

  result = qword_1EFF52AA0;
  if (!qword_1EFF52AA0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EndReason, &type metadata for EndReason);
    atomic_store(result, (unint64_t *)&qword_1EFF52AA0);
  }
  return result;
}

void sub_1D5AAA80C()
{
  char *v0;

  sub_1D5AAA344(0, *v0);
}

void sub_1D5AAA818(uint64_t a1)
{
  char *v1;

  sub_1D5AA7C18(a1, *v1);
}

void sub_1D5AAA820(uint64_t a1)
{
  char *v1;

  sub_1D5AAA344(a1, *v1);
}

NewsAnalytics::EndReason_optional sub_1D5AAA828(Swift::String *a1)
{
  return EndReason.init(rawValue:)(*a1);
}

uint64_t sub_1D5AAA834@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = EndReason.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D5AAA858()
{
  sub_1D5AAA9CC();
  return sub_1D5AAE928();
}

uint64_t sub_1D5AAA8B4()
{
  sub_1D5AAA9CC();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for EndReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D5AAA94C + 4 * byte_1D5AE9FD2[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D5AAA980 + 4 * byte_1D5AE9FCD[v4]))();
}

uint64_t sub_1D5AAA980(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5AAA988(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5AAA990);
  return result;
}

uint64_t sub_1D5AAA99C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5AAA9A4);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D5AAA9A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5AAA9B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EndReason()
{
  return &type metadata for EndReason;
}

unint64_t sub_1D5AAA9CC()
{
  unint64_t result;

  result = qword_1ED9CC4F8;
  if (!qword_1ED9CC4F8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for EndReason, &type metadata for EndReason);
    atomic_store(result, (unint64_t *)&qword_1ED9CC4F8);
  }
  return result;
}

uint64_t destroy for EventUserInfoHeadlineEmbeddings(uint64_t a1)
{
  return sub_1D581BA3C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), (void (*)(void))sub_1D57E69C4);
}

uint64_t *initializeWithCopy for EventUserInfoHeadlineEmbeddings(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_1D581BA3C(*a2, v4, v5, v6, (void (*)(void))sub_1D581B6EC);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for EventUserInfoHeadlineEmbeddings(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_1D581BA3C(*a2, v4, v5, v6, (void (*)(void))sub_1D581B6EC);
  v7 = *a1;
  v8 = a1[1];
  v9 = a1[2];
  v10 = a1[3];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_1D581BA3C(v7, v8, v9, v10, (void (*)(void))sub_1D57E69C4);
  return a1;
}

uint64_t *assignWithTake for EventUserInfoHeadlineEmbeddings(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __int128 v7;

  v3 = *a1;
  v5 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v7 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v7;
  sub_1D581BA3C(v3, v5, v4, v6, (void (*)(void))sub_1D57E69C4);
  return a1;
}

uint64_t getEnumTagSinglePayload for EventUserInfoHeadlineEmbeddings(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 13);
  v3 = ((*(_QWORD *)(a1 + 24) >> 60) & 3 | (*(_QWORD *)(a1 + 8) >> 58) & 0xC) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for EventUserInfoHeadlineEmbeddings(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)((-a2 >> 2) & 3) << 60;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)(result + 24) = ((unint64_t)((-a2 >> 2) & 3 | (4 * (-a2 & 0xF))) << 58) & 0x3000000000000000;
    }
  }
  return result;
}

uint64_t sub_1D5AAAC00(uint64_t a1)
{
  if (((*(_QWORD *)(a1 + 24) >> 60) & 3) == 3)
    return (*(_DWORD *)a1 + 3);
  else
    return (*(_QWORD *)(a1 + 24) >> 60) & 3;
}

uint64_t sub_1D5AAAC1C(uint64_t result)
{
  *(_QWORD *)(result + 24) &= 0xCFFFFFFFFFFFFFFFLL;
  return result;
}

_QWORD *sub_1D5AAAC2C(_QWORD *result, uint64_t a2)
{
  unint64_t v2;

  if (a2 < 3)
  {
    v2 = result[3] & 0xCFFFFFFFFFFFFFFFLL | (a2 << 60);
    result[1] &= 0xCFFFFFFFFFFFFFFFLL;
    result[3] = v2;
  }
  else
  {
    *result = (a2 - 3);
    result[1] = 0;
    result[2] = 0;
    result[3] = 0x3000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for EventUserInfoHeadlineEmbeddings()
{
  return &type metadata for EventUserInfoHeadlineEmbeddings;
}

char *FCNewsAppConfigurationManager.treatmentIDs.getter()
{
  void *v0;
  unsigned __int8 v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  char *result;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v1 = objc_msgSend(v0, sel_respondsToSelector_, sel_treatmentIDs);
  v2 = MEMORY[0x1E0DEE9D8];
  v3 = MEMORY[0x1E0DEE9D8];
  if ((v1 & 1) != 0)
  {
    v4 = objc_msgSend(v0, sel_treatmentIDs);
    if (!v4)
      return (char *)MEMORY[0x1E0DEE9D8];
    v5 = v4;
    sub_1D5AAB030();
    v3 = sub_1D5AAE94C();

  }
  if (!(v3 >> 62))
  {
    v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
      goto LABEL_6;
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1D5AAEC04();
  swift_bridgeObjectRelease();
  if (!v6)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return (char *)MEMORY[0x1E0DEE9D8];
  }
LABEL_6:
  v15 = v2;
  result = sub_1D5AAB014(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    v8 = 0;
    v9 = v15;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1D8278F6C](v8, v3);
      else
        v10 = *(id *)(v3 + 8 * v8 + 32);
      v11 = v10;
      v12 = objc_msgSend(v10, sel_longLongValue);

      v14 = *(_QWORD *)(v15 + 16);
      v13 = *(_QWORD *)(v15 + 24);
      if (v14 >= v13 >> 1)
        sub_1D5AAB014((char *)(v13 > 1), v14 + 1, 1);
      ++v8;
      *(_QWORD *)(v15 + 16) = v14 + 1;
      *(_QWORD *)(v15 + 8 * v14 + 32) = v12;
    }
    while (v6 != v8);
    swift_bridgeObjectRelease();
    return (char *)v9;
  }
  __break(1u);
  return result;
}

char *FCNewsAppConfigurationManager.segmentSetIDs.getter()
{
  void *v0;
  unsigned __int8 v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  char *result;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  unsigned int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v1 = objc_msgSend(v0, sel_respondsToSelector_, sel_segmentSetIDs);
  v2 = MEMORY[0x1E0DEE9D8];
  v3 = MEMORY[0x1E0DEE9D8];
  if ((v1 & 1) != 0)
  {
    v4 = objc_msgSend(v0, sel_segmentSetIDs);
    if (!v4)
      return (char *)MEMORY[0x1E0DEE9D8];
    v5 = v4;
    sub_1D5AAB030();
    v3 = sub_1D5AAE94C();

  }
  if (!(v3 >> 62))
  {
    v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
      goto LABEL_6;
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1D5AAEC04();
  swift_bridgeObjectRelease();
  if (!v6)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return (char *)MEMORY[0x1E0DEE9D8];
  }
LABEL_6:
  v15 = v2;
  result = sub_1D5AAB06C(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    v8 = 0;
    v9 = v15;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1D8278F6C](v8, v3);
      else
        v10 = *(id *)(v3 + 8 * v8 + 32);
      v11 = v10;
      v12 = objc_msgSend(v10, sel_intValue);

      v14 = *(_QWORD *)(v15 + 16);
      v13 = *(_QWORD *)(v15 + 24);
      if (v14 >= v13 >> 1)
        sub_1D5AAB06C((char *)(v13 > 1), v14 + 1, 1);
      ++v8;
      *(_QWORD *)(v15 + 16) = v14 + 1;
      *(_DWORD *)(v15 + 4 * v14 + 32) = v12;
    }
    while (v6 != v8);
    swift_bridgeObjectRelease();
    return (char *)v9;
  }
  __break(1u);
  return result;
}

char *sub_1D5AAAFDC(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_1D5AAB0A4(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_1D5AAAFF8(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_1D5AAB338(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_1D5AAB014(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_1D5AAB45C(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

unint64_t sub_1D5AAB030()
{
  unint64_t result;

  result = qword_1ED9CC7A0;
  if (!qword_1ED9CC7A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9CC7A0);
  }
  return result;
}

char *sub_1D5AAB06C(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_1D5AAB560(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

_QWORD *sub_1D5AAB088(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_1D5AAB664(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_1D5AAB0A4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1D57C0C24(0, &qword_1ED9CCA38);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

size_t sub_1D5AAB1B8(size_t result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  unint64_t v16;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1D57B5C60(0, &qword_1ED9CE500, (void (*)(uint64_t))MEMORY[0x1E0CF82E0]);
  v10 = *(_QWORD *)(sub_1D5AADC8C() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_29;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  v15 = *(_QWORD *)(sub_1D5AADC8C() - 8);
  if ((v5 & 1) != 0)
  {
    if (v13 < a4
      || (v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(_QWORD *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

char *sub_1D5AAB338(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1D57C0C24(0, &qword_1ED9CCA18);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1D5AAB45C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1D57C0C24(0, &qword_1ED9CD720);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_release();
  return v10;
}

char *sub_1D5AAB560(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1D57C0C24(0, &qword_1ED9CD718);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 4 * v8);
  }
  swift_release();
  return v10;
}

_QWORD *sub_1D5AAB664(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1D57B5C60(0, &qword_1EFF50498, (void (*)(uint64_t))sub_1D59F5EE8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_1D59F5EE8();
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

NewsAnalytics::FamilySharingData __swiftcall FamilySharingData.init(isFamilySharingEnabled:)(NewsAnalytics::FamilySharingData isFamilySharingEnabled)
{
  NewsAnalytics::FamilySharingData *v1;

  v1->isFamilySharingEnabled = isFamilySharingEnabled.isFamilySharingEnabled;
  return isFamilySharingEnabled;
}

uint64_t FamilySharingData.isFamilySharingEnabled.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t FamilySharingData.isFamilySharingEnabled.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*FamilySharingData.isFamilySharingEnabled.modify())()
{
  return nullsub_1;
}

unint64_t sub_1D5AAB7C8()
{
  return 0xD000000000000016;
}

uint64_t sub_1D5AAB7E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5AABEE4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D5AAB80C()
{
  sub_1D5AAB94C();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5AAB834()
{
  sub_1D5AAB94C();
  return sub_1D5AAEEE0();
}

uint64_t FamilySharingData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5AABAB4(0, &qword_1ED9CE1A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5AAB94C();
  sub_1D5AAEEC8();
  sub_1D5AAED48();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D5AAB94C()
{
  unint64_t result;

  result = qword_1ED9CDAF0;
  if (!qword_1ED9CDAF0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AEA2C8, &type metadata for FamilySharingData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDAF0);
  }
  return result;
}

uint64_t FamilySharingData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;

  sub_1D5AABAB4(0, &qword_1EFF52AA8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5AAB94C();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v10 = sub_1D5AAECAC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5AABAB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5AAB94C();
    v7 = a3(a1, &type metadata for FamilySharingData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D5AABB14()
{
  unint64_t result;

  result = qword_1ED9CDB18;
  if (!qword_1ED9CDB18)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FamilySharingData, &type metadata for FamilySharingData);
    atomic_store(result, (unint64_t *)&qword_1ED9CDB18);
  }
  return result;
}

unint64_t sub_1D5AABB5C()
{
  unint64_t result;

  result = qword_1ED9CDB10;
  if (!qword_1ED9CDB10)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for FamilySharingData, &type metadata for FamilySharingData);
    atomic_store(result, (unint64_t *)&qword_1ED9CDB10);
  }
  return result;
}

uint64_t sub_1D5AABBA0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FamilySharingData.init(from:)(a1, a2);
}

uint64_t sub_1D5AABBB4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1D5AABAB4(0, &qword_1ED9CE1A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5AAB94C();
  sub_1D5AAEEC8();
  sub_1D5AAED48();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t storeEnumTagSinglePayload for FamilySharingData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5AABCF0 + 4 * byte_1D5AEA145[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D5AABD24 + 4 * byte_1D5AEA140[v4]))();
}

uint64_t sub_1D5AABD24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5AABD2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5AABD34);
  return result;
}

uint64_t sub_1D5AABD40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5AABD48);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5AABD4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5AABD54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FamilySharingData()
{
  return &type metadata for FamilySharingData;
}

uint64_t storeEnumTagSinglePayload for FamilySharingData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5AABDB0 + 4 * byte_1D5AEA14A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5AABDD0 + 4 * byte_1D5AEA14F[v4]))();
}

_BYTE *sub_1D5AABDB0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5AABDD0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5AABDD8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5AABDE0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5AABDE8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5AABDF0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FamilySharingData.CodingKeys()
{
  return &type metadata for FamilySharingData.CodingKeys;
}

unint64_t sub_1D5AABE10()
{
  unint64_t result;

  result = qword_1EFF52AB0;
  if (!qword_1EFF52AB0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AEA2A0, &type metadata for FamilySharingData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52AB0);
  }
  return result;
}

unint64_t sub_1D5AABE58()
{
  unint64_t result;

  result = qword_1ED9CDB00;
  if (!qword_1ED9CDB00)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AEA210, &type metadata for FamilySharingData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDB00);
  }
  return result;
}

unint64_t sub_1D5AABEA0()
{
  unint64_t result;

  result = qword_1ED9CDAF8;
  if (!qword_1ED9CDAF8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AEA238, &type metadata for FamilySharingData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9CDAF8);
  }
  return result;
}

uint64_t sub_1D5AABEE4(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AF2CB0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

NewsAnalytics::ListeningSource_optional __swiftcall ListeningSource.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAnalytics::ListeningSource_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D5AAEC4C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ListeningSource.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5AABFF0 + 4 * byte_1D5AEA318[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D5AABFF0()
{
  return 0x7070416E69;
}

uint64_t sub_1D5AAC004()
{
  return 0x6C616E7265747865;
}

uint64_t sub_1D5AAC01C()
{
  return 0x79616C50726163;
}

void sub_1D5AAC030(char *a1)
{
  sub_1D5A3BE6C(*a1);
}

unint64_t sub_1D5AAC040()
{
  unint64_t result;

  result = qword_1EFF52AB8;
  if (!qword_1EFF52AB8)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ListeningSource, &type metadata for ListeningSource);
    atomic_store(result, (unint64_t *)&qword_1EFF52AB8);
  }
  return result;
}

void sub_1D5AAC084()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5AAC0D0()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

void sub_1D5AAC138()
{
  __asm { BR              X10 }
}

uint64_t sub_1D5AAC174()
{
  sub_1D5AAE874();
  return swift_bridgeObjectRelease();
}

void sub_1D5AAC1C8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D5AAEE80();
  __asm { BR              X9 }
}

uint64_t sub_1D5AAC210()
{
  sub_1D5AAE874();
  swift_bridgeObjectRelease();
  return sub_1D5AAEE98();
}

NewsAnalytics::ListeningSource_optional sub_1D5AAC278(Swift::String *a1)
{
  return ListeningSource.init(rawValue:)(*a1);
}

uint64_t sub_1D5AAC284()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D5AAC2B4 + 4 * byte_1D5AEA328[*v0]))();
}

void sub_1D5AAC2B4(_QWORD *a1@<X8>)
{
  *a1 = 0x7070416E69;
  a1[1] = 0xE500000000000000;
}

void sub_1D5AAC2CC(_QWORD *a1@<X8>)
{
  *a1 = 0x6C616E7265747865;
  a1[1] = 0xE800000000000000;
}

void sub_1D5AAC2E8(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x79616C50726163;
  a1[1] = v1;
}

uint64_t sub_1D5AAC300()
{
  sub_1D5AAC474();
  return sub_1D5AAE928();
}

uint64_t sub_1D5AAC35C()
{
  sub_1D5AAC474();
  return sub_1D5AAE91C();
}

uint64_t storeEnumTagSinglePayload for ListeningSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D5AAC3F4 + 4 * byte_1D5AEA331[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D5AAC428 + 4 * byte_1D5AEA32C[v4]))();
}

uint64_t sub_1D5AAC428(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5AAC430(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5AAC438);
  return result;
}

uint64_t sub_1D5AAC444(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5AAC44CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D5AAC450(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5AAC458(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ListeningSource()
{
  return &type metadata for ListeningSource;
}

unint64_t sub_1D5AAC474()
{
  unint64_t result;

  result = qword_1EFF52AC0;
  if (!qword_1EFF52AC0)
  {
    result = MEMORY[0x1D8279680](&protocol conformance descriptor for ListeningSource, &type metadata for ListeningSource);
    atomic_store(result, (unint64_t *)&qword_1EFF52AC0);
  }
  return result;
}

uint64_t VideoAdData.duration.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t VideoAdData.duration.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*VideoAdData.duration.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdData.prerollUrl.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VideoAdData.prerollUrl.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*VideoAdData.prerollUrl.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdData.init(duration:prerollUrl:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_DWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = a3;
  return result;
}

uint64_t sub_1D5AAC554()
{
  _BYTE *v0;

  if (*v0)
    return 0x556C6C6F72657270;
  else
    return 0x6E6F697461727564;
}

uint64_t sub_1D5AAC594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5AACC54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5AAC5B8()
{
  sub_1D5AAC738();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5AAC5E0()
{
  sub_1D5AAC738();
  return sub_1D5AAEEE0();
}

uint64_t VideoAdData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];
  char v12;
  char v13;

  sub_1D5AAC8D4(0, &qword_1EFF52AC8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v11 - v7;
  v9 = *(_QWORD *)(v1 + 8);
  v11[0] = *(_QWORD *)(v1 + 16);
  v11[1] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5AAC738();
  sub_1D5AAEEC8();
  v13 = 0;
  sub_1D5AAED78();
  if (!v2)
  {
    v12 = 1;
    sub_1D5AAED3C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D5AAC738()
{
  unint64_t result;

  result = qword_1EFF52AD0;
  if (!qword_1EFF52AD0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AEA5C8, &type metadata for VideoAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52AD0);
  }
  return result;
}

uint64_t VideoAdData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;

  sub_1D5AAC8D4(0, &qword_1EFF52AD8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5AAC738();
  sub_1D5AAEEB0();
  if (!v2)
  {
    v17 = 0;
    v10 = sub_1D5AAECDC();
    v16 = 1;
    v12 = sub_1D5AAECA0();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_DWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v12;
    *(_QWORD *)(a2 + 16) = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1D5AAC8D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5AAC738();
    v7 = a3(a1, &type metadata for VideoAdData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5AAC938@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return VideoAdData.init(from:)(a1, a2);
}

uint64_t sub_1D5AAC94C(_QWORD *a1)
{
  return VideoAdData.encode(to:)(a1);
}

uint64_t sub_1D5AAC964(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VideoAdData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for VideoAdData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoAdData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VideoAdData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for VideoAdData()
{
  return &type metadata for VideoAdData;
}

uint64_t storeEnumTagSinglePayload for VideoAdData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5AACAFC + 4 * byte_1D5AEA455[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D5AACB30 + 4 * byte_1D5AEA450[v4]))();
}

uint64_t sub_1D5AACB30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5AACB38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5AACB40);
  return result;
}

uint64_t sub_1D5AACB4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5AACB54);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5AACB58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5AACB60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoAdData.CodingKeys()
{
  return &type metadata for VideoAdData.CodingKeys;
}

unint64_t sub_1D5AACB80()
{
  unint64_t result;

  result = qword_1EFF52AE0;
  if (!qword_1EFF52AE0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AEA5A0, &type metadata for VideoAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52AE0);
  }
  return result;
}

unint64_t sub_1D5AACBC8()
{
  unint64_t result;

  result = qword_1EFF52AE8;
  if (!qword_1EFF52AE8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AEA510, &type metadata for VideoAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52AE8);
  }
  return result;
}

unint64_t sub_1D5AACC10()
{
  unint64_t result;

  result = qword_1EFF52AF0;
  if (!qword_1EFF52AF0)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AEA538, &type metadata for VideoAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52AF0);
  }
  return result;
}

uint64_t sub_1D5AACC54(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x556C6C6F72657270 && a2 == 0xEA00000000006C72)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t CompetingGroupPersonalizationListData.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CompetingGroupPersonalizationListData.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CompetingGroupPersonalizationListData.name.modify())()
{
  return nullsub_1;
}

void CompetingGroupPersonalizationListData.personalizationScore.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*CompetingGroupPersonalizationListData.personalizationScore.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D5AACDD8()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000014;
  else
    return 1701667182;
}

uint64_t sub_1D5AACE10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5AAD3C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5AACE34()
{
  sub_1D5AACFB8();
  return sub_1D5AAEED4();
}

uint64_t sub_1D5AACE5C()
{
  sub_1D5AACFB8();
  return sub_1D5AAEEE0();
}

uint64_t CompetingGroupPersonalizationListData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  char v11;

  sub_1D5AAD194(0, &qword_1ED9C6F18, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v9 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5AACFB8();
  sub_1D5AAEEC8();
  v11 = 0;
  v7 = v9;
  sub_1D5AAED3C();
  if (!v7)
  {
    v10 = 1;
    sub_1D5AAED54();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D5AACFB8()
{
  unint64_t result;

  result = qword_1ED9C6E58;
  if (!qword_1ED9C6E58)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AEA7BC, &type metadata for CompetingGroupPersonalizationListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C6E58);
  }
  return result;
}

uint64_t CompetingGroupPersonalizationListData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[16];

  sub_1D5AAD194(0, &qword_1ED9C6EE0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v16[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5AACFB8();
  sub_1D5AAEEB0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16[15] = 0;
  v10 = sub_1D5AAECA0();
  v12 = v11;
  v16[14] = 1;
  swift_bridgeObjectRetain();
  sub_1D5AAECB8();
  v14 = v13;
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1D5AAD194(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D5AACFB8();
    v7 = a3(a1, &type metadata for CompetingGroupPersonalizationListData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1D5AAD1F8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return CompetingGroupPersonalizationListData.init(from:)(a1, a2);
}

uint64_t sub_1D5AAD20C(_QWORD *a1)
{
  return CompetingGroupPersonalizationListData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for CompetingGroupPersonalizationListData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5AAD26C + 4 * byte_1D5AEA625[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D5AAD2A0 + 4 * byte_1D5AEA620[v4]))();
}

uint64_t sub_1D5AAD2A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5AAD2A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5AAD2B0);
  return result;
}

uint64_t sub_1D5AAD2BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5AAD2C4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5AAD2C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5AAD2D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CompetingGroupPersonalizationListData.CodingKeys()
{
  return &type metadata for CompetingGroupPersonalizationListData.CodingKeys;
}

unint64_t sub_1D5AAD2F0()
{
  unint64_t result;

  result = qword_1EFF52AF8;
  if (!qword_1EFF52AF8)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AEA794, &type metadata for CompetingGroupPersonalizationListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFF52AF8);
  }
  return result;
}

unint64_t sub_1D5AAD338()
{
  unint64_t result;

  result = qword_1ED9C6E68;
  if (!qword_1ED9C6E68)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AEA704, &type metadata for CompetingGroupPersonalizationListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C6E68);
  }
  return result;
}

unint64_t sub_1D5AAD380()
{
  unint64_t result;

  result = qword_1ED9C6E60;
  if (!qword_1ED9C6E60)
  {
    result = MEMORY[0x1D8279680](&unk_1D5AEA72C, &type metadata for CompetingGroupPersonalizationListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED9C6E60);
  }
  return result;
}

uint64_t sub_1D5AAD3C4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1D5AAEDE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5AEE6C0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5AAEDE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D5AAD4A0()
{
  return MEMORY[0x1E0CAE070]();
}

uint64_t sub_1D5AAD4AC()
{
  return MEMORY[0x1E0CAE0A8]();
}

uint64_t sub_1D5AAD4B8()
{
  return MEMORY[0x1E0CAE0B8]();
}

uint64_t sub_1D5AAD4C4()
{
  return MEMORY[0x1E0CAE160]();
}

uint64_t sub_1D5AAD4D0()
{
  return MEMORY[0x1E0CAE178]();
}

uint64_t sub_1D5AAD4DC()
{
  return MEMORY[0x1E0CAE1A0]();
}

uint64_t sub_1D5AAD4E8()
{
  return MEMORY[0x1E0CAE1D8]();
}

uint64_t sub_1D5AAD4F4()
{
  return MEMORY[0x1E0CAE1E8]();
}

uint64_t sub_1D5AAD500()
{
  return MEMORY[0x1E0CAE430]();
}

uint64_t sub_1D5AAD50C()
{
  return MEMORY[0x1E0CAE4B8]();
}

uint64_t sub_1D5AAD518()
{
  return MEMORY[0x1E0CAE618]();
}

uint64_t sub_1D5AAD524()
{
  return MEMORY[0x1E0CAE638]();
}

uint64_t sub_1D5AAD530()
{
  return MEMORY[0x1E0CAE648]();
}

uint64_t sub_1D5AAD53C()
{
  return MEMORY[0x1E0CAE668]();
}

uint64_t sub_1D5AAD548()
{
  return MEMORY[0x1E0CAE670]();
}

uint64_t sub_1D5AAD554()
{
  return MEMORY[0x1E0CAE678]();
}

uint64_t sub_1D5AAD560()
{
  return MEMORY[0x1E0CAE690]();
}

uint64_t sub_1D5AAD56C()
{
  return MEMORY[0x1E0CAE768]();
}

uint64_t sub_1D5AAD578()
{
  return MEMORY[0x1E0CAE778]();
}

uint64_t sub_1D5AAD584()
{
  return MEMORY[0x1E0CAE7C8]();
}

uint64_t sub_1D5AAD590()
{
  return MEMORY[0x1E0CAE7D0]();
}

uint64_t sub_1D5AAD59C()
{
  return MEMORY[0x1E0CAE858]();
}

uint64_t sub_1D5AAD5A8()
{
  return MEMORY[0x1E0CAE890]();
}

uint64_t sub_1D5AAD5B4()
{
  return MEMORY[0x1E0CAE8B8]();
}

uint64_t sub_1D5AAD5C0()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t sub_1D5AAD5CC()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t sub_1D5AAD5D8()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t sub_1D5AAD5E4()
{
  return MEMORY[0x1E0CAE910]();
}

uint64_t sub_1D5AAD5F0()
{
  return MEMORY[0x1E0CAEE50]();
}

uint64_t sub_1D5AAD5FC()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_1D5AAD608()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1D5AAD614()
{
  return MEMORY[0x1E0CAFB58]();
}

uint64_t sub_1D5AAD620()
{
  return MEMORY[0x1E0DB2F20]();
}

uint64_t sub_1D5AAD62C()
{
  return MEMORY[0x1E0CAFDA0]();
}

uint64_t sub_1D5AAD638()
{
  return MEMORY[0x1E0CAFDE0]();
}

uint64_t sub_1D5AAD644()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1D5AAD650()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_1D5AAD65C()
{
  return MEMORY[0x1E0CAFF90]();
}

uint64_t sub_1D5AAD668()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1D5AAD674()
{
  return MEMORY[0x1E0CB00A0]();
}

uint64_t sub_1D5AAD680()
{
  return MEMORY[0x1E0CB0140]();
}

uint64_t sub_1D5AAD68C()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_1D5AAD698()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1D5AAD6A4()
{
  return MEMORY[0x1E0CB03A8]();
}

uint64_t sub_1D5AAD6B0()
{
  return MEMORY[0x1E0CB03B8]();
}

uint64_t sub_1D5AAD6BC()
{
  return MEMORY[0x1E0CB03C0]();
}

uint64_t sub_1D5AAD6C8()
{
  return MEMORY[0x1E0CB05D8]();
}

uint64_t sub_1D5AAD6D4()
{
  return MEMORY[0x1E0CB0708]();
}

uint64_t sub_1D5AAD6E0()
{
  return MEMORY[0x1E0CB07B0]();
}

uint64_t sub_1D5AAD6EC()
{
  return MEMORY[0x1E0CB07C0]();
}

uint64_t sub_1D5AAD6F8()
{
  return MEMORY[0x1E0CB07E8]();
}

uint64_t sub_1D5AAD704()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_1D5AAD710()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1D5AAD71C()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1D5AAD728()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1D5AAD734()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1D5AAD740()
{
  return MEMORY[0x1E0CB0AC0]();
}

uint64_t sub_1D5AAD74C()
{
  return MEMORY[0x1E0CB0AE8]();
}

uint64_t sub_1D5AAD758()
{
  return MEMORY[0x1E0CB0C38]();
}

uint64_t sub_1D5AAD764()
{
  return MEMORY[0x1E0CB0C48]();
}

uint64_t sub_1D5AAD770()
{
  return MEMORY[0x1E0CB0CB0]();
}

uint64_t sub_1D5AAD77C()
{
  return MEMORY[0x1E0CB0CC8]();
}

uint64_t sub_1D5AAD788()
{
  return MEMORY[0x1E0CB0D80]();
}

uint64_t sub_1D5AAD794()
{
  return MEMORY[0x1E0CB0DB8]();
}

uint64_t sub_1D5AAD7A0()
{
  return MEMORY[0x1E0CB0DF0]();
}

uint64_t sub_1D5AAD7AC()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t sub_1D5AAD7B8()
{
  return MEMORY[0x1E0CB1430]();
}

uint64_t sub_1D5AAD7C4()
{
  return MEMORY[0x1E0CB1460]();
}

uint64_t sub_1D5AAD7D0()
{
  return MEMORY[0x1E0CB1470]();
}

uint64_t sub_1D5AAD7DC()
{
  return MEMORY[0x1E0DB54B0]();
}

uint64_t sub_1D5AAD7E8()
{
  return MEMORY[0x1E0DB54B8]();
}

uint64_t sub_1D5AAD7F4()
{
  return MEMORY[0x1E0DB54C0]();
}

uint64_t sub_1D5AAD800()
{
  return MEMORY[0x1E0DB54C8]();
}

uint64_t sub_1D5AAD80C()
{
  return MEMORY[0x1E0DB54D0]();
}

uint64_t sub_1D5AAD818()
{
  return MEMORY[0x1E0DB54F8]();
}

uint64_t sub_1D5AAD824()
{
  return MEMORY[0x1E0DB5518]();
}

uint64_t sub_1D5AAD830()
{
  return MEMORY[0x1E0DB5520]();
}

uint64_t _s11TeaSettings0B0C13NewsAnalyticsE0D0V9DebuggingV6JitterCfd_0()
{
  return MEMORY[0x1E0DB5548]();
}

uint64_t sub_1D5AAD848()
{
  return MEMORY[0x1E0DB5788]();
}

uint64_t sub_1D5AAD854()
{
  return MEMORY[0x1E0DB5798]();
}

uint64_t sub_1D5AAD860()
{
  return MEMORY[0x1E0DB57B0]();
}

uint64_t sub_1D5AAD86C()
{
  return MEMORY[0x1E0DB57C8]();
}

uint64_t sub_1D5AAD878()
{
  return MEMORY[0x1E0DB57F0]();
}

uint64_t sub_1D5AAD884()
{
  return MEMORY[0x1E0DB5808]();
}

uint64_t sub_1D5AAD890()
{
  return MEMORY[0x1E0DB5818]();
}

uint64_t sub_1D5AAD89C()
{
  return MEMORY[0x1E0DB5820]();
}

uint64_t sub_1D5AAD8A8()
{
  return MEMORY[0x1E0DB5858]();
}

uint64_t sub_1D5AAD8B4()
{
  return MEMORY[0x1E0DB5860]();
}

uint64_t sub_1D5AAD8C0()
{
  return MEMORY[0x1E0DB5870]();
}

uint64_t sub_1D5AAD8CC()
{
  return MEMORY[0x1E0DB5878]();
}

uint64_t sub_1D5AAD8D8()
{
  return MEMORY[0x1E0DB5890]();
}

uint64_t sub_1D5AAD8E4()
{
  return MEMORY[0x1E0DB58D8]();
}

uint64_t sub_1D5AAD8F0()
{
  return MEMORY[0x1E0CF7ED8]();
}

uint64_t sub_1D5AAD8FC()
{
  return MEMORY[0x1E0CF7EE8]();
}

uint64_t sub_1D5AAD908()
{
  return MEMORY[0x1E0CF7EF0]();
}

uint64_t sub_1D5AAD914()
{
  return MEMORY[0x1E0CF7EF8]();
}

uint64_t sub_1D5AAD920()
{
  return MEMORY[0x1E0CF7F00]();
}

uint64_t sub_1D5AAD92C()
{
  return MEMORY[0x1E0CF7F08]();
}

uint64_t sub_1D5AAD938()
{
  return MEMORY[0x1E0CF7F10]();
}

uint64_t sub_1D5AAD944()
{
  return MEMORY[0x1E0CF7F18]();
}

uint64_t sub_1D5AAD950()
{
  return MEMORY[0x1E0CF7F20]();
}

uint64_t sub_1D5AAD95C()
{
  return MEMORY[0x1E0CF7F28]();
}

uint64_t sub_1D5AAD968()
{
  return MEMORY[0x1E0CF7F30]();
}

uint64_t sub_1D5AAD974()
{
  return MEMORY[0x1E0CF7F40]();
}

uint64_t sub_1D5AAD980()
{
  return MEMORY[0x1E0CF7F48]();
}

uint64_t sub_1D5AAD98C()
{
  return MEMORY[0x1E0CF7F50]();
}

uint64_t sub_1D5AAD998()
{
  return MEMORY[0x1E0CF7F58]();
}

uint64_t sub_1D5AAD9A4()
{
  return MEMORY[0x1E0CF7F60]();
}

uint64_t sub_1D5AAD9B0()
{
  return MEMORY[0x1E0CF7F68]();
}

uint64_t sub_1D5AAD9BC()
{
  return MEMORY[0x1E0CF7F70]();
}

uint64_t sub_1D5AAD9C8()
{
  return MEMORY[0x1E0CF7F78]();
}

uint64_t sub_1D5AAD9D4()
{
  return MEMORY[0x1E0CF7F80]();
}

uint64_t sub_1D5AAD9E0()
{
  return MEMORY[0x1E0CF7F88]();
}

uint64_t sub_1D5AAD9EC()
{
  return MEMORY[0x1E0CF7FA0]();
}

uint64_t sub_1D5AAD9F8()
{
  return MEMORY[0x1E0CF7FB0]();
}

uint64_t sub_1D5AADA04()
{
  return MEMORY[0x1E0CF7FC0]();
}

uint64_t sub_1D5AADA10()
{
  return MEMORY[0x1E0CF7FC8]();
}

uint64_t sub_1D5AADA1C()
{
  return MEMORY[0x1E0CF7FD0]();
}

uint64_t sub_1D5AADA28()
{
  return MEMORY[0x1E0CF7FD8]();
}

uint64_t sub_1D5AADA34()
{
  return MEMORY[0x1E0CF7FE0]();
}

uint64_t sub_1D5AADA40()
{
  return MEMORY[0x1E0CF7FF8]();
}

uint64_t sub_1D5AADA4C()
{
  return MEMORY[0x1E0CF8000]();
}

uint64_t sub_1D5AADA58()
{
  return MEMORY[0x1E0CF8010]();
}

uint64_t sub_1D5AADA64()
{
  return MEMORY[0x1E0CF8018]();
}

uint64_t sub_1D5AADA70()
{
  return MEMORY[0x1E0CF8028]();
}

uint64_t sub_1D5AADA7C()
{
  return MEMORY[0x1E0CF8038]();
}

uint64_t sub_1D5AADA88()
{
  return MEMORY[0x1E0CF8040]();
}

uint64_t sub_1D5AADA94()
{
  return MEMORY[0x1E0CF8048]();
}

uint64_t sub_1D5AADAA0()
{
  return MEMORY[0x1E0CF8050]();
}

uint64_t sub_1D5AADAAC()
{
  return MEMORY[0x1E0CF8058]();
}

uint64_t sub_1D5AADAB8()
{
  return MEMORY[0x1E0CF8080]();
}

uint64_t sub_1D5AADAC4()
{
  return MEMORY[0x1E0CF8090]();
}

uint64_t sub_1D5AADAD0()
{
  return MEMORY[0x1E0CF8098]();
}

uint64_t sub_1D5AADADC()
{
  return MEMORY[0x1E0CF80B0]();
}

uint64_t sub_1D5AADAE8()
{
  return MEMORY[0x1E0CF80C0]();
}

uint64_t sub_1D5AADAF4()
{
  return MEMORY[0x1E0CF80D0]();
}

uint64_t sub_1D5AADB00()
{
  return MEMORY[0x1E0CF80D8]();
}

uint64_t sub_1D5AADB0C()
{
  return MEMORY[0x1E0CF80E0]();
}

uint64_t sub_1D5AADB18()
{
  return MEMORY[0x1E0CF80F0]();
}

uint64_t sub_1D5AADB24()
{
  return MEMORY[0x1E0CF8100]();
}

uint64_t sub_1D5AADB30()
{
  return MEMORY[0x1E0CF8110]();
}

uint64_t sub_1D5AADB3C()
{
  return MEMORY[0x1E0CF8118]();
}

uint64_t sub_1D5AADB48()
{
  return MEMORY[0x1E0CF8130]();
}

uint64_t sub_1D5AADB54()
{
  return MEMORY[0x1E0CF8178]();
}

uint64_t sub_1D5AADB60()
{
  return MEMORY[0x1E0CF8198]();
}

uint64_t sub_1D5AADB6C()
{
  return MEMORY[0x1E0CF81A0]();
}

uint64_t sub_1D5AADB78()
{
  return MEMORY[0x1E0CF81A8]();
}

uint64_t sub_1D5AADB84()
{
  return MEMORY[0x1E0CF81B0]();
}

uint64_t sub_1D5AADB90()
{
  return MEMORY[0x1E0CF81B8]();
}

uint64_t sub_1D5AADB9C()
{
  return MEMORY[0x1E0CF81C0]();
}

uint64_t sub_1D5AADBA8()
{
  return MEMORY[0x1E0CF81C8]();
}

uint64_t sub_1D5AADBB4()
{
  return MEMORY[0x1E0CF81D0]();
}

uint64_t sub_1D5AADBC0()
{
  return MEMORY[0x1E0CF81D8]();
}

uint64_t sub_1D5AADBCC()
{
  return MEMORY[0x1E0CF81E0]();
}

uint64_t sub_1D5AADBD8()
{
  return MEMORY[0x1E0CF81E8]();
}

uint64_t sub_1D5AADBE4()
{
  return MEMORY[0x1E0CF81F0]();
}

uint64_t sub_1D5AADBF0()
{
  return MEMORY[0x1E0CF8208]();
}

uint64_t sub_1D5AADBFC()
{
  return MEMORY[0x1E0CF8210]();
}

uint64_t sub_1D5AADC08()
{
  return MEMORY[0x1E0CF8230]();
}

uint64_t sub_1D5AADC14()
{
  return MEMORY[0x1E0CF8238]();
}

uint64_t sub_1D5AADC20()
{
  return MEMORY[0x1E0CF8250]();
}

uint64_t sub_1D5AADC2C()
{
  return MEMORY[0x1E0CF8280]();
}

uint64_t sub_1D5AADC38()
{
  return MEMORY[0x1E0CF8288]();
}

uint64_t sub_1D5AADC44()
{
  return MEMORY[0x1E0CF8298]();
}

uint64_t sub_1D5AADC50()
{
  return MEMORY[0x1E0CF82A0]();
}

uint64_t sub_1D5AADC5C()
{
  return MEMORY[0x1E0CF82B8]();
}

uint64_t sub_1D5AADC68()
{
  return MEMORY[0x1E0CF82C0]();
}

uint64_t sub_1D5AADC74()
{
  return MEMORY[0x1E0CF82D0]();
}

uint64_t sub_1D5AADC80()
{
  return MEMORY[0x1E0CF82D8]();
}

uint64_t sub_1D5AADC8C()
{
  return MEMORY[0x1E0CF82E0]();
}

uint64_t sub_1D5AADC98()
{
  return MEMORY[0x1E0CF8308]();
}

uint64_t sub_1D5AADCA4()
{
  return MEMORY[0x1E0CF8310]();
}

uint64_t sub_1D5AADCB0()
{
  return MEMORY[0x1E0CF8318]();
}

uint64_t sub_1D5AADCBC()
{
  return MEMORY[0x1E0CF8320]();
}

uint64_t sub_1D5AADCC8()
{
  return MEMORY[0x1E0CF8328]();
}

uint64_t sub_1D5AADCD4()
{
  return MEMORY[0x1E0CF8330]();
}

uint64_t sub_1D5AADCE0()
{
  return MEMORY[0x1E0CF8338]();
}

uint64_t sub_1D5AADCEC()
{
  return MEMORY[0x1E0CF8340]();
}

uint64_t sub_1D5AADCF8()
{
  return MEMORY[0x1E0CF8358]();
}

uint64_t sub_1D5AADD04()
{
  return MEMORY[0x1E0CF8360]();
}

uint64_t sub_1D5AADD10()
{
  return MEMORY[0x1E0CF8368]();
}

uint64_t sub_1D5AADD1C()
{
  return MEMORY[0x1E0CF8370]();
}

uint64_t sub_1D5AADD28()
{
  return MEMORY[0x1E0CF8390]();
}

uint64_t sub_1D5AADD34()
{
  return MEMORY[0x1E0CF8398]();
}

uint64_t sub_1D5AADD40()
{
  return MEMORY[0x1E0CF83A8]();
}

uint64_t sub_1D5AADD4C()
{
  return MEMORY[0x1E0CF83B0]();
}

uint64_t sub_1D5AADD58()
{
  return MEMORY[0x1E0CF83B8]();
}

uint64_t sub_1D5AADD64()
{
  return MEMORY[0x1E0CF83C0]();
}

uint64_t sub_1D5AADD70()
{
  return MEMORY[0x1E0CF83C8]();
}

uint64_t sub_1D5AADD7C()
{
  return MEMORY[0x1E0CF83D8]();
}

uint64_t sub_1D5AADD88()
{
  return MEMORY[0x1E0CF83F0]();
}

uint64_t sub_1D5AADD94()
{
  return MEMORY[0x1E0CF83F8]();
}

uint64_t sub_1D5AADDA0()
{
  return MEMORY[0x1E0CF8400]();
}

uint64_t sub_1D5AADDAC()
{
  return MEMORY[0x1E0CF8408]();
}

uint64_t sub_1D5AADDB8()
{
  return MEMORY[0x1E0CF8410]();
}

uint64_t sub_1D5AADDC4()
{
  return MEMORY[0x1E0CF8418]();
}

uint64_t sub_1D5AADDD0()
{
  return MEMORY[0x1E0CF8428]();
}

uint64_t sub_1D5AADDDC()
{
  return MEMORY[0x1E0CF8440]();
}

uint64_t sub_1D5AADDE8()
{
  return MEMORY[0x1E0CF8448]();
}

uint64_t sub_1D5AADDF4()
{
  return MEMORY[0x1E0CF8458]();
}

uint64_t sub_1D5AADE00()
{
  return MEMORY[0x1E0CF8468]();
}

uint64_t sub_1D5AADE0C()
{
  return MEMORY[0x1E0CF8478]();
}

uint64_t sub_1D5AADE18()
{
  return MEMORY[0x1E0CF8480]();
}

uint64_t sub_1D5AADE24()
{
  return MEMORY[0x1E0CF8490]();
}

uint64_t sub_1D5AADE30()
{
  return MEMORY[0x1E0CF8498]();
}

uint64_t sub_1D5AADE3C()
{
  return MEMORY[0x1E0CF84A8]();
}

uint64_t sub_1D5AADE48()
{
  return MEMORY[0x1E0CF84B0]();
}

uint64_t sub_1D5AADE54()
{
  return MEMORY[0x1E0CF84B8]();
}

uint64_t sub_1D5AADE60()
{
  return MEMORY[0x1E0CF84C0]();
}

uint64_t sub_1D5AADE6C()
{
  return MEMORY[0x1E0CF84C8]();
}

uint64_t sub_1D5AADE78()
{
  return MEMORY[0x1E0CF84D0]();
}

uint64_t sub_1D5AADE84()
{
  return MEMORY[0x1E0CF84D8]();
}

uint64_t sub_1D5AADE90()
{
  return MEMORY[0x1E0CF84E0]();
}

uint64_t sub_1D5AADE9C()
{
  return MEMORY[0x1E0CF84E8]();
}

uint64_t sub_1D5AADEA8()
{
  return MEMORY[0x1E0CF8518]();
}

uint64_t sub_1D5AADEB4()
{
  return MEMORY[0x1E0CF8520]();
}

uint64_t sub_1D5AADEC0()
{
  return MEMORY[0x1E0CF8528]();
}

uint64_t sub_1D5AADECC()
{
  return MEMORY[0x1E0CF8530]();
}

uint64_t sub_1D5AADED8()
{
  return MEMORY[0x1E0CF8538]();
}

uint64_t sub_1D5AADEE4()
{
  return MEMORY[0x1E0CF8548]();
}

uint64_t sub_1D5AADEF0()
{
  return MEMORY[0x1E0CF8568]();
}

uint64_t sub_1D5AADEFC()
{
  return MEMORY[0x1E0CF8580]();
}

uint64_t sub_1D5AADF08()
{
  return MEMORY[0x1E0CF8590]();
}

uint64_t sub_1D5AADF14()
{
  return MEMORY[0x1E0CF85A8]();
}

uint64_t sub_1D5AADF20()
{
  return MEMORY[0x1E0CF85D0]();
}

uint64_t sub_1D5AADF2C()
{
  return MEMORY[0x1E0CF85F8]();
}

uint64_t sub_1D5AADF38()
{
  return MEMORY[0x1E0CF8600]();
}

uint64_t sub_1D5AADF44()
{
  return MEMORY[0x1E0CF8610]();
}

uint64_t sub_1D5AADF50()
{
  return MEMORY[0x1E0CF8620]();
}

uint64_t sub_1D5AADF5C()
{
  return MEMORY[0x1E0CF8630]();
}

uint64_t sub_1D5AADF68()
{
  return MEMORY[0x1E0CF8638]();
}

uint64_t sub_1D5AADF74()
{
  return MEMORY[0x1E0CF8650]();
}

uint64_t sub_1D5AADF80()
{
  return MEMORY[0x1E0CF8658]();
}

uint64_t sub_1D5AADF8C()
{
  return MEMORY[0x1E0CF8668]();
}

uint64_t sub_1D5AADF98()
{
  return MEMORY[0x1E0CF8670]();
}

uint64_t sub_1D5AADFA4()
{
  return MEMORY[0x1E0CF86A0]();
}

uint64_t sub_1D5AADFB0()
{
  return MEMORY[0x1E0CF86C0]();
}

uint64_t sub_1D5AADFBC()
{
  return MEMORY[0x1E0DB2FE8]();
}

uint64_t sub_1D5AADFC8()
{
  return MEMORY[0x1E0DB2FF0]();
}

uint64_t sub_1D5AADFD4()
{
  return MEMORY[0x1E0DB3010]();
}

uint64_t sub_1D5AADFE0()
{
  return MEMORY[0x1E0DB3018]();
}

uint64_t sub_1D5AADFEC()
{
  return MEMORY[0x1E0DB3020]();
}

uint64_t sub_1D5AADFF8()
{
  return MEMORY[0x1E0DB3030]();
}

uint64_t sub_1D5AAE004()
{
  return MEMORY[0x1E0DB3038]();
}

uint64_t sub_1D5AAE010()
{
  return MEMORY[0x1E0DB3050]();
}

uint64_t sub_1D5AAE01C()
{
  return MEMORY[0x1E0DB3060]();
}

uint64_t sub_1D5AAE028()
{
  return MEMORY[0x1E0DB3068]();
}

uint64_t sub_1D5AAE034()
{
  return MEMORY[0x1E0DB3070]();
}

uint64_t sub_1D5AAE040()
{
  return MEMORY[0x1E0DB35A0]();
}

uint64_t sub_1D5AAE04C()
{
  return MEMORY[0x1E0DB35D0]();
}

uint64_t sub_1D5AAE058()
{
  return MEMORY[0x1E0DB35E8]();
}

uint64_t sub_1D5AAE064()
{
  return MEMORY[0x1E0DB35F0]();
}

uint64_t sub_1D5AAE070()
{
  return MEMORY[0x1E0DB36F0]();
}

uint64_t sub_1D5AAE07C()
{
  return MEMORY[0x1E0DB38A8]();
}

uint64_t sub_1D5AAE088()
{
  return MEMORY[0x1E0DB38B0]();
}

uint64_t sub_1D5AAE094()
{
  return MEMORY[0x1E0DB38B8]();
}

uint64_t sub_1D5AAE0A0()
{
  return MEMORY[0x1E0DB3AB0]();
}

uint64_t sub_1D5AAE0AC()
{
  return MEMORY[0x1E0DB3AC0]();
}

uint64_t sub_1D5AAE0B8()
{
  return MEMORY[0x1E0DB3AC8]();
}

uint64_t sub_1D5AAE0C4()
{
  return MEMORY[0x1E0DB3AD0]();
}

uint64_t sub_1D5AAE0D0()
{
  return MEMORY[0x1E0DB3AE0]();
}

uint64_t sub_1D5AAE0DC()
{
  return MEMORY[0x1E0DB3AE8]();
}

uint64_t sub_1D5AAE0E8()
{
  return MEMORY[0x1E0DB3AF0]();
}

uint64_t sub_1D5AAE0F4()
{
  return MEMORY[0x1E0DB3B00]();
}

uint64_t sub_1D5AAE100()
{
  return MEMORY[0x1E0DB3BE0]();
}

uint64_t sub_1D5AAE10C()
{
  return MEMORY[0x1E0DB3BE8]();
}

uint64_t sub_1D5AAE118()
{
  return MEMORY[0x1E0DB3EB0]();
}

uint64_t sub_1D5AAE124()
{
  return MEMORY[0x1E0DB3EB8]();
}

uint64_t sub_1D5AAE130()
{
  return MEMORY[0x1E0DB3EC0]();
}

uint64_t sub_1D5AAE13C()
{
  return MEMORY[0x1E0DB3EC8]();
}

uint64_t sub_1D5AAE148()
{
  return MEMORY[0x1E0DB3ED0]();
}

uint64_t sub_1D5AAE154()
{
  return MEMORY[0x1E0DB3ED8]();
}

uint64_t sub_1D5AAE160()
{
  return MEMORY[0x1E0DB3EE0]();
}

uint64_t sub_1D5AAE16C()
{
  return MEMORY[0x1E0DB3EE8]();
}

uint64_t sub_1D5AAE178()
{
  return MEMORY[0x1E0DB3EF0]();
}

uint64_t sub_1D5AAE184()
{
  return MEMORY[0x1E0DB65F0]();
}

uint64_t sub_1D5AAE190()
{
  return MEMORY[0x1E0DB3F20]();
}

uint64_t sub_1D5AAE19C()
{
  return MEMORY[0x1E0DB3F28]();
}

uint64_t sub_1D5AAE1A8()
{
  return MEMORY[0x1E0DB6608]();
}

uint64_t sub_1D5AAE1B4()
{
  return MEMORY[0x1E0DB3F48]();
}

uint64_t sub_1D5AAE1C0()
{
  return MEMORY[0x1E0DB3F58]();
}

uint64_t sub_1D5AAE1CC()
{
  return MEMORY[0x1E0DB3FB0]();
}

uint64_t sub_1D5AAE1D8()
{
  return MEMORY[0x1E0DB3FC0]();
}

uint64_t sub_1D5AAE1E4()
{
  return MEMORY[0x1E0DB3FF8]();
}

uint64_t sub_1D5AAE1F0()
{
  return MEMORY[0x1E0DB4100]();
}

uint64_t sub_1D5AAE1FC()
{
  return MEMORY[0x1E0DB4120]();
}

uint64_t sub_1D5AAE208()
{
  return MEMORY[0x1E0DB43A8]();
}

uint64_t sub_1D5AAE214()
{
  return MEMORY[0x1E0DB43B0]();
}

uint64_t sub_1D5AAE220()
{
  return MEMORY[0x1E0DB43B8]();
}

uint64_t sub_1D5AAE22C()
{
  return MEMORY[0x1E0DB4418]();
}

uint64_t sub_1D5AAE238()
{
  return MEMORY[0x1E0DB45C8]();
}

uint64_t sub_1D5AAE244()
{
  return MEMORY[0x1E0DB45D0]();
}

uint64_t sub_1D5AAE250()
{
  return MEMORY[0x1E0DB4A20]();
}

uint64_t sub_1D5AAE25C()
{
  return MEMORY[0x1E0DB4AB8]();
}

uint64_t sub_1D5AAE268()
{
  return MEMORY[0x1E0DB4AC8]();
}

uint64_t sub_1D5AAE274()
{
  return MEMORY[0x1E0DB4AD0]();
}

uint64_t sub_1D5AAE280()
{
  return MEMORY[0x1E0DB4AD8]();
}

uint64_t sub_1D5AAE28C()
{
  return MEMORY[0x1E0DB4AE0]();
}

uint64_t sub_1D5AAE298()
{
  return MEMORY[0x1E0DB4AE8]();
}

uint64_t sub_1D5AAE2A4()
{
  return MEMORY[0x1E0DB4C10]();
}

uint64_t sub_1D5AAE2B0()
{
  return MEMORY[0x1E0DB4C60]();
}

uint64_t sub_1D5AAE2BC()
{
  return MEMORY[0x1E0DB4CB0]();
}

uint64_t sub_1D5AAE2C8()
{
  return MEMORY[0x1E0DB4CC0]();
}

uint64_t sub_1D5AAE2D4()
{
  return MEMORY[0x1E0DB4D08]();
}

uint64_t sub_1D5AAE2E0()
{
  return MEMORY[0x1E0DB4D88]();
}

uint64_t sub_1D5AAE2EC()
{
  return MEMORY[0x1E0DB4DC8]();
}

uint64_t sub_1D5AAE2F8()
{
  return MEMORY[0x1E0DB4E60]();
}

uint64_t sub_1D5AAE304()
{
  return MEMORY[0x1E0DB4E88]();
}

uint64_t sub_1D5AAE310()
{
  return MEMORY[0x1E0DB5038]();
}

uint64_t sub_1D5AAE31C()
{
  return MEMORY[0x1E0DB50E8]();
}

uint64_t sub_1D5AAE328()
{
  return MEMORY[0x1E0DF2078]();
}

uint64_t sub_1D5AAE334()
{
  return MEMORY[0x1E0DF2080]();
}

uint64_t sub_1D5AAE340()
{
  return MEMORY[0x1E0DB6830]();
}

uint64_t sub_1D5AAE34C()
{
  return MEMORY[0x1E0DB6EB0]();
}

uint64_t sub_1D5AAE358()
{
  return MEMORY[0x1E0DB77C8]();
}

uint64_t sub_1D5AAE364()
{
  return MEMORY[0x1E0DB77D0]();
}

uint64_t sub_1D5AAE370()
{
  return MEMORY[0x1E0DB7AB8]();
}

uint64_t sub_1D5AAE37C()
{
  return MEMORY[0x1E0DB9680]();
}

uint64_t sub_1D5AAE388()
{
  return MEMORY[0x1E0DB9F30]();
}

uint64_t sub_1D5AAE394()
{
  return MEMORY[0x1E0DBC830]();
}

uint64_t sub_1D5AAE3A0()
{
  return MEMORY[0x1E0DBC838]();
}

uint64_t sub_1D5AAE3AC()
{
  return MEMORY[0x1E0D527A0]();
}

uint64_t sub_1D5AAE3B8()
{
  return MEMORY[0x1E0D527C0]();
}

uint64_t sub_1D5AAE3C4()
{
  return MEMORY[0x1E0D528B0]();
}

uint64_t sub_1D5AAE3D0()
{
  return MEMORY[0x1E0D528B8]();
}

uint64_t sub_1D5AAE3DC()
{
  return MEMORY[0x1E0D528C0]();
}

uint64_t sub_1D5AAE3E8()
{
  return MEMORY[0x1E0D528C8]();
}

uint64_t sub_1D5AAE3F4()
{
  return MEMORY[0x1E0D53718]();
}

uint64_t sub_1D5AAE400()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1D5AAE40C()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1D5AAE418()
{
  return MEMORY[0x1E0DEF580]();
}

uint64_t sub_1D5AAE424()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1D5AAE430()
{
  return MEMORY[0x1E0DEF698]();
}

uint64_t sub_1D5AAE43C()
{
  return MEMORY[0x1E0DEF6B8]();
}

uint64_t sub_1D5AAE448()
{
  return MEMORY[0x1E0DEF758]();
}

uint64_t sub_1D5AAE454()
{
  return MEMORY[0x1E0D5A960]();
}

uint64_t sub_1D5AAE460()
{
  return MEMORY[0x1E0D5A968]();
}

uint64_t sub_1D5AAE46C()
{
  return MEMORY[0x1E0D5A980]();
}

uint64_t sub_1D5AAE478()
{
  return MEMORY[0x1E0D5A988]();
}

uint64_t sub_1D5AAE484()
{
  return MEMORY[0x1E0D5A9B0]();
}

uint64_t sub_1D5AAE490()
{
  return MEMORY[0x1E0D5ACB8]();
}

uint64_t sub_1D5AAE49C()
{
  return MEMORY[0x1E0D5ACC0]();
}

uint64_t sub_1D5AAE4A8()
{
  return MEMORY[0x1E0D5ACC8]();
}

uint64_t sub_1D5AAE4B4()
{
  return MEMORY[0x1E0D5AF10]();
}

uint64_t sub_1D5AAE4C0()
{
  return MEMORY[0x1E0D5AF40]();
}

uint64_t sub_1D5AAE4CC()
{
  return MEMORY[0x1E0D5B148]();
}

uint64_t sub_1D5AAE4D8()
{
  return MEMORY[0x1E0D5B150]();
}

uint64_t sub_1D5AAE4E4()
{
  return MEMORY[0x1E0D5B4A0]();
}

uint64_t sub_1D5AAE4F0()
{
  return MEMORY[0x1E0D5B4A8]();
}

uint64_t sub_1D5AAE4FC()
{
  return MEMORY[0x1E0D5B4B0]();
}

uint64_t sub_1D5AAE508()
{
  return MEMORY[0x1E0D5B528]();
}

uint64_t sub_1D5AAE514()
{
  return MEMORY[0x1E0D5B608]();
}

uint64_t sub_1D5AAE520()
{
  return MEMORY[0x1E0D5BAD0]();
}

uint64_t sub_1D5AAE52C()
{
  return MEMORY[0x1E0D5BB28]();
}

uint64_t sub_1D5AAE538()
{
  return MEMORY[0x1E0D5BB30]();
}

uint64_t sub_1D5AAE544()
{
  return MEMORY[0x1E0D5BB38]();
}

uint64_t sub_1D5AAE550()
{
  return MEMORY[0x1E0D5BB40]();
}

uint64_t sub_1D5AAE55C()
{
  return MEMORY[0x1E0D5C460]();
}

uint64_t sub_1D5AAE568()
{
  return MEMORY[0x1E0D5C498]();
}

uint64_t sub_1D5AAE574()
{
  return MEMORY[0x1E0D5C540]();
}

uint64_t sub_1D5AAE580()
{
  return MEMORY[0x1E0D5CB38]();
}

uint64_t sub_1D5AAE58C()
{
  return MEMORY[0x1E0D5D428]();
}

uint64_t sub_1D5AAE598()
{
  return MEMORY[0x1E0D5D448]();
}

uint64_t sub_1D5AAE5A4()
{
  return MEMORY[0x1E0D5D458]();
}

uint64_t sub_1D5AAE5B0()
{
  return MEMORY[0x1E0D5D838]();
}

uint64_t sub_1D5AAE5BC()
{
  return MEMORY[0x1E0D5D848]();
}

uint64_t sub_1D5AAE5C8()
{
  return MEMORY[0x1E0D5D8D8]();
}

uint64_t sub_1D5AAE5D4()
{
  return MEMORY[0x1E0D5D8E0]();
}

uint64_t sub_1D5AAE5E0()
{
  return MEMORY[0x1E0D5D930]();
}

uint64_t sub_1D5AAE5EC()
{
  return MEMORY[0x1E0D5DE00]();
}

uint64_t sub_1D5AAE5F8()
{
  return MEMORY[0x1E0D5DF18]();
}

uint64_t sub_1D5AAE604()
{
  return MEMORY[0x1E0D5DF40]();
}

uint64_t sub_1D5AAE610()
{
  return MEMORY[0x1E0D5E140]();
}

uint64_t sub_1D5AAE61C()
{
  return MEMORY[0x1E0D5E148]();
}

uint64_t sub_1D5AAE628()
{
  return MEMORY[0x1E0D5E160]();
}

uint64_t sub_1D5AAE634()
{
  return MEMORY[0x1E0D5E3A8]();
}

uint64_t sub_1D5AAE640()
{
  return MEMORY[0x1E0D5E510]();
}

uint64_t sub_1D5AAE64C()
{
  return MEMORY[0x1E0D5E518]();
}

uint64_t sub_1D5AAE658()
{
  return MEMORY[0x1E0D5EB20]();
}

uint64_t sub_1D5AAE664()
{
  return MEMORY[0x1E0D5EB28]();
}

uint64_t sub_1D5AAE670()
{
  return MEMORY[0x1E0D5EB40]();
}

uint64_t sub_1D5AAE67C()
{
  return MEMORY[0x1E0D5EB50]();
}

uint64_t sub_1D5AAE688()
{
  return MEMORY[0x1E0D5EB58]();
}

uint64_t sub_1D5AAE694()
{
  return MEMORY[0x1E0D5EB60]();
}

uint64_t sub_1D5AAE6A0()
{
  return MEMORY[0x1E0D5EC70]();
}

uint64_t sub_1D5AAE6AC()
{
  return MEMORY[0x1E0D5EC80]();
}

uint64_t sub_1D5AAE6B8()
{
  return MEMORY[0x1E0D5ED80]();
}

uint64_t sub_1D5AAE6C4()
{
  return MEMORY[0x1E0D5ED88]();
}

uint64_t sub_1D5AAE6D0()
{
  return MEMORY[0x1E0D5F328]();
}

uint64_t sub_1D5AAE6DC()
{
  return MEMORY[0x1E0D5F330]();
}

uint64_t sub_1D5AAE6E8()
{
  return MEMORY[0x1E0D5F7D8]();
}

uint64_t sub_1D5AAE6F4()
{
  return MEMORY[0x1E0D5F980]();
}

uint64_t sub_1D5AAE700()
{
  return MEMORY[0x1E0D5F988]();
}

uint64_t sub_1D5AAE70C()
{
  return MEMORY[0x1E0D5FCE8]();
}

uint64_t sub_1D5AAE718()
{
  return MEMORY[0x1E0D5FCF0]();
}

uint64_t sub_1D5AAE724()
{
  return MEMORY[0x1E0D5FE60]();
}

uint64_t sub_1D5AAE730()
{
  return MEMORY[0x1E0D5FE68]();
}

uint64_t sub_1D5AAE73C()
{
  return MEMORY[0x1E0D60690]();
}

uint64_t sub_1D5AAE748()
{
  return MEMORY[0x1E0CA92A8]();
}

uint64_t sub_1D5AAE754()
{
  return MEMORY[0x1E0CA92B0]();
}

uint64_t sub_1D5AAE760()
{
  return MEMORY[0x1E0CA92C8]();
}

uint64_t sub_1D5AAE76C()
{
  return MEMORY[0x1E0CA92F8]();
}

uint64_t sub_1D5AAE778()
{
  return MEMORY[0x1E0CA9940]();
}

uint64_t sub_1D5AAE784()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1D5AAE790()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1D5AAE79C()
{
  return MEMORY[0x1E0DE9E38]();
}

uint64_t sub_1D5AAE7A8()
{
  return MEMORY[0x1E0DEA048]();
}

uint64_t sub_1D5AAE7B4()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1D5AAE7C0()
{
  return MEMORY[0x1E0DF1FA0]();
}

uint64_t sub_1D5AAE7CC()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1D5AAE7D8()
{
  return MEMORY[0x1E0DEA3C0]();
}

uint64_t sub_1D5AAE7E4()
{
  return MEMORY[0x1E0DEA3C8]();
}

uint64_t sub_1D5AAE7F0()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1D5AAE7FC()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1D5AAE808()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t sub_1D5AAE814()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_1D5AAE820()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1D5AAE82C()
{
  return MEMORY[0x1E0CB1988]();
}

uint64_t sub_1D5AAE838()
{
  return MEMORY[0x1E0CB19E8]();
}

uint64_t sub_1D5AAE844()
{
  return MEMORY[0x1E0CB1A18]();
}

uint64_t sub_1D5AAE850()
{
  return MEMORY[0x1E0DB5198]();
}

uint64_t sub_1D5AAE85C()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_1D5AAE868()
{
  return MEMORY[0x1E0DEA6F8]();
}

uint64_t sub_1D5AAE874()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1D5AAE880()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_1D5AAE88C()
{
  return MEMORY[0x1E0DEA7D0]();
}

uint64_t sub_1D5AAE898()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1D5AAE8A4()
{
  return MEMORY[0x1E0DEA858]();
}

uint64_t sub_1D5AAE8B0()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t sub_1D5AAE8BC()
{
  return MEMORY[0x1E0DEA878]();
}

uint64_t sub_1D5AAE8C8()
{
  return MEMORY[0x1E0DEA880]();
}

uint64_t sub_1D5AAE8D4()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t sub_1D5AAE8E0()
{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t sub_1D5AAE8EC()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1D5AAE8F8()
{
  return MEMORY[0x1E0DB5960]();
}

uint64_t sub_1D5AAE904()
{
  return MEMORY[0x1E0DB5968]();
}

uint64_t sub_1D5AAE910()
{
  return MEMORY[0x1E0DB5970]();
}

uint64_t sub_1D5AAE91C()
{
  return MEMORY[0x1E0DEACA0]();
}

uint64_t sub_1D5AAE928()
{
  return MEMORY[0x1E0DEAD18]();
}

uint64_t sub_1D5AAE934()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1D5AAE940()
{
  return MEMORY[0x1E0CB1AE0]();
}

uint64_t sub_1D5AAE94C()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1D5AAE958()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_1D5AAE964()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1D5AAE970()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_1D5AAE97C()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_1D5AAE988()
{
  return MEMORY[0x1E0DEB160]();
}

uint64_t sub_1D5AAE994()
{
  return MEMORY[0x1E0CB1BD8]();
}

uint64_t sub_1D5AAE9A0()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_1D5AAE9AC()
{
  return MEMORY[0x1E0CB1C10]();
}

uint64_t sub_1D5AAE9B8()
{
  return MEMORY[0x1E0CB1C18]();
}

uint64_t sub_1D5AAE9C4()
{
  return MEMORY[0x1E0CB1C20]();
}

uint64_t sub_1D5AAE9D0()
{
  return MEMORY[0x1E0CB1C28]();
}

uint64_t sub_1D5AAE9DC()
{
  return MEMORY[0x1E0DEB408]();
}

uint64_t sub_1D5AAE9E8()
{
  return MEMORY[0x1E0DEB848]();
}

uint64_t sub_1D5AAE9F4()
{
  return MEMORY[0x1E0CB1D20]();
}

uint64_t sub_1D5AAEA00()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1D5AAEA0C()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1D5AAEA18()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_1D5AAEA24()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1D5AAEA30()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_1D5AAEA3C()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_1D5AAEA48()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_1D5AAEA54()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1D5AAEA60()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_1D5AAEA6C()
{
  return MEMORY[0x1E0DC2D48]();
}

uint64_t sub_1D5AAEA78()
{
  return MEMORY[0x1E0DC2D50]();
}

uint64_t sub_1D5AAEA84()
{
  return MEMORY[0x1E0DBCF08]();
}

uint64_t sub_1D5AAEA90()
{
  return MEMORY[0x1E0CB20E0]();
}

uint64_t sub_1D5AAEA9C()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_1D5AAEAA8()
{
  return MEMORY[0x1E0DF22B8]();
}

uint64_t sub_1D5AAEAB4()
{
  return MEMORY[0x1E0DF22E0]();
}

uint64_t sub_1D5AAEAC0()
{
  return MEMORY[0x1E0CF86E0]();
}

uint64_t sub_1D5AAEACC()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1D5AAEAD8()
{
  return MEMORY[0x1E0DEBB68]();
}

uint64_t sub_1D5AAEAE4()
{
  return MEMORY[0x1E0CB2410]();
}

uint64_t sub_1D5AAEAF0()
{
  return MEMORY[0x1E0CB2480]();
}

uint64_t sub_1D5AAEAFC()
{
  return MEMORY[0x1E0CB24B8]();
}

uint64_t sub_1D5AAEB08()
{
  return MEMORY[0x1E0CB2538]();
}

uint64_t sub_1D5AAEB14()
{
  return MEMORY[0x1E0CB2588]();
}

uint64_t sub_1D5AAEB20()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1D5AAEB2C()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1D5AAEB38()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1D5AAEB44()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_1D5AAEB50()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_1D5AAEB5C()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1D5AAEB68()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1D5AAEB74()
{
  return MEMORY[0x1E0DEC268]();
}

uint64_t sub_1D5AAEB80()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1D5AAEB8C()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1D5AAEB98()
{
  return MEMORY[0x1E0DEC518]();
}

uint64_t sub_1D5AAEBA4()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1D5AAEBB0()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1D5AAEBBC()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1D5AAEBC8()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_1D5AAEBD4()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1D5AAEBE0()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1D5AAEBEC()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1D5AAEBF8()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1D5AAEC04()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1D5AAEC10()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1D5AAEC1C()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1D5AAEC28()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1D5AAEC34()
{
  return MEMORY[0x1E0DECD58]();
}

uint64_t sub_1D5AAEC40()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_1D5AAEC4C()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1D5AAEC58()
{
  return MEMORY[0x1E0DECF58]();
}

uint64_t sub_1D5AAEC64()
{
  return MEMORY[0x1E0DECF60]();
}

uint64_t sub_1D5AAEC70()
{
  return MEMORY[0x1E0DECF68]();
}

uint64_t sub_1D5AAEC7C()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_1D5AAEC88()
{
  return MEMORY[0x1E0DECF98]();
}

uint64_t sub_1D5AAEC94()
{
  return MEMORY[0x1E0DECFA0]();
}

uint64_t sub_1D5AAECA0()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_1D5AAECAC()
{
  return MEMORY[0x1E0DECFC8]();
}

uint64_t sub_1D5AAECB8()
{
  return MEMORY[0x1E0DECFD0]();
}

uint64_t sub_1D5AAECC4()
{
  return MEMORY[0x1E0DECFD8]();
}

uint64_t sub_1D5AAECD0()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1D5AAECDC()
{
  return MEMORY[0x1E0DED008]();
}

uint64_t sub_1D5AAECE8()
{
  return MEMORY[0x1E0DED010]();
}

uint64_t sub_1D5AAECF4()
{
  return MEMORY[0x1E0DED090]();
}

uint64_t sub_1D5AAED00()
{
  return MEMORY[0x1E0DED098]();
}

uint64_t sub_1D5AAED0C()
{
  return MEMORY[0x1E0DED0A0]();
}

uint64_t sub_1D5AAED18()
{
  return MEMORY[0x1E0DED0C0]();
}

uint64_t sub_1D5AAED24()
{
  return MEMORY[0x1E0DED0C8]();
}

uint64_t sub_1D5AAED30()
{
  return MEMORY[0x1E0DED0D0]();
}

uint64_t sub_1D5AAED3C()
{
  return MEMORY[0x1E0DED0F0]();
}

uint64_t sub_1D5AAED48()
{
  return MEMORY[0x1E0DED0F8]();
}

uint64_t sub_1D5AAED54()
{
  return MEMORY[0x1E0DED100]();
}

uint64_t sub_1D5AAED60()
{
  return MEMORY[0x1E0DED108]();
}

uint64_t sub_1D5AAED6C()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1D5AAED78()
{
  return MEMORY[0x1E0DED138]();
}

uint64_t sub_1D5AAED84()
{
  return MEMORY[0x1E0DED140]();
}

uint64_t sub_1D5AAED90()
{
  return MEMORY[0x1E0DED170]();
}

uint64_t sub_1D5AAED9C()
{
  return MEMORY[0x1E0DED1B0]();
}

uint64_t sub_1D5AAEDA8()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1D5AAEDB4()
{
  return MEMORY[0x1E0DED1E8]();
}

uint64_t sub_1D5AAEDC0()
{
  return MEMORY[0x1E0DED4A0]();
}

uint64_t sub_1D5AAEDCC()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t sub_1D5AAEDD8()
{
  return MEMORY[0x1E0DED5F8]();
}

uint64_t sub_1D5AAEDE4()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1D5AAEDF0()
{
  return MEMORY[0x1E0DED670]();
}

uint64_t sub_1D5AAEDFC()
{
  return MEMORY[0x1E0DED718]();
}

uint64_t sub_1D5AAEE08()
{
  return MEMORY[0x1E0DED998]();
}

uint64_t sub_1D5AAEE14()
{
  return MEMORY[0x1E0DED9C8]();
}

uint64_t sub_1D5AAEE20()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1D5AAEE2C()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1D5AAEE38()
{
  return MEMORY[0x1E0CB2650]();
}

uint64_t sub_1D5AAEE44()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1D5AAEE50()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1D5AAEE5C()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1D5AAEE68()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1D5AAEE74()
{
  return MEMORY[0x1E0DEDEF0]();
}

uint64_t sub_1D5AAEE80()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1D5AAEE8C()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1D5AAEE98()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1D5AAEEA4()
{
  return MEMORY[0x1E0DEE230]();
}

uint64_t sub_1D5AAEEB0()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1D5AAEEBC()
{
  return MEMORY[0x1E0DEE260]();
}

uint64_t sub_1D5AAEEC8()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1D5AAEED4()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1D5AAEEE0()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t FCDefaultsReadEndpointEnvironment()
{
  return MEMORY[0x1E0D583F8]();
}

uint64_t NFSeedBuild()
{
  return MEMORY[0x1E0D60AB8]();
}

uint64_t NFStoreDemoMode()
{
  return MEMORY[0x1E0D60AC0]();
}

uint64_t NSSNTPBAnalyticsDeviceModelValue()
{
  return MEMORY[0x1E0D614B8]();
}

uint64_t NSSNTPBAnalyticsOsVersionValue()
{
  return MEMORY[0x1E0D614C0]();
}

uint64_t NewsCoreUserDefaults()
{
  return MEMORY[0x1E0D588F0]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

double __exp10(double a1)
{
  double result;

  MEMORY[0x1E0C80AC8](a1);
  return result;
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

void exit(int a1)
{
  MEMORY[0x1E0C83278](*(_QWORD *)&a1);
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x1E0DEEC60]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x1E0DEED08]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

